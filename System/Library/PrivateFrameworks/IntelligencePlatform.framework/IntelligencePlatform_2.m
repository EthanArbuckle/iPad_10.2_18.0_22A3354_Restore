float sub_1AE5D6078@<S0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, float *a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  float v39;
  uint64_t v40;
  float v41;
  uint64_t v42;
  uint64_t v43;
  float result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a1;
  v48 = a2;
  sub_1AE4F7630();
  v9 = sub_1AE9267D8();
  v10 = MEMORY[0x1E0DEE9E8];
  v49 = MEMORY[0x1E0DEE9E8];
  v11 = *(_QWORD *)(v9 + 16);
  if (v11)
  {
    v45 = (uint64_t)a5;
    v46 = v5;
    swift_bridgeObjectRetain();
    v12 = (uint64_t *)(v9 + 56);
    do
    {
      v14 = *(v12 - 3);
      v13 = *(v12 - 2);
      v15 = *(v12 - 1);
      v16 = *v12;
      swift_bridgeObjectRetain();
      v17 = MEMORY[0x1AF4530E8](v14, v13, v15, v16);
      sub_1AE555EFC((uint64_t)&v47, v17, v18, v18, v19, v20, v21, v22, v45, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 += 4;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease_n();
    v23 = v49;
    a5 = (float *)v45;
    v10 = MEMORY[0x1E0DEE9E8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0DEE9E8];
  }
  v47 = a3;
  v48 = a4;
  v24 = sub_1AE9267D8();
  v49 = v10;
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    swift_bridgeObjectRetain();
    v26 = (uint64_t *)(v24 + 56);
    do
    {
      v28 = *(v26 - 3);
      v27 = *(v26 - 2);
      v29 = *(v26 - 1);
      v30 = *v26;
      swift_bridgeObjectRetain();
      v31 = MEMORY[0x1AF4530E8](v28, v27, v29, v30);
      sub_1AE555EFC((uint64_t)&v47, v31, v32, v32, v33, v34, v35, v36, v45, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 += 4;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease_n();
    v37 = v49;
  }
  else
  {
    swift_bridgeObjectRelease();
    v37 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRetain();
  v38 = *(_QWORD *)(sub_1AE5D81D4(v37, v23) + 16);
  swift_release();
  v39 = (float)v38;
  swift_bridgeObjectRetain();
  v40 = *(_QWORD *)(sub_1AE64144C(v37, v23) + 16);
  swift_bridgeObjectRelease();
  v41 = (float)v40;
  v42 = sub_1AE64144C(v23, v37);
  swift_bridgeObjectRelease();
  v43 = *(_QWORD *)(v42 + 16);
  swift_bridgeObjectRelease();
  result = (float)((float)((float)(v39 / (float)((float)(v39 + v41) + 0.001))
                         * (float)(v39 / (float)((float)(v39 + (float)v43) + 0.001)))
                 + (float)((float)(v39 / (float)((float)(v39 + v41) + 0.001))
                         * (float)(v39 / (float)((float)(v39 + (float)v43) + 0.001))))
         / (float)((float)((float)(v39 / (float)((float)(v39 + v41) + 0.001))
                         + (float)(v39 / (float)((float)(v39 + (float)v43) + 0.001)))
                 + 0.001);
  *a5 = result;
  return result;
}

unint64_t sub_1AE5D6324()
{
  unint64_t result;

  result = qword_1ED318F40;
  if (!qword_1ED318F40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED318F40);
  }
  return result;
}

unint64_t sub_1AE5D6360()
{
  unint64_t result;

  result = qword_1ED30FAC8;
  if (!qword_1ED30FAC8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SubFeatureIndex, &type metadata for SubFeatureIndex);
    atomic_store(result, (unint64_t *)&qword_1ED30FAC8);
  }
  return result;
}

void sub_1AE5D639C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;

  v3 = a1[1];
  v4 = sub_1AE926D0C();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_128;
    if (v3)
      sub_1AE5D70B4(0, v3, 1, a1);
    return;
  }
  v5 = v4;
  sub_1AE519770(v3 / 2);
  v96 = v3;
  v97 = v6;
  v99 = v7;
  v91 = a1;
  if (v3 <= 0)
    goto LABEL_92;
  v92 = v5;
  v8 = 0;
  v90 = *a1 - 8;
  v9 = MEMORY[0x1E0DEE9D8];
  v98 = *a1;
  while (1)
  {
    v10 = v8++;
    v95 = v10;
    if (v8 < v3)
    {
      v93 = v9;
      swift_retain();
      swift_retain();
      v11 = sub_1AE925F20();
      v12 = sub_1AE925F20();
      swift_release();
      swift_release();
      v8 = v10 + 2;
      if (v10 + 2 < v3)
      {
        v13 = v10;
        while (1)
        {
          swift_retain();
          swift_retain();
          v14 = sub_1AE925F20();
          v15 = sub_1AE925F20();
          swift_release();
          swift_release();
          if (v12 < v11 == v15 >= v14)
            break;
          v16 = v13 + 3;
          ++v13;
          v3 = v96;
          if (v16 >= v96)
          {
            v8 = v96;
            goto LABEL_11;
          }
        }
        v8 = v13 + 2;
        v3 = v96;
LABEL_11:
        v10 = v95;
      }
      v9 = v93;
      if (v12 < v11)
      {
        if (v8 < v10)
          goto LABEL_129;
        if (v10 < v8)
        {
          v17 = (uint64_t *)(v90 + 8 * v8);
          v18 = v8;
          v19 = v10;
          v20 = (uint64_t *)(v98 + 8 * v10);
          do
          {
            if (v19 != --v18)
            {
              if (!v98)
                goto LABEL_135;
              v21 = *v20;
              *v20 = *v17;
              *v17 = v21;
            }
            ++v19;
            --v17;
            ++v20;
          }
          while (v19 < v18);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v10))
        goto LABEL_127;
      if (v8 - v10 < v92)
      {
        if (__OFADD__(v10, v92))
          goto LABEL_130;
        if (v10 + v92 >= v3)
          v22 = v3;
        else
          v22 = v10 + v92;
        if (v22 < v10)
        {
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        if (v8 != v22)
        {
          v94 = v9;
          v23 = (uint64_t *)(v90 + 8 * v8);
          do
          {
            v24 = v10;
            v25 = v23;
            do
            {
              swift_retain();
              swift_retain();
              v26 = sub_1AE925F20();
              v27 = sub_1AE925F20();
              swift_release();
              swift_release();
              if (v27 >= v26)
                break;
              if (!v98)
                goto LABEL_133;
              v28 = *v25;
              *v25 = v25[1];
              v25[1] = v28;
              --v25;
              ++v24;
            }
            while (v8 != v24);
            ++v8;
            ++v23;
            v10 = v95;
          }
          while (v8 != v22);
          v8 = v22;
          v9 = v94;
        }
      }
    }
    if (v8 < v10)
      goto LABEL_126;
    v29 = v9;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v9 = v29;
    }
    else
    {
      sub_1AE889310(0, *(_QWORD *)(v29 + 16) + 1, 1, (char *)v29);
      v9 = v81;
    }
    v31 = *(_QWORD *)(v9 + 16);
    v30 = *(_QWORD *)(v9 + 24);
    v32 = v31 + 1;
    v33 = v98;
    if (v31 >= v30 >> 1)
    {
      sub_1AE889310(v30 > 1, v31 + 1, 1, (char *)v9);
      v33 = v98;
      v9 = v82;
    }
    *(_QWORD *)(v9 + 16) = v32;
    v34 = v9 + 32;
    v35 = (uint64_t *)(v9 + 32 + 16 * v31);
    *v35 = v10;
    v35[1] = v8;
    if (v31)
      break;
    v32 = 1;
LABEL_84:
    v3 = v96;
    if (v8 >= v96)
      goto LABEL_93;
  }
  while (1)
  {
    v36 = v32 - 1;
    if (v32 >= 4)
    {
      v41 = v34 + 16 * v32;
      v42 = *(_QWORD *)(v41 - 64);
      v43 = *(_QWORD *)(v41 - 56);
      v47 = __OFSUB__(v43, v42);
      v44 = v43 - v42;
      if (v47)
        goto LABEL_111;
      v46 = *(_QWORD *)(v41 - 48);
      v45 = *(_QWORD *)(v41 - 40);
      v47 = __OFSUB__(v45, v46);
      v39 = v45 - v46;
      v40 = v47;
      if (v47)
        goto LABEL_112;
      v48 = v32 - 2;
      v49 = (uint64_t *)(v34 + 16 * (v32 - 2));
      v51 = *v49;
      v50 = v49[1];
      v47 = __OFSUB__(v50, v51);
      v52 = v50 - v51;
      if (v47)
        goto LABEL_113;
      v47 = __OFADD__(v39, v52);
      v53 = v39 + v52;
      if (v47)
        goto LABEL_115;
      if (v53 >= v44)
      {
        v71 = (uint64_t *)(v34 + 16 * v36);
        v73 = *v71;
        v72 = v71[1];
        v47 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v47)
          goto LABEL_121;
        v64 = v39 < v74;
        goto LABEL_73;
      }
    }
    else
    {
      if (v32 != 3)
      {
        v65 = *(_QWORD *)(v9 + 32);
        v66 = *(_QWORD *)(v9 + 40);
        v47 = __OFSUB__(v66, v65);
        v58 = v66 - v65;
        v59 = v47;
        goto LABEL_67;
      }
      v38 = *(_QWORD *)(v9 + 32);
      v37 = *(_QWORD *)(v9 + 40);
      v47 = __OFSUB__(v37, v38);
      v39 = v37 - v38;
      v40 = v47;
    }
    if ((v40 & 1) != 0)
      goto LABEL_114;
    v48 = v32 - 2;
    v54 = (uint64_t *)(v34 + 16 * (v32 - 2));
    v56 = *v54;
    v55 = v54[1];
    v57 = __OFSUB__(v55, v56);
    v58 = v55 - v56;
    v59 = v57;
    if (v57)
      goto LABEL_116;
    v60 = (uint64_t *)(v34 + 16 * v36);
    v62 = *v60;
    v61 = v60[1];
    v47 = __OFSUB__(v61, v62);
    v63 = v61 - v62;
    if (v47)
      goto LABEL_118;
    if (__OFADD__(v58, v63))
      goto LABEL_120;
    if (v58 + v63 >= v39)
    {
      v64 = v39 < v63;
LABEL_73:
      if (v64)
        v36 = v48;
      goto LABEL_75;
    }
LABEL_67:
    if ((v59 & 1) != 0)
      goto LABEL_117;
    v67 = (uint64_t *)(v34 + 16 * v36);
    v69 = *v67;
    v68 = v67[1];
    v47 = __OFSUB__(v68, v69);
    v70 = v68 - v69;
    if (v47)
      goto LABEL_119;
    if (v70 < v58)
      goto LABEL_84;
LABEL_75:
    v75 = v36 - 1;
    if (v36 - 1 >= v32)
    {
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    if (!v33)
      goto LABEL_134;
    v76 = v9;
    v3 = v34 + 16 * v75;
    v77 = *(_QWORD *)v3;
    v78 = (_QWORD *)(v34 + 16 * v36);
    v79 = v78[1];
    sub_1AE5D725C((_QWORD *)(v33 + 8 * *(_QWORD *)v3), v33 + 8 * *v78, v33 + 8 * v79, v97);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_108;
    if (v36 > *(_QWORD *)(v76 + 16))
      goto LABEL_109;
    *(_QWORD *)v3 = v77;
    *(_QWORD *)(v34 + 16 * v75 + 8) = v79;
    v80 = *(_QWORD *)(v76 + 16);
    if (v36 >= v80)
      goto LABEL_110;
    v32 = v80 - 1;
    memmove((void *)(v34 + 16 * v36), v78 + 2, 16 * (v80 - 1 - v36));
    v9 = v76;
    *(_QWORD *)(v76 + 16) = v80 - 1;
    v33 = v98;
    if (v80 <= 2)
      goto LABEL_84;
  }
LABEL_90:
  swift_bridgeObjectRelease();
  if (v96 >= -1)
    goto LABEL_105;
  __break(1u);
LABEL_92:
  v9 = MEMORY[0x1E0DEE9D8];
  v32 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_93:
  if (v32 >= 2)
  {
    v83 = *v91;
    while (1)
    {
      v84 = v32 - 2;
      if (v32 < 2)
        break;
      if (!v83)
        goto LABEL_136;
      v85 = v9;
      v3 = *(_QWORD *)(v9 + 32 + 16 * v84);
      v86 = *(_QWORD *)(v9 + 32 + 16 * (v32 - 1) + 8);
      sub_1AE5D725C((_QWORD *)(v83 + 8 * v3), v83 + 8 * *(_QWORD *)(v9 + 32 + 16 * (v32 - 1)), v83 + 8 * v86, v97);
      if (v1)
        goto LABEL_90;
      if (v86 < v3)
        goto LABEL_123;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE8893F4();
        v85 = v89;
      }
      if (v84 >= *(_QWORD *)(v85 + 16))
        goto LABEL_124;
      v87 = (uint64_t *)(v85 + 32 + 16 * v84);
      *v87 = v3;
      v87[1] = v86;
      v88 = *(_QWORD *)(v85 + 16);
      if (v32 > v88)
        goto LABEL_125;
      memmove((void *)(v85 + 32 + 16 * (v32 - 1)), (const void *)(v85 + 32 + 16 * v32), 16 * (v88 - v32));
      v9 = v85;
      *(_QWORD *)(v85 + 16) = v88 - 1;
      v32 = v88 - 1;
      v3 = v96;
      if (v88 <= 2)
        goto LABEL_104;
    }
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
LABEL_104:
  swift_bridgeObjectRelease();
  if (v3 >= -1)
  {
LABEL_105:
    *(_QWORD *)((v99 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1AE9261FC();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
}

void sub_1AE5D6A90(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double *v13;
  double v14;
  double v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  char v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  double *v73;
  uint64_t v74;
  double *v75;
  char v76;
  int64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  _BYTE v106[1136];
  uint64_t v107;

  v3 = a1[1];
  v4 = sub_1AE926D0C();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1AE5D719C(0, v3, 1, a1);
      goto LABEL_91;
    }
    goto LABEL_127;
  }
  v5 = v4;
  v107 = v1;
  sub_1AE51977C(v3 / 2);
  v102 = v6;
  v103 = v3;
  v104 = v7;
  v100 = a1;
  if (v3 <= 0)
  {
    v105 = MEMORY[0x1E0DEE9D8];
    v24 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_93:
    if (v24 < 2)
    {
LABEL_104:
      v81 = swift_bridgeObjectRelease();
      if (v103 >= -1)
        goto LABEL_90;
      goto LABEL_132;
    }
    v89 = *v100;
    while (1)
    {
      v90 = v24 - 2;
      if (v24 < 2)
        break;
      if (!v89)
        goto LABEL_136;
      v91 = v105;
      v92 = *(_QWORD *)(v105 + 32 + 16 * v90);
      v93 = *(_QWORD *)(v105 + 32 + 16 * (v24 - 1) + 8);
      v94 = v107;
      sub_1AE5D74B0((char *)(v89 + 1128 * v92), (char *)(v89 + 1128 * *(_QWORD *)(v105 + 32 + 16 * (v24 - 1))), v89 + 1128 * v93, v104);
      v107 = v94;
      if (v94)
        goto LABEL_89;
      if (v93 < v92)
        goto LABEL_122;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE8893F4();
        v91 = v97;
      }
      if (v90 >= *(_QWORD *)(v91 + 16))
        goto LABEL_123;
      v95 = (_QWORD *)(v91 + 32 + 16 * v90);
      *v95 = v92;
      v95[1] = v93;
      v96 = *(_QWORD *)(v91 + 16);
      if (v24 > v96)
        goto LABEL_124;
      memmove((void *)(v91 + 32 + 16 * (v24 - 1)), (const void *)(v91 + 32 + 16 * v24), 16 * (v96 - v24));
      v105 = v91;
      *(_QWORD *)(v91 + 16) = v96 - 1;
      v24 = v96 - 1;
      if (v96 <= 2)
        goto LABEL_104;
    }
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
    return;
  }
  v101 = v5;
  v8 = 0;
  v9 = *a1;
  v98 = v9 - 1128;
  v99 = v9 + 2264;
  v105 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v10 = v8++;
    if (v8 < v3)
    {
      v11 = *(double *)(v9 + 1128 * v8 + 8);
      v12 = *(double *)(v9 + 1128 * v10 + 8);
      v8 = v10 + 2;
      if (v10 + 2 < v3)
      {
        v13 = (double *)(v99 + 1128 * v10);
        v14 = v11;
        while (1)
        {
          v15 = v14;
          v14 = *v13;
          if (v12 < v11 == v15 >= *v13)
            break;
          ++v8;
          v13 += 141;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 < v11)
      {
        if (v8 < v10)
          goto LABEL_129;
        if (v10 < v8)
        {
          v16 = (char *)(v98 + 1128 * v8);
          v17 = v8;
          v18 = v10;
          v19 = (char *)(v9 + 1128 * v10);
          do
          {
            if (v18 != --v17)
            {
              if (!v9)
                goto LABEL_135;
              sub_1AE4FC7A4(v106, v19);
              sub_1AE5D8C3C(v19, v16);
              sub_1AE4FC7A4(v16, v106);
            }
            ++v18;
            v16 -= 1128;
            v19 += 1128;
          }
          while (v18 < v17);
          v3 = v103;
        }
      }
    }
    if (v8 >= v3)
      goto LABEL_28;
    if (__OFSUB__(v8, v10))
      goto LABEL_126;
    if (v8 - v10 >= v101)
      goto LABEL_28;
    if (__OFADD__(v10, v101))
      goto LABEL_130;
    if (v10 + v101 >= v3)
      v20 = v3;
    else
      v20 = v10 + v101;
    if (v20 < v10)
      goto LABEL_131;
    if (v8 == v20)
    {
LABEL_28:
      v21 = v105;
    }
    else
    {
      v73 = (double *)(v98 + 1128 * v8);
      v21 = v105;
      do
      {
        v74 = v10;
        v75 = v73;
        do
        {
          if (v75[1] >= v75[142])
            break;
          if (!v9)
            goto LABEL_133;
          sub_1AE4FC7A4(v106, v75 + 141);
          sub_1AE4FC7A4(v75 + 141, v75);
          sub_1AE4FC7A4(v75, v106);
          v75 -= 141;
          ++v10;
        }
        while (v8 != v10);
        ++v8;
        v73 += 141;
        v10 = v74;
      }
      while (v8 != v20);
      v8 = v20;
    }
    if (v8 < v10)
      goto LABEL_125;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v76 = sub_1AE505FE4();
      sub_1AE889310(v76, v77, v78, (char *)v21);
      v21 = v79;
    }
    v23 = *(_QWORD *)(v21 + 16);
    v22 = *(_QWORD *)(v21 + 24);
    v24 = v23 + 1;
    if (v23 >= v22 >> 1)
    {
      sub_1AE889310(v22 > 1, v23 + 1, 1, (char *)v21);
      v21 = v80;
    }
    *(_QWORD *)(v21 + 16) = v24;
    v25 = v21 + 32;
    v26 = (uint64_t *)(v21 + 32 + 16 * v23);
    *v26 = v10;
    v26[1] = v8;
    v105 = v21;
    if (v23)
      break;
    v24 = 1;
LABEL_77:
    v3 = v103;
    if (v8 >= v103)
      goto LABEL_93;
  }
  while (1)
  {
    v27 = v24 - 1;
    if (v24 >= 4)
    {
      v32 = v25 + 16 * v24;
      v33 = *(_QWORD *)(v32 - 64);
      v34 = *(_QWORD *)(v32 - 56);
      v38 = __OFSUB__(v34, v33);
      v35 = v34 - v33;
      if (v38)
        goto LABEL_110;
      v37 = *(_QWORD *)(v32 - 48);
      v36 = *(_QWORD *)(v32 - 40);
      v38 = __OFSUB__(v36, v37);
      v30 = v36 - v37;
      v31 = v38;
      if (v38)
        goto LABEL_111;
      v39 = v24 - 2;
      v40 = (uint64_t *)(v25 + 16 * (v24 - 2));
      v42 = *v40;
      v41 = v40[1];
      v38 = __OFSUB__(v41, v42);
      v43 = v41 - v42;
      if (v38)
        goto LABEL_112;
      v38 = __OFADD__(v30, v43);
      v44 = v30 + v43;
      if (v38)
        goto LABEL_114;
      if (v44 >= v35)
      {
        v62 = (uint64_t *)(v25 + 16 * v27);
        v64 = *v62;
        v63 = v62[1];
        v38 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v38)
          goto LABEL_120;
        v55 = v30 < v65;
        goto LABEL_66;
      }
    }
    else
    {
      if (v24 != 3)
      {
        v56 = *(_QWORD *)(v21 + 32);
        v57 = *(_QWORD *)(v21 + 40);
        v38 = __OFSUB__(v57, v56);
        v49 = v57 - v56;
        v50 = v38;
        goto LABEL_60;
      }
      v29 = *(_QWORD *)(v21 + 32);
      v28 = *(_QWORD *)(v21 + 40);
      v38 = __OFSUB__(v28, v29);
      v30 = v28 - v29;
      v31 = v38;
    }
    if ((v31 & 1) != 0)
      goto LABEL_113;
    v39 = v24 - 2;
    v45 = (uint64_t *)(v25 + 16 * (v24 - 2));
    v47 = *v45;
    v46 = v45[1];
    v48 = __OFSUB__(v46, v47);
    v49 = v46 - v47;
    v50 = v48;
    if (v48)
      goto LABEL_115;
    v51 = (uint64_t *)(v25 + 16 * v27);
    v53 = *v51;
    v52 = v51[1];
    v38 = __OFSUB__(v52, v53);
    v54 = v52 - v53;
    if (v38)
      goto LABEL_117;
    if (__OFADD__(v49, v54))
      goto LABEL_119;
    if (v49 + v54 >= v30)
    {
      v55 = v30 < v54;
LABEL_66:
      if (v55)
        v27 = v39;
      goto LABEL_68;
    }
LABEL_60:
    if ((v50 & 1) != 0)
      goto LABEL_116;
    v58 = (uint64_t *)(v25 + 16 * v27);
    v60 = *v58;
    v59 = v58[1];
    v38 = __OFSUB__(v59, v60);
    v61 = v59 - v60;
    if (v38)
      goto LABEL_118;
    if (v61 < v49)
      goto LABEL_77;
LABEL_68:
    v66 = v27 - 1;
    if (v27 - 1 >= v24)
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
    if (!v9)
      goto LABEL_134;
    v67 = (uint64_t *)(v25 + 16 * v66);
    v68 = *v67;
    v69 = (_QWORD *)(v25 + 16 * v27);
    v70 = v69[1];
    v71 = v107;
    sub_1AE5D74B0((char *)(v9 + 1128 * *v67), (char *)(v9 + 1128 * *v69), v9 + 1128 * v70, v104);
    v107 = v71;
    if (v71)
      break;
    if (v70 < v68)
      goto LABEL_107;
    if (v27 > *(_QWORD *)(v105 + 16))
      goto LABEL_108;
    *v67 = v68;
    *(_QWORD *)(v25 + 16 * v66 + 8) = v70;
    v72 = *(_QWORD *)(v105 + 16);
    if (v27 >= v72)
      goto LABEL_109;
    v21 = v105;
    v24 = v72 - 1;
    memmove((void *)(v25 + 16 * v27), v69 + 2, 16 * (v72 - 1 - v27));
    *(_QWORD *)(v105 + 16) = v72 - 1;
    if (v72 <= 2)
      goto LABEL_77;
  }
LABEL_89:
  v81 = sub_1AE4F76D8();
  if (v103 < -1)
    goto LABEL_128;
LABEL_90:
  sub_1AE5D8C64(v81, v82, v83, v84, v85, v86, v87, v88, v98, v99, (uint64_t)v100, v101, v102);
LABEL_91:
  sub_1AE4F667C();
}

uint64_t sub_1AE5D70B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v13 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
    while (2)
    {
      v7 = v13;
      v8 = (uint64_t *)v6;
      do
      {
        swift_retain();
        swift_retain();
        v9 = sub_1AE925F20();
        v10 = sub_1AE925F20();
        swift_release();
        result = swift_release();
        if (v10 >= v9)
          break;
        if (!v5)
        {
          __break(1u);
          return result;
        }
        v11 = *v8;
        *v8 = v8[1];
        v8[1] = v11;
        --v8;
        ++v7;
      }
      while (v4 != v7);
      ++v4;
      v6 += 8;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

void sub_1AE5D719C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  _BYTE v11[1136];

  if (a3 != a2)
  {
    v4 = a3;
    v7 = *a4;
    v8 = *a4 + 1128 * a3 - 1128;
    while (2)
    {
      v9 = a1;
      v10 = (double *)v8;
      do
      {
        if (v10[1] >= v10[142])
          break;
        if (!v7)
        {
          __break(1u);
          return;
        }
        sub_1AE4FC7A4(v11, v10 + 141);
        sub_1AE4FC7A4(v10 + 141, v10);
        sub_1AE4FC7A4(v10, v11);
        v10 -= 141;
        ++v9;
      }
      while (v4 != v9);
      ++v4;
      v8 += 1128;
      if (v4 != a2)
        continue;
      break;
    }
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE5D725C(_QWORD *a1, unint64_t a2, unint64_t a3, _QWORD *a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  BOOL v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  _QWORD *v22;
  _QWORD *v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  unint64_t v31;
  BOOL v32;
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;

  v6 = a1;
  v7 = a2 - (_QWORD)a1;
  v8 = (uint64_t)(a2 - (_QWORD)a1) / 8;
  v9 = a3 - a2;
  v10 = (uint64_t)(a3 - a2) / 8;
  if (v8 >= v10)
  {
    sub_1AE5201B0(a2, (uint64_t)(a3 - a2) / 8, a4);
    v22 = (_QWORD *)a2;
    v35 = a4;
    if ((unint64_t)v6 >= a2 || v9 < 8)
    {
      v14 = a4;
      v12 = &a4[v10];
      goto LABEL_41;
    }
    v25 = (_QWORD *)(a3 - 8);
    v12 = &a4[v10];
    while (1)
    {
      v37 = (unint64_t)v22;
      v26 = (unint64_t)v12--;
      v36 = v25 + 1;
      v27 = v22 - 1;
      swift_retain();
      swift_retain();
      v28 = sub_1AE925F20();
      v29 = sub_1AE925F20();
      swift_release();
      swift_release();
      if (v29 >= v28)
      {
        v31 = (unint64_t)v35;
        v32 = v36 != (_QWORD *)v26 || (unint64_t)v25 >= v26;
        v27 = v12;
        v22 = (_QWORD *)v37;
        if (!v32)
          goto LABEL_36;
      }
      else
      {
        v30 = v36 != (_QWORD *)v37 || (unint64_t)v25 >= v37;
        v22 = v27;
        v31 = (unint64_t)v35;
        v12 = (_QWORD *)v26;
        if (!v30)
          goto LABEL_36;
      }
      *v25 = *v27;
LABEL_36:
      --v25;
      if (v22 <= v6 || (unint64_t)v12 <= v31)
      {
        v14 = v35;
        goto LABEL_41;
      }
    }
  }
  sub_1AE5201B0(a1, (uint64_t)(a2 - (_QWORD)a1) / 8, a4);
  v12 = &a4[v8];
  v13 = a2 >= a3 || v7 < 8;
  v14 = a4;
  if (!v13)
  {
    v15 = (_QWORD *)a2;
    while (1)
    {
      v16 = v15;
      swift_retain();
      swift_retain();
      v17 = sub_1AE925F20();
      v18 = sub_1AE925F20();
      swift_release();
      swift_release();
      if (v18 < v17)
        break;
      v19 = v14;
      v20 = v6 == v14++;
      v15 = v16;
      if (!v20)
        goto LABEL_11;
LABEL_12:
      ++v6;
      if (v14 >= v12 || (unint64_t)v15 >= a3)
        goto LABEL_17;
    }
    v19 = v16;
    v15 = v16 + 1;
    if (v6 == v16)
      goto LABEL_12;
LABEL_11:
    *v6 = *v19;
    goto LABEL_12;
  }
LABEL_17:
  v22 = v6;
LABEL_41:
  sub_1AE5201B0(v14, v12 - v14, v22);
  return 1;
}

uint64_t sub_1AE5D74B0(char *a1, char *a2, unint64_t a3, char *a4)
{
  double *v4;
  double *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  double *v14;
  char *v18;
  double *v19;
  double *v20;
  BOOL v21;
  BOOL v22;

  v4 = (double *)a4;
  v6 = (double *)a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 1128;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 1128;
  if (v9 >= v11)
  {
    sub_1AE520474(a2, (uint64_t)(a3 - (_QWORD)a2) / 1128, a4);
    v12 = (unint64_t)&v4[141 * v11];
    if (v7 >= (char *)v6 || v10 < 1128)
      goto LABEL_41;
    v18 = (char *)(a3 - 1128);
    while (1)
    {
      v19 = (double *)(v18 + 1128);
      if (*(v6 - 140) >= *(double *)(v12 - 1120))
      {
        v20 = (double *)(v12 - 1128);
        v22 = v19 != (double *)v12 || (unint64_t)v18 >= v12;
        v12 -= 1128;
        if (!v22)
          goto LABEL_37;
      }
      else
      {
        v20 = v6 - 141;
        v21 = v19 != v6 || v18 >= (char *)v6;
        v6 -= 141;
        if (!v21)
          goto LABEL_37;
      }
      sub_1AE5D8C3C(v18, v20);
LABEL_37:
      v18 -= 1128;
      if (v6 <= (double *)v7 || v12 <= (unint64_t)v4)
        goto LABEL_41;
    }
  }
  sub_1AE520474(a1, (a2 - a1) / 1128, a4);
  v12 = (unint64_t)&v4[141 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 1128)
  {
    do
    {
      if (v4[1] >= v6[1])
      {
        v13 = v7 == (char *)v4;
        v14 = v4;
        v4 += 141;
        if (v13 && v7 < (char *)v4)
          goto LABEL_16;
      }
      else
      {
        v13 = v7 == (char *)v6;
        v14 = v6;
        v6 += 141;
        if (v13 && v7 < (char *)v6)
          goto LABEL_16;
      }
      sub_1AE5D8C3C(v7, v14);
LABEL_16:
      v7 += 1128;
    }
    while ((unint64_t)v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = (double *)v7;
LABEL_41:
  sub_1AE520474((char *)v4, (uint64_t)(v12 - (_QWORD)v4) / 1128, (char *)v6);
  return 1;
}

_QWORD *sub_1AE5D7648(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = a1[5];
  v3 = a1[6];
  v4 = a1[14];
  v5 = a1[15];
  v7 = a1[13];
  swift_bridgeObjectRetain();
  sub_1AE578C4C(v2, v3);
  swift_bridgeObjectRetain();
  sub_1AE5D7768(v7, v4, v5);
  return a1;
}

uint64_t sub_1AE5D7768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

_QWORD *sub_1AE5D7834(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = a1[5];
  v3 = a1[6];
  v4 = a1[14];
  v5 = a1[15];
  v7 = a1[13];
  swift_bridgeObjectRelease();
  sub_1AE52F880(v2, v3);
  swift_bridgeObjectRelease();
  sub_1AE5D7954(v7, v4, v5);
  return a1;
}

uint64_t sub_1AE5D7954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AE5D7A20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  void *v9;
  _QWORD *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  _OWORD *v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;

  sub_1AE7BB674(&v46);
  v42 = v46;
  v43 = v47;
  v44 = v48;
  v45 = v49;
  v36 = a1;
  swift_bridgeObjectRetain();
  v37 = a3;
  swift_retain();
  sub_1AE7BB6B8((uint64_t)&v38);
  if (*((_QWORD *)&v38 + 1))
  {
    while (1)
    {
      v50 = v38;
      v51 = v39;
      v52 = v40;
      v9 = v41;
      v10 = (_QWORD *)*a5;
      v18 = sub_1AE5373C4(&v50);
      v19 = v10[2];
      v20 = (v11 & 1) == 0;
      v21 = v19 + v20;
      if (__OFADD__(v19, v20))
        break;
      v22 = v11;
      if (v10[3] >= v21)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EED99600);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE6362A8(v21, a4 & 1, v12, v13, v14, v15, v16, v17, v35, v36, v37, v38, *((uint64_t *)&v38 + 1), v39, *((uint64_t *)&v39 + 1), v40, *((uint64_t *)&v40 + 1), (uint64_t)v41, v42,
          *((uint64_t *)&v42 + 1),
          v43,
          *((uint64_t *)&v43 + 1),
          v44,
          *((uint64_t *)&v44 + 1),
          v45,
          v46,
          *((uint64_t *)&v46 + 1),
          v47,
          *((uint64_t *)&v47 + 1),
          v48,
          *((uint64_t *)&v48 + 1),
          v49);
        v23 = sub_1AE5373C4(&v50);
        if ((v22 & 1) != (v24 & 1))
          goto LABEL_16;
        v18 = v23;
      }
      v25 = (_QWORD *)*a5;
      if ((v22 & 1) != 0)
      {
        v26 = *(id *)(v25[7] + 8 * v18);

        sub_1AE5D88E4((uint64_t)&v50);
        v27 = v25[7];

        *(_QWORD *)(v27 + 8 * v18) = v26;
      }
      else
      {
        v25[(v18 >> 6) + 8] |= 1 << v18;
        v28 = (_OWORD *)(v25[6] + 48 * v18);
        v29 = v50;
        v30 = v52;
        v28[1] = v51;
        v28[2] = v30;
        *v28 = v29;
        *(_QWORD *)(v25[7] + 8 * v18) = v9;
        v31 = v25[2];
        v32 = __OFADD__(v31, 1);
        v33 = v31 + 1;
        if (v32)
          goto LABEL_15;
        v25[2] = v33;
      }
      sub_1AE7BB6B8((uint64_t)&v38);
      a4 = 1;
      if (!*((_QWORD *)&v38 + 1))
        goto LABEL_13;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    result = sub_1AE926DE4();
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1AE592EFC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1AE5D7C4C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  char v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD v12[2];

  v4 = (_QWORD *)isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v7 = (_QWORD *)((char *)v12 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1AE555CAC(0, v6, v7);
    sub_1AE5D7F20((uint64_t)v7, v6, v4, a2);
    if (v2)
      swift_willThrow();
    else
      return v8;
  }
  else
  {
    v9 = (_QWORD *)swift_slowAlloc();
    sub_1AE555CAC(0, v6, v9);
    sub_1AE5D7F20((uint64_t)v9, v6, v4, a2);
    a2 = v10;
    MEMORY[0x1AF454C78](v9, -1, -1);
  }
  return a2;
}

uint64_t sub_1AE5D7DB4(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

void sub_1AE5D7DCC(_BYTE *a1)
{
  bzero(a1, 0x3C8uLL);
  a1[968] = 1;
}

unint64_t sub_1AE5D7DF8()
{
  unint64_t result;

  result = qword_1ED31AEC0;
  if (!qword_1ED31AEC0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for Features.FeatureFlag, &type metadata for Features.FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_1ED31AEC0);
  }
  return result;
}

uint64_t sub_1AE5D7E34(uint64_t result)
{
  *(_BYTE *)(result + 968) = 0;
  return result;
}

unint64_t sub_1AE5D7E3C()
{
  unint64_t result;

  result = qword_1EED995C8;
  if (!qword_1EED995C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE940AC4, &unk_1E5DB5710);
    atomic_store(result, (unint64_t *)&qword_1EED995C8);
  }
  return result;
}

uint64_t sub_1AE5D7E78(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_1AE5D7EA8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[9];
  v3 = a1[10];
  sub_1AE52F880(a1[5], a1[6]);
  sub_1AE52F880(v2, v3);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1AE5D7F20(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  int64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  char v23;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;
  uint64_t v30;
  int64_t v32;
  uint64_t v33;

  v27 = 0;
  v4 = 0;
  v30 = a4;
  v7 = a3[8];
  v5 = a3 + 8;
  v6 = v7;
  v8 = 1 << *((_BYTE *)v5 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v6;
  v28 = v5;
  v29 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v4 << 6);
LABEL_20:
    v16 = a3[6] + 48 * v12;
    v17 = *(_QWORD *)(v16 + 32);
    v18 = *(_QWORD *)(v16 + 40);
    v19 = *(void **)(a3[7] + 8 * v12);
    v32 = v4;
    v20 = 3826797;
    if ((a4 & 0x80000000000000) == 0)
      v20 = 3828069;
    v33 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = v19;
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    if (v17 == v33 && v18 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      a4 = v30;
      v4 = v32;
LABEL_29:
      *(_QWORD *)(a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v27++, 1))
      {
        __break(1u);
LABEL_32:
        sub_1AE73DA0C(a1, a2, v27);
        return;
      }
    }
    else
    {
      v23 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      a4 = v30;
      v4 = v32;
      if ((v23 & 1) != 0)
        goto LABEL_29;
    }
  }
  v13 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v13 >= v29)
    goto LABEL_32;
  v14 = v28[v13];
  ++v4;
  if (v14)
    goto LABEL_19;
  v4 = v13 + 1;
  if (v13 + 1 >= v29)
    goto LABEL_32;
  v14 = v28[v4];
  if (v14)
    goto LABEL_19;
  v4 = v13 + 2;
  if (v13 + 2 >= v29)
    goto LABEL_32;
  v14 = v28[v4];
  if (v14)
  {
LABEL_19:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_20;
  }
  v15 = v13 + 3;
  if (v15 >= v29)
    goto LABEL_32;
  v14 = v28[v15];
  if (v14)
  {
    v4 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v29)
      goto LABEL_32;
    v14 = v28[v4];
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_1AE5D81D4(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v6 = (_QWORD *)((char *)v10 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1AE555CAC(0, v5, v6);
    v7 = sub_1AE5D8360((uint64_t)v6, v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (_QWORD *)swift_slowAlloc();
    sub_1AE555CAC(0, v5, v8);
    v7 = sub_1AE5D8360((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1AF454C78](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1AE5D8360(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  unint64_t *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v57 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v34 = 0;
    v60 = a3 + 56;
    v61 = 0;
    v35 = 1 << *(_BYTE *)(a3 + 32);
    if (v35 < 64)
      v36 = ~(-1 << v35);
    else
      v36 = -1;
    v37 = v36 & *(_QWORD *)(a3 + 56);
    v63 = (unint64_t)(v35 + 63) >> 6;
    v38 = a4 + 56;
    while (1)
    {
      while (1)
      {
        if (v37)
        {
          v39 = __clz(__rbit64(v37));
          v37 &= v37 - 1;
          v40 = v39 | (v34 << 6);
        }
        else
        {
          v41 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
          if (v41 >= v63)
            goto LABEL_79;
          v42 = *(_QWORD *)(v60 + 8 * v41);
          ++v34;
          if (!v42)
          {
            v34 = v41 + 1;
            if (v41 + 1 >= v63)
              goto LABEL_79;
            v42 = *(_QWORD *)(v60 + 8 * v34);
            if (!v42)
            {
              v34 = v41 + 2;
              if (v41 + 2 >= v63)
                goto LABEL_79;
              v42 = *(_QWORD *)(v60 + 8 * v34);
              if (!v42)
              {
                v43 = v41 + 3;
                if (v43 >= v63)
                  goto LABEL_79;
                v42 = *(_QWORD *)(v60 + 8 * v43);
                if (!v42)
                {
                  while (1)
                  {
                    v34 = v43 + 1;
                    if (__OFADD__(v43, 1))
                      goto LABEL_85;
                    if (v34 >= v63)
                      break;
                    v42 = *(_QWORD *)(v60 + 8 * v34);
                    ++v43;
                    if (v42)
                      goto LABEL_61;
                  }
LABEL_79:
                  swift_retain();
                  return sub_1AE6438B8(v57, a2, v61, v5);
                }
                v34 = v43;
              }
            }
          }
LABEL_61:
          v37 = (v42 - 1) & v42;
          v40 = __clz(__rbit64(v42)) + (v34 << 6);
        }
        v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
        v46 = *v44;
        v45 = v44[1];
        sub_1AE926EC8();
        swift_bridgeObjectRetain();
        sub_1AE925F14();
        v47 = sub_1AE926F10();
        v48 = -1 << *(_BYTE *)(v4 + 32);
        v49 = v47 & ~v48;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) != 0)
          break;
LABEL_78:
        result = swift_bridgeObjectRelease();
        v5 = a3;
        v4 = a4;
      }
      v50 = *(_QWORD *)(a4 + 48);
      v51 = (_QWORD *)(v50 + 16 * v49);
      v52 = *v51 == v46 && v51[1] == v45;
      if (!v52 && (sub_1AE926D60() & 1) == 0)
      {
        v53 = ~v48;
        do
        {
          v49 = (v49 + 1) & v53;
          if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
            goto LABEL_78;
          v54 = (_QWORD *)(v50 + 16 * v49);
          v55 = *v54 == v46 && v54[1] == v45;
        }
        while (!v55 && (sub_1AE926D60() & 1) == 0);
      }
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
        goto LABEL_83;
    }
  }
  v6 = 0;
  v58 = a4 + 56;
  v7 = 1 << *(_BYTE *)(a4 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  v59 = (unint64_t)(v7 + 63) >> 6;
  v61 = 0;
  v10 = a3 + 56;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v62 = v6;
      v12 = v11 | (v6 << 6);
      goto LABEL_22;
    }
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_81;
    }
    if (v13 >= v59)
      goto LABEL_79;
    v14 = *(_QWORD *)(v58 + 8 * v13);
    v15 = v6 + 1;
    if (!v14)
    {
      v15 = v6 + 2;
      if (v6 + 2 >= v59)
        goto LABEL_79;
      v14 = *(_QWORD *)(v58 + 8 * v15);
      if (!v14)
      {
        v15 = v6 + 3;
        if (v6 + 3 >= v59)
          goto LABEL_79;
        v14 = *(_QWORD *)(v58 + 8 * v15);
        if (!v14)
          break;
      }
    }
LABEL_21:
    v9 = (v14 - 1) & v14;
    v62 = v15;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_22:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1AE926EC8();
    swift_bridgeObjectRetain();
    sub_1AE925F14();
    v20 = sub_1AE926F10();
    v21 = -1 << *(_BYTE *)(v5 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    v24 = 1 << v22;
    if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) == 0)
      goto LABEL_36;
    v25 = *(_QWORD *)(a3 + 48);
    v26 = (_QWORD *)(v25 + 16 * v22);
    v27 = *v26 == v19 && v26[1] == v18;
    if (v27 || (sub_1AE926D60() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      v57[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
    else
    {
      v28 = ~v21;
      for (i = v22 + 1; ; i = v30 + 1)
      {
        v30 = i & v28;
        if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
          break;
        v31 = (_QWORD *)(v25 + 16 * v30);
        v32 = *v31 == v19 && v31[1] == v18;
        if (v32 || (sub_1AE926D60() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v23 = v30 >> 6;
          v24 = 1 << v30;
          goto LABEL_38;
        }
      }
LABEL_36:
      result = swift_bridgeObjectRelease();
      v6 = v62;
      v5 = a3;
      v4 = a4;
    }
  }
  v16 = v6 + 4;
  if (v6 + 4 >= v59)
    goto LABEL_79;
  v14 = *(_QWORD *)(v58 + 8 * v16);
  if (v14)
  {
    v15 = v6 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v59)
      goto LABEL_79;
    v14 = *(_QWORD *)(v58 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_21;
  }
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
  return result;
}

id sub_1AE5D889C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  id result;
  _OWORD v5[3];

  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  v5[2] = *(_OWORD *)(a1 + 32);
  result = sub_1AE7D2188((_OWORD *)a2, v5, *(void **)(a1 + 48));
  *(_QWORD *)(a2 + 48) = result;
  return result;
}

uint64_t sub_1AE5D88E4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1AE5D892C()
{
  unint64_t result;

  result = qword_1ED30FC10;
  if (!qword_1ED30FC10)
  {
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEBB28], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1ED30FC10);
  }
  return result;
}

uint64_t sub_1AE5D8968(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1ED318B20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_1AE5D89A8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[9];
  v3 = a1[10];
  sub_1AE578C4C(a1[5], a1[6]);
  sub_1AE5D7E78(v2, v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t storeEnumTagSinglePayload for RerankerAlgorithm(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1AE5D8A6C + 4 * byte_1AE93F27B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1AE5D8AA0 + 4 * byte_1AE93F276[v4]))();
}

uint64_t sub_1AE5D8AA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5D8AA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5D8AB0);
  return result;
}

uint64_t sub_1AE5D8ABC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5D8AC4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1AE5D8AC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5D8AD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RerankerAlgorithm()
{
  return &type metadata for RerankerAlgorithm;
}

unint64_t sub_1AE5D8AF0()
{
  unint64_t result;

  result = qword_1EED9D058;
  if (!qword_1EED9D058)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93F32C, &type metadata for RerankerAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1EED9D058);
  }
  return result;
}

double sub_1AE5D8B2C()
{
  return 0.0;
}

uint64_t sub_1AE5D8B40()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE5D8B48()
{
  return sub_1AE926790();
}

uint64_t sub_1AE5D8B60()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE5D8B78()
{
  JUMPOUT(0x1AF4530E8);
}

uint64_t sub_1AE5D8BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  return sub_1AE556784((uint64_t *)va, *(_QWORD *)(v5 + 16));
}

uint64_t sub_1AE5D8BB4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  return sub_1AE5CD6E0((uint64_t)&STACK[0x1C88], (uint64_t)va, a3);
}

uint64_t sub_1AE5D8BC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1AE5CD6E0((uint64_t)&STACK[0x4B8], a2, a3);
}

void *sub_1AE5D8BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t __src)
{
  return memcpy(&STACK[0x4B8], &__src, 0x3C8uLL);
}

void sub_1AE5D8BDC(uint64_t a1)
{
  uint64_t v1;

  sub_1AE516028(a1, v1);
}

uint64_t sub_1AE5D8C14(uint64_t result)
{
  return sub_1AE643DC0(result);
}

uint64_t sub_1AE5D8C20()
{
  return sub_1AE85EB50();
}

uint64_t sub_1AE5D8C28()
{
  return swift_setDeallocating();
}

void *sub_1AE5D8C3C(void *a1, const void *a2)
{
  return memmove(a1, a2, 0x468uLL);
}

BOOL sub_1AE5D8C50@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1AE5D8C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_QWORD *)(a13 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5D8C70()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5D8C7C(uint64_t *a1, uint64_t a2)
{
  return sub_1AE5D5C94(a1, a2, 0);
}

uint64_t sub_1AE5D8C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void sub_1AE5D8C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 304) = v1;
  *(_QWORD *)(v2 - 280) = v0;
}

uint64_t sub_1AE5D8CA4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5D8CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_signpost_type_t v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = a1;
  v35 = a2;
  v33 = sub_1AE925AE8();
  v2 = *(_QWORD *)(v33 - 8);
  v3 = MEMORY[0x1E0C80A78](v33);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v30 - v6;
  v8 = sub_1AE925B6C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F666C();
  v12 = v11 - v10;
  v13 = sub_1AE925B0C();
  v31 = *(_QWORD *)(v13 - 8);
  v32 = v13;
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F666C();
  v16 = v15 - v14;
  v30 = type metadata accessor for LogSignpost();
  MEMORY[0x1E0C80A78](v30);
  sub_1AE4F666C();
  v19 = v18 - v17;
  if (qword_1ED31C728 != -1)
    swift_once();
  v20 = sub_1AE4FB608(v8, (uint64_t)qword_1ED31C710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, v20, v8);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v21 = sub_1AE925B00();
  v22 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v23 = (uint8_t *)sub_1AE4F69B0();
    *(_WORD *)v23 = 0;
    v24 = sub_1AE925AD0();
    _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v21, v22, v24, "ECR.Reranker.model", "", v23, 2u);
    sub_1AE4F9064();
  }

  v25 = v33;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v33);
  sub_1AE925B3C();
  sub_1AE4FCE84();
  v26 = sub_1AE925B30();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v25);
  *(_QWORD *)v19 = "ECR.Reranker.model";
  *(_QWORD *)(v19 + 8) = 18;
  *(_BYTE *)(v19 + 16) = 2;
  *(_QWORD *)(v19 + 24) = v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v19 + *(int *)(v30 + 24), v16, v32);
  if (qword_1EED995F0 != -1)
    swift_once();
  sub_1AE5D9734(v34, v35);
  v28 = v27;
  sub_1AE576DB0(v19);
  sub_1AE50B9EC(v19);
  return v28;
}

void sub_1AE5D8F94(void *__src@<X2>, uint64_t *a2@<X0>, unint64_t a3@<X1>, char a4@<W3>, void *a5@<X8>)
{
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  _BYTE *v16;
  _BYTE *v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  int v23;
  id v24;
  double v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  _BYTE *v69;
  id v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  void *v101;
  _BYTE v102[976];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  id v108;
  _BYTE __dst[968];

  v7 = v5;
  v11 = *a2;
  memcpy(__dst, __src, sizeof(__dst));
  v12 = *(_QWORD *)(a3 + 16);
  if (v12 != v5[3])
  {
    sub_1AE5DA970();
    sub_1AE4F6778();
    *v17 = 0;
    goto LABEL_6;
  }
  sub_1AE501548(&qword_1EED99648);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1AE93F3B0;
  sub_1AE507044();
  *(_QWORD *)(v13 + 32) = sub_1AE9266D0();
  *(_QWORD *)(v13 + 40) = sub_1AE926430();
  v103 = v13;
  sub_1AE9261FC();
  v14 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
  v15 = sub_1AE823948(v13, 65568);
  if (v6)
  {

LABEL_4:
    sub_1AE5DA970();
    sub_1AE4F6778();
    *v16 = 1;
LABEL_6:
    swift_willThrow();
    return;
  }
  if (!v15)
    goto LABEL_4;
  v99 = v11;
  v101 = a5;
  v18 = v15;
  v19 = (unint64_t)objc_msgSend(v15, sel_count);
  if ((v19 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v20 = v19;
  v21 = v18;
  if (!v19)
    goto LABEL_14;
  if (!v12)
    goto LABEL_32;
  if (v19 - 1 >= v12)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_once();
    goto LABEL_27;
  }
  v22 = 0;
  v21 = v18;
  do
  {
    v23 = *(_DWORD *)(a3 + 32 + 4 * v22);
    v24 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    LODWORD(v25) = v23;
    v7 = objc_msgSend(v24, sel_initWithFloat_, v25);
    objc_msgSend(v18, sel_setObject_atIndexedSubscript_, v7, v22);

    ++v22;
  }
  while (v20 != v22);
LABEL_14:
  sub_1AE8DEBE4(v21);
  a5 = v21;
  swift_retain();
  sub_1AE8DE838();
  v27 = v26;
  sub_1AE4FC564();
  if (v27 && (v28 = objc_msgSend(v27, sel_multiArrayValue), v27, v28))
  {
    sub_1AE4F66E0();
    sub_1AE8DE838();
    v7 = v29;
    sub_1AE4FC564();
    if (v7 && (v30 = sub_1AE508664(), v7, v30))
    {
      sub_1AE4F66E0();
      sub_1AE8DE838();
      v7 = v31;
      sub_1AE4FC564();
      if (v7)
      {
        v32 = sub_1AE508664();

        if (v32)
        {
          v33 = sub_1AE4F69BC(v32, sel_objectAtIndexedSubscript_);
          sub_1AE507980();
          v35 = v34;

          v36 = sub_1AE4F69BC(v28, sel_objectAtIndexedSubscript_);
          sub_1AE507980();
          v38 = v37;

          v39 = sub_1AE4F69BC(v30, sel_objectAtIndexedSubscript_);
          sub_1AE507980();
          v41 = v40;
          sub_1AE4FC564();

          sub_1AE5DAA6C(v42, v43, v44, v45, v46, v47, v48);
          v49 = sub_1AE5D7E34((uint64_t)v102);
          v103 = v99;
          v104 = v35;
          v105 = v38;
          v106 = v41;
          v56 = sub_1AE4FD0C0(v49, v50, v51, v52, v53, v54, v55);
          sub_1AE503520(v56, v57, v58, v59, v60, v61, v62, v63, v98, v99, v100, a4, v101, a3);
          swift_bridgeObjectRetain();
          return;
        }
      }
      sub_1AE5DA970();
      v68 = sub_1AE4F6778();
      sub_1AE4FEC64(v68, v69);
      sub_1AE4FC564();

    }
    else
    {
      sub_1AE5DA970();
      v66 = sub_1AE4F6778();
      sub_1AE4FEC64(v66, v67);
      sub_1AE4FC564();

    }
  }
  else
  {
    sub_1AE5DA970();
    v64 = sub_1AE4F6778();
    sub_1AE4FEC64(v64, v65);
    sub_1AE4FC564();
  }
  v108 = v7;
  v70 = v7;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if (!swift_dynamicCast() || v107 != 6)
  {

    return;
  }

  if (qword_1ED319C70 != -1)
    goto LABEL_34;
LABEL_27:
  v71 = sub_1AE925B6C();
  sub_1AE4FB608(v71, (uint64_t)qword_1ED31AD58);
  v72 = sub_1AE925B54();
  v73 = sub_1AE9265EC();
  if (os_log_type_enabled(v72, v73))
  {
    v74 = (uint8_t *)sub_1AE4F69B0();
    *(_WORD *)v74 = 0;
    _os_log_impl(&dword_1AE4F2000, v72, v73, "Model execution failed. Unable to retrieve output featureValue for field.", v74, 2u);
    sub_1AE4F9064();
  }

  sub_1AE5DAA6C(v75, v76, v77, v78, v79, v80, v81);
  v82 = sub_1AE5D7E34((uint64_t)v102);
  v103 = v99;
  v104 = 0;
  v106 = 0;
  v105 = 0;
  v89 = sub_1AE4FD0C0(v82, v83, v84, v85, v86, v87, v88);
  sub_1AE503520(v89, v90, v91, v92, v93, v94, v95, v96, v98, v99, v100, a4, v101, a3);
  v97 = v108;
  swift_bridgeObjectRetain();

}

void sub_1AE5D9580()
{
  sub_1AE56BB6C();
}

void sub_1AE5D958C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  id v5;

  v3 = a1 == 0x63735F7475706E69 && a2 == 0xEC0000007365726FLL;
  if (v3 || (sub_1AE926D60() & 1) != 0)
  {
    v4 = *(_QWORD *)(v2 + 16);
    if (v4)
      v5 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, v4);
  }
  sub_1AE4F6664();
}

uint64_t type metadata accessor for EntityRerankerInput()
{
  return objc_opt_self();
}

uint64_t sub_1AE5D96A4()
{
  return sub_1AE4F9314((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_1AE5D96B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0;
  type metadata accessor for EntityRerankerHandler.EntityRerankerHandlerCache.GuardedData();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1AE925C98();
  sub_1AE501548(&qword_1EED995D8);
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1AE50B7A4(v2);
  sub_1AE4F6664();
}

void sub_1AE5D9734(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 16) + 24);
  swift_bridgeObjectRetain();
  sub_1AE4F66E0();
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  swift_retain();
  sub_1AE5D97E4(a1, a2, &v6);
  swift_release();
  os_unfair_lock_unlock(v5);
  sub_1AE4FC564();
  sub_1AE4F81B8();
  sub_1AE506BB8();
}

void sub_1AE5D97E4(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t type;
  unint64_t typea;
  unint64_t typeb;
  os_log_type_t typec[8];
  unint64_t typed;
  os_log_type_t typee;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1AE516078();
  swift_bridgeObjectRelease();
  if (v61 == 1)
  {
    sub_1AE52FBE8((uint64_t)&v60, &qword_1EED995E0);
    swift_endAccess();
  }
  else
  {
    sub_1AE53F4DC((uint64_t)&v60, (uint64_t)&v66);
    swift_endAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v8 = Strong;
      if (qword_1ED319C70 != -1)
        swift_once();
      v9 = sub_1AE925B6C();
      sub_1AE4FB608(v9, (uint64_t)qword_1ED31AD58);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v10 = sub_1AE925B54();
      v11 = sub_1AE9265E0();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = swift_slowAlloc();
        typea = swift_slowAlloc();
        v62 = typea;
        *(_DWORD *)v12 = 136315394;
        v60 = v8;
        type metadata accessor for EntityRerankerHandler();
        swift_retain();
        v13 = sub_1AE925E90();
        sub_1AE520ED4(v13, v14, (uint64_t)&v62, v15, v16, v17, v18, v19, v12 + 4, typea, (uint64_t)a3, v60, v61, v62, v63, v64, v65, v66, v67,
          v68);
        v60 = v20;
        sub_1AE92676C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2080;
        swift_bridgeObjectRetain();
        sub_1AE520ED4(a1, a2, (uint64_t)&v62, v21, v22, v23, v24, v25, v46, typeb, v56, v60, v61, v62, v63, v64, v65, v66, v67,
          v68);
        v60 = v26;
        a3 = v57;
        sub_1AE92676C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AE4F2000, v10, v11, "EntityRerankerHandler: using cached handler %s for %s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF454C78](*(_QWORD *)typec, -1, -1);
        MEMORY[0x1AF454C78](v12, -1, -1);
      }
      else
      {
        swift_release_n();
        swift_bridgeObjectRelease_n();
      }

      sub_1AE5DA9F4((uint64_t)&v66);
      goto LABEL_17;
    }
    sub_1AE5DA9F4((uint64_t)&v66);
  }
  type metadata accessor for EntityRerankerHandler();
  v8 = swift_allocObject();
  sub_1AE5D9D50();
  if (v3)
    return;
  swift_weakInit();
  LOBYTE(v61) = 0;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1AE741FC0((uint64_t)&v60, a1, a2);
  swift_endAccess();
  if (qword_1ED319C70 != -1)
    swift_once();
  v27 = sub_1AE925B6C();
  sub_1AE4FB608(v27, (uint64_t)qword_1ED31AD58);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v28 = sub_1AE925B54();
  v29 = sub_1AE9265E0();
  v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    LODWORD(type) = v30;
    v31 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v62 = v47;
    *(_DWORD *)v31 = 136315394;
    v60 = v8;
    swift_retain();
    v32 = sub_1AE925E90();
    sub_1AE520ED4(v32, v33, (uint64_t)&v62, v34, v35, v36, v37, v38, v47, type, (uint64_t)a3, v60, v61, v62, v63, v64, v65, v66, v67,
      v68);
    v60 = v39;
    sub_1AE92676C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1AE520ED4(a1, a2, (uint64_t)&v62, v40, v41, v42, v43, v44, v48, typed, v58, v60, v61, v62, v63, v64, v65, v66, v67,
      v68);
    v60 = v45;
    a3 = v59;
    sub_1AE92676C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AE4F2000, v28, typee, "EntityRerankerModel: caching model %s for %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF454C78](v49, -1, -1);
    MEMORY[0x1AF454C78](v31, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
LABEL_17:
  *a3 = v8;
}

uint64_t sub_1AE5D9D0C()
{
  return sub_1AE4F9314((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1AE5D9D18()
{
  uint64_t v0;

  type metadata accessor for EntityRerankerHandler.EntityRerankerHandlerCache();
  v0 = swift_allocObject();
  sub_1AE5D96B0();
  qword_1EED995E8 = v0;
}

void sub_1AE5D9D50()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unsigned __int8 v18;
  char v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  _BYTE *v33;
  char v34;
  uint64_t v35;
  _QWORD v36[4];

  type metadata accessor for EntityRerankerModel();
  v2 = sub_1AE4F69BC(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_initWithComputeUnits_);
  v3 = sub_1AE8DE57C(v2);
  if (v1)
    goto LABEL_64;
  *(_QWORD *)(v0 + 16) = v3;
  v4 = objc_msgSend(*(id *)(v3 + 16), sel_modelDescription);
  v5 = objc_msgSend(v4, sel_metadata);

  type metadata accessor for MLModelMetadataKey(0);
  sub_1AE5DAA18();
  sub_1AE925C5C();

  v6 = (id)*MEMORY[0x1E0C9E868];
  sub_1AE515FA4();

  swift_bridgeObjectRelease();
  if (v36[3])
  {
    sub_1AE501548(&qword_1ED30F918);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1AE515C78(0x75746165466D756ELL, 0xEB00000000736572, v35);
      v8 = v7;
      v10 = v9;
      sub_1AE4F67AC();
      if (v10)
        goto LABEL_8;
    }
  }
  else
  {
    sub_1AE52FBE8((uint64_t)v36, (uint64_t *)&unk_1ED31C440);
  }
  swift_bridgeObjectRelease();
  v8 = 0;
  v10 = 0xE000000000000000;
LABEL_8:
  v11 = HIBYTE(v10) & 0xF;
  v12 = v8 & 0xFFFFFFFFFFFFLL;
  if ((v10 & 0x2000000000000000) != 0)
    v13 = HIBYTE(v10) & 0xF;
  else
    v13 = v8 & 0xFFFFFFFFFFFFLL;
  if (!v13)
  {
    sub_1AE4F76D8();
LABEL_63:
    sub_1AE5DA970();
    sub_1AE4F6778();
    *v33 = 5;
    swift_willThrow();
    swift_release();
LABEL_64:
    swift_deallocPartialClassInstance();
    goto LABEL_65;
  }
  if ((v10 & 0x1000000000000000) != 0)
  {
    v15 = sub_1AE5BC078(v8, v10, 10);
    LOBYTE(v8) = v34;
    goto LABEL_53;
  }
  if ((v10 & 0x2000000000000000) == 0)
  {
    if ((v8 & 0x1000000000000000) != 0)
      v14 = (unsigned __int8 *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v14 = (unsigned __int8 *)sub_1AE926994();
    v15 = (uint64_t)sub_1AE5BC064(v14, v12);
    LOBYTE(v8) = v16 & 1;
LABEL_53:
    sub_1AE4F76D8();
    if ((v8 & 1) == 0)
    {
      *(_QWORD *)(v0 + 24) = v15;
LABEL_65:
      sub_1AE506BB8();
      return;
    }
    goto LABEL_63;
  }
  v36[0] = v8;
  v36[1] = v10 & 0xFFFFFFFFFFFFFFLL;
  if (v8 == 43)
  {
    if (!v11)
      goto LABEL_69;
    if (v11 == 1)
      goto LABEL_39;
    sub_1AE4FEBE8();
    if (!v20 & v19)
      goto LABEL_39;
    v15 = v22;
    if (v21 != 2)
    {
      sub_1AE4FEBE8();
      if (!v20 & v19)
        goto LABEL_39;
      v15 = 10 * v15 + v24;
      if (v23 != 3)
      {
        while (1)
        {
          sub_1AE4F92A4();
          if (!v20 & v19)
            goto LABEL_39;
          sub_1AE4FFF68();
          if (!v20)
            goto LABEL_39;
          v15 = v26 + v25;
          if (__OFADD__(v26, v25))
            goto LABEL_39;
          sub_1AE500B98();
          if (v20)
            goto LABEL_53;
        }
      }
    }
LABEL_52:
    LOBYTE(v8) = 0;
    goto LABEL_53;
  }
  if (v8 != 45)
  {
    if (!v11 || (v8 - 48) > 9u)
      goto LABEL_39;
    v15 = (v8 - 48);
    if (v11 != 1)
    {
      sub_1AE4FEBE8();
      if (!v20 & v19)
        goto LABEL_39;
      v15 = 10 * (v8 - 48) + v28;
      if (v27 != 2)
      {
        while (1)
        {
          sub_1AE4F92A4();
          if (!v20 & v19)
            goto LABEL_39;
          sub_1AE4FFF68();
          if (!v20)
            goto LABEL_39;
          v15 = v30 + v29;
          if (__OFADD__(v30, v29))
            goto LABEL_39;
          sub_1AE500B98();
          if (v20)
            goto LABEL_53;
        }
      }
    }
    goto LABEL_52;
  }
  if (v11)
  {
    if (v11 != 1)
    {
      sub_1AE4FEBE8();
      if (!(!v20 & v19))
      {
        if (v17 == 2)
        {
          LOBYTE(v8) = 0;
          v15 = -(uint64_t)v18;
          goto LABEL_53;
        }
        if ((BYTE2(v8) - 48) <= 9u)
        {
          v15 = -10 * v18 - (BYTE2(v8) - 48);
          if (v17 == 3)
            goto LABEL_52;
          while (1)
          {
            sub_1AE4F92A4();
            if (!v20 & v19)
              break;
            sub_1AE4FFF68();
            if (!v20)
              break;
            v15 = v32 - v31;
            if (__OFSUB__(v32, v31))
              break;
            sub_1AE500B98();
            if (v20)
              goto LABEL_53;
          }
        }
      }
    }
LABEL_39:
    v15 = 0;
    LOBYTE(v8) = 1;
    goto LABEL_53;
  }
  __break(1u);
LABEL_69:
  __break(1u);
}

uint64_t sub_1AE5DA150()
{
  return sub_1AE5DA160((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1AE5DA160(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityRerankerHandler.EntityRerankerHandlerCache()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EntityRerankerHandler.EntityRerankerHandlerCache.GuardedData()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for EntityRerankerHandler.EntityRerankerHandlerCache.CachedHandler()
{
  return &type metadata for EntityRerankerHandler.EntityRerankerHandlerCache.CachedHandler;
}

uint64_t sub_1AE5DA1F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  int64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  void *v67;
  void *v68;
  void *v69;
  id v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  void *v75;
  uint64_t result;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  id v81[7];
  _QWORD *v82;
  _QWORD v83[6];

  v2 = v1;
  v77 = a1;
  v83[5] = *MEMORY[0x1E0C80C00];
  v82 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  sub_1AE64A2FC(v83);
  v3 = v83[0];
  v80 = (char *)v83[1];
  v4 = v83[3];
  v5 = v83[4];
  v6 = (unint64_t)(v83[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_3;
LABEL_2:
  v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v8 = v7 | (v4 << 6);
  while (1)
  {
    v16 = *(_QWORD *)(v3 + 48) + 48 * v8;
    v17 = *(void **)(v16 + 8);
    v18 = *(void **)(v16 + 16);
    v19 = *(void **)(v16 + 24);
    v20 = *(void **)(v16 + 32);
    v21 = *(void **)(v16 + 40);
    v22 = *(void **)(*(_QWORD *)(v3 + 56) + 8 * v8);
    v81[0] = *(id *)v16;
    v81[1] = v17;
    v81[2] = v18;
    v81[3] = v19;
    v81[4] = v20;
    v81[5] = v21;
    v81[6] = v22;
    swift_bridgeObjectRetain();
    sub_1AE4F6708();
    swift_bridgeObjectRetain();
    v23 = v22;
    sub_1AE5DA7C4((uint64_t)&v82, (uint64_t *)v81);
    if (v2)
    {
      sub_1AE4FC564();

      sub_1AE4F67AC();
      sub_1AE4F76D8();
      sub_1AE4F81B8();
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_67:
      result = sub_1AE926DE4();
      __break(1u);
      return result;
    }
    v2 = 0;

    sub_1AE4F67AC();
    sub_1AE4F76D8();
    sub_1AE4F81B8();
    if (v5)
      goto LABEL_2;
LABEL_3:
    v9 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
    }
    if (v9 >= v6)
      break;
    v10 = *(_QWORD *)&v80[8 * v9];
    if (!v10)
    {
      if (v4 + 2 >= v6)
        break;
      sub_1AE507DBC();
      if (v10)
        goto LABEL_14;
      if (v11 + 2 >= v6)
        break;
      sub_1AE507DBC();
      if (v10)
        goto LABEL_14;
      if (v13 + 3 >= v6)
        break;
      sub_1AE507DBC();
      if (v10)
        goto LABEL_14;
      if (v14 + 4 >= v6)
        break;
      sub_1AE507DBC();
      if (v10)
      {
LABEL_14:
        v9 = v12;
      }
      else
      {
        v9 = v15 + 5;
        if (v9 >= v6)
          break;
        v10 = *(_QWORD *)&v80[8 * v9];
        if (!v10)
        {
          v24 = v4 + 7;
          do
          {
            if (v24 >= v6)
              goto LABEL_25;
            v10 = *(_QWORD *)&v80[8 * v24++];
          }
          while (!v10);
          v9 = v24 - 1;
        }
      }
    }
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v9 << 6);
    v4 = v9;
  }
LABEL_25:
  sub_1AE4FC564();
  v25 = v82;
  v26 = sub_1AE5E2014();
  v27 = v26[2];
  v78 = (uint64_t)v26;
  if (v27)
  {
    v28 = (char *)(v26 + 4);
    do
    {
      ++v28;
      v29 = sub_1AE5DAA94();
      if (v25[2])
      {
        sub_1AE4FBAC4(v29);
        v31 = v30;
        sub_1AE4F67AC();
        if ((v31 & 1) != 0)
          goto LABEL_56;
      }
      else
      {
        sub_1AE4F67AC();
      }
      if (qword_1ED30FAB0 != -1)
        swift_once();
      v32 = qword_1ED3274B0;
      v33 = sub_1AE5DAA94();
      sub_1AE551594(v33, v34, v32);
      LOBYTE(v32) = v35;
      sub_1AE4F67AC();
      v36 = sub_1AE5DAA94();
      v37 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
      if ((v32 & 1) != 0)
      {
        if (!sub_1AE4F69BC(v37, sel_initWithInteger_))
          goto LABEL_50;
        sub_1AE5074EC();
        sub_1AE501B60();
        sub_1AE5DAA80();
        if (v40)
          goto LABEL_62;
        v41 = v38;
        v42 = v39;
        sub_1AE501548(&qword_1ED30FD40);
        v43 = sub_1AE5DAA58();
        if ((v43 & 1) != 0)
        {
          v43 = sub_1AE509E84();
          if ((v42 & 1) != (v44 & 1))
            goto LABEL_67;
          v41 = v43;
        }
        v25 = v81[0];
        if ((v42 & 1) == 0)
        {
          sub_1AE4FFF28(v43, v44, v45, v46, v47, v48, v49, v50, v77, v78, v79);
          if (v40)
            goto LABEL_64;
LABEL_54:
          v25[2] = v51;
          swift_bridgeObjectRetain();
          goto LABEL_55;
        }
      }
      else
      {
        if (!objc_msgSend(v37, sel_initWithDouble_, 0.0))
        {
LABEL_50:
          sub_1AE4F6708();
          v64 = sub_1AE4FBAC4(v36);
          v66 = v65;
          sub_1AE4F76D8();
          if ((v66 & 1) != 0)
          {
            swift_isUniquelyReferenced_nonNull_native();
            v81[0] = v25;
            sub_1AE501548(&qword_1ED30FD40);
            sub_1AE926A54();
            v25 = v81[0];
            swift_bridgeObjectRelease();
            v67 = *(void **)(v25[7] + 8 * v64);
            sub_1AE507044();
            sub_1AE926A6C();

            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          goto LABEL_56;
        }
        sub_1AE5074EC();
        sub_1AE501B60();
        sub_1AE5DAA80();
        if (v40)
          goto LABEL_63;
        v41 = v52;
        v54 = v53;
        sub_1AE501548(&qword_1ED30FD40);
        v55 = sub_1AE5DAA58();
        if ((v55 & 1) != 0)
        {
          v55 = sub_1AE509E84();
          if ((v54 & 1) != (v56 & 1))
            goto LABEL_67;
          v41 = v55;
        }
        v25 = v81[0];
        if ((v54 & 1) == 0)
        {
          sub_1AE4FFF28(v55, v56, v57, v58, v59, v60, v61, v62, v77, v78, v79);
          if (v40)
            goto LABEL_65;
          goto LABEL_54;
        }
      }
      v63 = v25[7];

      *(_QWORD *)(v63 + 8 * v41) = v79;
LABEL_55:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28 = v80;
LABEL_56:
      --v27;
    }
    while (v27);
  }
  swift_bridgeObjectRelease();
  v68 = (void *)objc_opt_self();
  sub_1AE507044();
  sub_1AE4F6708();
  v69 = (void *)sub_1AE925C44();
  sub_1AE4F76D8();
  v81[0] = 0;
  v70 = objc_msgSend(v68, sel_dataWithJSONObject_options_error_, v69, 0, v81);

  v71 = v81[0];
  if (v70)
  {
    v72 = sub_1AE924834();
    v74 = v73;

    sub_1AE9243C0();
    sub_1AE4FCE84();
    sub_1AE9243B4();
    sub_1AE5DA934();
    sub_1AE9243A8();
    sub_1AE4FC564();
    sub_1AE50BDB4(v72, v74);
  }
  else
  {
    v75 = v71;
    sub_1AE9246B4();

    swift_willThrow();
  }
  return sub_1AE4F76D8();
}

void sub_1AE5DA7C4(uint64_t a1, uint64_t *a2)
{
  void *v2;
  char v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v2 = (void *)a2[6];
  v15 = *a2;
  v16 = a2[1];
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  if (qword_1ED30FAB0 != -1)
    swift_once();
  sub_1AE551594(v15, v16, qword_1ED3274B0);
  if ((v3 & 1) != 0)
  {
    v4 = objc_msgSend(v2, sel_int64Value);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v4);
    if (v5)
    {
LABEL_5:
      sub_1AE65502C((uint64_t)v5, v15, v16, v7, v8, v9, v10, v11, v15, v16);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    objc_msgSend(v2, sel_doubleValue);
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v12);
    if (v5)
      goto LABEL_5;
  }
  sub_1AE654A38(v15, v16, v6, v7, v8, v9, v10, v11, v15, v16);
  v14 = v13;
  swift_bridgeObjectRelease();

}

unint64_t sub_1AE5DA934()
{
  unint64_t result;

  result = qword_1ED30FAB8;
  if (!qword_1ED30FAB8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityFeatures, &type metadata for EntityFeatures);
    atomic_store(result, (unint64_t *)&qword_1ED30FAB8);
  }
  return result;
}

unint64_t sub_1AE5DA970()
{
  unint64_t result;

  result = qword_1EED9D060;
  if (!qword_1EED9D060)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93F4FC, &type metadata for ECRModelError);
    atomic_store(result, (unint64_t *)&qword_1EED9D060);
  }
  return result;
}

uint64_t sub_1AE5DA9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED94878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE5DA9F4(uint64_t a1)
{
  swift_weakDestroy();
  return a1;
}

unint64_t sub_1AE5DAA18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3188B8;
  if (!qword_1ED3188B8)
  {
    type metadata accessor for MLModelMetadataKey(255);
    result = MEMORY[0x1AF454B70](&unk_1AE9335D0, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3188B8);
  }
  return result;
}

uint64_t sub_1AE5DAA58()
{
  return sub_1AE926A54();
}

void *sub_1AE5DAA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list __dst;

  va_start(__dst, a7);
  return memcpy(__dst, &STACK[0x880], 0x3C8uLL);
}

uint64_t sub_1AE5DAA94()
{
  unsigned __int8 v0;

  return sub_1AE5E2020(v0);
}

uint64_t storeEnumTagSinglePayload for ECRModelError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1AE5DAAE8 + 4 * byte_1AE93F475[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1AE5DAB1C + 4 * asc_1AE93F470[v4]))();
}

uint64_t sub_1AE5DAB1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5DAB24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5DAB2CLL);
  return result;
}

uint64_t sub_1AE5DAB38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5DAB40);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1AE5DAB44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5DAB4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ECRModelError()
{
  return &type metadata for ECRModelError;
}

unint64_t sub_1AE5DAB6C()
{
  unint64_t result;

  result = qword_1EED9D068;
  if (!qword_1EED9D068)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93F4D4, &type metadata for ECRModelError);
    atomic_store(result, (unint64_t *)&qword_1EED9D068);
  }
  return result;
}

IntelligencePlatform::EntityResolutionMode_optional __swiftcall EntityResolutionMode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  IntelligencePlatform::EntityResolutionMode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1AE926B44();
  result.value = sub_1AE4F6648();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static EntityResolutionMode.allCases.getter()
{
  return &unk_1E5DA8BD0;
}

uint64_t EntityResolutionMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE5DAC3C + 4 * byte_1AE93F540[*v0]))(0x6E6574614C776F6CLL, 0xEA00000000007963);
}

uint64_t sub_1AE5DAC3C()
{
  return 0x6465636E616C6162;
}

uint64_t sub_1AE5DAC54()
{
  return 0x6C61755168676968;
}

uint64_t sub_1AE5DAC74()
{
  return 0x6553786966657270;
}

void sub_1AE5DACE0()
{
  sub_1AE510CF0();
}

void sub_1AE5DACEC()
{
  unsigned __int8 *v0;

  sub_1AE512CCC(*v0);
}

void sub_1AE5DACF4()
{
  sub_1AE5E8A30();
}

void sub_1AE5DACFC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FB84(a1, *v1);
}

IntelligencePlatform::EntityResolutionMode_optional sub_1AE5DAD04(Swift::String *a1)
{
  return EntityResolutionMode.init(rawValue:)(*a1);
}

uint64_t sub_1AE5DAD10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = EntityResolutionMode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1AE5DAD34(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5DA8BD0;
}

uint64_t sub_1AE5DAD44()
{
  sub_1AE5DE014();
  return sub_1AE926190();
}

uint64_t sub_1AE5DADA0()
{
  sub_1AE5DE014();
  return sub_1AE926148();
}

void sub_1AE5DADEC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v36 = a2;
  v5 = sub_1AE924780();
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v6);
  v35 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AE925E78();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1AE5009EC();
  sub_1AE925E0C();
  v34 = v2;
  sub_1AE925E6C();
  sub_1AE925E48();
  v11 = v10;
  sub_1AE4F6648();
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v3, v8);
  if (v11 >> 60 == 15)
  {
    v37 = 0;
    v38 = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    v37 = 0xD00000000000001ELL;
    v38 = 0x80000001AE97F380;
    sub_1AE523C6C();
    sub_1AE926D18();
    sub_1AE925F74();
    sub_1AE4F6648();
    v13 = v37;
    v14 = v38;
    sub_1AE5DE068();
    swift_allocError();
    *v15 = v13;
    v15[1] = v14;
    swift_willThrow();
    v16 = v34;
    v17 = v35;
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v18 = sub_1AE4F6854();
    sub_1AE4FB608(v18, (uint64_t)qword_1ED31BC90);
    ((void (*)(uint64_t, uint64_t, uint64_t))v16[2])(v17, a1, v5);
    sub_1AE505AC0();
    sub_1AE505AC0();
    v19 = sub_1AE925B54();
    v20 = sub_1AE9265F8();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = sub_1AE4F66A0();
      v34 = (_QWORD *)sub_1AE4F66A0();
      v35 = sub_1AE4F66A0();
      v37 = v35;
      *(_DWORD *)v21 = 136315394;
      sub_1AE523C6C();
      v22 = sub_1AE5DE594();
      sub_1AE520ED4(v22, v23, (uint64_t)&v37, v24, v25, v26, v27, v28, v33, (unint64_t)v34, v35, (uint64_t)v36, v37, v38, v39, v40, v41, v42, v43,
        v44);
      v39 = v29;
      sub_1AE500BA8();
      sub_1AE4F9038();
      sub_1AE4FBA8C(v17, (uint64_t (*)(uint64_t, uint64_t))v16[1]);
      *(_WORD *)(v21 + 12) = 2112;
      sub_1AE505AC0();
      v30 = _swift_stdlib_bridgeErrorToNSError();
      v39 = v30;
      sub_1AE500BA8();
      *v34 = v30;
      sub_1AE4F931C();
      sub_1AE4F931C();
      _os_log_impl(&dword_1AE4F2000, v19, v20, "Failed to load data from %s with error %@", (uint8_t *)v21, 0x16u);
      sub_1AE501548(&qword_1ED319410);
      sub_1AE5081C8();
      sub_1AE4F9064();
    }
    sub_1AE4F931C();
    sub_1AE4FBA8C(v17, (uint64_t (*)(uint64_t, uint64_t))v16[1]);
    sub_1AE4F931C();
    sub_1AE4F931C();

    v31 = 1;
  }
  else
  {
    v32 = (void *)MEMORY[0x1AF454348](v12);
    sub_1AE9243C0();
    swift_allocObject();
    sub_1AE9243B4();
    sub_1AE501548(&qword_1EED9D120);
    sub_1AE4F989C(&qword_1EED9D128, &qword_1EED9D120, (uint64_t (*)(void))sub_1AE5DE0A4, MEMORY[0x1E0DEE9A0]);
    sub_1AE9243A8();
    swift_release();
    objc_autoreleasePoolPop(v32);
    sub_1AE5DE5D4();
    v31 = v37;
  }
  *v36 = v31;
  sub_1AE4F8180();
}

void sub_1AE5DB1F8()
{
  sub_1AE925C98();
  JUMPOUT(0x1AE5DB340);
}

uint64_t sub_1AE5DB5B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AE5DB5E4()
{
  sub_1AE5DB5B8();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE5DB604(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v7;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001AE97F2E0 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AE97F300 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AE97F320 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AE97F340 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = a1 == 0x72656B6E61726572 && a2 == 0xEE006769666E6F43;
    if (v5 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0x6143656C62616E65 && a2 == 0xEB00000000656863)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      v7 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 5;
      else
        return 6;
    }
  }
}

uint64_t sub_1AE5DB898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5DB604(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5DB8BC()
{
  sub_1AE50B6A4();
  return sub_1AE926F94();
}

uint64_t sub_1AE5DB8E4()
{
  sub_1AE50B6A4();
  return sub_1AE926FA0();
}

void EntityResolutionConfig.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  sub_1AE4F67EC();
  v3 = v2;
  v4 = sub_1AE501548(&qword_1EED9D070);
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE50B6A4();
  sub_1AE926F4C();
  sub_1AE5DD2B4();
  sub_1AE5DE5A4();
  sub_1AE926CC4();
  if (v0)
  {
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  }
  else
  {
    sub_1AE5DE5A4();
    sub_1AE926CC4();
    sub_1AE5DD2F0();
    sub_1AE4FD0EC();
    sub_1AE5DD32C();
    sub_1AE4FD0EC();
    sub_1AE5DD368();
    sub_1AE4FD0EC();
    sub_1AE926C94();
    v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  }
  sub_1AE4FDC10(v1, v5);
  sub_1AE4F667C();
}

uint64_t sub_1AE5DBC00(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x797265755178616DLL && a2 == 0xEC000000657A6953;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AE97F3A0 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AE97F3C0 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701080941 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_1AE5DBDB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE501548(&qword_1EED9D0B8);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F683C();
  sub_1AE4FD100();
  sub_1AE4F9900();
  sub_1AE4FC7AC();
  sub_1AE5DE54C();
  if (!v0)
  {
    sub_1AE5DE54C();
    sub_1AE5DE54C();
    sub_1AE4F69EC();
    sub_1AE5054DC(&qword_1EED9D0C0, v4, (uint64_t (*)(void))sub_1AE5DDE70, MEMORY[0x1E0DEAF10]);
    sub_1AE926CC4();
  }
  sub_1AE4FDC10(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1AE4FCE34();
}

void sub_1AE5DBEF0()
{
  uint64_t v0;

  sub_1AE501548(&qword_1EED9D0D0);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v0);
  sub_1AE4FD100();
  sub_1AE50B5EC();
  sub_1AE4FC7AC();
  sub_1AE5DDEAC();
  sub_1AE5DE55C();
  sub_1AE5DE570();
  sub_1AE4FCE34();
}

uint64_t sub_1AE5DBF94(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  char v7;

  v3 = a1 == 0x687469726F676C61 && a2 == 0xEA0000000000736DLL;
  if (v3 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F4D686372616573 && a2 == 0xEA00000000006564;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001AE97DE40 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x80000001AE97DE60)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

void sub_1AE5DC144()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE4F67EC();
  v3 = v2;
  v4 = sub_1AE501548(&qword_1EED9D0E0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE50B544();
  sub_1AE926F4C();
  sub_1AE4F69EC();
  sub_1AE5054DC(&qword_1EED9D0E8, v6, (uint64_t (*)(void))sub_1AE5DDEE8, MEMORY[0x1E0DEAF10]);
  sub_1AE506270();
  if (!v0)
  {
    sub_1AE5DDF24();
    sub_1AE506270();
    sub_1AE506904();
    sub_1AE506904();
  }
  sub_1AE4FDC10(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_1AE4F667C();
}

uint64_t sub_1AE5DC2CC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x687469726F676C61 && a2 == 0xE90000000000006DLL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE4FB6F0();
    sub_1AE4F6648();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1AE5DC354()
{
  uint64_t v0;

  sub_1AE501548(&qword_1EED9D100);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v0);
  sub_1AE4FD100();
  sub_1AE50B844();
  sub_1AE4FC7AC();
  sub_1AE5DDF60();
  sub_1AE5DE55C();
  sub_1AE5DE570();
  sub_1AE4FCE34();
}

void sub_1AE5DC3F8()
{
  EntityResolutionConfig.encode(to:)();
}

uint64_t sub_1AE5DC40C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5DBC00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5DC430()
{
  sub_1AE4F9900();
  return sub_1AE926F94();
}

uint64_t sub_1AE5DC458()
{
  sub_1AE4F9900();
  return sub_1AE926FA0();
}

void sub_1AE5DC480()
{
  sub_1AE5DBDB0();
}

uint64_t sub_1AE5DC494()
{
  sub_1AE50B5EC();
  return sub_1AE926F94();
}

uint64_t sub_1AE5DC4BC()
{
  sub_1AE50B5EC();
  return sub_1AE926FA0();
}

void sub_1AE5DC4E4()
{
  sub_1AE5DBEF0();
}

uint64_t sub_1AE5DC4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5DBF94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5DC520()
{
  sub_1AE50B544();
  return sub_1AE926F94();
}

uint64_t sub_1AE5DC548()
{
  sub_1AE50B544();
  return sub_1AE926FA0();
}

void sub_1AE5DC570()
{
  sub_1AE5DC144();
}

uint64_t sub_1AE5DC584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5DC2CC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE5DC5AC()
{
  sub_1AE50B844();
  return sub_1AE926F94();
}

uint64_t sub_1AE5DC5D4()
{
  sub_1AE50B844();
  return sub_1AE926FA0();
}

void sub_1AE5DC5FC()
{
  sub_1AE5DC354();
}

uint64_t sub_1AE5DC614(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  char v6;
  uint64_t result;

  sub_1AE5EA90C();
  if ((v4 & 1) == 0)
    return 0;
  v5 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v5 = 1;
    if ((v5 & 1) != 0)
      return 0;
  }
  v6 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      v6 = 1;
    if ((v6 & 1) != 0)
      return 0;
  }
  result = *(unsigned __int8 *)(a2 + 40);
  if ((*(_BYTE *)(a1 + 40) & 1) == 0)
    return (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32)) & ~(_DWORD)result;
  return result;
}

uint64_t sub_1AE5DC6C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AE5DC6BC(*a1, *a2);
}

uint64_t sub_1AE5DC6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 16);
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1AE8983F4(v6);
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1AE8983F4(v8);
  v10 = sub_1AE5DC770(v9, v7);
  sub_1AE4F6648();
  sub_1AE4F9038();
  if (!v10)
    return 0;
  if ((v3 & 1) == 0)
  {
    if ((v5 & 1) == 0)
      return *(float *)&v2 == *(float *)&v4;
    return 0;
  }
  if (v2 == v4)
    return v5;
  else
    return 0;
}

BOOL sub_1AE5DC770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;

  v33 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(a2 + 56);
  v32 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  if (v8 < 64)
    v5 = ~(-1 << v8);
  v9 = v5 & *(_QWORD *)(a1 + 56);
  v10 = (unint64_t)(v8 + 63) >> 6;
  v34 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = 0;
  v12 = 0;
  while (1)
  {
    while (1)
    {
      if (!v7)
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
          JUMPOUT(0x1AE5DCDD8);
        }
        if (v16 >= v34)
        {
LABEL_29:
          v7 = 0;
          v15 = 248;
          goto LABEL_30;
        }
        v17 = *(_QWORD *)(v33 + 8 * v16);
        if (v17)
          goto LABEL_13;
        v11 += 2;
        if (v16 + 1 >= v34)
        {
          v7 = 0;
          v15 = 248;
          v11 = v16;
          goto LABEL_30;
        }
        v17 = *(_QWORD *)(v33 + 8 * v11);
        if (v17)
          goto LABEL_16;
        v18 = v16 + 2;
        if (v16 + 2 >= v34)
          goto LABEL_29;
        v17 = *(_QWORD *)(v33 + 8 * v18);
        if (!v17)
        {
          v11 = v16 + 3;
          if (v16 + 3 >= v34)
          {
            v7 = 0;
            v15 = 248;
            v11 = v16 + 2;
            goto LABEL_30;
          }
          v17 = *(_QWORD *)(v33 + 8 * v11);
          if (v17)
          {
LABEL_16:
            v16 = v11;
LABEL_13:
            v7 = (v17 - 1) & v17;
            v14 = __clz(__rbit64(v17)) + (v16 << 6);
            v11 = v16;
            goto LABEL_9;
          }
          v18 = v16 + 4;
          if (v16 + 4 >= v34)
            goto LABEL_29;
          v17 = *(_QWORD *)(v33 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v16 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_99;
              if (v16 >= v34)
                break;
              v17 = *(_QWORD *)(v33 + 8 * v16);
              ++v18;
              if (v17)
                goto LABEL_13;
            }
            v7 = 0;
            v15 = 248;
            v11 = v34 - 1;
            goto LABEL_30;
          }
        }
        v16 = v18;
        goto LABEL_13;
      }
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v11 << 6);
LABEL_9:
      v15 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v14);
LABEL_30:
      if (v9)
      {
        v19 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v20 = v19 | (v12 << 6);
LABEL_32:
        v21 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v20);
        goto LABEL_53;
      }
      v22 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_98;
      if (v22 >= v10)
        goto LABEL_52;
      v23 = *(_QWORD *)(v32 + 8 * v22);
      if (v23)
        goto LABEL_36;
      v12 += 2;
      if (v22 + 1 >= v10)
      {
        v9 = 0;
        v21 = 248;
        v12 = v22;
        goto LABEL_53;
      }
      v23 = *(_QWORD *)(v32 + 8 * v12);
      if (v23)
        goto LABEL_39;
      v24 = v22 + 2;
      if (v22 + 2 >= v10)
      {
LABEL_52:
        v9 = 0;
        v21 = 248;
        goto LABEL_53;
      }
      v23 = *(_QWORD *)(v32 + 8 * v24);
      if (v23)
        goto LABEL_43;
      v12 = v22 + 3;
      if (v22 + 3 >= v10)
      {
        v9 = 0;
        v21 = 248;
        v12 = v22 + 2;
      }
      else
      {
        v23 = *(_QWORD *)(v32 + 8 * v12);
        if (v23)
        {
LABEL_39:
          v22 = v12;
LABEL_36:
          v9 = (v23 - 1) & v23;
          v20 = __clz(__rbit64(v23)) + (v22 << 6);
          v12 = v22;
          goto LABEL_32;
        }
        v24 = v22 + 4;
        if (v22 + 4 >= v10)
          goto LABEL_52;
        v23 = *(_QWORD *)(v32 + 8 * v24);
        if (v23)
        {
LABEL_43:
          v22 = v24;
          goto LABEL_36;
        }
        while (1)
        {
          v22 = v24 + 1;
          if (__OFADD__(v24, 1))
            goto LABEL_100;
          if (v22 >= v10)
            break;
          v23 = *(_QWORD *)(v32 + 8 * v22);
          ++v24;
          if (v23)
            goto LABEL_36;
        }
        v9 = 0;
        v21 = 248;
        v12 = v10 - 1;
      }
LABEL_53:
      if (v21 > 0xF7)
        goto LABEL_95;
      if (v15 >> 6)
        break;
      v25 = 0xE800000000000000;
      v26 = 0x6E656B6F54796E61;
      switch(v15)
      {
        case 0u:
          break;
        case 1u:
          v25 = 0xE600000000000000;
          v26 = 0x786966657270;
          break;
        case 2u:
          v26 = 0x6E656B6F546C6C61;
          v25 = 0xE900000000000073;
          break;
        case 3u:
          v26 = 0x69666572506C6C61;
          v25 = 0xEB00000000736578;
          break;
        case 4u:
          v25 = 0xE600000000000000;
          v26 = 0x657361726870;
          break;
        case 5u:
          v26 = 0x6850786966657270;
          v25 = 0xEC00000065736172;
          break;
        default:
          goto LABEL_96;
      }
      v27 = 0xE800000000000000;
      v28 = 0x6E656B6F54796E61;
      switch(v21)
      {
        case 0u:
          goto LABEL_84;
        case 1u:
LABEL_79:
          v27 = 0xE600000000000000;
          v28 = 0x786966657270;
          goto LABEL_84;
        case 2u:
LABEL_80:
          v28 = 0x6E656B6F546C6C61;
          v27 = 0xE900000000000073;
          goto LABEL_84;
        case 3u:
LABEL_81:
          v28 = 0x69666572506C6C61;
          v27 = 0xEB00000000736578;
          goto LABEL_84;
        case 4u:
LABEL_82:
          v27 = 0xE600000000000000;
          v28 = 0x657361726870;
          goto LABEL_84;
        case 5u:
LABEL_83:
          v28 = 0x6850786966657270;
          v27 = 0xEC00000065736172;
LABEL_84:
          if (v26 == v28 && v25 == v27)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v30 = sub_1AE926D60();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v30 & 1) == 0)
              goto LABEL_95;
          }
          break;
        default:
          goto LABEL_95;
      }
    }
    if (v15 >> 6 == 1)
      break;
    if (v15 == 128)
    {
      if (v21 != 128)
        goto LABEL_95;
    }
    else if (v15 == 129)
    {
      if (v21 != 129)
        goto LABEL_95;
    }
    else if (v21 != 130)
    {
      goto LABEL_95;
    }
  }
  if ((v21 & 0xC0) == 0x40)
  {
    v25 = 0xE800000000000000;
    v26 = 0x6E656B6F54796E61;
    switch(v21 & 0x3F)
    {
      case 0u:
        goto LABEL_73;
      case 1u:
        v25 = 0xE600000000000000;
        v26 = 0x786966657270;
        goto LABEL_73;
      case 2u:
        v26 = 0x6E656B6F546C6C61;
        v25 = 0xE900000000000073;
        goto LABEL_73;
      case 3u:
        v26 = 0x69666572506C6C61;
        v25 = 0xEB00000000736578;
        goto LABEL_73;
      case 4u:
        v25 = 0xE600000000000000;
        v26 = 0x657361726870;
        goto LABEL_73;
      case 5u:
        v26 = 0x6850786966657270;
        v25 = 0xEC00000065736172;
LABEL_73:
        v27 = 0xE800000000000000;
        v28 = 0x6E656B6F54796E61;
        switch(v21)
        {
          case 0u:
            goto LABEL_84;
          case 1u:
            goto LABEL_79;
          case 2u:
            goto LABEL_80;
          case 3u:
            goto LABEL_81;
          case 4u:
            goto LABEL_82;
          case 5u:
            goto LABEL_83;
          default:
            goto LABEL_95;
        }
      default:
        break;
    }
LABEL_96:
    swift_release();
    swift_release();
    return v21 > 0xF7;
  }
  else
  {
LABEL_95:
    swift_release();
    swift_release();
    return 0;
  }
}

void sub_1AE5DCE38(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char v14;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = a2 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = 0;
  for (i = (uint64_t *)(a1 + 40); ; i += 2)
  {
    if (v6 == v3)
    {
      v8 = 0;
      v9 = 0;
      v10 = 0;
      v6 = v3;
      if (!v4)
        goto LABEL_21;
      goto LABEL_8;
    }
    if (v6 >= v3)
      break;
    v11 = (uint64_t *)(v5 + 16 * v6);
    v9 = *v11;
    v8 = v11[1];
    swift_bridgeObjectRetain();
    if (!v4)
    {
      if (v8)
      {
LABEL_19:
        sub_1AE505D44();
        sub_1AE4F6648();
        goto LABEL_22;
      }
      v10 = 0;
LABEL_21:
      sub_1AE505D44();
      sub_1AE4F6648();
      if (v10)
LABEL_22:
        sub_1AE4F6648();
      sub_1AE506210();
      return;
    }
    ++v6;
LABEL_8:
    v12 = *(i - 1);
    v10 = *i;
    sub_1AE4F6730();
    if (!v8)
      goto LABEL_21;
    if (!v10)
      goto LABEL_19;
    if (v9 == v12 && v8 == v10)
    {
      sub_1AE4F665C();
      sub_1AE4F81B8();
    }
    else
    {
      v14 = sub_1AE4FB6F0();
      sub_1AE4F665C();
      sub_1AE4F81B8();
      if ((v14 & 1) == 0)
      {
        sub_1AE505D44();
        goto LABEL_22;
      }
    }
    --v4;
  }
  __break(1u);
}

void sub_1AE5DCF70(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE5DCFC8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE5DD070 + 4 * byte_1AE93F55B[a2]))(0x636E6176656C6572);
}

uint64_t sub_1AE5DD070(uint64_t a1)
{
  uint64_t v1;
  char v3;

  if (a1 == 0x636E6176656C6572 && v1 == 0xE900000000000065)
    v3 = 1;
  else
    v3 = sub_1AE4FB6F0();
  sub_1AE4F6648();
  sub_1AE4F9038();
  return v3 & 1;
}

void sub_1AE5DD13C(char *a1)
{
  sub_1AE5DCF70(*a1);
}

void static EntityResolutionConfig.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unsigned __int8 v6;
  char v7;
  uint64_t v8;
  char v9;
  unsigned __int8 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v22;

  v2 = *(_BYTE *)(a1 + 112);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_QWORD *)(a1 + 128);
  v5 = *(_BYTE *)(a1 + 136);
  v6 = *(_BYTE *)(a1 + 139);
  v7 = *(_BYTE *)(a2 + 112);
  v8 = *(_QWORD *)(a2 + 128);
  v9 = *(_BYTE *)(a2 + 136);
  v10 = *(_BYTE *)(a2 + 139);
  if ((sub_1AE5DC614(a1, a2) & 1) == 0)
    goto LABEL_17;
  sub_1AE510B7C(v2, v7);
  if ((v11 & 1) == 0)
    goto LABEL_17;
  v22 = v10;
  swift_bridgeObjectRetain_n();
  sub_1AE4F6730();
  v12 = sub_1AE8983F4(v3);
  v13 = sub_1AE4F6730();
  v14 = sub_1AE8983F4(v13);
  v15 = sub_1AE5DC770(v14, v12);
  sub_1AE4F665C();
  sub_1AE4F81B8();
  sub_1AE4F76D8();
  swift_bridgeObjectRelease();
  if (!v15)
    goto LABEL_17;
  if ((v5 & 1) == 0)
  {
    if ((v9 & 1) != 0 || *(float *)&v4 != *(float *)&v8)
      goto LABEL_17;
    goto LABEL_12;
  }
  if (v4 == v8)
    v16 = v9;
  else
    v16 = 0;
  if ((v16 & 1) != 0)
  {
LABEL_12:
    v17 = sub_1AE5D1C78(v6);
    v19 = v18;
    if (v17 != sub_1AE5D1C78(v22) || v19 != v20)
      sub_1AE4FB6F0();
    sub_1AE4F9038();
    sub_1AE4F665C();
  }
LABEL_17:
  sub_1AE506210();
}

void sub_1AE5DD288(void *a1)
{
  bzero(a1, 0x8DuLL);
}

uint64_t sub_1AE5DD290(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 48);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

unint64_t sub_1AE5DD2B4()
{
  unint64_t result;

  result = qword_1EED9D078;
  if (!qword_1EED9D078)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FAD0, &unk_1E5DB9E20);
    atomic_store(result, (unint64_t *)&qword_1EED9D078);
  }
  return result;
}

unint64_t sub_1AE5DD2F0()
{
  unint64_t result;

  result = qword_1EED9D080;
  if (!qword_1EED9D080)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FAA8, &unk_1E5DBD168);
    atomic_store(result, (unint64_t *)&qword_1EED9D080);
  }
  return result;
}

unint64_t sub_1AE5DD32C()
{
  unint64_t result;

  result = qword_1EED9D088;
  if (!qword_1EED9D088)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FA80, &unk_1E5DBE178);
    atomic_store(result, (unint64_t *)&qword_1EED9D088);
  }
  return result;
}

unint64_t sub_1AE5DD368()
{
  unint64_t result;

  result = qword_1EED9D090;
  if (!qword_1EED9D090)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FA58, &unk_1E5DB6858);
    atomic_store(result, (unint64_t *)&qword_1EED9D090);
  }
  return result;
}

uint64_t sub_1AE5DD3A4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE5DD3EC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1AE5DD438()
{
  unint64_t result;

  result = qword_1EED9D098;
  if (!qword_1EED9D098)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionMode, &type metadata for EntityResolutionMode);
    atomic_store(result, (unint64_t *)&qword_1EED9D098);
  }
  return result;
}

unint64_t sub_1AE5DD478()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EED9D0A0;
  if (!qword_1EED9D0A0)
  {
    v1 = sub_1AE523CF0(&qword_1EED9D0A8);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EED9D0A0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EntityResolutionMode(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityResolutionMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1AE5DD590 + 4 * byte_1AE93F566[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1AE5DD5C4 + 4 * byte_1AE93F561[v4]))();
}

uint64_t sub_1AE5DD5C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5DD5CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5DD5D4);
  return result;
}

uint64_t sub_1AE5DD5E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5DD5E8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1AE5DD5EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5DD5F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for EntityResolutionMode()
{
  sub_1AE4F67D4();
}

uint64_t destroy for EntityResolutionConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntityResolutionConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v3 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v3;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v4 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v4;
  *(_DWORD *)(a1 + 137) = *(_DWORD *)(a2 + 137);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EntityResolutionConfig(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a2[7];
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = a2[9];
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = a2[11];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_QWORD *)(a1 + 88) = v9;
  *(_QWORD *)(a1 + 104) = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_QWORD *)(a1 + 120) = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a2[16];
  *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
  *(_QWORD *)(a1 + 128) = v10;
  *(_BYTE *)(a1 + 137) = *((_BYTE *)a2 + 137);
  *(_BYTE *)(a1 + 138) = *((_BYTE *)a2 + 138);
  *(_BYTE *)(a1 + 139) = *((_BYTE *)a2 + 139);
  *(_BYTE *)(a1 + 140) = *((_BYTE *)a2 + 140);
  return a1;
}

uint64_t assignWithTake for EntityResolutionConfig(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  *(_BYTE *)(a1 + 138) = *(_BYTE *)(a2 + 138);
  *(_BYTE *)(a1 + 139) = *(_BYTE *)(a2 + 139);
  *(_BYTE *)(a1 + 140) = *(_BYTE *)(a2 + 140);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityResolutionConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 141))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void type metadata accessor for EntityResolutionConfig()
{
  sub_1AE4F67D4();
}

uint64_t type metadata accessor for EntityResolutionConfig.EntityResolutionConfigBuilder()
{
  return objc_opt_self();
}

void type metadata accessor for RerankerConfig()
{
  sub_1AE4F67D4();
}

uint64_t _s6ClauseV20FullTextSearchClauseVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5DD97C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE5DD9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  return a1;
}

__n128 sub_1AE5DDA1C(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1AE5DDA30(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  return a1;
}

uint64_t sub_1AE5DDA84(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 19))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1AE5DDAC4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 19) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 19) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for CandidateGeneratorConfig()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE5DDB14(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE5DDB60 + 4 * byte_1AE93F570[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE5DDB94 + 4 * byte_1AE93F56B[v4]))();
}

uint64_t sub_1AE5DDB94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5DDB9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5DDBA4);
  return result;
}

uint64_t sub_1AE5DDBB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5DDBB8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE5DDBBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5DDBC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for MentionGeneratorConfig()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE5DDBDC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5DDBE4(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE5DDC40(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  v4 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE5DDCA8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE5DDD08(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1AE5DDD48(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for PreprocessorConfig()
{
  sub_1AE4F67D4();
}

ValueMetadata *type metadata accessor for EntityResolutionConfig.CodingKeys()
{
  return &type metadata for EntityResolutionConfig.CodingKeys;
}

unint64_t sub_1AE5DDDB4()
{
  unint64_t result;

  result = qword_1EED9D0B0;
  if (!qword_1EED9D0B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93F8F0, &type metadata for EntityResolutionConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D0B0);
  }
  return result;
}

unint64_t sub_1AE5DDDF4()
{
  unint64_t result;

  result = qword_1ED3192D0;
  if (!qword_1ED3192D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93F860, &type metadata for EntityResolutionConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3192D0);
  }
  return result;
}

unint64_t sub_1AE5DDE34()
{
  unint64_t result;

  result = qword_1ED3192C8;
  if (!qword_1ED3192C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93F888, &type metadata for EntityResolutionConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3192C8);
  }
  return result;
}

unint64_t sub_1AE5DDE70()
{
  unint64_t result;

  result = qword_1EED9D0C8;
  if (!qword_1EED9D0C8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PreprocessingStep, &type metadata for PreprocessingStep);
    atomic_store(result, (unint64_t *)&qword_1EED9D0C8);
  }
  return result;
}

unint64_t sub_1AE5DDEAC()
{
  unint64_t result;

  result = qword_1EED9D0D8;
  if (!qword_1EED9D0D8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960E94, &type metadata for MentionGenerationAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1EED9D0D8);
  }
  return result;
}

unint64_t sub_1AE5DDEE8()
{
  unint64_t result;

  result = qword_1EED9D0F0;
  if (!qword_1EED9D0F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE939968, &type metadata for CandidateGenerationAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1EED9D0F0);
  }
  return result;
}

unint64_t sub_1AE5DDF24()
{
  unint64_t result;

  result = qword_1EED9D0F8;
  if (!qword_1EED9D0F8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SearchMode, &type metadata for SearchMode);
    atomic_store(result, (unint64_t *)&qword_1EED9D0F8);
  }
  return result;
}

unint64_t sub_1AE5DDF60()
{
  unint64_t result;

  result = qword_1EED9D108;
  if (!qword_1EED9D108)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93F37C, &type metadata for RerankerAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1EED9D108);
  }
  return result;
}

unint64_t sub_1AE5DDF9C()
{
  unint64_t result;

  result = qword_1ED319288;
  if (!qword_1ED319288)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PreprocessingStep, &type metadata for PreprocessingStep);
    atomic_store(result, (unint64_t *)&qword_1ED319288);
  }
  return result;
}

unint64_t sub_1AE5DDFD8()
{
  unint64_t result;

  result = qword_1ED319398;
  if (!qword_1ED319398)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE939940, &type metadata for CandidateGenerationAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1ED319398);
  }
  return result;
}

unint64_t sub_1AE5DE014()
{
  unint64_t result;

  result = qword_1EED9D110;
  if (!qword_1EED9D110)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionMode, &type metadata for EntityResolutionMode);
    atomic_store(result, (unint64_t *)&qword_1EED9D110);
  }
  return result;
}

uint64_t sub_1AE5DE050(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 48);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

unint64_t sub_1AE5DE068()
{
  unint64_t result;

  result = qword_1EED9D118;
  if (!qword_1EED9D118)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for FileError, &type metadata for FileError);
    atomic_store(result, (unint64_t *)&qword_1EED9D118);
  }
  return result;
}

unint64_t sub_1AE5DE0A4()
{
  unint64_t result;

  result = qword_1EED9D130;
  if (!qword_1EED9D130)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionViewDependencies, &type metadata for EntityResolutionViewDependencies);
    atomic_store(result, (unint64_t *)&qword_1EED9D130);
  }
  return result;
}

double sub_1AE5DE0E0(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_QWORD *)(a1 + 48) = 1;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_QWORD *)(a1 + 133) = 0;
  return result;
}

unint64_t sub_1AE5DE110()
{
  unint64_t result;

  result = qword_1ED3192D8;
  if (!qword_1ED3192D8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionConfig, &type metadata for EntityResolutionConfig);
    atomic_store(result, (unint64_t *)&qword_1ED3192D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for RerankerConfig.CodingKeys()
{
  return &type metadata for RerankerConfig.CodingKeys;
}

ValueMetadata *type metadata accessor for CandidateGeneratorConfig.CodingKeys()
{
  return &type metadata for CandidateGeneratorConfig.CodingKeys;
}

ValueMetadata *type metadata accessor for MentionGeneratorConfig.CodingKeys()
{
  return &type metadata for MentionGeneratorConfig.CodingKeys;
}

uint64_t _s20IntelligencePlatform24CandidateGeneratorConfigV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AE5DE1C8 + 4 * byte_1AE93F58E[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AE5DE1FC + 4 * byte_1AE93F589[v4]))();
}

uint64_t sub_1AE5DE1FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5DE204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5DE20CLL);
  return result;
}

uint64_t sub_1AE5DE218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5DE220);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AE5DE224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5DE22C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreprocessorConfig.CodingKeys()
{
  return &type metadata for PreprocessorConfig.CodingKeys;
}

unint64_t sub_1AE5DE24C()
{
  unint64_t result;

  result = qword_1EED9D138;
  if (!qword_1EED9D138)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FBD8, &type metadata for PreprocessorConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D138);
  }
  return result;
}

unint64_t sub_1AE5DE28C()
{
  unint64_t result;

  result = qword_1EED9D140;
  if (!qword_1EED9D140)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FC90, &type metadata for MentionGeneratorConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D140);
  }
  return result;
}

unint64_t sub_1AE5DE2CC()
{
  unint64_t result;

  result = qword_1EED9D148;
  if (!qword_1EED9D148)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FD48, &type metadata for CandidateGeneratorConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D148);
  }
  return result;
}

unint64_t sub_1AE5DE30C()
{
  unint64_t result;

  result = qword_1EED9D150;
  if (!qword_1EED9D150)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FE00, &type metadata for RerankerConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D150);
  }
  return result;
}

unint64_t sub_1AE5DE34C()
{
  unint64_t result;

  result = qword_1ED319250;
  if (!qword_1ED319250)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FD70, &type metadata for RerankerConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED319250);
  }
  return result;
}

unint64_t sub_1AE5DE38C()
{
  unint64_t result;

  result = qword_1ED319248;
  if (!qword_1ED319248)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FD98, &type metadata for RerankerConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED319248);
  }
  return result;
}

unint64_t sub_1AE5DE3CC()
{
  unint64_t result;

  result = qword_1ED319318;
  if (!qword_1ED319318)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FCB8, &type metadata for CandidateGeneratorConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED319318);
  }
  return result;
}

unint64_t sub_1AE5DE40C()
{
  unint64_t result;

  result = qword_1ED319310;
  if (!qword_1ED319310)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FCE0, &type metadata for CandidateGeneratorConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED319310);
  }
  return result;
}

unint64_t sub_1AE5DE44C()
{
  unint64_t result;

  result = qword_1ED3192F8;
  if (!qword_1ED3192F8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FC00, &type metadata for MentionGeneratorConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3192F8);
  }
  return result;
}

unint64_t sub_1AE5DE48C()
{
  unint64_t result;

  result = qword_1ED3192F0;
  if (!qword_1ED3192F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FC28, &type metadata for MentionGeneratorConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3192F0);
  }
  return result;
}

unint64_t sub_1AE5DE4CC()
{
  unint64_t result;

  result = qword_1ED3192B0;
  if (!qword_1ED3192B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FB48, &type metadata for PreprocessorConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3192B0);
  }
  return result;
}

unint64_t sub_1AE5DE50C()
{
  unint64_t result;

  result = qword_1ED3192A8;
  if (!qword_1ED3192A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FB70, &type metadata for PreprocessorConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3192A8);
  }
  return result;
}

uint64_t sub_1AE5DE54C()
{
  return sub_1AE926C64();
}

uint64_t sub_1AE5DE55C()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE5DE570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE5DE584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1AE5DE594()
{
  return sub_1AE926D18();
}

uint64_t sub_1AE5DE5A4()
{
  uint64_t v0;

  return v0 - 144;
}

uint64_t sub_1AE5DE5B8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1AE5CD6E0(a1, a2, v2);
}

uint64_t sub_1AE5DE5D4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AE50BDA0(v1, v0);
}

uint64_t sub_1AE5DE5E0()
{
  uint64_t v0;

  swift_weakInit();
  swift_weakAssign();
  swift_release();
  return v0;
}

uint64_t sub_1AE5DE61C()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

void sub_1AE5DE640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  v2 = sub_1AE5DEE84(v1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v2;
  swift_bridgeObjectRelease();
  sub_1AE4FCDE0();
}

uint64_t sub_1AE5DE69C()
{
  return sub_1AE5DEE3C((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1AE5DE6A8()
{
  uint64_t result;

  type metadata accessor for EntityResolutionCAEventLoggerProvider();
  swift_allocObject();
  result = sub_1AE5DE6E0();
  qword_1ED3274E0 = result;
  return result;
}

uint64_t sub_1AE5DE6E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0;
  type metadata accessor for EntityResolutionCAEventLoggerProvider.GuardedData();
  v2 = swift_allocObject();
  type metadata accessor for EntityResolutionCAEventLoggerProvider.CachedLogger();
  *(_QWORD *)(v2 + 16) = sub_1AE925C98();
  sub_1AE501548(&qword_1ED319278);
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1AE50B7A4(v2);
  return v1;
}

uint64_t sub_1AE5DE768()
{
  return sub_1AE5DEE3C((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t type metadata accessor for EntityResolutionCAEventLoggerProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EntityResolutionCAEventLoggerProvider.CachedLogger()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EntityResolutionCAEventLoggerProvider.GuardedData()
{
  return objc_opt_self();
}

uint64_t sub_1AE5DE7D4(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  sub_1AE4FFE80();
  sub_1AE655044((uint64_t)v1, 0x6F43797469746E45, 0xEB00000000746E75, v2, v3, v4, v5, v6, v14, v16);
  sub_1AE4F7804();
  sub_1AE53F468(0, (unint64_t *)&qword_1ED30FCB0);
  swift_bridgeObjectRetain();
  v7 = sub_1AE5DE8C8();
  sub_1AE4FFE80();
  sub_1AE655044((uint64_t)v7, 1701080941, 0xE400000000000000, v8, v9, v10, v11, v12, v15, v17);
  return sub_1AE4F7804();
}

id sub_1AE5DE8C8()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

void sub_1AE5DE938(char a1)
{
  CFAbsoluteTimeGetCurrent();
  __asm { BR              X10 }
}

uint64_t sub_1AE5DE998(double a1)
{
  double v1;
  float v2;
  id v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = round((a1 - v1) * 100000.0) / 100.0;
  v3 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  *(float *)&v4 = v2;
  objc_msgSend(v3, sel_initWithFloat_, v4);
  v5 = sub_1AE4FFE80();
  sub_1AE503550(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15);
  sub_1AE4F7804();
  return swift_bridgeObjectRelease();
}

void sub_1AE5DEA60(uint64_t a1)
{
  sub_1AE5DEAA4(a1);
}

void sub_1AE5DEA80(uint64_t a1)
{
  sub_1AE5DEAA4(a1);
}

void sub_1AE5DEAA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  v1 = sub_1AE4FFE80();
  sub_1AE503550(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1AE4F7804();
  sub_1AE4FCDE0();
}

void sub_1AE5DEB04(char a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, a1 & 1);
  sub_1AE4FFE80();
  sub_1AE655044((uint64_t)v3, 0x6561446E496E7572, 0xEB000000006E6F6DLL, v4, v5, v6, v7, v8, v11, v12);
  v9 = sub_1AE4F7804();
  v10 = (void *)MEMORY[0x1AF454348](v9);
  sub_1AE5DEBA8(v2);
  objc_autoreleasePoolPop(v10);
  sub_1AE4FCDE0();
}

void sub_1AE5DEBA8(uint64_t a1)
{
  unint64_t v1;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  type metadata accessor for Analytics();
  swift_beginAccess();
  v3 = *(void **)(a1 + 16);
  swift_bridgeObjectRetain();
  static Analytics.sendEventForProduction(eventName:prefix:eventPayload:)(36, 0xAE97F540, 0, 0, v3);
  swift_bridgeObjectRelease();
  if (qword_1ED319C70 != -1)
    swift_once();
  v4 = sub_1AE925B6C();
  sub_1AE4FB608(v4, (uint64_t)qword_1ED31AD58);
  swift_retain_n();
  v5 = sub_1AE925B54();
  v6 = sub_1AE9265E0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v35 = v8;
    *(_DWORD *)v7 = 136315395;
    sub_1AE520ED4(0xD000000000000024, 0x80000001AE97F540, (uint64_t)&v35, v9, v10, v11, v12, v13, v23, v1, v25, v27, v29, v31, v33, v35, v36, v37, v38,
      v39);
    v26 = v14;
    sub_1AE92676C();
    *(_WORD *)(v7 + 12) = 2081;
    sub_1AE53F468(0, (unint64_t *)&qword_1ED31C458);
    swift_bridgeObjectRetain();
    v15 = sub_1AE925C68();
    v17 = v16;
    swift_bridgeObjectRelease();
    sub_1AE520ED4(v15, v17, (uint64_t)&v35, v18, v19, v20, v21, v22, v7 + 14, v24, v26, v28, v30, v32, v34, v35, v36, v37, v38,
      v39);
    sub_1AE92676C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AE4F2000, v5, v6, "ECR sents CA event:%s, payload:%{private}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF454C78](v8, -1, -1);
    MEMORY[0x1AF454C78](v7, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1AE5DEE3C(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityResolutionCAEventLogger()
{
  return objc_opt_self();
}

uint64_t sub_1AE5DEE84(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  char v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  BOOL v17;
  _QWORD *v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD v33[4];

  v1 = isStackAllocationSafe;
  v33[3] = *MEMORY[0x1E0C80C00];
  v2 = *(_BYTE *)(isStackAllocationSafe + 32);
  v3 = (unint64_t)((1 << v2) + 63) >> 6;
  if ((v2 & 0x3Fu) > 0xD)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) == 0)
    {
      v19 = (_QWORD *)swift_slowAlloc();
      sub_1AE555CAC(0, v3, v19);
      v20 = 0;
      v21 = 0;
      v22 = v1 + 64;
      v23 = 1 << *(_BYTE *)(v1 + 32);
      if (v23 < 64)
        v24 = ~(-1 << v23);
      else
        v24 = -1;
      v25 = v24 & *(_QWORD *)(v1 + 64);
      v26 = (unint64_t)(v23 + 63) >> 6;
      while (1)
      {
        if (v25)
        {
          v27 = __clz(__rbit64(v25));
          v25 &= v25 - 1;
          v28 = v27 | (v21 << 6);
        }
        else
        {
          v29 = v21 + 1;
          if (__OFADD__(v21, 1))
            goto LABEL_54;
          if (v29 >= v26)
            goto LABEL_51;
          v30 = *(_QWORD *)(v22 + 8 * v29);
          ++v21;
          if (!v30)
          {
            v21 = v29 + 1;
            if (v29 + 1 >= v26)
              goto LABEL_51;
            v30 = *(_QWORD *)(v22 + 8 * v21);
            if (!v30)
            {
              v21 = v29 + 2;
              if (v29 + 2 >= v26)
                goto LABEL_51;
              v30 = *(_QWORD *)(v22 + 8 * v21);
              if (!v30)
              {
                v31 = v29 + 3;
                if (v31 >= v26)
                  goto LABEL_51;
                v30 = *(_QWORD *)(v22 + 8 * v31);
                if (!v30)
                {
                  while (1)
                  {
                    v21 = v31 + 1;
                    if (__OFADD__(v31, 1))
                      goto LABEL_56;
                    if (v21 >= v26)
                      break;
                    v30 = *(_QWORD *)(v22 + 8 * v21);
                    ++v31;
                    if (v30)
                      goto LABEL_46;
                  }
LABEL_51:
                  v32 = sub_1AE73DBA0((uint64_t)v19, v3, v20);
                  MEMORY[0x1AF454C78](v19, -1, -1);
                  return v32;
                }
                v21 = v31;
              }
            }
          }
LABEL_46:
          v25 = (v30 - 1) & v30;
          v28 = __clz(__rbit64(v30)) + (v21 << 6);
        }
        if (swift_weakLoadStrong())
        {
          swift_release();
          *(_QWORD *)((char *)v19 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
          v17 = __OFADD__(v20++, 1);
          if (v17)
          {
            __break(1u);
            goto LABEL_51;
          }
        }
      }
    }
  }
  v33[1] = v33;
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v4 = (_QWORD *)((char *)v33 - ((8 * v3 + 15) & 0x3FFFFFFFFFFFFFF0));
  sub_1AE555CAC(0, v3, v4);
  v5 = 0;
  v6 = 0;
  v7 = v1 + 64;
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
    }
    else
    {
      v14 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
      if (v14 >= v11)
        return sub_1AE73DBA0((uint64_t)v4, v3, v5);
      v15 = *(_QWORD *)(v7 + 8 * v14);
      ++v6;
      if (!v15)
      {
        v6 = v14 + 1;
        if (v14 + 1 >= v11)
          return sub_1AE73DBA0((uint64_t)v4, v3, v5);
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
        {
          v6 = v14 + 2;
          if (v14 + 2 >= v11)
            return sub_1AE73DBA0((uint64_t)v4, v3, v5);
          v15 = *(_QWORD *)(v7 + 8 * v6);
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v11)
              return sub_1AE73DBA0((uint64_t)v4, v3, v5);
            v15 = *(_QWORD *)(v7 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                v6 = v16 + 1;
                if (__OFADD__(v16, 1))
                  break;
                if (v6 >= v11)
                  return sub_1AE73DBA0((uint64_t)v4, v3, v5);
                v15 = *(_QWORD *)(v7 + 8 * v6);
                ++v16;
                if (v15)
                  goto LABEL_21;
              }
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
            }
            v6 = v16;
          }
        }
      }
LABEL_21:
      v10 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v6 << 6);
    }
    if (swift_weakLoadStrong())
    {
      swift_release();
      *(_QWORD *)((char *)v4 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v17 = __OFADD__(v5++, 1);
      if (v17)
        break;
    }
  }
  __break(1u);
  return sub_1AE73DBA0((uint64_t)v4, v3, v5);
}

void sub_1AE5DF248()
{
  uint64_t v0;

  v0 = swift_retain();
  sub_1AE81B340(v0);
  swift_release();
  swift_release();
  sub_1AE4FE870();
}

uint64_t sub_1AE5DF28C()
{
  sub_1AE5DF248();
  return swift_deallocClassInstance();
}

void sub_1AE5DF2AC()
{
  uint64_t v0;

  sub_1AE4FFF98();
  v0 = sub_1AE4F66E0();
  sub_1AE81B470(v0);
  swift_release();
  sub_1AE4FE870();
}

uint64_t sub_1AE5DF2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v8;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(os_unfair_lock_s **)(v5 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1AE4F66E0();
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  v8 = *(_QWORD *)(v5 + 16);
  swift_retain();
  sub_1AE5DF3B4((uint64_t)&v8, a1, a2);
  swift_release();
  os_unfair_lock_unlock(v6);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1AE5DF3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[4];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v5 = swift_retain();
  sub_1AE655050(v5, a2, a3, v6, v7, v8, v9, v10, v22, v24[0]);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (qword_1ED319C70 != -1)
    swift_once();
  v11 = sub_1AE925B6C();
  sub_1AE4FB608(v11, (uint64_t)qword_1ED31AD58);
  swift_bridgeObjectRetain_n();
  v12 = sub_1AE925B54();
  v13 = sub_1AE9265E0();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v24[0] = v15;
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain();
    sub_1AE520ED4(a2, a3, (uint64_t)v24, v16, v17, v18, v19, v20, v23, v24[0], v24[1], v24[2], v24[3], v25, v26, v27, v28, v29, v30,
      v31);
    v25 = v21;
    sub_1AE92676C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AE4F2000, v12, v13, "EntityResolutionHandlerPool: cached for %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF454C78](v15, -1, -1);
    MEMORY[0x1AF454C78](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1AE5DF5B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4FFF98();
  v2 = sub_1AE4F66E0();
  sub_1AE81B3C4(v2, v1, v0);
  return swift_release();
}

uint64_t sub_1AE5DF5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_retain();
  sub_1AE5DF2AC();
  v6 = v5;
  swift_release();
  result = swift_release();
  if (!v6)
  {
    type metadata accessor for EntityRerankerHandler();
    result = sub_1AE5D8CB8(a1, a2);
    if (!v2)
    {
      swift_retain();
      sub_1AE5DF2F0(a1, a2);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1AE5DF6B4()
{
  sub_1AE4F66E0();
  sub_1AE5DF5B0();
  return swift_release();
}

void sub_1AE5DF6F4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  __int128 v9;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;
  id v13;
  __int128 v14;
  uint64_t v15;

  v2 = v1;
  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v15 = MEMORY[0x1E0DEE9D8];
      sub_1AE521B44();
      if (v4 < 0)
        break;
      v5 = 0;
      v6 = v15;
      while (v4 != v5)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v7 = (id)MEMORY[0x1AF453B80](v5, a1);
        else
          v7 = *(id *)(a1 + 8 * v5 + 32);
        v8 = v7;
        v13 = v7;
        sub_1AE5E0B44(&v13, &v12, (unint64_t *)&v14);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_release();

          return;
        }
        v2 = 0;

        v9 = v14;
        v15 = v6;
        v10 = *(_QWORD *)(v6 + 16);
        if (v10 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          v11 = v14;
          sub_1AE521B44();
          v9 = v11;
          v6 = v15;
        }
        ++v5;
        *(_QWORD *)(v6 + 16) = v10 + 1;
        *(_OWORD *)(v6 + 16 * v10 + 32) = v9;
        if (v4 == v5)
          goto LABEL_13;
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      v4 = sub_1AE926AD8();
      swift_bridgeObjectRelease();
      if (!v4)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AE5DF8B0@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  os_log_t log;
  os_log_t loga;
  os_log_t logb;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unsigned __int16 v117;
  unsigned __int8 v118;
  uint64_t v119;

  result = sub_1AE5E0018();
  if (!v2)
  {
    v5 = result;
    v6 = sub_1AE5E080C();
    v105 = a1;
    v7 = objc_msgSend(v1, sel_mode);
    if ((unint64_t)v7 >= 7)
      v8 = 0;
    else
      v8 = (char)v7;
    v109 = v8;
    sub_1AE5E08C4((uint64_t)&v113);
    v10 = v113;
    v9 = v114;
    v11 = v115;
    v12 = v116;
    v13 = v117 | (v118 << 16);
    sub_1AE5E0988();
    v112 = v14;
    if (qword_1ED319C70 != -1)
      swift_once();
    v15 = sub_1AE925B6C();
    sub_1AE4FB608(v15, (uint64_t)qword_1ED31AD58);
    swift_bridgeObjectRetain();
    v16 = v1;
    sub_1AE4F6708();
    v17 = sub_1AE4F9324();
    sub_1AE5E1ED4(v17, v18, v19, v20, v21);
    sub_1AE4FB75C();
    v108 = v16;
    sub_1AE4F6708();
    swift_bridgeObjectRetain();
    v22 = sub_1AE50A404();
    sub_1AE5E1ED4(v22, v23, v24, v12, v13);
    sub_1AE4FB75C();
    v25 = sub_1AE925B54();
    HIDWORD(v91) = sub_1AE9265E0();
    v102 = v5;
    if (os_log_type_enabled(v25, BYTE4(v91)))
    {
      log = v25;
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v119 = v27;
      *(_DWORD *)v26 = 136316674;
      v28 = sub_1AE5E1EE8(v108, (SEL *)&selRef_text);
      if (!v29)
        v28 = 4271950;
      sub_1AE4FEC78(v28, v29, v30, v31, v32, v33, v34, v35, v77, v80, v83, v86, (uint64_t)log, v91, v10, v11, 0, v9, v5,
        v105);
      v113 = v36;
      sub_1AE5054E4();

      sub_1AE4F66E8();
      *(_WORD *)(v26 + 12) = 2080;
      v37 = v5;
      if (v5)
      {
        v38 = v6;
        v39 = MEMORY[0x1AF453400](v37, &type metadata for EntityClass);
      }
      else
      {
        v38 = v6;
        v39 = 0;
        v40 = 0;
      }
      v113 = v39;
      v114 = v40;
      sub_1AE501548(&qword_1ED30FC40);
      v49 = sub_1AE509470();
      sub_1AE520ED4(v49, v50, (uint64_t)&v119, v51, v52, v53, v54, v55, v78, v81, v84, v27, (uint64_t)loga, v92, v94, v96, v98, v100, v103,
        v106);
      v113 = v56;
      sub_1AE5054E4();
      sub_1AE4F6824();
      sub_1AE4F6710();
      *(_WORD *)(v26 + 22) = 2080;
      if (v38)
      {
        v57 = sub_1AE501548(&qword_1EED9D160);
        v58 = MEMORY[0x1AF453400](v38, v57);
      }
      else
      {
        v58 = 0;
        v59 = 0;
      }
      v113 = v58;
      v114 = v59;
      v60 = sub_1AE509470();
      sub_1AE520ED4(v60, v61, (uint64_t)&v119, v62, v63, v64, v65, v66, v79, v82, v85, v87, (uint64_t)logb, v93, v95, v97, v99, v101, v104,
        v107);
      v113 = v67;
      sub_1AE5054E4();
      sub_1AE4F6824();
      sub_1AE4F66E8();
      *(_WORD *)(v26 + 32) = 2080;
      __asm { BR              X10 }
    }
    sub_1AE4F6824();
    sub_1AE4F6824();

    v41 = sub_1AE50A404();
    sub_1AE5741F8(v41, v42, v43, v12, v13);
    v44 = sub_1AE4F9324();
    sub_1AE5741F8(v44, v45, v46, v47, v48);

    sub_1AE4F6824();
    v68 = sub_1AE5E1EE8(v108, (SEL *)&selRef_text);
    v110 = v69;
    v111 = v68;
    LOBYTE(v119) = v109;
    v113 = v10;
    v114 = v9;
    v115 = v11;
    v116 = v12;
    v118 = BYTE2(v13);
    v117 = v13;
    v70 = sub_1AE50A404();
    sub_1AE5E1ED4(v70, v71, v72, v12, v13);
    v73 = v9;
    v74 = v10;
    v75 = sub_1AE5E1EE8(v108, (SEL *)&selRef_kgq);
    sub_1AE5EAC44(v111, v110, v102, v6, (uint64_t)&v119, (uint64_t)&v113, v112, v75, v76, objc_msgSend(v108, sel_includeFeatures), objc_msgSend(v108, sel_includeInferredNames));
    return sub_1AE5741F8(v74, v73, v11, v12, v13);
  }
  return result;
}

uint64_t sub_1AE5E0018()
{
  void *v0;
  char *v1;
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t *v28;
  uint64_t v29;
  char v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char **v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  char **v49;
  char v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char __s2[8];
  char __s2a;
  char *v81;
  char *v82;
  char v83;
  uint64_t v84;

  v3 = (uint64_t *)v1;
  v4 = sub_1AE5E1DF4(v0);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = *(_QWORD *)(v4 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v68 = (uint64_t)v1;
  v84 = MEMORY[0x1E0DEE9D8];
  sub_1AE521B10();
  v7 = 0;
  v8 = v84;
  v67 = v5;
  v70 = v5 + 32;
  v71 = 162;
  v78 = 2889;
  v77 = 1336;
  v69 = v6;
  while (1)
  {
    v9 = (uint64_t *)(v70 + 16 * v7);
    v11 = *v9;
    v10 = v9[1];
    v76 = v7;
    if ((v10 & 0x1000000000000000) != 0 || !(v10 & 0x2000000000000000 | v11 & 0x1000000000000000))
    {
      sub_1AE4FFFAC();
      sub_1AE501548(&qword_1EED98B20);
      sub_1AE50AAAC();
      v68 = (uint64_t)v1;
      sub_1AE4F6710();
      v12 = v71;
    }
    else
    {
      v12 = v71;
      if ((v10 & 0x2000000000000000) != 0)
      {
        *(_QWORD *)__s2 = *v9;
        if (v71 < 0)
          goto LABEL_132;
        if (v71)
        {
          v73 = *v9;
          v18 = v8;
          v19 = _Records_GDEntityClass_records;
          v2 = _Records_GDEntityClass_labels;
          v20 = swift_bridgeObjectRetain_n();
          v28 = (uint64_t *)(v19 + 16);
          v29 = v71;
          while (1)
          {
            if (!v19)
              goto LABEL_116;
            v3 = (uint64_t *)*v28;
            if (*v28 >= v78)
              break;
            if (!v2)
              goto LABEL_118;
            v20 = sub_1AE5E1F50(v20, v21, v22, v23, v24, v25, v26, v27, v64, v65, v66, v67, v68, v69, v70, v71, v73, v76, v77,
                    v78,
                    __s2[0]);
            if (!v20)
            {
              v30 = 0;
              v31 = (char *)*(v28 - 1);
              goto LABEL_29;
            }
            v28 += 3;
            if (!--v29)
            {
              sub_1AE507DC8();
LABEL_29:
              v8 = v18;
              v11 = v73;
              goto LABEL_30;
            }
          }
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          result = sub_1AE926AA8();
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
        sub_1AE4FFFAC();
        sub_1AE507DC8();
LABEL_30:
        v81 = v31;
        v82 = (char *)v3;
        v83 = v30;
        sub_1AE4F6710();
      }
      else
      {
        if ((v11 & 0x1000000000000000) != 0 || sub_1AE5E1F44())
        {
          if (v71 < 0)
            goto LABEL_132;
          v13 = v8;
          if (v71)
          {
            v72 = v11;
            v3 = (uint64_t *)_Records_GDEntityClass_records;
            v14 = _Records_GDEntityClass_labels;
            sub_1AE4FFFAC();
            v15 = v3 + 2;
            while (1)
            {
              if (!v3)
                goto LABEL_117;
              v2 = (char *)*v15;
              if (*v15 >= v78)
                goto LABEL_109;
              if (!v14)
                goto LABEL_119;
              if (!sub_1AE509928())
                break;
              v15 += 3;
              if (!--v12)
              {
                sub_1AE4FD120();
LABEL_32:
                v8 = v13;
                v12 = v71;
                v11 = v72;
                goto LABEL_33;
              }
            }
            v16 = 0;
            v17 = (char *)*(v15 - 1);
            goto LABEL_32;
          }
        }
        else
        {
          if (v71 < 0)
            goto LABEL_132;
          if (v71)
          {
            v52 = _Records_GDEntityClass_records;
            v75 = _Records_GDEntityClass_labels;
            sub_1AE4FFFAC();
            v3 = (uint64_t *)(v52 + 16);
            v53 = v71;
            while (v52)
            {
              v2 = (char *)*v3;
              if (*v3 >= v78)
                goto LABEL_126;
              if (!v75)
                goto LABEL_131;
              if (!strcmp(&v2[(_QWORD)v75], 0))
              {
                v16 = 0;
                v17 = (char *)*(v3 - 1);
                goto LABEL_33;
              }
              v17 = 0;
              v2 = 0;
              v3 += 3;
              v16 = 1;
              if (!--v53)
                goto LABEL_33;
            }
            goto LABEL_130;
          }
        }
        sub_1AE4FFFAC();
        sub_1AE4FD120();
LABEL_33:
        v81 = v17;
        v82 = v2;
        v83 = v16;
        sub_1AE4F6710();
      }
    }
    if ((v83 & 1) != 0)
      break;
    if ((uint64_t)v81 >= v77)
      goto LABEL_112;
    if ((uint64_t)v82 >= v78)
      goto LABEL_113;
    if (!_Records_GDEntityClass_classIds[0])
      goto LABEL_124;
    v37 = sub_1AE508F54();
    if (!_Records_GDEntityClass_labels)
      goto LABEL_125;
LABEL_97:
    v57 = v37;
    v58 = v38;
    v2 = (char *)sub_1AE925F8C();
    v60 = v59;
    sub_1AE4F6710();
    v84 = v8;
    v61 = *(_QWORD *)(v8 + 16);
    if (v61 >= *(_QWORD *)(v8 + 24) >> 1)
      sub_1AE521B10();
    v7 = v76 + 1;
    *(_QWORD *)(v8 + 16) = v61 + 1;
    v62 = v8 + 40 * v61;
    *(_QWORD *)(v62 + 32) = v57;
    *(_QWORD *)(v62 + 40) = v58;
    *(_QWORD *)(v62 + 48) = v2;
    *(_QWORD *)(v62 + 56) = v60;
    *(_BYTE *)(v62 + 64) = (_BYTE)v3;
    if (v76 + 1 == v69)
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  if ((v10 & 0x1000000000000000) != 0 || !(v10 & 0x2000000000000000 | v11 & 0x1000000000000000))
  {
    sub_1AE4FB764();
    sub_1AE501548(&qword_1EED98B20);
    sub_1AE50AAAC();
    v68 = (uint64_t)v1;
LABEL_91:
    sub_1AE4F6710();
    goto LABEL_92;
  }
  if ((v10 & 0x2000000000000000) != 0)
  {
    __s2a = v11;
    if (v12 < 0)
      goto LABEL_132;
    if (v12)
    {
      v74 = v11;
      v39 = _Records_GDEntityClass_records;
      v40 = _Records_GDEntityClass_classIds[0];
      v41 = sub_1AE4FB764();
      v49 = (char **)(v39 + 16);
      while (v39)
      {
        v3 = (uint64_t *)*(v49 - 1);
        if ((uint64_t)v3 >= v77)
          goto LABEL_110;
        if (!v40)
          goto LABEL_122;
        v41 = sub_1AE5E1F50(v41, v42, v43, v44, v45, v46, v47, v48, v64, v65, v66, v67, v68, v69, v70, v71, v74, v76, v77,
                v78,
                __s2a);
        if (!v41)
        {
          v50 = 0;
          v51 = *v49;
          goto LABEL_65;
        }
        v49 += 3;
        if (!--v12)
        {
          sub_1AE5081D0();
          goto LABEL_65;
        }
      }
      goto LABEL_120;
    }
    sub_1AE4FB764();
    sub_1AE5081D0();
LABEL_65:
    v81 = (char *)v3;
    v82 = v51;
    v83 = v50;
    sub_1AE4F6710();
LABEL_92:
    if ((v83 & 1) != 0)
    {
      sub_1AE92691C();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      sub_1AE5716CC();
      swift_allocError();
      *(_QWORD *)v63 = 0xD00000000000001ALL;
      *(_QWORD *)(v63 + 8) = 0x80000001AE97F730;
      *(_BYTE *)(v63 + 16) = 2;
      swift_willThrow();
      sub_1AE4F6710();
      v8 = v84;
      swift_bridgeObjectRelease();
      swift_release();
      return v8;
    }
    if ((uint64_t)v81 >= v77)
      goto LABEL_114;
    if ((uint64_t)v82 >= v78)
      goto LABEL_115;
    if (!_Records_GDEntityClass_classIds[0])
      goto LABEL_127;
    v37 = sub_1AE508F54();
    if (!_Records_GDEntityClass_labels)
      goto LABEL_128;
    goto LABEL_97;
  }
  if ((v11 & 0x1000000000000000) != 0 || sub_1AE5E1F44())
  {
    if (v12 < 0)
      goto LABEL_132;
    if (v12)
    {
      v32 = v8;
      v3 = (uint64_t *)_Records_GDEntityClass_records;
      v33 = _Records_GDEntityClass_classIds[0];
      sub_1AE4FB764();
      v34 = (char **)(v3 + 2);
      while (1)
      {
        if (!v3)
          goto LABEL_121;
        v2 = *(v34 - 1);
        if ((uint64_t)v2 >= v77)
          goto LABEL_111;
        if (!v33)
          goto LABEL_123;
        if (!sub_1AE509928())
          break;
        v34 += 3;
        if (!--v12)
        {
          sub_1AE509E94();
LABEL_67:
          v8 = v32;
          goto LABEL_90;
        }
      }
      v35 = 0;
      v36 = *v34;
      goto LABEL_67;
    }
LABEL_89:
    sub_1AE4FB764();
    sub_1AE509E94();
LABEL_90:
    v81 = v2;
    v82 = v36;
    v83 = v35;
    goto LABEL_91;
  }
  if (v12 < 0)
    goto LABEL_132;
  if (!v12)
    goto LABEL_89;
  v54 = _Records_GDEntityClass_records;
  v1 = _Records_GDEntityClass_classIds[0];
  result = sub_1AE4FB764();
  v3 = (uint64_t *)(v54 + 16);
  v56 = v12;
  while (v54)
  {
    v2 = (char *)*(v3 - 1);
    if ((uint64_t)v2 >= v77)
      goto LABEL_129;
    if (!v1)
      goto LABEL_133;
    result = strcmp(&v2[(_QWORD)v1], 0);
    if (!(_DWORD)result)
    {
      v35 = 0;
      v36 = (char *)*v3;
      goto LABEL_90;
    }
    v2 = 0;
    v36 = 0;
    v3 += 3;
    v35 = 1;
    if (!--v56)
      goto LABEL_90;
  }
LABEL_134:
  __break(1u);
  return result;
}

uint64_t sub_1AE5E080C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0;
  v2 = sub_1AE5E1E48(v0, (SEL *)&selRef_spans, &qword_1EED9D158);
  if (!v2)
    return 0;
  v3 = v2;
  sub_1AE5E1EE8(v1, (SEL *)&selRef_text);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_1AE5DF6F4(v3);
  v6 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

double sub_1AE5E08C4@<D0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  double result;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;

  v3 = objc_msgSend(v1, sel_constraint);
  if (v3 == (id)2)
  {
    static EntityPredicate.phoneNumber.getter();
LABEL_7:
    result = *(double *)&v8;
    v5 = v9;
    v6 = v10;
    v7 = v11;
    *(_OWORD *)a1 = v8;
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 34) = 0;
    *(_WORD *)(a1 + 32) = v7;
    return result;
  }
  if (v3 == (id)1)
  {
    sub_1AE5C6870(0x23uLL, (uint64_t)&v8);
    goto LABEL_7;
  }
  if (v3)
    return sub_1AE5E0E78(v1, a1);
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 34) = -1;
  *(_WORD *)(a1 + 32) = 0;
  return result;
}

void sub_1AE5E0988()
{
  void *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;

  v1 = sub_1AE5E1E48(v0, (SEL *)&selRef_sourceIDs, &qword_1EED9D168);
  if (!v1)
    return;
  v2 = v1;
  if (v1 >> 62)
  {
    v3 = sub_1AE926AD8();
    if (v3)
      goto LABEL_4;
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3)
    goto LABEL_12;
LABEL_4:
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1AE521B78();
  if ((v3 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v17 = v2 & 0xC000000000000001;
    v5 = v2;
    do
    {
      if (v17)
        v6 = (id)MEMORY[0x1AF453B80](v4, v2);
      else
        v6 = *(id *)(v2 + 8 * v4 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_value, v17);
      v9 = sub_1AE925E3C();
      v11 = v10;

      v12 = sub_1AE5E1EE8(v7, (SEL *)&selRef_source);
      v14 = v13;

      v15 = *(_QWORD *)(v18 + 16);
      if (v15 >= *(_QWORD *)(v18 + 24) >> 1)
        sub_1AE521B78();
      ++v4;
      *(_QWORD *)(v18 + 16) = v15 + 1;
      v16 = (_QWORD *)(v18 + 32 * v15);
      v16[4] = v9;
      v16[5] = v11;
      v16[6] = v12;
      v16[7] = v14;
      v2 = v5;
    }
    while (v3 != v4);
    goto LABEL_12;
  }
  __break(1u);
}

unint64_t sub_1AE5E0B44@<X0>(id *a1@<X0>, uint64_t *a2@<X3>, unint64_t *a3@<X8>)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  unint64_t v10;
  char v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *a1;
  v5 = objc_msgSend(*a1, sel_rangeValue);
  v7 = v6;
  result = sub_1AE925F44();
  if ((v9 & 1) != 0)
    goto LABEL_6;
  if (__OFADD__(v5, v7))
  {
    __break(1u);
    return result;
  }
  v10 = result;
  result = sub_1AE925F44();
  if ((v11 & 1) != 0)
  {
LABEL_6:
    sub_1AE92691C();
    sub_1AE925F74();
    v12 = objc_msgSend(v4, sel_description);
    sub_1AE925E3C();

    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    sub_1AE925F20();
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (result >> 14 < v10 >> 14)
  {
    sub_1AE92691C();
    sub_1AE925F74();
    sub_1AE926A48();
    sub_1AE925F74();
    sub_1AE926A48();
LABEL_7:
    sub_1AE5716CC();
    v13 = swift_allocError();
    *(_QWORD *)v14 = 0;
    *(_QWORD *)(v14 + 8) = 0xE000000000000000;
    *(_BYTE *)(v14 + 16) = 2;
    result = swift_willThrow();
    *a2 = v13;
    return result;
  }
  *a3 = v10;
  a3[1] = result;
  return result;
}

double sub_1AE5E0E78@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  id v18;
  unint64_t v19[11];

  if (qword_1ED319C70 != -1)
    swift_once();
  v4 = sub_1AE925B6C();
  sub_1AE4FB608(v4, (uint64_t)qword_1ED31AD58);
  v5 = a1;
  v6 = sub_1AE925B54();
  v7 = sub_1AE9265EC();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v19[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v18 = objc_msgSend(v5, sel_constraint);
    type metadata accessor for GDCandidateConstraint(0);
    v10 = sub_1AE925E90();
    sub_1AE520ED4(v10, v11, (uint64_t)v19, v12, v13, v14, v15, v16, (uint64_t)v18, v19[0], v19[1], v19[2], v19[3], v19[4], v19[5], v19[6], v19[7], v19[8], v19[9],
      v19[10]);
    sub_1AE92676C();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AE4F2000, v6, v7, "Unknown constraint: %s. Ignored.", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF454C78](v9, -1, -1);
    MEMORY[0x1AF454C78](v8, -1, -1);

  }
  else
  {

  }
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_BYTE *)(a2 + 34) = -1;
  *(_WORD *)(a2 + 32) = 0;
  return result;
}

unint64_t sub_1AE5E1050()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  unint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  uint64_t v12;
  _BYTE v13[72];
  _BYTE __dst[72];

  v1 = v0;
  sub_1AE926F1C();
  sub_1AE5E1EE8(v0, (SEL *)&selRef_text);
  if (v2)
  {
    sub_1AE926EE0();
    sub_1AE925F14();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE926EE0();
  }
  v3 = sub_1AE5E1DF4(v0);
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      v5 = v3 + 40;
      do
      {
        sub_1AE4F6730();
        sub_1AE925F14();
        swift_bridgeObjectRelease();
        v5 += 16;
        --v4;
      }
      while (v4);
    }
    swift_bridgeObjectRelease();
  }
  result = sub_1AE5E1E48(v0, (SEL *)&selRef_spans, &qword_1EED9D158);
  if (!result)
    goto LABEL_19;
  v7 = result;
  if (result >> 62)
  {
    result = sub_1AE926AD8();
    v8 = result;
    if (result)
      goto LABEL_12;
  }
  else
  {
    v8 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_12:
      if (v8 < 1)
      {
        __break(1u);
        return result;
      }
      for (i = 0; i != v8; ++i)
      {
        if ((v7 & 0xC000000000000001) != 0)
          v10 = (id)MEMORY[0x1AF453B80](i, v7);
        else
          v10 = *(id *)(v7 + 8 * i + 32);
        v11 = v10;
        sub_1AE9266F4();

      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_19:
  sub_1AE5E1EE8(v1, (SEL *)&selRef_kgq);
  if (v12)
  {
    sub_1AE925F14();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v1, sel_mode);
  sub_1AE926ED4();
  memcpy(__dst, v13, sizeof(__dst));
  return sub_1AE926F04();
}

id sub_1AE5E123C()
{
  uint64_t v0;

  return objc_msgSend(objc_allocWithZone((Class)GDEntityFeatures), sel_initWithCandidateNameScore_candidateCommunicationScore_candidateOrganizationScore_candidateLocationScore_candidateEventLocationScore_candidateEventNameScore_topicScore_messagePopularityGivenTimeOfDay_callPopularityGivenTimeOfDay_facetimePopularityGivenTimeOfDay_timeOfDayGivenMessageWithEntity_timeOfDayGivenCallWithEntity_timeOfDayGivenFacetimeWithEntity_messageWithEntityGivenTimeOfDay_callWithEntityGivenTimeOfDay_facetimeWithEntityGivenTimeOfDay_messagePopularityGivenCoarseTimeOfDay_callPopularityGivenCoarseTimeOfDay_facetimePopularityGivenCoarseTimeOfDay_coarseTimeOfDayGivenMessageWithEntity_coarseTimeOfDayGivenCallWithEntity_coarseTimeOfDayGivenFacetimeWithEntity_messageWithEntityGivenCoarseTimeOfDay_callWithEntityGivenCoarseTimeOfDay_facetimeWithEntityGivenCoarseTimeOfDay_messagePopularityGivenDayOfWeek_callPopularityGivenDayOfWeek_facetimePopularityGivenDayOfWeek_dayOfWeekGivenMessageWithEntity_dayOfWeekGivenCallWithEntity_dayOfWeekGivenFacetimeWithEntity_messageWithEntityGivenDayOfWeek_callWithEntityGivenDayOfWeek_facetimeWithEntityGivenDayOfWeek_messagePopularityGivenFocusMode_callPopularityGivenFocusMode_facetimePopularityGivenFocusMode_focusModeGivenMessageWithEntity_focusModeGivenCallWithEntity_focusModeGivenFacetimeWithEntity_messageWithEntityGivenFocusMode_callWithEntityGivenFocusMode_facetimeWithEntityGivenFocusMode_messagePopularityGivenLOI_callPopularityGivenLOI_facetimePopularityGivenLOI_LOIGivenMessageWithEntity_LOIGivenCallWithEntity_LOIGivenFacetimeWithEntity_messageWithEntityGivenLOI_callWithEntityGivenLOI_facetimeWithEntityGivenLOI_messagePopularityGivenSpecificGeoHash_callPopularityGivenSpecificGeoHash_facetimePopularityGivenSpecificGeoHash_specificGeoHashGivenMessageWithEntity_specificGeoHashGivenCallWithEntity_specificGeoHashGivenFacetimeWithEntity_messageWithEntityGivenSpecificGeoHash_callWithEntityGivenSpecificGeoHash_facetimeWithEntityGivenSpecificGeoHash_messagePopularityGivenCoarseGeoHash_callPopularityGivenCoarseGeoHash_facetimePopularityGivenCoarseGeoHash_coarseGeoHashGivenMessageWithEntity_coarseGeoHashGivenCallWithEntity_coarseGeoHashGivenFacetimeWithEntity_messageWithEntityGivenCoarseGeoHash_callWithEntityGivenCoarseGeoHash_facetimeWithEntityGivenCoarseGeoHash_messagePopularityGivenLargeGeoHash_callPopularityGivenLargeGeoHash_facetimePopularityGivenLargeGeoHash_largeGeoHashGivenMessageWithEntity_largeGeoHashGivenCallWithEntity_largeGeoHashGivenFacetimeWithEntity_messageWithEntityGivenLargeGeoHash_callWithEntityGivenLargeGeoHash_facetimeWithEntityGivenLargeGeoHash_messagePopularityGivenMicroLocation_callPopularityGivenMicroLocation_facetimePopularityGivenMicroLocation_microLocationGivenMessageWithEntity_microLocationGivenCallWithEntity_microLocationGivenFacetimeWithEntity_messageWithEntityGivenMicroLocation_callWithEntityGivenMicroLocation_facetimeWithEntityGivenMicroLocation_messagePopularityGivenMotionState_callPopularityGivenMotionState_facetimePopularityGivenMotionState_motionStateGivenMessageWithEntity_motionStateGivenCallWithEntity_motionStateGivenFacetimeWithEntity_messageWithEntityGivenMotionState_callWithEntityGivenMotionState_facetimeWithEntityGivenMotionState_messagePopularityGivenWiFi_callPopularityGivenWiFi_facetimePopularityGivenWiFi_wiFiGivenMessageWithEntity_wiFiGivenCallWithEntity_wiFiGivenFacetimeWithEntity_messageWithEntityGivenWiFi_callWithEntityGivenWiFi_facetimeWithEntityGivenWiFi_messagePopularityGivenSequence_callPopularityGivenSequence_facetimePopularityGivenSequence_sequenceGivenMessageWithEntity_sequenceGivenCallWithEntity_sequenceGivenFacetimeWithEntity_lastExecutionAge_medianTimeIntervalBetweenExecution_dailyDoseL1Error_dailyDoseL2Error_shortTermTrendingPopularity_trendingPopularity_longTermTrendingPopularity_locationLastExecutationAge_locationPopularityGivenSpecificGeoHash_locationTrendingPopularity_, *(unsigned int *)(v0 + 896), *(unsigned int *)(v0 + 900), *(unsigned int *)(v0 + 904), *(unsigned int *)(v0 + 944), *(double *)v0, *(double *)(v0 + 8), *(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48), *(double *)(v0 + 56), *(_OWORD *)(v0 + 64), *(_OWORD *)(v0 + 80), *(_OWORD *)(v0 + 96), *(_OWORD *)(v0 + 112), *(_OWORD *)(v0 + 128),
           *(_OWORD *)(v0 + 144),
           *(_OWORD *)(v0 + 160),
           *(_OWORD *)(v0 + 176),
           *(_OWORD *)(v0 + 192),
           *(_OWORD *)(v0 + 208),
           *(_OWORD *)(v0 + 224),
           *(_OWORD *)(v0 + 240),
           *(_OWORD *)(v0 + 256),
           *(_OWORD *)(v0 + 272),
           *(_OWORD *)(v0 + 288),
           *(_OWORD *)(v0 + 304),
           *(_OWORD *)(v0 + 320),
           *(_QWORD *)(v0 + 336),
           *(_QWORD *)(v0 + 344),
           *(_QWORD *)(v0 + 352),
           *(_QWORD *)(v0 + 360),
           *(_QWORD *)(v0 + 368),
           *(_QWORD *)(v0 + 376),
           *(_QWORD *)(v0 + 384),
           *(_QWORD *)(v0 + 392),
           *(_QWORD *)(v0 + 400),
           *(_QWORD *)(v0 + 408),
           *(_QWORD *)(v0 + 416),
           *(_QWORD *)(v0 + 424),
           *(_QWORD *)(v0 + 432),
           *(_QWORD *)(v0 + 440),
           *(_QWORD *)(v0 + 448));
}

id sub_1AE5E15E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v7;
  id v8;

  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v7 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithText_start_end_, v7, a3, a4);

  return v8;
}

id sub_1AE5E1670()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  char v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_BYTE *)(v0 + 72);
  if (*(_QWORD *)(v0 + 8))
  {
    v3 = *(_QWORD *)(v0 + 24);
    sub_1AE503560(0xFuLL, *(_QWORD *)(v0 + 16));
    sub_1AE503560(0xFuLL, v3);
    sub_1AE53F468(0, &qword_1ED30FCA8);
    sub_1AE508670();
    v4 = sub_1AE4FC7BC();
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)GDSpan), sel_init);
  }
  v5 = v4;
  if (v1)
  {
    v6 = *(_QWORD *)(v1 + 16);
    v7 = MEMORY[0x1E0DEE9D8];
    if (v6)
    {
      v17 = v2;
      v18 = MEMORY[0x1E0DEE9D8];
      sub_1AE4FB75C();
      sub_1AE52154C();
      v7 = v18;
      v8 = (uint64_t *)(v1 + 56);
      do
      {
        v10 = *(v8 - 1);
        v9 = *v8;
        v12 = *(_QWORD *)(v18 + 16);
        v11 = *(_QWORD *)(v18 + 24);
        sub_1AE4F6708();
        if (v12 >= v11 >> 1)
          sub_1AE52154C();
        *(_QWORD *)(v18 + 16) = v12 + 1;
        v13 = v18 + 16 * v12;
        *(_QWORD *)(v13 + 32) = v10;
        *(_QWORD *)(v13 + 40) = v9;
        v8 += 5;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
      v2 = v17;
    }
    if ((v2 & 1) != 0)
      goto LABEL_12;
LABEL_14:
    v14 = (void *)sub_1AE926370();
    goto LABEL_15;
  }
  v7 = MEMORY[0x1E0DEE9D8];
  if ((v2 & 1) == 0)
    goto LABEL_14;
LABEL_12:
  v14 = 0;
LABEL_15:
  v15 = objc_allocWithZone((Class)GDMention);
  return sub_1AE5E1BC4(v5, v7, v14);
}

void sub_1AE5E1818()
{
  uint64_t *v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  char v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  _BYTE __dst[968];
  _BYTE __src[976];
  _BYTE v24[984];

  v1 = *v0;
  v2 = *((double *)v0 + 1);
  v3 = *((double *)v0 + 2);
  v4 = *((double *)v0 + 3);
  v5 = *((double *)v0 + 4);
  v7 = v0[5];
  v6 = (id)v0[6];
  v8 = v0[7];
  v9 = v0[8];
  v11 = v0[10];
  v10 = v0[11];
  v12 = v0[12];
  sub_1AE5DA9AC((uint64_t)(v0 + 14), (uint64_t)v24);
  v13 = *((double *)v0 + 138);
  v14 = *((_BYTE *)v0 + 1112);
  if (v6)
  {
    v15 = objc_allocWithZone((Class)GDEntitySourceID);
    swift_bridgeObjectRetain();
    sub_1AE4F6708();
    v6 = sub_1AE5E1B34(v7, (uint64_t)v6, v8, v9);
  }
  v16 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v1);
  if (v16)
  {
    v17 = v16;
    if (v11)
    {
      sub_1AE4F6730();
      v18 = v10;
    }
    else
    {
      v18 = 0;
      v12 = 0;
    }
    sub_1AE5DA9AC((uint64_t)v24, (uint64_t)__src);
    if (sub_1AE5E1EB8((uint64_t)__src) == 1)
    {
      v19 = 0;
    }
    else
    {
      memcpy(__dst, __src, sizeof(__dst));
      v19 = sub_1AE5E123C();
    }
    v20 = (void *)sub_1AE926E74();
    v21 = objc_allocWithZone((Class)GDRankerItem);
    sub_1AE5E1C44(v17, v6, v2, v3, v4, v5, v13, v18, v12, v19, v20, v14);
  }
  else
  {

    __break(1u);
  }
}

id sub_1AE5E19D0()
{
  _QWORD *v0;
  id v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE v12[1128];
  uint64_t v13;

  v1 = (id)v0[1];
  v2 = (_QWORD *)v0[7];
  v3 = v0[10];
  if (v1)
  {
    v4 = v0[3];
    sub_1AE503560(0xFuLL, v0[2]);
    sub_1AE503560(0xFuLL, v4);
    sub_1AE53F468(0, &qword_1ED30FCA8);
    sub_1AE508670();
    v1 = sub_1AE4FC7BC();
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1AE4FB75C();
    sub_1AE9269DC();
    v7 = 32;
    do
    {
      memcpy(v12, (const void *)(v3 + v7), sizeof(v12));
      sub_1AE5E1818();
      sub_1AE9269B8();
      sub_1AE9269E8();
      sub_1AE9269F4();
      sub_1AE9269C4();
      v7 += 1128;
      --v5;
    }
    while (v5);
    v6 = v13;
    swift_bridgeObjectRelease();
  }
  if (v2 && v2[2])
  {
    v8 = v2[6];
    v9 = v2[7];
    sub_1AE4F6730();
  }
  else
  {
    v8 = 0;
    v9 = 0;
  }
  v10 = objc_allocWithZone((Class)GDRankerResult);
  return sub_1AE5E1D38(v1, v6, v8, v9);
}

id sub_1AE5E1B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v7 = (void *)sub_1AE925E18();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(v4, sel_initWithValue_source_, v6, v7);

  return v8;
}

id sub_1AE5E1BC4(void *a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v6;
  id v7;

  v6 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v3, sel_initWithSpan_entityClasses_score_, a1, v6, a3);

  return v7;
}

id sub_1AE5E1C44(void *a1, void *a2, double a3, double a4, double a5, double a6, double a7, uint64_t a8, uint64_t a9, void *a10, void *a11, char a12)
{
  void *v12;
  void *v13;
  void *v24;
  id v25;

  v13 = v12;
  if (a9)
  {
    v24 = (void *)sub_1AE925E18();
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = 0;
  }
  v25 = objc_msgSend(v13, sel_initWithEntityID_sourceID_entityClass_features_score_nameScore_contextualScore_entityRelevance_entityRelevanceInferenceEventId_confirmationConfidence_isRelationshipMatch_, a1, a2, v24, a10, a11, a12 & 1, a3, a4, a5, a6, a7);

  return v25;
}

id sub_1AE5E1D38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  void *v8;
  id v9;

  sub_1AE53F468(0, &qword_1ED30FC60);
  v7 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v8 = (void *)sub_1AE925E18();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(v4, sel_initWithSpan_rankedEntities_entityClass_, a1, v7, v8);

  return v9;
}

uint64_t sub_1AE5E1DF4(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_entityClassFilter);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1AE9261CC();

  return v3;
}

uint64_t sub_1AE5E1E48(void *a1, SEL *a2, unint64_t *a3)
{
  id v4;
  void *v5;
  uint64_t v6;

  v4 = objc_msgSend(a1, *a2);
  if (!v4)
    return 0;
  v5 = v4;
  sub_1AE53F468(0, a3);
  v6 = sub_1AE9261CC();

  return v6;
}

uint64_t sub_1AE5E1EB8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 968))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1AE5E1ED4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (BYTE2(a5) != 255)
    return sub_1AE574158(result, a2, a3, a4, a5, SBYTE2(a5));
  return result;
}

uint64_t sub_1AE5E1EE8(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_1AE925E3C();

  return v4;
}

uint64_t sub_1AE5E1F44()
{
  return sub_1AE926994();
}

uint64_t sub_1AE5E1F50(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char __s2)
{
  uint64_t v21;
  uint64_t v22;

  return strcmp((const char *)(v22 + v21), &__s2);
}

uint64_t sub_1AE5E1F5C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AE5E1F98 + 4 * byte_1AE9400A0[a1]))(0xD000000000000012, 0x80000001AE975110);
}

unint64_t sub_1AE5E1F98()
{
  return 0xD00000000000001BLL;
}

void sub_1AE5E1FE0()
{
  JUMPOUT(0x1AE5E1FECLL);
}

uint64_t sub_1AE5E1FF8()
{
  return 0x6F63536369706F74;
}

void *sub_1AE5E2014()
{
  return &unk_1E5DA6060;
}

uint64_t sub_1AE5E2020(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AE5E205C + 4 * word_1AE9400A8[a1]))(0xD000000000000027, 0x80000001AE9751E0);
}

uint64_t sub_1AE5E205C()
{
  uint64_t v0;

  return v0 - 39;
}

uint64_t sub_1AE5E27D8()
{
  uint64_t result;

  result = sub_1AE898358((uint64_t)&unk_1E5DA6C90);
  qword_1ED3274B0 = result;
  return result;
}

BOOL static EntityFeatures.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  int8x16_t v4;
  int8x16_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;

  result = 0;
  v4 = vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 256), *(float64x2_t *)(a2 + 256)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 272), *(float64x2_t *)(a2 + 272))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 288), *(float64x2_t *)(a2 + 288)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 304), *(float64x2_t *)(a2 + 304)))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 320), *(float64x2_t *)(a2 + 320)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 336), *(float64x2_t *)(a2 + 336))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 352), *(float64x2_t *)(a2 + 352)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 368), *(float64x2_t *)(a2 + 368)))));
  v5 = vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 32), *(float64x2_t *)(a2 + 32)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 48), *(float64x2_t *)(a2 + 48)))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 64), *(float64x2_t *)(a2 + 64)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 80), *(float64x2_t *)(a2 + 80))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 96), *(float64x2_t *)(a2 + 96)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 112), *(float64x2_t *)(a2 + 112)))));
  v6 = vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vandq_s8(vandq_s8(v5, v4), vandq_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 128), *(float64x2_t *)(a2 + 128)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 144), *(float64x2_t *)(a2 + 144))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 160), *(float64x2_t *)(a2 + 160)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 176),
                                                                              *(float64x2_t *)(a2 + 176)))),
                                       (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 192), *(float64x2_t *)(a2 + 192)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 208), *(float64x2_t *)(a2 + 208))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 224), *(float64x2_t *)(a2 + 224)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 240), *(float64x2_t *)(a2 + 240))))), vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 384),
                                                                              *(float64x2_t *)(a2 + 384)),
                                                                 (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 400), *(float64x2_t *)(a2 + 400))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 416), *(float64x2_t *)(a2 + 416)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 432), *(float64x2_t *)(a2 + 432)))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 448), *(float64x2_t *)(a2 + 448)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 464), *(float64x2_t *)(a2 + 464))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(
                                                                              *(float64x2_t *)(a1 + 480),
                                                                              *(float64x2_t *)(a2 + 480)),
                                                                 (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 496), *(float64x2_t *)(a2 + 496))))))), 7uLL)));
  v7 = v6 & vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vandq_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 512), *(float64x2_t *)(a2 + 512)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 528), *(float64x2_t *)(a2 + 528))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 544), *(float64x2_t *)(a2 + 544)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 560), *(float64x2_t *)(a2 + 560)))), (int8x16_t)vuzp1q_s16(
                                                       (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 576), *(float64x2_t *)(a2 + 576)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 592), *(float64x2_t *)(a2 + 592))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 608), *(float64x2_t *)(a2 + 608)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 624), *(float64x2_t *)(a2 + 624))))), vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 640), *(float64x2_t *)(a2 + 640)),
                                                                    (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 656), *(float64x2_t *)(a2 + 656))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 672), *(float64x2_t *)(a2 + 672)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 688), *(float64x2_t *)(a2 + 688)))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 704), *(float64x2_t *)(a2 + 704)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 720), *(float64x2_t *)(a2 + 720))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(
                                                                                 *(float64x2_t *)(a1 + 736),
                                                                                 *(float64x2_t *)(a2 + 736)),
                                                                    (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 752), *(float64x2_t *)(a2 + 752)))))), 7uLL)));
  if ((v7 & (vminvq_u8((uint8x16_t)vcltzq_s8(vshlq_n_s8(vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 768), *(float64x2_t *)(a2 + 768)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 784), *(float64x2_t *)(a2 + 784))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 800), *(float64x2_t *)(a2 + 800)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 816), *(float64x2_t *)(a2 + 816)))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32(
                                                                                     (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 832), *(float64x2_t *)(a2 + 832)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 848), *(float64x2_t *)(a2 + 848))), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 864), *(float64x2_t *)(a2 + 864)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 880), *(float64x2_t *)(a2 + 880))))), 7uLL))) & vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 912), *(float64x2_t *)(a2 + 912)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 928), *(float64x2_t *)(a2 + 928)))), 0xFuLL)))) & (*(double *)(a1 + 952) == *(double *)(a2 + 952)) & (*(_DWORD *)(a1 + 896) == *(_DWORD *)(a2 + 896)) & (*(_DWORD *)(a1 + 900) == *(_DWORD *)(a2 + 900))) == 1
    && *(_DWORD *)(a1 + 904) == *(_DWORD *)(a2 + 904)
    && *(_DWORD *)(a1 + 944) == *(_DWORD *)(a2 + 944))
  {
    return *(double *)(a1 + 960) == *(double *)(a2 + 960);
  }
  return result;
}

void EntityFeatures.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1AE5E7CB8();
  v2 = v1;
  v3 = sub_1AE501548(&qword_1EED9D170);
  v7 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F666C();
  v6 = v5 - v4;
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE5E3CE0();
  sub_1AE926F4C();
  sub_1AE926CA0();
  if (!v0)
  {
    sub_1AE50356C(1);
    sub_1AE500BB8();
    sub_1AE50356C(2);
    sub_1AE500BB8();
    sub_1AE50356C(3);
    sub_1AE500BB8();
    sub_1AE50356C(4);
    sub_1AE500BB8();
    sub_1AE50356C(5);
    sub_1AE500BB8();
    sub_1AE50356C(6);
    sub_1AE500BB8();
    sub_1AE50356C(7);
    sub_1AE500BB8();
    sub_1AE50356C(8);
    sub_1AE500BB8();
    sub_1AE50356C(9);
    sub_1AE500BB8();
    sub_1AE50356C(10);
    sub_1AE500BB8();
    sub_1AE50356C(11);
    sub_1AE4FEC84();
    sub_1AE50356C(12);
    sub_1AE4FEC84();
    sub_1AE50356C(13);
    sub_1AE4FEC84();
    sub_1AE50356C(14);
    sub_1AE4FEC84();
    sub_1AE50356C(15);
    sub_1AE4FEC84();
    sub_1AE50356C(16);
    sub_1AE4FEC84();
    sub_1AE50356C(17);
    sub_1AE4FEC84();
    sub_1AE50356C(18);
    sub_1AE4FEC84();
    sub_1AE50356C(19);
    sub_1AE4FEC84();
    sub_1AE50356C(20);
    sub_1AE4FEC84();
    sub_1AE50356C(21);
    sub_1AE4FEC84();
    sub_1AE50356C(22);
    sub_1AE4FEC84();
    sub_1AE50356C(23);
    sub_1AE4FEC84();
    sub_1AE50356C(24);
    sub_1AE4FEC84();
    sub_1AE50356C(25);
    sub_1AE4FEC84();
    sub_1AE50356C(26);
    sub_1AE4FEC84();
    sub_1AE50356C(27);
    sub_1AE4FEC84();
    sub_1AE50356C(28);
    sub_1AE4FEC84();
    sub_1AE50356C(29);
    sub_1AE4FEC84();
    sub_1AE50356C(30);
    sub_1AE4FEC84();
    sub_1AE50356C(31);
    sub_1AE4FEC84();
    sub_1AE50356C(32);
    sub_1AE4FEC84();
    sub_1AE50356C(33);
    sub_1AE4FEC84();
    sub_1AE50356C(34);
    sub_1AE4FEC84();
    sub_1AE50356C(35);
    sub_1AE4FEC84();
    sub_1AE50356C(36);
    sub_1AE4FEC84();
    sub_1AE50356C(37);
    sub_1AE4FEC84();
    sub_1AE50356C(38);
    sub_1AE4FEC84();
    sub_1AE50356C(39);
    sub_1AE4FEC84();
    sub_1AE50356C(40);
    sub_1AE4FEC84();
    sub_1AE50356C(41);
    sub_1AE4FEC84();
    sub_1AE50356C(42);
    sub_1AE4FEC84();
    sub_1AE50356C(43);
    sub_1AE4FEC84();
    sub_1AE50356C(44);
    sub_1AE4FEC84();
    sub_1AE50356C(45);
    sub_1AE4FEC84();
    sub_1AE50356C(46);
    sub_1AE4FEC84();
    sub_1AE50356C(47);
    sub_1AE4FEC84();
    sub_1AE50356C(48);
    sub_1AE4FEC84();
    sub_1AE50356C(49);
    sub_1AE4FEC84();
    sub_1AE50356C(50);
    sub_1AE4FEC84();
    sub_1AE50356C(51);
    sub_1AE4FEC84();
    sub_1AE50356C(52);
    sub_1AE4FEC84();
    sub_1AE50356C(53);
    sub_1AE4FEC84();
    sub_1AE50356C(54);
    sub_1AE4FEC84();
    sub_1AE50356C(55);
    sub_1AE4FEC84();
    sub_1AE50356C(56);
    sub_1AE4FEC84();
    sub_1AE50356C(57);
    sub_1AE4FEC84();
    sub_1AE50356C(58);
    sub_1AE4FEC84();
    sub_1AE50356C(59);
    sub_1AE4FEC84();
    sub_1AE50356C(60);
    sub_1AE4FEC84();
    sub_1AE50356C(61);
    sub_1AE4FEC84();
    sub_1AE50356C(62);
    sub_1AE4FEC84();
    sub_1AE50356C(63);
    sub_1AE4FEC84();
    sub_1AE50356C(64);
    sub_1AE4FEC84();
    sub_1AE50356C(65);
    sub_1AE4FEC84();
    sub_1AE50356C(66);
    sub_1AE4FEC84();
    sub_1AE50356C(67);
    sub_1AE4FEC84();
    sub_1AE50356C(68);
    sub_1AE4FEC84();
    sub_1AE50356C(69);
    sub_1AE4FEC84();
    sub_1AE50356C(70);
    sub_1AE4FEC84();
    sub_1AE50356C(71);
    sub_1AE4FEC84();
    sub_1AE50356C(72);
    sub_1AE4FEC84();
    sub_1AE50356C(73);
    sub_1AE4FEC84();
    sub_1AE50356C(74);
    sub_1AE4FEC84();
    sub_1AE50356C(75);
    sub_1AE4FEC84();
    sub_1AE50356C(76);
    sub_1AE4FEC84();
    sub_1AE50356C(77);
    sub_1AE4FEC84();
    sub_1AE50356C(78);
    sub_1AE4FEC84();
    sub_1AE50356C(79);
    sub_1AE4FEC84();
    sub_1AE50356C(80);
    sub_1AE4FEC84();
    sub_1AE50356C(81);
    sub_1AE4FEC84();
    sub_1AE50356C(82);
    sub_1AE4FEC84();
    sub_1AE50356C(83);
    sub_1AE4FEC84();
    sub_1AE50356C(84);
    sub_1AE4FEC84();
    sub_1AE50356C(85);
    sub_1AE4FEC84();
    sub_1AE50356C(86);
    sub_1AE4FEC84();
    sub_1AE50356C(87);
    sub_1AE4FEC84();
    sub_1AE50356C(88);
    sub_1AE4FEC84();
    sub_1AE50356C(89);
    sub_1AE4FEC84();
    sub_1AE50356C(90);
    sub_1AE4FEC84();
    sub_1AE50356C(91);
    sub_1AE4FEC84();
    sub_1AE50356C(92);
    sub_1AE4FEC84();
    sub_1AE50356C(93);
    sub_1AE4FEC84();
    sub_1AE50356C(94);
    sub_1AE4FEC84();
    sub_1AE50356C(95);
    sub_1AE4FEC84();
    sub_1AE50356C(96);
    sub_1AE4FEC84();
    sub_1AE50356C(97);
    sub_1AE4FEC84();
    sub_1AE50356C(98);
    sub_1AE4FEC84();
    sub_1AE50356C(99);
    sub_1AE4FEC84();
    sub_1AE50356C(100);
    sub_1AE4FEC84();
    sub_1AE50356C(101);
    sub_1AE4FEC84();
    sub_1AE50356C(102);
    sub_1AE4FEC84();
    sub_1AE50356C(103);
    sub_1AE4FEC84();
    sub_1AE50356C(104);
    sub_1AE4FEC84();
    sub_1AE50356C(105);
    sub_1AE4FEC84();
    sub_1AE50356C(106);
    sub_1AE4FEC84();
    sub_1AE50356C(107);
    sub_1AE4FEC84();
    sub_1AE50356C(108);
    sub_1AE4FEC84();
    sub_1AE50356C(109);
    sub_1AE4FEC84();
    sub_1AE50356C(110);
    sub_1AE500BB8();
    sub_1AE50356C(111);
    sub_1AE500BB8();
    sub_1AE506914(112);
    sub_1AE50A414();
    sub_1AE506914(113);
    sub_1AE50A414();
    sub_1AE506914(114);
    sub_1AE50A414();
    sub_1AE50356C(115);
    sub_1AE500BB8();
    sub_1AE50356C(116);
    sub_1AE500BB8();
    sub_1AE50356C(117);
    sub_1AE500BB8();
    sub_1AE50356C(118);
    sub_1AE500BB8();
    sub_1AE506914(119);
    sub_1AE50A414();
    sub_1AE50356C(120);
    sub_1AE500BB8();
    sub_1AE50356C(121);
    sub_1AE500BB8();
  }
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v3);
  sub_1AE50AAC0();
}

unint64_t sub_1AE5E3CE0()
{
  unint64_t result;

  result = qword_1ED30FA98;
  if (!qword_1ED30FA98)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9409F8, &unk_1E5DB57A0);
    atomic_store(result, (unint64_t *)&qword_1ED30FA98);
  }
  return result;
}

void EntityFeatures.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double v109;
  double v110;
  double v111;
  double v112;
  double v113;
  double v114;
  double v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  double v125;
  double v126;
  double v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  double v135;
  double v136;
  double v137;
  double v138;
  double v139;
  double v140;
  double v141;
  double v142;
  double v143;
  double v144;
  double v145;
  double v146;
  double v147;
  double v148;
  double v149;
  double v150;
  double v151;
  double v152;
  double v153;
  double v154;
  double v155;
  double v156;
  double v157;
  double v158;
  int v159;
  double v160;
  double v161;
  double v162;
  double v163;
  int v164;
  double v165;
  double v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  _QWORD v233[2];
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;

  sub_1AE5E7CB8();
  a30 = v32;
  a31 = v33;
  v35 = v34;
  v37 = v36;
  v38 = sub_1AE501548(&qword_1ED30FD50);
  MEMORY[0x1E0C80A78](v38);
  sub_1AE4F666C();
  sub_1AE4F9858(v35, v35[3]);
  sub_1AE5E3CE0();
  sub_1AE926F34();
  if (!v31)
  {
    a21 = 0;
    sub_1AE926BC8();
    v40 = v39;
    sub_1AE4FFFB8(1);
    v42 = v41;
    sub_1AE4FFFB8(2);
    v44 = v43;
    sub_1AE4FFFB8(3);
    v46 = v45;
    sub_1AE4FFFB8(4);
    v48 = v47;
    sub_1AE4FFFB8(5);
    v50 = v49;
    sub_1AE4FFFB8(6);
    v52 = v51;
    sub_1AE4FFFB8(7);
    v305 = v53;
    sub_1AE4FFFB8(8);
    v55 = v54;
    sub_1AE4FFFB8(9);
    v304 = v56;
    sub_1AE4FFFB8(10);
    v303 = v57;
    sub_1AE4FFFB8(11);
    v302 = v58;
    sub_1AE4FFFB8(12);
    v301 = v59;
    sub_1AE4FFFB8(13);
    v300 = v60;
    sub_1AE4FFFB8(14);
    v299 = v61;
    sub_1AE4FFFB8(15);
    v298 = v62;
    sub_1AE4FFFB8(16);
    v297 = v63;
    sub_1AE4FFFB8(17);
    v296 = v64;
    sub_1AE4FFFB8(18);
    v295 = v65;
    sub_1AE4FFFB8(19);
    v294 = v66;
    sub_1AE4FFFB8(20);
    v293 = v67;
    sub_1AE4FFFB8(21);
    sub_1AE4FDC18((uint64_t)&a29, v68);
    sub_1AE4FFFB8(22);
    sub_1AE4FDC18((uint64_t)&a28, v69);
    sub_1AE4FFFB8(23);
    sub_1AE4FDC18((uint64_t)&a27, v70);
    sub_1AE4FFFB8(24);
    sub_1AE4FDC18((uint64_t)&a26, v71);
    sub_1AE4FFFB8(25);
    sub_1AE4FDC18((uint64_t)&a25, v72);
    sub_1AE4FFFB8(26);
    sub_1AE4FDC18((uint64_t)&a24, v73);
    sub_1AE4FFFB8(27);
    sub_1AE4FDC18((uint64_t)&a23, v74);
    sub_1AE4FFFB8(28);
    sub_1AE4FDC18((uint64_t)&a22, v75);
    sub_1AE4FFFB8(29);
    sub_1AE4FDC18((uint64_t)&a18, v76);
    sub_1AE4FFFB8(30);
    sub_1AE4FDC18((uint64_t)&a17, v77);
    sub_1AE4FFFB8(31);
    sub_1AE4FDC18((uint64_t)&a16, v78);
    sub_1AE4FFFB8(32);
    sub_1AE4FDC18((uint64_t)&a15, v79);
    sub_1AE4FFFB8(33);
    sub_1AE4FDC18((uint64_t)&a14, v80);
    sub_1AE4FFFB8(34);
    sub_1AE4FDC18((uint64_t)&a13, v81);
    sub_1AE4FFFB8(35);
    sub_1AE4FDC18((uint64_t)&a12, v82);
    sub_1AE4FFFB8(36);
    sub_1AE4FDC18((uint64_t)&a11, v83);
    sub_1AE4FFFB8(37);
    sub_1AE4FDC18((uint64_t)&a10, v84);
    sub_1AE4FFFB8(38);
    sub_1AE4FDC18((uint64_t)&a9, v85);
    sub_1AE4FFFB8(39);
    sub_1AE4FDC18((uint64_t)&v306, v86);
    sub_1AE4FFFB8(40);
    sub_1AE4FDC18((uint64_t)&v305, v87);
    sub_1AE4FFFB8(41);
    sub_1AE4FDC18((uint64_t)&v304, v88);
    sub_1AE4FFFB8(42);
    sub_1AE4FDC18((uint64_t)&v303, v89);
    sub_1AE4FFFB8(43);
    sub_1AE4FDC18((uint64_t)&v302, v90);
    sub_1AE4FFFB8(44);
    sub_1AE4FDC18((uint64_t)&v301, v91);
    sub_1AE4FFFB8(45);
    sub_1AE4FDC18((uint64_t)&v300, v92);
    sub_1AE4FFFB8(46);
    sub_1AE4FDC18((uint64_t)&v299, v93);
    sub_1AE4FFFB8(47);
    sub_1AE4FDC18((uint64_t)&v298, v94);
    sub_1AE4FFFB8(48);
    sub_1AE4FDC18((uint64_t)&v297, v95);
    sub_1AE4FFFB8(49);
    sub_1AE4FDC18((uint64_t)&v296, v96);
    sub_1AE4FFFB8(50);
    sub_1AE4FDC18((uint64_t)&v295, v97);
    sub_1AE4FFFB8(51);
    sub_1AE4FDC18((uint64_t)&v294, v98);
    sub_1AE4FFFB8(52);
    sub_1AE4FDC18((uint64_t)&v293, v99);
    sub_1AE4FFFB8(53);
    sub_1AE4FDC18((uint64_t)&v292, v100);
    sub_1AE4FFFB8(54);
    sub_1AE4FDC18((uint64_t)&v291, v101);
    sub_1AE4FFFB8(55);
    sub_1AE4FDC18((uint64_t)&v290, v102);
    sub_1AE4FFFB8(56);
    sub_1AE4FDC18((uint64_t)&v289, v103);
    sub_1AE4FFFB8(57);
    sub_1AE4FDC18((uint64_t)&v288, v104);
    sub_1AE4FFFB8(58);
    sub_1AE4FDC18((uint64_t)&v287, v105);
    sub_1AE4FFFB8(59);
    sub_1AE4FDC18((uint64_t)&v286, v106);
    sub_1AE4FFFB8(60);
    sub_1AE4FDC18((uint64_t)&v285, v107);
    sub_1AE4FFFB8(61);
    sub_1AE4FDC18((uint64_t)&v284, v108);
    sub_1AE4FFFB8(62);
    sub_1AE4FDC18((uint64_t)&v283, v109);
    sub_1AE4FFFB8(63);
    sub_1AE4FDC18((uint64_t)&v282, v110);
    sub_1AE4FFFB8(64);
    sub_1AE4FDC18((uint64_t)&v281, v111);
    sub_1AE4FFFB8(65);
    sub_1AE4FDC18((uint64_t)&v280, v112);
    sub_1AE4FFFB8(66);
    sub_1AE4FDC18((uint64_t)&v279, v113);
    sub_1AE4FFFB8(67);
    sub_1AE4FDC18((uint64_t)&v278, v114);
    sub_1AE4FFFB8(68);
    sub_1AE4FDC18((uint64_t)&v277, v115);
    sub_1AE4FFFB8(69);
    sub_1AE4FDC18((uint64_t)&v276, v116);
    sub_1AE4FFFB8(70);
    sub_1AE4FDC18((uint64_t)&v275, v117);
    sub_1AE4FFFB8(71);
    sub_1AE4FDC18((uint64_t)&v274, v118);
    sub_1AE4FFFB8(72);
    sub_1AE4FDC18((uint64_t)&v273, v119);
    sub_1AE4FFFB8(73);
    sub_1AE4FDC18((uint64_t)&v272, v120);
    sub_1AE4FFFB8(74);
    sub_1AE4FDC18((uint64_t)&v271, v121);
    sub_1AE4FFFB8(75);
    sub_1AE4FDC18((uint64_t)&v270, v122);
    sub_1AE4FFFB8(76);
    sub_1AE4FDC18((uint64_t)&v269, v123);
    sub_1AE4FFFB8(77);
    sub_1AE4FDC18((uint64_t)&v268, v124);
    sub_1AE4FFFB8(78);
    sub_1AE4FDC18((uint64_t)&v267, v125);
    sub_1AE4FFFB8(79);
    sub_1AE4FDC18((uint64_t)&v266, v126);
    sub_1AE4FFFB8(80);
    sub_1AE4FDC18((uint64_t)&v265, v127);
    sub_1AE4FFFB8(81);
    sub_1AE4FDC18((uint64_t)&v264, v128);
    sub_1AE4FFFB8(82);
    sub_1AE4FDC18((uint64_t)&v263, v129);
    sub_1AE4FFFB8(83);
    sub_1AE4FDC18((uint64_t)&v262, v130);
    sub_1AE4FFFB8(84);
    sub_1AE4FDC18((uint64_t)&v261, v131);
    sub_1AE4FFFB8(85);
    sub_1AE4FDC18((uint64_t)&v260, v132);
    sub_1AE4FFFB8(86);
    sub_1AE4FDC18((uint64_t)&v259, v133);
    sub_1AE4FFFB8(87);
    sub_1AE4FDC18((uint64_t)&v258, v134);
    sub_1AE4FFFB8(88);
    sub_1AE4FDC18((uint64_t)&v257, v135);
    sub_1AE4FFFB8(89);
    sub_1AE4FDC18((uint64_t)&v256, v136);
    sub_1AE4FFFB8(90);
    sub_1AE4FDC18((uint64_t)&v255, v137);
    sub_1AE4FFFB8(91);
    sub_1AE4FDC18((uint64_t)&v254, v138);
    sub_1AE4FFFB8(92);
    sub_1AE4FDC18((uint64_t)&v253, v139);
    sub_1AE4FFFB8(93);
    sub_1AE4FDC18((uint64_t)&v252, v140);
    sub_1AE4FFFB8(94);
    sub_1AE4FDC18((uint64_t)&v251, v141);
    sub_1AE4FFFB8(95);
    sub_1AE4FDC18((uint64_t)&v250, v142);
    sub_1AE4FFFB8(96);
    sub_1AE4FDC18((uint64_t)&v249, v143);
    sub_1AE4FFFB8(97);
    sub_1AE4FDC18((uint64_t)&v248, v144);
    sub_1AE4FFFB8(98);
    sub_1AE4FDC18((uint64_t)&v247, v145);
    sub_1AE4FFFB8(99);
    sub_1AE4FDC18((uint64_t)&v246, v146);
    sub_1AE4FFFB8(100);
    sub_1AE4FDC18((uint64_t)&v245, v147);
    sub_1AE4FFFB8(101);
    sub_1AE4FDC18((uint64_t)&v244, v148);
    sub_1AE4FFFB8(102);
    sub_1AE4FDC18((uint64_t)&v243, v149);
    sub_1AE4FFFB8(103);
    sub_1AE4FDC18((uint64_t)&v242, v150);
    sub_1AE4FFFB8(104);
    sub_1AE4FDC18((uint64_t)&v241, v151);
    sub_1AE4FFFB8(105);
    sub_1AE4FDC18((uint64_t)&v240, v152);
    sub_1AE4FFFB8(106);
    sub_1AE4FDC18((uint64_t)&v239, v153);
    sub_1AE4FFFB8(107);
    sub_1AE4FDC18((uint64_t)&v238, v154);
    sub_1AE4FFFB8(108);
    sub_1AE4FDC18((uint64_t)&v237, v155);
    sub_1AE4FFFB8(109);
    sub_1AE4FDC18((uint64_t)&v236, v156);
    sub_1AE4FFFB8(110);
    sub_1AE4FDC18((uint64_t)&v235, v157);
    sub_1AE4FFFB8(111);
    sub_1AE4FDC18((uint64_t)&v234, v158);
    a18 = sub_1AE4FC7D4(112);
    v202 = sub_1AE4FC7D4(113);
    v159 = sub_1AE4FC7D4(114);
    sub_1AE4FFFB8(115);
    sub_1AE4FDC18((uint64_t)v233, v160);
    sub_1AE4FFFB8(116);
    sub_1AE4FDC18((uint64_t)&v232, v161);
    sub_1AE4FFFB8(117);
    sub_1AE4FDC18((uint64_t)&v231, v162);
    sub_1AE4FFFB8(118);
    sub_1AE4FDC18((uint64_t)&v230, v163);
    v164 = sub_1AE4FC7D4(119);
    sub_1AE4FFFB8(120);
    sub_1AE4FDC18((uint64_t)&v229, v165);
    sub_1AE4FFFB8(121);
    sub_1AE4FDC18((uint64_t)&v228, v166);
    sub_1AE4FD9B8();
    *(_QWORD *)v37 = v40;
    *(_QWORD *)(v37 + 8) = v42;
    *(_QWORD *)(v37 + 16) = v44;
    *(_QWORD *)(v37 + 24) = v46;
    *(_QWORD *)(v37 + 32) = v48;
    *(_QWORD *)(v37 + 40) = v50;
    v167 = v305;
    *(_QWORD *)(v37 + 48) = v52;
    *(_QWORD *)(v37 + 56) = v167;
    v168 = v304;
    *(_QWORD *)(v37 + 64) = v55;
    *(_QWORD *)(v37 + 72) = v168;
    v169 = v302;
    *(_QWORD *)(v37 + 80) = v303;
    *(_QWORD *)(v37 + 88) = v169;
    v170 = v300;
    *(_QWORD *)(v37 + 96) = v301;
    *(_QWORD *)(v37 + 104) = v170;
    v171 = v298;
    *(_QWORD *)(v37 + 112) = v299;
    *(_QWORD *)(v37 + 120) = v171;
    v172 = v296;
    *(_QWORD *)(v37 + 128) = v297;
    *(_QWORD *)(v37 + 136) = v172;
    v173 = v294;
    *(_QWORD *)(v37 + 144) = v295;
    *(_QWORD *)(v37 + 152) = v173;
    v174 = v292;
    *(_QWORD *)(v37 + 160) = v293;
    *(_QWORD *)(v37 + 168) = v174;
    v175 = v290;
    *(_QWORD *)(v37 + 176) = v291;
    *(_QWORD *)(v37 + 184) = v175;
    v176 = v288;
    *(_QWORD *)(v37 + 192) = v289;
    *(_QWORD *)(v37 + 200) = v176;
    v177 = v286;
    *(_QWORD *)(v37 + 208) = v287;
    *(_QWORD *)(v37 + 216) = v177;
    v178 = v284;
    *(_QWORD *)(v37 + 224) = v285;
    *(_QWORD *)(v37 + 232) = v178;
    v179 = v282;
    *(_QWORD *)(v37 + 240) = v283;
    *(_QWORD *)(v37 + 248) = v179;
    v180 = v280;
    *(_QWORD *)(v37 + 256) = v281;
    *(_QWORD *)(v37 + 264) = v180;
    v181 = v278;
    *(_QWORD *)(v37 + 272) = v279;
    *(_QWORD *)(v37 + 280) = v181;
    v182 = v276;
    *(_QWORD *)(v37 + 288) = v277;
    *(_QWORD *)(v37 + 296) = v182;
    v183 = v274;
    *(_QWORD *)(v37 + 304) = v275;
    *(_QWORD *)(v37 + 312) = v183;
    v184 = v272;
    *(_QWORD *)(v37 + 320) = v273;
    *(_QWORD *)(v37 + 328) = v184;
    v185 = v270;
    *(_QWORD *)(v37 + 336) = v271;
    *(_QWORD *)(v37 + 344) = v185;
    v186 = v268;
    *(_QWORD *)(v37 + 352) = v269;
    *(_QWORD *)(v37 + 360) = v186;
    v187 = v266;
    *(_QWORD *)(v37 + 368) = v267;
    *(_QWORD *)(v37 + 376) = v187;
    v188 = v264;
    *(_QWORD *)(v37 + 384) = v265;
    *(_QWORD *)(v37 + 392) = v188;
    v189 = v262;
    *(_QWORD *)(v37 + 400) = v263;
    *(_QWORD *)(v37 + 408) = v189;
    v190 = v260;
    *(_QWORD *)(v37 + 416) = v261;
    *(_QWORD *)(v37 + 424) = v190;
    v191 = v258;
    *(_QWORD *)(v37 + 432) = v259;
    *(_QWORD *)(v37 + 440) = v191;
    v192 = v256;
    *(_QWORD *)(v37 + 448) = v257;
    *(_QWORD *)(v37 + 456) = v192;
    v193 = v254;
    *(_QWORD *)(v37 + 464) = v255;
    *(_QWORD *)(v37 + 472) = v193;
    v194 = v252;
    *(_QWORD *)(v37 + 480) = v253;
    *(_QWORD *)(v37 + 488) = v194;
    v195 = v250;
    *(_QWORD *)(v37 + 496) = v251;
    *(_QWORD *)(v37 + 504) = v195;
    *(_QWORD *)(v37 + 512) = v249;
    *(_QWORD *)(v37 + 520) = v248;
    *(_QWORD *)(v37 + 528) = v247;
    *(_QWORD *)(v37 + 536) = v246;
    *(_QWORD *)(v37 + 544) = v245;
    *(_QWORD *)(v37 + 552) = v244;
    *(_QWORD *)(v37 + 560) = v243;
    *(_QWORD *)(v37 + 568) = v242;
    *(_QWORD *)(v37 + 576) = v241;
    *(_QWORD *)(v37 + 584) = v240;
    *(_QWORD *)(v37 + 592) = v239;
    *(_QWORD *)(v37 + 600) = v238;
    *(_QWORD *)(v37 + 608) = v237;
    *(_QWORD *)(v37 + 616) = v236;
    *(_QWORD *)(v37 + 624) = v235;
    *(_QWORD *)(v37 + 632) = v234;
    *(_QWORD *)(v37 + 640) = v233[1];
    *(_QWORD *)(v37 + 648) = v233[0];
    *(_QWORD *)(v37 + 656) = v232;
    *(_QWORD *)(v37 + 664) = v231;
    *(_QWORD *)(v37 + 672) = v230;
    *(_QWORD *)(v37 + 680) = v229;
    *(_QWORD *)(v37 + 688) = v228;
    *(_QWORD *)(v37 + 696) = v227;
    *(_QWORD *)(v37 + 704) = v226;
    *(_QWORD *)(v37 + 712) = v225;
    *(_QWORD *)(v37 + 720) = v224;
    *(_QWORD *)(v37 + 728) = v223;
    *(_QWORD *)(v37 + 736) = v222;
    *(_QWORD *)(v37 + 744) = v221;
    *(_QWORD *)(v37 + 752) = v220;
    *(_QWORD *)(v37 + 760) = v219;
    *(_QWORD *)(v37 + 768) = v218;
    *(_QWORD *)(v37 + 776) = v217;
    *(_QWORD *)(v37 + 784) = v216;
    *(_QWORD *)(v37 + 792) = v215;
    *(_QWORD *)(v37 + 800) = v214;
    *(_QWORD *)(v37 + 808) = v213;
    *(_QWORD *)(v37 + 816) = v212;
    *(_QWORD *)(v37 + 824) = v211;
    *(_QWORD *)(v37 + 832) = v210;
    *(_QWORD *)(v37 + 840) = v209;
    *(_QWORD *)(v37 + 848) = v208;
    *(_QWORD *)(v37 + 856) = v207;
    *(_QWORD *)(v37 + 864) = v206;
    *(_QWORD *)(v37 + 872) = v205;
    *(_QWORD *)(v37 + 880) = v204;
    *(_QWORD *)(v37 + 888) = v203;
    *(_DWORD *)(v37 + 896) = a18;
    *(_DWORD *)(v37 + 900) = v202;
    *(_DWORD *)(v37 + 904) = v159;
    *(_QWORD *)(v37 + 912) = v201;
    *(_QWORD *)(v37 + 920) = v200;
    *(_QWORD *)(v37 + 928) = v199;
    *(_QWORD *)(v37 + 936) = v198;
    *(_DWORD *)(v37 + 944) = v164;
    *(_QWORD *)(v37 + 952) = v197;
    *(_QWORD *)(v37 + 960) = v196;
  }
  sub_1AE4F90EC();
  sub_1AE50AAC0();
}

uint64_t sub_1AE5E4C24()
{
  unint64_t v0;

  v0 = sub_1AE926B44();
  sub_1AE4F6648();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_1AE5E4C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = sub_1AE926DA8();
  sub_1AE4F9038();
  v1 = 0;
  result = 29;
  switch(v0)
  {
    case 0:
      goto LABEL_31;
    case 1:
      v1 = 1;
      goto LABEL_31;
    case 2:
      v1 = 2;
      goto LABEL_31;
    case 3:
      v1 = 3;
      goto LABEL_31;
    case 4:
      v1 = 4;
      goto LABEL_31;
    case 5:
      v1 = 5;
      goto LABEL_31;
    case 6:
      v1 = 6;
      goto LABEL_31;
    case 7:
      v1 = 7;
      goto LABEL_31;
    case 8:
      v1 = 8;
      goto LABEL_31;
    case 9:
      v1 = 9;
      goto LABEL_31;
    case 10:
      v1 = 10;
      goto LABEL_31;
    case 11:
      v1 = 11;
      goto LABEL_31;
    case 12:
      v1 = 12;
      goto LABEL_31;
    case 13:
      v1 = 13;
      goto LABEL_31;
    case 14:
      v1 = 14;
      goto LABEL_31;
    case 15:
      v1 = 15;
      goto LABEL_31;
    case 16:
      v1 = 16;
      goto LABEL_31;
    case 17:
      v1 = 17;
      goto LABEL_31;
    case 18:
      v1 = 18;
      goto LABEL_31;
    case 19:
      v1 = 19;
      goto LABEL_31;
    case 20:
      v1 = 20;
      goto LABEL_31;
    case 21:
      v1 = 21;
      goto LABEL_31;
    case 22:
      v1 = 22;
      goto LABEL_31;
    case 23:
      v1 = 23;
      goto LABEL_31;
    case 24:
      v1 = 24;
      goto LABEL_31;
    case 25:
      v1 = 25;
      goto LABEL_31;
    case 26:
      v1 = 26;
      goto LABEL_31;
    case 27:
      v1 = 27;
      goto LABEL_31;
    case 28:
      v1 = 28;
LABEL_31:
      result = v1;
      break;
    case 29:
      return result;
    case 30:
      result = 30;
      break;
    case 31:
      result = 31;
      break;
    case 32:
      result = 32;
      break;
    case 33:
      result = 33;
      break;
    case 34:
      result = 34;
      break;
    case 35:
      result = 35;
      break;
    case 36:
      result = 36;
      break;
    case 37:
      result = 37;
      break;
    case 38:
      result = 38;
      break;
    case 39:
      result = 39;
      break;
    case 40:
      result = 40;
      break;
    case 41:
      result = 41;
      break;
    case 42:
      result = 42;
      break;
    case 43:
      result = 43;
      break;
    case 44:
      result = 44;
      break;
    case 45:
      result = 45;
      break;
    case 46:
      result = 46;
      break;
    case 47:
      result = 47;
      break;
    case 48:
      result = 48;
      break;
    case 49:
      result = 49;
      break;
    case 50:
      result = 50;
      break;
    case 51:
      result = 51;
      break;
    case 52:
      result = 52;
      break;
    case 53:
      result = 53;
      break;
    case 54:
      result = 54;
      break;
    case 55:
      result = 55;
      break;
    case 56:
      result = 56;
      break;
    case 57:
      result = 57;
      break;
    case 58:
      result = 58;
      break;
    case 59:
      result = 59;
      break;
    case 60:
      result = 60;
      break;
    case 61:
      result = 61;
      break;
    case 62:
      result = 62;
      break;
    case 63:
      result = 63;
      break;
    case 64:
      result = 64;
      break;
    case 65:
      result = 65;
      break;
    case 66:
      result = 66;
      break;
    case 67:
      result = 67;
      break;
    case 68:
      result = 68;
      break;
    case 69:
      result = 69;
      break;
    case 70:
      result = 70;
      break;
    case 71:
      result = 71;
      break;
    case 72:
      result = 72;
      break;
    case 73:
      result = 73;
      break;
    case 74:
      result = 74;
      break;
    case 75:
      result = 75;
      break;
    case 76:
      result = 76;
      break;
    case 77:
      result = 77;
      break;
    case 78:
      result = 78;
      break;
    case 79:
      result = 79;
      break;
    case 80:
      result = 80;
      break;
    case 81:
      result = 81;
      break;
    case 82:
      result = 82;
      break;
    case 83:
      result = 83;
      break;
    case 84:
      result = 84;
      break;
    case 85:
      result = 85;
      break;
    case 86:
      result = 86;
      break;
    case 87:
      result = 87;
      break;
    case 88:
      result = 88;
      break;
    case 89:
      result = 89;
      break;
    case 90:
      result = 90;
      break;
    case 91:
      result = 91;
      break;
    case 92:
      result = 92;
      break;
    case 93:
      result = 93;
      break;
    case 94:
      result = 94;
      break;
    case 95:
      result = 95;
      break;
    case 96:
      result = 96;
      break;
    case 97:
      result = 97;
      break;
    case 98:
      result = 98;
      break;
    case 99:
      result = 99;
      break;
    case 100:
      result = 100;
      break;
    case 101:
      result = 101;
      break;
    case 102:
      result = 102;
      break;
    case 103:
      result = 103;
      break;
    case 104:
      result = 104;
      break;
    case 105:
      result = 105;
      break;
    case 106:
      result = 106;
      break;
    case 107:
      result = 107;
      break;
    case 108:
      result = 108;
      break;
    case 109:
      result = 109;
      break;
    case 110:
      result = 110;
      break;
    case 111:
      result = 111;
      break;
    case 112:
      result = 112;
      break;
    case 113:
      result = 113;
      break;
    case 114:
      result = 114;
      break;
    case 115:
      result = 115;
      break;
    case 116:
      result = 116;
      break;
    case 117:
      result = 117;
      break;
    case 118:
      result = 118;
      break;
    case 119:
      result = 119;
      break;
    case 120:
      result = 120;
      break;
    case 121:
      result = 121;
      break;
    default:
      result = 122;
      break;
  }
  return result;
}

#error "1AE5E50A8: call analysis failed (funcsize=5)"

void sub_1AE5E50B4()
{
  EntityFeatures.encode(to:)();
}

void sub_1AE5E50CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_1AE512604(*a1, *a2);
}

void sub_1AE5E50D8()
{
  unsigned __int8 *v0;

  sub_1AE512B48(*v0);
}

uint64_t sub_1AE5E50E0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1AE5E93D8(a1, *v1);
}

void sub_1AE5E50E8(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FFDC(a1, *v1);
}

uint64_t sub_1AE5E50F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE5E4C24();
  *a1 = result;
  return result;
}

void sub_1AE5E511C(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_1AE5E1F5C(*v1);
  a1[1] = v3;
  sub_1AE4F6664();
}

void sub_1AE5E5140(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_1AE5125F8(*a1, *a2);
}

void sub_1AE5E514C()
{
  unsigned __int8 *v0;

  sub_1AE512B54(*v0);
}

uint64_t sub_1AE5E5154(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1AE5E93CC(a1, *v1);
}

void sub_1AE5E515C(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FFD0(a1, *v1);
}

uint64_t sub_1AE5E5164@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE5E4C68();
  *a1 = result;
  return result;
}

void sub_1AE5E5190(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_1AE5E2020(*v1);
  a1[1] = v3;
  sub_1AE4F6664();
}

uint64_t sub_1AE5E51B4()
{
  unsigned __int8 *v0;

  return sub_1AE5E509C(*v0);
}

uint64_t sub_1AE5E51BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE5E5098();
  *a1 = result;
  return result;
}

void sub_1AE5E51E0(_BYTE *a1@<X8>)
{
  *a1 = 122;
}

void sub_1AE5E51EC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5DA6060;
}

uint64_t sub_1AE5E51FC()
{
  sub_1AE5E3CE0();
  return sub_1AE926F94();
}

uint64_t sub_1AE5E5224()
{
  sub_1AE5E3CE0();
  return sub_1AE926FA0();
}

IntelligencePlatform::PopularityMetric __swiftcall PopularityMetric.init(name:columnName:)(Swift::String name, Swift::String columnName)
{
  Swift::String *v2;
  IntelligencePlatform::PopularityMetric result;

  *v2 = name;
  v2[1] = columnName;
  result.columnName = columnName;
  result.name = name;
  return result;
}

uint64_t PopularityMetric.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1AE4F66CC();
  return v1;
}

uint64_t PopularityMetric.columnName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1AE4F66CC();
  return v1;
}

IntelligencePlatform::PopularityMetric_optional __swiftcall PopularityMetric.init(rawValue:)(Swift::String rawValue)
{
  unint64_t *v1;
  void *object;
  unint64_t v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  BOOL v8;
  uint64_t countAndFlagsBits;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  BOOL v15;
  void *v16;
  BOOL v17;
  void *v18;
  BOOL v19;
  const char *v20;
  const char *v21;
  const char *v22;
  const char *v23;
  void *v25;
  BOOL v26;
  const char *v27;
  IntelligencePlatform::PopularityMetric_optional result;

  v5 = v1;
  v6 = 0xE900000000000065;
  v7 = 0x6B6E615265676170;
  v8 = rawValue._countAndFlagsBits == 0x6B6E615265676170 && rawValue._object == (void *)0xE800000000000000;
  if (v8)
  {
    sub_1AE5081E4();
    sub_1AE5E7D10();
    v6 = 0xE90000000000006BLL;
    goto LABEL_9;
  }
  object = rawValue._object;
  countAndFlagsBits = rawValue._countAndFlagsBits;
  if ((sub_1AE4FD134() & 1) == 0)
  {
    v7 = 0x6565726765446E69;
    if (countAndFlagsBits == 0x6565726765446E69 && object == (void *)0xE800000000000000)
    {
      sub_1AE508F60();
      sub_1AE5E7D10();
      goto LABEL_9;
    }
    if ((sub_1AE4FD134() & 1) != 0)
    {
      sub_1AE508F60();
      sub_1AE4F9038();
      goto LABEL_7;
    }
    v7 = 0x657267654474756FLL;
    v15 = countAndFlagsBits == 0x657267654474756FLL && object == (void *)0xE900000000000065;
    if (v15 || (sub_1AE4FD134() & 1) != 0)
    {
      v6 = 0xEA00000000006565;
      sub_1AE509934();
      swift_bridgeObjectRelease();
      object = (void *)0xE900000000000065;
      goto LABEL_9;
    }
    v4 = 0xD000000000000011;
    sub_1AE5E7CE8();
    v7 = 0x6E4967654474756FLL;
    v17 = countAndFlagsBits == 0x6E4967654474756FLL && object == v16;
    if (v17 || (sub_1AE5074F8(), (sub_1AE4FD134() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      v4 = 0xD000000000000010;
      v6 = 0x80000001AE97F8B0;
      object = (void *)0xEE00656572676544;
      goto LABEL_9;
    }
    sub_1AE5E7CE8();
    v7 = 0x754F67654474756FLL;
    v19 = countAndFlagsBits == 0x754F67654474756FLL && object == v18;
    if (v19 || (sub_1AE5074F8(), (sub_1AE4FD134() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      v6 = 0x80000001AE97F8D0;
      object = (void *)0xEF65657267654474;
      goto LABEL_9;
    }
    v20 = "sameTypeInDegree";
    if (countAndFlagsBits == 0xD000000000000010 && (sub_1AE4FBAD0(), v8)
      || (v3 = (unint64_t)(v20 - 32) | 0x8000000000000000, (sub_1AE4FD134() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      v6 = 0x80000001AE97F8B0;
      v7 = 0xD000000000000010;
      object = (void *)v3;
      v4 = 0xD000000000000010;
      goto LABEL_9;
    }
    v21 = "sameTypeOutDegree";
    if (countAndFlagsBits == 0xD000000000000011 && (sub_1AE4FBAD0(), v8)
      || (v3 = (unint64_t)(v21 - 32) | 0x8000000000000000, (sub_1AE4FD134() & 1) != 0)
      || (v22 = "otherTypeInDegree", countAndFlagsBits == 0xD000000000000011) && (sub_1AE4FBAD0(), v8)
      || (v3 = (unint64_t)(v22 - 32) | 0x8000000000000000, (sub_1AE4FD134() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      v4 = 0xD000000000000014;
      sub_1AE4F780C();
LABEL_47:
      object = (void *)v3;
      goto LABEL_9;
    }
    v23 = "otherTypeOutDegree";
    if (countAndFlagsBits == 0xD000000000000012 && (sub_1AE4FBAD0(), v8)
      || (v3 = (unint64_t)(v23 - 32) | 0x8000000000000000, (sub_1AE4FD134() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      v7 = 0xD000000000000012;
      v4 = 0xD000000000000015;
      v6 = 0x80000001AE97F850;
      goto LABEL_47;
    }
    v7 = 0x656572676564;
    if (countAndFlagsBits == 0x656572676564 && object == (void *)0xE600000000000000)
    {
      object = (void *)0xE600000000000000;
      sub_1AE5E7CE0();
    }
    else
    {
      if ((sub_1AE4FD134() & 1) == 0)
      {
        sub_1AE5E7CE8();
        v7 = 0x6544656572676564;
        v26 = countAndFlagsBits == 0x6544656572676564 && object == v25;
        if (v26 || (sub_1AE5074F8(), (sub_1AE4FD134() & 1) != 0))
        {
          sub_1AE5E7C50();
          swift_bridgeObjectRelease();
          object = (void *)0xEC00000065657267;
          goto LABEL_9;
        }
        v27 = "entitySameDegree";
        if (countAndFlagsBits == 0xD000000000000010 && (sub_1AE4FBAD0(), v8)
          || (v3 = (unint64_t)(v27 - 32) | 0x8000000000000000, (sub_1AE4FD134() & 1) != 0))
        {
          swift_bridgeObjectRelease();
          v4 = 0xD000000000000012;
          v6 = 0x80000001AE97F830;
          v7 = 0xD000000000000010;
          goto LABEL_47;
        }
        if (countAndFlagsBits == 0xD000000000000011 && (sub_1AE507DDC(), v8)
          || (sub_1AE5E7CF8(), (sub_1AE4FD134() & 1) != 0))
        {
          swift_bridgeObjectRelease();
          v4 = 0xD000000000000013;
          sub_1AE4F780C();
          object = (void *)0xD000000000000010;
          goto LABEL_9;
        }
        v7 = 0x6C6169636F73;
        if (countAndFlagsBits == 0x6C6169636F73 && object == (void *)0xE600000000000000)
        {
          object = (void *)0xE600000000000000;
          sub_1AE5E7CE0();
        }
        else
        {
          if ((sub_1AE4FD134() & 1) == 0)
          {
            sub_1AE4F66CC();
            v7 = countAndFlagsBits;
            v4 = countAndFlagsBits;
            v6 = (unint64_t)object;
            goto LABEL_9;
          }
          sub_1AE4F9038();
          object = (void *)0xE600000000000000;
        }
        v4 = 0x6C6169636F73;
LABEL_67:
        v6 = 0xE600000000000000;
        goto LABEL_9;
      }
      sub_1AE4F9038();
      object = (void *)0xE600000000000000;
    }
    v4 = 0x656572676564;
    goto LABEL_67;
  }
  sub_1AE5081E4();
  sub_1AE4F9038();
  v6 = 0xE90000000000006BLL;
LABEL_7:
  object = (void *)0xE800000000000000;
LABEL_9:
  *v5 = v7;
  v5[1] = (unint64_t)object;
  v5[2] = v4;
  v5[3] = v6;
  sub_1AE4F66A8();
  result.value.columnName._object = v13;
  result.value.columnName._countAndFlagsBits = v12;
  result.value.name._object = v11;
  result.value.name._countAndFlagsBits = v10;
  return result;
}

IntelligencePlatform::PopularityMetric_optional __swiftcall PopularityMetric.init(columnName:)(Swift::String columnName)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  BOOL v17;
  const char *v18;
  unint64_t v19;
  const char *v20;
  unint64_t v21;
  const char *v22;
  const char *v23;
  unint64_t v24;
  const char *v25;
  BOOL v27;
  const char *v28;
  const char *v29;
  IntelligencePlatform::PopularityMetric_optional result;

  v4 = v1;
  v5 = 0xE900000000000065;
  sub_1AE5081E4();
  v8 = 0xE90000000000006BLL;
  v9 = v6 == v3 && v7 == 0xE90000000000006BLL;
  if (v9)
  {
    sub_1AE5E7D3C();
    swift_bridgeObjectRelease();
    v5 = 0xE800000000000000;
LABEL_8:
    v10 = v8;
    goto LABEL_15;
  }
  v10 = v7;
  v2 = v6;
  if ((sub_1AE4FD134() & 1) != 0)
  {
    sub_1AE5E7D3C();
    sub_1AE4F9038();
    v10 = 0xE90000000000006BLL;
    v5 = 0xE800000000000000;
    goto LABEL_15;
  }
  sub_1AE508F60();
  v11 = v2 == v3 && v10 == 0xE900000000000065;
  if (v11 || (sub_1AE4FD134() & 1) != 0)
  {
    sub_1AE5E7D28();
    swift_bridgeObjectRelease();
    v5 = 0xE800000000000000;
    v10 = 0xE900000000000065;
    goto LABEL_15;
  }
  sub_1AE509934();
  v17 = v2 == v3 && v10 == v16;
  if (v17 || (sub_1AE4FD134() & 1) != 0)
  {
    sub_1AE50656C();
    swift_bridgeObjectRelease();
    v10 = 0xEA00000000006565;
    goto LABEL_15;
  }
  sub_1AE5E7D1C();
  v18 = "entity_in_degree";
  if (v2 == v3 && (sub_1AE507DDC(), v9)
    || (v19 = (unint64_t)(v18 - 32),
        v8 = (unint64_t)(v18 - 32) | 0x8000000000000000,
        (sub_1AE4FD134() & 1) != 0))
  {
    sub_1AE509EA8();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v20 = "entity_out_degree";
  if (v2 == v3 + 1 && (sub_1AE507DDC(), v9)
    || (v8 = (unint64_t)(v20 - 32) | 0x8000000000000000, (sub_1AE4FD134() & 1) != 0))
  {
    sub_1AE5E7C74();
    swift_bridgeObjectRelease();
    ++v3;
    goto LABEL_8;
  }
  v8 = v3 + 3;
  if (v2 == v3 + 3 && v10 == 0x80000001AE97F8F0 || (sub_1AE4FD134() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v10 = v19 | 0x8000000000000000;
    sub_1AE5E7D50();
    goto LABEL_15;
  }
  v21 = v3 + 4;
  v22 = "same_type_out_degree";
  if (v2 == v3 + 4 && (sub_1AE4FBAD0(), v9)
    || (v19 = (unint64_t)(v22 - 32) | 0x8000000000000000, v5 = v21, (sub_1AE4FD134() & 1) != 0)
    || (v23 = "other_type_in_degree", v2 == v5) && (sub_1AE4FBAD0(), v9))
  {
    swift_bridgeObjectRelease();
    v2 = v3 + 1;
    v3 += 4;
LABEL_44:
    sub_1AE50627C();
LABEL_45:
    v10 = v19;
    goto LABEL_15;
  }
  v19 = 0xD000000000000014;
  v24 = (unint64_t)(v23 - 32) | 0x8000000000000000;
  if ((sub_1AE4FD134() & 1) != 0)
  {
    sub_1AE4F9038();
    v2 = 0xD000000000000011;
    sub_1AE50627C();
    v10 = v24;
    v3 = 0xD000000000000014;
    goto LABEL_15;
  }
  v25 = "other_type_out_degree";
  if (v2 == 0xD000000000000015 && (sub_1AE4FBAD0(), v9)
    || (v19 = (unint64_t)(v25 - 32) | 0x8000000000000000, (sub_1AE4FD134() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    sub_1AE5E7D1C();
    v2 = v24 + 2;
    v3 = v24 + 5;
    goto LABEL_44;
  }
  if (v2 == 0x656572676564 && v10 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    sub_1AE5E7CE0();
    goto LABEL_65;
  }
  if ((sub_1AE4FD134() & 1) != 0)
  {
    sub_1AE4F9038();
    v5 = 0xE600000000000000;
LABEL_65:
    v3 = 0x656572676564;
    v10 = 0xE600000000000000;
    v2 = 0x656572676564;
    goto LABEL_15;
  }
  v27 = v2 == 0x645F797469746E65 && v10 == 0xED00006565726765;
  if (v27 || (sub_1AE5074F8(), (sub_1AE4FD134() & 1) != 0))
  {
    sub_1AE50947C();
    swift_bridgeObjectRelease();
    v3 = 0x645F797469746E65;
    v10 = 0xED00006565726765;
    goto LABEL_15;
  }
  v28 = "entity_same_degree";
  if (v2 == 0xD000000000000012 && (sub_1AE4FBAD0(), v9)
    || (v19 = (unint64_t)(v28 - 32) | 0x8000000000000000, (sub_1AE4FD134() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    sub_1AE5E7D1C();
    v3 = v24 + 2;
    sub_1AE5E7D50();
    goto LABEL_45;
  }
  v29 = "entity_other_degree";
  if (v2 == v8)
  {
    sub_1AE507DDC();
    if (v9)
    {
      swift_bridgeObjectRelease();
      sub_1AE5E7D1C();
      v2 = v24 + 1;
      v3 = v24 + 3;
      sub_1AE50627C();
      goto LABEL_8;
    }
  }
  v19 = (unint64_t)(v29 - 32) | 0x8000000000000000;
  if ((sub_1AE4FD134() & 1) != 0)
  {
    sub_1AE4F9038();
    v2 = 0xD000000000000011;
    sub_1AE50627C();
    v3 = 0xD000000000000013;
    goto LABEL_45;
  }
  if (v2 == 0x6C6169636F73 && v10 == 0xE600000000000000)
  {
    v5 = 0xE600000000000000;
    sub_1AE5E7CE0();
  }
  else
  {
    if ((sub_1AE4FD134() & 1) == 0)
    {
      sub_1AE4F66CC();
      v5 = v10;
      v3 = v2;
      goto LABEL_15;
    }
    sub_1AE4F9038();
    v5 = 0xE600000000000000;
  }
  v3 = 0x6C6169636F73;
  v10 = 0xE600000000000000;
  v2 = 0x6C6169636F73;
LABEL_15:
  *v4 = v2;
  v4[1] = v5;
  v4[2] = v3;
  v4[3] = v10;
  sub_1AE4F66A8();
  result.value.columnName._object = v15;
  result.value.columnName._countAndFlagsBits = v14;
  result.value.name._object = v13;
  result.value.name._countAndFlagsBits = v12;
  return result;
}

uint64_t sub_1AE5E5E4C()
{
  sub_1AE5E7A9C();
  return sub_1AE926190();
}

uint64_t sub_1AE5E5EA8()
{
  sub_1AE5E7A9C();
  return sub_1AE926148();
}

unint64_t sub_1AE5E5EF4(Swift::String *a1)
{
  return (unint64_t)PopularityMetric.init(rawValue:)(*a1);
}

void sub_1AE5E5F00(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = PopularityMetric.name.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

uint64_t sub_1AE5E5F20()
{
  _QWORD *v0;

  return sub_1AE512B84(*v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1AE5E5F2C(uint64_t a1)
{
  _QWORD *v1;

  return sub_1AE5E8F28(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1AE5E5F38(uint64_t a1)
{
  _QWORD *v1;

  return sub_1AE54FE40(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1AE5E5F44(uint64_t a1, uint64_t a2)
{
  return sub_1AE5E6320(a1, a2, (void (*)(void))sub_1AE5E7AD8, (void (*)(void))sub_1AE5E7A9C);
}

uint64_t sub_1AE5E5F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE5E6394(a1, a2, a3, (void (*)(void))sub_1AE5E7A60, (void (*)(void))sub_1AE5E7A9C);
}

uint64_t sub_1AE5E5F6C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE5E6404(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AE5151E8);
}

uint64_t sub_1AE5E5F78()
{
  sub_1AE5E7A24();
  return sub_1AE92511C();
}

uint64_t sub_1AE5E5FB0()
{
  sub_1AE5E7A24();
  return sub_1AE925134();
}

IntelligencePlatform::DescriptionSignal_optional __swiftcall DescriptionSignal.init(rawValue:)(Swift::String rawValue)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  void *object;
  uint64_t countAndFlagsBits;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  BOOL v12;
  IntelligencePlatform::DescriptionSignal_optional result;

  object = rawValue._object;
  countAndFlagsBits = rawValue._countAndFlagsBits;
  v6 = v1;
  v7 = 0xD000000000000011;
  if (rawValue._countAndFlagsBits == 0xD000000000000011
    && (v2 = 0x80000001AE97F910, rawValue._object == (void *)0x80000001AE97F910)
    || (sub_1AE5E7CF8(), (sub_1AE4FB6F0() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    countAndFlagsBits = 0xD000000000000013;
    v3 = 0x80000001AE97F930;
    object = (void *)v2;
  }
  else
  {
    v7 = 0x6E6F437361696C61;
    v12 = countAndFlagsBits == 0x6E6F437361696C61 && object == (void *)0xEB00000000746163;
    if (v12 || (sub_1AE4FB6F0() & 1) != 0)
    {
      sub_1AE5E7C98();
      swift_bridgeObjectRelease();
      object = (void *)0xEB00000000746163;
    }
    else
    {
      swift_bridgeObjectRetain();
      v7 = countAndFlagsBits;
      v3 = (unint64_t)object;
    }
  }
  *v6 = v7;
  v6[1] = (unint64_t)object;
  v6[2] = countAndFlagsBits;
  v6[3] = v3;
  sub_1AE4FCDD0();
  result.value.columnName._object = v11;
  result.value.columnName._countAndFlagsBits = v10;
  result.value.name._object = v9;
  result.value.name._countAndFlagsBits = v8;
  return result;
}

IntelligencePlatform::DescriptionSignal_optional __swiftcall DescriptionSignal.init(columnName:)(Swift::String columnName)
{
  uint64_t *v1;
  unint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  BOOL v11;
  IntelligencePlatform::DescriptionSignal_optional result;

  object = columnName._object;
  countAndFlagsBits = columnName._countAndFlagsBits;
  v5 = v1;
  v6 = 0xD000000000000013;
  if (columnName._countAndFlagsBits == 0xD000000000000013 && columnName._object == (void *)0x80000001AE97F930
    || (sub_1AE4FB6F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    countAndFlagsBits = 0xD000000000000011;
    v2 = 0x80000001AE97F910;
    object = (void *)0x80000001AE97F930;
  }
  else
  {
    v6 = 0x6F635F7361696C61;
    v11 = countAndFlagsBits == 0x6F635F7361696C61 && object == (void *)0xEC0000007461636ELL;
    if (v11 || (sub_1AE4FB6F0() & 1) != 0)
    {
      sub_1AE50867C();
      swift_bridgeObjectRelease();
      object = (void *)0xEC0000007461636ELL;
    }
    else
    {
      swift_bridgeObjectRetain();
      v2 = (unint64_t)object;
      v6 = countAndFlagsBits;
    }
  }
  *v5 = countAndFlagsBits;
  v5[1] = v2;
  v5[2] = v6;
  v5[3] = (uint64_t)object;
  sub_1AE4FCDD0();
  result.value.columnName._object = v10;
  result.value.columnName._countAndFlagsBits = v9;
  result.value.name._object = v8;
  result.value.name._countAndFlagsBits = v7;
  return result;
}

uint64_t sub_1AE5E6258()
{
  sub_1AE5E79AC();
  return sub_1AE926190();
}

uint64_t sub_1AE5E62B4()
{
  sub_1AE5E79AC();
  return sub_1AE926148();
}

unint64_t sub_1AE5E6300(Swift::String *a1)
{
  return (unint64_t)DescriptionSignal.init(rawValue:)(*a1);
}

uint64_t sub_1AE5E630C(uint64_t a1, uint64_t a2)
{
  return sub_1AE5E6320(a1, a2, (void (*)(void))sub_1AE5E79E8, (void (*)(void))sub_1AE5E79AC);
}

uint64_t sub_1AE5E6320(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(void))
{
  a3();
  a4();
  return sub_1AE92514C();
}

uint64_t sub_1AE5E6380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE5E6394(a1, a2, a3, (void (*)(void))sub_1AE5E7970, (void (*)(void))sub_1AE5E79AC);
}

uint64_t sub_1AE5E6394(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  a4();
  a5();
  return sub_1AE925158();
}

uint64_t sub_1AE5E6404(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1AE5E6424()
{
  sub_1AE5E7934();
  return sub_1AE92511C();
}

uint64_t sub_1AE5E645C()
{
  sub_1AE5E7934();
  return sub_1AE925134();
}

__n128 Neighbor.init(identifier:relationPredicate:direction:type:)@<Q0>(unint64_t *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unsigned __int8 *a4@<X3>, __n128 *a5@<X4>, __n128 *a6@<X8>)
{
  unsigned __int8 v6;
  __n128 result;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;

  v6 = *a4;
  result = *a5;
  v8 = a5[1].n128_u64[0];
  v9 = a5[1].n128_u64[1];
  v10 = a5[2].n128_u8[0];
  a6->n128_u64[0] = *a1;
  a6->n128_u64[1] = a2;
  a6[1].n128_u64[0] = a3;
  a6[1].n128_u8[8] = v6;
  a6[2] = result;
  a6[3].n128_u64[0] = v8;
  a6[3].n128_u64[1] = v9;
  a6[4].n128_u8[0] = v10;
  return result;
}

uint64_t static Neighbor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  uint64_t result;
  char v11;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  v2 = *(_BYTE *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
  if (v8 || (v9 = sub_1AE4FB6F0(), result = 0, (v9 & 1) != 0))
  {
    sub_1AE510460(v2, v5);
    if ((v11 & 1) != 0)
    {
      if (v3 == v6 && v4 == v7)
        return 1;
      else
        return sub_1AE926D60();
    }
    return 0;
  }
  return result;
}

uint64_t sub_1AE5E6594(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AE97F950 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 1701869940 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v8 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_1AE5E6744(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE5E677C + 4 * byte_1AE940216[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_1AE5E677C()
{
  return 0xD000000000000011;
}

uint64_t sub_1AE5E6798()
{
  return 0x6F69746365726964;
}

uint64_t sub_1AE5E67B4()
{
  return 1701869940;
}

uint64_t sub_1AE5E67C4()
{
  unsigned __int8 *v0;

  return sub_1AE5E6744(*v0);
}

uint64_t sub_1AE5E67CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5E6594(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5E67F0()
{
  sub_1AE5E69EC();
  return sub_1AE926F94();
}

uint64_t sub_1AE5E6818()
{
  sub_1AE5E69EC();
  return sub_1AE926FA0();
}

void Neighbor.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1AE501548(&qword_1EED9D178);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F666C();
  v7 = v6 - v5;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE5E69EC();
  sub_1AE926F4C();
  sub_1AE52A494();
  sub_1AE5054EC();
  if (!v1)
  {
    sub_1AE926C88();
    sub_1AE5E6A28();
    sub_1AE5054EC();
    sub_1AE5BA840();
    sub_1AE5054EC();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  sub_1AE4F667C();
}

unint64_t sub_1AE5E69EC()
{
  unint64_t result;

  result = qword_1EED9D180;
  if (!qword_1EED9D180)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9409A8, &type metadata for Neighbor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D180);
  }
  return result;
}

unint64_t sub_1AE5E6A28()
{
  unint64_t result;

  result = qword_1EED9D188;
  if (!qword_1EED9D188)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RelationDirection, &type metadata for RelationDirection);
    atomic_store(result, (unint64_t *)&qword_1EED9D188);
  }
  return result;
}

void Neighbor.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v5 = sub_1AE501548(&qword_1EED9D190);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE5E69EC();
  sub_1AE926F34();
  if (v2)
  {
    sub_1AE4F90EC();
  }
  else
  {
    sub_1AE52A458();
    sub_1AE5E7C34();
    v6 = v11;
    LOBYTE(v11) = 1;
    v7 = sub_1AE926BB0();
    v9 = v8;
    v10 = v7;
    sub_1AE5E6C60();
    swift_bridgeObjectRetain();
    sub_1AE926BEC();
    sub_1AE5BA7C8();
    sub_1AE5E7C34();
    sub_1AE4F6A04();
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v10;
    *(_QWORD *)(a2 + 16) = v9;
    *(_BYTE *)(a2 + 24) = 1;
    *(_QWORD *)(a2 + 32) = v11;
    *(_QWORD *)(a2 + 40) = v12;
    *(_QWORD *)(a2 + 48) = v13;
    *(_QWORD *)(a2 + 56) = v14;
    *(_BYTE *)(a2 + 64) = v15;
    sub_1AE4F66CC();
    swift_bridgeObjectRetain();
    sub_1AE4F90EC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE4F67AC();
  }
  sub_1AE4F667C();
}

unint64_t sub_1AE5E6C60()
{
  unint64_t result;

  result = qword_1EED9D198;
  if (!qword_1EED9D198)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RelationDirection, &type metadata for RelationDirection);
    atomic_store(result, (unint64_t *)&qword_1EED9D198);
  }
  return result;
}

void sub_1AE5E6C9C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  Neighbor.init(from:)(a1, a2);
}

void sub_1AE5E6CB0(_QWORD *a1)
{
  Neighbor.encode(to:)(a1);
}

IntelligencePlatform::RelationDirection_optional __swiftcall RelationDirection.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  IntelligencePlatform::RelationDirection_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1AE926B44();
  result.value = sub_1AE4F6648();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t RelationDirection.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6472617774756FLL;
  else
    return 0x647261776E69;
}

unint64_t sub_1AE5E6D60()
{
  unint64_t result;

  result = qword_1EED9D1A0;
  if (!qword_1EED9D1A0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PopularityMetric, &type metadata for PopularityMetric);
    atomic_store(result, (unint64_t *)&qword_1EED9D1A0);
  }
  return result;
}

unint64_t sub_1AE5E6DA0()
{
  unint64_t result;

  result = qword_1EED9D1A8;
  if (!qword_1EED9D1A8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PopularityMetric, &type metadata for PopularityMetric);
    atomic_store(result, (unint64_t *)&qword_1EED9D1A8);
  }
  return result;
}

unint64_t sub_1AE5E6DE0()
{
  unint64_t result;

  result = qword_1EED9D1B0;
  if (!qword_1EED9D1B0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PopularityMetric, &type metadata for PopularityMetric);
    atomic_store(result, (unint64_t *)&qword_1EED9D1B0);
  }
  return result;
}

unint64_t sub_1AE5E6E20()
{
  unint64_t result;

  result = qword_1EED9D1B8;
  if (!qword_1EED9D1B8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for DescriptionSignal, &type metadata for DescriptionSignal);
    atomic_store(result, (unint64_t *)&qword_1EED9D1B8);
  }
  return result;
}

unint64_t sub_1AE5E6E60()
{
  unint64_t result;

  result = qword_1EED9D1C0;
  if (!qword_1EED9D1C0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for DescriptionSignal, &type metadata for DescriptionSignal);
    atomic_store(result, (unint64_t *)&qword_1EED9D1C0);
  }
  return result;
}

unint64_t sub_1AE5E6EA0()
{
  unint64_t result;

  result = qword_1EED9D1C8;
  if (!qword_1EED9D1C8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for DescriptionSignal, &type metadata for DescriptionSignal);
    atomic_store(result, (unint64_t *)&qword_1EED9D1C8);
  }
  return result;
}

void sub_1AE5E6EDC(char *a1, char *a2)
{
  sub_1AE510460(*a1, *a2);
}

unint64_t sub_1AE5E6EEC()
{
  unint64_t result;

  result = qword_1EED9D1D0;
  if (!qword_1EED9D1D0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RelationDirection, &type metadata for RelationDirection);
    atomic_store(result, (unint64_t *)&qword_1EED9D1D0);
  }
  return result;
}

void sub_1AE5E6F28()
{
  sub_1AE512C54();
}

uint64_t sub_1AE5E6F30()
{
  return sub_1AE5E8D50();
}

void sub_1AE5E6F38()
{
  sub_1AE54FDCC();
}

IntelligencePlatform::RelationDirection_optional sub_1AE5E6F40(Swift::String *a1)
{
  return RelationDirection.init(rawValue:)(*a1);
}

void sub_1AE5E6F4C(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = RelationDirection.rawValue.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

uint64_t sub_1AE5E6F6C()
{
  sub_1AE5E78F8();
  return sub_1AE926190();
}

uint64_t sub_1AE5E6FC8()
{
  sub_1AE5E78F8();
  return sub_1AE926148();
}

void *initializeWithCopy for EntityFeatures(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x3C8uLL);
}

uint64_t getEnumTagSinglePayload for EntityFeatures(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 968))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EntityFeatures(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 968) = v3;
  return result;
}

void type metadata accessor for EntityFeatures()
{
  sub_1AE4F67D4();
}

void type metadata accessor for PopularityMetric()
{
  sub_1AE4F67D4();
}

_QWORD *_s20IntelligencePlatform16PopularityMetricVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  sub_1AE4F6648();
  return a1;
}

void type metadata accessor for DescriptionSignal()
{
  sub_1AE4F67D4();
}

uint64_t destroy for Neighbor()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Neighbor(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Neighbor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

void *initializeWithTake for Neighbor(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41uLL);
}

uint64_t assignWithTake for Neighbor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for Neighbor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 65))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Neighbor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Neighbor()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for RelationDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE5E7498 + 4 * byte_1AE94021F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE5E74CC + 4 * byte_1AE94021A[v4]))();
}

uint64_t sub_1AE5E74CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5E74D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5E74DCLL);
  return result;
}

uint64_t sub_1AE5E74E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5E74F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE5E74F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5E74FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for RelationDirection()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for Neighbor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AE5E7560 + 4 * byte_1AE940229[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AE5E7594 + 4 * byte_1AE940224[v4]))();
}

uint64_t sub_1AE5E7594(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5E759C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5E75A4);
  return result;
}

uint64_t sub_1AE5E75B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5E75B8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AE5E75BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5E75C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Neighbor.CodingKeys()
{
  return &type metadata for Neighbor.CodingKeys;
}

uint64_t sub_1AE5E75E0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0x87)
  {
    if (a2 + 121 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 121) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 122;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x7A;
  v5 = v6 - 122;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1AE5E7668(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 121 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 121) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x87)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x86)
    return ((uint64_t (*)(void))((char *)&loc_1AE5E76B4 + 4 * byte_1AE940233[v4]))();
  *a1 = a2 + 121;
  return ((uint64_t (*)(void))((char *)sub_1AE5E76E8 + 4 * byte_1AE94022E[v4]))();
}

uint64_t sub_1AE5E76E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5E76F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5E76F8);
  return result;
}

uint64_t sub_1AE5E7704(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5E770CLL);
  *(_BYTE *)result = a2 + 121;
  return result;
}

uint64_t sub_1AE5E7710(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5E7718(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for EntityFeatures.CodingKeys()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE5E7734()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EED9D1D8;
  if (!qword_1EED9D1D8)
  {
    v1 = sub_1AE523CF0(&qword_1EED9D1E0);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EED9D1D8);
  }
  return result;
}

unint64_t sub_1AE5E777C()
{
  unint64_t result;

  result = qword_1EED9D1E8;
  if (!qword_1EED9D1E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9408C8, &unk_1E5DB57A0);
    atomic_store(result, (unint64_t *)&qword_1EED9D1E8);
  }
  return result;
}

unint64_t sub_1AE5E77BC()
{
  unint64_t result;

  result = qword_1EED9D1F0;
  if (!qword_1EED9D1F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE940980, &type metadata for Neighbor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D1F0);
  }
  return result;
}

unint64_t sub_1AE5E77FC()
{
  unint64_t result;

  result = qword_1EED9D1F8;
  if (!qword_1EED9D1F8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9408F0, &type metadata for Neighbor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D1F8);
  }
  return result;
}

unint64_t sub_1AE5E783C()
{
  unint64_t result;

  result = qword_1EED9D200;
  if (!qword_1EED9D200)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE940918, &type metadata for Neighbor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D200);
  }
  return result;
}

unint64_t sub_1AE5E787C()
{
  unint64_t result;

  result = qword_1ED30FAA8;
  if (!qword_1ED30FAA8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9407C8, &unk_1E5DB57A0);
    atomic_store(result, (unint64_t *)&qword_1ED30FAA8);
  }
  return result;
}

unint64_t sub_1AE5E78BC()
{
  unint64_t result;

  result = qword_1ED30FAA0;
  if (!qword_1ED30FAA0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9407F0, &unk_1E5DB57A0);
    atomic_store(result, (unint64_t *)&qword_1ED30FAA0);
  }
  return result;
}

unint64_t sub_1AE5E78F8()
{
  unint64_t result;

  result = qword_1EED9D208;
  if (!qword_1EED9D208)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RelationDirection, &type metadata for RelationDirection);
    atomic_store(result, (unint64_t *)&qword_1EED9D208);
  }
  return result;
}

unint64_t sub_1AE5E7934()
{
  unint64_t result;

  result = qword_1EED9D210;
  if (!qword_1EED9D210)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for DescriptionSignal, &type metadata for DescriptionSignal);
    atomic_store(result, (unint64_t *)&qword_1EED9D210);
  }
  return result;
}

unint64_t sub_1AE5E7970()
{
  unint64_t result;

  result = qword_1EED9D218;
  if (!qword_1EED9D218)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for DescriptionSignal, &type metadata for DescriptionSignal);
    atomic_store(result, (unint64_t *)&qword_1EED9D218);
  }
  return result;
}

unint64_t sub_1AE5E79AC()
{
  unint64_t result;

  result = qword_1EED9D220;
  if (!qword_1EED9D220)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for DescriptionSignal, &type metadata for DescriptionSignal);
    atomic_store(result, (unint64_t *)&qword_1EED9D220);
  }
  return result;
}

unint64_t sub_1AE5E79E8()
{
  unint64_t result;

  result = qword_1EED9D228;
  if (!qword_1EED9D228)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for DescriptionSignal, &type metadata for DescriptionSignal);
    atomic_store(result, (unint64_t *)&qword_1EED9D228);
  }
  return result;
}

unint64_t sub_1AE5E7A24()
{
  unint64_t result;

  result = qword_1EED9D230;
  if (!qword_1EED9D230)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PopularityMetric, &type metadata for PopularityMetric);
    atomic_store(result, (unint64_t *)&qword_1EED9D230);
  }
  return result;
}

unint64_t sub_1AE5E7A60()
{
  unint64_t result;

  result = qword_1EED9D238;
  if (!qword_1EED9D238)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PopularityMetric, &type metadata for PopularityMetric);
    atomic_store(result, (unint64_t *)&qword_1EED9D238);
  }
  return result;
}

unint64_t sub_1AE5E7A9C()
{
  unint64_t result;

  result = qword_1EED9D240;
  if (!qword_1EED9D240)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PopularityMetric, &type metadata for PopularityMetric);
    atomic_store(result, (unint64_t *)&qword_1EED9D240);
  }
  return result;
}

unint64_t sub_1AE5E7AD8()
{
  unint64_t result;

  result = qword_1EED9D248;
  if (!qword_1EED9D248)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PopularityMetric, &type metadata for PopularityMetric);
    atomic_store(result, (unint64_t *)&qword_1EED9D248);
  }
  return result;
}

uint64_t sub_1AE5E7B14(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1AE5E7B60 + 4 * byte_1AE94023D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1AE5E7B94 + 4 * byte_1AE940238[v4]))();
}

uint64_t sub_1AE5E7B94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5E7B9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5E7BA4);
  return result;
}

uint64_t sub_1AE5E7BB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5E7BB8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1AE5E7BBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5E7BC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for EntityFeatures.ContextualFeatures()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE5E7BE0()
{
  unint64_t result;

  result = qword_1EED995D0;
  if (!qword_1EED995D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE940A9C, &unk_1E5DB5710);
    atomic_store(result, (unint64_t *)&qword_1EED995D0);
  }
  return result;
}

uint64_t sub_1AE5E7C34()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE5E7CE0()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1AE5E7CF8()
{
  return 0xD000000000000011;
}

uint64_t sub_1AE5E7D10()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5E7D64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  double v7;
  double v8;
  unint64_t v9;
  _BYTE __dst[1128];
  _BYTE __src[1128];
  uint64_t v13;
  double v14[2];
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v17 = MEMORY[0x1E0DEE9D8];
  sub_1AE521C14();
  v3 = v17;
  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v18 = a1;
  if (v4)
  {
    v5 = 0;
    v6 = (double *)(a1 + 64);
    while (1)
    {
      v7 = *(v6 - 4);
      v8 = *(v6 - 3);
      v13 = v5;
      v14[0] = v7;
      v14[1] = v8;
      v15 = *((_OWORD *)v6 - 1);
      v16 = *(_OWORD *)v6;
      swift_bridgeObjectRetain();
      sub_1AE5F4390(v5, v14, __src);
      if (v1)
        break;
      swift_bridgeObjectRelease();
      memcpy(__dst, __src, sizeof(__dst));
      v17 = v3;
      v9 = *(_QWORD *)(v3 + 16);
      if (v9 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_1AE521C14();
        v3 = v17;
      }
      ++v5;
      v6 += 6;
      *(_QWORD *)(v3 + 16) = v9 + 1;
      memcpy((void *)(v3 + 1128 * v9 + 32), __dst, 0x468uLL);
      if (v4 == v5)
        goto LABEL_9;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1AE5E7ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v7;
  __int128 *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1AE521BAC();
    v7 = v14;
    v8 = (__int128 *)(a1 + 32);
    do
    {
      v13 = *v8;
      v10 = *(_QWORD *)(v14 + 16);
      v9 = *(_QWORD *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
        sub_1AE521BAC();
      *(_QWORD *)(v14 + 16) = v10 + 1;
      v11 = v14 + 32 * v10;
      *(_QWORD *)(v11 + 32) = a2;
      *(_QWORD *)(v11 + 40) = a3;
      *(_OWORD *)(v11 + 48) = v13;
      ++v8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v7;
}

uint64_t sub_1AE5E7FDC()
{
  sub_1AE4F66CC();
  sub_1AE50AAE8();
  return sub_1AE5FB7A4();
}

uint64_t sub_1AE5E8010()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E8090()
{
  sub_1AE4F66CC();
  sub_1AE50AAE8();
  return sub_1AE5FB7A4();
}

void sub_1AE5E80C4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE5E80FC()
{
  sub_1AE5FB914();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E81D8()
{
  sub_1AE5FBBCC();
  __asm { BR              X10 }
}

uint64_t sub_1AE5E8200()
{
  sub_1AE5FBF38();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E8240()
{
  sub_1AE5FC2F0();
  __asm { BR              X10 }
}

uint64_t sub_1AE5E8278()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E82E8()
{
  sub_1AE5FC234();
  sub_1AE4F6664();
}

void sub_1AE5E8300(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE5E8340()
{
  sub_1AE5154EC();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E83DC()
{
  Features.FeatureFlag.feature.getter();
  sub_1AE926940();
  sub_1AE5FB878();
  return sub_1AE5FBC04();
}

uint64_t sub_1AE5E8410()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E8454(uint64_t a1, uint64_t a2)
{
  return sub_1AE5E8BA8(a1, a2, (void (*)(void))PersonalKnowledgeToolResultAttributeSemanticType.rawValue.getter);
}

void sub_1AE5E8460(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE5E849C()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E84E8(uint64_t a1, uint64_t a2)
{
  return sub_1AE5E8BA8(a1, a2, (void (*)(void))KGQ.Keyword.rawValue.getter);
}

void sub_1AE5E84F4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE5E8530()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E85B8(uint64_t a1, uint64_t a2)
{
  return sub_1AE5E93E4(a1, a2, (void (*)(uint64_t))sub_1AE7911F0);
}

uint64_t sub_1AE5E85C4()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E8618(uint64_t a1, uint64_t a2)
{
  return sub_1AE5E93E4(a1, a2, (void (*)(uint64_t))sub_1AE7C2EC8);
}

void sub_1AE5E8624()
{
  sub_1AE5FBAA4();
  __asm { BR              X10 }
}

uint64_t sub_1AE5E864C()
{
  sub_1AE5FBF48();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E8678()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E86E0()
{
  sub_1AE926ED4();
  sub_1AE4F6664();
}

uint64_t sub_1AE5E8704()
{
  char v0;

  sub_1AE5093A4();
  if (!v0)
    sub_1AE508AD0();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E876C()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E87C0()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE5E87D0()
{
  sub_1AE5FBC7C();
  sub_1AE500980();
  return sub_1AE5FB7A4();
}

uint64_t sub_1AE5E87FC()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E8858()
{
  sub_1AE5FBE3C();
  __asm { BR              X10 }
}

uint64_t sub_1AE5E8890()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E8934()
{
  sub_1AE5FC2F0();
  sub_1AE5FC294();
  __asm { BR              X10 }
}

uint64_t sub_1AE5E8968()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E89C0()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E8A0C()
{
  sub_1AE926EF8();
  sub_1AE4F6664();
}

void sub_1AE5E8A30()
{
  sub_1AE5FBAA4();
  __asm { BR              X10 }
}

uint64_t sub_1AE5E8A58()
{
  sub_1AE5FBF48();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E8ABC()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E8B10(uint64_t a1, uint64_t a2)
{
  return sub_1AE5E8BA8(a1, a2, (void (*)(void))PersonEntityTagType.rawValue.getter);
}

uint64_t sub_1AE5E8B1C()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E8B90(uint64_t a1, uint64_t a2)
{
  return sub_1AE5E93E4(a1, a2, (void (*)(uint64_t))sub_1AE618890);
}

uint64_t sub_1AE5E8B9C(uint64_t a1, uint64_t a2)
{
  return sub_1AE5E8BA8(a1, a2, (void (*)(void))UserInterestsType.rawValue.getter);
}

uint64_t sub_1AE5E8BA8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  sub_1AE5FB878();
  return sub_1AE5FBC04();
}

uint64_t sub_1AE5E8BD8()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E8C38()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E8C84()
{
  sub_1AE5FC2F0();
  __asm { BR              X10 }
}

uint64_t sub_1AE5E8CBC()
{
  sub_1AE5154EC();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E8D50()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E8D9C()
{
  sub_1AE5FC080();
  __asm { BR              X10 }
}

uint64_t sub_1AE5E8DDC()
{
  sub_1AE5154EC();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E8E98(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE5E8EE0()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E8F2C()
{
  sub_1AE5FC2F0();
  __asm { BR              X10 }
}

uint64_t sub_1AE5E8F64()
{
  sub_1AE5154EC();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E8FE4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE5E9020()
{
  sub_1AE5FC294();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E9078()
{
  sub_1AE925F14();
  return swift_bridgeObjectRelease();
}

void sub_1AE5E90B4(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1AE5E90FC()
{
  sub_1AE508AD0();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E91A0()
{
  sub_1AE5FBFA8();
  __asm { BR              X10 }
}

uint64_t sub_1AE5E91D0()
{
  sub_1AE5154EC();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E9244(uint64_t a1, char a2)
{
  if (!a2)
    sub_1AE5FBFA8();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E92A4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE5E92E8()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E9364()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E93CC(uint64_t a1, uint64_t a2)
{
  return sub_1AE5E93E4(a1, a2, (void (*)(uint64_t))sub_1AE5E2020);
}

uint64_t sub_1AE5E93D8(uint64_t a1, uint64_t a2)
{
  return sub_1AE5E93E4(a1, a2, (void (*)(uint64_t))sub_1AE5E1F5C);
}

uint64_t sub_1AE5E93E4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  a3(a2);
  sub_1AE5FB878();
  return sub_1AE4FFFD0();
}

uint64_t sub_1AE5E940C(uint64_t a1, char a2)
{
  if (!a2)
    sub_1AE508AD0();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E9488(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1AE5E94D0()
{
  sub_1AE508AD0();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E954C()
{
  sub_1AE5FBBCC();
  __asm { BR              X10 }
}

uint64_t sub_1AE5E9574()
{
  sub_1AE5FC240();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E95C8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE5E9608()
{
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E9658()
{
  sub_1AE926ED4();
  sub_1AE4F6664();
}

void sub_1AE5E9678()
{
  sub_1AE926ED4();
  sub_1AE4F6664();
}

void sub_1AE5E9698()
{
  sub_1AE5FBE3C();
  __asm { BR              X10 }
}

uint64_t sub_1AE5E96D4()
{
  sub_1AE5FB914();
  sub_1AE500980();
  return sub_1AE4FFFD0();
}

void sub_1AE5E9714()
{
  sub_1AE926EEC();
  sub_1AE4F6664();
}

void sub_1AE5E9738(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AE889498();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1AE5F57E0(v5);
  *a1 = v2;
}

void sub_1AE5E97A0(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  BOOL v5;
  char v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  BOOL v10;

  v2 = a1[2];
  if (v2 == a2[2]
    && v2
    && a1 != a2
    && (a1[4] == a2[4] ? (v5 = a1[5] == a2[5]) : (v5 = 0),
        (v5 || (sub_1AE4FB6F0(), sub_1AE5FB9F4(), (v6 & 1) != 0)) && v2 != 1))
  {
    v7 = a2 + 7;
    v8 = a1 + 7;
    v9 = 1;
    while (v9 < v2)
    {
      v10 = *(v8 - 1) == *(v7 - 1) && *v8 == *v7;
      if (v10 || (sub_1AE4FB6F0() & 1) != 0)
      {
        ++v9;
        v7 += 2;
        v8 += 2;
        if (v2 != v9)
          continue;
      }
      goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    sub_1AE4F6624();
  }
}

void sub_1AE5E9858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  void (*v38)(_QWORD);
  BOOL v40;

  sub_1AE4FC4D4();
  a19 = v22;
  a20 = v23;
  sub_1AE5FBF78();
  v24 = type metadata accessor for KGQ.Value();
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v30 = (char *)&a9 - v29;
  v31 = *(_QWORD *)(v21 + 16);
  if (v31 == *(_QWORD *)(v20 + 16) && v31 && v21 != v20)
  {
    v32 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v33 = *(_QWORD *)(v28 + 72);
    v34 = v31 - 1;
    do
    {
      sub_1AE5FB4D8();
      sub_1AE5FB4D8();
      sub_1AE791A78((uint64_t)v30, (uint64_t)v27);
      v36 = v35;
      sub_1AE5FB50C((uint64_t)v27, (void (*)(_QWORD))type metadata accessor for KGQ.Value);
      v37 = sub_1AE595D8C();
      sub_1AE5FB50C(v37, v38);
      v40 = v34-- != 0;
      if ((v36 & 1) == 0)
        break;
      v32 += v33;
    }
    while (v40);
  }
  sub_1AE4F8180();
}

void sub_1AE5E9970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  int v40;
  char *v41;

  sub_1AE4FC4D4();
  v1 = v0;
  v3 = v2;
  v4 = type metadata accessor for KGQ.Value();
  v5 = MEMORY[0x1E0C80A78](v4);
  v41 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v33 - v8;
  v10 = *(_QWORD *)(v3 + 16);
  if (v10 != *(_QWORD *)(v1 + 16) || !v10 || v3 == v1)
    goto LABEL_28;
  v37 = v7;
  v11 = *(_QWORD *)(v3 + 40);
  v12 = *(_QWORD *)(v1 + 40);
  v13 = *(unsigned __int8 *)(v1 + 48);
  v39 = *(unsigned __int8 *)(v3 + 48);
  v40 = v13;
  v14 = *(_BYTE *)(v1 + 32);
  v15 = sub_1AE7911F0(*(_BYTE *)(v3 + 32));
  v17 = v16;
  if (v15 == sub_1AE7911F0(v14) && v17 == v18)
  {
    sub_1AE4F81B0();
    sub_1AE4FB75C();
    sub_1AE4F6824();
  }
  else
  {
    v20 = sub_1AE4FB6F0();
    sub_1AE4F81B0();
    sub_1AE4FB75C();
    sub_1AE4F66E8();
    sub_1AE4F6728();
    if ((v20 & 1) == 0)
      goto LABEL_25;
  }
  v21 = *(_QWORD *)(v11 + 16);
  if (v21 != *(_QWORD *)(v12 + 16))
  {
LABEL_25:
    sub_1AE4F6718();
    goto LABEL_27;
  }
  v34 = v1 + 32;
  v35 = v3 + 32;
  v36 = v10;
  v38 = 1;
  if (!v21 || v11 == v12)
  {
LABEL_19:
    sub_1AE4F76D8();
    sub_1AE4F6648();
    if (v39 != v40 || v38 == v36)
      goto LABEL_28;
    if (v38 < v36)
    {
      v32 = *(unsigned __int8 *)(v35 + 24 * v38);
      v40 = *(unsigned __int8 *)(v34 + 24 * v38 + 16);
      __asm { BR              X10 }
    }
LABEL_30:
    __break(1u);
    JUMPOUT(0x1AE5EA0C8);
  }
  v22 = 0;
  v23 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v24 = *(_QWORD *)(v37 + 72);
  while (1)
  {
    sub_1AE5FBED4();
    if (v22 >= *(_QWORD *)(v12 + 16))
    {
      __break(1u);
      goto LABEL_30;
    }
    v25 = v12;
    v26 = (uint64_t)v9;
    v27 = (uint64_t)v41;
    sub_1AE5FBED4();
    sub_1AE791A78(v26, v27);
    v29 = v28;
    v30 = v27;
    v9 = (char *)v26;
    sub_1AE5FBEB4(v30);
    sub_1AE5FBEB4(v26);
    if ((v29 & 1) == 0)
      break;
    ++v22;
    v23 += v24;
    v12 = v25;
    if (v21 == v22)
      goto LABEL_19;
  }
  sub_1AE4F76D8();
LABEL_27:
  swift_bridgeObjectRelease();
LABEL_28:
  sub_1AE4F8180();
}

uint64_t sub_1AE5EA198(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t sub_1AE5EA36C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v11;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return sub_1AE536584();
  if (!v2 || a1 == a2)
    return 1;
  v3 = (uint64_t *)(a1 + 32);
  v4 = (uint64_t *)(a2 + 32);
  v5 = v2 - 1;
  do
  {
    v7 = *v3++;
    v6 = v7;
    v9 = *v4++;
    v8 = v9;
    v11 = v5-- != 0;
    result = v6 == v8;
  }
  while (v6 == v8 && v11);
  return result;
}

uint64_t sub_1AE5EA3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = (uint64_t *)(a2 + 56);
    for (i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      v6 = *(i - 1);
      v5 = *i;
      v8 = *(v3 - 1);
      v7 = *v3;
      v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_1AE926D60() & 1) == 0)
        break;
      if (v5)
      {
        if (!v7)
          return 0;
        v10 = v6 == v8 && v5 == v7;
        if (!v10 && (sub_1AE926D60() & 1) == 0)
          return 0;
      }
      else if (v7)
      {
        return 0;
      }
      v3 += 4;
      if (!--v2)
        return 1;
    }
  }
  return 0;
}

void sub_1AE5EA494(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  BOOL v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a2 + 56);
    v4 = (_QWORD *)(a1 + 56);
    do
    {
      v5 = *(v4 - 1) == *(v3 - 1) && *v4 == *v3;
      if (!v5 && (sub_1AE4FB6F0() & 1) == 0)
        break;
      v3 += 5;
      v4 += 5;
      --v2;
    }
    while (v2);
  }
  sub_1AE4F6624();
}

uint64_t sub_1AE5EA508(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE v9[1128];
  _BYTE __dst[1128];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v7 = 1;
    }
    else
    {
      v3 = (char *)(a1 + 32);
      v4 = (char *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        memcpy(__dst, v3, sizeof(__dst));
        memcpy(v9, v4, sizeof(v9));
        v7 = static RerankedEntity.== infix(_:_:)((uint64_t)__dst);
        if ((v7 & 1) == 0)
          break;
        v5 = v6 - 1;
        v4 += 1128;
        v3 += 1128;
      }
      while (v6);
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1AE5EA5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = a2 + 56;
    for (i = a1 + 56; ; i += 32)
    {
      v23 = v2;
      v5 = *(_QWORD *)(i - 24) == *(_QWORD *)(v3 - 24) && *(_QWORD *)(i - 16) == *(_QWORD *)(v3 - 16);
      if (!v5 && (sub_1AE926D60() & 1) == 0)
        break;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v6 = sub_1AE926040();
      v7 = MEMORY[0x1AF4530E8](v6);
      v9 = v8;
      swift_bridgeObjectRelease();
      v10 = sub_1AE926040();
      v12 = v11;
      v14 = v13;
      v16 = v15;
      swift_bridgeObjectRelease();
      v17 = MEMORY[0x1AF4530E8](v10, v12, v14, v16);
      v19 = v18;
      swift_bridgeObjectRelease();
      if (v7 == v17 && v9 == v19)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v21 = sub_1AE926D60();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0)
          return 0;
      }
      v3 += 32;
      v2 = v23 - 1;
      if (v23 == 1)
        return 1;
    }
  }
  return 0;
}

void sub_1AE5EA76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  BOOL v37;

  sub_1AE4FC4D4();
  a19 = v22;
  a20 = v23;
  sub_1AE5FBF78();
  v24 = type metadata accessor for CodableLocation();
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (double *)((char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v25);
  v30 = (double *)((char *)&a9 - v29);
  v31 = *(_QWORD *)(v21 + 16);
  if (v31 == *(_QWORD *)(v20 + 16) && v31 && v21 != v20)
  {
    v32 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v33 = *(_QWORD *)(v28 + 72);
    v34 = v31 - 1;
    while (1)
    {
      sub_1AE5FBED4();
      sub_1AE5FBED4();
      if (*v30 != *v27
        || v30[1] != v27[1]
        || v30[2] != v27[2]
        || v30[3] != v27[3]
        || v30[4] != v27[4]
        || v30[5] != v27[5]
        || v30[6] != v27[6])
      {
        break;
      }
      v35 = sub_1AE924894();
      sub_1AE5FBEB4((uint64_t)v27);
      sub_1AE5FBEB4((uint64_t)v30);
      v37 = v34-- != 0;
      if ((v35 & 1) != 0)
      {
        v32 += v33;
        if (v37)
          continue;
      }
      goto LABEL_20;
    }
    sub_1AE5FB50C((uint64_t)v27, (void (*)(_QWORD))type metadata accessor for CodableLocation);
    sub_1AE5FB50C((uint64_t)v30, (void (*)(_QWORD))type metadata accessor for CodableLocation);
  }
LABEL_20:
  sub_1AE4F8180();
}

void sub_1AE5EA90C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE4FC4D4();
  v2 = *(_QWORD *)(v0 + 16);
  if (v2 == *(_QWORD *)(v1 + 16) && v2 && v0 != v1)
  {
    sub_1AE5FC080();
    ((void (*)(uint64_t))((char *)&loc_1AE5EA998 + 4 * byte_1AE940BAE[v3]))(0x616D726F4E6C6C61);
  }
  else
  {
    sub_1AE4F8180();
  }
}

BOOL sub_1AE5EAB60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  float *v5;
  float *v6;
  float v7;
  float v8;
  float v9;
  float v10;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (float *)(a1 + 36);
  v6 = (float *)(a2 + 36);
  do
  {
    v7 = *v5++;
    v8 = v7;
    v9 = *v6++;
    v10 = v9;
    v12 = v4-- != 0;
    result = v8 == v10;
  }
  while (v8 == v10 && v12);
  return result;
}

uint64_t sub_1AE5EABD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  double *v5;
  double *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return sub_1AE536584();
  if (!v2 || a1 == a2)
    return 1;
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    return sub_1AE536584();
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (double *)(a1 + 40);
  v6 = (double *)(a2 + 40);
  do
  {
    v7 = *v5++;
    v8 = v7;
    v9 = *v6++;
    v10 = v9;
    v12 = v4-- != 0;
    result = v8 == v10;
  }
  while (v8 == v10 && v12);
  return result;
}

uint64_t sub_1AE5EAC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, unsigned __int8 a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  unsigned __int8 *v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  char v62;
  _BYTE v63[7];
  uint64_t v64;
  uint64_t v65;

  sub_1AE4FC4D4();
  v64 = v11;
  v65 = v12;
  v59 = v13;
  v60 = v14;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v49 = v23;
  v25 = v24;
  v55 = a10;
  v56 = a11;
  v57 = v26;
  v58 = a9;
  v27 = sub_1AE924918();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v48 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *v18;
  v33 = *v16;
  v32 = v16[1];
  v34 = v16[2];
  v35 = v16[3];
  v54 = *((unsigned __int16 *)v16 + 16) | (*((unsigned __int8 *)v16 + 34) << 16);
  v52 = v34;
  v53 = v32;
  v51 = v35;
  v50 = v31;
  if (!v20)
    goto LABEL_5;
  if (!v22)
  {
    sub_1AE4F6718();
LABEL_5:
    v37 = 0;
    v36 = v49;
    goto LABEL_6;
  }
  sub_1AE4F6A24();
  v36 = v49;
  v37 = sub_1AE5E7ED8(v20, v49, v22);
  sub_1AE4F6718();
  sub_1AE4F66E8();
LABEL_6:
  sub_1AE92490C();
  v38 = sub_1AE9248E8();
  v40 = v39;
  result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  v42 = v55 & 1;
  v43 = v56 & 1;
  *(_QWORD *)v25 = v36;
  *(_QWORD *)(v25 + 8) = v22;
  *(_QWORD *)(v25 + 16) = v57;
  *(_QWORD *)(v25 + 24) = v37;
  *(_QWORD *)(v25 + 32) = v38;
  *(_QWORD *)(v25 + 40) = v40;
  *(_BYTE *)(v25 + 48) = v50;
  *(_DWORD *)(v25 + 49) = *(_DWORD *)v63;
  *(_DWORD *)(v25 + 52) = *(_DWORD *)&v63[3];
  v44 = v53;
  *(_QWORD *)(v25 + 56) = v33;
  *(_QWORD *)(v25 + 64) = v44;
  v45 = v51;
  *(_QWORD *)(v25 + 72) = v52;
  *(_QWORD *)(v25 + 80) = v45;
  v46 = v54;
  *(_BYTE *)(v25 + 90) = BYTE2(v54);
  *(_WORD *)(v25 + 88) = v46;
  *(_DWORD *)(v25 + 91) = v61;
  *(_BYTE *)(v25 + 95) = v62;
  v47 = v60;
  *(_QWORD *)(v25 + 96) = v59;
  *(_QWORD *)(v25 + 104) = v47;
  *(_QWORD *)(v25 + 112) = v58;
  *(_BYTE *)(v25 + 120) = v42;
  *(_BYTE *)(v25 + 121) = v43;
  return result;
}

void EntityResolutionError.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1AE5EAE50()
{
  uint64_t v1;

  sub_1AE5FB7C4();
  sub_1AE92691C();
  sub_1AE505D44();
  sub_1AE5FBE00();
  sub_1AE4F6A14();
  sub_1AE925F74();
  return v1;
}

void sub_1AE5EAFEC()
{
  JUMPOUT(0x1AE5EAE90);
}

void sub_1AE5EAFFC()
{
  JUMPOUT(0x1AE5EAE90);
}

void sub_1AE5EB00C()
{
  JUMPOUT(0x1AE5EAE90);
}

uint64_t PreprocessingStep.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE5EB05C + 4 * byte_1AE940BCD[*v0]))(0x616D726F4E6C6C61, 0xEE007372657A696CLL);
}

uint64_t sub_1AE5EB05C()
{
  return 0x7361637265776F6CLL;
}

uint64_t sub_1AE5EB078()
{
  return 0x6F72706572506F6ELL;
}

void sub_1AE5EB09C()
{
  sub_1AE4FDA58();
}

uint64_t sub_1AE5EB0C0()
{
  return 0x696C617469706163;
}

uint64_t sub_1AE5EB0DC()
{
  return 0x74786554646170;
}

unint64_t sub_1AE5EB0F4()
{
  sub_1AE4FDA58();
  return 0xD000000000000012;
}

uint64_t sub_1AE5EB114()
{
  return 0x6E756870726F6DLL;
}

void sub_1AE5EB12C(char *a1)
{
  sub_1AE5116C4(*a1);
}

void sub_1AE5EB138()
{
  unsigned __int8 *v0;

  sub_1AE512C48(*v0);
}

void sub_1AE5EB140()
{
  sub_1AE5E8D9C();
}

void sub_1AE5EB148(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FE28(a1, *v1);
}

void sub_1AE5EB150(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = PreprocessingStep.rawValue.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

uint64_t sub_1AE5EB170()
{
  sub_1AE4F5848();
  return sub_1AE926148();
}

void static CandidateConstraint.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1AE5EB224()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;

  if (v3)
  {
    *(_QWORD *)(v8 - 208) = v0;
    sub_1AE574158(v6, v0, v7, v5, v4, v3);
    v13 = sub_1AE5FBE74();
    sub_1AE574158(v13, v14, v15, v16, v17, v2);
    v18 = sub_1AE5FBE74();
    sub_1AE57420C(v18, v19, v20, v21, v22, v2);
    sub_1AE57420C(v6, *(_QWORD *)(v8 - 208), v7, v5, v4, v3);
    v12 = 0;
  }
  else
  {
    if (v1 == v6 && *(_QWORD *)(v8 - 176) == v0)
    {
      v12 = 1;
    }
    else
    {
      v10 = v0;
      v11 = sub_1AE926D60();
      v0 = v10;
      v12 = v11;
    }
    v37 = v7;
    v23 = v7;
    v24 = v5;
    v25 = v0;
    v26 = v4;
    sub_1AE5FC094(v6, v0, v23, v24);
    v27 = sub_1AE5FBD1C();
    v28 = *(unsigned int *)(v8 - 180);
    sub_1AE5FC094(v27, v29, v30, v31);
    v32 = sub_1AE5FC20C();
    sub_1AE57420C(v32, v33, v34, v35, v28, 0);
    sub_1AE57420C(v6, v25, v37, v24, v26, 0);
  }
  return v12 & 1;
}

void CandidateConstraint.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1AE5EB8AC()
{
  sub_1AE5FBFC0();
  sub_1AE4F66C4();
  sub_1AE5FC328();
  sub_1AE4FE9F8();
  return swift_bridgeObjectRelease();
}

void sub_1AE5EB8E0()
{
  sub_1AE5FBFC0();
  sub_1AE4FE9F8();
  sub_1AE5F6160();
}

void sub_1AE5EB90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1AE5FB7EC();
  sub_1AE5FBFC0();
  sub_1AE574158(v23, v24, v22, v19, v21, v20);
  v25 = sub_1AE5FBF04();
  sub_1AE574158(v25, v26, a12, a11, a10, v18);
  sub_1AE5FC2C0();
  sub_1AE5FC2C0();
  sub_1AE57420C(v23, v24, v22, v19, v21, v20);
  sub_1AE57420C(a18, a17, a12, a11, a10, v18);
  sub_1AE4FE9F8();
}

uint64_t sub_1AE5EB9D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x6964657250736168 && a2 == 0xEC00000065746163;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6564756C637865 && a2 == 0xE700000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x746573627573 && a2 == 0xE600000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 6581857 && a2 == 0xE300000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 29295 && a2 == 0xE200000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1AE926D60();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1AE5EBBC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE5EBC04 + 4 * byte_1AE940BDF[a1]))(0x6964657250736168, 0xEC00000065746163);
}

uint64_t sub_1AE5EBC04()
{
  return 0x6564756C637865;
}

uint64_t sub_1AE5EBC1C()
{
  return 0x746573627573;
}

uint64_t sub_1AE5EBC30()
{
  return 6581857;
}

uint64_t sub_1AE5EBC40()
{
  return 29295;
}

uint64_t sub_1AE5EBC4C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7461636964657270 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE5EBCDC()
{
  return 0x7461636964657270;
}

void sub_1AE5EBCF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v4 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v4
    || (sub_1AE5FC2B4(), (sub_1AE4FB6F0() & 1) != 0)
    || (v3 == 12639 ? (v5 = v2 == 0xE200000000000000) : (v5 = 0), v5))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE4FB6F0();
    sub_1AE4F6648();
  }
  sub_1AE4F6624();
}

uint64_t sub_1AE5EBDA4(char a1)
{
  if ((a1 & 1) != 0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_1AE5EBDBC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7365697469746E65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE4FB6F0();
    sub_1AE4F6648();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE5EBE38()
{
  return 0x7365697469746E65;
}

uint64_t sub_1AE5EBE50()
{
  sub_1AE5F6248();
  return sub_1AE926F94();
}

uint64_t sub_1AE5EBE78()
{
  sub_1AE5F6248();
  return sub_1AE926FA0();
}

uint64_t sub_1AE5EBEA0()
{
  unsigned __int8 *v0;

  return sub_1AE5EBBC8(*v0);
}

uint64_t sub_1AE5EBEA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5EB9D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5EBECC()
{
  sub_1AE5F6194();
  return sub_1AE926F94();
}

uint64_t sub_1AE5EBEF4()
{
  sub_1AE5F6194();
  return sub_1AE926FA0();
}

uint64_t sub_1AE5EBF20()
{
  sub_1AE5F62C0();
  return sub_1AE926F94();
}

uint64_t sub_1AE5EBF48()
{
  sub_1AE5F62C0();
  return sub_1AE926FA0();
}

uint64_t sub_1AE5EBF74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5EBC4C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE5EBF9C()
{
  sub_1AE5F62FC();
  return sub_1AE926F94();
}

uint64_t sub_1AE5EBFC4()
{
  sub_1AE5F62FC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE5EBFEC()
{
  char *v0;

  return sub_1AE5EBDA4(*v0);
}

void sub_1AE5EBFF4(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_1AE5EBCF8(a1, a2);
  *a3 = v4;
}

uint64_t sub_1AE5EC018()
{
  sub_1AE5F61D0();
  return sub_1AE926F94();
}

uint64_t sub_1AE5EC040()
{
  sub_1AE5F61D0();
  return sub_1AE926FA0();
}

uint64_t sub_1AE5EC068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5EBDBC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE5EC090()
{
  sub_1AE5F6284();
  return sub_1AE926F94();
}

uint64_t sub_1AE5EC0B8()
{
  sub_1AE5F6284();
  return sub_1AE926FA0();
}

void CandidateConstraint.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1AE4F67EC();
  v2 = v1;
  sub_1AE501548(&qword_1EED9D250);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE5079A4(v4, v11);
  sub_1AE501548(&qword_1EED9D258);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9D260);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9D268);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE50688C();
  sub_1AE501548(&qword_1EED9D270);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F683C();
  sub_1AE501548(&qword_1EED9D278);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F9024();
  v10 = *(unsigned __int8 *)(v0 + 34);
  sub_1AE5FBEEC(v2);
  sub_1AE5F6194();
  sub_1AE5085CC();
  __asm { BR              X9 }
}

void sub_1AE5EC278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  *(_BYTE *)(v4 - 128) = 0;
  sub_1AE5F62FC();
  sub_1AE5FB900();
  v5 = *(_QWORD *)(v4 - 256);
  *(_QWORD *)(v4 - 128) = v2;
  *(_QWORD *)(v4 - 120) = v5;
  v6 = *(_QWORD *)(v4 - 272);
  *(_QWORD *)(v4 - 112) = *(_QWORD *)(v4 - 264);
  *(_QWORD *)(v4 - 104) = v6;
  *(_WORD *)(v4 - 96) = *(_DWORD *)(v4 - 280);
  sub_1AE5C7844();
  sub_1AE5FBECC();
  v7 = sub_1AE5FBEBC();
  v8(v7, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 144) + 8))(v1, v0);
  sub_1AE595D68();
  sub_1AE4F667C();
}

uint64_t CandidateConstraint.hashValue.getter()
{
  sub_1AE4F76E0();
  CandidateConstraint.hash(into:)();
  return sub_1AE4F905C();
}

void CandidateConstraint.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  sub_1AE4F67EC();
  v4 = v3;
  sub_1AE501548(&qword_1EED9D2C0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9D2C8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9D2D0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE5079A4(v8, v24);
  sub_1AE501548(&qword_1EED9D2D8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9D2E0);
  sub_1AE506C14();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F910C();
  v11 = sub_1AE501548(&qword_1EED9D2E8);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F6744();
  sub_1AE4F9858(v4, v4[3]);
  sub_1AE5F6194();
  sub_1AE926F34();
  if (!v0)
  {
    v25 = v2;
    v13 = sub_1AE926C1C();
    v14 = *(_QWORD *)(v13 + 16);
    v15 = v11;
    if (v14)
    {
      v16 = *(unsigned __int8 *)(v13 + 32);
      sub_1AE50AF34(1, v14, v13, v13 + 32, 0, (2 * v14) | 1);
      v18 = v17;
      v20 = v19;
      sub_1AE4F67AC();
      if (v18 == v20 >> 1)
        __asm { BR              X9 }
      v15 = v11;
    }
    v21 = sub_1AE926988();
    swift_allocError();
    v23 = v22;
    sub_1AE501548(&qword_1EED99C38);
    *v23 = &type metadata for CandidateConstraint;
    sub_1AE926B5C();
    sub_1AE92697C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0DEC450], v21);
    swift_willThrow();
    sub_1AE4F8214();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v1, v15);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v4);
  sub_1AE595D68();
  sub_1AE4F667C();
}

void sub_1AE5ED038()
{
  CandidateConstraint.init(from:)();
}

void sub_1AE5ED04C()
{
  CandidateConstraint.encode(to:)();
}

uint64_t sub_1AE5ED068()
{
  sub_1AE926EC8();
  CandidateConstraint.hash(into:)();
  return sub_1AE926F10();
}

void EntitySourceID.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1AE4F6804();
  sub_1AE925F14();
  sub_1AE4F67AC();
  if (v1)
    sub_1AE925F14();
  else
    sub_1AE4FCDD0();
}

void static EntitySourceID.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a2[2];
  v4 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (sub_1AE4FB6F0(), sub_1AE5FB9F4(), (v7 & 1) != 0))
  {
    if (v3 && v4 && (v2 != v5 || v3 != v4))
      sub_1AE4FB6F0();
  }
  sub_1AE4F6624();
}

uint64_t sub_1AE5ED1A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE5ED284(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656372756F73;
  else
    return 0x65756C6176;
}

uint64_t sub_1AE5ED2B4()
{
  char *v0;

  return sub_1AE5ED284(*v0);
}

uint64_t sub_1AE5ED2BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5ED1A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5ED2E0()
{
  sub_1AE5F63B8();
  return sub_1AE926F94();
}

uint64_t sub_1AE5ED308()
{
  sub_1AE5F63B8();
  return sub_1AE926FA0();
}

void EntitySourceID.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE4F67EC();
  v3 = v2;
  v5 = *(_QWORD *)(sub_1AE501548(&qword_1EED9D300) - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE5F63B8();
  sub_1AE5FBD08();
  sub_1AE4FD9E0();
  if (!v0)
    sub_1AE5FC1D4();
  sub_1AE4FDC10(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_1AE595D68();
  sub_1AE4F667C();
}

uint64_t EntitySourceID.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1AE4F76E0();
  sub_1AE4F6730();
  sub_1AE5FBD68();
  sub_1AE4F81B8();
  if (v1)
    sub_1AE50AAE8();
  return sub_1AE4F905C();
}

void EntitySourceID.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;

  sub_1AE4F67EC();
  a22 = v25;
  a23 = v26;
  sub_1AE5FC2FC();
  v28 = v27;
  sub_1AE501548(&qword_1EED9D310);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE505354();
  sub_1AE5F63B8();
  sub_1AE5068D4();
  if (v23)
  {
    sub_1AE4F90EC();
  }
  else
  {
    a13 = 0;
    v32 = sub_1AE5FBCFC();
    v34 = v33;
    a12 = 1;
    sub_1AE509358();
    v35 = sub_1AE926B68();
    v37 = v36;
    v38 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8);
    v39 = v35;
    sub_1AE4F77C0((uint64_t)v31, v38);
    *v28 = v32;
    v28[1] = v34;
    v28[2] = v39;
    v28[3] = v37;
    sub_1AE4F66CC();
    sub_1AE4F90EC();
    sub_1AE4F9038();
    sub_1AE4F6728();
  }
  sub_1AE5FBE20();
  sub_1AE4F667C();
}

#error "1AE5ED588: call analysis failed (funcsize=5)"

void sub_1AE5ED594()
{
  EntitySourceID.encode(to:)();
}

uint64_t sub_1AE5ED5B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1AE926EC8();
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  if (v1)
    sub_1AE925F14();
  return sub_1AE926F10();
}

void EntitySourceID.description.getter()
{
  sub_1AE5FB7C4();
  sub_1AE92691C();
  sub_1AE505D44();
  sub_1AE5FBE00();
  sub_1AE4F66C4();
  sub_1AE4F6A14();
  sub_1AE4F665C();
  sub_1AE925F74();
  sub_1AE4F6730();
  sub_1AE4F6A14();
  sub_1AE4F665C();
  sub_1AE501BAC();
}

uint64_t static EntityResolutionRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t result;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v38;
  int v39;
  int v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  _QWORD v67[4];
  __int16 v68;
  char v69;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v66 = *(_QWORD *)(a1 + 40);
  v64 = *(unsigned __int8 *)(a1 + 90);
  v7 = *(unsigned __int16 *)(a1 + 88);
  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a2 + 80);
  v17 = *(unsigned __int8 *)(a2 + 90);
  v65 = *(unsigned __int16 *)(a2 + 88);
  if (v3)
  {
    if (!v8)
      return 0;
    v58 = *(_QWORD *)(a2 + 96);
    v59 = *(_QWORD *)(a1 + 96);
    *(_QWORD *)&v57 = *(_QWORD *)(a2 + 112);
    *((_QWORD *)&v57 + 1) = *(_QWORD *)(a1 + 112);
    v55 = *(_QWORD *)(a2 + 104);
    v56 = *(_QWORD *)(a1 + 104);
    v60 = *(_QWORD *)(a1 + 56);
    v61 = *(_QWORD *)(a1 + 64);
    v62 = *(_QWORD *)(a1 + 72);
    v63 = *(_QWORD *)(a1 + 80);
    if (*(_QWORD *)a1 != *(_QWORD *)a2 || v3 != v8)
    {
      sub_1AE926D60();
      result = sub_1AE5FB9F4();
      if ((v20 & 1) == 0)
        return result;
    }
  }
  else
  {
    v58 = *(_QWORD *)(a2 + 96);
    v59 = *(_QWORD *)(a1 + 96);
    *(_QWORD *)&v57 = *(_QWORD *)(a2 + 112);
    *((_QWORD *)&v57 + 1) = *(_QWORD *)(a1 + 112);
    v55 = *(_QWORD *)(a2 + 104);
    v56 = *(_QWORD *)(a1 + 104);
    v60 = *(_QWORD *)(a1 + 56);
    v61 = *(_QWORD *)(a1 + 64);
    v62 = *(_QWORD *)(a1 + 72);
    v63 = *(_QWORD *)(a1 + 80);
    if (v8)
      return 0;
  }
  if (v4)
  {
    if (!v9)
      return 0;
    v21 = sub_1AE4F7714();
    v23 = v22;
    v25 = v24;
    v53 = v6;
    v26 = v14;
    v27 = v16;
    v29 = v28;
    v31 = v30;
    sub_1AE5EA494(v21, v32);
    v10 = v31;
    v17 = v29;
    v16 = v27;
    v14 = v26;
    v6 = v53;
    v5 = v25;
    v15 = v23;
    if ((v33 & 1) == 0)
      return 0;
  }
  else if (v9)
  {
    return 0;
  }
  if (v6)
  {
    if (!v10)
      return 0;
    v52 = v5;
    v54 = v15;
    v51 = v17;
    v34 = v10;
    swift_bridgeObjectRetain();
    v35 = sub_1AE4F6708();
    v36 = sub_1AE5EA5B0(v35, v34);
    sub_1AE4F76D8();
    sub_1AE4F9038();
    v17 = v51;
    v5 = v52;
    v15 = v54;
    if ((v36 & 1) == 0)
      return 0;
  }
  else if (v10)
  {
    return 0;
  }
  if (v5 != v11 || v66 != v12)
  {
    sub_1AE926D60();
    result = sub_1AE5FB9F4();
    if ((v38 & 1) == 0)
      return result;
  }
  v39 = v17;
  v40 = v7;
  v41 = v15;
  sub_1AE510CF0();
  if ((v42 & 1) == 0)
    return 0;
  v43 = v40 | (v64 << 16);
  v44 = v65 | (v39 << 16);
  v45 = v59;
  v46 = v41;
  if (BYTE2(v43) == 255)
  {
    if (BYTE2(v44) == 255)
      goto LABEL_35;
LABEL_31:
    v47 = v46;
    sub_1AE5E1ED4(v13, v14, v16, v46, v44);
    sub_1AE5741F8(v60, v61, v62, v63, v43);
    sub_1AE5741F8(v13, v14, v16, v47, v44);
    return 0;
  }
  v67[0] = v60;
  v67[1] = v61;
  v67[2] = v62;
  v67[3] = v63;
  v68 = v40;
  v69 = (v40 | (v64 << 16)) >> 16;
  if (BYTE2(v44) == 255)
  {
    sub_1AE5FB928(v60, v61);
    sub_1AE5FBE10(v60, v61, v62);
    v46 = v41;
    goto LABEL_31;
  }
  sub_1AE5FB928(v60, v61);
  static CandidateConstraint.== infix(_:_:)((uint64_t)v67);
  v49 = v48;
  sub_1AE5FBE10(v60, v61, v62);
  sub_1AE5741F8(v60, v61, v62, v63, v43);
  v45 = v59;
  if ((v49 & 1) == 0)
    return 0;
LABEL_35:
  if (!v45)
  {
    if (!v58)
      goto LABEL_40;
    return 0;
  }
  if (!v58 || (sub_1AE5EA3C4(v45, v58) & 1) == 0)
    return 0;
LABEL_40:
  result = v57 == 0;
  if (*((_QWORD *)&v57 + 1) && (_QWORD)v57)
  {
    if (v56 == v55 && *((_QWORD *)&v57 + 1) == (_QWORD)v57)
      return 1;
    else
      return sub_1AE926D60();
  }
  return result;
}

void EntityResolutionRequest.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(unsigned __int8 *)(v1 + 90);
  v6 = *(unsigned __int16 *)(v1 + 88);
  if (*(_QWORD *)(v1 + 8))
  {
    sub_1AE5FBA30();
    sub_1AE4F67A4();
    sub_1AE925F14();
    sub_1AE4F6728();
    if (v3)
    {
LABEL_3:
      sub_1AE5FBA30();
      swift_bridgeObjectRetain();
      sub_1AE5F6484(a1, v3);
      sub_1AE4F66E8();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1AE5FBA30();
    if (v3)
      goto LABEL_3;
  }
  sub_1AE5FBA30();
LABEL_6:
  v7 = v6 | (v5 << 16);
  sub_1AE5FBA30();
  if (v4)
  {
    sub_1AE4F6804();
    sub_1AE5F63F4(a1, v4);
    sub_1AE4F67AC();
  }
  sub_1AE5E8A30();
  sub_1AE4F66C4();
  sub_1AE5FC328();
  sub_1AE4F665C();
  sub_1AE5FBA30();
  if (v7 < 0xFF0000)
    CandidateConstraint.hash(into:)();
}

uint64_t sub_1AE5EDC44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v12;

  v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AE97FD60 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x736E617073 && a2 == 0xE500000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x4974736575716572 && a2 == 0xE900000000000064;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 1701080941 && a2 == 0xE400000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x80000001AE97FD80 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v9 = a1 == 0x4449656372756F73 && a2 == 0xE900000000000073;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v10 = a1 == 7432043 && a2 == 0xE300000000000000;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              v11 = a1 == 0x466564756C636E69 && a2 == 0xEF73657275746165;
              if (v11 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0xD000000000000014 && a2 == 0x80000001AE97FDA0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else
              {
                v12 = sub_1AE926D60();
                swift_bridgeObjectRelease();
                if ((v12 & 1) != 0)
                  return 9;
                else
                  return 10;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE5EE018()
{
  return 10;
}

uint64_t sub_1AE5EE020(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE5EE04C + 4 * byte_1AE940BEE[a1]))(1954047348, 0xE400000000000000);
}

unint64_t sub_1AE5EE04C()
{
  return 0xD000000000000011;
}

uint64_t sub_1AE5EE068()
{
  return 0x736E617073;
}

uint64_t sub_1AE5EE07C()
{
  return 0x4974736575716572;
}

uint64_t sub_1AE5EE098()
{
  return 1701080941;
}

unint64_t sub_1AE5EE0A4()
{
  return 0xD000000000000013;
}

uint64_t sub_1AE5EE130()
{
  unsigned __int8 *v0;

  return sub_1AE5EE020(*v0);
}

uint64_t sub_1AE5EE138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5EDC44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5EE15C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE5EE018();
  *a1 = result;
  return result;
}

uint64_t sub_1AE5EE180()
{
  sub_1AE5F6510();
  return sub_1AE926F94();
}

uint64_t sub_1AE5EE1A8()
{
  sub_1AE5F6510();
  return sub_1AE926FA0();
}

void EntityResolutionRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD v19[4];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;
  char v39;
  char v40;

  sub_1AE4F67EC();
  v33 = v1;
  v3 = v2;
  v4 = sub_1AE501548(&qword_1EED9D318);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 24);
  v32 = v8;
  v9 = *(_QWORD *)(v0 + 32);
  v29 = *(_QWORD *)(v0 + 40);
  v30 = v9;
  v40 = *(_BYTE *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 56);
  v24 = v10;
  v11 = *(_QWORD *)(v0 + 72);
  v27 = *(_QWORD *)(v0 + 80);
  v28 = v11;
  LODWORD(v11) = *(unsigned __int8 *)(v0 + 90);
  v25 = *(unsigned __int16 *)(v0 + 88);
  v26 = v11;
  v12 = *(_QWORD *)(v0 + 96);
  v20 = *(_QWORD *)(v0 + 104);
  v21 = *(_QWORD *)(v0 + 112);
  v22 = v12;
  v19[3] = *(unsigned __int8 *)(v0 + 120);
  v13 = v3[3];
  v14 = v3;
  v16 = v15;
  sub_1AE4F9858(v14, v13);
  sub_1AE5F6510();
  sub_1AE926F4C();
  LOBYTE(v34) = 0;
  v17 = v33;
  sub_1AE926C40();
  if (!v17)
  {
    v18 = v31;
    v34 = v32;
    sub_1AE5FB9E8();
    sub_1AE52FE10();
    sub_1AE5FBD74(&qword_1EED9D330);
    sub_1AE507988();
    v34 = v18;
    sub_1AE52FE10();
    sub_1AE5FBD74(&qword_1EED9D340);
    sub_1AE507988();
    LOBYTE(v34) = 3;
    sub_1AE926C88();
    LOBYTE(v34) = v40;
    sub_1AE5F6588();
    sub_1AE5FC0E0();
    sub_1AE926CC4();
    v34 = v23;
    v35 = v24;
    v36 = v28;
    v37 = v27;
    v39 = (v25 | (v26 << 16)) >> 16;
    v38 = v25;
    sub_1AE5F620C();
    sub_1AE5FC0E0();
    sub_1AE926C70();
    v34 = v22;
    sub_1AE501548(&qword_1EED9D358);
    sub_1AE5FB6FC(&qword_1EED9D360, &qword_1EED9D358);
    sub_1AE507988();
    LOBYTE(v34) = 7;
    sub_1AE926C40();
    LOBYTE(v34) = 8;
    sub_1AE5FC200();
    LOBYTE(v34) = 9;
    sub_1AE5FC200();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  sub_1AE4F667C();
}

void EntityResolutionRequest.hashValue.getter()
{
  _BYTE v0[72];

  sub_1AE4F76E0();
  EntityResolutionRequest.hash(into:)((uint64_t)v0);
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void EntityResolutionRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[6];
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  _BYTE v51[7];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int16 v56;
  char v57;
  int v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;
  int v66;
  char v67;
  _DWORD v68[3];

  sub_1AE4F67EC();
  v4 = v3;
  v6 = v5;
  sub_1AE501548(&qword_1EED9D370);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE50688C();
  sub_1AE50869C(v4);
  sub_1AE5F6510();
  sub_1AE926F34();
  if (v0)
  {
    sub_1AE5FBC4C();
  }
  else
  {
    v24 = v2;
    LOBYTE(v44) = 0;
    v8 = sub_1AE5FBC54();
    v10 = v9;
    sub_1AE4F69EC();
    sub_1AE5FB870(&qword_1EED9D378);
    sub_1AE5FC11C();
    sub_1AE505AC8();
    v23 = v10;
    v11 = v44;
    sub_1AE4F69EC();
    sub_1AE5FB870(&qword_1EED9D380);
    sub_1AE5FC11C();
    sub_1AE505AC8();
    v12 = v44;
    LOBYTE(v44) = 3;
    sub_1AE4F81B0();
    v22 = v12;
    v20 = sub_1AE926BB0();
    v14 = v13;
    sub_1AE5F663C();
    sub_1AE4F81B0();
    sub_1AE5FC0B4();
    sub_1AE926BEC();
    v21 = v14;
    sub_1AE5F637C();
    sub_1AE5FC0B4();
    sub_1AE505FF4();
    v28 = v44;
    v29 = v45;
    v30 = v46;
    sub_1AE501548(&qword_1EED9D358);
    LOBYTE(v31[0]) = 6;
    v27 = v47;
    v26 = (unsigned __int16)v48 | (BYTE2(v48) << 16);
    sub_1AE5E1ED4(v44, v45, v46, v47, v26);
    sub_1AE5FB6FC(&qword_1EED9D398, &qword_1EED9D358);
    sub_1AE505FF4();
    sub_1AE4F81B0();
    v25 = v44;
    v19 = sub_1AE5FBC54();
    LOBYTE(v44) = 8;
    v16 = v15;
    sub_1AE509358();
    v18 = sub_1AE5FBEA4();
    v65 = 9;
    v17 = sub_1AE5FBEA4();
    v18 &= 1u;
    sub_1AE4F77C0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
    v31[0] = v8;
    v31[1] = v23;
    v31[2] = v11;
    v31[3] = v22;
    v31[4] = v20;
    v31[5] = v21;
    v32 = 3;
    v33 = v28;
    v34 = v29;
    v35 = v30;
    v36 = v27;
    v38 = BYTE2(v26);
    v37 = v26;
    v39 = v25;
    v40 = v19;
    v41 = v16;
    v42 = v18;
    v43 = v17 & 1;
    sub_1AE5F66B4((uint64_t)v31);
    sub_1AE4F67AC();
    sub_1AE4F66E8();
    sub_1AE5741F8(v28, v29, v30, v27, v26);
    sub_1AE4F6718();
    sub_1AE4F66E8();
    sub_1AE4F67AC();
    sub_1AE4F76D8();
    sub_1AE5FBAC8(v6, v31);
    sub_1AE5FBC4C();
    v44 = v8;
    v45 = v23;
    v46 = v11;
    v47 = v22;
    v48 = v20;
    v49 = v21;
    v50 = 3;
    *(_DWORD *)v51 = v68[0];
    *(_DWORD *)&v51[3] = *(_DWORD *)((char *)v68 + 3);
    v52 = v28;
    v53 = v29;
    v54 = v30;
    v55 = v27;
    v57 = BYTE2(v26);
    v56 = v26;
    v58 = v66;
    v59 = v67;
    v60 = v25;
    v61 = v19;
    v62 = v16;
    v63 = v18;
    v64 = v17 & 1;
    sub_1AE5F676C((uint64_t)&v44);
  }
  sub_1AE5FBE20();
  sub_1AE4F667C();
}

void sub_1AE5EEBCC()
{
  EntityResolutionRequest.init(from:)();
}

void sub_1AE5EEBE0()
{
  EntityResolutionRequest.encode(to:)();
}

uint64_t sub_1AE5EEC00()
{
  _BYTE v1[72];

  sub_1AE926EC8();
  EntityResolutionRequest.hash(into:)((uint64_t)v1);
  return sub_1AE926F10();
}

void sub_1AE5EEC38()
{
  sub_1AE5FB7B0();
  __asm { BR              X9 }
}

uint64_t sub_1AE5EEC7C()
{
  char v1;

  sub_1AE5FB838();
  sub_1AE508AD0();
  v1 = sub_1AE4FB6F0();
  sub_1AE4F9038();
  if ((v1 & 1) == 0)
  {
    sub_1AE515554();
    __asm { BR              X10 }
  }
  return 0;
}

__n128 Mention.init(span:entityClasses:score:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  __n128 result;
  __int128 v6;

  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v6;
  *(_QWORD *)(a5 + 32) = 0;
  *(_QWORD *)(a5 + 40) = 0;
  *(_QWORD *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = a2;
  *(_QWORD *)(a5 + 64) = a3;
  *(_BYTE *)(a5 + 72) = a4 & 1;
  return result;
}

void sub_1AE5EEDE8()
{
  sub_1AE5FB7B0();
  __asm { BR              X10 }
}

void sub_1AE5EEE34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19[2];
  __int128 v20;
  _OWORD v21[4];
  uint64_t v22;
  char v23;

  sub_1AE5FB838();
  v4 = sub_1AE4FB6F0();
  sub_1AE4F81B8();
  if ((v4 & 1) == 0)
  {
LABEL_16:
    sub_1AE5FC274((__n128)xmmword_1AE934260);
    return;
  }
  if (!v1)
  {
    if (qword_1ED319C70 != -1)
      swift_once();
    v13 = sub_1AE925B6C();
    sub_1AE4FB608(v13, (uint64_t)qword_1ED31AD58);
    v14 = (void *)sub_1AE925B54();
    v15 = sub_1AE9265EC();
    if (sub_1AE503578(v15))
    {
      *(_WORD *)sub_1AE4F69B0() = 0;
      sub_1AE5FBC68(&dword_1AE4F2000, v16, v17, "No sourceIDs available for a structured input.");
      sub_1AE5FBF60();
    }

    goto LABEL_16;
  }
  v5 = 0uLL;
  if (v3 && *(_QWORD *)(v3 + 16))
  {
    v6 = *(_QWORD *)(v3 + 32);
    v18 = *(_OWORD *)(v3 + 48);
    v7 = swift_bridgeObjectRetain();
    v5 = v18;
  }
  else
  {
    v6 = 0;
    v7 = 0;
  }
  v19[0] = v6;
  v19[1] = v7;
  v20 = v5;
  if (v2)
    v8 = v2;
  else
    v8 = MEMORY[0x1E0DEE9D8];
  sub_1AE4F66CC();
  sub_1AE4F66C4();
  Mention.init(sourceIDs:span:entityClasses:)(v1, v19, v8, (uint64_t)v21);
  v9 = v22;
  v10 = v23;
  v11 = v21[1];
  *(_OWORD *)v0 = v21[0];
  *(_OWORD *)(v0 + 16) = v11;
  v12 = v21[3];
  *(_OWORD *)(v0 + 32) = v21[2];
  *(_OWORD *)(v0 + 48) = v12;
  *(_QWORD *)(v0 + 64) = v9;
  *(_BYTE *)(v0 + 72) = v10;
}

uint64_t Mention.init(sourceIDs:span:entityClasses:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v4 = a3;
  v6 = a4;
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v17 = a2[3];
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1AE4F6730();
    sub_1AE52154C();
    v11 = a1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      sub_1AE4F6A24();
      sub_1AE5FBF04();
      sub_1AE925F74();
      sub_1AE4F6728();
      sub_1AE4F7838();
      sub_1AE4F6710();
      sub_1AE4F6728();
      v12 = *(_QWORD *)(v18 + 16);
      if (v12 >= *(_QWORD *)(v18 + 24) >> 1)
        sub_1AE5FBD38();
      v11 += 32;
      *(_QWORD *)(v18 + 16) = v12 + 1;
      v13 = v18 + 16 * v12;
      *(_QWORD *)(v13 + 32) = 39;
      *(_QWORD *)(v13 + 40) = 0xE100000000000000;
      --v10;
    }
    while (v10);
    sub_1AE4F81B8();
    v4 = a3;
    v6 = a4;
  }
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE568D9C();
  sub_1AE925DC4();
  sub_1AE4F76D8();
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  sub_1AE4F66E8();
  result = sub_1AE925F74();
  *(_QWORD *)v6 = v7;
  *(_QWORD *)(v6 + 8) = v8;
  *(_QWORD *)(v6 + 16) = v9;
  *(_QWORD *)(v6 + 24) = v17;
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = 0xD000000000000013;
  *(_QWORD *)(v6 + 48) = 0x80000001AE97FB80;
  *(_QWORD *)(v6 + 56) = v4;
  *(_QWORD *)(v6 + 64) = 0;
  *(_BYTE *)(v6 + 72) = 1;
  return result;
}

void sub_1AE5EF1F8()
{
  sub_1AE5FB7B0();
  __asm { BR              X10 }
}

void sub_1AE5EF248()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1AE5FB838();
  sub_1AE5093A4();
  v6 = sub_1AE4FB6F0();
  sub_1AE4F76D8();
  if ((v6 & 1) == 0)
  {
LABEL_21:
    sub_1AE5FC274((__n128)xmmword_1AE934260);
    return;
  }
  if (!v2)
  {
    if (qword_1ED319C70 != -1)
      swift_once();
    v14 = sub_1AE925B6C();
    sub_1AE4FB608(v14, (uint64_t)qword_1ED31AD58);
    v15 = (void *)sub_1AE925B54();
    v16 = sub_1AE9265EC();
    if (sub_1AE503578(v16))
    {
      *(_WORD *)sub_1AE4F69B0() = 0;
      sub_1AE5FBC68(&dword_1AE4F2000, v17, v18, "No kgq available for a semi-structured input.");
      sub_1AE5FBF60();
    }

    goto LABEL_21;
  }
  v7 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v7 = v4;
  v8 = 7;
  if (((v1 >> 60) & ((v4 & 0x800000000000000) == 0)) != 0)
    v8 = 11;
  v9 = MEMORY[0x1E0DEE9D8];
  if (v1)
    v10 = v4;
  else
    v10 = 0;
  *(_QWORD *)v0 = v10;
  *(_QWORD *)(v0 + 8) = v1;
  v11 = v8 | (v7 << 16);
  v12 = 15;
  if (!v1)
  {
    v12 = 0;
    v11 = 0;
  }
  *(_QWORD *)(v0 + 16) = v12;
  *(_QWORD *)(v0 + 24) = v11;
  *(_QWORD *)(v0 + 32) = 0;
  *(_QWORD *)(v0 + 40) = v5;
  if (v3)
    v13 = v3;
  else
    v13 = v9;
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = v13;
  *(_QWORD *)(v0 + 64) = 0;
  *(_BYTE *)(v0 + 72) = 1;
  sub_1AE4F66C4();
  sub_1AE4F6730();
  swift_bridgeObjectRetain();
}

__n128 Mention.init(kgq:span:entityClasses:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  __n128 result;
  __int128 v6;

  result = *(__n128 *)a3;
  v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a3;
  *(_OWORD *)(a5 + 16) = v6;
  *(_QWORD *)(a5 + 32) = 0;
  *(_QWORD *)(a5 + 40) = a1;
  *(_QWORD *)(a5 + 48) = a2;
  *(_QWORD *)(a5 + 56) = a4;
  *(_QWORD *)(a5 + 64) = 0;
  *(_BYTE *)(a5 + 72) = 1;
  return result;
}

void EntityResolutionRequest.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(unsigned __int8 *)(v0 + 48);
  sub_1AE92691C();
  sub_1AE5FC190();
  sub_1AE4F66C4();
  sub_1AE595D8C();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE4F6A2C();
  if (v2)
    MEMORY[0x1AF453400](v2, &type metadata for EntityClass);
  else
    _s20IntelligencePlatform16FeedbackProtocolPAAE7variantSSSgvg_0();
  sub_1AE501548(&qword_1ED30FC40);
  sub_1AE5FC184();
  sub_1AE925F74();
  sub_1AE4F81B8();
  sub_1AE5FC15C();
  if (v1)
    MEMORY[0x1AF453400](v1, &type metadata for Span);
  else
    _s20IntelligencePlatform16FeedbackProtocolPAAE7variantSSSgvg_0();
  sub_1AE5FC184();
  sub_1AE925F74();
  sub_1AE4F665C();
  sub_1AE925F74();
  sub_1AE5FB838();
  __asm { BR              X9 }
}

uint64_t sub_1AE5EF5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1AE5FB7B0();
  sub_1AE509ECC();
  sub_1AE4F665C();
  sub_1AE5FBA80();
  sub_1AE4F67A4();
  sub_1AE925F74();
  sub_1AE4F6728();
  sub_1AE4F6A2C();
  sub_1AE5E1ED4(v6, v5, v4, v3, v0);
  sub_1AE501548(&qword_1ED30EDA0);
  sub_1AE925E90();
  sub_1AE925F74();
  sub_1AE4F665C();
  sub_1AE925F74();
  if (v7)
    MEMORY[0x1AF453400](v7, &type metadata for EntitySourceID);
  sub_1AE509ECC();
  sub_1AE4F665C();
  sub_1AE5FC190();
  sub_1AE4FB75C();
  sub_1AE5FBF70();
  sub_1AE4F81B8();
  return *(_QWORD *)(v1 - 96);
}

uint64_t sub_1AE5EF76C()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1AE926B44();
  sub_1AE4F6648();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1AE5EF7BC(char a1)
{
  if ((a1 & 1) != 0)
    return 1954047348;
  else
    return 0x65676E6172;
}

void sub_1AE5EF7E8(char *a1, char *a2)
{
  sub_1AE510568(*a1, *a2);
}

void sub_1AE5EF7F4()
{
  sub_1AE512E8C();
}

uint64_t sub_1AE5EF7FC()
{
  return sub_1AE5E8410();
}

void sub_1AE5EF804()
{
  sub_1AE54F734();
}

uint64_t sub_1AE5EF80C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE5EF76C();
  *a1 = result;
  return result;
}

void sub_1AE5EF838(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_1AE5EF7BC(*v1);
  a1[1] = v3;
  sub_1AE4F6664();
}

uint64_t sub_1AE5EF85C()
{
  char *v0;

  return sub_1AE5EF7BC(*v0);
}

uint64_t sub_1AE5EF864@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE5EF7B8();
  *a1 = result;
  return result;
}

uint64_t sub_1AE5EF888()
{
  sub_1AE5F6824();
  return sub_1AE926F94();
}

uint64_t sub_1AE5EF8B0()
{
  sub_1AE5F6824();
  return sub_1AE926FA0();
}

void Span.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;

  sub_1AE4F67EC();
  sub_1AE5FC2FC();
  v3 = v2;
  v4 = sub_1AE501548(&qword_1EED9D3A8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE505354();
  sub_1AE5F6824();
  sub_1AE5068D4();
  if (v1)
  {
    sub_1AE4F90EC();
LABEL_4:
    sub_1AE5FBE20();
    sub_1AE4F667C();
    return;
  }
  sub_1AE5FB9E8();
  v8 = sub_1AE5FBCFC();
  v10 = v9;
  v20 = v3;
  sub_1AE4F69EC();
  sub_1AE5FC100(&qword_1EED9D3B8);
  v12 = v11;
  sub_1AE4F67A4();
  sub_1AE505F98();
  if (v12)
  {
    sub_1AE4F77C0((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    sub_1AE4F6728();
LABEL_11:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
    sub_1AE4F6728();
    goto LABEL_4;
  }
  v13 = v21;
  if (!*(_QWORD *)(v21 + 16))
  {
    __break(1u);
    goto LABEL_13;
  }
  v19 = sub_1AE5FC0D4(0xFuLL, *(_QWORD *)(v21 + 32));
  if (*(_QWORD *)(v13 + 16) < 2uLL)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v14 = *(_QWORD *)(v13 + 40);
  sub_1AE4F67A4();
  sub_1AE4F6718();
  v15 = sub_1AE5FC0D4(0xFuLL, v14);
  sub_1AE4F6728();
  sub_1AE4F77C0((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  v16 = v19;
  if (v15 >> 14 >= v19 >> 14)
  {
    v17 = v20;
    *v20 = v8;
    v17[1] = v10;
    v17[2] = v16;
    v17[3] = v15;
    goto LABEL_11;
  }
LABEL_14:
  __break(1u);
}

unint64_t sub_1AE5EFA90(unint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t result;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  result = sub_1AE5F56D8(a1, a3, a4);
  if (a2 < 0)
  {
    v14 = 0;
    while (1)
    {
      if (result < 0x10000)
        goto LABEL_39;
      if ((a4 & 0x1000000000000000) == 0)
        break;
      result = sub_1AE925EE4();
LABEL_36:
      if (--v14 <= a2)
        return result;
    }
    v15 = result >> 16;
    if ((a4 & 0x2000000000000000) != 0)
    {
      v21 = a3;
      v22 = a4 & 0xFFFFFFFFFFFFFFLL;
      if ((*((_BYTE *)&v21 + v15 - 1) & 0xC0) == 0x80)
      {
        v17 = 0;
        do
          v19 = *((_BYTE *)&v21 + v15 + v17-- - 2) & 0xC0;
        while (v19 == 128);
        goto LABEL_33;
      }
    }
    else
    {
      v16 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a3 & 0x1000000000000000) == 0)
        v16 = sub_1AE926994();
      if ((*(_BYTE *)(v15 + v16 - 1) & 0xC0) == 0x80)
      {
        v17 = 0;
        do
          v18 = *(_BYTE *)(v16 + v15 - 2 + v17--) & 0xC0;
        while (v18 == 128);
LABEL_33:
        v20 = 1 - v17;
LABEL_35:
        result = ((v15 - v20) << 16) | 5;
        goto LABEL_36;
      }
    }
    v20 = 1;
    goto LABEL_35;
  }
  if (a2)
  {
    if ((a4 & 0x2000000000000000) != 0)
      v8 = HIBYTE(a4) & 0xF;
    else
      v8 = a3 & 0xFFFFFFFFFFFFLL;
    while (1)
    {
      v9 = result >> 16;
      if (result >> 16 >= v8)
        break;
      if ((a4 & 0x1000000000000000) != 0)
      {
        result = sub_1AE925ED8();
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v21 = a3;
          v22 = a4 & 0xFFFFFFFFFFFFFFLL;
          v11 = *((unsigned __int8 *)&v21 + v9);
        }
        else
        {
          v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0)
            v10 = sub_1AE926994();
          v11 = *(unsigned __int8 *)(v10 + v9);
        }
        v12 = (char)v11;
        v13 = __clz(v11 ^ 0xFF) - 24;
        if (v12 >= 0)
          LOBYTE(v13) = 1;
        result = ((v9 + v13) << 16) | 5;
      }
      if (!--a2)
        return result;
    }
    __break(1u);
LABEL_39:
    __break(1u);
  }
  return result;
}

void Span.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1AE4F67EC();
  v5 = v4;
  sub_1AE501548(&qword_1EED9D3C0);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F683C();
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  sub_1AE4F9858(v5, v5[3]);
  sub_1AE5F6824();
  sub_1AE926F4C();
  sub_1AE926C88();
  if (v2)
    goto LABEL_4;
  sub_1AE5FC1E0(0xFuLL, v10);
  v8 = v7;
  sub_1AE5FC1E0(0xFuLL, v11);
  if (v9 >= v8)
  {
    sub_1AE4F69EC();
    sub_1AE5FC100(&qword_1EED9D3D0);
    sub_1AE4FD9D4();
LABEL_4:
    sub_1AE545370(v3, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
    sub_1AE595D68();
    sub_1AE4F667C();
    return;
  }
  __break(1u);
}

void sub_1AE5EFDC8(unint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t i;
  unint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v6 = sub_1AE5F56D8(a1, a3, a4);
  sub_1AE5FC0F4();
  v10 = sub_1AE5F56D8(v7, v8, v9) >> 14;
  if (v6 >> 14 >= v10)
  {
    if (v10 >= v6 >> 14)
      return;
    v17 = 0;
    while (1)
    {
      if (__OFSUB__(v17--, 1))
        goto LABEL_36;
      if ((a4 & 0x1000000000000000) == 0)
        break;
      sub_1AE5FC0F4();
      v6 = sub_1AE925EE4();
LABEL_32:
      if (v10 >= v6 >> 14)
        return;
    }
    if ((a4 & 0x2000000000000000) != 0)
    {
      v23 = a3;
      v24 = a4 & 0xFFFFFFFFFFFFFFLL;
      if ((*((_BYTE *)&v23 + (v6 >> 16) - 1) & 0xC0) == 0x80)
      {
        do
          sub_1AE5FC014();
        while (v21);
        goto LABEL_29;
      }
    }
    else
    {
      v19 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a3 & 0x1000000000000000) == 0)
        v19 = sub_1AE5FC33C();
      if ((*(_BYTE *)(v19 + (v6 >> 16) - 1) & 0xC0) == 0x80)
      {
        do
          sub_1AE5FC014();
        while (v21);
LABEL_29:
        v22 = 1 - v20;
LABEL_31:
        v6 = (v6 - (v22 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
        goto LABEL_32;
      }
    }
    v22 = 1;
    goto LABEL_31;
  }
  for (i = 0; !__OFADD__(i, 1); ++i)
  {
    if ((a4 & 0x1000000000000000) != 0)
    {
      sub_1AE5FC0F4();
      v6 = sub_1AE925ED8();
    }
    else
    {
      v12 = v6 >> 16;
      if ((a4 & 0x2000000000000000) != 0)
      {
        v23 = a3;
        v24 = a4 & 0xFFFFFFFFFFFFFFLL;
        v14 = *((unsigned __int8 *)&v23 + v12);
      }
      else
      {
        v13 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((a3 & 0x1000000000000000) == 0)
          v13 = sub_1AE5FC33C();
        v14 = *(unsigned __int8 *)(v13 + v12);
      }
      v15 = (char)v14;
      v16 = __clz(v14 ^ 0xFF) - 24;
      if (v15 >= 0)
        LOBYTE(v16) = 1;
      v6 = ((v12 + v16) << 16) | 5;
    }
    if (v10 <= v6 >> 14)
      return;
  }
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_1AE5EFFB8()
{
  Span.init(from:)();
}

void sub_1AE5EFFCC()
{
  Span.encode(to:)();
}

void Span.hash(into:)()
{
  sub_1AE4F6730();
  sub_1AE5FBD68();
  sub_1AE4F81B8();
  sub_1AE926EF8();
  sub_1AE926EF8();
  sub_1AE4FCDD0();
}

void static Span.== infix(_:_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1AE4FC4D4();
  v2 = *v0 == *v1 && v0[1] == v1[1];
  if (v2 || (sub_1AE4FB6F0() & 1) != 0)
  {
    sub_1AE4F6708();
    sub_1AE4FB75C();
    sub_1AE5FBF04();
    v3 = sub_1AE926040();
    v5 = v4;
    v7 = v6;
    v9 = v8;
    sub_1AE4F76D8();
    v10 = MEMORY[0x1AF4530E8](v3, v5, v7, v9);
    v12 = v11;
    sub_1AE4F6710();
    sub_1AE5FC108();
    v13 = sub_1AE926040();
    v15 = v14;
    v17 = v16;
    v19 = v18;
    sub_1AE4F6648();
    v20 = MEMORY[0x1AF4530E8](v13, v15, v17, v19);
    v22 = v21;
    sub_1AE4F66E8();
    if (v10 != v20 || v12 != v22)
      sub_1AE4FB6F0();
    sub_1AE4F76D8();
    sub_1AE4F6648();
  }
  sub_1AE4F8180();
}

uint64_t Span.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE4F66C4();
  sub_1AE5FC328();
  sub_1AE4F665C();
  sub_1AE926EF8();
  sub_1AE926EF8();
  return sub_1AE4F905C();
}

uint64_t sub_1AE5F01B8()
{
  sub_1AE926EC8();
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  sub_1AE926EF8();
  sub_1AE926EF8();
  return sub_1AE926F10();
}

uint64_t Span.description.getter()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[3];
  v4 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v4 = *v0 & 0xFFFFFFFFFFFFLL;
  v5 = v4 << 16;
  v6 = 4 * v4;
  if (v6 >= v2 >> 14)
    v7 = v0[2];
  else
    v7 = v5;
  if (v6 >= v3 >> 14)
    v8 = v0[3];
  else
    v8 = v5;
  v9 = v8 >> 14;
  if (v2 >> 14 == v7 >> 14 && v9 == v3 >> 14)
  {
    v19[0] = 91;
    v19[1] = 0xE100000000000000;
    sub_1AE5FC330(0xFuLL, v2);
    sub_1AE5FBF28();
    sub_1AE4FBAE0();
    sub_1AE4F6728();
    sub_1AE4F7838();
    sub_1AE5FC330(0xFuLL, v3);
    sub_1AE5FBF28();
    sub_1AE4FBAE0();
    sub_1AE4F67AC();
    sub_1AE925F74();
    sub_1AE4FB75C();
    sub_1AE595D8C();
    v11 = sub_1AE926040();
    v13 = v12;
    v15 = v14;
    v17 = v16;
    sub_1AE4F6648();
    MEMORY[0x1AF4530E8](v11, v13, v15, v17);
    sub_1AE4F76D8();
    sub_1AE509ECC();
  }
  else
  {
    sub_1AE5FBE64();
    sub_1AE92691C();
    sub_1AE509ED4();
    strcpy((char *)v19, "Span: range: ");
    HIWORD(v19[1]) = -4864;
    sub_1AE595D8C();
    sub_1AE5F60CC();
    sub_1AE4FBAE0();
    sub_1AE4F81B8();
    sub_1AE5FC15C();
    sub_1AE4FB75C();
    sub_1AE5FBA48();
  }
  swift_bridgeObjectRelease();
  return v19[0];
}

uint64_t sub_1AE5F040C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 1851879539 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x4449656372756F73 && a2 == 0xE900000000000073;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 7432043 && a2 == 0xE300000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6C43797469746E65 && a2 == 0xED00007365737361;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1AE926D60();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1AE5F0620(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE5F064C + 4 * byte_1AE940C1B[a1]))(1851879539, 0xE400000000000000);
}

uint64_t sub_1AE5F064C()
{
  return 0x4449656372756F73;
}

uint64_t sub_1AE5F0668()
{
  return 7432043;
}

uint64_t sub_1AE5F0678()
{
  return 0x6C43797469746E65;
}

uint64_t sub_1AE5F069C()
{
  return 0x65726F6373;
}

uint64_t sub_1AE5F06B0()
{
  unsigned __int8 *v0;

  return sub_1AE5F0620(*v0);
}

uint64_t sub_1AE5F06B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5F040C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5F06DC()
{
  sub_1AE5F6860();
  return sub_1AE926F94();
}

uint64_t sub_1AE5F0704()
{
  sub_1AE5F6860();
  return sub_1AE926FA0();
}

void Mention.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EED9D3D8);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE5F6860();
  sub_1AE5FBD08();
  sub_1AE5F654C();
  sub_1AE926C70();
  if (!v1)
  {
    sub_1AE5FB9E8();
    sub_1AE4F69EC();
    sub_1AE5FB870(&qword_1EED9D360);
    sub_1AE4F821C();
    sub_1AE5FC1D4();
    sub_1AE4F69EC();
    sub_1AE5FB870(&qword_1EED9D330);
    sub_1AE4F821C();
    sub_1AE926C58();
  }
  sub_1AE50949C(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1AE595D68();
  sub_1AE4F667C();
}

void Mention.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1AE4F67EC();
  sub_1AE5FC2FC();
  v5 = v4;
  sub_1AE501548(&qword_1EED9D3E8);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F910C();
  sub_1AE4F9858(v0, v0[3]);
  sub_1AE5F6860();
  sub_1AE926F34();
  if (v1)
  {
    sub_1AE4F90EC();
  }
  else
  {
    sub_1AE5F6600();
    sub_1AE505FF4();
    v22 = v23;
    sub_1AE4F69EC();
    sub_1AE5FB9E8();
    sub_1AE5FB870(&qword_1EED9D398);
    v8 = v7;
    sub_1AE4F6708();
    sub_1AE505FF4();
    v9 = v8;
    if (v8)
    {
      sub_1AE4F77C0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      sub_1AE4F76D8();
      v10 = 0;
    }
    else
    {
      v11 = v23;
      LOBYTE(v23) = 2;
      sub_1AE4F6708();
      v20 = sub_1AE926B68();
      v13 = v12;
      sub_1AE501548(&qword_1EED9D328);
      sub_1AE5FB6FC(&qword_1EED9D378, &qword_1EED9D328);
      v15 = v14;
      v21 = v13;
      sub_1AE4F66CC();
      sub_1AE505FF4();
      if (!v15)
      {
        swift_bridgeObjectRetain();
        v16 = sub_1AE926B80();
        v17 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
        v19 = v18;
        sub_1AE4F77C0(v2, v17);
        *(_QWORD *)v5 = v22;
        *(_QWORD *)(v5 + 8) = v24;
        *(_QWORD *)(v5 + 16) = v25;
        *(_QWORD *)(v5 + 24) = v26;
        *(_QWORD *)(v5 + 32) = v11;
        *(_QWORD *)(v5 + 40) = v20;
        *(_QWORD *)(v5 + 48) = v21;
        *(_QWORD *)(v5 + 56) = v23;
        *(_QWORD *)(v5 + 64) = v16;
        *(_BYTE *)(v5 + 72) = v19 & 1;
        sub_1AE4F90EC();
        sub_1AE4F6710();
        sub_1AE4F66E8();
        sub_1AE4F76D8();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      sub_1AE4F77C0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      sub_1AE4F76D8();
      sub_1AE4F6728();
      sub_1AE5FC314();
      v10 = 1;
    }
    sub_1AE4F90EC();
    sub_1AE4F76D8();
    if (v9)
    {
      if (!v10)
        goto LABEL_4;
    }
    else
    {
      sub_1AE4F6728();
      if (!v10)
        goto LABEL_4;
    }
    sub_1AE5FC314();
  }
LABEL_4:
  sub_1AE5FBE20();
  sub_1AE4F667C();
}

void sub_1AE5F0C58()
{
  Mention.init(from:)();
}

void sub_1AE5F0C6C()
{
  Mention.encode(to:)();
}

uint64_t static Mention.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  _QWORD *v8;
  _QWORD *v9;
  BOOL v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  int v33;
  unsigned int v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(double *)(a1 + 64);
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(double *)(a2 + 64);
  if (!v2)
  {
    sub_1AE5FC2A0();
    if (v5)
      return 0;
    goto LABEL_15;
  }
  if (!v5)
    return 0;
  sub_1AE5FC2A0();
  v10 = *v8 == *v9 && v2 == v5;
  if (v10 || (sub_1AE4FB6F0(), result = sub_1AE5FB9F4(), (v12 & 1) != 0))
  {
    sub_1AE4F6A24();
    sub_1AE4F6A24();
    sub_1AE595D8C();
    v13 = sub_1AE926040();
    v14 = MEMORY[0x1AF4530E8](v13);
    v16 = v15;
    sub_1AE4F76D8();
    v17 = sub_1AE926040();
    v19 = v18;
    v21 = v20;
    v23 = v22;
    sub_1AE4F6710();
    v24 = MEMORY[0x1AF4530E8](v17, v19, v21, v23);
    v26 = v25;
    sub_1AE4F67AC();
    if (v14 == v24 && v16 == v26)
    {
      sub_1AE4F6824();
      sub_1AE4F6710();
      sub_1AE4F6824();
      if (v3)
        goto LABEL_16;
      goto LABEL_20;
    }
    v28 = sub_1AE4FB6F0();
    sub_1AE4F6824();
    sub_1AE4F6710();
    sub_1AE4F6648();
    sub_1AE4F9038();
    result = 0;
    if ((v28 & 1) == 0)
      return result;
LABEL_15:
    if (v3)
    {
LABEL_16:
      if (!v6)
        return 0;
      v29 = sub_1AE5FBF04();
      if ((sub_1AE5EA3C4(v29, v30) & 1) == 0)
        return 0;
LABEL_21:
      if (v42)
      {
        if (!v41)
          return 0;
        if (v43 != v40 || v42 != v41)
        {
          sub_1AE4FB6F0();
          result = sub_1AE5FB9F4();
          if ((v32 & 1) == 0)
            return result;
        }
      }
      else if (v41)
      {
        return 0;
      }
      if (!v39)
      {
        v35 = v36;
        v34 = v37;
        if (v38)
        {
          v35 = 1;
          result = 0;
        }
        else
        {
          result = v37;
        }
        if ((v35 & 1) != 0)
          return result;
        return (v4 == v7) & ~v34;
      }
      if (v38)
      {
        sub_1AE5EA494(v39, v38);
        v34 = v37;
        if (v36 & 1 | ((v33 & 1) == 0))
          return v33 & v37;
        return (v4 == v7) & ~v34;
      }
      return 0;
    }
LABEL_20:
    if (v6)
      return 0;
    goto LABEL_21;
  }
  return result;
}

unint64_t Mention.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  _QWORD v4[2];
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1)
  {
    v4[0] = *(_QWORD *)v0;
    v4[1] = v1;
    v5 = *(_OWORD *)(v0 + 16);
    return Span.description.getter();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 32);
    if (v3)
    {
      return MEMORY[0x1AF453400](v3, &type metadata for EntitySourceID);
    }
    else if (*(_QWORD *)(v0 + 48))
    {
      sub_1AE5FB7C4();
      sub_1AE92691C();
      sub_1AE505D44();
      strcpy((char *)v4, "Knosis Query: ");
      HIBYTE(v4[1]) = -18;
      sub_1AE5FBA48();
      return v4[0];
    }
    else
    {
      sub_1AE4FDA58();
      return sub_1AE515554();
    }
  }
}

BOOL static CandidateConfidenceMetric.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void CandidateConfidenceMetric.hash(into:)()
{
  sub_1AE926ED4();
  sub_1AE4F6664();
}

void CandidateConfidenceMetric.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE4F6694();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

uint64_t RetrievedCandidate.description.getter()
{
  uint64_t v1;

  sub_1AE5FBE64();
  sub_1AE92691C();
  sub_1AE509ED4();
  sub_1AE5FBF10();
  EntityIdentifier.description.getter();
  sub_1AE5FB89C();
  sub_1AE4F6648();
  sub_1AE4F7820();
  sub_1AE5FBA98();
  sub_1AE5FB89C();
  sub_1AE4F6648();
  sub_1AE4FDA58();
  sub_1AE508F74();
  sub_1AE5FC2D8();
  sub_1AE5FB89C();
  sub_1AE4F6648();
  return v1;
}

BOOL static RetrievedCandidate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 24) == *(double *)(a2 + 24);
}

uint64_t PopulatedCandidate.description.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v3;

  v1 = *(_BYTE *)(v0 + 292);
  sub_1AE5FBE64();
  sub_1AE92691C();
  sub_1AE509ED4();
  sub_1AE5FBF10();
  EntityIdentifier.description.getter();
  sub_1AE5FB89C();
  sub_1AE4F6648();
  sub_1AE4F7820();
  sub_1AE5FBA98();
  sub_1AE5FB89C();
  sub_1AE4F6648();
  sub_1AE5FB9B0();
  _s20IntelligencePlatform16FeedbackProtocolPAAE7variantSSSgvg_0();
  if ((v1 & 1) == 0)
    sub_1AE5FC2E4();
  sub_1AE501548(&qword_1ED30FC40);
  sub_1AE925E90();
  sub_1AE5FB89C();
  sub_1AE4F6648();
  return v3;
}

uint64_t sub_1AE5F117C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  uint64_t v14;

  v1 = v0;
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  v13 = *(_OWORD *)(v0 + 80);
  Mention.description.getter();
  sub_1AE5FBCA4();
  sub_1AE4F665C();
  sub_1AE5FB8BC();
  if ((_QWORD)v13)
  {
    v2 = *(_QWORD *)(v13 + 16);
    if (v2)
    {
      v14 = MEMORY[0x1E0DEE9D8];
      sub_1AE4F6730();
      sub_1AE5FBF98();
      v3 = (uint64_t *)(v13 + 56);
      do
      {
        v5 = *(v3 - 1);
        v4 = *v3;
        v7 = *(_QWORD *)(v14 + 16);
        v6 = *(_QWORD *)(v14 + 24);
        sub_1AE4F6804();
        if (v7 >= v6 >> 1)
          sub_1AE5FBD38();
        *(_QWORD *)(v14 + 16) = v7 + 1;
        v8 = v14 + 16 * v7;
        *(_QWORD *)(v8 + 32) = v5;
        *(_QWORD *)(v8 + 40) = v4;
        v3 += 5;
        --v2;
      }
      while (v2);
      sub_1AE4F81B8();
    }
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE568D9C();
    sub_1AE925DC4();
    sub_1AE4F665C();
  }
  sub_1AE5FBF70();
  sub_1AE4F81B8();
  sub_1AE4FDA58();
  sub_1AE508F74();
  sub_1AE4FB9BC();
  sub_1AE926D18();
  sub_1AE5FBCA4();
  sub_1AE4F665C();
  result = 0x3A6E6F69746E656DLL;
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    sub_1AE4FB75C();
    do
    {
      v12 = *(_BYTE *)(v10 + 324);
      sub_1AE92691C();
      swift_bridgeObjectRelease();
      EntityIdentifier.description.getter();
      sub_1AE5FBC38();
      sub_1AE4F81B8();
      sub_1AE4F7820();
      sub_1AE5FBA98();
      sub_1AE5FBC38();
      sub_1AE4F81B8();
      sub_1AE5FB9B0();
      _s20IntelligencePlatform16FeedbackProtocolPAAE7variantSSSgvg_0();
      if ((v12 & 1) == 0)
        sub_1AE5FC2E4();
      sub_1AE501548(&qword_1ED30FC40);
      sub_1AE925E90();
      sub_1AE5FBC38();
      sub_1AE4F81B8();
      sub_1AE5FBF70();
      sub_1AE4F81B8();
      sub_1AE5FBF70();
      sub_1AE4F81B8();
      v10 += 296;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    return 0x3A6E6F69746E656DLL;
  }
  return result;
}

void PopulatedCandidatesForMention.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE4F6648();
  sub_1AE4F665C();
  sub_1AE4F81B8();
  sub_1AE4F6624();
}

uint64_t PopulatedCandidatesForMention.__deallocating_deinit()
{
  PopulatedCandidatesForMention.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE5F14D8()
{
  return sub_1AE5F117C();
}

uint64_t static RerankedEntity.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  int v18;
  double v19;
  int v20;
  uint64_t v21;
  BOOL v22;
  char v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  float64x2_t v50;
  float64x2_t v51;
  float64x2_t v52;
  float64x2_t v53;
  _BYTE v54[976];
  _BYTE v55[976];
  _BYTE v56[976];
  _BYTE v57[976];
  _BYTE v58[976];
  _BYTE v59[984];

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v4 = v1;
  v5 = *(_QWORD *)v1;
  v6 = v1 + 1096;
  v8 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v48 = *(_QWORD *)(v1 + 56);
  v49 = *(_QWORD *)(v1 + 64);
  v41 = *(_QWORD *)(v1 + 72);
  v47 = *(_QWORD *)(v1 + 80);
  v44 = *(_QWORD *)(v1 + 88);
  v45 = *(_QWORD *)(v1 + 96);
  v9 = (uint64_t)(v2 + 14);
  v52 = *(float64x2_t *)(v1 + 24);
  v53 = *(float64x2_t *)(v1 + 8);
  sub_1AE5DA9AC(v1 + 112, (uint64_t)v58);
  v38 = *(_QWORD *)(v4 + 1088);
  v39 = *(_BYTE *)(v4 + 1096);
  v10 = *(double *)(v4 + 1104);
  v37 = *(unsigned __int8 *)(v6 + 16);
  v36 = *(_QWORD *)(v4 + 1120);
  v11 = *(double *)v3;
  v50 = *(float64x2_t *)(v3 + 3);
  v51 = *(float64x2_t *)(v3 + 1);
  v12 = v3[5];
  v13 = v3[6];
  v15 = v3[7];
  v14 = v3[8];
  v40 = v3[9];
  v46 = v3[10];
  v42 = v3[11];
  v43 = v3[12];
  sub_1AE5DA9AC(v9, (uint64_t)v59);
  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v53, v51), (int32x4_t)vceqq_f64(v52, v50))), 0xFuLL))) & 1) == 0|| v5 != *(_QWORD *)&v11)
  {
    return result;
  }
  v17 = v3[136];
  v18 = *((unsigned __int8 *)v3 + 1096);
  v19 = *((double *)v3 + 138);
  v20 = *((unsigned __int8 *)v3 + 1112);
  v21 = v3[140];
  if (!v7)
  {
    if (!v13)
      goto LABEL_23;
LABEL_21:
    v26 = sub_1AE5FBFE4();
    sub_1AE578C4C(v26, v27);
    sub_1AE52F880(v8, v7);
    v28 = sub_1AE5FBFE4();
    sub_1AE52F880(v28, v29);
    return 0;
  }
  if (!v13)
  {
    sub_1AE4FB75C();
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  v22 = v8 == v12 && v7 == v13;
  if (v22 || (sub_1AE5FBD5C(), result = sub_1AE5FB9F4(), (v23 & 1) != 0))
  {
    if (v49)
    {
      if (!v14)
        return 0;
      if (v48 != v15 || v49 != v14)
      {
        sub_1AE5FBD5C();
        result = sub_1AE5FB9F4();
        if ((v25 & 1) == 0)
          return result;
      }
    }
    else if (v14)
    {
      return 0;
    }
LABEL_23:
    if (v47)
    {
      if (v46)
      {
        if (v44 != v42 || v45 != v43)
        {
          sub_1AE5FBD5C();
          result = sub_1AE5FB9F4();
          if ((v31 & 1) == 0)
            return result;
        }
        goto LABEL_35;
      }
    }
    else if (!v46)
    {
LABEL_35:
      v34 = v17;
      sub_1AE5DA9AC((uint64_t)v59, (uint64_t)v56);
      sub_1AE5DA9AC((uint64_t)v58, (uint64_t)v57);
      if (sub_1AE5E1EB8((uint64_t)v57) == 1)
      {
        sub_1AE5FBDD0();
        if (sub_1AE5E1EB8((uint64_t)v55) != 1)
          return 0;
      }
      else
      {
        sub_1AE5DA9AC((uint64_t)v58, (uint64_t)v54);
        sub_1AE5FBDD0();
        if (sub_1AE5E1EB8((uint64_t)v55) == 1
          || !static EntityFeatures.== infix(_:_:)((uint64_t)v54, (uint64_t)v56))
        {
          return 0;
        }
      }
      if ((v39 & 1) != 0)
      {
        if (!v18)
          return 0;
      }
      else
      {
        if (v38 == v34)
          v35 = v18;
        else
          v35 = 1;
        if ((v35 & 1) != 0)
          return 0;
      }
      if (v10 == v19 && v37 == v20)
      {
        if (v36)
        {
          if (v21 && sub_1AE5EAB60(v36, v21))
            return 1;
        }
        else if (!v21)
        {
          return 1;
        }
      }
      return 0;
    }
    sub_1AE5D7E78(v41, v47);
    sub_1AE5D7E78(v40, v46);
    v32 = sub_1AE5FC108();
    sub_1AE52F880(v32, v33);
    sub_1AE52F880(v40, v46);
    return 0;
  }
  return result;
}

uint64_t sub_1AE5F18E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v14;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x726F6353656D616ELL && a2 == 0xE900000000000065;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x75747865746E6F63 && a2 == 0xEF65726F63536C61;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6552797469746E65 && a2 == 0xEF65636E6176656CLL;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x4449656372756F73 && a2 == 0xE800000000000000;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x6C43797469746E65 && a2 == 0xEB00000000737361;
              if (v11 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x6546797469746E65 && a2 == 0xEE00736572757461;
                if (v12 || (sub_1AE926D60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001AE97FDC0 || (sub_1AE926D60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else if (a1 == 0xD000000000000016 && a2 == 0x80000001AE97FDE0 || (sub_1AE926D60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 9;
                }
                else if (a1 == 0xD000000000000013 && a2 == 0x80000001AE97FE00 || (sub_1AE926D60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 10;
                }
                else if (a1 == 0x7574616546776172 && a2 == 0xEB00000000736572)
                {
                  swift_bridgeObjectRelease();
                  return 11;
                }
                else
                {
                  v14 = sub_1AE926D60();
                  swift_bridgeObjectRelease();
                  if ((v14 & 1) != 0)
                    return 11;
                  else
                    return 12;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE5F1E1C()
{
  return 12;
}

uint64_t sub_1AE5F1E24(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE5F1E5C + 4 * byte_1AE940C20[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1AE5F1E5C()
{
  return 0x65726F6373;
}

uint64_t sub_1AE5F1E70()
{
  return 0x726F6353656D616ELL;
}

uint64_t sub_1AE5F1E8C()
{
  return 0x75747865746E6F63;
}

uint64_t sub_1AE5F1EB0()
{
  return 0x6552797469746E65;
}

uint64_t sub_1AE5F1ED4()
{
  return 0x4449656372756F73;
}

uint64_t sub_1AE5F1EEC()
{
  return 0x6C43797469746E65;
}

uint64_t sub_1AE5F1F10()
{
  return 0x6546797469746E65;
}

unint64_t sub_1AE5F1F34()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1AE5F1F6C()
{
  return 0xD000000000000013;
}

uint64_t sub_1AE5F1F88()
{
  return 0x7574616546776172;
}

uint64_t sub_1AE5F1FA8()
{
  unsigned __int8 *v0;

  return sub_1AE5F1E24(*v0);
}

uint64_t sub_1AE5F1FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5F18E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5F1FD4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE5F1E1C();
  *a1 = result;
  return result;
}

uint64_t sub_1AE5F1FF8()
{
  sub_1AE5F689C();
  return sub_1AE926F94();
}

uint64_t sub_1AE5F2020()
{
  sub_1AE5F689C();
  return sub_1AE926FA0();
}

void RerankedEntity.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v14[4];
  char v15;
  char v16;
  _BYTE v17[984];

  sub_1AE5FC03C();
  v4 = v3;
  v5 = sub_1AE501548(&qword_1EED9D3F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F6744();
  v7 = *v0;
  v9 = v0[9];
  v10 = v0[10];
  v11 = v0[11];
  v12 = v0[12];
  v13 = *((_BYTE *)v0 + 104);
  sub_1AE5DA9AC((uint64_t)(v0 + 14), (uint64_t)v17);
  v8 = v0[140];
  sub_1AE50869C(v4);
  sub_1AE5F689C();
  sub_1AE4FC7AC();
  v14[0] = v7;
  v16 = 0;
  sub_1AE52A494();
  sub_1AE926CC4();
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
  }
  else
  {
    sub_1AE5FBD7C(1);
    sub_1AE5FB8E0();
    sub_1AE5FBD7C(2);
    sub_1AE5FB8E0();
    sub_1AE5FBD7C(3);
    sub_1AE5FB8E0();
    sub_1AE5FBD7C(4);
    sub_1AE5FB8E0();
    sub_1AE5F65C4();
    sub_1AE5FB8A8();
    v14[0] = v9;
    v14[1] = v10;
    v14[2] = v11;
    v14[3] = v12;
    v15 = v13;
    v16 = 6;
    sub_1AE5BA840();
    sub_1AE5FB8A8();
    sub_1AE5DA9AC((uint64_t)v17, (uint64_t)v14);
    v16 = 7;
    sub_1AE5F68D8();
    sub_1AE5FB8A8();
    LOBYTE(v14[0]) = 8;
    sub_1AE926C7C();
    sub_1AE5FBD7C(9);
    sub_1AE5FB8E0();
    LOBYTE(v14[0]) = 10;
    sub_1AE926C94();
    v14[0] = v8;
    v16 = 11;
    sub_1AE4F69EC();
    sub_1AE5FC100(&qword_1EED9D408);
    sub_1AE926C70();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
  }
  sub_1AE5FB95C();
}

void RerankedEntity.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41[141];
  uint64_t v42[141];
  char v43;
  uint64_t v44;
  _BYTE v45[976];
  uint64_t v46;
  _QWORD v47[141];

  sub_1AE5FC03C();
  v2 = (_QWORD *)MEMORY[0x1E0C80A78](v1);
  v4 = v3;
  sub_1AE501548(&qword_1EED9D410);
  sub_1AE506C14();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE50688C();
  sub_1AE5FBEEC(v2);
  sub_1AE5F689C();
  sub_1AE5FBB48();
  if (v0)
  {
    sub_1AE4F9260();
  }
  else
  {
    v39 = v4;
    sub_1AE52A458();
    sub_1AE5FBA8C();
    v47[0] = v42[0];
    sub_1AE505504(1);
    v7 = v6;
    v38 = v42[0];
    v47[1] = v6;
    sub_1AE505504(2);
    v9 = v8;
    v47[2] = v8;
    sub_1AE505504(3);
    v11 = v10;
    v47[3] = v10;
    sub_1AE505504(4);
    v13 = v12;
    v47[4] = v12;
    sub_1AE5F6678();
    sub_1AE5FB8EC();
    v47[5] = v42[0];
    v47[6] = v42[1];
    v47[7] = v42[2];
    v47[8] = v42[3];
    LOBYTE(v41[0]) = 6;
    v35 = v42[1];
    v36 = v42[2];
    v37 = v42[3];
    sub_1AE578C4C(v42[0], v42[1]);
    sub_1AE5BA7C8();
    sub_1AE5FB8EC();
    v34 = v42[0];
    v14 = v42[4];
    v47[9] = v42[0];
    v47[10] = v42[1];
    v47[11] = v42[2];
    v47[12] = v42[3];
    sub_1AE5FC308();
    *(_BYTE *)(v15 + 104) = v42[4];
    v45[975] = 7;
    v30 = v16;
    v31 = v17;
    v32 = v18;
    v33 = v19;
    sub_1AE5D7E78(v16, v17);
    sub_1AE5DA934();
    sub_1AE5FB8EC();
    v29 = v14;
    sub_1AE5DA9AC((uint64_t)&v46, (uint64_t)v45);
    sub_1AE5FC308();
    sub_1AE5DA9AC((uint64_t)v45, v20 + 112);
    v21 = sub_1AE926BA4();
    v47[136] = v21;
    v23 = v22;
    LOBYTE(v47[137]) = v22 & 1;
    sub_1AE505504(9);
    v25 = v24;
    v47[138] = v24;
    LOBYTE(v42[0]) = 10;
    sub_1AE926BBC();
    sub_1AE5FC308();
    v28 = v26;
    *(_BYTE *)(v27 + 1112) = v26;
    sub_1AE501548((uint64_t *)&unk_1EED9E280);
    v43 = 11;
    sub_1AE5F6914(&qword_1EED9D418, (uint64_t *)&unk_1EED9E280);
    sub_1AE926B98();
    sub_1AE5FBFC8();
    v40 = v44;
    v47[140] = v44;
    v41[0] = v38;
    v41[1] = v7;
    v41[2] = v9;
    v41[3] = v11;
    v41[4] = v13;
    v41[5] = v34;
    v41[6] = v35;
    v41[7] = v36;
    v41[8] = v37;
    v41[9] = v30;
    v41[10] = v31;
    v41[11] = v32;
    v41[12] = v33;
    LOBYTE(v41[13]) = v29;
    sub_1AE5DA9AC((uint64_t)v45, (uint64_t)&v41[14]);
    v41[136] = v21;
    LOBYTE(v41[137]) = v23 & 1;
    v41[138] = v25;
    LOBYTE(v41[139]) = v28;
    v41[140] = v40;
    sub_1AE5D89A8(v41);
    sub_1AE52F880(v30, v31);
    sub_1AE5FBD44();
    memcpy(v39, v41, 0x468uLL);
    sub_1AE4F9260();
    memcpy(v42, v47, sizeof(v42));
    sub_1AE5D7EA8(v42);
  }
  sub_1AE5FB95C();
}

void sub_1AE5F289C()
{
  RerankedEntity.init(from:)();
}

void sub_1AE5F28B0()
{
  RerankedEntity.encode(to:)();
}

uint64_t RerankedEntity.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD __dst[121];
  uint64_t v15;
  unint64_t v16;
  _QWORD __src[122];
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[984];

  v1 = *v0;
  v2 = v0[5];
  v3 = v0[6];
  v4 = v0[7];
  v5 = v0[8];
  v6 = v0[10];
  v11 = v0[11];
  v12 = v0[9];
  v10 = v0[12];
  v7 = *((_BYTE *)v0 + 104);
  sub_1AE5DA9AC((uint64_t)(v0 + 14), (uint64_t)v20);
  v9 = v0[136];
  v13 = *((_BYTE *)v0 + 1096);
  sub_1AE5FC19C();
  sub_1AE92691C();
  sub_1AE925F74();
  __dst[0] = v1;
  EntityIdentifier.description.getter();
  sub_1AE5FB890();
  sub_1AE4F6648();
  sub_1AE925F74();
  Double.toString(decimalPlaces:)(3);
  sub_1AE5FB890();
  sub_1AE4F6648();
  sub_1AE925F74();
  Double.toString(decimalPlaces:)(3);
  sub_1AE5FB890();
  sub_1AE4F6648();
  sub_1AE5FBBB4();
  Double.toString(decimalPlaces:)(3);
  sub_1AE5FB890();
  sub_1AE4F6648();
  sub_1AE5FBBB4();
  sub_1AE5FBA98();
  sub_1AE5FB890();
  sub_1AE4F6648();
  sub_1AE5FBF88();
  sub_1AE5FC2D8();
  sub_1AE5FB890();
  sub_1AE4F6648();
  sub_1AE5FBF88();
  sub_1AE5FBA48();
  sub_1AE4F6648();
  v18 = __src[0];
  v19 = __src[1];
  if (v3)
  {
    __dst[0] = 0x656372756F73200ALL;
    __dst[1] = 0xE90000000000003ALL;
    __src[0] = v2;
    __src[1] = v3;
    __src[2] = v4;
    __src[3] = v5;
    EntitySourceID.description.getter();
    sub_1AE5FBD50();
    sub_1AE4F6648();
    sub_1AE5FBA48();
    sub_1AE4F6648();
  }
  if (v6)
  {
    sub_1AE5FC19C();
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    strcpy((char *)__dst, "\n entityClass:");
    HIBYTE(__dst[1]) = -18;
    __src[0] = v12;
    __src[1] = v6;
    __src[2] = v11;
    __src[3] = v10;
    LOBYTE(__src[4]) = v7;
    EntityClass.description.getter();
    sub_1AE5FBD50();
    sub_1AE4F6648();
    sub_1AE5FBA48();
    sub_1AE4F6648();
  }
  sub_1AE5DA9AC((uint64_t)v20, (uint64_t)__src);
  if (sub_1AE5E1EB8((uint64_t)__src) != 1)
  {
    v15 = 0;
    v16 = 0xE000000000000000;
    sub_1AE5FBA80();
    memcpy(__dst, __src, sizeof(__dst));
    sub_1AE926A48();
    sub_1AE5FBA48();
    sub_1AE4F6648();
  }
  if ((v13 & 1) == 0)
  {
    __dst[0] = 0;
    __dst[1] = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    __dst[0] = 0xD000000000000023;
    __dst[1] = 0x80000001AE97FCC0;
    v15 = v9;
    sub_1AE926D18();
    sub_1AE5FBD50();
    sub_1AE4F6648();
    sub_1AE4F7838();
    sub_1AE5FBA48();
    sub_1AE4F6648();
  }
  return v18;
}

uint64_t static RerankedEntitiesForMention.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[4];
  uint64_t v14;
  char v15;
  _OWORD v16[4];
  uint64_t v17;
  char v18;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_BYTE *)(a1 + 72);
  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_BYTE *)(a2 + 72);
  v6 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v6;
  v7 = *(_OWORD *)(a1 + 48);
  v16[2] = *(_OWORD *)(a1 + 32);
  v16[3] = v7;
  v17 = v2;
  v18 = v3;
  v8 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v8;
  v9 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  v13[3] = v9;
  v14 = v4;
  v15 = v5;
  if ((static Mention.== infix(_:_:)((uint64_t)v16, (uint64_t)v13) & 1) == 0)
    return 0;
  v10 = sub_1AE4F7714();
  return sub_1AE5EA508(v10, v11);
}

uint64_t sub_1AE5F2D68(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E6F69746E656DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365697469746E65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE5F2E54(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7365697469746E65;
  else
    return 0x6E6F69746E656DLL;
}

uint64_t sub_1AE5F2E8C()
{
  char *v0;

  return sub_1AE5F2E54(*v0);
}

uint64_t sub_1AE5F2E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5F2D68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5F2EB8()
{
  sub_1AE5F6958();
  return sub_1AE926F94();
}

uint64_t sub_1AE5F2EE0()
{
  sub_1AE5F6958();
  return sub_1AE926FA0();
}

void RerankedEntitiesForMention.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1AE4F67EC();
  v4 = v3;
  sub_1AE501548(&qword_1EED9D420);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F683C();
  sub_1AE50869C(v4);
  sub_1AE5F6958();
  sub_1AE4FC7AC();
  sub_1AE5F6994();
  sub_1AE926CC4();
  if (!v0)
  {
    sub_1AE5FB9E8();
    sub_1AE4F69EC();
    sub_1AE5FB870(&qword_1EED9D440);
    sub_1AE4FD9D4();
  }
  sub_1AE4FDC10(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1AE595D68();
  sub_1AE4F667C();
}

void RerankedEntitiesForMention.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  sub_1AE4F67EC();
  v3 = v2;
  v5 = v4;
  sub_1AE501548(&qword_1EED9D450);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE50688C();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE5F6958();
  sub_1AE926F34();
  if (v0)
  {
    sub_1AE4F9260();
  }
  else
  {
    sub_1AE5F6A0C();
    sub_1AE5FC1BC();
    sub_1AE501548(&qword_1EED9D438);
    sub_1AE5FB9E8();
    sub_1AE5FB6FC(&qword_1EED9D460, &qword_1EED9D438);
    v8 = v7;
    swift_bridgeObjectRetain();
    sub_1AE4F6804();
    sub_1AE4F66CC();
    swift_bridgeObjectRetain();
    sub_1AE5FC1BC();
    sub_1AE501B88(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    if (v8)
    {
      sub_1AE4F66E8();
      sub_1AE4F76D8();
      sub_1AE4F67AC();
      sub_1AE4F9038();
      sub_1AE4F9260();
      sub_1AE4F66E8();
      sub_1AE4F76D8();
      sub_1AE4F67AC();
    }
    else
    {
      *(_QWORD *)v5 = v9;
      *(_QWORD *)(v5 + 8) = v10;
      *(_QWORD *)(v5 + 16) = v11;
      *(_QWORD *)(v5 + 24) = v12;
      *(_QWORD *)(v5 + 32) = v13;
      *(_QWORD *)(v5 + 40) = v14;
      *(_QWORD *)(v5 + 48) = v15;
      *(_QWORD *)(v5 + 56) = v16;
      *(_QWORD *)(v5 + 64) = v17;
      *(_BYTE *)(v5 + 72) = v18;
      *(_QWORD *)(v5 + 80) = v9;
      sub_1AE4F66CC();
      sub_1AE4F9260();
      sub_1AE4F9038();
      sub_1AE4F6710();
      sub_1AE4F6728();
      sub_1AE4F66E8();
    }
    swift_bridgeObjectRelease();
  }
  sub_1AE4F667C();
}

void sub_1AE5F3294()
{
  RerankedEntitiesForMention.init(from:)();
}

void sub_1AE5F32A8()
{
  RerankedEntitiesForMention.encode(to:)();
}

uint64_t RerankedEntitiesForMention.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD v25[143];
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1AE4FC4D4();
  v28 = v1;
  v29 = v2;
  v4 = *v0;
  v3 = v0[1];
  v5 = v0[2];
  v6 = v0[3];
  v7 = v0[4];
  v8 = v0[5];
  v10 = v0[6];
  v9 = v0[7];
  v24 = v0[8];
  v25[0] = 0;
  v23 = *((_BYTE *)v0 + 72);
  v11 = v0[10];
  sub_1AE92691C();
  v26 = 0;
  v27 = 0xE000000000000000;
  sub_1AE925F74();
  v25[0] = v4;
  v25[1] = v3;
  v25[2] = v5;
  v25[3] = v6;
  v25[4] = v7;
  v25[5] = v8;
  v25[6] = v10;
  v25[7] = v9;
  v25[8] = v24;
  LOBYTE(v25[9]) = v23;
  sub_1AE4F66C4();
  sub_1AE4F6730();
  sub_1AE4F6708();
  sub_1AE4F6804();
  Mention.description.getter();
  sub_1AE925F74();
  sub_1AE4F665C();
  sub_1AE4F67AC();
  sub_1AE4F76D8();
  sub_1AE4F81B8();
  sub_1AE4F66E8();
  sub_1AE5FB8BC();
  if (v9)
  {
    v12 = *(_QWORD *)(v9 + 16);
    v13 = MEMORY[0x1E0DEE9D8];
    if (v12)
    {
      v25[0] = MEMORY[0x1E0DEE9D8];
      sub_1AE4F66C4();
      sub_1AE5FBF98();
      v13 = v25[0];
      v14 = (uint64_t *)(v9 + 56);
      do
      {
        v16 = *(v14 - 1);
        v15 = *v14;
        v25[0] = v13;
        v18 = *(_QWORD *)(v13 + 16);
        v17 = *(_QWORD *)(v13 + 24);
        sub_1AE4F6804();
        if (v18 >= v17 >> 1)
        {
          sub_1AE5FBD38();
          v13 = v25[0];
        }
        *(_QWORD *)(v13 + 16) = v18 + 1;
        v19 = v13 + 16 * v18;
        *(_QWORD *)(v19 + 32) = v16;
        *(_QWORD *)(v19 + 40) = v15;
        v14 += 5;
        --v12;
      }
      while (v12);
      sub_1AE4F665C();
    }
    v25[0] = v13;
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE568D9C();
    sub_1AE925DC4();
    sub_1AE4F81B8();
  }
  sub_1AE509ECC();
  sub_1AE4F665C();
  sub_1AE4FDA58();
  sub_1AE508F74();
  v25[0] = *(_QWORD *)(v11 + 16);
  sub_1AE926D18();
  sub_1AE925F74();
  sub_1AE4F665C();
  result = v26;
  v21 = *(_QWORD *)(v11 + 16);
  if (v21)
  {
    sub_1AE4FB75C();
    v22 = 32;
    do
    {
      memcpy(v25, (const void *)(v11 + v22), 0x468uLL);
      v25[141] = 32;
      v25[142] = 0xE100000000000000;
      RerankedEntity.description.getter();
      sub_1AE5FBCA4();
      sub_1AE4F665C();
      sub_1AE509ECC();
      sub_1AE4F665C();
      v22 += 1128;
      --v21;
    }
    while (v21);
    sub_1AE4F6648();
    return v26;
  }
  return result;
}

uint64_t sub_1AE5F3538(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6769666E6F63 && a2 == 0xE600000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x736E6F69746E656DLL && a2 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1AE926D60();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1AE5F36E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE5F3718 + 4 * byte_1AE940C2C[a1]))(0x74736575716572, 0xE700000000000000);
}

uint64_t sub_1AE5F3718()
{
  return 0x6769666E6F63;
}

uint64_t sub_1AE5F372C()
{
  return 0x65736E6F70736572;
}

uint64_t sub_1AE5F3744()
{
  return 0x736E6F69746E656DLL;
}

uint64_t sub_1AE5F3760()
{
  unsigned __int8 *v0;

  return sub_1AE5F36E4(*v0);
}

uint64_t sub_1AE5F3768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5F3538(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5F378C()
{
  sub_1AE5F6A84();
  return sub_1AE926F94();
}

uint64_t sub_1AE5F37B4()
{
  sub_1AE5F6A84();
  return sub_1AE926FA0();
}

void EntityResolutionSession.encode(to:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[8];

  sub_1AE4F67EC();
  v4 = v0;
  v6 = v5;
  sub_1AE501548(&qword_1EED9D470);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F683C();
  v8 = v4[35];
  v9 = v4[34];
  sub_1AE50869C(v6);
  sub_1AE5F6A84();
  sub_1AE4FC7AC();
  sub_1AE5FBAC8(v10, v4);
  sub_1AE5F6AC0();
  sub_1AE4FD9D4();
  if (!v1)
  {
    sub_1AE4FFF90(v10, v4 + 16);
    sub_1AE5FB9E8();
    sub_1AE5F6AFC();
    sub_1AE4FD9D4();
    v10[0] = v9;
    sub_1AE4F69EC();
    sub_1AE5FB870(&qword_1EED9D498);
    sub_1AE4FD9D4();
    v10[0] = v8;
    sub_1AE4F69EC();
    sub_1AE5FB870(&qword_1EED9D4B0);
    sub_1AE4FD9D4();
  }
  sub_1AE4FDC10(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1AE595D68();
  sub_1AE4F667C();
}

void EntityResolutionSession.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[36];
  _QWORD v12[37];
  _BYTE v13[144];
  _BYTE v14[144];
  _BYTE v15[128];
  _BYTE v16[128];
  _BYTE v17[280];

  sub_1AE4F67EC();
  v3 = v2;
  v5 = v4;
  sub_1AE501548(&qword_1EED9D4B8);
  sub_1AE506C14();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE50688C();
  sub_1AE5FBEEC(v3);
  sub_1AE5F6A84();
  sub_1AE5FBB48();
  if (v0)
  {
    sub_1AE5FC034();
  }
  else
  {
    sub_1AE5F6B74();
    sub_1AE5FBA8C();
    sub_1AE5FBAC8(v15, v16);
    sub_1AE5FBAC8(v17, v16);
    sub_1AE5F66B4((uint64_t)v15);
    sub_1AE5DE110();
    sub_1AE5FBA8C();
    sub_1AE4FFF90(v13, v14);
    sub_1AE4FFF90(&v17[128], v14);
    sub_1AE4F69EC();
    LOBYTE(v11[0]) = 2;
    sub_1AE5DD3A4((uint64_t)v13);
    sub_1AE5FB870(&qword_1EED9D4C8);
    sub_1AE926BEC();
    v7 = v12[0];
    sub_1AE501548(&qword_1EED9D4A8);
    sub_1AE5FB6FC(&qword_1EED9D4D8, &qword_1EED9D4A8);
    v9 = v8;
    sub_1AE4F6730();
    sub_1AE5FBA8C();
    if (v9)
    {
      sub_1AE501B88(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      swift_bridgeObjectRelease();
      sub_1AE5FC00C();
      sub_1AE5FBDB0();
      sub_1AE5FC034();
      sub_1AE5FBAC8(v11, v17);
      sub_1AE5F676C((uint64_t)v11);
      sub_1AE4FFF90(v12, &v17[128]);
      sub_1AE5DD3EC((uint64_t)v12);
      sub_1AE4F67AC();
    }
    else
    {
      sub_1AE501B88(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      v10 = v12[36];
      sub_1AE5FBAC8(v11, v15);
      sub_1AE4FFF90(&v11[16], v13);
      v11[34] = v7;
      v11[35] = v10;
      sub_1AE5F6BEC((uint64_t)v11);
      swift_bridgeObjectRelease();
      sub_1AE5FC00C();
      sub_1AE5FBDB0();
      memcpy(v5, v11, 0x120uLL);
      sub_1AE5FC034();
      memcpy(v12, v17, 0x110uLL);
      v12[34] = v7;
      v12[35] = v10;
      sub_1AE5F6CE8((uint64_t)v12);
    }
  }
  sub_1AE595D68();
  sub_1AE4F667C();
}

void sub_1AE5F3CA0()
{
  EntityResolutionSession.init(from:)();
}

void sub_1AE5F3CB4()
{
  EntityResolutionSession.encode(to:)();
}

void NeighborSignal.name.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void NeighborSignal.columnName.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

IntelligencePlatform::NeighborSignal_optional __swiftcall NeighborSignal.init(rawValue:)(Swift::String rawValue)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  void *object;
  uint64_t countAndFlagsBits;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  IntelligencePlatform::NeighborSignal_optional result;

  v2 = v1;
  v3 = 0xE900000000000073;
  v4 = 0x6E6F697461636F6CLL;
  if (rawValue._countAndFlagsBits == 0x6E6F697461636F6CLL && rawValue._object == (void *)0xE900000000000073)
    goto LABEL_29;
  object = rawValue._object;
  countAndFlagsBits = rawValue._countAndFlagsBits;
  sub_1AE4FDC24(0x61636F6Cu);
  if ((sub_1AE4FB6F0() & 1) != 0)
    goto LABEL_29;
  v4 = 0x73746E657665;
  v3 = 0xE600000000000000;
  v8 = countAndFlagsBits == 0x73746E657665 && object == (void *)0xE600000000000000;
  if (v8
    || (sub_1AE4FB6F0() & 1) != 0
    || ((v4 = 0x656C706F6570, countAndFlagsBits == 0x656C706F6570)
      ? (v9 = object == (void *)0xE600000000000000)
      : (v9 = 0),
        v9
     || (sub_1AE4FB6F0() & 1) != 0
     || ((v4 = 0x736369706F74, countAndFlagsBits == 0x736369706F74)
       ? (v10 = object == (void *)0xE600000000000000)
       : (v10 = 0),
         v10
      || (sub_1AE4FB6F0() & 1) != 0
      || ((v3 = 0xED0000736E6F6974, v4 = 0x617A696E6167726FLL, countAndFlagsBits == 0x617A696E6167726FLL)
        ? (v11 = object == (void *)0xED0000736E6F6974)
        : (v11 = 0),
          v11 || (sub_1AE4FB6F0() & 1) != 0))))
  {
LABEL_29:
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE4F66CC();
    v4 = countAndFlagsBits;
    v3 = (unint64_t)object;
  }
  *v2 = v4;
  v2[1] = v3;
  v2[2] = v4;
  v2[3] = v3;
  sub_1AE4FCDD0();
  result.value.columnName._object = v15;
  result.value.columnName._countAndFlagsBits = v14;
  result.value.name._object = v13;
  result.value.name._countAndFlagsBits = v12;
  return result;
}

IntelligencePlatform::NeighborSignal_optional __swiftcall NeighborSignal.init(columnName:)(Swift::String columnName)
{
  _OWORD *v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  IntelligencePlatform::NeighborSignal_optional result;

  v2 = v1;
  result = NeighborSignal.init(rawValue:)(columnName);
  *v2 = v3;
  v2[1] = v4;
  return result;
}

uint64_t sub_1AE5F3F04()
{
  sub_1AE5FB5B8();
  return sub_1AE926190();
}

uint64_t sub_1AE5F3F60()
{
  sub_1AE5FB5B8();
  return sub_1AE926148();
}

unint64_t sub_1AE5F3FAC(Swift::String *a1)
{
  return (unint64_t)NeighborSignal.init(rawValue:)(*a1);
}

void sub_1AE5F3FB8(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  NeighborSignal.name.getter();
  *a1 = v2;
  a1[1] = v3;
  sub_1AE4F6664();
}

uint64_t sub_1AE5F3FD8()
{
  return sub_1AE5E87D0();
}

uint64_t sub_1AE5F3FF4()
{
  sub_1AE5FB5F4();
  sub_1AE5FB5B8();
  return sub_1AE92514C();
}

uint64_t sub_1AE5F4050()
{
  sub_1AE5FB57C();
  sub_1AE5FB5B8();
  return sub_1AE925158();
}

uint64_t sub_1AE5F40B4(uint64_t *a1, uint64_t *a2)
{
  return sub_1AE512350(*a1, a1[1], a1[2], a1[3], *a2, a2[1]);
}

uint64_t sub_1AE5F40D0()
{
  sub_1AE5FB540();
  return sub_1AE92511C();
}

uint64_t sub_1AE5F4108()
{
  sub_1AE5FB540();
  return sub_1AE925134();
}

uint64_t sub_1AE5F4148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t v4;

  sub_1AE924780();
  sub_1AE506C14();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4F6744();
  sub_1AE9246FC();
  sub_1AE9247B0();
  result = sub_1AE5FBD98();
  if (!v0)
  {
    v3 = (void *)MEMORY[0x1AF454348](result);
    sub_1AE5F4224(&v4);
    objc_autoreleasePoolPop(v3);
    sub_1AE4FCEF0();
    return v4;
  }
  return result;
}

uint64_t sub_1AE5F4224@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE9243C0();
  swift_allocObject();
  sub_1AE9243B4();
  sub_1AE501548(&qword_1EED9D6F0);
  sub_1AE5FB6FC(&qword_1EED9D6F8, &qword_1EED9D6F0);
  sub_1AE9243A8();
  result = swift_release();
  if (!v1)
  {
    v4 = sub_1AE5E7D64(v6);
    swift_bridgeObjectRelease();
    v6 = v4;
    swift_bridgeObjectRetain();
    sub_1AE5E9738(&v6);
    swift_bridgeObjectRelease();
    v5 = v6;
    sub_1AE501548(&qword_1ED30FDD8);
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1AE934250;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_QWORD *)(result + 96) = 0;
    *(_BYTE *)(result + 104) = 1;
    *(_QWORD *)(result + 112) = v5;
    *a1 = result;
  }
  return result;
}

void *sub_1AE5F4390@<X0>(uint64_t a1@<X0>, double *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  void *result;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  _BYTE __dst[976];
  _QWORD v24[141];
  _BYTE __src[976];
  void *v26;

  v7 = *a2;
  v6 = *((_QWORD *)a2 + 1);
  v9 = *((_QWORD *)a2 + 2);
  v8 = a2[3];
  v10 = a2[4];
  v11 = a2[5];
  sub_1AE501548(&qword_1EED9D708);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1AE93D190;
  v24[0] = a1;
  result = (void *)EntityIdentifier.stringValue.getter();
  *(_QWORD *)(v12 + 32) = 0xD000000000000027;
  *(_QWORD *)(v12 + 40) = 0x80000001AE97FEB0;
  *(_QWORD *)(v12 + 48) = 0xD000000000000010;
  *(_QWORD *)(v12 + 56) = 0x80000001AE97FEE0;
  *(_QWORD *)(v12 + 64) = result;
  *(_QWORD *)(v12 + 72) = v14;
  if ((~*(_QWORD *)&v11 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v11 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v11 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v22 = v7;
  v26 = a3;
  v15 = (void *)objc_opt_self();
  *(_QWORD *)(v12 + 80) = objc_msgSend(v15, sel_featureValueWithInt64_, (uint64_t)v11);
  v16 = EntityIdentifier.stringValue.getter();
  *(_QWORD *)(v12 + 88) = 0xD000000000000027;
  *(_QWORD *)(v12 + 96) = 0x80000001AE97FEB0;
  *(_QWORD *)(v12 + 104) = 0xD000000000000012;
  *(_QWORD *)(v12 + 112) = 0x80000001AE97FF00;
  *(_QWORD *)(v12 + 120) = v16;
  *(_QWORD *)(v12 + 128) = v17;
  *(_QWORD *)(v12 + 136) = objc_msgSend(v15, sel_featureValueWithDouble_, v10);
  v24[0] = a1;
  v18 = EntityIdentifier.stringValue.getter();
  *(_QWORD *)(v12 + 144) = 0xD000000000000029;
  *(_QWORD *)(v12 + 152) = 0x80000001AE97FF20;
  *(_QWORD *)(v12 + 160) = 0xD00000000000002ELL;
  *(_QWORD *)(v12 + 168) = 0x80000001AE97FF50;
  *(_QWORD *)(v12 + 176) = v18;
  *(_QWORD *)(v12 + 184) = v19;
  *(_QWORD *)(v12 + 192) = objc_msgSend(v15, sel_featureValueWithDouble_, v8);
  sub_1AE524254(0, (unint64_t *)&qword_1ED318F40);
  sub_1AE5D6360();
  sub_1AE925C98();
  v20 = swift_bridgeObjectRetain();
  v21 = (void *)MEMORY[0x1AF454348](v20);
  sub_1AE5DA1F8((uint64_t)__src);
  objc_autoreleasePoolPop(v21);
  swift_bridgeObjectRelease();
  if (v3)
  {
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    memcpy(__dst, __src, 0x3C8uLL);
    sub_1AE5D7E34((uint64_t)__dst);
    v24[0] = a1;
    v24[1] = v9;
    v24[3] = 0;
    v24[2] = 0;
    v24[4] = v9;
    *(double *)&v24[5] = v22;
    v24[6] = v6;
    memset(&v24[7], 0, 49);
    sub_1AE5DA9AC((uint64_t)__dst, (uint64_t)&v24[14]);
    v24[136] = 0;
    LOBYTE(v24[137]) = 1;
    v24[138] = 0x3FF0000000000000;
    LOBYTE(v24[139]) = 0;
    v24[140] = 0;
    return memcpy(v26, v24, 0x468uLL);
  }
}

uint64_t sub_1AE5F46AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1684632941 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AE97FE20 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1AE5F47E4(char a1)
{
  if (!a1)
    return 1684632941;
  if (a1 == 1)
    return 0xD000000000000014;
  return 0x7365727574616566;
}

uint64_t sub_1AE5F4838()
{
  char *v0;

  return sub_1AE5F47E4(*v0);
}

uint64_t sub_1AE5F4840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5F46AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5F4864()
{
  sub_1AE5F6DE0();
  return sub_1AE926F94();
}

uint64_t sub_1AE5F488C()
{
  sub_1AE5F6DE0();
  return sub_1AE926FA0();
}

uint64_t MockRankerResult.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1AE501548(&qword_1EED9D4E0);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F683C();
  sub_1AE5FBEEC(a1);
  sub_1AE5F6DE0();
  sub_1AE5085CC();
  sub_1AE5FBF04();
  sub_1AE4FD9E0();
  if (!v2)
  {
    sub_1AE926CA0();
    sub_1AE5F6E1C();
    sub_1AE4FD9D4();
  }
  return sub_1AE4F77C0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
}

void MockRankerResult.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  sub_1AE5FC2FC();
  v3 = v2;
  sub_1AE501548(&qword_1EED9D4F8);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE505354();
  sub_1AE5F6DE0();
  sub_1AE5068D4();
  if (v1)
  {
    sub_1AE4F90EC();
  }
  else
  {
    v5 = sub_1AE5FBCFC();
    v7 = v6;
    LOBYTE(v10) = 1;
    sub_1AE509358();
    sub_1AE926BC8();
    v9 = v8;
    sub_1AE5F6E58();
    sub_1AE505F98();
    sub_1AE4F9250();
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v7;
    *(_QWORD *)(v3 + 16) = v9;
    *(_OWORD *)(v3 + 24) = v10;
    *(_QWORD *)(v3 + 40) = v11;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
    sub_1AE4F6728();
  }
  sub_1AE5FBE20();
}

uint64_t sub_1AE5F4B50(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000026 && a2 == 0x80000001AE97FE40 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AE97FE70 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AE97FE90)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AE5F4C94(char a1)
{
  if (!a1)
    return 0xD000000000000026;
  if (a1 == 1)
    return 0xD00000000000001ALL;
  return 0xD000000000000018;
}

void sub_1AE5F4CF0()
{
  MockRankerResult.init(from:)();
}

uint64_t sub_1AE5F4D04(_QWORD *a1)
{
  return MockRankerResult.encode(to:)(a1);
}

unint64_t sub_1AE5F4D18()
{
  char *v0;

  return sub_1AE5F4C94(*v0);
}

uint64_t sub_1AE5F4D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5F4B50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5F4D44()
{
  sub_1AE5F6E94();
  return sub_1AE926F94();
}

uint64_t sub_1AE5F4D6C()
{
  sub_1AE5F6E94();
  return sub_1AE926FA0();
}

uint64_t MockLocationFeatures.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1AE501548(&qword_1EED9D508);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F683C();
  sub_1AE50869C(a1);
  sub_1AE5F6E94();
  sub_1AE4FC7AC();
  sub_1AE4FD144();
  if (!v1)
  {
    sub_1AE4FD144();
    sub_1AE4FD144();
  }
  return sub_1AE4FDC10(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
}

uint64_t MockLocationFeatures.init(from:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1AE501548(&qword_1EED9D518);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE505354();
  sub_1AE5F6E94();
  sub_1AE926F34();
  if (!v1)
  {
    sub_1AE4FC7EC();
    v5 = v4;
    sub_1AE4FC7EC();
    v8 = v7;
    sub_1AE4FC7EC();
    v10 = v9;
    sub_1AE4F9250();
    *a1 = v5;
    a1[1] = v8;
    a1[2] = v10;
  }
  return sub_1AE4F90EC();
}

uint64_t sub_1AE5F4FBC@<X0>(_QWORD *a1@<X8>)
{
  return MockLocationFeatures.init(from:)(a1);
}

uint64_t sub_1AE5F4FD0(_QWORD *a1)
{
  return MockLocationFeatures.encode(to:)(a1);
}

uint64_t static NSUserDefaults.ecrRankerResultsMockFile.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _OWORD v4[2];
  uint64_t v5;

  if (qword_1ED30FC98 != -1)
    swift_once();
  sub_1AE4FB9BC();
  v4[0] = xmmword_1ED30FC70;
  v4[1] = *(_OWORD *)&qword_1ED30FC80;
  v5 = qword_1ED30FC90;
  v0 = sub_1AE5F6ED0((uint64_t)v4);
  v1 = (void *)MEMORY[0x1AF454348](v0);
  v2 = sub_1AE5F53A4((uint64_t *)v4);
  objc_autoreleasePoolPop(v1);
  sub_1AE5F6F10((uint64_t)v4);
  return v2;
}

uint64_t static NSUserDefaults.ecrRankerResultsMockFile.setter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE5FC2B4();
  if (qword_1ED30FC98 != -1)
    swift_once();
  v0 = sub_1AE4FB9BC();
  v1 = (void *)MEMORY[0x1AF454348](v0);
  sub_1AE5FC0F4();
  sub_1AE5F5580(v2, v3, v4);
  objc_autoreleasePoolPop(v1);
  sub_1AE4F6648();
  return swift_endAccess();
}

void static NSUserDefaults.ecrRankerResultsMockFile.modify(_QWORD *a1)
{
  _OWORD *v2;
  uint64_t v3;
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = malloc(0x58uLL);
  *a1 = v2;
  if (qword_1ED30FC98 != -1)
    swift_once();
  v3 = sub_1AE4FB9BC();
  v4 = *(_OWORD *)&qword_1ED30FC80;
  *v2 = xmmword_1ED30FC70;
  v2[1] = v4;
  *((_QWORD *)v2 + 4) = qword_1ED30FC90;
  v5 = (void *)MEMORY[0x1AF454348](v3);
  v6 = sub_1AE5F53A4((uint64_t *)v2);
  *((_QWORD *)v2 + 10) = 0;
  v7 = v6;
  v9 = v8;
  objc_autoreleasePoolPop(v5);
  *((_QWORD *)v2 + 8) = v7;
  *((_QWORD *)v2 + 9) = v9;
  sub_1AE501BAC();
}

void sub_1AE5F5204(void **a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = sub_1AE4F6730();
    v4 = (void *)MEMORY[0x1AF454348](v3);
    sub_1AE5FC268((uint64_t)&xmmword_1ED30FC70);
    objc_autoreleasePoolPop(v4);
    sub_1AE4F81B8();
  }
  else
  {
    v5 = (void *)MEMORY[0x1AF454348]();
    sub_1AE5FC268((uint64_t)&xmmword_1ED30FC70);
    objc_autoreleasePoolPop(v5);
  }
  swift_bridgeObjectRelease();
  swift_endAccess();
  free(v2);
}

uint64_t sub_1AE5F52A8()
{
  uint64_t result;

  sub_1AE524254(0, (unint64_t *)&qword_1ED31C380);
  result = static NSUserDefaults.makeIntelligencePlatformUserDefaults()();
  xmmword_1ED30FC70 = 0uLL;
  qword_1ED30FC80 = 0xD000000000000018;
  qword_1ED30FC88 = 0x80000001AE97FF80;
  qword_1ED30FC90 = result;
  return result;
}

id static NSUserDefaults.$ecrRankerResultsMockFile.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v5;

  if (qword_1ED30FC98 != -1)
    swift_once();
  sub_1AE4FB9BC();
  v3 = qword_1ED30FC88;
  v5 = (id)qword_1ED30FC90;
  v2 = qword_1ED30FC90;
  *(_QWORD *)a1 = xmmword_1ED30FC70;
  *(_OWORD *)(a1 + 8) = *(__int128 *)((char *)&xmmword_1ED30FC70 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v2;
  swift_bridgeObjectRetain();
  sub_1AE4F66C4();
  return v5;
}

uint64_t sub_1AE5F53A4(uint64_t *a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  __int128 v7;
  _OWORD v8[2];

  v2 = (void *)a1[4];
  v3 = (void *)sub_1AE925E18();
  v4 = objc_msgSend(v2, sel_objectForKey_, v3);

  if (v4)
  {
    sub_1AE9267E4();
    swift_unknownObjectRelease();
    sub_1AE53F2F4(&v7, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_1AE501548((uint64_t *)&unk_1ED31C440);
  sub_1AE501548(&qword_1ED30FC40);
  if (swift_dynamicCast() && *((_QWORD *)&v7 + 1) != 1)
    return v7;
  v5 = *a1;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1AE5F54A0(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  id v7;
  __int128 v9;
  _OWORD v10[2];

  v6 = (void *)sub_1AE925E18();
  v7 = objc_msgSend(a4, sel_objectForKey_, v6);

  if (v7)
  {
    sub_1AE9267E4();
    swift_unknownObjectRelease();
    sub_1AE53F2F4(&v9, v10);
  }
  else
  {
    memset(v10, 0, sizeof(v10));
  }
  sub_1AE501548((uint64_t *)&unk_1ED31C440);
  if (swift_dynamicCast() && v9 != 2)
    a1 = v9 & 1;
  return a1 & 1;
}

void sub_1AE5F5580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;

  v3 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  v4 = v3;
  sub_1AE501548(&qword_1ED30FC40);
  v5 = sub_1AE926DCC();
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setObject_forKey_, v5, v6, a2, a3);

  swift_unknownObjectRelease();
}

void sub_1AE5F563C(uint64_t a1)
{
  id v1;
  uint64_t v2;
  void *v3;

  v1 = *(id *)(a1 + 24);
  v2 = sub_1AE926DCC();
  sub_1AE4F66CC();
  v3 = (void *)sub_1AE925E18();
  sub_1AE4F9038();
  objc_msgSend(v1, sel_setObject_forKey_, v2, v3);

  swift_unknownObjectRelease();
}

unint64_t sub_1AE5F56D8(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_1AE5F5774(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_1AE805B28(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_1AE5F5774(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_1AE5BBF68(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < result >> 16)
    __break(1u);
  return result;
}

void sub_1AE5F57E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double *v13;
  double v14;
  double v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  char v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  double *v73;
  uint64_t v74;
  double *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  _BYTE __dst[1128];
  uint64_t v95;

  v3 = a1[1];
  v4 = sub_1AE926D0C();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1AE5F5E4C(0, (char *)v3, (char *)1, a1);
      return;
    }
    goto LABEL_127;
  }
  v5 = v4;
  v95 = v1;
  sub_1AE51977C(v3 / 2);
  v90 = v6;
  v91 = v3;
  v92 = v7;
  v88 = a1;
  if (v3 <= 0)
  {
    v93 = MEMORY[0x1E0DEE9D8];
    v24 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_93:
    if (v24 < 2)
    {
LABEL_104:
      swift_bridgeObjectRelease();
      if (v91 >= -1)
      {
        *(_QWORD *)(v90 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_132;
    }
    v78 = *v88;
    while (1)
    {
      v79 = v24 - 2;
      if (v24 < 2)
        break;
      if (!v78)
        goto LABEL_136;
      v80 = v93;
      v81 = *(_QWORD *)(v93 + 32 + 16 * v79);
      v82 = *(_QWORD *)(v93 + 32 + 16 * (v24 - 1) + 8);
      v83 = v95;
      sub_1AE5F5F2C((char *)(v78 + 1128 * v81), (char *)(v78 + 1128 * *(_QWORD *)(v93 + 32 + 16 * (v24 - 1))), v78 + 1128 * v82, v92);
      v95 = v83;
      if (v83)
        goto LABEL_89;
      if (v82 < v81)
        goto LABEL_122;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE8893F4();
        v80 = v86;
      }
      if (v79 >= *(_QWORD *)(v80 + 16))
        goto LABEL_123;
      v84 = (_QWORD *)(v80 + 32 + 16 * v79);
      *v84 = v81;
      v84[1] = v82;
      v85 = *(_QWORD *)(v80 + 16);
      if (v24 > v85)
        goto LABEL_124;
      memmove((void *)(v80 + 32 + 16 * (v24 - 1)), (const void *)(v80 + 32 + 16 * v24), 16 * (v85 - v24));
      v93 = v80;
      *(_QWORD *)(v80 + 16) = v85 - 1;
      v24 = v85 - 1;
      if (v85 <= 2)
        goto LABEL_104;
    }
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
    return;
  }
  v89 = v5;
  v8 = 0;
  v9 = *a1;
  v87 = v9 - 1128;
  v93 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v10 = v8++;
    if (v8 < v3)
    {
      v11 = *(double *)(v9 + 1128 * v8 + 8);
      v12 = *(double *)(v9 + 1128 * v10 + 8);
      v8 = v10 + 2;
      if (v10 + 2 < v3)
      {
        v13 = (double *)(v9 + 2264 + 1128 * v10);
        v14 = v11;
        while (1)
        {
          v15 = v14;
          v14 = *v13;
          if (v12 < v11 == v15 >= *v13)
            break;
          ++v8;
          v13 += 141;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v12 < v11)
      {
        if (v8 < v10)
          goto LABEL_129;
        if (v10 < v8)
        {
          v16 = (char *)(v87 + 1128 * v8);
          v17 = v8;
          v18 = v10;
          v19 = (char *)(v9 + 1128 * v10);
          do
          {
            if (v18 != --v17)
            {
              if (!v9)
                goto LABEL_135;
              memcpy(__dst, v19, sizeof(__dst));
              memmove(v19, v16, 0x468uLL);
              memcpy(v16, __dst, 0x468uLL);
            }
            ++v18;
            v16 -= 1128;
            v19 += 1128;
          }
          while (v18 < v17);
          v3 = v91;
        }
      }
    }
    if (v8 >= v3)
      goto LABEL_28;
    if (__OFSUB__(v8, v10))
      goto LABEL_126;
    if (v8 - v10 >= v89)
      goto LABEL_28;
    if (__OFADD__(v10, v89))
      goto LABEL_130;
    if (v10 + v89 >= v3)
      v20 = v3;
    else
      v20 = v10 + v89;
    if (v20 < v10)
      goto LABEL_131;
    if (v8 == v20)
    {
LABEL_28:
      v21 = v93;
    }
    else
    {
      v73 = (double *)(v87 + 1128 * v8);
      v21 = v93;
      do
      {
        v74 = v10;
        v75 = v73;
        do
        {
          if (v75[1] >= v75[142])
            break;
          if (!v9)
            goto LABEL_133;
          memcpy(__dst, v75 + 141, sizeof(__dst));
          memcpy(v75 + 141, v75, 0x468uLL);
          memcpy(v75, __dst, 0x468uLL);
          v75 -= 141;
          ++v10;
        }
        while (v8 != v10);
        ++v8;
        v73 += 141;
        v10 = v74;
      }
      while (v8 != v20);
      v8 = v20;
    }
    if (v8 < v10)
      goto LABEL_125;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE889310(0, *(_QWORD *)(v21 + 16) + 1, 1, (char *)v21);
      v21 = v76;
    }
    v23 = *(_QWORD *)(v21 + 16);
    v22 = *(_QWORD *)(v21 + 24);
    v24 = v23 + 1;
    if (v23 >= v22 >> 1)
    {
      sub_1AE889310(v22 > 1, v23 + 1, 1, (char *)v21);
      v21 = v77;
    }
    *(_QWORD *)(v21 + 16) = v24;
    v25 = v21 + 32;
    v26 = (uint64_t *)(v21 + 32 + 16 * v23);
    *v26 = v10;
    v26[1] = v8;
    v93 = v21;
    if (v23)
      break;
    v24 = 1;
LABEL_77:
    v3 = v91;
    if (v8 >= v91)
      goto LABEL_93;
  }
  while (1)
  {
    v27 = v24 - 1;
    if (v24 >= 4)
    {
      v32 = v25 + 16 * v24;
      v33 = *(_QWORD *)(v32 - 64);
      v34 = *(_QWORD *)(v32 - 56);
      v38 = __OFSUB__(v34, v33);
      v35 = v34 - v33;
      if (v38)
        goto LABEL_110;
      v37 = *(_QWORD *)(v32 - 48);
      v36 = *(_QWORD *)(v32 - 40);
      v38 = __OFSUB__(v36, v37);
      v30 = v36 - v37;
      v31 = v38;
      if (v38)
        goto LABEL_111;
      v39 = v24 - 2;
      v40 = (uint64_t *)(v25 + 16 * (v24 - 2));
      v42 = *v40;
      v41 = v40[1];
      v38 = __OFSUB__(v41, v42);
      v43 = v41 - v42;
      if (v38)
        goto LABEL_112;
      v38 = __OFADD__(v30, v43);
      v44 = v30 + v43;
      if (v38)
        goto LABEL_114;
      if (v44 >= v35)
      {
        v62 = (uint64_t *)(v25 + 16 * v27);
        v64 = *v62;
        v63 = v62[1];
        v38 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v38)
          goto LABEL_120;
        v55 = v30 < v65;
        goto LABEL_66;
      }
    }
    else
    {
      if (v24 != 3)
      {
        v56 = *(_QWORD *)(v21 + 32);
        v57 = *(_QWORD *)(v21 + 40);
        v38 = __OFSUB__(v57, v56);
        v49 = v57 - v56;
        v50 = v38;
        goto LABEL_60;
      }
      v29 = *(_QWORD *)(v21 + 32);
      v28 = *(_QWORD *)(v21 + 40);
      v38 = __OFSUB__(v28, v29);
      v30 = v28 - v29;
      v31 = v38;
    }
    if ((v31 & 1) != 0)
      goto LABEL_113;
    v39 = v24 - 2;
    v45 = (uint64_t *)(v25 + 16 * (v24 - 2));
    v47 = *v45;
    v46 = v45[1];
    v48 = __OFSUB__(v46, v47);
    v49 = v46 - v47;
    v50 = v48;
    if (v48)
      goto LABEL_115;
    v51 = (uint64_t *)(v25 + 16 * v27);
    v53 = *v51;
    v52 = v51[1];
    v38 = __OFSUB__(v52, v53);
    v54 = v52 - v53;
    if (v38)
      goto LABEL_117;
    if (__OFADD__(v49, v54))
      goto LABEL_119;
    if (v49 + v54 >= v30)
    {
      v55 = v30 < v54;
LABEL_66:
      if (v55)
        v27 = v39;
      goto LABEL_68;
    }
LABEL_60:
    if ((v50 & 1) != 0)
      goto LABEL_116;
    v58 = (uint64_t *)(v25 + 16 * v27);
    v60 = *v58;
    v59 = v58[1];
    v38 = __OFSUB__(v59, v60);
    v61 = v59 - v60;
    if (v38)
      goto LABEL_118;
    if (v61 < v49)
      goto LABEL_77;
LABEL_68:
    v66 = v27 - 1;
    if (v27 - 1 >= v24)
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
    if (!v9)
      goto LABEL_134;
    v67 = (uint64_t *)(v25 + 16 * v66);
    v68 = *v67;
    v69 = (_QWORD *)(v25 + 16 * v27);
    v70 = v69[1];
    v71 = v95;
    sub_1AE5F5F2C((char *)(v9 + 1128 * *v67), (char *)(v9 + 1128 * *v69), v9 + 1128 * v70, v92);
    v95 = v71;
    if (v71)
      break;
    if (v70 < v68)
      goto LABEL_107;
    if (v27 > *(_QWORD *)(v93 + 16))
      goto LABEL_108;
    *v67 = v68;
    *(_QWORD *)(v25 + 16 * v66 + 8) = v70;
    v72 = *(_QWORD *)(v93 + 16);
    if (v27 >= v72)
      goto LABEL_109;
    v21 = v93;
    v24 = v72 - 1;
    memmove((void *)(v25 + 16 * v27), v69 + 2, 16 * (v72 - 1 - v27));
    *(_QWORD *)(v93 + 16) = v72 - 1;
    if (v72 <= 2)
      goto LABEL_77;
  }
LABEL_89:
  swift_bridgeObjectRelease();
  if (v91 < -1)
    goto LABEL_128;
  *(_QWORD *)(v90 + 16) = 0;
  swift_bridgeObjectRelease();
}

char *sub_1AE5F5E4C(char *result, char *a2, char *a3, uint64_t *a4)
{
  char *v4;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double *v10;
  _BYTE v11[1128];

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 1128 * (_QWORD)a3 - 1128;
    while (2)
    {
      v9 = v6;
      v10 = (double *)v8;
      do
      {
        if (v10[1] >= v10[142])
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        memcpy(v11, v10 + 141, sizeof(v11));
        memcpy(v10 + 141, v10, 0x468uLL);
        result = (char *)memcpy(v10, v11, 0x468uLL);
        v10 -= 141;
        ++v9;
      }
      while (v4 != v9);
      ++v4;
      v8 += 1128;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1AE5F5F2C(char *a1, char *a2, unint64_t a3, char *a4)
{
  double *v4;
  double *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  double *v14;
  char *v18;
  double *v19;
  double *v20;
  BOOL v21;
  BOOL v22;

  v4 = (double *)a4;
  v6 = (double *)a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 1128;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 1128;
  if (v9 >= v11)
  {
    sub_1AE520474(a2, (uint64_t)(a3 - (_QWORD)a2) / 1128, a4);
    v12 = (unint64_t)&v4[141 * v11];
    if (v7 >= (char *)v6 || v10 < 1128)
      goto LABEL_41;
    v18 = (char *)(a3 - 1128);
    while (1)
    {
      v19 = (double *)(v18 + 1128);
      if (*(v6 - 140) >= *(double *)(v12 - 1120))
      {
        v20 = (double *)(v12 - 1128);
        v22 = v19 != (double *)v12 || (unint64_t)v18 >= v12;
        v12 -= 1128;
        if (!v22)
          goto LABEL_37;
      }
      else
      {
        v20 = v6 - 141;
        v21 = v19 != v6 || v18 >= (char *)v6;
        v6 -= 141;
        if (!v21)
          goto LABEL_37;
      }
      memmove(v18, v20, 0x468uLL);
LABEL_37:
      v18 -= 1128;
      if (v6 <= (double *)v7 || v12 <= (unint64_t)v4)
        goto LABEL_41;
    }
  }
  sub_1AE520474(a1, (a2 - a1) / 1128, a4);
  v12 = (unint64_t)&v4[141 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 1128)
  {
    do
    {
      if (v4[1] >= v6[1])
      {
        v13 = v7 == (char *)v4;
        v14 = v4;
        v4 += 141;
        if (v13 && v7 < (char *)v4)
          goto LABEL_16;
      }
      else
      {
        v13 = v7 == (char *)v6;
        v14 = v6;
        v6 += 141;
        if (v13 && v7 < (char *)v6)
          goto LABEL_16;
      }
      memmove(v7, v14, 0x468uLL);
LABEL_16:
      v7 += 1128;
    }
    while ((unint64_t)v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = (double *)v7;
LABEL_41:
  sub_1AE520474((char *)v4, (uint64_t)(v12 - (_QWORD)v4) / 1128, (char *)v6);
  return 1;
}

uint64_t sub_1AE5F60CC()
{
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926A48();
  return 0;
}

void sub_1AE5F6160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE5FBC90();
  if (v0)
  {
    v2 = v1 + 32;
    do
    {
      v2 += 8;
      sub_1AE926EF8();
      --v0;
    }
    while (v0);
  }
  sub_1AE4F6624();
}

unint64_t sub_1AE5F6194()
{
  unint64_t result;

  result = qword_1EED9D280;
  if (!qword_1EED9D280)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9428BC, &type metadata for CandidateConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D280);
  }
  return result;
}

unint64_t sub_1AE5F61D0()
{
  unint64_t result;

  result = qword_1EED9D288;
  if (!qword_1EED9D288)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94286C, &type metadata for CandidateConstraint.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D288);
  }
  return result;
}

unint64_t sub_1AE5F620C()
{
  unint64_t result;

  result = qword_1EED9D290;
  if (!qword_1EED9D290)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for CandidateConstraint, &type metadata for CandidateConstraint);
    atomic_store(result, (unint64_t *)&qword_1EED9D290);
  }
  return result;
}

unint64_t sub_1AE5F6248()
{
  unint64_t result;

  result = qword_1EED9D298;
  if (!qword_1EED9D298)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94281C, &type metadata for CandidateConstraint.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D298);
  }
  return result;
}

unint64_t sub_1AE5F6284()
{
  unint64_t result;

  result = qword_1EED9D2A0;
  if (!qword_1EED9D2A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9427CC, &type metadata for CandidateConstraint.SubsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D2A0);
  }
  return result;
}

unint64_t sub_1AE5F62C0()
{
  unint64_t result;

  result = qword_1EED9D2B0;
  if (!qword_1EED9D2B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94277C, &type metadata for CandidateConstraint.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D2B0);
  }
  return result;
}

unint64_t sub_1AE5F62FC()
{
  unint64_t result;

  result = qword_1EED9D2B8;
  if (!qword_1EED9D2B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94272C, &type metadata for CandidateConstraint.HasPredicateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D2B8);
  }
  return result;
}

uint64_t sub_1AE5F6338()
{
  uint64_t v0;

  sub_1AE57420C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int16 *)(v0 + 48), *(_BYTE *)(v0 + 50));
  sub_1AE57420C(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(unsigned __int16 *)(v0 + 88), *(_BYTE *)(v0 + 90));
  return swift_deallocObject();
}

unint64_t sub_1AE5F637C()
{
  unint64_t result;

  result = qword_1EED9D2F0;
  if (!qword_1EED9D2F0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for CandidateConstraint, &type metadata for CandidateConstraint);
    atomic_store(result, (unint64_t *)&qword_1EED9D2F0);
  }
  return result;
}

unint64_t sub_1AE5F63B8()
{
  unint64_t result;

  result = qword_1EED9D308;
  if (!qword_1EED9D308)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9426DC, &type metadata for EntitySourceID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D308);
  }
  return result;
}

uint64_t sub_1AE5F63F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1AE926ED4();
  if (v3)
  {
    v5 = a2 + 56;
    do
    {
      swift_bridgeObjectRetain();
      sub_1AE925F14();
      sub_1AE926EF8();
      sub_1AE926EF8();
      result = swift_bridgeObjectRelease();
      v5 += 32;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1AE5F6484(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_1AE926ED4();
  if (v3)
  {
    v5 = a2 + 56;
    do
    {
      v5 += 40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1AE925F14();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease_n();
      --v3;
    }
    while (v3);
  }
  return result;
}

unint64_t sub_1AE5F6510()
{
  unint64_t result;

  result = qword_1EED9D320;
  if (!qword_1EED9D320)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94268C, &type metadata for EntityResolutionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D320);
  }
  return result;
}

unint64_t sub_1AE5F654C()
{
  unint64_t result;

  result = qword_1EED9D348;
  if (!qword_1EED9D348)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for Span, &type metadata for Span);
    atomic_store(result, (unint64_t *)&qword_1EED9D348);
  }
  return result;
}

unint64_t sub_1AE5F6588()
{
  unint64_t result;

  result = qword_1EED9D350;
  if (!qword_1EED9D350)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionMode, &type metadata for EntityResolutionMode);
    atomic_store(result, (unint64_t *)&qword_1EED9D350);
  }
  return result;
}

unint64_t sub_1AE5F65C4()
{
  unint64_t result;

  result = qword_1EED9D368;
  if (!qword_1EED9D368)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntitySourceID, &type metadata for EntitySourceID);
    atomic_store(result, (unint64_t *)&qword_1EED9D368);
  }
  return result;
}

unint64_t sub_1AE5F6600()
{
  unint64_t result;

  result = qword_1EED9D388;
  if (!qword_1EED9D388)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for Span, &type metadata for Span);
    atomic_store(result, (unint64_t *)&qword_1EED9D388);
  }
  return result;
}

unint64_t sub_1AE5F663C()
{
  unint64_t result;

  result = qword_1EED9D390;
  if (!qword_1EED9D390)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionMode, &type metadata for EntityResolutionMode);
    atomic_store(result, (unint64_t *)&qword_1EED9D390);
  }
  return result;
}

unint64_t sub_1AE5F6678()
{
  unint64_t result;

  result = qword_1EED9D3A0;
  if (!qword_1EED9D3A0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntitySourceID, &type metadata for EntitySourceID);
    atomic_store(result, (unint64_t *)&qword_1EED9D3A0);
  }
  return result;
}

uint64_t sub_1AE5F66B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE5E1ED4(v2, v3, v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE5F676C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE5741F8(v2, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1AE5F6824()
{
  unint64_t result;

  result = qword_1EED9D3B0;
  if (!qword_1EED9D3B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94263C, &unk_1E5DC7470);
    atomic_store(result, (unint64_t *)&qword_1EED9D3B0);
  }
  return result;
}

unint64_t sub_1AE5F6860()
{
  unint64_t result;

  result = qword_1EED9D3E0;
  if (!qword_1EED9D3E0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9425EC, &type metadata for Mention.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D3E0);
  }
  return result;
}

unint64_t sub_1AE5F689C()
{
  unint64_t result;

  result = qword_1EED9D3F8;
  if (!qword_1EED9D3F8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94259C, &type metadata for RerankedEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D3F8);
  }
  return result;
}

unint64_t sub_1AE5F68D8()
{
  unint64_t result;

  result = qword_1EED9D400;
  if (!qword_1EED9D400)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityFeatures, &type metadata for EntityFeatures);
    atomic_store(result, (unint64_t *)&qword_1EED9D400);
  }
  return result;
}

void sub_1AE5F6914(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  if (!*a1)
  {
    v5 = sub_1AE5FBEDC(0, a2);
    v6 = v3;
    atomic_store(MEMORY[0x1AF454B70](v2, v5, &v6), a1);
  }
  sub_1AE4FE870();
}

unint64_t sub_1AE5F6958()
{
  unint64_t result;

  result = qword_1EED9D428;
  if (!qword_1EED9D428)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94254C, &type metadata for RerankedEntitiesForMention.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D428);
  }
  return result;
}

unint64_t sub_1AE5F6994()
{
  unint64_t result;

  result = qword_1EED9D430;
  if (!qword_1EED9D430)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for Mention, &type metadata for Mention);
    atomic_store(result, (unint64_t *)&qword_1EED9D430);
  }
  return result;
}

unint64_t sub_1AE5F69D0()
{
  unint64_t result;

  result = qword_1EED9D448;
  if (!qword_1EED9D448)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RerankedEntity, &type metadata for RerankedEntity);
    atomic_store(result, (unint64_t *)&qword_1EED9D448);
  }
  return result;
}

unint64_t sub_1AE5F6A0C()
{
  unint64_t result;

  result = qword_1EED9D458;
  if (!qword_1EED9D458)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for Mention, &type metadata for Mention);
    atomic_store(result, (unint64_t *)&qword_1EED9D458);
  }
  return result;
}

unint64_t sub_1AE5F6A48()
{
  unint64_t result;

  result = qword_1EED9D468;
  if (!qword_1EED9D468)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RerankedEntity, &type metadata for RerankedEntity);
    atomic_store(result, (unint64_t *)&qword_1EED9D468);
  }
  return result;
}

unint64_t sub_1AE5F6A84()
{
  unint64_t result;

  result = qword_1EED9D478;
  if (!qword_1EED9D478)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9424FC, &type metadata for EntityResolutionSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D478);
  }
  return result;
}

unint64_t sub_1AE5F6AC0()
{
  unint64_t result;

  result = qword_1EED9D480;
  if (!qword_1EED9D480)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionRequest, &type metadata for EntityResolutionRequest);
    atomic_store(result, (unint64_t *)&qword_1EED9D480);
  }
  return result;
}

unint64_t sub_1AE5F6AFC()
{
  unint64_t result;

  result = qword_1EED9D488;
  if (!qword_1EED9D488)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionConfig, &type metadata for EntityResolutionConfig);
    atomic_store(result, (unint64_t *)&qword_1EED9D488);
  }
  return result;
}

unint64_t sub_1AE5F6B38()
{
  unint64_t result;

  result = qword_1EED9D4A0;
  if (!qword_1EED9D4A0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RerankedEntitiesForMention, &type metadata for RerankedEntitiesForMention);
    atomic_store(result, (unint64_t *)&qword_1EED9D4A0);
  }
  return result;
}

unint64_t sub_1AE5F6B74()
{
  unint64_t result;

  result = qword_1EED9D4C0;
  if (!qword_1EED9D4C0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionRequest, &type metadata for EntityResolutionRequest);
    atomic_store(result, (unint64_t *)&qword_1EED9D4C0);
  }
  return result;
}

unint64_t sub_1AE5F6BB0()
{
  unint64_t result;

  result = qword_1EED9D4D0;
  if (!qword_1EED9D4D0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RerankedEntitiesForMention, &type metadata for RerankedEntitiesForMention);
    atomic_store(result, (unint64_t *)&qword_1EED9D4D0);
  }
  return result;
}

uint64_t sub_1AE5F6BEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE5E1ED4(v2, v3, v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE5F6CE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
  v7 = *(_QWORD *)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE5741F8(v7, v2, v3, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1AE5F6DE0()
{
  unint64_t result;

  result = qword_1EED9D4E8;
  if (!qword_1EED9D4E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9424AC, &type metadata for MockRankerResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D4E8);
  }
  return result;
}

unint64_t sub_1AE5F6E1C()
{
  unint64_t result;

  result = qword_1EED9D4F0;
  if (!qword_1EED9D4F0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for MockLocationFeatures, &type metadata for MockLocationFeatures);
    atomic_store(result, (unint64_t *)&qword_1EED9D4F0);
  }
  return result;
}

unint64_t sub_1AE5F6E58()
{
  unint64_t result;

  result = qword_1EED9D500;
  if (!qword_1EED9D500)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for MockLocationFeatures, &type metadata for MockLocationFeatures);
    atomic_store(result, (unint64_t *)&qword_1EED9D500);
  }
  return result;
}

unint64_t sub_1AE5F6E94()
{
  unint64_t result;

  result = qword_1EED9D510;
  if (!qword_1EED9D510)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94245C, &type metadata for MockLocationFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D510);
  }
  return result;
}

uint64_t sub_1AE5F6ED0(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t sub_1AE5F6F10(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1AE5F6F58()
{
  unint64_t result;

  result = qword_1EED9D520;
  if (!qword_1EED9D520)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PreprocessingStep, &type metadata for PreprocessingStep);
    atomic_store(result, (unint64_t *)&qword_1EED9D520);
  }
  return result;
}

unint64_t sub_1AE5F6F98()
{
  unint64_t result;

  result = qword_1EED9D528;
  if (!qword_1EED9D528)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for CandidateConstraint, &type metadata for CandidateConstraint);
    atomic_store(result, (unint64_t *)&qword_1EED9D528);
  }
  return result;
}

unint64_t sub_1AE5F6FD8()
{
  unint64_t result;

  result = qword_1EED9D530;
  if (!qword_1EED9D530)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntitySourceID, &type metadata for EntitySourceID);
    atomic_store(result, (unint64_t *)&qword_1EED9D530);
  }
  return result;
}

unint64_t sub_1AE5F7018()
{
  unint64_t result;

  result = qword_1EED9D538;
  if (!qword_1EED9D538)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionRequest, &type metadata for EntityResolutionRequest);
    atomic_store(result, (unint64_t *)&qword_1EED9D538);
  }
  return result;
}

unint64_t sub_1AE5F7058()
{
  unint64_t result;

  result = qword_1EED9D540;
  if (!qword_1EED9D540)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for Span, &type metadata for Span);
    atomic_store(result, (unint64_t *)&qword_1EED9D540);
  }
  return result;
}

unint64_t sub_1AE5F7098()
{
  unint64_t result;

  result = qword_1EED9D548;
  if (!qword_1EED9D548)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for CandidateConfidenceMetric, &type metadata for CandidateConfidenceMetric);
    atomic_store(result, (unint64_t *)&qword_1EED9D548);
  }
  return result;
}

unint64_t sub_1AE5F70D8()
{
  unint64_t result;

  result = qword_1EED9D550;
  if (!qword_1EED9D550)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for NeighborSignal, &type metadata for NeighborSignal);
    atomic_store(result, (unint64_t *)&qword_1EED9D550);
  }
  return result;
}

unint64_t sub_1AE5F7118()
{
  unint64_t result;

  result = qword_1EED9D558;
  if (!qword_1EED9D558)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for NeighborSignal, &type metadata for NeighborSignal);
    atomic_store(result, (unint64_t *)&qword_1EED9D558);
  }
  return result;
}

unint64_t sub_1AE5F7158()
{
  unint64_t result;

  result = qword_1EED9D560;
  if (!qword_1EED9D560)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for NeighborSignal, &type metadata for NeighborSignal);
    atomic_store(result, (unint64_t *)&qword_1EED9D560);
  }
  return result;
}

uint64_t sub_1AE5F7198(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 8u && a3 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for EntityResolutionError(uint64_t a1)
{
  return sub_1AE5F71C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1AE5F71C4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 8u && a3 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

void _s20IntelligencePlatform21EntityResolutionErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1AE5F7198(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1AE4F6624();
}

uint64_t assignWithCopy for EntityResolutionError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1AE5F7198(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1AE5F71C4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for EntityResolutionError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1AE5F71C4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityResolutionError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xF7 && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 246;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 9)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityResolutionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 247;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF7)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AE5F733C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 8u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 9);
}

uint64_t sub_1AE5F7354(uint64_t result, unsigned int a2)
{
  if (a2 >= 9)
  {
    *(_QWORD *)result = a2 - 9;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 9;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void type metadata accessor for EntityResolutionError()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for PreprocessingStep(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1AE5F73C4 + 4 * byte_1AE940C3F[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1AE5F73F8 + 4 * byte_1AE940C3A[v4]))();
}

uint64_t sub_1AE5F73F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5F7400(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5F7408);
  return result;
}

uint64_t sub_1AE5F7414(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5F741CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1AE5F7420(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5F7428(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PreprocessingStep()
{
  sub_1AE4F67D4();
}

uint64_t destroy for CandidateConstraint(uint64_t a1)
{
  return sub_1AE57420C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int16 *)(a1 + 32), *(_BYTE *)(a1 + 34));
}

uint64_t initializeWithCopy for CandidateConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 34);
  v8 = *(unsigned __int16 *)(a2 + 32);
  sub_1AE574158(*(_QWORD *)a2, v4, v5, v6, v8, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 34) = v7;
  return a1;
}

uint64_t assignWithCopy for CandidateConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 34);
  v8 = *(unsigned __int16 *)(a2 + 32);
  sub_1AE574158(*(_QWORD *)a2, v4, v5, v6, v8, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v13 = *(unsigned __int16 *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v8;
  v14 = *(_BYTE *)(a1 + 34);
  *(_BYTE *)(a1 + 34) = v7;
  sub_1AE57420C(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 initializeWithTake for CandidateConstraint(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 31) = *(_DWORD *)(a2 + 31);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CandidateConstraint(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char v11;

  v3 = *(_WORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 34);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(unsigned __int16 *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 34);
  *(_BYTE *)(a1 + 34) = v4;
  sub_1AE57420C(v5, v7, v6, v8, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CandidateConstraint(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 35))
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 34);
      if (v3 <= 4)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CandidateConstraint(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 34) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 35) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 35) = 0;
    if (a2)
      *(_BYTE *)(result + 34) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AE5F7648(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 34);
}

uint64_t sub_1AE5F7650(uint64_t result, char a2)
{
  *(_BYTE *)(result + 34) = a2;
  return result;
}

void type metadata accessor for CandidateConstraint()
{
  sub_1AE4F67D4();
}

void type metadata accessor for EntitySourceID()
{
  sub_1AE4F67D4();
}

uint64_t destroy for EntityResolutionRequest(uint64_t a1)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 90) != 255)
  {
    v2 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
    sub_1AE57420C(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), v2, SBYTE2(v2));
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntityResolutionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_BYTE *)(a2 + 90);
  v8 = *(unsigned __int16 *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 255)
  {
    v9 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v9;
    *(_DWORD *)(a1 + 87) = *(_DWORD *)(a2 + 87);
  }
  else
  {
    v10 = v8 & 0xFF00FFFF | (v7 << 16);
    v11 = *(_QWORD *)(a2 + 56);
    v12 = *(_QWORD *)(a2 + 64);
    v13 = *(_QWORD *)(a2 + 72);
    v14 = *(_QWORD *)(a2 + 80);
    sub_1AE574158(v11, v12, v13, v14, v10, SBYTE2(v10));
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    *(_QWORD *)(a1 + 72) = v13;
    *(_QWORD *)(a1 + 80) = v14;
    *(_WORD *)(a1 + 88) = v10;
    *(_BYTE *)(a1 + 90) = BYTE2(v10);
  }
  v15 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v15;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EntityResolutionRequest(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  int v6;
  char v7;
  __int128 v8;
  __int128 v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v4 = (__int128 *)(a1 + 56);
  v5 = (__int128 *)(a2 + 56);
  v6 = *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16);
  v7 = *(_BYTE *)(a2 + 90);
  if (*(unsigned __int8 *)(a1 + 90) == 255)
  {
    if (*(unsigned __int8 *)(a2 + 90) == 255)
    {
      v8 = *v5;
      v9 = *(_OWORD *)(a2 + 72);
      *(_DWORD *)(a1 + 87) = *(_DWORD *)(a2 + 87);
      *v4 = v8;
      *(_OWORD *)(a1 + 72) = v9;
    }
    else
    {
      v12 = *(_QWORD *)(a2 + 56);
      v13 = *(_QWORD *)(a2 + 64);
      v14 = *(_QWORD *)(a2 + 72);
      v15 = *(_QWORD *)(a2 + 80);
      sub_1AE574158(v12, v13, v14, v15, *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16), v7);
      *(_QWORD *)(a1 + 56) = v12;
      *(_QWORD *)(a1 + 64) = v13;
      *(_QWORD *)(a1 + 72) = v14;
      *(_QWORD *)(a1 + 80) = v15;
      *(_WORD *)(a1 + 88) = v6;
      *(_BYTE *)(a1 + 90) = BYTE2(v6);
    }
  }
  else if (*(unsigned __int8 *)(a2 + 90) == 255)
  {
    sub_1AE5F79D8(a1 + 56);
    v10 = *(_DWORD *)(a2 + 87);
    v11 = *(_OWORD *)(a2 + 72);
    *v4 = *v5;
    *(_OWORD *)(a1 + 72) = v11;
    *(_DWORD *)(a1 + 87) = v10;
  }
  else
  {
    v16 = *(_QWORD *)(a2 + 56);
    v17 = *(_QWORD *)(a2 + 64);
    v18 = *(_QWORD *)(a2 + 72);
    v19 = *(_QWORD *)(a2 + 80);
    sub_1AE574158(v16, v17, v18, v19, *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16), v7);
    v20 = *(_QWORD *)(a1 + 56);
    v21 = *(_QWORD *)(a1 + 64);
    v22 = *(_QWORD *)(a1 + 72);
    v23 = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 56) = v16;
    *(_QWORD *)(a1 + 64) = v17;
    *(_QWORD *)(a1 + 72) = v18;
    *(_QWORD *)(a1 + 80) = v19;
    v24 = *(unsigned __int16 *)(a1 + 88);
    *(_WORD *)(a1 + 88) = v6;
    v25 = *(_BYTE *)(a1 + 90);
    *(_BYTE *)(a1 + 90) = BYTE2(v6);
    sub_1AE57420C(v20, v21, v22, v23, v24, v25);
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  return a1;
}

uint64_t sub_1AE5F79D8(uint64_t a1)
{
  destroy for CandidateConstraint(a1);
  return a1;
}

void *initializeWithTake for EntityResolutionRequest(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x7AuLL);
}

uint64_t assignWithTake for EntityResolutionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 90) != 255)
  {
    v6 = *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16);
    if (HIWORD(v6) <= 0xFEu)
    {
      v8 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
      v9 = *(_QWORD *)(a1 + 56);
      v10 = *(_QWORD *)(a1 + 64);
      v11 = *(_QWORD *)(a1 + 72);
      v12 = *(_QWORD *)(a1 + 80);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_WORD *)(a1 + 88) = v6;
      *(_BYTE *)(a1 + 90) = BYTE2(v6);
      sub_1AE57420C(v9, v10, v11, v12, v8, SBYTE2(v8));
      goto LABEL_6;
    }
    sub_1AE5F79D8(a1 + 56);
  }
  v7 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v7;
  *(_DWORD *)(a1 + 87) = *(_DWORD *)(a2 + 87);
LABEL_6:
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v13;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityResolutionRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 122))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityResolutionRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 120) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 122) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 122) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for EntityResolutionRequest()
{
  sub_1AE4F67D4();
}

uint64_t initializeWithCopy for Span(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Span(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for Span(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

void type metadata accessor for Span()
{
  sub_1AE4F67D4();
}

uint64_t destroy for Mention()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Mention(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Mention(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v4;
  return a1;
}

void *initializeWithTake for Mention(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

uint64_t assignWithTake for Mention(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for Mention(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 73))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Mention(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for Mention()
{
  sub_1AE4F67D4();
}

void type metadata accessor for CandidateConfidenceMetric()
{
  sub_1AE4F67D4();
}

uint64_t destroy for RetrievedCandidate(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RetrievedCandidate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v5;
    v6 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v7;
  }
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RetrievedCandidate(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = (_OWORD *)(a1 + 40);
  v5 = (_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AE5F8198(a1 + 40);
      v7 = *(_OWORD *)(a2 + 56);
      *v4 = *v5;
      *(_OWORD *)(a1 + 56) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 56);
    *v4 = *v5;
    *(_OWORD *)(a1 + 56) = v8;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t sub_1AE5F8198(uint64_t a1)
{
  destroy for EntitySourceID(a1, &type metadata for EntitySourceID);
  return a1;
}

void *initializeWithTake for RetrievedCandidate(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x61uLL);
}

uint64_t assignWithTake for RetrievedCandidate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 48))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 48);
  if (!v4)
  {
    sub_1AE5F8198(a1 + 40);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v6;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
LABEL_6:
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for RetrievedCandidate(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 97))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RetrievedCandidate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 97) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

void type metadata accessor for RetrievedCandidate()
{
  sub_1AE4F67D4();
}

uint64_t destroy for PopulatedCandidate(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 120);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PopulatedCandidate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v5;
    v6 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v7;
  }
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v9 = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    v10 = *(_QWORD *)(a2 + 128);
    v11 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 120) = v9;
    *(_QWORD *)(a1 + 128) = v10;
    v12 = *(_QWORD *)(a2 + 144);
    v13 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 136) = v11;
    *(_QWORD *)(a1 + 144) = v12;
    v14 = *(_QWORD *)(a2 + 160);
    v15 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 152) = v13;
    *(_QWORD *)(a1 + 160) = v14;
    v16 = *(_QWORD *)(a2 + 176);
    v17 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 168) = v15;
    *(_QWORD *)(a1 + 176) = v16;
    v18 = *(_QWORD *)(a2 + 192);
    v19 = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 184) = v17;
    *(_QWORD *)(a1 + 192) = v18;
    v20 = *(_QWORD *)(a2 + 208);
    v21 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 200) = v19;
    *(_QWORD *)(a1 + 208) = v20;
    v22 = *(_QWORD *)(a2 + 224);
    v23 = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 216) = v21;
    *(_QWORD *)(a1 + 224) = v22;
    v24 = *(_QWORD *)(a2 + 248);
    v27 = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 232) = v23;
    *(_QWORD *)(a1 + 240) = v27;
    v25 = *(_QWORD *)(a2 + 256);
    v28 = *(_QWORD *)(a2 + 264);
    *(_QWORD *)(a1 + 248) = v24;
    *(_QWORD *)(a1 + 256) = v25;
    *(_QWORD *)(a1 + 264) = v28;
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0xB8uLL);
  }
  *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
  *(_BYTE *)(a1 + 292) = *(_BYTE *)(a2 + 292);
  return a1;
}

uint64_t assignWithCopy for PopulatedCandidate(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  int v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = (_OWORD *)(a1 + 40);
  v5 = (_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AE5F8198(a1 + 40);
      v7 = *(_OWORD *)(a2 + 56);
      *v4 = *v5;
      *(_OWORD *)(a1 + 56) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 56);
    *v4 = *v5;
    *(_OWORD *)(a1 + 56) = v8;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v9 = *(_QWORD *)(a2 + 120);
  if (!*(_QWORD *)(a1 + 120))
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
LABEL_14:
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0xB8uLL);
    goto LABEL_15;
  }
  if (!v9)
  {
    sub_1AE5F89F0(a1 + 104);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
LABEL_15:
  v10 = *(_DWORD *)(a2 + 288);
  *(_BYTE *)(a1 + 292) = *(_BYTE *)(a2 + 292);
  *(_DWORD *)(a1 + 288) = v10;
  return a1;
}

uint64_t sub_1AE5F89F0(uint64_t a1)
{
  sub_1AE61A5A0();
  return a1;
}

void *initializeWithTake for PopulatedCandidate(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x125uLL);
}

uint64_t assignWithTake for PopulatedCandidate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (*(_QWORD *)(a1 + 48))
  {
    v4 = *(_QWORD *)(a2 + 48);
    if (v4)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v4;
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AE5F8198(a1 + 40);
  }
  v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v6;
LABEL_6:
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  if (!*(_QWORD *)(a1 + 120))
  {
LABEL_10:
    memcpy((void *)(a1 + 104), (const void *)(a2 + 104), 0xB8uLL);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(a2 + 120);
  if (!v8)
  {
    sub_1AE5F89F0(a1 + 104);
    goto LABEL_10;
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
LABEL_11:
  *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
  *(_BYTE *)(a1 + 292) = *(_BYTE *)(a2 + 292);
  return a1;
}

uint64_t getEnumTagSinglePayload for PopulatedCandidate(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 293))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PopulatedCandidate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 292) = 0;
    *(_DWORD *)(result + 288) = 0;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 293) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 293) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

void type metadata accessor for PopulatedCandidate()
{
  sub_1AE4F67D4();
}

uint64_t type metadata accessor for PopulatedCandidatesForMention()
{
  return objc_opt_self();
}

uint64_t method lookup function for PopulatedCandidatesForMention()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PopulatedCandidatesForMention.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t destroy for RerankedEntity(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 80))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RerankedEntity(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  if (v5)
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v5;
    v6 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v7;
  }
  v8 = *(_QWORD *)(a2 + 80);
  if (v8)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v8;
    v9 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v9;
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v10;
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  }
  memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x3C9uLL);
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  *(_BYTE *)(a1 + 1096) = *(_BYTE *)(a2 + 1096);
  *(_QWORD *)(a1 + 1104) = *(_QWORD *)(a2 + 1104);
  *(_BYTE *)(a1 + 1112) = *(_BYTE *)(a2 + 1112);
  *(_QWORD *)(a1 + 1120) = *(_QWORD *)(a2 + 1120);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RerankedEntity(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = (_OWORD *)(a1 + 40);
  v5 = (_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AE5F8198(a1 + 40);
      v7 = v5[1];
      *v4 = *v5;
      v4[1] = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 56);
    *v4 = *v5;
    *(_OWORD *)(a1 + 56) = v8;
  }
  v9 = (_OWORD *)(a1 + 72);
  v10 = (_OWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v11)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    }
    else
    {
      sub_1AE5F9090(a1 + 72);
      v12 = *(_BYTE *)(a2 + 104);
      v13 = *(_OWORD *)(a2 + 88);
      *v9 = *v10;
      *(_OWORD *)(a1 + 88) = v13;
      *(_BYTE *)(a1 + 104) = v12;
    }
  }
  else if (v11)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *v10;
    v15 = *(_OWORD *)(a2 + 88);
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    *v9 = v14;
    *(_OWORD *)(a1 + 88) = v15;
  }
  memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x3C9uLL);
  v16 = *(_QWORD *)(a2 + 1088);
  *(_BYTE *)(a1 + 1096) = *(_BYTE *)(a2 + 1096);
  *(_QWORD *)(a1 + 1088) = v16;
  *(_QWORD *)(a1 + 1104) = *(_QWORD *)(a2 + 1104);
  *(_BYTE *)(a1 + 1112) = *(_BYTE *)(a2 + 1112);
  *(_QWORD *)(a1 + 1120) = *(_QWORD *)(a2 + 1120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE5F9090(uint64_t a1)
{
  destroy for EntityClass();
  return a1;
}

void *initializeWithTake for RerankedEntity(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x468uLL);
}

uint64_t assignWithTake for RerankedEntity(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = (_OWORD *)(a1 + 40);
  v5 = (_OWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 48))
  {
    v6 = *(_QWORD *)(a2 + 48);
    if (v6)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AE5F8198((uint64_t)v4);
  }
  v8 = v5[1];
  *v4 = *v5;
  v4[1] = v8;
LABEL_6:
  if (!*(_QWORD *)(a1 + 80))
  {
LABEL_10:
    v11 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v11;
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a2 + 80);
  if (!v9)
  {
    sub_1AE5F9090(a1 + 72);
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
LABEL_11:
  memcpy((void *)(a1 + 112), (const void *)(a2 + 112), 0x3C9uLL);
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  *(_BYTE *)(a1 + 1096) = *(_BYTE *)(a2 + 1096);
  *(_QWORD *)(a1 + 1104) = *(_QWORD *)(a2 + 1104);
  *(_BYTE *)(a1 + 1112) = *(_BYTE *)(a2 + 1112);
  *(_QWORD *)(a1 + 1120) = *(_QWORD *)(a2 + 1120);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RerankedEntity(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 1128))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 48);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RerankedEntity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 1128) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 1128) = 0;
    if (a2)
      *(_QWORD *)(result + 48) = a2;
  }
  return result;
}

void type metadata accessor for RerankedEntity()
{
  sub_1AE4F67D4();
}

uint64_t destroy for RerankedEntitiesForMention()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RerankedEntitiesForMention(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RerankedEntitiesForMention(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for KnosisInternalFact(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for RerankedEntitiesForMention(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RerankedEntitiesForMention(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 80);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RerankedEntitiesForMention(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 80) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RerankedEntitiesForMention()
{
  sub_1AE4F67D4();
}

uint64_t destroy for EntityResolutionSession(uint64_t a1)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 90) != 255)
  {
    v2 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
    sub_1AE57420C(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), v2, SBYTE2(v2));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntityResolutionSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  int v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_BYTE *)(a2 + 90);
  v8 = *(unsigned __int16 *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 255)
  {
    v9 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v9;
    *(_DWORD *)(a1 + 87) = *(_DWORD *)(a2 + 87);
  }
  else
  {
    v10 = v8 & 0xFF00FFFF | (v7 << 16);
    v11 = *(_QWORD *)(a2 + 56);
    v12 = *(_QWORD *)(a2 + 64);
    v13 = *(_QWORD *)(a2 + 72);
    v14 = *(_QWORD *)(a2 + 80);
    sub_1AE574158(v11, v12, v13, v14, v10, SBYTE2(v10));
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    *(_QWORD *)(a1 + 72) = v13;
    *(_QWORD *)(a1 + 80) = v14;
    *(_WORD *)(a1 + 88) = v10;
    *(_BYTE *)(a1 + 90) = BYTE2(v10);
  }
  v16 = *(_QWORD *)(a2 + 128);
  v15 = a2 + 128;
  v17 = *(_QWORD *)(v15 - 24);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(v15 - 32);
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v15 - 16);
  *(_WORD *)(a1 + 120) = *(_WORD *)(v15 - 8);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(v15 + 8);
  *(_QWORD *)(a1 + 128) = v16;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(v15 + 16);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(v15 + 24);
  v18 = *(_QWORD *)(v15 + 32);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(v15 + 40);
  *(_QWORD *)(a1 + 160) = v18;
  v19 = *(_QWORD *)(v15 + 56);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(v15 + 48);
  *(_QWORD *)(a1 + 184) = v19;
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(v15 + 64);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(v15 + 72);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(v15 + 80);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(v15 + 88);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(v15 + 96);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(v15 + 104);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(v15 + 112);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(v15 + 136);
  v20 = *(_QWORD *)(v15 + 128);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(v15 + 120);
  *(_QWORD *)(a1 + 256) = v20;
  *(_DWORD *)(a1 + 265) = *(_DWORD *)(v15 + 137);
  v22 = *(_QWORD *)(v15 + 144);
  v21 = *(_QWORD *)(v15 + 152);
  *(_QWORD *)(a1 + 272) = v22;
  *(_QWORD *)(a1 + 280) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EntityResolutionSession(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  __int128 *v5;
  __int128 *v6;
  int v7;
  char v8;
  __int128 v9;
  __int128 v10;
  int v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = (_BYTE *)(a2 + 265);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = (__int128 *)(a1 + 56);
  v6 = (__int128 *)(a2 + 56);
  v7 = *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16);
  v8 = *(_BYTE *)(a2 + 90);
  if (*(unsigned __int8 *)(a1 + 90) == 255)
  {
    if (*(unsigned __int8 *)(a2 + 90) == 255)
    {
      v9 = *v6;
      v10 = *(_OWORD *)(a2 + 72);
      *(_DWORD *)(a1 + 87) = *(_DWORD *)(a2 + 87);
      *v5 = v9;
      *(_OWORD *)(a1 + 72) = v10;
    }
    else
    {
      v13 = *(_QWORD *)(a2 + 56);
      v14 = *(_QWORD *)(a2 + 64);
      v15 = *(_QWORD *)(a2 + 72);
      v16 = *(_QWORD *)(a2 + 80);
      sub_1AE574158(v13, v14, v15, v16, *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16), v8);
      *(_QWORD *)(a1 + 56) = v13;
      *(_QWORD *)(a1 + 64) = v14;
      *(_QWORD *)(a1 + 72) = v15;
      *(_QWORD *)(a1 + 80) = v16;
      *(_WORD *)(a1 + 88) = v7;
      *(_BYTE *)(a1 + 90) = BYTE2(v7);
    }
  }
  else if (*(unsigned __int8 *)(a2 + 90) == 255)
  {
    sub_1AE5F79D8(a1 + 56);
    v11 = *(_DWORD *)(a2 + 87);
    v12 = *(_OWORD *)(a2 + 72);
    *v5 = *v6;
    *(_OWORD *)(a1 + 72) = v12;
    *(_DWORD *)(a1 + 87) = v11;
  }
  else
  {
    v17 = *(_QWORD *)(a2 + 56);
    v18 = *(_QWORD *)(a2 + 64);
    v19 = *(_QWORD *)(a2 + 72);
    v20 = *(_QWORD *)(a2 + 80);
    sub_1AE574158(v17, v18, v19, v20, *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16), v8);
    v21 = *(_QWORD *)(a1 + 56);
    v22 = *(_QWORD *)(a1 + 64);
    v23 = *(_QWORD *)(a1 + 72);
    v24 = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 56) = v17;
    *(_QWORD *)(a1 + 64) = v18;
    *(_QWORD *)(a1 + 72) = v19;
    *(_QWORD *)(a1 + 80) = v20;
    v25 = *(unsigned __int16 *)(a1 + 88);
    *(_WORD *)(a1 + 88) = v7;
    v26 = *(_BYTE *)(a1 + 90);
    *(_BYTE *)(a1 + 90) = BYTE2(v7);
    sub_1AE57420C(v21, v22, v23, v24, v25, v26);
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  v27 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v27;
  v28 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = v28;
  v29 = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v29;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = v30;
  v31 = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = v31;
  v32 = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = v32;
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = v33;
  *(_BYTE *)(a1 + 265) = *v4;
  *(_BYTE *)(a1 + 266) = v4[1];
  *(_BYTE *)(a1 + 267) = *(_BYTE *)(a2 + 267);
  *(_BYTE *)(a1 + 268) = v4[3];
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for EntityResolutionSession(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t assignWithTake for EntityResolutionSession(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = (_BYTE *)(a2 + 265);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 90) != 255)
  {
    v7 = *(unsigned __int16 *)(a2 + 88) | (*(unsigned __int8 *)(a2 + 90) << 16);
    if (HIWORD(v7) <= 0xFEu)
    {
      v9 = *(unsigned __int16 *)(a1 + 88) | (*(unsigned __int8 *)(a1 + 90) << 16);
      v10 = *(_QWORD *)(a1 + 56);
      v11 = *(_QWORD *)(a1 + 64);
      v12 = *(_QWORD *)(a1 + 72);
      v13 = *(_QWORD *)(a1 + 80);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_WORD *)(a1 + 88) = v7;
      *(_BYTE *)(a1 + 90) = BYTE2(v7);
      sub_1AE57420C(v10, v11, v12, v13, v9, SBYTE2(v9));
      goto LABEL_6;
    }
    sub_1AE5F79D8(a1 + 56);
  }
  v8 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v8;
  *(_DWORD *)(a1 + 87) = *(_DWORD *)(a2 + 87);
LABEL_6:
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_BYTE *)(a1 + 265) = *v4;
  *(_BYTE *)(a1 + 266) = v4[1];
  *(_BYTE *)(a1 + 267) = *(_BYTE *)(a2 + 267);
  *(_BYTE *)(a1 + 268) = v4[3];
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityResolutionSession(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 288))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityResolutionSession(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 288) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 288) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for EntityResolutionSession()
{
  sub_1AE4F67D4();
}

uint64_t _s20IntelligencePlatform14EntitySourceIDVwxx_0()
{
  swift_bridgeObjectRelease();
  return sub_1AE4FFFD0();
}

void _s20IntelligencePlatform14EntitySourceIDVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  sub_1AE4F66CC();
  sub_1AE4F6664();
}

void _s20IntelligencePlatform14EntitySourceIDVwca_0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1AE5FC2B4();
  *v3 = *v2;
  v1[1] = v2[1];
  swift_bridgeObjectRetain();
  sub_1AE4F665C();
  v1[2] = *(_QWORD *)(v0 + 16);
  v1[3] = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1AE4F6648();
  sub_1AE4F6624();
}

void _s20IntelligencePlatform14EntitySourceIDVwta_0()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE5FC2B4();
  v3 = v2[1];
  *v1 = *v2;
  v1[1] = v3;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v0 + 24);
  v1[2] = *(_QWORD *)(v0 + 16);
  v1[3] = v4;
  swift_bridgeObjectRelease();
  sub_1AE4F6664();
}

void type metadata accessor for NeighborSignal()
{
  sub_1AE4F67D4();
}

uint64_t initializeWithCopy for MockRankerResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MockRankerResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for MockRankerResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

void type metadata accessor for MockRankerResult()
{
  sub_1AE4F67D4();
}

void type metadata accessor for MockLocationFeatures()
{
  sub_1AE4F67D4();
}

ValueMetadata *type metadata accessor for MockLocationFeatures.CodingKeys()
{
  return &type metadata for MockLocationFeatures.CodingKeys;
}

uint64_t _s20IntelligencePlatform14KnosisQueryArgOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1AE5FC17C(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1AE5FC17C((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1AE5FC17C((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1AE5FC17C((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return sub_1AE5FC17C(v8);
}

uint64_t _s20IntelligencePlatform20MockLocationFeaturesV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE5FA1D0 + 4 * byte_1AE940C49[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE5FA204 + 4 * byte_1AE940C44[v4]))();
}

uint64_t sub_1AE5FA208(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5FA210);
  return result;
}

uint64_t sub_1AE5FA218(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5FA220);
  return sub_1AE5FC14C();
}

ValueMetadata *type metadata accessor for MockRankerResult.CodingKeys()
{
  return &type metadata for MockRankerResult.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for EntityResolutionSession.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AE5FA28C + 4 * byte_1AE940C53[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AE5FA2C0 + 4 * byte_1AE940C4E[v4]))();
}

uint64_t sub_1AE5FA2C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5FA2C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5FA2D0);
  return result;
}

uint64_t sub_1AE5FA2DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5FA2E4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AE5FA2E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5FA2F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EntityResolutionSession.CodingKeys()
{
  return &type metadata for EntityResolutionSession.CodingKeys;
}

ValueMetadata *type metadata accessor for RerankedEntitiesForMention.CodingKeys()
{
  return &type metadata for RerankedEntitiesForMention.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RerankedEntity.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 11) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 12;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v5 = v6 - 12;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RerankedEntity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1AE5FA3F8 + 4 * byte_1AE940C5D[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1AE5FA42C + 4 * byte_1AE940C58[v4]))();
}

uint64_t sub_1AE5FA42C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5FA434(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5FA43CLL);
  return result;
}

uint64_t sub_1AE5FA448(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5FA450);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1AE5FA454(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5FA45C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RerankedEntity.CodingKeys()
{
  return &type metadata for RerankedEntity.CodingKeys;
}

ValueMetadata *type metadata accessor for Mention.CodingKeys()
{
  return &type metadata for Mention.CodingKeys;
}

void type metadata accessor for Span.CodingKeys()
{
  sub_1AE4F67D4();
}

uint64_t getEnumTagSinglePayload for EntityResolutionRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 9) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v5 = v6 - 10;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityResolutionRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1AE5FA568 + 4 * byte_1AE940C67[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1AE5FA59C + 4 * byte_1AE940C62[v4]))();
}

uint64_t sub_1AE5FA59C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5FA5A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5FA5ACLL);
  return result;
}

uint64_t sub_1AE5FA5B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5FA5C0);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1AE5FA5C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5FA5CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EntityResolutionRequest.CodingKeys()
{
  return &type metadata for EntityResolutionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for EntitySourceID.CodingKeys()
{
  return &type metadata for EntitySourceID.CodingKeys;
}

uint64_t _s6ClauseV13JoinConditionOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1AE5FC17C(-1);
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1AE5FC17C((*a1 | (v4 << 8)) - 5);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1AE5FC17C((*a1 | (v4 << 8)) - 5);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1AE5FC17C((*a1 | (v4 << 8)) - 5);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return sub_1AE5FC17C(v8);
}

uint64_t _s20IntelligencePlatform25CandidateConfidenceMetricOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AE5FA6C8 + 4 * byte_1AE940C71[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AE5FA6FC + 4 * byte_1AE940C6C[v4]))();
}

uint64_t sub_1AE5FA700(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5FA708);
  return result;
}

uint64_t sub_1AE5FA710(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5FA718);
  return sub_1AE5FC14C();
}

ValueMetadata *type metadata accessor for CandidateConstraint.CodingKeys()
{
  return &type metadata for CandidateConstraint.CodingKeys;
}

ValueMetadata *type metadata accessor for CandidateConstraint.HasPredicateCodingKeys()
{
  return &type metadata for CandidateConstraint.HasPredicateCodingKeys;
}

ValueMetadata *type metadata accessor for CandidateConstraint.ExcludeCodingKeys()
{
  return &type metadata for CandidateConstraint.ExcludeCodingKeys;
}

uint64_t _s20IntelligencePlatform19CandidateConstraintO22HasPredicateCodingKeysOwet_0(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return sub_1AE536584();
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s20IntelligencePlatform19CandidateConstraintO22HasPredicateCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE5FA7EC + 4 * byte_1AE940C76[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE5FA80C + 4 * byte_1AE940C7B[v4]))();
}

_BYTE *sub_1AE5FA7EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE5FA80C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE5FA814(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE5FA81C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE5FA824(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE5FA82C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CandidateConstraint.SubsetCodingKeys()
{
  return &type metadata for CandidateConstraint.SubsetCodingKeys;
}

ValueMetadata *type metadata accessor for CandidateConstraint.AndCodingKeys()
{
  return &type metadata for CandidateConstraint.AndCodingKeys;
}

uint64_t _s6ClauseV22AggregateLogicFunctionOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1AE5FC17C(-1);
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1AE5FC17C((*a1 | (v4 << 8)) - 2);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1AE5FC17C((*a1 | (v4 << 8)) - 2);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1AE5FC17C((*a1 | (v4 << 8)) - 2);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return sub_1AE5FC17C(v8);
}

uint64_t _s20IntelligencePlatform26RerankedEntitiesForMentionV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE5FA928 + 4 * byte_1AE940C85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE5FA95C + 4 * byte_1AE940C80[v4]))();
}

uint64_t sub_1AE5FA960(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5FA968);
  return result;
}

uint64_t sub_1AE5FA970(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5FA978);
  return sub_1AE5FC14C();
}

ValueMetadata *type metadata accessor for CandidateConstraint.OrCodingKeys()
{
  return &type metadata for CandidateConstraint.OrCodingKeys;
}

unint64_t sub_1AE5FA99C()
{
  unint64_t result;

  result = qword_1EED9D568;
  if (!qword_1EED9D568)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9419EC, &type metadata for CandidateConstraint.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D568);
  }
  return result;
}

unint64_t sub_1AE5FA9DC()
{
  unint64_t result;

  result = qword_1EED9D570;
  if (!qword_1EED9D570)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941AA4, &type metadata for CandidateConstraint.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D570);
  }
  return result;
}

unint64_t sub_1AE5FAA1C()
{
  unint64_t result;

  result = qword_1EED9D578;
  if (!qword_1EED9D578)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941B5C, &type metadata for CandidateConstraint.SubsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D578);
  }
  return result;
}

unint64_t sub_1AE5FAA5C()
{
  unint64_t result;

  result = qword_1EED9D580;
  if (!qword_1EED9D580)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941C14, &type metadata for CandidateConstraint.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D580);
  }
  return result;
}

unint64_t sub_1AE5FAA9C()
{
  unint64_t result;

  result = qword_1EED9D588;
  if (!qword_1EED9D588)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941CCC, &type metadata for CandidateConstraint.HasPredicateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D588);
  }
  return result;
}

unint64_t sub_1AE5FAADC()
{
  unint64_t result;

  result = qword_1EED9D590;
  if (!qword_1EED9D590)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941D84, &type metadata for CandidateConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D590);
  }
  return result;
}

unint64_t sub_1AE5FAB1C()
{
  unint64_t result;

  result = qword_1EED9D598;
  if (!qword_1EED9D598)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941E3C, &type metadata for EntitySourceID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D598);
  }
  return result;
}

unint64_t sub_1AE5FAB5C()
{
  unint64_t result;

  result = qword_1EED9D5A0;
  if (!qword_1EED9D5A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941EF4, &type metadata for EntityResolutionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D5A0);
  }
  return result;
}

unint64_t sub_1AE5FAB9C()
{
  unint64_t result;

  result = qword_1EED9D5A8;
  if (!qword_1EED9D5A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941FE4, &unk_1E5DC7470);
    atomic_store(result, (unint64_t *)&qword_1EED9D5A8);
  }
  return result;
}

unint64_t sub_1AE5FABDC()
{
  unint64_t result;

  result = qword_1EED9D5B0;
  if (!qword_1EED9D5B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94209C, &type metadata for Mention.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D5B0);
  }
  return result;
}

unint64_t sub_1AE5FAC1C()
{
  unint64_t result;

  result = qword_1EED9D5B8;
  if (!qword_1EED9D5B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE942154, &type metadata for RerankedEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D5B8);
  }
  return result;
}

unint64_t sub_1AE5FAC5C()
{
  unint64_t result;

  result = qword_1EED9D5C0;
  if (!qword_1EED9D5C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94220C, &type metadata for RerankedEntitiesForMention.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D5C0);
  }
  return result;
}

unint64_t sub_1AE5FAC9C()
{
  unint64_t result;

  result = qword_1EED9D5C8;
  if (!qword_1EED9D5C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9422C4, &type metadata for EntityResolutionSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D5C8);
  }
  return result;
}

unint64_t sub_1AE5FACDC()
{
  unint64_t result;

  result = qword_1EED9D5D0;
  if (!qword_1EED9D5D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94237C, &type metadata for MockRankerResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D5D0);
  }
  return result;
}

unint64_t sub_1AE5FAD1C()
{
  unint64_t result;

  result = qword_1EED9D5D8;
  if (!qword_1EED9D5D8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE942434, &type metadata for MockLocationFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D5D8);
  }
  return result;
}

unint64_t sub_1AE5FAD5C()
{
  unint64_t result;

  result = qword_1EED9D5E0;
  if (!qword_1EED9D5E0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9423A4, &type metadata for MockLocationFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D5E0);
  }
  return result;
}

unint64_t sub_1AE5FAD9C()
{
  unint64_t result;

  result = qword_1EED9D5E8;
  if (!qword_1EED9D5E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9423CC, &type metadata for MockLocationFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D5E8);
  }
  return result;
}

unint64_t sub_1AE5FADDC()
{
  unint64_t result;

  result = qword_1EED9D5F0;
  if (!qword_1EED9D5F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9422EC, &type metadata for MockRankerResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D5F0);
  }
  return result;
}

unint64_t sub_1AE5FAE1C()
{
  unint64_t result;

  result = qword_1EED9D5F8;
  if (!qword_1EED9D5F8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE942314, &type metadata for MockRankerResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D5F8);
  }
  return result;
}

unint64_t sub_1AE5FAE5C()
{
  unint64_t result;

  result = qword_1EED9D600;
  if (!qword_1EED9D600)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE942234, &type metadata for EntityResolutionSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D600);
  }
  return result;
}

unint64_t sub_1AE5FAE9C()
{
  unint64_t result;

  result = qword_1EED9D608;
  if (!qword_1EED9D608)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94225C, &type metadata for EntityResolutionSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D608);
  }
  return result;
}

unint64_t sub_1AE5FAEDC()
{
  unint64_t result;

  result = qword_1EED9D610;
  if (!qword_1EED9D610)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94217C, &type metadata for RerankedEntitiesForMention.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D610);
  }
  return result;
}

unint64_t sub_1AE5FAF1C()
{
  unint64_t result;

  result = qword_1EED9D618;
  if (!qword_1EED9D618)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9421A4, &type metadata for RerankedEntitiesForMention.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D618);
  }
  return result;
}

unint64_t sub_1AE5FAF5C()
{
  unint64_t result;

  result = qword_1EED9D620;
  if (!qword_1EED9D620)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9420C4, &type metadata for RerankedEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D620);
  }
  return result;
}

unint64_t sub_1AE5FAF9C()
{
  unint64_t result;

  result = qword_1EED9D628;
  if (!qword_1EED9D628)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9420EC, &type metadata for RerankedEntity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D628);
  }
  return result;
}

unint64_t sub_1AE5FAFDC()
{
  unint64_t result;

  result = qword_1EED9D630;
  if (!qword_1EED9D630)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94200C, &type metadata for Mention.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D630);
  }
  return result;
}

unint64_t sub_1AE5FB01C()
{
  unint64_t result;

  result = qword_1EED9D638;
  if (!qword_1EED9D638)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE942034, &type metadata for Mention.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D638);
  }
  return result;
}

unint64_t sub_1AE5FB05C()
{
  unint64_t result;

  result = qword_1EED9D640;
  if (!qword_1EED9D640)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941F1C, &unk_1E5DC7470);
    atomic_store(result, (unint64_t *)&qword_1EED9D640);
  }
  return result;
}

unint64_t sub_1AE5FB09C()
{
  unint64_t result;

  result = qword_1EED9D648;
  if (!qword_1EED9D648)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941F44, &unk_1E5DC7470);
    atomic_store(result, (unint64_t *)&qword_1EED9D648);
  }
  return result;
}

unint64_t sub_1AE5FB0DC()
{
  unint64_t result;

  result = qword_1EED9D650;
  if (!qword_1EED9D650)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941E64, &type metadata for EntityResolutionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D650);
  }
  return result;
}

unint64_t sub_1AE5FB11C()
{
  unint64_t result;

  result = qword_1EED9D658;
  if (!qword_1EED9D658)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941E8C, &type metadata for EntityResolutionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D658);
  }
  return result;
}

unint64_t sub_1AE5FB15C()
{
  unint64_t result;

  result = qword_1EED9D660;
  if (!qword_1EED9D660)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941DAC, &type metadata for EntitySourceID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D660);
  }
  return result;
}

unint64_t sub_1AE5FB19C()
{
  unint64_t result;

  result = qword_1EED9D668;
  if (!qword_1EED9D668)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941DD4, &type metadata for EntitySourceID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D668);
  }
  return result;
}

unint64_t sub_1AE5FB1DC()
{
  unint64_t result;

  result = qword_1EED9D670;
  if (!qword_1EED9D670)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941C3C, &type metadata for CandidateConstraint.HasPredicateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D670);
  }
  return result;
}

unint64_t sub_1AE5FB21C()
{
  unint64_t result;

  result = qword_1EED9D678;
  if (!qword_1EED9D678)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941C64, &type metadata for CandidateConstraint.HasPredicateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D678);
  }
  return result;
}

unint64_t sub_1AE5FB25C()
{
  unint64_t result;

  result = qword_1EED9D680;
  if (!qword_1EED9D680)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941B84, &type metadata for CandidateConstraint.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D680);
  }
  return result;
}

unint64_t sub_1AE5FB29C()
{
  unint64_t result;

  result = qword_1EED9D688;
  if (!qword_1EED9D688)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941BAC, &type metadata for CandidateConstraint.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D688);
  }
  return result;
}

unint64_t sub_1AE5FB2DC()
{
  unint64_t result;

  result = qword_1EED9D690;
  if (!qword_1EED9D690)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941ACC, &type metadata for CandidateConstraint.SubsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D690);
  }
  return result;
}

unint64_t sub_1AE5FB31C()
{
  unint64_t result;

  result = qword_1EED9D698;
  if (!qword_1EED9D698)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941AF4, &type metadata for CandidateConstraint.SubsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D698);
  }
  return result;
}

unint64_t sub_1AE5FB35C()
{
  unint64_t result;

  result = qword_1EED9D6A0;
  if (!qword_1EED9D6A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941A14, &type metadata for CandidateConstraint.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D6A0);
  }
  return result;
}

unint64_t sub_1AE5FB39C()
{
  unint64_t result;

  result = qword_1EED9D6A8;
  if (!qword_1EED9D6A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941A3C, &type metadata for CandidateConstraint.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D6A8);
  }
  return result;
}

unint64_t sub_1AE5FB3DC()
{
  unint64_t result;

  result = qword_1EED9D6B0;
  if (!qword_1EED9D6B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94195C, &type metadata for CandidateConstraint.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D6B0);
  }
  return result;
}

unint64_t sub_1AE5FB41C()
{
  unint64_t result;

  result = qword_1EED9D6B8;
  if (!qword_1EED9D6B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941984, &type metadata for CandidateConstraint.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D6B8);
  }
  return result;
}

unint64_t sub_1AE5FB45C()
{
  unint64_t result;

  result = qword_1EED9D6C0;
  if (!qword_1EED9D6C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941CF4, &type metadata for CandidateConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D6C0);
  }
  return result;
}

unint64_t sub_1AE5FB49C()
{
  unint64_t result;

  result = qword_1EED9D6C8;
  if (!qword_1EED9D6C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE941D1C, &type metadata for CandidateConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D6C8);
  }
  return result;
}

void sub_1AE5FB4D8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  void (*v3)(uint64_t);

  v0 = sub_1AE5FBF78();
  v1(v0);
  v2 = sub_1AE4F7714();
  v3(v2);
  sub_1AE4F6664();
}

void sub_1AE5FB50C(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  void (*v3)(uint64_t);

  a2(0);
  v2 = sub_1AE5FC1C8();
  v3(v2);
  sub_1AE4F6664();
}

unint64_t sub_1AE5FB540()
{
  unint64_t result;

  result = qword_1EED9D6D0;
  if (!qword_1EED9D6D0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for NeighborSignal, &type metadata for NeighborSignal);
    atomic_store(result, (unint64_t *)&qword_1EED9D6D0);
  }
  return result;
}

unint64_t sub_1AE5FB57C()
{
  unint64_t result;

  result = qword_1EED9D6D8;
  if (!qword_1EED9D6D8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for NeighborSignal, &type metadata for NeighborSignal);
    atomic_store(result, (unint64_t *)&qword_1EED9D6D8);
  }
  return result;
}

unint64_t sub_1AE5FB5B8()
{
  unint64_t result;

  result = qword_1EED9D6E0;
  if (!qword_1EED9D6E0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for NeighborSignal, &type metadata for NeighborSignal);
    atomic_store(result, (unint64_t *)&qword_1EED9D6E0);
  }
  return result;
}

unint64_t sub_1AE5FB5F4()
{
  unint64_t result;

  result = qword_1EED9D6E8;
  if (!qword_1EED9D6E8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for NeighborSignal, &type metadata for NeighborSignal);
    atomic_store(result, (unint64_t *)&qword_1EED9D6E8);
  }
  return result;
}

uint64_t sub_1AE5FB630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 16);
  result = sub_1AE5FBFC0();
  if (v4)
  {
    v6 = a2 + 56;
    do
    {
      result = KnosisInternalFact.hash(into:)(a1);
      v6 += 88;
      --v4;
    }
    while (v4);
  }
  return result;
}

void sub_1AE5FB6B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE5FBC90();
  if (v0)
  {
    v2 = v1 + 40;
    do
    {
      sub_1AE4F6730();
      sub_1AE5FBD68();
      sub_1AE4F81B8();
      v2 += 16;
      --v0;
    }
    while (v0);
  }
  sub_1AE4FCDD0();
}

void sub_1AE5FB6FC(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;
  uint64_t v6;

  if (!*a1)
  {
    v5 = sub_1AE5FBEDC(0, a2);
    v6 = v3();
    atomic_store(MEMORY[0x1AF454B70](v2, v5, &v6), a1);
  }
  sub_1AE4FE870();
}

unint64_t sub_1AE5FB748()
{
  unint64_t result;

  result = qword_1EED9D700;
  if (!qword_1EED9D700)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for MockRankerResult, &type metadata for MockRankerResult);
    atomic_store(result, (unint64_t *)&qword_1EED9D700);
  }
  return result;
}

uint64_t sub_1AE5FB7A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5FB7B0()
{
  return 0x6E6574614C776F6CLL;
}

uint64_t sub_1AE5FB824()
{
  return 0x6C61755168676968;
}

uint64_t sub_1AE5FB838()
{
  return 0x6465636E616C6162;
}

uint64_t sub_1AE5FB84C()
{
  uint64_t v0;

  sub_1AE5741F8(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112), *(unsigned int *)(v0 + 108));
  return swift_bridgeObjectRelease();
}

void sub_1AE5FB870(unint64_t *a1)
{
  uint64_t *v1;

  sub_1AE5FB6FC(a1, v1);
}

uint64_t sub_1AE5FB878()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE5FB890()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5FB89C()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5FB8A8()
{
  return sub_1AE926C70();
}

uint64_t sub_1AE5FB8BC()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5FB8E0()
{
  return sub_1AE926CA0();
}

uint64_t sub_1AE5FB8EC()
{
  return sub_1AE926B98();
}

uint64_t sub_1AE5FB900()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE5FB928(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  sub_1AE5E1ED4(a1, a2, v2, v4, v3);
  return sub_1AE574158(v7, v6, v2, v4, v3, v5);
}

uint64_t sub_1AE5FB980()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5FB988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = v1;
  *(_QWORD *)(v2 - 208) = v0;
  return result;
}

uint64_t sub_1AE5FB9B0()
{
  return sub_1AE925F74();
}

void sub_1AE5FB9E8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
}

uint64_t sub_1AE5FB9F4()
{
  return 0;
}

uint64_t sub_1AE5FBA30()
{
  return sub_1AE926EE0();
}

uint64_t sub_1AE5FBA38()
{
  return 0x646972627968;
}

uint64_t sub_1AE5FBA48()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5FBA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  uint64_t v5;

  return sub_1AE57420C(a1, a2, a3, a4, v5, v4);
}

uint64_t sub_1AE5FBA5C()
{
  uint64_t v0;

  return static CandidateConstraint.== infix(_:_:)(v0 - 128, v0 - 168);
}

uint64_t sub_1AE5FBA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned int a27)
{
  return sub_1AE57420C(a1, a2, a3, a4, a27, a11);
}

uint64_t sub_1AE5FBA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32)
{
  return sub_1AE57420C(a1, a2, a3, a4, a32, a27);
}

uint64_t sub_1AE5FBA80()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5FBA8C()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE5FBA98()
{
  return Double.toString(decimalPlaces:)(3)._countAndFlagsBits;
}

void *sub_1AE5FBAC8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x7AuLL);
}

uint64_t sub_1AE5FBAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;

  return sub_1AE57420C(a33, *(_QWORD *)(v33 - 176), *(_QWORD *)(v33 - 200), *(_QWORD *)(v33 - 192), *(unsigned int *)(v33 - 180), 4);
}

uint64_t sub_1AE5FBAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;

  return sub_1AE57420C(a33, *(_QWORD *)(v33 - 176), *(_QWORD *)(v33 - 200), *(_QWORD *)(v33 - 192), *(unsigned int *)(v33 - 180), 3);
}

uint64_t sub_1AE5FBB48()
{
  return sub_1AE926F34();
}

uint64_t sub_1AE5FBBB4()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5FBBEC()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE5FBC04()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5FBC10()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 136);
}

uint64_t sub_1AE5FBC2C()
{
  return swift_deallocUninitializedObject();
}

uint64_t sub_1AE5FBC38()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5FBC44()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5FBC4C()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(*(_QWORD *)(v0 - 72));
}

uint64_t sub_1AE5FBC54()
{
  return sub_1AE926B68();
}

void sub_1AE5FBC68(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1AE5FBC7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE5FBC90()
{
  return sub_1AE926ED4();
}

uint64_t sub_1AE5FBCA4()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5FBCB0()
{
  return sub_1AE92691C();
}

uint64_t sub_1AE5FBCC4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5FBCE0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5FBCFC()
{
  return sub_1AE926BB0();
}

uint64_t sub_1AE5FBD08()
{
  return sub_1AE926F4C();
}

uint64_t sub_1AE5FBD1C()
{
  uint64_t v0;

  return v0;
}

void sub_1AE5FBD38()
{
  sub_1AE52154C();
}

uint64_t sub_1AE5FBD44()
{
  uint64_t v0;

  return sub_1AE52F880(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1AE5FBD50()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5FBD5C()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE5FBD68()
{
  return sub_1AE925F14();
}

void sub_1AE5FBD74(unint64_t *a1)
{
  uint64_t *v1;

  sub_1AE5FB6FC(a1, v1);
}

uint64_t sub_1AE5FBD7C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 104) = a1;
  return v1 + 104;
}

unint64_t sub_1AE5FBD88(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  *(_BYTE *)(v1 - 128) = 0;
  return sub_1AE5F637C();
}

uint64_t sub_1AE5FBD98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE5FBDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  return sub_1AE57420C(a1, a2, a3, a4, a5, a33);
}

uint64_t sub_1AE5FBDB0()
{
  uint64_t v0;

  return sub_1AE5F676C(v0 + 888);
}

uint64_t sub_1AE5FBDB8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5FBDD0()
{
  return sub_1AE5DA9AC((uint64_t)&STACK[0x17A8], (uint64_t)&STACK[0x498]);
}

uint64_t sub_1AE5FBDF8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5FBE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  return sub_1AE57420C(a1, a2, a3, v4, v3, v5);
}

uint64_t sub_1AE5FBE2C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 144) + 8))(*(_QWORD *)(v0 - 208), *(_QWORD *)(v0 - 136));
}

uint64_t sub_1AE5FBE74()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5FBE8C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5FBEA4()
{
  return sub_1AE926BBC();
}

void sub_1AE5FBEB4(uint64_t a1)
{
  void (*v1)(_QWORD);

  sub_1AE5FB50C(a1, v1);
}

uint64_t sub_1AE5FBEBC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5FBECC()
{
  return sub_1AE926CC4();
}

void sub_1AE5FBED4()
{
  sub_1AE5FB4D8();
}

uint64_t sub_1AE5FBEDC(uint64_t a1, uint64_t *a2)
{
  return sub_1AE523CF0(a2);
}

_QWORD *sub_1AE5FBEEC(_QWORD *a1)
{
  uint64_t v1;

  return sub_1AE4F9858(a1, v1);
}

uint64_t sub_1AE5FBF04()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5FBF28()
{
  return sub_1AE926D18();
}

void sub_1AE5FBF60()
{
  JUMPOUT(0x1AF454C78);
}

uint64_t sub_1AE5FBF70()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5FBF78()
{
  return 0;
}

uint64_t sub_1AE5FBF88()
{
  return sub_1AE925F74();
}

void sub_1AE5FBF98()
{
  sub_1AE52154C();
}

uint64_t sub_1AE5FBFC0()
{
  return sub_1AE926ED4();
}

uint64_t sub_1AE5FBFC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 8))(v1, *(_QWORD *)(v0 + 88));
}

uint64_t sub_1AE5FBFD8()
{
  return swift_allocObject();
}

uint64_t sub_1AE5FBFE4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5FBFF8()
{
  uint64_t v0;

  return v0 - 128;
}

uint64_t sub_1AE5FC00C()
{
  uint64_t v0;

  return sub_1AE5DD3EC(v0 + 600);
}

uint64_t sub_1AE5FC028()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE5FC034()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(*(_QWORD *)(v0 + 8));
}

uint64_t sub_1AE5FC074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32)
{
  return sub_1AE574158(a1, a2, a3, a4, a32, a27);
}

uint64_t sub_1AE5FC094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1AE574158(a1, a2, a3, a4, v4, 0);
}

unint64_t sub_1AE5FC0D4(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  return sub_1AE5EFA90(a1, a2, v3, v2);
}

uint64_t sub_1AE5FC0E0()
{
  uint64_t v0;

  return v0 - 120;
}

void sub_1AE5FC100(unint64_t *a1)
{
  uint64_t *v1;

  sub_1AE5F6914(a1, v1);
}

uint64_t sub_1AE5FC108()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5FC11C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE5FC128(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5FC130(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5FC138()
{
  return 0x49746361746E6F63;
}

_BYTE *sub_1AE5FC14C@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  *result = a2;
  return result;
}

uint64_t sub_1AE5FC154(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5FC15C()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5FC17C@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_1AE5FC184()
{
  return sub_1AE925E90();
}

uint64_t sub_1AE5FC190()
{
  return sub_1AE925F74();
}

void sub_1AE5FC19C()
{
  STACK[0x408] = 0;
  STACK[0x410] = 0xE000000000000000;
}

unint64_t sub_1AE5FC1B0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 128) = 2;
  return sub_1AE5F6284();
}

uint64_t sub_1AE5FC1BC()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE5FC1C8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5FC1D4()
{
  return sub_1AE926C40();
}

void sub_1AE5FC1E0(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  sub_1AE5EFDC8(a1, a2, v2, v3);
}

uint64_t sub_1AE5FC200()
{
  return sub_1AE926C94();
}

uint64_t sub_1AE5FC20C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5FC220()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5FC234()
{
  return sub_1AE926ED4();
}

void sub_1AE5FC268(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1AE5F5580(a1, v2, v1);
}

void sub_1AE5FC274(__n128 a1)
{
  uint64_t v1;

  *(__n128 *)v1 = a1;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 57) = 0u;
}

unint64_t sub_1AE5FC288()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 128) = 1;
  return sub_1AE5F62C0();
}

void sub_1AE5FC2C0()
{
  CandidateConstraint.hash(into:)();
}

uint64_t sub_1AE5FC2CC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5FC2D8()
{
  return Double.toString(decimalPlaces:)(3)._countAndFlagsBits;
}

uint64_t sub_1AE5FC2E4()
{
  return Float.toString(decimalPlaces:)(3)._countAndFlagsBits;
}

uint64_t sub_1AE5FC314()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s20IntelligencePlatform14EntitySourceIDV_6sourceACSS_SSSgtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_1AE5FC328()
{
  return sub_1AE925F14();
}

void sub_1AE5FC330(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  sub_1AE5EFDC8(a1, a2, v3, v2);
}

uint64_t sub_1AE5FC33C()
{
  return sub_1AE926994();
}

__n128 EntityResolutionRankingService.TextResolutionOptions.init(typeFilter:candidateConstraints:mode:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  __n128 result;
  __int128 v5;
  __int16 v6;
  char v7;
  uint64_t v8;
  char v9;

  result = *(__n128 *)a2;
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a4 + 8) = *(_OWORD *)a2;
  v6 = *(_WORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 34);
  v8 = *a3;
  v9 = *((_BYTE *)a3 + 8);
  *(_QWORD *)a4 = a1;
  *(_OWORD *)(a4 + 24) = v5;
  *(_BYTE *)(a4 + 42) = v7;
  *(_WORD *)(a4 + 40) = v6;
  *(_QWORD *)(a4 + 48) = v8;
  *(_BYTE *)(a4 + 56) = v9;
  return result;
}

uint64_t EntityResolutionRankingService.TextResolutionOptions.typeFilter.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;

  result = sub_1AE4FECA4();
  *v1 = v0;
  return result;
}

uint64_t (*EntityResolutionRankingService.TextResolutionOptions.typeFilter.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EntityResolutionRankingService.TextResolutionOptions.candidateConstraints.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(unsigned __int8 *)(v1 + 42);
  v7 = *(unsigned __int16 *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 34) = v6;
  *(_WORD *)(a1 + 32) = v7;
  return sub_1AE5FC3D8(v2, v3, v4, v5, v7 | (v6 << 16));
}

uint64_t sub_1AE5FC3D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (BYTE2(a5) != 255)
    return sub_1AE5FC3EC(result, a2, a3, a4, a5, SBYTE2(a5));
  return result;
}

uint64_t sub_1AE5FC3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  switch(a6)
  {
    case 0:
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 1:
    case 2:
LABEL_4:
      result = swift_bridgeObjectRetain();
      break;
    case 3:
    case 4:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

__n128 EntityResolutionRankingService.TextResolutionOptions.candidateConstraints.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int16 v4;
  unsigned __int8 v5;
  uint64_t v6;
  int v7;
  __n128 result;
  __n128 v9;

  v9 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u16[0];
  v5 = a1[2].n128_u8[2];
  v7 = *(unsigned __int16 *)(v1 + 40);
  v6 = v1 + 40;
  sub_1AE5FC4B4(*(_QWORD *)(v6 - 32), *(_QWORD *)(v6 - 24), *(_QWORD *)(v6 - 16), *(_QWORD *)(v6 - 8), v7 | (*(unsigned __int8 *)(v6 + 2) << 16));
  result = v9;
  *(__n128 *)(v6 - 32) = v9;
  *(_QWORD *)(v6 - 16) = v2;
  *(_QWORD *)(v6 - 8) = v3;
  *(_BYTE *)(v6 + 2) = v5;
  *(_WORD *)v6 = v4;
  return result;
}

uint64_t sub_1AE5FC4B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (BYTE2(a5) != 255)
    return sub_1AE5FC4C8(result, a2, a3, a4, a5, SBYTE2(a5));
  return result;
}

uint64_t sub_1AE5FC4C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  switch(a6)
  {
    case 0:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 1:
    case 2:
LABEL_4:
      result = swift_bridgeObjectRelease();
      break;
    case 3:
    case 4:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t (*EntityResolutionRankingService.TextResolutionOptions.candidateConstraints.modify())(_QWORD)
{
  return nullsub_1;
}

void EntityResolutionRankingService.TextResolutionOptions.mode.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t EntityResolutionRankingService.TextResolutionOptions.mode.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 48) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 56) = v2;
  return result;
}

uint64_t (*EntityResolutionRankingService.TextResolutionOptions.mode.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EntityResolutionRankingService.resolveEntitiesInUnstructuredText(_:using:resolutionOptions:)()
{
  return swift_task_switch();
}

uint64_t sub_1AE5FC57C()
{
  return sub_1AE926AB4();
}

IntelligencePlatform::UnstructuredText __swiftcall UnstructuredText.init(text:)(IntelligencePlatform::UnstructuredText text)
{
  IntelligencePlatform::UnstructuredText *v1;

  *v1 = text;
  return text;
}

uint64_t UnstructuredText.text.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UnstructuredText.text.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*UnstructuredText.text.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t TextMention.init(span:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = 0;
  a3[1] = result;
  a3[2] = a2;
  return result;
}

uint64_t TextMention.entityTypes.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;

  result = sub_1AE4FECA4();
  *v1 = v0;
  return result;
}

uint64_t (*TextMention.entityTypes.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t TextMention.span.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t TextMention.span.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*TextMention.span.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t _s21TextResolutionOptionsVwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 42) != 255)
  {
    v3 = *(unsigned __int16 *)(a1 + 40) | (*(unsigned __int8 *)(a1 + 42) << 16);
    return sub_1AE5FC4C8(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), v3, SBYTE2(v3));
  }
  return result;
}

uint64_t _s21TextResolutionOptionsVwcp(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  unsigned __int8 v5;
  int v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a2 + 42);
  v6 = *(unsigned __int16 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    v7 = *(_OWORD *)(a2 + 24);
    *v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
    *(_DWORD *)(a1 + 39) = *(_DWORD *)(a2 + 39);
  }
  else
  {
    v8 = v6 & 0xFF00FFFF | (v5 << 16);
    v9 = *(_QWORD *)(a2 + 8);
    v10 = *(_QWORD *)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 32);
    sub_1AE5FC3EC(v9, v10, v11, v12, v8, SBYTE2(v8));
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    *(_QWORD *)(a1 + 32) = v12;
    *(_WORD *)(a1 + 40) = v8;
    *(_BYTE *)(a1 + 42) = BYTE2(v8);
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t _s21TextResolutionOptionsVwca(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  int v6;
  char v7;
  __int128 v8;
  __int128 v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 8);
  v5 = (__int128 *)(a2 + 8);
  v6 = *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16);
  v7 = *(_BYTE *)(a2 + 42);
  if (*(unsigned __int8 *)(a1 + 42) == 255)
  {
    if (*(unsigned __int8 *)(a2 + 42) == 255)
    {
      v8 = *v5;
      v9 = *(_OWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 39) = *(_DWORD *)(a2 + 39);
      *v4 = v8;
      *(_OWORD *)(a1 + 24) = v9;
    }
    else
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(_QWORD *)(a2 + 16);
      v14 = *(_QWORD *)(a2 + 24);
      v15 = *(_QWORD *)(a2 + 32);
      sub_1AE5FC3EC(v12, v13, v14, v15, *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16), v7);
      *(_QWORD *)(a1 + 8) = v12;
      *(_QWORD *)(a1 + 16) = v13;
      *(_QWORD *)(a1 + 24) = v14;
      *(_QWORD *)(a1 + 32) = v15;
      *(_WORD *)(a1 + 40) = v6;
      *(_BYTE *)(a1 + 42) = BYTE2(v6);
    }
  }
  else if (*(unsigned __int8 *)(a2 + 42) == 255)
  {
    sub_1AE5FC910(a1 + 8);
    v10 = *(_DWORD *)(a2 + 39);
    v11 = *(_OWORD *)(a2 + 24);
    *v4 = *v5;
    *(_OWORD *)(a1 + 24) = v11;
    *(_DWORD *)(a1 + 39) = v10;
  }
  else
  {
    v16 = *(_QWORD *)(a2 + 8);
    v17 = *(_QWORD *)(a2 + 16);
    v18 = *(_QWORD *)(a2 + 24);
    v19 = *(_QWORD *)(a2 + 32);
    sub_1AE5FC3EC(v16, v17, v18, v19, *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16), v7);
    v20 = *(_QWORD *)(a1 + 8);
    v21 = *(_QWORD *)(a1 + 16);
    v22 = *(_QWORD *)(a1 + 24);
    v23 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(a1 + 8) = v16;
    *(_QWORD *)(a1 + 16) = v17;
    *(_QWORD *)(a1 + 24) = v18;
    *(_QWORD *)(a1 + 32) = v19;
    v24 = *(unsigned __int16 *)(a1 + 40);
    *(_WORD *)(a1 + 40) = v6;
    v25 = *(_BYTE *)(a1 + 42);
    *(_BYTE *)(a1 + 42) = BYTE2(v6);
    sub_1AE5FC4C8(v20, v21, v22, v23, v24, v25);
  }
  v26 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v26;
  return a1;
}

uint64_t sub_1AE5FC910(uint64_t a1)
{
  destroy for EntityResolutionRankingService.CandidateConstraint(a1);
  return a1;
}

__n128 initializeWithTake for Subfact(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s21TextResolutionOptionsVwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 42) != 255)
  {
    v4 = *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16);
    if (HIWORD(v4) <= 0xFEu)
    {
      v6 = *(unsigned __int16 *)(a1 + 40) | (*(unsigned __int8 *)(a1 + 42) << 16);
      v7 = *(_QWORD *)(a1 + 8);
      v8 = *(_QWORD *)(a1 + 16);
      v9 = *(_QWORD *)(a1 + 24);
      v10 = *(_QWORD *)(a1 + 32);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_WORD *)(a1 + 40) = v4;
      *(_BYTE *)(a1 + 42) = BYTE2(v4);
      sub_1AE5FC4C8(v7, v8, v9, v10, v6, SBYTE2(v6));
      goto LABEL_6;
    }
    sub_1AE5FC910(a1 + 8);
  }
  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 39) = *(_DWORD *)(a2 + 39);
LABEL_6:
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t _s21TextResolutionOptionsVwet(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 57))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s21TextResolutionOptionsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void type metadata accessor for EntityResolutionRankingService.TextResolutionOptions()
{
  sub_1AE4F67D4();
}

void type metadata accessor for UnstructuredText()
{
  sub_1AE4F67D4();
}

uint64_t initializeBufferWithCopyOfBuffer for TextMention(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TextMention(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for TextMention(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextMention(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextMention(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void type metadata accessor for TextMention()
{
  sub_1AE4F67D4();
}

__n128 EntityResolutionRankingService.ImageResolutionOptions.init(typeFilter:candidateConstraints:mode:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  __n128 result;
  __int128 v5;
  __int16 v6;
  char v7;
  uint64_t v8;
  char v9;

  result = *(__n128 *)a2;
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a4 + 8) = *(_OWORD *)a2;
  v6 = *(_WORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 34);
  v8 = *a3;
  v9 = *((_BYTE *)a3 + 8);
  *(_QWORD *)a4 = a1;
  *(_OWORD *)(a4 + 24) = v5;
  *(_BYTE *)(a4 + 42) = v7;
  *(_WORD *)(a4 + 40) = v6;
  *(_QWORD *)(a4 + 48) = v8;
  *(_BYTE *)(a4 + 56) = v9;
  return result;
}

uint64_t EntityResolutionRankingService.ImageResolutionOptions.typeFilter.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EntityResolutionRankingService.ImageResolutionOptions.typeFilter.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*EntityResolutionRankingService.ImageResolutionOptions.typeFilter.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EntityResolutionRankingService.ImageResolutionOptions.candidateConstraints.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(unsigned __int8 *)(v1 + 42);
  v7 = *(unsigned __int16 *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 34) = v6;
  *(_WORD *)(a1 + 32) = v7;
  return sub_1AE5FC3D8(v2, v3, v4, v5, v7 | (v6 << 16));
}

__n128 EntityResolutionRankingService.ImageResolutionOptions.candidateConstraints.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int16 v4;
  unsigned __int8 v5;
  uint64_t v6;
  int v7;
  __n128 result;
  __n128 v9;

  v9 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u16[0];
  v5 = a1[2].n128_u8[2];
  v7 = *(unsigned __int16 *)(v1 + 40);
  v6 = v1 + 40;
  sub_1AE5FC4B4(*(_QWORD *)(v6 - 32), *(_QWORD *)(v6 - 24), *(_QWORD *)(v6 - 16), *(_QWORD *)(v6 - 8), v7 | (*(unsigned __int8 *)(v6 + 2) << 16));
  result = v9;
  *(__n128 *)(v6 - 32) = v9;
  *(_QWORD *)(v6 - 16) = v2;
  *(_QWORD *)(v6 - 8) = v3;
  *(_BYTE *)(v6 + 2) = v5;
  *(_WORD *)v6 = v4;
  return result;
}

uint64_t (*EntityResolutionRankingService.ImageResolutionOptions.candidateConstraints.modify())(_QWORD)
{
  return nullsub_1;
}

void EntityResolutionRankingService.ImageResolutionOptions.mode.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t EntityResolutionRankingService.ImageResolutionOptions.mode.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 48) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 56) = v2;
  return result;
}

uint64_t (*EntityResolutionRankingService.ImageResolutionOptions.mode.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EntityResolutionRankingService.resolveEntitiesInUnstructuredImage(_:using:resolutionOptions:)()
{
  return swift_task_switch();
}

uint64_t sub_1AE5FCDDC()
{
  return sub_1AE926AB4();
}

uint64_t UnstructuredImage.init(image:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AE5FCE40(a1, a2);
}

uint64_t sub_1AE5FCE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnstructuredImage.Asset(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for UnstructuredImage.Asset(uint64_t a1)
{
  return sub_1AE536C28(a1, qword_1EED9D730);
}

uint64_t UnstructuredImage.image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AE5FCEA4(v1, a1);
}

uint64_t sub_1AE5FCEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnstructuredImage.Asset(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

IntelligencePlatform::ImageMention __swiftcall ImageMention.init(observation:)(IntelligencePlatform::ImageMention observation)
{
  IntelligencePlatform::ImageMention *v1;

  v1->observation.super.isa = observation.observation.super.isa;
  return observation;
}

id ImageMention.observation.getter()
{
  id *v0;

  return *v0;
}

void ImageMention.observation.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*ImageMention.observation.modify())(_QWORD)
{
  return nullsub_1;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.ImageResolutionOptions()
{
  return &type metadata for EntityResolutionRankingService.ImageResolutionOptions;
}

char *initializeBufferWithCopyOfBuffer for UnstructuredImage(char *a1, char **a2)
{
  int v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;

  v4 = *(_DWORD *)(*(_QWORD *)(type metadata accessor for UnstructuredImage.Asset(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v7 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v7[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = sub_1AE924918();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v6 = sub_1AE924780();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      v9 = *a2;
      *(_QWORD *)a1 = *a2;
      v10 = v9;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for UnstructuredImage(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  type metadata accessor for UnstructuredImage.Asset(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v3 = sub_1AE924918();
LABEL_7:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      return;
    case 1:
      v3 = sub_1AE924780();
      goto LABEL_7;
    case 0:

      break;
  }
}

void **initializeWithCopy for UnstructuredImage(void **a1, void **a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  type metadata accessor for UnstructuredImage.Asset(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v6 = sub_1AE924918();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_1AE924780();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  }
  else
  {
    v7 = *a2;
    *a1 = *a2;
    v8 = v7;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for UnstructuredImage(void **a1, void **a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  if (a1 != a2)
  {
    sub_1AE5FD270((uint64_t)a1);
    type metadata accessor for UnstructuredImage.Asset(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v6 = sub_1AE924918();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_1AE924780();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      v7 = *a2;
      *a1 = *a2;
      v8 = v7;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1AE5FD270(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnstructuredImage.Asset(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for UnstructuredImage(void *a1, const void *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for UnstructuredImage.Asset(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v7 = sub_1AE924918();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      return a1;
    }
    v6 = sub_1AE924780();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for UnstructuredImage(void *a1, const void *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1AE5FD270((uint64_t)a1);
    v4 = type metadata accessor for UnstructuredImage.Asset(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v7 = sub_1AE924918();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        return a1;
      }
      v6 = sub_1AE924780();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for UnstructuredImage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE5FD460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1AE4FFFE0();
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for UnstructuredImage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE5FD494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1AE4FFFE0();
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, v0, v0, v2);
}

uint64_t type metadata accessor for UnstructuredImage(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1EED9D720);
}

uint64_t sub_1AE5FD4D4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnstructuredImage.Asset(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for UnstructuredImage.Asset(char *a1, char **a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v9 = sub_1AE924918();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_1AE924780();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      v10 = *a2;
      *(_QWORD *)a1 = *a2;
      v11 = v10;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for UnstructuredImage.Asset(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v3 = sub_1AE924918();
LABEL_7:
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      return;
    case 1:
      v3 = sub_1AE924780();
      goto LABEL_7;
    case 0:

      break;
  }
}

void **initializeWithCopy for UnstructuredImage.Asset(void **a1, void **a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v6 = sub_1AE924918();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_1AE924780();
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  }
  else
  {
    v7 = *a2;
    *a1 = *a2;
    v8 = v7;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for UnstructuredImage.Asset(void **a1, void **a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  if (a1 != a2)
  {
    sub_1AE5FD270((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v6 = sub_1AE924918();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = sub_1AE924780();
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      v7 = *a2;
      *a1 = *a2;
      v8 = v7;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for UnstructuredImage.Asset(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = sub_1AE924918();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = sub_1AE924780();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for UnstructuredImage.Asset(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1AE5FD270((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v8 = sub_1AE924918();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = sub_1AE924780();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1AE5FD9E8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1AE5FD9F8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1AE924780();
  if (v1 <= 0x3F)
  {
    result = sub_1AE924918();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageMention()
{
  return &type metadata for ImageMention;
}

_QWORD *sub_1AE5FDA98(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  char v26;
  id v27;
  _QWORD *v28;

  v5 = v4;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v6)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
  v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v7 = &v28;
  sub_1AE9269DC();
  v10 = (uint64_t *)(a1 + 32);
  while (1)
  {
    v12 = *v10++;
    v11 = v12;
    v25 = v12;
    LOBYTE(v27) = a4;
    v13 = sub_1AE5CCD08(&v25);
    if (!v5)
    {
      v19 = v16;
      v20 = v13;
      v21 = v14;
      v22 = v15;
      type metadata accessor for EntityResolutionRankingService.RankedEntities.ScoredEntity();
      v23 = (_QWORD *)swift_allocObject();
      v23[2] = v11;
      v23[3] = v19;
      v23[4] = v20;
      v23[5] = v21;
      v23[6] = v22;
      v23[7] = 1;
      goto LABEL_8;
    }
    v27 = v5;
    v17 = v5;
    sub_1AE501548((uint64_t *)&unk_1ED319C60);
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_12;
    if (v26 != 1)
      break;
    sub_1AE544754();

    type metadata accessor for EntityResolutionRankingService.RankedEntities.ScoredEntity();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 56) = 1;
    *(_QWORD *)(v18 + 16) = v11;
    *(_OWORD *)(v18 + 24) = 0u;
    *(_OWORD *)(v18 + 40) = 0u;

    v5 = 0;
LABEL_8:
    sub_1AE9269B8();
    sub_1AE9269E8();
    sub_1AE9269F4();
    v7 = &v28;
    sub_1AE9269C4();
    if (!--v6)
    {
      v7 = v28;
      goto LABEL_10;
    }
  }
  sub_1AE544754();
LABEL_12:

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1AE5FDC8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1AE9269DC();
    type metadata accessor for EntityResolutionRankingService.RankedEntities.ScoredEntity();
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      v4 += 2;
      v7 = (_QWORD *)swift_allocObject();
      v7[2] = v5;
      v7[3] = v6;
      v7[6] = 0;
      v7[7] = 1;
      v7[4] = 0;
      v7[5] = 0;
      sub_1AE9269B8();
      sub_1AE9269E8();
      sub_1AE9269F4();
      sub_1AE9269C4();
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

__n128 EntityResolutionRankingService.RankingOptions.init(rankingType:typeFilter:candidateConstraints:mode:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  __n128 result;
  __int128 v6;
  uint64_t v7;
  char v8;
  __int16 v9;
  char v10;
  uint64_t v11;
  char v12;

  result = *(__n128 *)a3;
  v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a5 + 8) = *(_OWORD *)a3;
  v7 = *a1;
  v8 = *((_BYTE *)a1 + 8);
  v9 = *(_WORD *)(a3 + 32);
  v10 = *(_BYTE *)(a3 + 34);
  v11 = *a4;
  v12 = *((_BYTE *)a4 + 8);
  *(_QWORD *)a5 = a2;
  *(_OWORD *)(a5 + 24) = v6;
  *(_BYTE *)(a5 + 42) = v10;
  *(_WORD *)(a5 + 40) = v9;
  *(_QWORD *)(a5 + 48) = v7;
  *(_BYTE *)(a5 + 56) = v8;
  *(_QWORD *)(a5 + 64) = v11;
  *(_BYTE *)(a5 + 72) = v12;
  return result;
}

uint64_t sub_1AE5FDDB0(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1AE88D374(v2);
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1AE603BEC(v6);
  return sub_1AE9269C4();
}

uint64_t sub_1AE5FDE28@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (result < 0 || 1 << *(_BYTE *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v4 = *(_QWORD *)(a3 + 48) + 40 * result;
    v6 = *(_QWORD *)v4;
    v5 = *(_QWORD *)(v4 + 8);
    v7 = *(_QWORD *)(v4 + 16);
    v8 = *(_QWORD *)(v4 + 24);
    LOBYTE(v4) = *(_BYTE *)(v4 + 32);
    *(_QWORD *)a4 = v6;
    *(_QWORD *)(a4 + 8) = v5;
    *(_QWORD *)(a4 + 16) = v7;
    *(_QWORD *)(a4 + 24) = v8;
    *(_BYTE *)(a4 + 32) = v4;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1AE5FDEB4@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  if (result < 0 || 1 << *(_BYTE *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    *a4 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * result);
    return result;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t EntityResolutionRankingService.RankedEntities.ScoredEntity.__allocating_init(id:score:explanation:inferenceEventId:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t result;

  result = sub_1AE4F66BC();
  *(_QWORD *)(result + 16) = *a1;
  *(double *)(result + 24) = a5;
  *(_QWORD *)(result + 32) = a2;
  *(_QWORD *)(result + 40) = a3;
  *(_QWORD *)(result + 48) = a4;
  *(_QWORD *)(result + 56) = 1;
  return result;
}

uint64_t sub_1AE5FDF74(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void (*v40)(id, uint64_t, uint64_t);
  id v41[2];

  v41[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = v1;
    v37 = OBJC_IVAR___GDSwiftViewService_databaseCache;
    v39 = *(id *)(v38 + OBJC_IVAR___GDSwiftViewService_accessRequester);
    v4 = v2 - 1;
    v33 = swift_bridgeObjectRetain();
    v5 = (uint64_t *)(v33 + 40);
    *(_QWORD *)&v6 = 136315138;
    v35 = v6;
    v34 = MEMORY[0x1E0DEE9B8] + 8;
    while (1)
    {
      v7 = *(v5 - 1);
      v8 = *v5;
      swift_bridgeObjectRetain();
      v9 = (void *)sub_1AE925E18();
      v41[0] = 0;
      v10 = objc_msgSend(v39, sel_requestAssertionForViewName_error_, v9, v41);

      v11 = v41[0];
      if (v10)
      {
        v12 = v8;
        v13 = *(_QWORD **)(v38 + v37);
        v15 = v13[5];
        v14 = v13[6];
        sub_1AE4F9858(v13 + 2, v15);
        v40 = *(void (**)(id, uint64_t, uint64_t))(v14 + 8);
        v16 = v11;
        v40(v10, v15, v14);
        v17 = v3;
        if (!v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (uint64_t)v10;
        }
        swift_unknownObjectRelease();
        v3 = 0;
        v8 = v12;
      }
      else
      {
        v18 = v41[0];
        v17 = (void *)sub_1AE9246B4();

        swift_willThrow();
        v3 = 0;
      }
      if (qword_1ED31BCB0 != -1)
        swift_once();
      v19 = sub_1AE925B6C();
      sub_1AE4FB608(v19, (uint64_t)qword_1ED31BC90);
      swift_bridgeObjectRetain();
      v20 = sub_1AE925B54();
      v21 = sub_1AE9265EC();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        v23 = (void *)swift_slowAlloc();
        v41[0] = v23;
        *(_DWORD *)v22 = v35;
        swift_bridgeObjectRetain();
        sub_1AE520ED4(v7, v8, (uint64_t)v41, v24, v25, v26, v27, v28, v31, v32, v33, v34, v35, *((uint64_t *)&v35 + 1), v36, v37, v38, (uint64_t)v39, (uint64_t)v40,
          v7);
        *(_QWORD *)(v22 + 4) = v29;
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AE4F2000, v20, v21, "EntityResolutionRanking: view assertion failure for %s", (uint8_t *)v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF454C78](v23, -1, -1);
        MEMORY[0x1AF454C78](v22, -1, -1);

        if (!v4)
          goto LABEL_14;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        if (!v4)
        {
LABEL_14:
          swift_bridgeObjectRelease();
          return swift_willThrow();
        }
      }
      v5 += 2;

      --v4;
    }
  }
  result = sub_1AE926AB4();
  __break(1u);
  return result;
}

void sub_1AE5FE2E8()
{
  qword_1ED3193A0 = (uint64_t)&unk_1E5DAD100;
}

void EntityResolutionRankingService.__allocating_init(config:viewService:)(uint64_t a1, void *a2)
{
  uint64_t v3;

  v3 = sub_1AE4F66BC();
  EntityResolutionRankingService.init(config:viewService:)(v3, a2);
  sub_1AE4FC4F8();
}

uint64_t sub_1AE5FE340()
{
  return sub_1AE4FECB0();
}

uint64_t sub_1AE5FE34C()
{
  sub_1AE608084();
  return sub_1AE926AB4();
}

uint64_t sub_1AE5FE3A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  NSObject *v3;
  NSObject *v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t *v16;
  uint8_t *v17;
  uint8_t *v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  uint64_t isa;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;

  v5 = v4;
  v6 = v3;
  v7 = a1;
  v9 = *(_QWORD *)a2;
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(unsigned __int8 *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a2 + 42) != 255)
  {
    v33 = *(_QWORD *)(a2 + 64);
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v14 = sub_1AE925B6C();
    sub_1AE4FB608(v14, (uint64_t)qword_1ED31BC90);
    v3 = sub_1AE925B54();
    v15 = sub_1AE9265EC();
    if (os_log_type_enabled(v3, v15))
    {
      v16 = a3;
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      v18 = v17;
      a3 = v16;
      v5 = v4;
      MEMORY[0x1AF454C78](v18, -1, -1);
    }

    v12 = v33;
    v7 = a1;
  }
  if (v11)
  {
    if (v11 == 1)
    {
      if (*(_QWORD *)(v10 + 16) != 1)
        goto LABEL_40;
      v19 = sub_1AE6043B8(v10);
      if ((v21 & 1) != 0)
      {
        __break(1u);
        goto LABEL_40;
      }
      if (*(_DWORD *)(v10 + 36) == v20)
      {
        if (v19 != 1 << *(_BYTE *)(v10 + 32))
        {
          sub_1AE5FDEB4(v19, v20, v10, &v35);
          if (v6[5].isa)
          {
            result = sub_1AE850F00(MEMORY[0x1E0DEE9E8], &v35);
            if (!v5)
            {
              v23 = a3;
              v24 = sub_1AE5FDC8C(result);
              result = sub_1AE6080B8();
              *v23 = v24;
              v23[1] = 0;
            }
            return result;
          }
          sub_1AE608084();
          goto LABEL_42;
        }
LABEL_40:
        sub_1AE608084();
LABEL_42:
        sub_1AE608078();
        __break(1u);
LABEL_43:
        result = swift_release();
        __break(1u);
        return result;
      }
      __break(1u);
      goto LABEL_38;
    }
    if (!v10)
    {
      if (v13)
        v29 = 0;
      else
        v29 = v12;
      LOBYTE(v35) = 1;
      v30 = v9;
      v31 = v13;
      goto LABEL_34;
    }
    v25 = 2;
  }
  else
  {
    v25 = v10 & 1;
  }
  isa = (uint64_t)v6[3].isa;
  v27 = (uint64_t)v6[4].isa;
  if (v7)
  {
    sub_1AE4F66CC();
    swift_bridgeObjectRetain();
    result = (uint64_t)sub_1AE5FDA98(v7, isa, v27, v25);
    v3 = v5;
    if (v5)
      return result;
    if ((result & 0x8000000000000000) == 0 && (result & 0x4000000000000000) == 0)
    {
      v28 = result & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      goto LABEL_24;
    }
LABEL_38:
    swift_bridgeObjectRetain();
    sub_1AE58FC18();
    v28 = v32;
    swift_bridgeObjectRelease();
LABEL_24:
    v35 = v28;
    sub_1AE5FDDB0(&v35);
    if (!v3)
    {
      result = sub_1AE6080B8();
      *a3 = v35;
      a3[1] = 0;
      return result;
    }
    goto LABEL_43;
  }
  if (v13)
    v29 = 0;
  else
    v29 = v12;
  LOBYTE(v35) = v25;
  v30 = v9;
  v31 = v13;
LABEL_34:
  result = sub_1AE5CD000(v30, v29, v31, &v35);
  if (!v5)
  {
    *a3 = result;
    a3[1] = 0;
  }
  return result;
}

char *sub_1AE5FE738(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v2 + 48);
  if (v3)
  {
    v4 = *a2;
    v7 = *a1;
    v6 = v4;
    return sub_1AE851A6C((char *)&v7, &v6, v3);
  }
  else
  {
    sub_1AE608084();
    result = (char *)sub_1AE608078();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE5FE7B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE5FE7C4()
{
  uint64_t v0;

  sub_1AE552FD8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AE5FE81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE5FE834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16))
  {
    type metadata accessor for EntityResolutionRankingDirectFeedback();
    swift_bridgeObjectRetain();
    v1 = MEMORY[0x1E0DEE9D8];
    do
    {
      v2 = sub_1AE4F6A38();
      if ((sub_1AE5086B4(v2) & 1) == 0)
      {
        sub_1AE4FBAE8();
        v1 = v5;
      }
      sub_1AE607E08();
      if (v3)
      {
        sub_1AE4FDC30();
        v1 = v6;
      }
      sub_1AE607D2C();
    }
    while (!v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
  {
    sub_1AE6080B0();
    sub_1AE4F66C4();
    do
    {
      v7 = sub_1AE4F6A38();
      if ((sub_1AE5086B4(v7) & 1) == 0)
      {
        sub_1AE4FBAE8();
        v1 = v8;
      }
      sub_1AE607E08();
      if (v3)
      {
        sub_1AE4FDC30();
        v1 = v9;
      }
      sub_1AE607D2C();
    }
    while (!v4);
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16))
  {
    sub_1AE6080B0();
    sub_1AE4F66C4();
    do
    {
      v10 = sub_1AE4F6A38();
      if ((sub_1AE5086B4(v10) & 1) == 0)
      {
        sub_1AE4FBAE8();
        v1 = v11;
      }
      sub_1AE607E08();
      if (v3)
      {
        sub_1AE4FDC30();
        v1 = v12;
      }
      sub_1AE607D2C();
    }
    while (!v4);
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(*(_QWORD *)(v0 + 40) + 16))
  {
    sub_1AE6080B0();
    sub_1AE4F66C4();
    do
    {
      v13 = sub_1AE4F6A38();
      if ((sub_1AE5086B4(v13) & 1) == 0)
      {
        sub_1AE4FBAE8();
        v1 = v14;
      }
      sub_1AE607E08();
      if (v3)
      {
        sub_1AE4FDC30();
        v1 = v15;
      }
      sub_1AE607D2C();
    }
    while (!v4);
    swift_bridgeObjectRelease();
  }
  v16 = *(_QWORD *)(v1 + 16);
  if (v16)
  {
    v17 = v1 + 40;
    do
    {
      swift_retain();
      sub_1AE5531CC();
      swift_release();
      v17 += 16;
      --v16;
    }
    while (v16);
  }
  sub_1AE4F6648();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void EntityResolutionRankingDirectFeedback.__allocating_init(kind:)(_BYTE *a1)
{
  *(_BYTE *)(sub_1AE4F66BC() + 16) = *a1;
  sub_1AE4F6664();
}

void EntityResolutionRankingService.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  sub_1AE4F6648();

  sub_1AE4F6664();
}

uint64_t EntityResolutionRankingService.__deallocating_deinit()
{
  EntityResolutionRankingService.deinit();
  return swift_deallocClassInstance();
}

uint64_t EntityResolutionRankingService.UnresolvedMentions.entityCandidates.getter()
{
  return swift_bridgeObjectRetain();
}

void static EntityResolutionRankingService.CandidateConstraint.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1AE5FEB68()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  if (v3)
  {
    *(_QWORD *)(v8 - 208) = v0;
    sub_1AE5FC3EC(v6, v0, v7, v5, v4, v3);
    v14 = sub_1AE5FBE74();
    sub_1AE5FC3EC(v14, v15, v16, v17, v18, v2);
    v19 = sub_1AE5FBE74();
    sub_1AE5FC4C8(v19, v20, v21, v22, v23, v2);
    sub_1AE5FC4C8(v6, *(_QWORD *)(v8 - 208), v7, v5, v4, v3);
    v13 = 0;
  }
  else
  {
    if (v1 == v6 && *(_QWORD *)(v8 - 176) == v0)
    {
      v13 = 1;
      v11 = v1;
    }
    else
    {
      v10 = v0;
      v11 = v1;
      v12 = sub_1AE926D60();
      v0 = v10;
      v13 = v12;
    }
    v32 = v7;
    v24 = v5;
    v25 = v0;
    v26 = v4;
    sub_1AE608188(v6, v0, v7, v24);
    v27 = *(_QWORD *)(v8 - 176);
    v29 = *(_QWORD *)(v8 - 200);
    v28 = *(_QWORD *)(v8 - 192);
    v30 = *(unsigned int *)(v8 - 180);
    sub_1AE608188(v11, v27, v29, v28);
    sub_1AE5FC4C8(v11, v27, v29, v28, v30, 0);
    sub_1AE5FC4C8(v6, v25, v32, v24, v26, 0);
  }
  return v13 & 1;
}

void EntityResolutionRankingService.CandidateConstraint.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1AE5FF20C()
{
  sub_1AE5FBFC0();
  sub_1AE4F66C4();
  sub_1AE925F14();
  sub_1AE4FE9F8();
  return swift_bridgeObjectRelease();
}

void sub_1AE5FF244()
{
  sub_1AE5FBFC0();
  sub_1AE4FE9F8();
  sub_1AE5F6160();
}

void sub_1AE5FF270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1AE5FB7EC();
  sub_1AE5FBFC0();
  sub_1AE5FC3EC(v23, v24, v22, v19, v21, v20);
  sub_1AE5FC3EC(a18, a17, a12, a11, a10, v18);
  sub_1AE608044();
  sub_1AE608044();
  sub_1AE5FC4C8(v23, v24, v22, v19, v21, v20);
  sub_1AE5FC4C8(a18, a17, a12, a11, a10, v18);
  sub_1AE4FE9F8();
}

uint64_t sub_1AE5FF33C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE5FF378 + 4 * byte_1AE942A2A[a1]))(0x6964657250736168, 0xEC00000065746163);
}

uint64_t sub_1AE5FF378()
{
  return 0x6564756C637865;
}

uint64_t sub_1AE5FF390()
{
  return 0x746573627573;
}

uint64_t sub_1AE5FF3A4()
{
  return 6581857;
}

uint64_t sub_1AE5FF3B4()
{
  return 29295;
}

uint64_t sub_1AE5FF3C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_1AE607D20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE607D20();
    sub_1AE4F6648();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1AE5FF470(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7365697469746E65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE607D20();
    sub_1AE4F6648();
  }
  sub_1AE4F6664();
}

uint64_t sub_1AE5FF4E4()
{
  sub_1AE604524();
  return sub_1AE926F94();
}

uint64_t sub_1AE5FF50C()
{
  sub_1AE604524();
  return sub_1AE926FA0();
}

uint64_t sub_1AE5FF534()
{
  unsigned __int8 *v0;

  return sub_1AE5FF33C(*v0);
}

uint64_t sub_1AE5FF53C()
{
  sub_1AE604470();
  return sub_1AE926F94();
}

uint64_t sub_1AE5FF564()
{
  sub_1AE604470();
  return sub_1AE926FA0();
}

uint64_t sub_1AE5FF58C()
{
  sub_1AE60459C();
  return sub_1AE926F94();
}

uint64_t sub_1AE5FF5B4()
{
  sub_1AE60459C();
  return sub_1AE926FA0();
}

uint64_t sub_1AE5FF5DC()
{
  sub_1AE6045D8();
  return sub_1AE926F94();
}

uint64_t sub_1AE5FF604()
{
  sub_1AE6045D8();
  return sub_1AE926FA0();
}

uint64_t sub_1AE5FF62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5FF3C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5FF650()
{
  sub_1AE6044AC();
  return sub_1AE926F94();
}

uint64_t sub_1AE5FF678()
{
  sub_1AE6044AC();
  return sub_1AE926FA0();
}

void sub_1AE5FF6A0(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_1AE5FF470(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_1AE5FF6C8()
{
  sub_1AE604560();
  return sub_1AE926F94();
}

uint64_t sub_1AE5FF6F0()
{
  sub_1AE604560();
  return sub_1AE926FA0();
}

void EntityResolutionRankingService.CandidateConstraint.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1AE4F67EC();
  v2 = v1;
  sub_1AE501548(&qword_1EED9D758);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE5079A4(v4, v12);
  sub_1AE501548(&qword_1EED9D760);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE607F2C(v6, v13);
  sub_1AE501548(&qword_1EED9D768);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9D770);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE501548(&qword_1EED9D778);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F683C();
  sub_1AE501548(&qword_1EED9D780);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F9024();
  v11 = *(unsigned __int8 *)(v0 + 34);
  sub_1AE5FBEEC(v2);
  sub_1AE604470();
  sub_1AE926F4C();
  __asm { BR              X9 }
}

void sub_1AE5FF8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  *(_BYTE *)(v3 - 128) = 0;
  sub_1AE6045D8();
  v4 = *(_QWORD *)(v3 - 136);
  sub_1AE503380();
  v5 = *(_QWORD *)(v3 - 256);
  *(_QWORD *)(v3 - 128) = v1;
  *(_QWORD *)(v3 - 120) = v5;
  v6 = *(_QWORD *)(v3 - 272);
  *(_QWORD *)(v3 - 112) = *(_QWORD *)(v3 - 264);
  *(_QWORD *)(v3 - 104) = v6;
  *(_WORD *)(v3 - 96) = *(_DWORD *)(v3 - 280);
  sub_1AE5C7844();
  sub_1AE5FBECC();
  v7 = sub_1AE607EE8();
  v8(v7, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 144) + 8))(v0, v4);
  sub_1AE595D68();
  sub_1AE4F667C();
}

uint64_t EntityResolutionRankingService.CandidateConstraint.hashValue.getter()
{
  sub_1AE4F76E0();
  EntityResolutionRankingService.CandidateConstraint.hash(into:)();
  return sub_1AE4F905C();
}

void EntityResolutionRankingService.CandidateConstraint.init(from:)()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1AE4F67EC();
  v4 = v3;
  sub_1AE501548(&qword_1EED9D7C0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE505A30(v6, v25);
  sub_1AE501548(&qword_1EED9D7C8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE5079A4(v8, v26);
  sub_1AE501548(&qword_1EED9D7D0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE507508(v10, v27);
  sub_1AE501548(&qword_1EED9D7D8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE607EF4(v12, v28);
  sub_1AE501548(&qword_1EED9D7E0);
  sub_1AE506C14();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F666C();
  sub_1AE501548(&qword_1EED9D7E8);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE607F64();
  sub_1AE4F9858(v4, v2);
  sub_1AE604470();
  sub_1AE60802C();
  if (!v0)
  {
    v15 = sub_1AE926C1C();
    if (*(_QWORD *)(v15 + 16))
    {
      sub_1AE608014();
      v17 = *(unsigned __int8 *)(v16 + 32);
      sub_1AE50AF34(1, v18, v15, v16 + 32, 0, v19);
      sub_1AE607EC0();
      if (!(v1 >> 1))
        __asm { BR              X9 }
    }
    sub_1AE6080A8();
    sub_1AE4F6778();
    v21 = v20;
    sub_1AE501548(&qword_1EED99C38);
    *v21 = &type metadata for EntityResolutionRankingService.CandidateConstraint;
    sub_1AE926B5C();
    v22 = sub_1AE607D88();
    sub_1AE509370(v22, *MEMORY[0x1E0DEC450]);
    sub_1AE60811C();
    sub_1AE4F8214();
    v23 = sub_1AE608124();
    sub_1AE4FB9F8(v23, v24);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v4);
  sub_1AE595D68();
  sub_1AE4F667C();
}

void sub_1AE600638()
{
  EntityResolutionRankingService.CandidateConstraint.init(from:)();
}

void sub_1AE60064C()
{
  EntityResolutionRankingService.CandidateConstraint.encode(to:)();
}

uint64_t sub_1AE600668()
{
  sub_1AE926EC8();
  EntityResolutionRankingService.CandidateConstraint.hash(into:)();
  return sub_1AE926F10();
}

void EntityResolutionRankingService.MentionedEntities.MentionedRankedEntities.init(mention:entities:)(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = *a2;
  v7 = a2[1];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, a1);
  v10 = (_QWORD *)(a4
                 + *(int *)(type metadata accessor for EntityResolutionRankingService.MentionedEntities.MentionedRankedEntities(0, a3, v8, v9)+ 28));
  *v10 = v6;
  v10[1] = v7;
  sub_1AE4F6624();
}

uint64_t EntityResolutionRankingService.MentionedEntities.MentionedRankedEntities.mention.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t EntityResolutionRankingService.MentionedEntities.MentionedRankedEntities.entities.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v2 + *(int *)(a1 + 28));
  v4 = *v3;
  v5 = v3[1];
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t EntityResolutionRankingService.MentionedEntities.init(mentions:inferenceEventId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t EntityResolutionRankingService.MentionedEntities.inferenceEventId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void EntityResolutionRankingService.RankingOptions.typeFilter.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  sub_1AE4F6664();
}

uint64_t (*EntityResolutionRankingService.RankingOptions.typeFilter.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EntityResolutionRankingService.RankingOptions.candidateConstraints.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(unsigned __int8 *)(v1 + 42);
  v7 = *(unsigned __int16 *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 34) = v6;
  *(_WORD *)(a1 + 32) = v7;
  return sub_1AE5FC3D8(v2, v3, v4, v5, v7 | (v6 << 16));
}

__n128 EntityResolutionRankingService.RankingOptions.candidateConstraints.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int16 v4;
  unsigned __int8 v5;
  uint64_t v6;
  int v7;
  __n128 result;
  __n128 v9;

  v9 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u16[0];
  v5 = a1[2].n128_u8[2];
  v7 = *(unsigned __int16 *)(v1 + 40);
  v6 = v1 + 40;
  sub_1AE5FC4B4(*(_QWORD *)(v6 - 32), *(_QWORD *)(v6 - 24), *(_QWORD *)(v6 - 16), *(_QWORD *)(v6 - 8), v7 | (*(unsigned __int8 *)(v6 + 2) << 16));
  result = v9;
  *(__n128 *)(v6 - 32) = v9;
  *(_QWORD *)(v6 - 16) = v2;
  *(_QWORD *)(v6 - 8) = v3;
  *(_BYTE *)(v6 + 2) = v5;
  *(_WORD *)v6 = v4;
  return result;
}

uint64_t (*EntityResolutionRankingService.RankingOptions.candidateConstraints.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EntityResolutionRankingService.RankingOptions.rankingType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  v3 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(a1 + 8) = v3;
  return sub_1AE6046F8(v2, v3);
}

void EntityResolutionRankingService.RankingOptions.rankingType.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  sub_1AE60470C(*(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56));
  *(_QWORD *)(v1 + 48) = v2;
  *(_BYTE *)(v1 + 56) = v3;
  sub_1AE4F6624();
}

uint64_t (*EntityResolutionRankingService.RankingOptions.rankingType.modify())(_QWORD)
{
  return nullsub_1;
}

void EntityResolutionRankingService.RankingOptions.mode.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 72);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 64);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t EntityResolutionRankingService.RankingOptions.mode.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 64) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 72) = v2;
  return result;
}

uint64_t (*EntityResolutionRankingService.RankingOptions.mode.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL static EntityResolutionRankingService.RankingFilter.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void EntityResolutionRankingService.RankingFilter.hash(into:)()
{
  sub_1AE506940();
  sub_1AE4F6664();
}

void EntityResolutionRankingService.RankingFilter.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE4F6694();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

IntelligencePlatform::EntityResolutionRankingService::EntityResolutionMode_optional __swiftcall EntityResolutionRankingService.EntityResolutionMode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  IntelligencePlatform::EntityResolutionRankingService::EntityResolutionMode_optional result;

  v2 = v1;
  v3 = sub_1AE926B44();
  sub_1AE4F6648();
  v4 = 4;
  if (v3 < 4)
    v4 = v3;
  *v2 = v4;
  sub_1AE4F6624();
  return result;
}

void *static EntityResolutionRankingService.EntityResolutionMode.allCases.getter()
{
  return &unk_1E5DAD058;
}

uint64_t EntityResolutionRankingService.EntityResolutionMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE6009B0 + 4 * byte_1AE942A39[*v0]))(0x6E6574614C776F6CLL, 0xEA00000000007963);
}

uint64_t sub_1AE6009B0()
{
  return 0x6465636E616C6162;
}

uint64_t sub_1AE6009C8()
{
  return 0x6C61755168676968;
}

uint64_t sub_1AE6009E8()
{
  return 0x6553786966657270;
}

void sub_1AE600A08()
{
  sub_1AE510900();
}

void sub_1AE600A14()
{
  unsigned __int8 *v0;

  sub_1AE512E00(*v0);
}

void sub_1AE600A1C()
{
  sub_1AE5E8624();
}

void sub_1AE600A24(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54F834(a1, *v1);
}

IntelligencePlatform::EntityResolutionRankingService::EntityResolutionMode_optional sub_1AE600A2C(Swift::String *a1)
{
  return EntityResolutionRankingService.EntityResolutionMode.init(rawValue:)(*a1);
}

void sub_1AE600A38(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = EntityResolutionRankingService.EntityResolutionMode.rawValue.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

void sub_1AE600A58(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5DAD058;
}

uint64_t sub_1AE600A68()
{
  sub_1AE607C70();
  return sub_1AE926190();
}

uint64_t sub_1AE600AC4()
{
  sub_1AE607C70();
  return sub_1AE926148();
}

uint64_t EntityResolutionRankingService.Explanation.Feature.__allocating_init(name:value:zScore:importance:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t result;

  result = sub_1AE4F66BC();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(double *)(result + 32) = a3;
  *(double *)(result + 40) = a4;
  *(double *)(result + 48) = a5;
  return result;
}

uint64_t EntityResolutionRankingService.Explanation.Feature.init(name:value:zScore:importance:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  *(double *)(v5 + 32) = a3;
  *(double *)(v5 + 40) = a4;
  *(double *)(v5 + 48) = a5;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

void EntityResolutionRankingService.Explanation.Feature.name.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F6664();
}

double EntityResolutionRankingService.Explanation.Feature.value.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double EntityResolutionRankingService.Explanation.Feature.zScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double EntityResolutionRankingService.Explanation.Feature.importance.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

uint64_t sub_1AE600BB8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x65726F63537ALL && a2 == 0xE600000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6E6174726F706D69 && a2 == 0xEA00000000006563)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1AE926D60();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1AE600D50(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE600D7C + 4 * byte_1AE942A3D[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1AE600D7C()
{
  return 0x65756C6176;
}

uint64_t sub_1AE600D90()
{
  return 0x65726F63537ALL;
}

uint64_t sub_1AE600DA4()
{
  return 0x6E6174726F706D69;
}

uint64_t sub_1AE600DC0()
{
  unsigned __int8 *v0;

  return sub_1AE600D50(*v0);
}

uint64_t sub_1AE600DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE600BB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE600DEC()
{
  sub_1AE604720();
  return sub_1AE926F94();
}

uint64_t sub_1AE600E14()
{
  sub_1AE604720();
  return sub_1AE926FA0();
}

uint64_t EntityResolutionRankingService.Explanation.Feature.deinit()
{
  uint64_t v0;

  sub_1AE608144();
  return v0;
}

uint64_t EntityResolutionRankingService.Explanation.Feature.__deallocating_deinit()
{
  sub_1AE608144();
  return swift_deallocClassInstance();
}

void EntityResolutionRankingService.Explanation.Feature.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  sub_1AE501548(&qword_1EED99588);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AE4FD100();
  sub_1AE604720();
  sub_1AE4FC7AC();
  v5[15] = 0;
  sub_1AE926C88();
  if (!v0)
  {
    v5[14] = 1;
    sub_1AE506288();
    v5[13] = 2;
    sub_1AE506288();
    v5[12] = 3;
    sub_1AE506288();
  }
  sub_1AE4FDC10((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1AE4FCE34();
}

void EntityResolutionRankingService.Explanation.Feature.__allocating_init(from:)()
{
  sub_1AE607E28();
  sub_1AE4F66BC();
  sub_1AE607E18();
  EntityResolutionRankingService.Explanation.Feature.init(from:)();
  sub_1AE4FC4F8();
}

_QWORD *EntityResolutionRankingService.Explanation.Feature.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1AE608064();
  sub_1AE501548(&qword_1EED9D7F8);
  sub_1AE506C14();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE5FBEEC(v2);
  sub_1AE604720();
  sub_1AE607E38();
  if (v1)
  {
    sub_1AE607EB0();
  }
  else
  {
    v0[2] = sub_1AE926BB0();
    v0[3] = v5;
    sub_1AE607DA8();
    v0[4] = v6;
    sub_1AE607DA8();
    v0[5] = v8;
    sub_1AE607DA8();
    v10 = v9;
    sub_1AE501B88(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    v0[6] = v10;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  return v0;
}

void sub_1AE601120(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  EntityResolutionRankingService.Explanation.Feature.__allocating_init(from:)();
  if (!v1)
    *a1 = v3;
}

void sub_1AE601148()
{
  EntityResolutionRankingService.Explanation.Feature.encode(to:)();
}

void EntityResolutionRankingService.Explanation.__allocating_init(positiveContributions:negativeContributions:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE4F66BC();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1AE4F6624();
}

uint64_t EntityResolutionRankingService.Explanation.init(positiveContributions:negativeContributions:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

uint64_t EntityResolutionRankingService.Explanation.positiveContributions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EntityResolutionRankingService.Explanation.negativeContributions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE6011B0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000001AE980230 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AE980250)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1AE601298()
{
  return 0xD000000000000015;
}

unint64_t sub_1AE6012CC()
{
  return sub_1AE601298();
}

uint64_t sub_1AE6012D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE6011B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE6012F8()
{
  sub_1AE60475C();
  return sub_1AE926F94();
}

uint64_t sub_1AE601320()
{
  sub_1AE60475C();
  return sub_1AE926FA0();
}

uint64_t EntityResolutionRankingService.Explanation.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1AE608144();
  return v0;
}

uint64_t EntityResolutionRankingService.Explanation.__deallocating_deinit()
{
  EntityResolutionRankingService.Explanation.deinit();
  return swift_deallocClassInstance();
}

void EntityResolutionRankingService.Explanation.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  sub_1AE501548(&qword_1EED99580);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4FD100();
  sub_1AE60475C();
  sub_1AE4FC7AC();
  v7 = *(_QWORD *)(v0 + 16);
  HIBYTE(v6) = 0;
  sub_1AE501548(&qword_1EED99550);
  sub_1AE604798((uint64_t)&unk_1EED99558);
  sub_1AE506920();
  if (!v1)
  {
    v7 = *(_QWORD *)(v0 + 24);
    HIBYTE(v6) = 1;
    sub_1AE506920();
  }
  sub_1AE4FDC10((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1AE4FCE34();
}

void EntityResolutionRankingService.Explanation.__allocating_init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1AE607E28();
  sub_1AE4F66BC();
  v0 = sub_1AE607E18();
  EntityResolutionRankingService.Explanation.init(from:)(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  sub_1AE4FC4F8();
}

void EntityResolutionRankingService.Explanation.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  sub_1AE4F67EC();
  sub_1AE608064();
  sub_1AE501548(&qword_1EED9D800);
  sub_1AE506C14();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE5FBEEC(v12);
  sub_1AE60475C();
  sub_1AE607E38();
  if (v11)
  {
    sub_1AE607EB0();
  }
  else
  {
    sub_1AE501548(&qword_1EED99550);
    sub_1AE604798((uint64_t)&unk_1EED9D808);
    sub_1AE607DF0();
    *(_QWORD *)(v10 + 16) = a10;
    sub_1AE607DF0();
    sub_1AE501B88(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    *(_QWORD *)(v10 + 24) = a10;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v12);
  sub_1AE4F667C();
}

void sub_1AE60160C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  EntityResolutionRankingService.Explanation.__allocating_init(from:)();
  if (!v1)
    *a1 = v3;
}

void sub_1AE601634()
{
  EntityResolutionRankingService.Explanation.encode(to:)();
}

uint64_t EntityResolutionRankingService.RankedEntities.ScoredEntity.init(id:score:explanation:inferenceEventId:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 16) = *a1;
  *(double *)(v5 + 24) = a5;
  *(_QWORD *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 48) = a4;
  *(_QWORD *)(v5 + 56) = 1;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

void EntityResolutionRankingService.RankedEntities.ScoredEntity.id.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
}

double EntityResolutionRankingService.RankedEntities.ScoredEntity.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void EntityResolutionRankingService.RankedEntities.ScoredEntity.explanation.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F6664();
}

uint64_t EntityResolutionRankingService.RankedEntities.ScoredEntity.inferenceEventId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_1AE6016B0()
{
  uint64_t v0;

  v0 = swift_retain();
  return sub_1AE601828(v0);
}

uint64_t sub_1AE6016D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0;
  v2 = v0[7];
  v3 = v2;
  if (v2 == 1)
  {
    v4 = v1[5];
    if (v4)
    {
      v5 = v1[4];
      v6 = (void *)MEMORY[0x1AF454348]();
      sub_1AE9243C0();
      swift_allocObject();
      sub_1AE9243B4();
      type metadata accessor for EntityResolutionRankingService.Explanation();
      sub_1AE4F66C4();
      sub_1AE586D08(v5, v4);
      sub_1AE604F34((uint64_t)&unk_1EED9D818);
      sub_1AE9243A8();
      sub_1AE4FE958();
      swift_release();
      v3 = v9;
      objc_autoreleasePoolPop(v6);
      v7 = v1[7];
    }
    else
    {
      v3 = 0;
      v7 = 1;
    }
    v1[7] = v3;
    swift_retain();
    sub_1AE604838(v7);
  }
  sub_1AE604848(v2);
  return v3;
}

uint64_t sub_1AE601828(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 56) = a1;
  return sub_1AE604838(v2);
}

void sub_1AE601838(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_1AE6016D8();
  sub_1AE4F6664();
}

void sub_1AE601868(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_retain();
    sub_1AE601828(v2);
    swift_release();
  }
  else
  {
    sub_1AE601828(*a1);
    sub_1AE4F6664();
  }
}

uint64_t EntityResolutionRankingService.RankedEntities.ScoredEntity.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1AE604838(*(_QWORD *)(v0 + 56));
  return v0;
}

uint64_t EntityResolutionRankingService.RankedEntities.ScoredEntity.__deallocating_deinit()
{
  EntityResolutionRankingService.RankedEntities.ScoredEntity.deinit();
  return swift_deallocClassInstance();
}

uint64_t EntityResolutionRankingService.RankedEntities.inferenceEventId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

__n128 StructuredInput.init(data:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(a1 + 32);
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  *(_BYTE *)(a2 + 32) = v2;
  return result;
}

uint64_t sub_1AE60190C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x7465536E75 && a2 == 0xE500000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6465726165707061 && a2 == 0xE800000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6465747065636361 && a2 == 0xE800000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x64657463656A6572 && a2 == 0xE800000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x6165707061736964 && a2 == 0xEB00000000646572)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1AE926D60();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1AE601B2C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE601B5C + 4 * byte_1AE942A41[a1]))(0x7465536E75, 0xE500000000000000);
}

uint64_t sub_1AE601B5C()
{
  return 0x6465726165707061;
}

uint64_t sub_1AE601B9C()
{
  return 0x6165707061736964;
}

void sub_1AE601BBC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x736449746E657665 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE607D20();
    sub_1AE4F6648();
  }
  sub_1AE4F6664();
}

uint64_t sub_1AE601C30()
{
  return 0x736449746E657665;
}

uint64_t sub_1AE601C4C()
{
  sub_1AE60492C();
  return sub_1AE926F94();
}

uint64_t sub_1AE601C74()
{
  sub_1AE60492C();
  return sub_1AE926FA0();
}

uint64_t sub_1AE601C9C()
{
  sub_1AE604968();
  return sub_1AE926F94();
}

uint64_t sub_1AE601CC4()
{
  sub_1AE604968();
  return sub_1AE926FA0();
}

uint64_t sub_1AE601CEC()
{
  unsigned __int8 *v0;

  return sub_1AE601B2C(*v0);
}

uint64_t sub_1AE601CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE60190C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE601D18()
{
  sub_1AE604878();
  return sub_1AE926F94();
}

uint64_t sub_1AE601D40()
{
  sub_1AE604878();
  return sub_1AE926FA0();
}

uint64_t sub_1AE601D68()
{
  sub_1AE6048B4();
  return sub_1AE926F94();
}

uint64_t sub_1AE601D90()
{
  sub_1AE6048B4();
  return sub_1AE926FA0();
}

uint64_t sub_1AE601DB8()
{
  sub_1AE6048F0();
  return sub_1AE926F94();
}

uint64_t sub_1AE601DE0()
{
  sub_1AE6048F0();
  return sub_1AE926FA0();
}

void sub_1AE601E08(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_1AE601BBC(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_1AE601E30()
{
  sub_1AE6049A4();
  return sub_1AE926F94();
}

uint64_t sub_1AE601E58()
{
  sub_1AE6049A4();
  return sub_1AE926FA0();
}

void EntityResolutionRankingStatefulFeedback.FeedbackKind.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1AE4F67EC();
  sub_1AE501548(&qword_1EED9D820);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE506540(v2, v11);
  sub_1AE501548(&qword_1EED9D828);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE507508(v4, v12);
  sub_1AE501548(&qword_1EED9D830);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE607EF4(v6, v13);
  sub_1AE501548(&qword_1EED9D838);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F683C();
  sub_1AE501548(&qword_1EED9D840);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE5009EC();
  sub_1AE501548(&qword_1EED9D848);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F666C();
  v10 = *(unsigned __int8 *)(v0 + 8);
  sub_1AE608100();
  sub_1AE926F4C();
  __asm { BR              X9 }
}

void sub_1AE601FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  *(_BYTE *)(v1 - 72) = 0;
  sub_1AE6049A4();
  v2 = *(_QWORD *)(v1 - 96);
  sub_1AE503380();
  sub_1AE607F80();
  sub_1AE501548(&qword_1EED9D860);
  sub_1AE6049E0((uint64_t)&unk_1EED9D868);
  sub_1AE608000();
  sub_1AE607E80();
  v3 = sub_1AE607FF0();
  v4(v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 104) + 8))(v0, v2);
  sub_1AE4F667C();
}

void EntityResolutionRankingStatefulFeedback.FeedbackKind.init(from:)()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EED9D890);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE607F48(v5, v22);
  sub_1AE501548(&qword_1EED9D898);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9D8A0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9D8A8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE506540(v9, v23);
  sub_1AE501548(&qword_1EED9D8B0);
  sub_1AE506C14();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE5009EC();
  sub_1AE501548(&qword_1EED9D8B8);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE607F64();
  sub_1AE608100();
  sub_1AE60802C();
  if (!v0)
  {
    v12 = sub_1AE926C1C();
    if (*(_QWORD *)(v12 + 16))
    {
      sub_1AE608014();
      v14 = *(unsigned __int8 *)(v13 + 32);
      sub_1AE50AF34(1, v15, v12, v13 + 32, 0, v16);
      sub_1AE607EC0();
      if (!(v1 >> 1))
        __asm { BR              X9 }
    }
    sub_1AE6080A8();
    sub_1AE4F6778();
    v18 = v17;
    sub_1AE501548(&qword_1EED99C38);
    *v18 = &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind;
    sub_1AE926B5C();
    v19 = sub_1AE607D88();
    sub_1AE509370(v19, *MEMORY[0x1E0DEC450]);
    sub_1AE60811C();
    sub_1AE4F8214();
    v20 = sub_1AE608124();
    sub_1AE4FB9F8(v20, v21);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v3);
  sub_1AE595D68();
  sub_1AE4F667C();
}

void sub_1AE6025AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE608164();
  v3 = *(_QWORD *)(v2 - 136);
  sub_1AE607FA4();
  sub_1AE50AAF0();
  if (v0)
  {
    sub_1AE4F8214();
    JUMPOUT(0x1AE602594);
  }
  sub_1AE501548(&qword_1EED9D860);
  sub_1AE6049E0((uint64_t)&unk_1EED9D8C0);
  sub_1AE507DEC();
  sub_1AE607E88();
  sub_1AE4FBA8C(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1AE4F8214();
  JUMPOUT(0x1AE6028BCLL);
}

void sub_1AE6025F0()
{
  uint64_t v0;

  sub_1AE6080F4();
  sub_1AE50AAF0();
  if (!v0)
  {
    sub_1AE501548(&qword_1EED9D860);
    sub_1AE6049E0((uint64_t)&unk_1EED9D8C0);
    sub_1AE607E88();
    sub_1AE607FF0();
    JUMPOUT(0x1AE602890);
  }
  JUMPOUT(0x1AE602710);
}

void sub_1AE602720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE60809C();
  sub_1AE607FA4();
  v2 = *(_QWORD *)(v1 - 208);
  sub_1AE50AAF0();
  if (v0)
  {
    sub_1AE4F8214();
    JUMPOUT(0x1AE602594);
  }
  sub_1AE501548(&qword_1EED9D860);
  sub_1AE6049E0((uint64_t)&unk_1EED9D8C0);
  sub_1AE507DEC();
  sub_1AE926B98();
  sub_1AE50AAF8(*(_QWORD *)(v1 - 168));
  sub_1AE4F8214();
  sub_1AE4FB9F8(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 88) + 8));
  JUMPOUT(0x1AE6028CCLL);
}

void sub_1AE6028D8()
{
  EntityResolutionRankingStatefulFeedback.FeedbackKind.init(from:)();
}

void sub_1AE6028EC()
{
  EntityResolutionRankingStatefulFeedback.FeedbackKind.encode(to:)();
}

void EntityResolutionRankingStatefulFeedback.__allocating_init(kind:)(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = sub_1AE4F66BC();
  v3 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)(v2 + 16) = *(_QWORD *)a1;
  *(_BYTE *)(v2 + 24) = v3;
  sub_1AE4F6664();
}

uint64_t EntityResolutionRankingStatefulFeedback.init(kind:)(uint64_t a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)a1;
  *(_BYTE *)(v1 + 24) = v2;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

unint64_t static EntityResolutionRankingStatefulFeedback.type.getter()
{
  return 0xD00000000000003CLL;
}

void sub_1AE602964()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE602974()
{
  sub_1AE604A44();
  return sub_1AE926F94();
}

uint64_t sub_1AE60299C()
{
  sub_1AE604A44();
  return sub_1AE926FA0();
}

uint64_t EntityResolutionRankingStatefulFeedback.deinit()
{
  uint64_t v0;

  sub_1AE604A30(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  return v0;
}

uint64_t EntityResolutionRankingStatefulFeedback.__deallocating_deinit()
{
  uint64_t v0;

  sub_1AE604A30(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  return swift_deallocClassInstance();
}

void sub_1AE602A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v6;
  char v7;

  sub_1AE501548(&qword_1EED9D8C8);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4FD100();
  sub_1AE604A44();
  sub_1AE4FC7AC();
  v5 = *(_BYTE *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = v5;
  sub_1AE604A80();
  sub_1AE608170();
  sub_1AE4FBA8C((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1AE4FCE34();
}

void EntityResolutionRankingStatefulFeedback.__allocating_init(from:)()
{
  sub_1AE607E28();
  sub_1AE4F66BC();
  sub_1AE607E18();
  EntityResolutionRankingStatefulFeedback.init(from:)();
  sub_1AE4FC4F8();
}

void EntityResolutionRankingStatefulFeedback.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_1AE4F67EC();
  v4 = v3;
  sub_1AE501548(&qword_1EED9D8E0);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9858(v4, v4[3]);
  sub_1AE604A44();
  sub_1AE505AEC();
  if (v1)
  {
    type metadata accessor for EntityResolutionRankingStatefulFeedback();
    sub_1AE607EB0();
  }
  else
  {
    sub_1AE604ADC();
    sub_1AE607EB8();
    sub_1AE4FDB48(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    *(_QWORD *)(v0 + 16) = v6;
    *(_BYTE *)(v0 + 24) = v7;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v4);
  sub_1AE595D68();
  sub_1AE4F667C();
}

unint64_t sub_1AE602C04()
{
  static EntityResolutionRankingStatefulFeedback.type.getter();
  return 0xD00000000000003CLL;
}

void sub_1AE602C20(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  EntityResolutionRankingStatefulFeedback.__allocating_init(from:)();
  if (!v1)
    *a1 = v3;
}

void sub_1AE602C48()
{
  sub_1AE602A0C();
}

BOOL static EntityResolutionRankingDirectFeedback.FeedbackKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void EntityResolutionRankingDirectFeedback.FeedbackKind.hash(into:)()
{
  sub_1AE506940();
  sub_1AE4F6664();
}

uint64_t sub_1AE602C94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x7465736E75 && a2 == 0xE500000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x64656761676E65 && a2 == 0xE700000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x64657463656A6572 && a2 == 0xE800000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6465726F6E6769 && a2 == 0xE700000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x657250726576656ELL && a2 == 0xEE006465746E6573)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1AE926D60();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1AE602EBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE602EEC + 4 * byte_1AE942A50[a1]))(0x7465736E75, 0xE500000000000000);
}

uint64_t sub_1AE602EEC()
{
  return 0x64656761676E65;
}

uint64_t sub_1AE602F30()
{
  return 0x657250726576656ELL;
}

uint64_t sub_1AE602F54()
{
  unsigned __int8 *v0;

  return sub_1AE602EBC(*v0);
}

uint64_t sub_1AE602F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE602C94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE602F80()
{
  sub_1AE604B18();
  return sub_1AE926F94();
}

uint64_t sub_1AE602FA8()
{
  sub_1AE604B18();
  return sub_1AE926FA0();
}

uint64_t sub_1AE602FD0()
{
  sub_1AE604C08();
  return sub_1AE926F94();
}

uint64_t sub_1AE602FF8()
{
  sub_1AE604C08();
  return sub_1AE926FA0();
}

uint64_t sub_1AE603020()
{
  sub_1AE604B90();
  return sub_1AE926F94();
}

uint64_t sub_1AE603048()
{
  sub_1AE604B90();
  return sub_1AE926FA0();
}

uint64_t sub_1AE603070()
{
  sub_1AE604B54();
  return sub_1AE926F94();
}

uint64_t sub_1AE603098()
{
  sub_1AE604B54();
  return sub_1AE926FA0();
}

uint64_t sub_1AE6030C0()
{
  sub_1AE604BCC();
  return sub_1AE926F94();
}

uint64_t sub_1AE6030E8()
{
  sub_1AE604BCC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE603110()
{
  sub_1AE604C44();
  return sub_1AE926F94();
}

uint64_t sub_1AE603138()
{
  sub_1AE604C44();
  return sub_1AE926FA0();
}

void EntityResolutionRankingDirectFeedback.FeedbackKind.encode(to:)()
{
  unsigned __int8 *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1AE4F67EC();
  v2 = v1;
  sub_1AE501548(&qword_1EED9D8F0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE607F48(v4, v14);
  sub_1AE501548(&qword_1EED9D8F8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE607F10(v6, v15);
  sub_1AE501548(&qword_1EED9D900);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE5079A4(v8, v16);
  sub_1AE501548(&qword_1EED9D908);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE607F2C(v10, v17);
  v11 = sub_1AE501548(&qword_1EED9D910);
  MEMORY[0x1E0C80A78](v11);
  sub_1AE5009EC();
  sub_1AE501548(&qword_1EED9D918);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F666C();
  v13 = *v0;
  sub_1AE5FBEEC(v2);
  sub_1AE604B18();
  sub_1AE926F4C();
  __asm { BR              X9 }
}

void sub_1AE6032C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 69) = 0;
  sub_1AE604C44();
  v4 = *(_QWORD *)(v3 - 88);
  sub_1AE503380();
  sub_1AE4FDC10(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8))(v0, v4);
  sub_1AE4F667C();
}

void EntityResolutionRankingDirectFeedback.FeedbackKind.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE4F6694();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void EntityResolutionRankingDirectFeedback.FeedbackKind.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36[5];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;

  sub_1AE4F67EC();
  v49 = v0;
  v5 = v4;
  v44 = v6;
  v7 = sub_1AE501548(&qword_1EED9D950);
  v46 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F9024();
  v43 = v9;
  v45 = sub_1AE501548(&qword_1EED9D958);
  v42 = *(_QWORD *)(v45 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE607F10(v11, v36[0]);
  v12 = sub_1AE501548(&qword_1EED9D960);
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE507508(v14, v36[0]);
  v15 = sub_1AE501548(&qword_1EED9D968);
  v38 = *(_QWORD *)(v15 - 8);
  v39 = v15;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE505A30(v17, v36[0]);
  v18 = sub_1AE501548(&qword_1EED9D970);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE501548(&qword_1EED9D978);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v22);
  sub_1AE4F683C();
  v23 = v5[3];
  v48 = v5;
  sub_1AE4F9858(v5, v23);
  sub_1AE604B18();
  v24 = v49;
  sub_1AE926F34();
  if (!v24)
  {
    v36[3] = v18;
    v36[4] = (uint64_t)v21;
    v36[2] = v2;
    v49 = v3;
    v25 = v1;
    v26 = sub_1AE926C1C();
    v27 = *(_QWORD *)(v26 + 16);
    if (v27)
    {
      v37 = v1;
      v28 = *(unsigned __int8 *)(v26 + 32);
      sub_1AE50AF34(1, v27, v26, v26 + 32, 0, (2 * v27) | 1);
      v30 = v29;
      v32 = v31;
      swift_bridgeObjectRelease();
      if (v30 == v32 >> 1)
      {
        v36[1] = v28;
        __asm { BR              X9 }
      }
      v25 = v37;
    }
    sub_1AE6080A8();
    sub_1AE4F6778();
    v34 = v33;
    sub_1AE501548(&qword_1EED99C38);
    *v34 = &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind;
    sub_1AE926B5C();
    v35 = sub_1AE92697C();
    sub_1AE509370(v35, *MEMORY[0x1E0DEC450]);
    sub_1AE60811C();
    swift_unknownObjectRelease();
    sub_1AE4FB9F8(v25, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v48);
  sub_1AE4F667C();
}

void sub_1AE60371C()
{
  uint64_t v0;

  sub_1AE60814C();
  sub_1AE50AAF0();
  if (!v0)
  {
    sub_1AE5FC1C8();
    JUMPOUT(0x1AE603820);
  }
  JUMPOUT(0x1AE6036ECLL);
}

void sub_1AE603758()
{
  uint64_t v0;

  sub_1AE6080DC();
  sub_1AE50AAF0();
  if (!v0)
    JUMPOUT(0x1AE603790);
  JUMPOUT(0x1AE6036ECLL);
}

void sub_1AE603798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE6080C4();
  v3 = *(_QWORD *)(v2 - 152);
  v4 = *(_QWORD *)(v2 - 216);
  sub_1AE50AAF0();
  if (!v0)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 8))(v3, v1);
    swift_unknownObjectRelease();
    sub_1AE4FB9F8(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8));
    **(_BYTE **)(v2 - 136) = *(_QWORD *)(v2 - 248);
    JUMPOUT(0x1AE603704);
  }
  JUMPOUT(0x1AE6036ECLL);
}

void sub_1AE6037E0()
{
  uint64_t v0;

  sub_1AE608090();
  sub_1AE50AAF0();
  if (!v0)
    JUMPOUT(0x1AE603820);
  JUMPOUT(0x1AE6036ECLL);
}

void sub_1AE603858()
{
  EntityResolutionRankingDirectFeedback.FeedbackKind.init(from:)();
}

void sub_1AE60386C()
{
  EntityResolutionRankingDirectFeedback.FeedbackKind.encode(to:)();
}

uint64_t EntityResolutionRankingDirectFeedback.init(kind:)(_BYTE *a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *a1;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

unint64_t static EntityResolutionRankingDirectFeedback.type.getter()
{
  return 0xD00000000000003ALL;
}

void sub_1AE6038A8(uint64_t a1, uint64_t a2)
{
  if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE607D20();
    sub_1AE4F6648();
  }
  sub_1AE4F6664();
}

uint64_t sub_1AE60390C()
{
  return 1684957547;
}

void sub_1AE60391C(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_1AE6038A8(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_1AE603944()
{
  sub_1AE604C80();
  return sub_1AE926F94();
}

uint64_t sub_1AE60396C()
{
  sub_1AE604C80();
  return sub_1AE926FA0();
}

uint64_t EntityResolutionRankingDirectFeedback.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1AE6039A8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE501548(&qword_1EED9D980);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4FD100();
  sub_1AE604C80();
  sub_1AE4FC7AC();
  sub_1AE604CBC();
  sub_1AE608170();
  sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1AE4FCE34();
}

void EntityResolutionRankingDirectFeedback.__allocating_init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1AE607E28();
  sub_1AE4F66BC();
  v0 = sub_1AE607E18();
  EntityResolutionRankingDirectFeedback.init(from:)(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, SWORD2(v9), SBYTE6(v9), SHIBYTE(v9));
  sub_1AE4FC4F8();
}

void EntityResolutionRankingDirectFeedback.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  sub_1AE4F67EC();
  v17 = v16;
  sub_1AE501548(&qword_1EED9D998);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F9858(v17, v17[3]);
  sub_1AE604C80();
  sub_1AE505AEC();
  if (v14)
  {
    type metadata accessor for EntityResolutionRankingDirectFeedback();
    sub_1AE607EB0();
  }
  else
  {
    sub_1AE604CF8();
    sub_1AE607EB8();
    sub_1AE4FDB48(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
    *(_BYTE *)(v13 + 16) = a13;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v17);
  sub_1AE595D68();
  sub_1AE4F667C();
}

unint64_t sub_1AE603B88()
{
  static EntityResolutionRankingDirectFeedback.type.getter();
  return 0xD00000000000003ALL;
}

void sub_1AE603BA4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  EntityResolutionRankingDirectFeedback.__allocating_init(from:)();
  if (!v1)
    *a1 = v3;
}

void sub_1AE603BCC()
{
  sub_1AE6039A8();
}

void sub_1AE603BEC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;

  v3 = a1[1];
  v4 = sub_1AE926D0C();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_124;
    if (v3)
      sub_1AE6041CC(0, v3, 1, a1);
    return;
  }
  v5 = v4;
  sub_1AE5196B4(v3 / 2);
  v93 = v6;
  v94 = v7;
  v91 = v3;
  v89 = a1;
  if (v3 <= 0)
    goto LABEL_88;
  v8 = 0;
  v9 = *a1;
  v88 = *a1 - 8;
  v10 = MEMORY[0x1E0DEE9D8];
  v90 = v5;
  v92 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(_QWORD *)(v9 + 8 * v8);
      v13 = *(double *)(v12 + 24);
      v14 = *(double *)(*(_QWORD *)(v9 + 8 * v11) + 24);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v15 = *(double *)(v12 + 24);
        while (1)
        {
          v16 = v15;
          v15 = *(double *)(*(_QWORD *)(v9 + 8 * v8) + 24);
          if (v14 < v13 == v16 >= v15)
            break;
          if (++v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v14 < v13)
      {
        if (v8 < v11)
          goto LABEL_125;
        if (v11 < v8)
        {
          v17 = (uint64_t *)(v88 + 8 * v8);
          v18 = v8;
          v19 = v11;
          v20 = (uint64_t *)(v9 + 8 * v11);
          do
          {
            if (v19 != --v18)
            {
              if (!v9)
                goto LABEL_131;
              v21 = *v20;
              *v20 = *v17;
              *v17 = v21;
            }
            ++v19;
            --v17;
            ++v20;
          }
          while (v19 < v18);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_123;
      if (v8 - v11 < v5)
      {
        v22 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_126;
        if (v22 >= v3)
          v22 = v3;
        if (v22 < v11)
        {
LABEL_127:
          __break(1u);
          goto LABEL_128;
        }
        if (v8 != v22)
        {
          v23 = (_QWORD *)(v88 + 8 * v8);
          do
          {
            v24 = *(_QWORD *)(v9 + 8 * v8);
            v25 = v11;
            v26 = v23;
            do
            {
              v27 = *v26;
              if (*(double *)(*v26 + 24) >= *(double *)(v24 + 24))
                break;
              if (!v9)
                goto LABEL_129;
              *v26 = v24;
              v26[1] = v27;
              --v26;
              ++v25;
            }
            while (v8 != v25);
            ++v8;
            ++v23;
          }
          while (v8 != v22);
          v8 = v22;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE889310(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
      v10 = v79;
    }
    v29 = *(_QWORD *)(v10 + 16);
    v28 = *(_QWORD *)(v10 + 24);
    v30 = v29 + 1;
    v9 = v92;
    if (v29 >= v28 >> 1)
    {
      sub_1AE889310(v28 > 1, v29 + 1, 1, (char *)v10);
      v9 = v92;
      v10 = v80;
    }
    *(_QWORD *)(v10 + 16) = v30;
    v31 = v10 + 32;
    v32 = (uint64_t *)(v10 + 32 + 16 * v29);
    *v32 = v11;
    v32[1] = v8;
    if (v29)
      break;
    v30 = 1;
LABEL_81:
    v5 = v90;
    v3 = v91;
    if (v8 >= v91)
      goto LABEL_89;
  }
  while (1)
  {
    v33 = v30 - 1;
    if (v30 >= 4)
    {
      v38 = v31 + 16 * v30;
      v39 = *(_QWORD *)(v38 - 64);
      v40 = *(_QWORD *)(v38 - 56);
      v44 = __OFSUB__(v40, v39);
      v41 = v40 - v39;
      if (v44)
        goto LABEL_107;
      v43 = *(_QWORD *)(v38 - 48);
      v42 = *(_QWORD *)(v38 - 40);
      v44 = __OFSUB__(v42, v43);
      v36 = v42 - v43;
      v37 = v44;
      if (v44)
        goto LABEL_108;
      v45 = v30 - 2;
      v46 = (uint64_t *)(v31 + 16 * (v30 - 2));
      v48 = *v46;
      v47 = v46[1];
      v44 = __OFSUB__(v47, v48);
      v49 = v47 - v48;
      if (v44)
        goto LABEL_109;
      v44 = __OFADD__(v36, v49);
      v50 = v36 + v49;
      if (v44)
        goto LABEL_111;
      if (v50 >= v41)
      {
        v68 = (uint64_t *)(v31 + 16 * v33);
        v70 = *v68;
        v69 = v68[1];
        v44 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v44)
          goto LABEL_117;
        v61 = v36 < v71;
        goto LABEL_70;
      }
    }
    else
    {
      if (v30 != 3)
      {
        v62 = *(_QWORD *)(v10 + 32);
        v63 = *(_QWORD *)(v10 + 40);
        v44 = __OFSUB__(v63, v62);
        v55 = v63 - v62;
        v56 = v44;
        goto LABEL_64;
      }
      v35 = *(_QWORD *)(v10 + 32);
      v34 = *(_QWORD *)(v10 + 40);
      v44 = __OFSUB__(v34, v35);
      v36 = v34 - v35;
      v37 = v44;
    }
    if ((v37 & 1) != 0)
      goto LABEL_110;
    v45 = v30 - 2;
    v51 = (uint64_t *)(v31 + 16 * (v30 - 2));
    v53 = *v51;
    v52 = v51[1];
    v54 = __OFSUB__(v52, v53);
    v55 = v52 - v53;
    v56 = v54;
    if (v54)
      goto LABEL_112;
    v57 = (uint64_t *)(v31 + 16 * v33);
    v59 = *v57;
    v58 = v57[1];
    v44 = __OFSUB__(v58, v59);
    v60 = v58 - v59;
    if (v44)
      goto LABEL_114;
    if (__OFADD__(v55, v60))
      goto LABEL_116;
    if (v55 + v60 >= v36)
    {
      v61 = v36 < v60;
LABEL_70:
      if (v61)
        v33 = v45;
      goto LABEL_72;
    }
LABEL_64:
    if ((v56 & 1) != 0)
      goto LABEL_113;
    v64 = (uint64_t *)(v31 + 16 * v33);
    v66 = *v64;
    v65 = v64[1];
    v44 = __OFSUB__(v65, v66);
    v67 = v65 - v66;
    if (v44)
      goto LABEL_115;
    if (v67 < v55)
      goto LABEL_81;
LABEL_72:
    v72 = v10;
    v73 = v33 - 1;
    if (v33 - 1 >= v30)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v9)
      goto LABEL_130;
    v74 = (uint64_t *)(v31 + 16 * v73);
    v75 = *v74;
    v76 = (_QWORD *)(v31 + 16 * v33);
    v77 = v76[1];
    sub_1AE60422C((_QWORD *)(v9 + 8 * *v74), (_QWORD *)(v9 + 8 * *v76), v9 + 8 * v77, v93);
    if (v1)
      break;
    if (v77 < v75)
      goto LABEL_104;
    if (v33 > *(_QWORD *)(v72 + 16))
      goto LABEL_105;
    *v74 = v75;
    *(_QWORD *)(v31 + 16 * v73 + 8) = v77;
    v78 = *(_QWORD *)(v72 + 16);
    if (v33 >= v78)
      goto LABEL_106;
    v10 = v72;
    v30 = v78 - 1;
    memmove((void *)(v31 + 16 * v33), v76 + 2, 16 * (v78 - 1 - v33));
    *(_QWORD *)(v72 + 16) = v78 - 1;
    v9 = v92;
    if (v78 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v91 >= -1)
    goto LABEL_101;
  __break(1u);
LABEL_88:
  v10 = MEMORY[0x1E0DEE9D8];
  v30 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_89:
  if (v30 >= 2)
  {
    v81 = *v89;
    while (1)
    {
      v82 = v30 - 2;
      if (v30 < 2)
        break;
      if (!v81)
        goto LABEL_132;
      v83 = *(_QWORD *)(v10 + 32 + 16 * v82);
      v84 = *(_QWORD *)(v10 + 32 + 16 * (v30 - 1) + 8);
      sub_1AE60422C((_QWORD *)(v81 + 8 * v83), (_QWORD *)(v81 + 8 * *(_QWORD *)(v10 + 32 + 16 * (v30 - 1))), v81 + 8 * v84, v93);
      if (v1)
        goto LABEL_86;
      if (v84 < v83)
        goto LABEL_119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE8893F4();
        v10 = v87;
      }
      if (v82 >= *(_QWORD *)(v10 + 16))
        goto LABEL_120;
      v85 = (_QWORD *)(v10 + 32 + 16 * v82);
      *v85 = v83;
      v85[1] = v84;
      v86 = *(_QWORD *)(v10 + 16);
      if (v30 > v86)
        goto LABEL_121;
      memmove((void *)(v10 + 32 + 16 * (v30 - 1)), (const void *)(v10 + 32 + 16 * v30), 16 * (v86 - v30));
      *(_QWORD *)(v10 + 16) = v86 - 1;
      v30 = v86 - 1;
      if (v86 <= 2)
        goto LABEL_100;
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
    goto LABEL_127;
  }
LABEL_100:
  swift_bridgeObjectRelease();
  if (v91 >= -1)
  {
LABEL_101:
    *(_QWORD *)((v94 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
    sub_1AE9261FC();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
}

uint64_t sub_1AE6041CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      v6 = *(_QWORD *)(v4 + 8 * a3);
      v7 = result;
      v8 = (_QWORD *)v5;
      do
      {
        v9 = *v8;
        if (*(double *)(*v8 + 24) >= *(double *)(v6 + 24))
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 8;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1AE60422C(_QWORD *a1, _QWORD *a2, unint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  BOOL v15;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  BOOL v22;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = (char *)a2 - (char *)a1;
  v9 = a2 - a1;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_1AE5201B0(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v12 = (unint64_t)&v4[v11];
    if (v7 >= v6 || v10 < 8)
      goto LABEL_39;
    v18 = (_QWORD *)(a3 - 8);
    while (1)
    {
      v19 = v18 + 1;
      v20 = *(v6 - 1);
      if (*(double *)(v20 + 24) >= *(double *)(*(_QWORD *)(v12 - 8) + 24))
      {
        v22 = v19 != (_QWORD *)v12 || (unint64_t)v18 >= v12;
        v20 = *(_QWORD *)(v12 - 8);
        v12 -= 8;
        if (!v22)
          goto LABEL_35;
      }
      else
      {
        v21 = v19 != v6 || v18 >= v6;
        --v6;
        if (!v21)
          goto LABEL_35;
      }
      *v18 = v20;
LABEL_35:
      --v18;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_39;
    }
  }
  sub_1AE5201B0(a1, a2 - a1, a4);
  v12 = (unint64_t)&v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      v14 = *v6;
      if (*(double *)(*v4 + 24) < *(double *)(*v6 + 24))
        break;
      v14 = *v4;
      v15 = v7 == v4++;
      if (!v15)
        goto LABEL_11;
LABEL_12:
      ++v7;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_17;
    }
    v15 = v7 == v6++;
    if (v15)
      goto LABEL_12;
LABEL_11:
    *v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  v6 = v7;
LABEL_39:
  sub_1AE5201B0(v4, (uint64_t)(v12 - (_QWORD)v4) / 8, v6);
  return 1;
}

uint64_t sub_1AE6043B8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 128;
  for (i = 10; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t type metadata accessor for EntityResolutionRankingDirectFeedback()
{
  return objc_opt_self();
}

unint64_t sub_1AE604470()
{
  unint64_t result;

  result = qword_1EED9D788;
  if (!qword_1EED9D788)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9449B4, &type metadata for EntityResolutionRankingService.CandidateConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D788);
  }
  return result;
}

unint64_t sub_1AE6044AC()
{
  unint64_t result;

  result = qword_1EED9D790;
  if (!qword_1EED9D790)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944964, &type metadata for EntityResolutionRankingService.CandidateConstraint.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D790);
  }
  return result;
}

unint64_t sub_1AE6044E8()
{
  unint64_t result;

  result = qword_1EED9D798;
  if (!qword_1EED9D798)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionRankingService.CandidateConstraint, &type metadata for EntityResolutionRankingService.CandidateConstraint);
    atomic_store(result, (unint64_t *)&qword_1EED9D798);
  }
  return result;
}

unint64_t sub_1AE604524()
{
  unint64_t result;

  result = qword_1EED9D7A0;
  if (!qword_1EED9D7A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944914, &type metadata for EntityResolutionRankingService.CandidateConstraint.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D7A0);
  }
  return result;
}

unint64_t sub_1AE604560()
{
  unint64_t result;

  result = qword_1EED9D7A8;
  if (!qword_1EED9D7A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9448C4, &type metadata for EntityResolutionRankingService.CandidateConstraint.SubsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D7A8);
  }
  return result;
}

unint64_t sub_1AE60459C()
{
  unint64_t result;

  result = qword_1EED9D7B0;
  if (!qword_1EED9D7B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944874, &type metadata for EntityResolutionRankingService.CandidateConstraint.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D7B0);
  }
  return result;
}

unint64_t sub_1AE6045D8()
{
  unint64_t result;

  result = qword_1EED9D7B8;
  if (!qword_1EED9D7B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944824, &type metadata for EntityResolutionRankingService.CandidateConstraint.HasPredicateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D7B8);
  }
  return result;
}

uint64_t sub_1AE604614()
{
  uint64_t v0;

  sub_1AE5FC4C8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int16 *)(v0 + 48), *(_BYTE *)(v0 + 50));
  sub_1AE5FC4C8(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(unsigned __int16 *)(v0 + 88), *(_BYTE *)(v0 + 90));
  return swift_deallocObject();
}

unint64_t sub_1AE604658()
{
  unint64_t result;

  result = qword_1EED9D7F0;
  if (!qword_1EED9D7F0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionRankingService.CandidateConstraint, &type metadata for EntityResolutionRankingService.CandidateConstraint);
    atomic_store(result, (unint64_t *)&qword_1EED9D7F0);
  }
  return result;
}

void sub_1AE604694(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;

  if (!sub_1AE608038(a1))
  {
    v4 = v3;
    v5 = v2;
    v6 = sub_1AE523CF0(&qword_1EED99540);
    v7 = v5();
    atomic_store(MEMORY[0x1AF454B70](v4, v6, &v7), v1);
  }
  sub_1AE4FE870();
}

uint64_t type metadata accessor for EntityResolutionRankingService.MentionedEntities.MentionedRankedEntities(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EntityResolutionRankingService.MentionedEntities.MentionedRankedEntities);
}

uint64_t sub_1AE6046F8(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1AE60470C(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1AE604720()
{
  unint64_t result;

  result = qword_1EED99218;
  if (!qword_1EED99218)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9447D4, &type metadata for EntityResolutionRankingService.Explanation.Feature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99218);
  }
  return result;
}

unint64_t sub_1AE60475C()
{
  unint64_t result;

  result = qword_1EED99200;
  if (!qword_1EED99200)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944784, &type metadata for EntityResolutionRankingService.Explanation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99200);
  }
  return result;
}

unint64_t sub_1AE604798(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_1AE608038(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = sub_1AE523CF0(&qword_1EED99550);
    sub_1AE604F34(v6);
    v9 = v8;
    result = MEMORY[0x1AF454B70](v5, v7, &v9);
    atomic_store(result, v1);
  }
  return result;
}

uint64_t type metadata accessor for EntityResolutionRankingService.Explanation.Feature()
{
  return objc_opt_self();
}

uint64_t sub_1AE604838(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

uint64_t sub_1AE604848(uint64_t result)
{
  if (result != 1)
    return swift_retain();
  return result;
}

uint64_t type metadata accessor for EntityResolutionRankingService.Explanation()
{
  return objc_opt_self();
}

unint64_t sub_1AE604878()
{
  unint64_t result;

  result = qword_1EED9D850;
  if (!qword_1EED9D850)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944734, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D850);
  }
  return result;
}

unint64_t sub_1AE6048B4()
{
  unint64_t result;

  result = qword_1EED9D858;
  if (!qword_1EED9D858)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9446E4, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.DisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D858);
  }
  return result;
}

unint64_t sub_1AE6048F0()
{
  unint64_t result;

  result = qword_1EED9D870;
  if (!qword_1EED9D870)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944694, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.RejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D870);
  }
  return result;
}

unint64_t sub_1AE60492C()
{
  unint64_t result;

  result = qword_1EED9D878;
  if (!qword_1EED9D878)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944644, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D878);
  }
  return result;
}

unint64_t sub_1AE604968()
{
  unint64_t result;

  result = qword_1EED9D880;
  if (!qword_1EED9D880)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9445F4, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.AppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D880);
  }
  return result;
}

unint64_t sub_1AE6049A4()
{
  unint64_t result;

  result = qword_1EED9D888;
  if (!qword_1EED9D888)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9445A4, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.UnSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D888);
  }
  return result;
}

void sub_1AE6049E0(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!sub_1AE608038(a1))
  {
    v4 = v3;
    v5 = v2;
    v6 = sub_1AE523CF0(&qword_1EED9D860);
    v7 = v5;
    atomic_store(MEMORY[0x1AF454B70](v4, v6, &v7), v1);
  }
  sub_1AE4FE870();
}

uint64_t sub_1AE604A30(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 4u)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1AE604A44()
{
  unint64_t result;

  result = qword_1EED9D8D0;
  if (!qword_1EED9D8D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944554, &type metadata for EntityResolutionRankingStatefulFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D8D0);
  }
  return result;
}

unint64_t sub_1AE604A80()
{
  unint64_t result;

  result = qword_1EED9D8D8;
  if (!qword_1EED9D8D8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionRankingStatefulFeedback.FeedbackKind, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind);
    atomic_store(result, (unint64_t *)&qword_1EED9D8D8);
  }
  return result;
}

uint64_t type metadata accessor for EntityResolutionRankingStatefulFeedback()
{
  return objc_opt_self();
}

unint64_t sub_1AE604ADC()
{
  unint64_t result;

  result = qword_1EED9D8E8;
  if (!qword_1EED9D8E8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionRankingStatefulFeedback.FeedbackKind, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind);
    atomic_store(result, (unint64_t *)&qword_1EED9D8E8);
  }
  return result;
}

unint64_t sub_1AE604B18()
{
  unint64_t result;

  result = qword_1EED9D920;
  if (!qword_1EED9D920)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944504, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D920);
  }
  return result;
}

unint64_t sub_1AE604B54()
{
  unint64_t result;

  result = qword_1EED9D928;
  if (!qword_1EED9D928)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9444B4, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.NeverPresentedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D928);
  }
  return result;
}

unint64_t sub_1AE604B90()
{
  unint64_t result;

  result = qword_1EED9D930;
  if (!qword_1EED9D930)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944464, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D930);
  }
  return result;
}

unint64_t sub_1AE604BCC()
{
  unint64_t result;

  result = qword_1EED9D938;
  if (!qword_1EED9D938)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944414, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.RejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D938);
  }
  return result;
}

unint64_t sub_1AE604C08()
{
  unint64_t result;

  result = qword_1EED9D940;
  if (!qword_1EED9D940)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9443C4, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.EngagedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D940);
  }
  return result;
}

unint64_t sub_1AE604C44()
{
  unint64_t result;

  result = qword_1EED9D948;
  if (!qword_1EED9D948)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944374, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.UnsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D948);
  }
  return result;
}

unint64_t sub_1AE604C80()
{
  unint64_t result;

  result = qword_1EED9D988;
  if (!qword_1EED9D988)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944324, &type metadata for EntityResolutionRankingDirectFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9D988);
  }
  return result;
}

unint64_t sub_1AE604CBC()
{
  unint64_t result;

  result = qword_1EED9D990;
  if (!qword_1EED9D990)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionRankingDirectFeedback.FeedbackKind, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind);
    atomic_store(result, (unint64_t *)&qword_1EED9D990);
  }
  return result;
}

unint64_t sub_1AE604CF8()
{
  unint64_t result;

  result = qword_1EED9D9A0;
  if (!qword_1EED9D9A0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionRankingDirectFeedback.FeedbackKind, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind);
    atomic_store(result, (unint64_t *)&qword_1EED9D9A0);
  }
  return result;
}

unint64_t sub_1AE604D38()
{
  unint64_t result;

  result = qword_1EED9D9A8;
  if (!qword_1EED9D9A8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionRankingService.CandidateConstraint, &type metadata for EntityResolutionRankingService.CandidateConstraint);
    atomic_store(result, (unint64_t *)&qword_1EED9D9A8);
  }
  return result;
}

unint64_t sub_1AE604D78()
{
  unint64_t result;

  result = qword_1EED9D9B0;
  if (!qword_1EED9D9B0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionRankingService.RankingFilter, &type metadata for EntityResolutionRankingService.RankingFilter);
    atomic_store(result, (unint64_t *)&qword_1EED9D9B0);
  }
  return result;
}

unint64_t sub_1AE604DB8()
{
  unint64_t result;

  result = qword_1EED9D9B8;
  if (!qword_1EED9D9B8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionRankingService.EntityResolutionMode, &type metadata for EntityResolutionRankingService.EntityResolutionMode);
    atomic_store(result, (unint64_t *)&qword_1EED9D9B8);
  }
  return result;
}

unint64_t sub_1AE604DF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EED9D9C0;
  if (!qword_1EED9D9C0)
  {
    v1 = sub_1AE523CF0(&qword_1EED9D9C8);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EED9D9C0);
  }
  return result;
}

void sub_1AE604E3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1AE604F34((uint64_t)&unk_1EED9D9D0);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1AE604F34((uint64_t)&qword_1EED9BD30);
  *(_QWORD *)(a1 + 16) = v3;
}

unint64_t sub_1AE604E9C()
{
  unint64_t result;

  result = qword_1EED9D9D8;
  if (!qword_1EED9D9D8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionRankingDirectFeedback.FeedbackKind, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind);
    atomic_store(result, (unint64_t *)&qword_1EED9D9D8);
  }
  return result;
}

void sub_1AE604ED8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1AE604F34((uint64_t)&unk_1EED9D9E0);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1AE604F34((uint64_t)&qword_1EED9BD28);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1AE604F34(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!sub_1AE608038(a1))
  {
    v4 = v3;
    v5 = v2();
    atomic_store(MEMORY[0x1AF454B70](v4, v5), v1);
  }
  sub_1AE4F6664();
}

void sub_1AE604F68(uint64_t *a1@<X8>)
{
  *a1 = sub_1AE6016D8();
  sub_1AE4F6664();
}

uint64_t sub_1AE604F90(uint64_t a1)
{
  uint64_t v1;

  sub_1AE4FFC38();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t method lookup function for EntityResolutionRankingService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntityResolutionRankingService.__allocating_init(config:viewService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.resolveEntitiesInStructuredData(_:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v5 = (_QWORD *)sub_1AE4F933C();
  *(_QWORD *)(v2 + 16) = v5;
  sub_1AE506298(v5, (uint64_t)sub_1AE607D1C);
  return v7(a1, a2);
}

uint64_t dispatch thunk of EntityResolutionRankingService.rankEntities(_:options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.similarity(entity1:entity2:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.recordStatefulFeedback(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v3 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v1 + 16) = v3;
  sub_1AE506298(v3, (uint64_t)sub_1AE607CF8);
  return v5(a1);
}

uint64_t dispatch thunk of EntityResolutionRankingService.recordDirectFeedback(engaged:rejected:ignored:neverPresented:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  sub_1AE608130();
  v1 = (_QWORD *)sub_1AE4F933C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE607DD0(v1, (uint64_t)sub_1AE605120);
  return v3(v2);
}

uint64_t sub_1AE605120()
{
  uint64_t v0;

  sub_1AE4FFC38();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void type metadata accessor for EntityResolutionRankingService.Configuration()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE605158()
{
  return sub_1AE6057D8();
}

uint64_t *sub_1AE605164(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1AE60521C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE60527C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE6052E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1AE605344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE6053A8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFE)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      if ((v13 + 1) >= 2)
        return v13;
      else
        return 0;
    }
    else
    {
      return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1AE605424 + 4 * byte_1AE942A69[v11]))();
  }
}

void sub_1AE6054AC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1AE605598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFE)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (a2 > 0x7FFFFFFE)
      {
        *v8 = 0;
        *(_DWORD *)v8 = a2 - 0x7FFFFFFF;
      }
      else
      {
        *v8 = a2;
      }
    }
    else
    {
      return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t type metadata accessor for EntityResolutionRankingService.UnresolvedMentions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EntityResolutionRankingService.UnresolvedMentions);
}

uint64_t destroy for EntityResolutionRankingService.CandidateConstraint(uint64_t a1)
{
  return sub_1AE5FC4C8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int16 *)(a1 + 32), *(_BYTE *)(a1 + 34));
}

uint64_t initializeWithCopy for EntityResolutionRankingService.CandidateConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 34);
  v8 = *(unsigned __int16 *)(a2 + 32);
  sub_1AE5FC3EC(*(_QWORD *)a2, v4, v5, v6, v8, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 34) = v7;
  return a1;
}

uint64_t assignWithCopy for EntityResolutionRankingService.CandidateConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 34);
  v8 = *(unsigned __int16 *)(a2 + 32);
  sub_1AE5FC3EC(*(_QWORD *)a2, v4, v5, v6, v8, v7);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v13 = *(unsigned __int16 *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v8;
  v14 = *(_BYTE *)(a1 + 34);
  *(_BYTE *)(a1 + 34) = v7;
  sub_1AE5FC4C8(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for EntityResolutionRankingService.CandidateConstraint(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char v11;

  v3 = *(_WORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 34);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  v10 = *(unsigned __int16 *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 34);
  *(_BYTE *)(a1 + 34) = v4;
  sub_1AE5FC4C8(v5, v7, v6, v8, v10, v11);
  return a1;
}

void type metadata accessor for EntityResolutionRankingService.CandidateConstraint()
{
  sub_1AE4F67D4();
}

uint64_t type metadata accessor for EntityResolutionRankingService.MentionedEntities(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EntityResolutionRankingService.MentionedEntities);
}

uint64_t sub_1AE6057CC()
{
  return sub_1AE6057D8();
}

uint64_t sub_1AE6057D8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AE605848(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1AE605904(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE605944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE6059AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_1AE605A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1AE605A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_1AE605AE8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1AE605B64 + 4 * byte_1AE942A78[v11]))();
  }
}

void sub_1AE605BE4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1AE605CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        v9 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v9 = (a2 - 1);
      }
      *v8 = v9;
    }
    else
    {
      return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t destroy for EntityResolutionRankingService.RankingOptions(uint64_t a1)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 42) != 255)
  {
    v2 = *(unsigned __int16 *)(a1 + 40) | (*(unsigned __int8 *)(a1 + 42) << 16);
    sub_1AE5FC4C8(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), v2, SBYTE2(v2));
  }
  return sub_1AE60470C(*(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for EntityResolutionRankingService.RankingOptions(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  unsigned __int8 v5;
  int v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a2 + 42);
  v6 = *(unsigned __int16 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    v7 = *(_OWORD *)(a2 + 24);
    *v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
    *(_DWORD *)(a1 + 39) = *(_DWORD *)(a2 + 39);
  }
  else
  {
    v8 = v6 & 0xFF00FFFF | (v5 << 16);
    v9 = *(_QWORD *)(a2 + 8);
    v10 = *(_QWORD *)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 32);
    sub_1AE5FC3EC(v9, v10, v11, v12, v8, SBYTE2(v8));
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    *(_QWORD *)(a1 + 32) = v12;
    *(_WORD *)(a1 + 40) = v8;
    *(_BYTE *)(a1 + 42) = BYTE2(v8);
  }
  v13 = *(_QWORD *)(a2 + 48);
  v14 = *(_BYTE *)(a2 + 56);
  sub_1AE6046F8(v13, v14);
  *(_QWORD *)(a1 + 48) = v13;
  *(_BYTE *)(a1 + 56) = v14;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t assignWithCopy for EntityResolutionRankingService.RankingOptions(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  int v6;
  char v7;
  __int128 v8;
  __int128 v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 8);
  v5 = (__int128 *)(a2 + 8);
  v6 = *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16);
  v7 = *(_BYTE *)(a2 + 42);
  if (*(unsigned __int8 *)(a1 + 42) == 255)
  {
    if (*(unsigned __int8 *)(a2 + 42) == 255)
    {
      v8 = *v5;
      v9 = *(_OWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 39) = *(_DWORD *)(a2 + 39);
      *v4 = v8;
      *(_OWORD *)(a1 + 24) = v9;
    }
    else
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(_QWORD *)(a2 + 16);
      v14 = *(_QWORD *)(a2 + 24);
      v15 = *(_QWORD *)(a2 + 32);
      sub_1AE5FC3EC(v12, v13, v14, v15, *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16), v7);
      *(_QWORD *)(a1 + 8) = v12;
      *(_QWORD *)(a1 + 16) = v13;
      *(_QWORD *)(a1 + 24) = v14;
      *(_QWORD *)(a1 + 32) = v15;
      *(_WORD *)(a1 + 40) = v6;
      *(_BYTE *)(a1 + 42) = BYTE2(v6);
    }
  }
  else if (*(unsigned __int8 *)(a2 + 42) == 255)
  {
    sub_1AE5FC910(a1 + 8);
    v10 = *(_DWORD *)(a2 + 39);
    v11 = *(_OWORD *)(a2 + 24);
    *v4 = *v5;
    *(_OWORD *)(a1 + 24) = v11;
    *(_DWORD *)(a1 + 39) = v10;
  }
  else
  {
    v16 = *(_QWORD *)(a2 + 8);
    v17 = *(_QWORD *)(a2 + 16);
    v18 = *(_QWORD *)(a2 + 24);
    v19 = *(_QWORD *)(a2 + 32);
    sub_1AE5FC3EC(v16, v17, v18, v19, *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16), v7);
    v20 = *(_QWORD *)(a1 + 8);
    v21 = *(_QWORD *)(a1 + 16);
    v22 = *(_QWORD *)(a1 + 24);
    v23 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(a1 + 8) = v16;
    *(_QWORD *)(a1 + 16) = v17;
    *(_QWORD *)(a1 + 24) = v18;
    *(_QWORD *)(a1 + 32) = v19;
    v24 = *(unsigned __int16 *)(a1 + 40);
    *(_WORD *)(a1 + 40) = v6;
    v25 = *(_BYTE *)(a1 + 42);
    *(_BYTE *)(a1 + 42) = BYTE2(v6);
    sub_1AE5FC4C8(v20, v21, v22, v23, v24, v25);
  }
  v26 = *(_QWORD *)(a2 + 48);
  v27 = *(_BYTE *)(a2 + 56);
  sub_1AE6046F8(v26, v27);
  v28 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v26;
  v29 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v27;
  sub_1AE60470C(v28, v29);
  v30 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v30;
  return a1;
}

uint64_t assignWithTake for EntityResolutionRankingService.RankingOptions(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 42) != 255)
  {
    v4 = *(unsigned __int16 *)(a2 + 40) | (*(unsigned __int8 *)(a2 + 42) << 16);
    if (HIWORD(v4) <= 0xFEu)
    {
      v6 = *(unsigned __int16 *)(a1 + 40) | (*(unsigned __int8 *)(a1 + 42) << 16);
      v7 = *(_QWORD *)(a1 + 8);
      v8 = *(_QWORD *)(a1 + 16);
      v9 = *(_QWORD *)(a1 + 24);
      v10 = *(_QWORD *)(a1 + 32);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_WORD *)(a1 + 40) = v4;
      *(_BYTE *)(a1 + 42) = BYTE2(v4);
      sub_1AE5FC4C8(v7, v8, v9, v10, v6, SBYTE2(v6));
      goto LABEL_6;
    }
    sub_1AE5FC910(a1 + 8);
  }
  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 39) = *(_DWORD *)(a2 + 39);
LABEL_6:
  v11 = *(_BYTE *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v13 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v11;
  sub_1AE60470C(v12, v13);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityResolutionRankingService.RankingOptions(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 73))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityResolutionRankingService.RankingOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void type metadata accessor for EntityResolutionRankingService.RankingOptions()
{
  sub_1AE4F67D4();
}

uint64_t initializeBufferWithCopyOfBuffer for EntityResolutionRankingService.RankingType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1AE6046F8(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for EntityResolutionRankingService.RankingType(uint64_t a1)
{
  return sub_1AE60470C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void assignWithCopy for EntityResolutionRankingService.RankingType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1AE60673C(a1, a2, a3, (void (*)(_QWORD, _QWORD))sub_1AE6046F8, (void (*)(uint64_t, uint64_t))sub_1AE60470C);
}

uint64_t assignWithTake for EntityResolutionRankingService.RankingType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1AE60470C(v4, v5);
  return a1;
}

void type metadata accessor for EntityResolutionRankingService.RankingType()
{
  sub_1AE4F67D4();
}

void type metadata accessor for EntityResolutionRankingService.RankingFilter()
{
  sub_1AE4F67D4();
}

uint64_t getEnumTagSinglePayload for InferenceServiceCachePolicy(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for InferenceServiceCachePolicy(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1AE6062C0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1AE6062DC(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 8) = v2;
  return result;
}

void type metadata accessor for EntityResolutionRankingService.RankingMode()
{
  sub_1AE4F67D4();
}

void type metadata accessor for EntityResolutionRankingService.EntityResolutionMode()
{
  sub_1AE4F67D4();
}

uint64_t method lookup function for EntityResolutionRankingService.Explanation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntityResolutionRankingService.Explanation.__allocating_init(positiveContributions:negativeContributions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.Explanation.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for EntityResolutionRankingService.Explanation.Feature()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntityResolutionRankingService.Explanation.Feature.__allocating_init(name:value:zScore:importance:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.Explanation.Feature.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

_QWORD *initializeBufferWithCopyOfBuffer for EntityResolutionRankingService.RankedEntities(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void _s20IntelligencePlatform30EntityResolutionRankingServiceC14RankedEntitiesVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_1AE4F6624();
}

_QWORD *assignWithTake for EntityResolutionRankingService.RankedEntities(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void type metadata accessor for EntityResolutionRankingService.RankedEntities()
{
  sub_1AE4F67D4();
}

uint64_t type metadata accessor for EntityResolutionRankingService.RankedEntities.ScoredEntity()
{
  return objc_opt_self();
}

uint64_t method lookup function for EntityResolutionRankingService.RankedEntities.ScoredEntity()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntityResolutionRankingService.RankedEntities.ScoredEntity.__allocating_init(id:score:explanation:inferenceEventId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.RankedEntities.ScoredEntity.entityRelevanceExplanation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.RankedEntities.ScoredEntity.entityRelevanceExplanation.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of EntityResolutionRankingService.RankedEntities.ScoredEntity.entityRelevanceExplanation.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t sub_1AE606484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 1 >= 3)
  {
    if (a5)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE6064D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 1 >= 3)
  {
    if (a5)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void type metadata accessor for StructuredInput()
{
  sub_1AE4F67D4();
}

uint64_t _s20IntelligencePlatform15StructuredInputV4DataOwxx_0(uint64_t a1)
{
  return sub_1AE6064D8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

void _s20IntelligencePlatform15StructuredInputV4DataOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_1AE508F7C(a1, a2);
  *(_QWORD *)v2 = v3;
  *(_QWORD *)(v2 + 8) = v4;
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)(v2 + 24) = v6;
  *(_BYTE *)(v2 + 32) = v7;
  sub_1AE4FCDD0();
}

void _s20IntelligencePlatform15StructuredInputV4DataOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  sub_1AE508F7C(a1, a2);
  v8 = *(_QWORD *)v2;
  v9 = *(_QWORD *)(v2 + 8);
  v10 = *(_QWORD *)(v2 + 16);
  v11 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)v2 = v3;
  *(_QWORD *)(v2 + 8) = v4;
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)(v2 + 24) = v6;
  v12 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v2 + 32) = v7;
  sub_1AE6064D8(v8, v9, v10, v11, v12);
  sub_1AE4FCDD0();
}

void _s20IntelligencePlatform15StructuredInputV4DataOwta_0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1AE6064D8(v4, v6, v5, v7, v9);
  sub_1AE4F6664();
}

uint64_t _s20IntelligencePlatform15StructuredInputV4DataOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return sub_1AE5FC17C(-1);
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 33))
    return sub_1AE5FC17C(*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 > 3)
    return sub_1AE5FC17C(v3 ^ 0xFF);
  else
    return sub_1AE5FC17C(-1);
}

uint64_t storeEnumTagSinglePayload for InferenceServerErrorInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AE606694(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1AE60669C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

void type metadata accessor for StructuredInput.Data()
{
  sub_1AE4F67D4();
}

uint64_t method lookup function for EntityResolutionRankingStatefulFeedback()
{
  return swift_lookUpClassMethod();
}

uint64_t initializeBufferWithCopyOfBuffer for EntityResolutionRankingStatefulFeedback.FeedbackKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1AE606704(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1AE606704(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 4u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for EntityResolutionRankingStatefulFeedback.FeedbackKind(uint64_t a1)
{
  return sub_1AE604A30(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void assignWithCopy for EntityResolutionRankingStatefulFeedback.FeedbackKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1AE60673C(a1, a2, a3, (void (*)(_QWORD, _QWORD))sub_1AE606704, (void (*)(uint64_t, uint64_t))sub_1AE604A30);
}

void sub_1AE60673C(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *a2;
  v8 = *((_BYTE *)a2 + 8);
  a4(*a2, v8);
  v9 = *a1;
  *a1 = v7;
  v10 = *((unsigned __int8 *)a1 + 8);
  *((_BYTE *)a1 + 8) = v8;
  a5(v9, v10);
  sub_1AE4F6624();
}

uint64_t assignWithTake for EntityResolutionRankingStatefulFeedback.FeedbackKind(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1AE604A30(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityResolutionRankingStatefulFeedback.FeedbackKind(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 4)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityResolutionRankingStatefulFeedback.FeedbackKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AE606848(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1AE606850(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

void type metadata accessor for EntityResolutionRankingStatefulFeedback.FeedbackKind()
{
  sub_1AE4F67D4();
}

uint64_t method lookup function for EntityResolutionRankingDirectFeedback()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntityResolutionRankingDirectFeedback.variant.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of EntityResolutionRankingDirectFeedback.processImmediately.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of EntityResolutionRankingDirectFeedback.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

void type metadata accessor for EntityResolutionRankingDirectFeedback.FeedbackKind()
{
  sub_1AE4F67D4();
}

ValueMetadata *type metadata accessor for EntityResolutionRankingDirectFeedback.CodingKeys()
{
  return &type metadata for EntityResolutionRankingDirectFeedback.CodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingDirectFeedback.FeedbackKind.CodingKeys()
{
  return &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.CodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingDirectFeedback.FeedbackKind.UnsetCodingKeys()
{
  return &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.UnsetCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingDirectFeedback.FeedbackKind.EngagedCodingKeys()
{
  return &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.EngagedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingDirectFeedback.FeedbackKind.RejectedCodingKeys()
{
  return &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.RejectedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingDirectFeedback.FeedbackKind.IgnoredCodingKeys()
{
  return &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.IgnoredCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingDirectFeedback.FeedbackKind.NeverPresentedCodingKeys()
{
  return &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.NeverPresentedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingStatefulFeedback.CodingKeys()
{
  return &type metadata for EntityResolutionRankingStatefulFeedback.CodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingStatefulFeedback.FeedbackKind.CodingKeys()
{
  return &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.CodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingStatefulFeedback.FeedbackKind.UnSetCodingKeys()
{
  return &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.UnSetCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingStatefulFeedback.FeedbackKind.AppearedCodingKeys()
{
  return &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.AppearedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingStatefulFeedback.FeedbackKind.AcceptedCodingKeys()
{
  return &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.AcceptedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingStatefulFeedback.FeedbackKind.RejectedCodingKeys()
{
  return &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.RejectedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingStatefulFeedback.FeedbackKind.DisappearedCodingKeys()
{
  return &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.DisappearedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.Explanation.CodingKeys()
{
  return &type metadata for EntityResolutionRankingService.Explanation.CodingKeys;
}

uint64_t _s20IntelligencePlatform30EntityResolutionRankingServiceC20EntityResolutionModeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_1AE5FC17C(-1);
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_1AE5FC17C((*a1 | (v4 << 8)) - 4);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_1AE5FC17C((*a1 | (v4 << 8)) - 4);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_1AE5FC17C((*a1 | (v4 << 8)) - 4);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return sub_1AE5FC17C(v8);
}

uint64_t _s20IntelligencePlatform30EntityResolutionRankingServiceC20EntityResolutionModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AE606A7C + 4 * byte_1AE942A8C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AE606AB0 + 4 * byte_1AE942A87[v4]))();
}

uint64_t sub_1AE606AB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE606ABCLL);
  return result;
}

_BYTE *sub_1AE606AC4(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE606ACCLL);
  return sub_1AE5FC14C((_BYTE *)a1, a2 + 3);
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.Explanation.Feature.CodingKeys()
{
  return &type metadata for EntityResolutionRankingService.Explanation.Feature.CodingKeys;
}

uint64_t _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackC12FeedbackKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AE606B38 + 4 * byte_1AE942A96[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AE606B6C + 4 * byte_1AE942A91[v4]))();
}

uint64_t sub_1AE606B70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE606B78);
  return result;
}

_BYTE *sub_1AE606B80(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE606B88);
  return sub_1AE5FC14C((_BYTE *)a1, a2 + 4);
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.CandidateConstraint.CodingKeys()
{
  return &type metadata for EntityResolutionRankingService.CandidateConstraint.CodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.CandidateConstraint.HasPredicateCodingKeys()
{
  return &type metadata for EntityResolutionRankingService.CandidateConstraint.HasPredicateCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.CandidateConstraint.ExcludeCodingKeys()
{
  return &type metadata for EntityResolutionRankingService.CandidateConstraint.ExcludeCodingKeys;
}

uint64_t _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackC10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE606C08 + 4 * byte_1AE942A9B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE606C28 + 4 * byte_1AE942AA0[v4]))();
}

_BYTE *sub_1AE606C08(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE606C28(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE606C30(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE606C38(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE606C40(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE606C48(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.CandidateConstraint.SubsetCodingKeys()
{
  return &type metadata for EntityResolutionRankingService.CandidateConstraint.SubsetCodingKeys;
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.CandidateConstraint.AndCodingKeys()
{
  return &type metadata for EntityResolutionRankingService.CandidateConstraint.AndCodingKeys;
}

uint64_t _s20IntelligencePlatform30EntityResolutionRankingServiceC13RankingFilterOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE606CC0 + 4 * byte_1AE942AAA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE606CF4 + 4 * byte_1AE942AA5[v4]))();
}

uint64_t sub_1AE606CF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE606D00);
  return result;
}

_BYTE *sub_1AE606D08(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE606D10);
  return sub_1AE5FC14C((_BYTE *)a1, a2 + 1);
}

ValueMetadata *type metadata accessor for EntityResolutionRankingService.CandidateConstraint.OrCodingKeys()
{
  return &type metadata for EntityResolutionRankingService.CandidateConstraint.OrCodingKeys;
}

unint64_t sub_1AE606D34()
{
  unint64_t result;

  result = qword_1EED9DB80;
  if (!qword_1EED9DB80)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9435EC, &type metadata for EntityResolutionRankingService.CandidateConstraint.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DB80);
  }
  return result;
}

unint64_t sub_1AE606D74()
{
  unint64_t result;

  result = qword_1EED9DB88;
  if (!qword_1EED9DB88)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9436A4, &type metadata for EntityResolutionRankingService.CandidateConstraint.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DB88);
  }
  return result;
}

unint64_t sub_1AE606DB4()
{
  unint64_t result;

  result = qword_1EED9DB90;
  if (!qword_1EED9DB90)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94375C, &type metadata for EntityResolutionRankingService.CandidateConstraint.SubsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DB90);
  }
  return result;
}

unint64_t sub_1AE606DF4()
{
  unint64_t result;

  result = qword_1EED9DB98;
  if (!qword_1EED9DB98)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943814, &type metadata for EntityResolutionRankingService.CandidateConstraint.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DB98);
  }
  return result;
}

unint64_t sub_1AE606E34()
{
  unint64_t result;

  result = qword_1EED9DBA0;
  if (!qword_1EED9DBA0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9438CC, &type metadata for EntityResolutionRankingService.CandidateConstraint.HasPredicateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DBA0);
  }
  return result;
}

unint64_t sub_1AE606E74()
{
  unint64_t result;

  result = qword_1EED9DBA8;
  if (!qword_1EED9DBA8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943984, &type metadata for EntityResolutionRankingService.CandidateConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DBA8);
  }
  return result;
}

unint64_t sub_1AE606EB4()
{
  unint64_t result;

  result = qword_1EED9DBB0;
  if (!qword_1EED9DBB0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943A3C, &type metadata for EntityResolutionRankingService.Explanation.Feature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DBB0);
  }
  return result;
}

unint64_t sub_1AE606EF4()
{
  unint64_t result;

  result = qword_1EED9DBB8;
  if (!qword_1EED9DBB8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943AF4, &type metadata for EntityResolutionRankingService.Explanation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DBB8);
  }
  return result;
}

unint64_t sub_1AE606F34()
{
  unint64_t result;

  result = qword_1EED9DBC0;
  if (!qword_1EED9DBC0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943BAC, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.DisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DBC0);
  }
  return result;
}

unint64_t sub_1AE606F74()
{
  unint64_t result;

  result = qword_1EED9DBC8;
  if (!qword_1EED9DBC8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943C64, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.RejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DBC8);
  }
  return result;
}

unint64_t sub_1AE606FB4()
{
  unint64_t result;

  result = qword_1EED9DBD0;
  if (!qword_1EED9DBD0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943D1C, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DBD0);
  }
  return result;
}

unint64_t sub_1AE606FF4()
{
  unint64_t result;

  result = qword_1EED9DBD8;
  if (!qword_1EED9DBD8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943DD4, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.AppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DBD8);
  }
  return result;
}

unint64_t sub_1AE607034()
{
  unint64_t result;

  result = qword_1EED9DBE0;
  if (!qword_1EED9DBE0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943E8C, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.UnSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DBE0);
  }
  return result;
}

unint64_t sub_1AE607074()
{
  unint64_t result;

  result = qword_1EED9DBE8;
  if (!qword_1EED9DBE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943F44, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DBE8);
  }
  return result;
}

unint64_t sub_1AE6070B4()
{
  unint64_t result;

  result = qword_1EED9DBF0;
  if (!qword_1EED9DBF0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943FFC, &type metadata for EntityResolutionRankingStatefulFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DBF0);
  }
  return result;
}

unint64_t sub_1AE6070F4()
{
  unint64_t result;

  result = qword_1EED9DBF8;
  if (!qword_1EED9DBF8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944244, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DBF8);
  }
  return result;
}

unint64_t sub_1AE607134()
{
  unint64_t result;

  result = qword_1EED9DC00;
  if (!qword_1EED9DC00)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9442FC, &type metadata for EntityResolutionRankingDirectFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC00);
  }
  return result;
}

unint64_t sub_1AE607174()
{
  unint64_t result;

  result = qword_1EED9DC08;
  if (!qword_1EED9DC08)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94426C, &type metadata for EntityResolutionRankingDirectFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC08);
  }
  return result;
}

unint64_t sub_1AE6071B4()
{
  unint64_t result;

  result = qword_1EED9DC10;
  if (!qword_1EED9DC10)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944294, &type metadata for EntityResolutionRankingDirectFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC10);
  }
  return result;
}

unint64_t sub_1AE6071F4()
{
  unint64_t result;

  result = qword_1EED9DC18;
  if (!qword_1EED9DC18)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944164, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.UnsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC18);
  }
  return result;
}

unint64_t sub_1AE607234()
{
  unint64_t result;

  result = qword_1EED9DC20;
  if (!qword_1EED9DC20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94418C, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.UnsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC20);
  }
  return result;
}

unint64_t sub_1AE607274()
{
  unint64_t result;

  result = qword_1EED9DC28;
  if (!qword_1EED9DC28)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944114, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.EngagedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC28);
  }
  return result;
}

unint64_t sub_1AE6072B4()
{
  unint64_t result;

  result = qword_1EED9DC30;
  if (!qword_1EED9DC30)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94413C, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.EngagedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC30);
  }
  return result;
}

unint64_t sub_1AE6072F4()
{
  unint64_t result;

  result = qword_1EED9DC38;
  if (!qword_1EED9DC38)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9440C4, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.RejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC38);
  }
  return result;
}

unint64_t sub_1AE607334()
{
  unint64_t result;

  result = qword_1EED9DC40;
  if (!qword_1EED9DC40)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9440EC, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.RejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC40);
  }
  return result;
}

unint64_t sub_1AE607374()
{
  unint64_t result;

  result = qword_1EED9DC48;
  if (!qword_1EED9DC48)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944074, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC48);
  }
  return result;
}

unint64_t sub_1AE6073B4()
{
  unint64_t result;

  result = qword_1EED9DC50;
  if (!qword_1EED9DC50)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94409C, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.IgnoredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC50);
  }
  return result;
}

unint64_t sub_1AE6073F4()
{
  unint64_t result;

  result = qword_1EED9DC58;
  if (!qword_1EED9DC58)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944024, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.NeverPresentedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC58);
  }
  return result;
}

unint64_t sub_1AE607434()
{
  unint64_t result;

  result = qword_1EED9DC60;
  if (!qword_1EED9DC60)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94404C, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.NeverPresentedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC60);
  }
  return result;
}

unint64_t sub_1AE607474()
{
  unint64_t result;

  result = qword_1EED9DC68;
  if (!qword_1EED9DC68)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9441B4, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC68);
  }
  return result;
}

unint64_t sub_1AE6074B4()
{
  unint64_t result;

  result = qword_1EED9DC70;
  if (!qword_1EED9DC70)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9441DC, &type metadata for EntityResolutionRankingDirectFeedback.FeedbackKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC70);
  }
  return result;
}

unint64_t sub_1AE6074F4()
{
  unint64_t result;

  result = qword_1EED9DC78;
  if (!qword_1EED9DC78)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943F6C, &type metadata for EntityResolutionRankingStatefulFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC78);
  }
  return result;
}

unint64_t sub_1AE607534()
{
  unint64_t result;

  result = qword_1EED9DC80;
  if (!qword_1EED9DC80)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943F94, &type metadata for EntityResolutionRankingStatefulFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC80);
  }
  return result;
}

unint64_t sub_1AE607574()
{
  unint64_t result;

  result = qword_1EED9DC88;
  if (!qword_1EED9DC88)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943DFC, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.UnSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC88);
  }
  return result;
}

unint64_t sub_1AE6075B4()
{
  unint64_t result;

  result = qword_1EED9DC90;
  if (!qword_1EED9DC90)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943E24, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.UnSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC90);
  }
  return result;
}

unint64_t sub_1AE6075F4()
{
  unint64_t result;

  result = qword_1EED9DC98;
  if (!qword_1EED9DC98)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943D44, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.AppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DC98);
  }
  return result;
}

unint64_t sub_1AE607634()
{
  unint64_t result;

  result = qword_1EED9DCA0;
  if (!qword_1EED9DCA0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943D6C, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.AppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DCA0);
  }
  return result;
}

unint64_t sub_1AE607674()
{
  unint64_t result;

  result = qword_1EED9DCA8;
  if (!qword_1EED9DCA8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943C8C, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DCA8);
  }
  return result;
}

unint64_t sub_1AE6076B4()
{
  unint64_t result;

  result = qword_1EED9DCB0;
  if (!qword_1EED9DCB0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943CB4, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DCB0);
  }
  return result;
}

unint64_t sub_1AE6076F4()
{
  unint64_t result;

  result = qword_1EED9DCB8;
  if (!qword_1EED9DCB8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943BD4, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.RejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DCB8);
  }
  return result;
}

unint64_t sub_1AE607734()
{
  unint64_t result;

  result = qword_1EED9DCC0;
  if (!qword_1EED9DCC0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943BFC, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.RejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DCC0);
  }
  return result;
}

unint64_t sub_1AE607774()
{
  unint64_t result;

  result = qword_1EED9DCC8;
  if (!qword_1EED9DCC8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943B1C, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.DisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DCC8);
  }
  return result;
}

unint64_t sub_1AE6077B4()
{
  unint64_t result;

  result = qword_1EED9DCD0;
  if (!qword_1EED9DCD0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943B44, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.DisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DCD0);
  }
  return result;
}

unint64_t sub_1AE6077F4()
{
  unint64_t result;

  result = qword_1EED9DCD8;
  if (!qword_1EED9DCD8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943EB4, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DCD8);
  }
  return result;
}

unint64_t sub_1AE607834()
{
  unint64_t result;

  result = qword_1EED9DCE0;
  if (!qword_1EED9DCE0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943EDC, &type metadata for EntityResolutionRankingStatefulFeedback.FeedbackKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DCE0);
  }
  return result;
}

unint64_t sub_1AE607874()
{
  unint64_t result;

  result = qword_1EED99210;
  if (!qword_1EED99210)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943A64, &type metadata for EntityResolutionRankingService.Explanation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99210);
  }
  return result;
}

unint64_t sub_1AE6078B4()
{
  unint64_t result;

  result = qword_1EED99208;
  if (!qword_1EED99208)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943A8C, &type metadata for EntityResolutionRankingService.Explanation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99208);
  }
  return result;
}

unint64_t sub_1AE6078F4()
{
  unint64_t result;

  result = qword_1EED99228;
  if (!qword_1EED99228)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9439AC, &type metadata for EntityResolutionRankingService.Explanation.Feature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99228);
  }
  return result;
}

unint64_t sub_1AE607934()
{
  unint64_t result;

  result = qword_1EED99220;
  if (!qword_1EED99220)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9439D4, &type metadata for EntityResolutionRankingService.Explanation.Feature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99220);
  }
  return result;
}

unint64_t sub_1AE607974()
{
  unint64_t result;

  result = qword_1EED9DCE8;
  if (!qword_1EED9DCE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94383C, &type metadata for EntityResolutionRankingService.CandidateConstraint.HasPredicateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DCE8);
  }
  return result;
}

unint64_t sub_1AE6079B4()
{
  unint64_t result;

  result = qword_1EED9DCF0;
  if (!qword_1EED9DCF0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943864, &type metadata for EntityResolutionRankingService.CandidateConstraint.HasPredicateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DCF0);
  }
  return result;
}

unint64_t sub_1AE6079F4()
{
  unint64_t result;

  result = qword_1EED9DCF8;
  if (!qword_1EED9DCF8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943784, &type metadata for EntityResolutionRankingService.CandidateConstraint.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DCF8);
  }
  return result;
}

unint64_t sub_1AE607A34()
{
  unint64_t result;

  result = qword_1EED9DD00;
  if (!qword_1EED9DD00)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9437AC, &type metadata for EntityResolutionRankingService.CandidateConstraint.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DD00);
  }
  return result;
}

unint64_t sub_1AE607A74()
{
  unint64_t result;

  result = qword_1EED9DD08;
  if (!qword_1EED9DD08)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9436CC, &type metadata for EntityResolutionRankingService.CandidateConstraint.SubsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DD08);
  }
  return result;
}

unint64_t sub_1AE607AB4()
{
  unint64_t result;

  result = qword_1EED9DD10;
  if (!qword_1EED9DD10)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9436F4, &type metadata for EntityResolutionRankingService.CandidateConstraint.SubsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DD10);
  }
  return result;
}

unint64_t sub_1AE607AF4()
{
  unint64_t result;

  result = qword_1EED9DD18;
  if (!qword_1EED9DD18)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943614, &type metadata for EntityResolutionRankingService.CandidateConstraint.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DD18);
  }
  return result;
}

unint64_t sub_1AE607B34()
{
  unint64_t result;

  result = qword_1EED9DD20;
  if (!qword_1EED9DD20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94363C, &type metadata for EntityResolutionRankingService.CandidateConstraint.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DD20);
  }
  return result;
}

unint64_t sub_1AE607B74()
{
  unint64_t result;

  result = qword_1EED9DD28;
  if (!qword_1EED9DD28)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94355C, &type metadata for EntityResolutionRankingService.CandidateConstraint.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DD28);
  }
  return result;
}

unint64_t sub_1AE607BB4()
{
  unint64_t result;

  result = qword_1EED9DD30;
  if (!qword_1EED9DD30)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE943584, &type metadata for EntityResolutionRankingService.CandidateConstraint.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DD30);
  }
  return result;
}

unint64_t sub_1AE607BF4()
{
  unint64_t result;

  result = qword_1EED9DD38;
  if (!qword_1EED9DD38)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9438F4, &type metadata for EntityResolutionRankingService.CandidateConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DD38);
  }
  return result;
}

unint64_t sub_1AE607C34()
{
  unint64_t result;

  result = qword_1EED9DD40;
  if (!qword_1EED9DD40)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94391C, &type metadata for EntityResolutionRankingService.CandidateConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DD40);
  }
  return result;
}

unint64_t sub_1AE607C70()
{
  unint64_t result;

  result = qword_1EED9DD48;
  if (!qword_1EED9DD48)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionRankingService.EntityResolutionMode, &type metadata for EntityResolutionRankingService.EntityResolutionMode);
    atomic_store(result, (unint64_t *)&qword_1EED9DD48);
  }
  return result;
}

uint64_t dispatch thunk of EntityResolutionRankingStatefulFeedback.__allocating_init(from:)()
{
  return dispatch thunk of EntityResolutionRankingService.Explanation.Feature.__allocating_init(from:)();
}

uint64_t dispatch thunk of EntityResolutionRankingDirectFeedback.__allocating_init(from:)()
{
  return dispatch thunk of EntityResolutionRankingService.Explanation.Feature.__allocating_init(from:)();
}

uint64_t dispatch thunk of EntityResolutionRankingStatefulFeedback.encode(to:)()
{
  return dispatch thunk of EntityResolutionRankingDirectFeedback.encode(to:)();
}

uint64_t sub_1AE607D20()
{
  return sub_1AE926D60();
}

void sub_1AE607D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 16) = v2;
  v5 = v0 + 16 * v4;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v1;
}

uint64_t sub_1AE607D40()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE5E996C(v0, v1);
}

uint64_t sub_1AE607D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = v1;
  *(_QWORD *)(v2 - 208) = v0;
  return result;
}

uint64_t sub_1AE607D88()
{
  return sub_1AE92697C();
}

uint64_t sub_1AE607DA8()
{
  return sub_1AE926BC8();
}

uint64_t sub_1AE607DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned int a27)
{
  return sub_1AE5FC4C8(a1, a2, a3, a4, a27, a11);
}

uint64_t sub_1AE607DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32)
{
  return sub_1AE5FC4C8(a1, a2, a3, a4, a32, a27);
}

uint64_t sub_1AE607DD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t sub_1AE607DF0()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE607E18()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE607E28()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE607E38()
{
  return sub_1AE926F34();
}

uint64_t sub_1AE607E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;

  return sub_1AE5FC4C8(a33, *(_QWORD *)(v33 - 176), *(_QWORD *)(v33 - 200), *(_QWORD *)(v33 - 192), *(unsigned int *)(v33 - 180), 4);
}

uint64_t sub_1AE607E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;

  return sub_1AE5FC4C8(a33, *(_QWORD *)(v33 - 176), *(_QWORD *)(v33 - 200), *(_QWORD *)(v33 - 192), *(unsigned int *)(v33 - 180), 3);
}

uint64_t sub_1AE607E80()
{
  return sub_1AE926C70();
}

uint64_t sub_1AE607E88()
{
  return sub_1AE926B98();
}

uint64_t sub_1AE607E94(int a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 208) = a1;
  return v1;
}

uint64_t sub_1AE607EB0()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1AE607EB8()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE607EC0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE607ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 240) + 8))(v1, v0);
}

uint64_t sub_1AE607EE8()
{
  uint64_t v0;

  return v0;
}

void sub_1AE607EF4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1AE607F10(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1AE607F2C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1AE607F48(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1AE607F80()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 72) = *(_QWORD *)(v0 - 112);
}

uint64_t sub_1AE607F8C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE607FB0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE607FC8()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_1AE607FE0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  *(_BYTE *)(v1 - 128) = 0;
  return sub_1AE604658();
}

uint64_t sub_1AE607FF0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE608000()
{
  uint64_t v0;

  return v0 - 72;
}

uint64_t sub_1AE60800C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  return sub_1AE5FC4C8(a1, a2, a3, a4, a5, a33);
}

uint64_t sub_1AE60802C()
{
  return sub_1AE926F34();
}

uint64_t sub_1AE608038(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void sub_1AE608044()
{
  EntityResolutionRankingService.CandidateConstraint.hash(into:)();
}

uint64_t sub_1AE608050()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE608078()
{
  return sub_1AE926AB4();
}

unint64_t sub_1AE608090()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_1AE604B54();
}

unint64_t sub_1AE60809C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 4;
  return sub_1AE6048B4();
}

uint64_t sub_1AE6080A8()
{
  return sub_1AE926988();
}

uint64_t sub_1AE6080B0()
{
  return type metadata accessor for EntityResolutionRankingDirectFeedback();
}

uint64_t sub_1AE6080B8()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1AE6080C4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 3;
  return sub_1AE604B90();
}

unint64_t sub_1AE6080D0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 3;
  return sub_1AE6048F0();
}

unint64_t sub_1AE6080DC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
  return sub_1AE604BCC();
}

unint64_t sub_1AE6080E8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 128) = 2;
  return sub_1AE604560();
}

unint64_t sub_1AE6080F4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 2;
  return sub_1AE60492C();
}

unint64_t sub_1AE608100()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE4F9858(v0, v1);
  return sub_1AE604878();
}

uint64_t sub_1AE60811C()
{
  return swift_willThrow();
}

uint64_t sub_1AE608124()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE608144()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1AE60814C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 1;
  return sub_1AE604C08();
}

unint64_t sub_1AE608158()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 128) = 1;
  return sub_1AE60459C();
}

unint64_t sub_1AE608164()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 1;
  return sub_1AE604968();
}

uint64_t sub_1AE608170()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE60817C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32)
{
  return sub_1AE5FC3EC(a1, a2, a3, a4, a32, a27);
}

uint64_t sub_1AE608188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1AE5FC3EC(a1, a2, a3, a4, v4, 0);
}

uint64_t sub_1AE608194(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1AE521BE0();
    v17 = a2;
    v6 = *(_QWORD *)(a2 + 16);
    v7 = v19;
    if (!v6)
      v6 = v5;
    v18 = v6;
    v8 = (uint64_t *)(a1 + 56);
    do
    {
      v9 = *(v8 - 3);
      v10 = *(v8 - 2);
      v11 = *(v8 - 1);
      v12 = *v8;
      v14 = *(_QWORD *)(v19 + 16);
      v13 = *(_QWORD *)(v19 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1)
        sub_1AE521BE0();
      v8 += 4;
      *(_QWORD *)(v19 + 16) = v14 + 1;
      v15 = v19 + 80 * v14;
      *(_QWORD *)(v15 + 32) = v9;
      *(_QWORD *)(v15 + 40) = v10;
      *(_QWORD *)(v15 + 48) = v11;
      *(_QWORD *)(v15 + 56) = v12;
      *(_QWORD *)(v15 + 64) = 0;
      *(_QWORD *)(v15 + 72) = 0;
      *(_QWORD *)(v15 + 80) = 0;
      *(_QWORD *)(v15 + 88) = v18;
      *(_QWORD *)(v15 + 96) = 0;
      *(_BYTE *)(v15 + 104) = 1;
      --v3;
    }
    while (v3);
    sub_1AE5F676C(v17);
  }
  else
  {
    sub_1AE5F676C(a2);
    return MEMORY[0x1E0DEE9D8];
  }
  return v7;
}

uint64_t sub_1AE6082DC(const void *a1, _BYTE *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[32];

  sub_1AE5FBAC8(v17, a1);
  v11 = a2[139];
  v12 = a2[140];
  v13 = *(_QWORD *)(a4 + 16);
  sub_1AE5FBAC8((void *)(v5 + 16), a1);
  memcpy((void *)(v5 + 144), a2, 0x8BuLL);
  *(_BYTE *)(v5 + 283) = v11;
  *(_BYTE *)(v5 + 284) = v12;
  *(_BYTE *)(v5 + 285) = a5;
  *(_QWORD *)(v5 + 288) = a3;
  *(_BYTE *)(v5 + 296) = v11;
  *(_OWORD *)(v5 + 304) = *(_OWORD *)a4;
  *(_QWORD *)(v5 + 320) = v13;
  sub_1AE5F66B4((uint64_t)v17);
  if (qword_1ED318C58 != -1)
    swift_once();
  v14 = *(_QWORD *)(qword_1ED3274E0 + 16);
  swift_bridgeObjectRetain();
  v15 = sub_1AE81B1E8(v14);
  sub_1AE5F676C((uint64_t)v17);
  *(_QWORD *)(v5 + 328) = v15;
  return v5;
}

uint64_t sub_1AE6083F8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int16 v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _BYTE *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  int v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  unint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  os_log_type_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  os_log_type_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  os_log_type_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  os_log_type_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  __int128 v187;
  __int128 v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  __int128 v192;
  __int128 v193;
  __int16 v194;
  char v195;
  __int128 v196;
  uint64_t v197;
  char v198;
  char v199;
  uint64_t v200;

  v3 = v0;
  v4 = sub_1AE60DB44();
  static NSUserDefaults.ecrRankerResultsMockFile.getter();
  if (v5)
  {
    if (qword_1ED319C70 != -1)
      swift_once();
    v6 = sub_1AE925B6C();
    sub_1AE4FB608(v6, (uint64_t)qword_1ED31AD58);
    v7 = sub_1AE925B54();
    v8 = sub_1AE9265D4();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (_WORD *)sub_1AE4F66A0();
      sub_1AE60DEC8(v9);
      sub_1AE60DD54(&dword_1AE4F2000, v7, v8, "ECR request manager: using mocked results.");
      sub_1AE4F9064();
    }

    v10 = sub_1AE5F4148();
    sub_1AE4F76D8();
  }
  else
  {
    if (qword_1ED319C70 != -1)
      swift_once();
    v11 = sub_1AE925B6C();
    v12 = sub_1AE4FB608(v11, (uint64_t)qword_1ED31AD58);
    sub_1AE508ADC();
    v13 = sub_1AE60DD2C();
    v14 = sub_1AE926604();
    v10 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      v181 = v12;
      v15 = sub_1AE4F66A0();
      v171 = sub_1AE4F66A0();
      v200 = v171;
      *(_DWORD *)v15 = 136315395;
      v17 = *(_QWORD *)(v3 + 48);
      v16 = *(_QWORD *)(v3 + 56);
      sub_1AE4F6708();
      sub_1AE520ED4(v17, v16, (uint64_t)&v200, v18, v19, v20, v21, v22, v140, v148, v155, v164, v171, v181, v187, *((uint64_t *)&v187 + 1), v188, *((uint64_t *)&v188 + 1), v189,
        v190);
      *(_QWORD *)&v187 = v23;
      sub_1AE92676C();
      sub_1AE4F76D8();
      *(_WORD *)(v15 + 12) = 2085;
      v24 = *(_BYTE *)(v3 + 64);
      v25 = *(_WORD *)(v3 + 104);
      v26 = *(_BYTE *)(v3 + 106);
      v27 = *(_QWORD *)(v3 + 128);
      v28 = *(_BYTE *)(v3 + 136);
      v29 = *(_BYTE *)(v3 + 137);
      v30 = *(_OWORD *)(v3 + 32);
      v187 = *(_OWORD *)(v3 + 16);
      v188 = v30;
      v189 = v17;
      v190 = v16;
      v191 = v24;
      v192 = *(_OWORD *)(v3 + 72);
      v193 = *(_OWORD *)(v3 + 88);
      v195 = v26;
      v194 = v25;
      v196 = *(_OWORD *)(v3 + 112);
      v197 = v27;
      v198 = v28;
      v199 = v29;
      EntityResolutionRequest.description.getter();
      sub_1AE520ED4(v31, v32, (uint64_t)&v200, v33, v34, v35, v36, v37, v141, v149, v156, v165, v172, v182, v187, *((uint64_t *)&v187 + 1), v188, *((uint64_t *)&v188 + 1), v17,
        v16);
      *(_QWORD *)&v187 = v38;
      sub_1AE92676C();
      sub_1AE4FC7FC();
      sub_1AE4F9038();
      sub_1AE60DD84(&dword_1AE4F2000, v13, (os_log_type_t)v10, "ECR Request Submitted -- %s : %{sensitive}s", (uint8_t *)v15);
      sub_1AE506580();
      sub_1AE4F9064();
    }

    sub_1AE4FC7FC();
    sub_1AE60DDF8();
    v39 = sub_1AE608CE0();
    if (!v1)
    {
      v42 = v39;
      v43 = v40;
      LODWORD(v164) = v41;
      sub_1AE4F6A24();
      sub_1AE508ADC();
      sub_1AE60DD2C();
      v44 = sub_1AE5062C0();
      if (sub_1AE505B04(v44))
      {
        v173 = v42;
        v45 = sub_1AE4F66A0();
        v157 = sub_1AE4F66A0();
        *(_DWORD *)v45 = 136315394;
        v46 = sub_1AE4F6708();
        sub_1AE507524(v46, v47, v48, v49, v50, v51, v52, v53, v140, v148, v157, v164, v173, v12, v157, *((uint64_t *)&v187 + 1), v188, *((uint64_t *)&v188 + 1), v189,
          v190);
        sub_1AE60DE5C(v54);
        sub_1AE92676C();
        sub_1AE60DEB0();
        sub_1AE4F76D8();
        *(_WORD *)(v45 + 12) = 2080;
        if (v43)
          v55 = v174;
        else
          v55 = 0;
        if (v43)
          v56 = v43;
        else
          v56 = 0xE000000000000000;
        sub_1AE4FB764();
        sub_1AE520ED4(v55, v56, (uint64_t)&v187, v57, v58, v59, v60, v61, v142, v150, v158, v166, v174, v183, v187, *((uint64_t *)&v187 + 1), v188, *((uint64_t *)&v188 + 1), v189,
          v190);
        v200 = v62;
        sub_1AE92676C();
        sub_1AE4F6824();
        swift_bridgeObjectRelease();
        sub_1AE60DD84(&dword_1AE4F2000, v4, (os_log_type_t)v2, "Preprocessed text -- %s : %s", (uint8_t *)v45);
        sub_1AE506580();
        sub_1AE4F9064();
      }

      sub_1AE4F6824();
      sub_1AE4FC7FC();
      sub_1AE60DDF8();
      v65 = sub_1AE609370(v63, v64);
      sub_1AE508ADC();
      sub_1AE4F6A24();
      sub_1AE60DD2C();
      v66 = sub_1AE5062C0();
      v151 = v43;
      v175 = v42;
      if (sub_1AE505B04(v66))
      {
        LODWORD(v155) = v2;
        v67 = sub_1AE4F66A0();
        v143 = sub_1AE4F66A0();
        *(_DWORD *)v67 = 136315394;
        v68 = sub_1AE4F6708();
        sub_1AE507524(v68, v69, v70, v71, v72, v73, v74, v75, v143, v43, v155, v164, v42, v12, v143, *((uint64_t *)&v187 + 1), v188, *((uint64_t *)&v188 + 1), v189,
          v190);
        v200 = v76;
        sub_1AE92676C();
        sub_1AE60DEB0();
        sub_1AE4F76D8();
        *(_WORD *)(v67 + 12) = 2080;
        v77 = swift_bridgeObjectRetain();
        v78 = MEMORY[0x1AF453400](v77, &type metadata for Mention);
        v80 = v79;
        sub_1AE4F6728();
        sub_1AE520ED4(v78, v80, (uint64_t)&v187, v81, v82, v83, v84, v85, v144, v152, v159, v167, v176, v184, v187, *((uint64_t *)&v187 + 1), v188, *((uint64_t *)&v188 + 1), v189,
          v190);
        v200 = v86;
        sub_1AE92676C();
        sub_1AE4F6824();
        sub_1AE4F6710();
        sub_1AE60DD84(&dword_1AE4F2000, v4, v160, "Mentions -- %s : %s", (uint8_t *)v67);
        sub_1AE506580();
        sub_1AE4F9064();
      }

      sub_1AE4F6824();
      sub_1AE4FC7FC();
      sub_1AE60DDF8();
      sub_1AE609E2C(v87, v88, v89);
      v168 = (uint64_t)v65;
      sub_1AE508ADC();
      sub_1AE4F6A24();
      sub_1AE60DD2C();
      v90 = sub_1AE5062C0();
      if (sub_1AE4F698C(v90))
      {
        v91 = sub_1AE4F66A0();
        v161 = sub_1AE4F66A0();
        *(_QWORD *)&v187 = v161;
        *(_DWORD *)v91 = 136315394;
        LODWORD(v140) = v42;
        v92 = sub_1AE4F6708();
        sub_1AE507524(v92, v93, v94, v95, v96, v97, v98, v99, v140, v43, v161, (uint64_t)v65, v42, v180, v187, *((uint64_t *)&v187 + 1), v188, *((uint64_t *)&v188 + 1), v189,
          v190);
        sub_1AE60DE5C(v100);
        sub_1AE92676C();
        sub_1AE4FC7FC();
        sub_1AE4F76D8();
        *(_WORD *)(v91 + 12) = 2080;
        v101 = type metadata accessor for PopulatedCandidatesForMention();
        v102 = sub_1AE4FB764();
        v103 = MEMORY[0x1AF453400](v102, v101);
        v105 = v104;
        sub_1AE4F6710();
        sub_1AE520ED4(v103, v105, (uint64_t)&v187, v106, v107, v108, v109, v110, v145, v153, v162, v169, v177, v12, v187, *((uint64_t *)&v187 + 1), v188, *((uint64_t *)&v188 + 1), v189,
          v190);
        v200 = v111;
        sub_1AE92676C();
        sub_1AE4F6824();
        sub_1AE4F67AC();
        sub_1AE60DD84(&dword_1AE4F2000, v4, v146, "Candidates retrieved -- %s : %s", (uint8_t *)v91);
        sub_1AE506580();
        sub_1AE4F9064();
      }

      sub_1AE4F6824();
      sub_1AE4FC7FC();
      v112 = v43;
      sub_1AE60DDF8();
      v10 = (uint64_t)sub_1AE60A9F0(v113, v114, v115, v116);
      sub_1AE4F67AC();
      sub_1AE4F6710();
      sub_1AE508ADC();
      sub_1AE4F6A24();
      sub_1AE60DD2C();
      v118 = sub_1AE5062C0();
      if (sub_1AE4F698C(v118))
      {
        v119 = sub_1AE4F66A0();
        v185 = sub_1AE4F66A0();
        *(_QWORD *)&v187 = v185;
        *(_DWORD *)v119 = 136315394;
        v120 = *(_QWORD *)(v3 + 48);
        v121 = *(_QWORD *)(v3 + 56);
        sub_1AE4FB764();
        sub_1AE520ED4(v120, v121, (uint64_t)&v187, v122, v123, v124, v125, v126, v140, v151, v155, v168, v175, v185, v187, *((uint64_t *)&v187 + 1), v188, *((uint64_t *)&v188 + 1), v189,
          v190);
        v200 = v127;
        sub_1AE92676C();
        sub_1AE4FC7FC();
        sub_1AE4F6710();
        *(_WORD *)(v119 + 12) = 2080;
        LODWORD(v178) = v112;
        v128 = swift_bridgeObjectRetain();
        v129 = MEMORY[0x1AF453400](v128, &type metadata for RerankedEntitiesForMention);
        v131 = v130;
        sub_1AE4F6728();
        sub_1AE520ED4(v129, v131, (uint64_t)&v187, v132, v133, v134, v135, v136, v147, v154, v163, v170, v178, v186, v187, *((uint64_t *)&v187 + 1), v188, *((uint64_t *)&v188 + 1), v189,
          v190);
        v200 = v137;
        sub_1AE92676C();
        sub_1AE4F6824();
        swift_bridgeObjectRelease();
        sub_1AE60DD84(&dword_1AE4F2000, v4, v179, "Ranked results -- %s : %s", (uint8_t *)v119);
        sub_1AE506580();
        sub_1AE4F9064();
      }

      sub_1AE4F6824();
      sub_1AE4FC7FC();
      if (*(_BYTE *)(v3 + 285) == 1)
      {
        sub_1AE60DDF8();
        sub_1AE60AE78(v138, v139);
        sub_1AE4F76D8();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  return v10;
}

uint64_t sub_1AE608CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_signpost_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  os_signpost_id_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v36;
  int64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD v57[11];
  __int128 v58;
  __int16 v59;
  _OWORD v60[3];
  uint64_t v61;
  _QWORD *v62;

  v1 = v0;
  v2 = sub_1AE925AE8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v47 - v7;
  v9 = sub_1AE925B6C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1AE925B0C();
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for LogSignpost();
  MEMORY[0x1E0C80A78](v50);
  v62 = (uint64_t *)((char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED31C728 != -1)
    swift_once();
  v16 = sub_1AE4FB608(v9, (uint64_t)qword_1ED31C710);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v16, v9);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v17 = sub_1AE925B00();
  v18 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v48 = v6;
    v20 = v3;
    v21 = v2;
    v22 = v19;
    *(_WORD *)v19 = 0;
    v23 = sub_1AE925AD0();
    _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v17, v18, v23, "ECR.Manager.preprocess", "", v22, 2u);
    v24 = v22;
    v2 = v21;
    v3 = v20;
    v6 = v48;
    MEMORY[0x1AF454C78](v24, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_1AE925B3C();
  swift_allocObject();
  v25 = sub_1AE925B30();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  v26 = (uint64_t)v62;
  *v62 = "ECR.Manager.preprocess";
  *(_QWORD *)(v26 + 8) = 22;
  *(_BYTE *)(v26 + 16) = 2;
  *(_QWORD *)(v26 + 24) = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v26 + *(int *)(v50 + 24), v14, v52);
  v27 = *(_QWORD *)(v1 + 16);
  v28 = *(_QWORD *)(v1 + 24);
  memcpy(v57, (const void *)(v1 + 32), 0x50uLL);
  v29 = *(_QWORD *)(v1 + 112);
  v58 = *(_OWORD *)(v1 + 120);
  v59 = *(_WORD *)(v1 + 136);
  v55 = v27;
  v56 = v28;
  v57[10] = v29;
  sub_1AE5EEC38();
  if ((v30 & 1) == 0)
  {
    if (v29)
    {
      v36 = *(_QWORD *)(v29 + 16);
      v37 = *(_QWORD *)(v1 + 176);
      v38 = *(unsigned __int8 *)(v1 + 184);
      if (v38 == 1)
      {
        if (v36 <= 0x64)
          goto LABEL_20;
      }
      else if (v37 >= (uint64_t)v36)
      {
        goto LABEL_20;
      }
      v55 = 0;
      v56 = 0xE000000000000000;
      sub_1AE92691C();
      sub_1AE925F74();
      v53 = v36;
      sub_1AE926D18();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      v53 = v37;
      v54 = v38;
      sub_1AE501548(&qword_1EED9DD58);
      sub_1AE925E90();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      v40 = v55;
      v41 = v56;
      sub_1AE5716CC();
      swift_allocError();
      *(_QWORD *)v39 = v40;
      *(_QWORD *)(v39 + 8) = v41;
      goto LABEL_24;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  if (!v28)
    goto LABEL_21;
  v31 = HIBYTE(v28) & 0xF;
  if ((v28 & 0x2000000000000000) == 0)
    v31 = v27 & 0xFFFFFFFFFFFFLL;
  if (!v31)
  {
LABEL_21:
    sub_1AE5716CC();
    swift_allocError();
    *(_OWORD *)v39 = xmmword_1AE944A10;
LABEL_24:
    *(_BYTE *)(v39 + 16) = 2;
    swift_willThrow();
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  v32 = sub_1AE56FBF8(v27, v28);
  v34 = v33;
  swift_bridgeObjectRelease();
  if (v34)
  {
    if (v32 == 32 && v34 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AE926D60();
      swift_bridgeObjectRelease();
    }
  }
  v42 = *(_OWORD *)(v1 + 160);
  v60[0] = *(_OWORD *)(v1 + 144);
  v60[1] = v42;
  v60[2] = *(_OWORD *)(v1 + 176);
  v61 = *(_QWORD *)(v1 + 192);
  swift_bridgeObjectRetain();
  sub_1AE893ED8((uint64_t *)v60, (uint64_t)&v55);
  v43 = v57[5];
  v44 = v49;
  v45 = sub_1AE89416C(v27, v28);
  if (!v44)
    v27 = v45;
  swift_bridgeObjectRelease();
  sub_1AE60DC10(v43);
LABEL_29:
  sub_1AE60D8EC(v26);
  sub_1AE555C64(v26, (uint64_t (*)(_QWORD))type metadata accessor for LogSignpost);
  return v27;
}

_BYTE *sub_1AE609370(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t);
  NSObject *v20;
  os_signpost_type_t v21;
  char v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  NSObject *v43;
  int v44;
  _BOOL4 v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  unint64_t v56;
  uint8_t *v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint8_t *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint8_t *v81;
  uint64_t v82;
  _BYTE v83[4];
  int v84;
  os_log_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD v96[16];
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned __int8 v106;
  _QWORD __dst[16];
  char v108[8];
  uint64_t v109;

  v3 = v2;
  v86 = a1;
  v87 = a2;
  v93 = sub_1AE925AE8();
  v4 = *(_QWORD *)(v93 - 8);
  v5 = MEMORY[0x1E0C80A78](v93);
  v7 = &v83[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v83[-v8];
  v10 = sub_1AE925B6C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v83[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1AE925B0C();
  v91 = *(_QWORD *)(v14 - 8);
  v92 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = &v83[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v90 = type metadata accessor for LogSignpost();
  MEMORY[0x1E0C80A78](v90);
  v95 = &v83[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED31C728 != -1)
    swift_once();
  v18 = sub_1AE4FB608(v10, (uint64_t)qword_1ED31C710);
  v19 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16);
  v88 = v10;
  v19(v13, v18, v10);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v20 = sub_1AE925B00();
  v21 = sub_1AE926670();
  v22 = sub_1AE926700();
  v94 = v3;
  if ((v22 & 1) != 0)
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    v24 = sub_1AE925AD0();
    _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v20, v21, v24, "ECR.Manager.mengen", "", v23, 2u);
    v25 = v23;
    v3 = v94;
    MEMORY[0x1AF454C78](v25, -1, -1);
  }

  v26 = v93;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v7, v9, v93);
  sub_1AE925B3C();
  swift_allocObject();
  v27 = sub_1AE925B30();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v26);
  v28 = v95;
  *v95 = "ECR.Manager.mengen";
  v28[1] = 18;
  *((_BYTE *)v28 + 16) = 2;
  v28[3] = v27;
  (*(void (**)(char *, _BYTE *, uint64_t))(v91 + 32))((char *)v28 + *(int *)(v90 + 24), v16, v92);
  CFAbsoluteTimeGetCurrent();
  memcpy(__dst, (const void *)(v3 + 16), 0x7AuLL);
  memcpy(v96, (const void *)(v3 + 16), 0x7AuLL);
  sub_1AE5EEDE8();
  v29 = v98;
  if (v98 != 1)
  {
    v37 = v97;
    v38 = v100;
    v39 = v101;
    v86 = v99;
    v87 = v102;
    v40 = v103;
    v92 = v105;
    v93 = v104;
    v41 = v106;
    v42 = v88;
    if (qword_1ED319C70 != -1)
      swift_once();
    sub_1AE4FB608(v42, (uint64_t)qword_1ED31AD58);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43 = sub_1AE925B54();
    v44 = sub_1AE926604();
    v45 = os_log_type_enabled(v43, (os_log_type_t)v44);
    v91 = v39;
    LODWORD(v90) = v41;
    if (v45)
    {
      v84 = v44;
      v85 = v43;
      v88 = v38;
      v46 = v37;
      v47 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v47 = 134217984;
      v48 = v40;
      if (v39)
        v49 = *(_QWORD *)(v39 + 16);
      else
        v49 = 0;
      v96[0] = v49;
      sub_1AE92676C();
      v63 = v86;
      v64 = v87;
      v65 = v88;
      sub_1AE60DBBC(v46, v29);
      v43 = v85;
      _os_log_impl(&dword_1AE4F2000, v85, (os_log_type_t)v84, "ECR request manager: generate structured mentions for %ld IDs.", v47, 0xCu);
      v71 = v47;
      v37 = v46;
      MEMORY[0x1AF454C78](v71, -1, -1);
    }
    else
    {
      v48 = v40;
      v63 = v86;
      v64 = v87;
      sub_1AE60DBBC(v37, v29);
      v65 = v38;
    }

    sub_1AE501548((uint64_t *)&unk_1ED30FDE8);
    v59 = swift_allocObject();
    v16 = (_BYTE *)v59;
    *(_OWORD *)(v59 + 16) = xmmword_1AE934250;
    *(_QWORD *)(v59 + 32) = v37;
    *(_QWORD *)(v59 + 40) = v29;
    *(_QWORD *)(v59 + 48) = v63;
    *(_QWORD *)(v59 + 56) = v65;
    *(_QWORD *)(v59 + 64) = v91;
    *(_QWORD *)(v59 + 72) = v64;
    v72 = v93;
    *(_QWORD *)(v59 + 80) = v48;
    *(_QWORD *)(v59 + 88) = v72;
    *(_QWORD *)(v59 + 96) = v92;
    v62 = v90;
    goto LABEL_35;
  }
  memcpy(v96, __dst, 0x7AuLL);
  sub_1AE5EF1F8();
  v30 = v98;
  if (v98 != 1)
  {
    v50 = v97;
    v51 = v99;
    v52 = v100;
    v53 = v101;
    v92 = v103;
    v93 = v102;
    v90 = v105;
    v91 = v104;
    LODWORD(v87) = v106;
    if (qword_1ED319C70 != -1)
      swift_once();
    sub_1AE4FB608(v88, (uint64_t)qword_1ED31AD58);
    v54 = sub_1AE925B54();
    v55 = sub_1AE926604();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = v51;
      v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v57 = 0;
      _os_log_impl(&dword_1AE4F2000, v54, v55, "ECR request manager: generate semi-structured mentions.", v57, 2u);
      v58 = v57;
      v51 = v56;
      MEMORY[0x1AF454C78](v58, -1, -1);
    }

    sub_1AE501548((uint64_t *)&unk_1ED30FDE8);
    v59 = swift_allocObject();
    v16 = (_BYTE *)v59;
    *(_OWORD *)(v59 + 16) = xmmword_1AE934250;
    *(_QWORD *)(v59 + 32) = v50;
    *(_QWORD *)(v59 + 40) = v30;
    *(_QWORD *)(v59 + 48) = v51;
    *(_QWORD *)(v59 + 56) = v52;
    v60 = v93;
    *(_QWORD *)(v59 + 64) = v53;
    *(_QWORD *)(v59 + 72) = v60;
    v61 = v91;
    *(_QWORD *)(v59 + 80) = v92;
    *(_QWORD *)(v59 + 88) = v61;
    *(_QWORD *)(v59 + 96) = v90;
    v62 = v87;
LABEL_35:
    *(_BYTE *)(v59 + 104) = v62 & 1;
LABEL_36:
    v67 = v94;
    goto LABEL_37;
  }
  memcpy(v96, __dst, 0x7AuLL);
  sub_1AE5F66B4((uint64_t)__dst);
  sub_1AE5EEC38();
  v31 = v88;
  if ((v32 & 1) != 0)
  {
    sub_1AE578C7C((uint64_t)&__dst[3], (uint64_t)v108, &qword_1ED30FC58);
    sub_1AE578C7C((uint64_t)v108, (uint64_t)&v109, &qword_1ED30FC58);
    v33 = v109;
    if (v109)
    {
      sub_1AE5F66B4((uint64_t)__dst);
      v16 = (_BYTE *)sub_1AE608194(v33, (uint64_t)__dst);
      sub_1AE5F676C((uint64_t)__dst);
      if (qword_1ED319C70 != -1)
        swift_once();
      sub_1AE4FB608(v31, (uint64_t)qword_1ED31AD58);
      swift_bridgeObjectRetain();
      v34 = sub_1AE925B54();
      v35 = sub_1AE926604();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v36 = 134217984;
        v96[0] = *((_QWORD *)v16 + 2);
        sub_1AE92676C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AE4F2000, v34, v35, "ECR request manager: generate %ld preset mentions.", v36, 0xCu);
        MEMORY[0x1AF454C78](v36, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease();
      }
      goto LABEL_36;
    }
  }
  sub_1AE5F676C((uint64_t)__dst);
  v66 = v89;
  v67 = v94;
  v68 = v87;
  if (!v87)
    goto LABEL_51;
  v69 = __dst[2] ? __dst[2] : MEMORY[0x1E0DEE9D8];
  if (*(_BYTE *)(v94 + 256))
  {
    if (*(_BYTE *)(v94 + 256) == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1AE820F58(v86, v68, v69);
      if (v66)
      {
        swift_bridgeObjectRelease();
LABEL_42:
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
      v16 = v70;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1AE821414(v86, v68);
      if (v66)
        goto LABEL_42;
      v16 = v76;
    }
  }
  else
  {
    v75 = sub_1AE820E84(v86, v87, v69);
    if (v66)
    {
      swift_bridgeObjectRetain();
      goto LABEL_42;
    }
    v16 = (_BYTE *)v75;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  if (!v16)
  {
LABEL_51:
    sub_1AE5716CC();
    swift_allocError();
    *(_QWORD *)v82 = 0xD00000000000002FLL;
    *(_QWORD *)(v82 + 8) = 0x80000001AE980600;
    *(_BYTE *)(v82 + 16) = 3;
    swift_willThrow();
    goto LABEL_37;
  }
  v77 = *((_QWORD *)v16 + 2);
  sub_1AE5DEA60(v77);
  if (qword_1ED319C70 != -1)
    swift_once();
  sub_1AE4FB608(v31, (uint64_t)qword_1ED31AD58);
  swift_bridgeObjectRetain();
  v78 = sub_1AE925B54();
  v79 = sub_1AE926604();
  if (os_log_type_enabled(v78, v79))
  {
    v80 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v80 = 134217984;
    v96[0] = v77;
    sub_1AE92676C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AE4F2000, v78, v79, "ECR request manager: generate %ld mentions from unstructured input.", v80, 0xCu);
    v81 = v80;
    v67 = v94;
    MEMORY[0x1AF454C78](v81, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
LABEL_37:
  v73 = v95;
  sub_1AE60B4E8(v67, (uint64_t)v95, 1);
  sub_1AE555C64((uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for LogSignpost);
  return v16;
}

uint64_t sub_1AE609E2C(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  NSObject *v20;
  os_signpost_type_t v21;
  char *v22;
  uint64_t v23;
  uint8_t *v24;
  os_signpost_id_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v50;
  BOOL v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t result;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  unsigned int v75;
  unsigned int v76;
  unint64_t v77;
  int v78;
  __int128 v79;
  unsigned int v80;
  __int128 v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  __int16 v99;
  char v100;
  char *v101;
  __int128 v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  __int128 v106;
  char v107;
  uint64_t v108;

  v4 = v3;
  LODWORD(v89) = a3;
  LODWORD(v87) = a2;
  v72 = a1;
  v94 = sub_1AE925AE8();
  v93 = *(_QWORD *)(v94 - 8);
  v5 = MEMORY[0x1E0C80A78](v94);
  v7 = (unint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (uint64_t)&v62 - v8;
  v10 = sub_1AE925B6C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_1AE925B0C();
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v15 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for LogSignpost();
  MEMORY[0x1E0C80A78](v90);
  v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED31C728 != -1)
LABEL_57:
    swift_once();
  v18 = sub_1AE4FB608(v10, (uint64_t)qword_1ED31C710);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v65 = v10;
  v19(v13, v18, v10);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v20 = sub_1AE925B00();
  v21 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v22 = v17;
    v23 = v4;
    v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v24 = 0;
    v25 = sub_1AE925AD0();
    _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v20, v21, v25, "ECR.Manager.cangen", "", v24, 2u);
    v26 = v24;
    v4 = v23;
    v17 = v22;
    MEMORY[0x1AF454C78](v26, -1, -1);
  }

  v11 = v93;
  v27 = v94;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v93 + 16))(v7, v9, v94);
  sub_1AE925B3C();
  swift_allocObject();
  v28 = sub_1AE925B30();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v27);
  *(_QWORD *)v17 = "ECR.Manager.cangen";
  *((_QWORD *)v17 + 1) = 18;
  v17[16] = 2;
  *((_QWORD *)v17 + 3) = v28;
  v29 = *(int *)(v90 + 24);
  v68 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 32))(&v17[v29], v15, v92);
  CFAbsoluteTimeGetCurrent();
  v108 = MEMORY[0x1E0DEE9D8];
  v10 = v72;
  v13 = *(char **)(v72 + 16);
  if (v13)
  {
    v7 = *(_QWORD *)(v4 + 288);
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v88 = sub_1AE926AD8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v88 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v17 = 0;
    v30 = 0;
    v31 = v10 + 32;
    v77 = v7 & 0xC000000000000001;
    v76 = v87 & 1;
    v75 = v89 & 1;
    v67 = v4;
    v73 = v7;
    v64 = v13;
    v63 = v10 + 32;
    while (1)
    {
      if (v30 == v13)
      {
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
      if (!v88)
        break;
      v32 = v31 + 80 * (_QWORD)v30;
      v85 = *(_QWORD *)v32;
      v33 = *(_OWORD *)(v32 + 8);
      v82 = *(_QWORD *)(v32 + 24);
      v34 = *(_OWORD *)(v32 + 32);
      v35 = *(_QWORD *)(v32 + 48);
      v36 = *(_OWORD *)(v32 + 56);
      v78 = *(unsigned __int8 *)(v32 + 72);
      v66 = v30 + 1;
      v9 = *(_QWORD *)(v4 + 72);
      v87 = *(_QWORD *)(v4 + 80);
      v86 = *(_QWORD *)(v4 + 88);
      v84 = *(_QWORD *)(v4 + 96);
      v80 = *(unsigned __int16 *)(v4 + 104) | (*(unsigned __int8 *)(v4 + 106) << 16);
      v83 = v33;
      v37 = v33;
      v81 = v34;
      v38 = v34;
      v79 = v36;
      v69 = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71 = v37;
      swift_bridgeObjectRetain();
      v70 = v38;
      swift_bridgeObjectRetain();
      v89 = v35;
      swift_bridgeObjectRetain();
      v91 = 0;
      v11 = 4;
      v74 = (char *)v9;
      do
      {
        if (v77)
        {
          v13 = (char *)MEMORY[0x1AF453B80](v11 - 4, v7);
        }
        else
        {
          v13 = *(char **)(v7 + 8 * v11);
          swift_retain();
        }
        v10 = v87;
        if (__OFADD__(v11 - 4, 1))
        {
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        v93 = v11;
        v92 = v11 - 3;
        v39 = v7;
        v101 = (char *)v85;
        v102 = v83;
        v103 = v82;
        v104 = v81;
        v105 = v89;
        v106 = v79;
        v107 = v78;
        *(_QWORD *)&v96 = v9;
        *((_QWORD *)&v96 + 1) = v87;
        v7 = v86;
        v4 = v9;
        v40 = v84;
        v97 = v86;
        v98 = v84;
        v15 = v80;
        v100 = BYTE2(v80);
        v99 = v80;
        sub_1AE5E1ED4(v4, v87, v86, v84, v80);
        v94 = (uint64_t)v13;
        v41 = v95;
        v42 = sub_1AE5770D0((uint64_t *)&v101, &v96, v76, v75, (uint64_t)sub_1AE57704C, 0);
        v13 = v41;
        if (v41)
        {
          swift_release();
          swift_release();
          sub_1AE5741F8(v4, v10, v7, v40, v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v4 = v67;
          goto LABEL_41;
        }
        v43 = v42;
        sub_1AE5741F8(v4, v10, v7, v40, v15);
        v44 = v91;
        v95 = 0;
        if (v91)
        {
          v90 = (uint64_t)v17;
          swift_beginAccess();
          v15 = *(_QWORD *)(v43 + 16);
          swift_beginAccess();
          v9 = *(_QWORD *)(v15 + 16);
          v17 = *(char **)(v44 + 16);
          v45 = v44;
          v11 = *((_QWORD *)v17 + 2);
          v10 = v11 + v9;
          if (__OFADD__(v11, v9))
            goto LABEL_52;
          v7 = v45;
          swift_retain();
          swift_bridgeObjectRetain();
          if (!swift_isUniquelyReferenced_nonNull_native() || v10 > *((_QWORD *)v17 + 3) >> 1)
          {
            sub_1AE51AE8C();
            v17 = v46;
          }
          if (*(_QWORD *)(v15 + 16))
          {
            v47 = *((_QWORD *)v17 + 2);
            if ((*((_QWORD *)v17 + 3) >> 1) - v47 < v9)
              goto LABEL_54;
            v48 = (unint64_t)&v17[296 * v47 + 32];
            if (v15 + 32 < v48 + 296 * v9 && v48 < v15 + 32 + 296 * v9)
            {
              result = sub_1AE926B20();
              __break(1u);
              return result;
            }
            swift_arrayInitWithCopy();
            if (v9)
            {
              v50 = *((_QWORD *)v17 + 2);
              v51 = __OFADD__(v50, v9);
              v52 = (char *)(v50 + v9);
              if (v51)
                goto LABEL_55;
              *((_QWORD *)v17 + 2) = v52;
            }
          }
          else if (v9)
          {
            goto LABEL_53;
          }
          swift_bridgeObjectRelease();
          *(_QWORD *)(v7 + 16) = v17;
          swift_endAccess();
          swift_release();
          swift_release();
          v17 = (char *)v90;
          v7 = v73;
          v9 = (uint64_t)v74;
        }
        else
        {
          swift_release();
          swift_retain();
          v91 = v43;
          v7 = v39;
          v9 = v4;
        }
        swift_beginAccess();
        v13 = *(char **)(v43 + 16);
        swift_bridgeObjectRetain();
        swift_release();
        v10 = *((_QWORD *)v13 + 2);
        swift_bridgeObjectRelease();
        v51 = __OFADD__(v17, v10);
        v17 += v10;
        v11 = v93;
        if (v51)
          goto LABEL_51;
        v11 = v93 + 1;
      }
      while (v92 != v88);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v53 = swift_retain();
      MEMORY[0x1AF4533D0](v53);
      v11 = *(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v11 >= *(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1AE926220();
      sub_1AE92625C();
      sub_1AE9261FC();
      swift_release();
      v13 = v64;
      v30 = v66;
      v4 = v67;
      v10 = v72;
      v31 = v63;
      if (v66 == v64)
      {
        swift_bridgeObjectRelease();
        goto LABEL_43;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE5716CC();
    swift_allocError();
    *(_QWORD *)v60 = 0xD000000000000024;
    *(_QWORD *)(v60 + 8) = 0x80000001AE9805B0;
    *(_BYTE *)(v60 + 16) = 7;
    swift_willThrow();
LABEL_41:
    v54 = (uint64_t)v68;
    sub_1AE60B4E8(v4, (uint64_t)v68, 2);
    sub_1AE555C64(v54, (uint64_t (*)(_QWORD))type metadata accessor for LogSignpost);
  }
  else
  {
    v17 = 0;
LABEL_43:
    sub_1AE5DEA80((uint64_t)v17);
    v55 = v65;
    if (qword_1ED319C70 != -1)
      swift_once();
    sub_1AE4FB608(v55, (uint64_t)qword_1ED31AD58);
    v56 = sub_1AE925B54();
    v57 = sub_1AE926604();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v58 = 134217984;
      v101 = v17;
      sub_1AE92676C();
      _os_log_impl(&dword_1AE4F2000, v56, v57, "ECR request manager: generate %ld candidate entities.", v58, 0xCu);
      MEMORY[0x1AF454C78](v58, -1, -1);
    }

    v54 = v108;
    v59 = (uint64_t)v68;
    sub_1AE60B4E8(v4, (uint64_t)v68, 2);
    sub_1AE555C64(v59, (uint64_t (*)(_QWORD))type metadata accessor for LogSignpost);
  }
  return v54;
}

char *sub_1AE60A9F0(unint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_signpost_type_t v20;
  uint8_t *v21;
  os_signpost_id_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[15];

  v47 = a4;
  v44 = a3;
  v42 = a2;
  v43 = a1;
  v41 = sub_1AE925AE8();
  v4 = *(_QWORD *)(v41 - 8);
  v5 = MEMORY[0x1E0C80A78](v41);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - v8;
  v10 = sub_1AE925B6C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1AE925B0C();
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for LogSignpost();
  MEMORY[0x1E0C80A78](v38);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED31C728 != -1)
    swift_once();
  v18 = sub_1AE4FB608(v10, (uint64_t)qword_1ED31C710);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v18, v10);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v19 = sub_1AE925B00();
  v20 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    v22 = sub_1AE925AD0();
    _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v19, v20, v22, "ECR.Manager.rerank", "", v21, 2u);
    MEMORY[0x1AF454C78](v21, -1, -1);
  }

  v23 = v41;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v41);
  sub_1AE925B3C();
  swift_allocObject();
  v24 = sub_1AE925B30();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v23);
  *(_QWORD *)v17 = "ECR.Manager.rerank";
  *((_QWORD *)v17 + 1) = 18;
  v17[16] = 2;
  *((_QWORD *)v17 + 3) = v24;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v17[*(int *)(v38 + 24)], v15, v40);
  CFAbsoluteTimeGetCurrent();
  v25 = (_QWORD *)v46;
  v26 = *(_QWORD *)(v46 + 304);
  v27 = *(_QWORD *)(v46 + 312);
  v28 = *(_QWORD *)(v46 + 320);
  LOBYTE(v48) = *(_BYTE *)(v46 + 296);
  v49 = v26;
  v50[0] = v27;
  v50[1] = v28;
  sub_1AE50BA28(v26, v27);
  v29 = v45;
  v30 = sub_1AE5D1DDC(v43, v42 & 1, v44, v47);
  if (v29)
  {
    sub_1AE50BA54(v26, v27);
    goto LABEL_15;
  }
  v7 = (char *)v30;
  sub_1AE50BA54(v26, v27);
  if (!v7)
  {
    sub_1AE5716CC();
    swift_allocError();
    *(_OWORD *)v34 = xmmword_1AE944A20;
    v35 = 9;
LABEL_14:
    *(_BYTE *)(v34 + 16) = v35;
    swift_willThrow();
    goto LABEL_15;
  }
  v32 = v25[2];
  v31 = v25[3];
  memcpy(v50, v25 + 4, 0x6AuLL);
  v48 = v32;
  v49 = v31;
  sub_1AE5EEC38();
  if ((v33 & 1) != 0 && (!v31 || !v47))
  {
    swift_bridgeObjectRelease();
    sub_1AE5716CC();
    swift_allocError();
    *(_QWORD *)v34 = 0xD000000000000019;
    *(_QWORD *)(v34 + 8) = 0x80000001AE980570;
    v35 = 2;
    goto LABEL_14;
  }
LABEL_15:
  sub_1AE60B4E8((uint64_t)v25, (uint64_t)v17, 3);
  sub_1AE555C64((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for LogSignpost);
  return v7;
}

uint64_t sub_1AE60AE78(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  NSString *v15;
  uint64_t (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t);
  id v19;
  void *v20;
  unsigned int v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int16 v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  __int128 v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t);
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t);
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[36];
  _OWORD v71[8];
  _BYTE v72[144];
  id v73[39];

  v62 = a2;
  v3 = v2;
  v61 = a1;
  v73[36] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1AE924780();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v60 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v64 = (char *)&v58 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v58 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v58 - v13;
  v15 = NSTemporaryDirectory();
  sub_1AE925E3C();

  sub_1AE9246FC();
  swift_bridgeObjectRelease();
  sub_1AE924720();
  v16 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v17 = v4;
  v18 = v16;
  v16(v12, v17);
  v19 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1AE92475C();
  v20 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  v73[0] = 0;
  v21 = objc_msgSend(v19, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v20, 1, 0, v73);

  if (!v21)
  {
    v35 = v73[0];
    sub_1AE9246B4();

    swift_willThrow();
    return v18(v14, v17);
  }
  v59 = v18;
  v70[0] = 0;
  v70[1] = 0xE000000000000000;
  v22 = v73[0];
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  v70[0] = 0x65736E6F70736572;
  v70[1] = 0xE90000000000005FLL;
  v23 = *(_QWORD *)(v3 + 48);
  v24 = *(_QWORD *)(v3 + 56);
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  sub_1AE92472C();
  swift_bridgeObjectRelease();
  v25 = *(_BYTE *)(v3 + 64);
  v26 = *(_WORD *)(v3 + 104);
  v27 = *(_BYTE *)(v3 + 106);
  v28 = *(_QWORD *)(v3 + 128);
  v29 = *(_BYTE *)(v3 + 136);
  v30 = *(_BYTE *)(v3 + 137);
  v31 = *(_OWORD *)(v3 + 32);
  v71[0] = *(_OWORD *)(v3 + 16);
  v71[1] = v31;
  *(_QWORD *)&v71[2] = v23;
  *((_QWORD *)&v71[2] + 1) = v24;
  LOBYTE(v71[3]) = v25;
  *(_OWORD *)((char *)&v71[3] + 8) = *(_OWORD *)(v3 + 72);
  *(_OWORD *)((char *)&v71[4] + 8) = *(_OWORD *)(v3 + 88);
  BYTE10(v71[5]) = v27;
  WORD4(v71[5]) = v26;
  v71[6] = *(_OWORD *)(v3 + 112);
  *(_QWORD *)&v71[7] = v28;
  BYTE8(v71[7]) = v29;
  BYTE9(v71[7]) = v30;
  memcpy(v72, (const void *)(v3 + 144), 0x8DuLL);
  memcpy(v73, v71, 0x7AuLL);
  memcpy(&v73[16], (const void *)(v3 + 144), 0x8DuLL);
  v73[34] = v61;
  v73[35] = v62;
  sub_1AE924408();
  swift_allocObject();
  sub_1AE5F66B4((uint64_t)v71);
  sub_1AE5DD3A4((uint64_t)v72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE9243FC();
  memcpy(v70, v73, sizeof(v70));
  sub_1AE60DB80();
  v32 = v63;
  v33 = sub_1AE9243F0();
  if (v32)
  {
    swift_release();
    if (qword_1ED319C70 != -1)
      swift_once();
    v40 = sub_1AE925B6C();
    sub_1AE4FB608(v40, (uint64_t)qword_1ED31AD58);
    v41 = v32;
    v42 = v32;
    v43 = sub_1AE925B54();
    v44 = sub_1AE9265EC();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v62 = (void *)swift_slowAlloc();
      v70[0] = v62;
      v63 = (void *)v17;
      *(_DWORD *)v45 = 136315138;
      v61 = v45 + 4;
      swift_getErrorValue();
      v46 = sub_1AE926E20();
      sub_1AE520ED4(v46, v47, (uint64_t)v70, v48, v49, v50, v51, v52, v58, (unint64_t)v59, v60, (uint64_t)v61, (uint64_t)v62, (uint64_t)v63, (uint64_t)v64, v65, v66, v67, v68,
        v69);
      v65 = v53;
      sub_1AE92676C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1AE4F2000, v43, v44, "Failed to write session logger JSON data: %s", v45, 0xCu);
      v54 = v62;
      swift_arrayDestroy();
      MEMORY[0x1AF454C78](v54, -1, -1);
      MEMORY[0x1AF454C78](v45, -1, -1);
      sub_1AE5F6CE8((uint64_t)v73);

      v55 = (uint64_t)v63;
      v56 = v59;
      v59(v64, (uint64_t)v63);
      return v56(v14, v55);
    }
    sub_1AE5F6CE8((uint64_t)v73);

    v57 = (void (*)(uint64_t, uint64_t))v59;
    v59(v64, v17);
  }
  else
  {
    v37 = v33;
    v38 = v34;
    swift_release();
    sub_1AE92475C();
    v39 = v60;
    sub_1AE9246FC();
    swift_bridgeObjectRelease();
    sub_1AE92484C();
    sub_1AE50BDB4(v37, v38);
    sub_1AE5F6CE8((uint64_t)v73);
    v57 = (void (*)(uint64_t, uint64_t))v59;
    v59((char *)v39, v17);
    v57((uint64_t)v64, v17);
  }
  return ((uint64_t (*)(char *, uint64_t))v57)(v14, v17);
}

uint64_t sub_1AE60B4E8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  NSObject *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  _WORD *v22;
  os_signpost_id_t v23;
  os_signpost_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  char v29;

  v7 = sub_1AE925B18();
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F9024();
  v25 = v9;
  v10 = sub_1AE60DED4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1AE509948();
  v12 = (uint8_t *)sub_1AE925B0C();
  v13 = *((_QWORD *)v12 - 1);
  MEMORY[0x1E0C80A78](v12);
  sub_1AE5009EC();
  sub_1AE5DE938(a3);
  v14 = type metadata accessor for LogSignpost();
  (*(void (**)(uint64_t, uint64_t, uint8_t *))(v13 + 16))(v4, a2 + *(int *)(v14 + 24), v12);
  v28 = *(const char **)a2;
  v15 = *(_BYTE *)(a2 + 16);
  swift_retain();
  v16 = sub_1AE925B00();
  sub_1AE925B24();
  v24 = sub_1AE926664();
  result = sub_1AE926700();
  if ((result & 1) == 0)
  {
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v10);
    return (*(uint64_t (**)(uint64_t, uint8_t *))(v13 + 8))(v4, v12);
  }
  if ((v15 & 1) == 0)
  {
    if (v28)
    {
      v19 = v26;
      v18 = v27;
      v20 = v25;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v28 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v28 >> 11 != 27)
  {
    v19 = v26;
    v18 = v27;
    v20 = v25;
    if (v28 >> 16 <= 0x10)
    {
      v28 = &v29;
LABEL_9:
      swift_retain();
      sub_1AE925B48();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v19 + 88))(v20, v18) == *MEMORY[0x1E0DF2190])
      {
        v21 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v18);
        v21 = "";
      }
      v22 = (_WORD *)sub_1AE4F69B0();
      sub_1AE60DEC8(v22);
      v23 = sub_1AE925AD0();
      _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v16, v24, v23, v28, v21, v12, 2u);
      sub_1AE4F9064();
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t *sub_1AE60B760()
{
  uint64_t *v0;
  _BYTE v2[128];
  _BYTE __dst[144];

  memcpy(v2, v0 + 2, 0x7AuLL);
  sub_1AE5F676C((uint64_t)v2);
  memcpy(__dst, v0 + 18, 0x8DuLL);
  sub_1AE5DD3EC((uint64_t)__dst);
  swift_bridgeObjectRelease();
  sub_1AE50BA54(v0[38], v0[39]);
  swift_release();
  return v0;
}

uint64_t sub_1AE60B7D0()
{
  sub_1AE60B760();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityResolutionRequestManager()
{
  return objc_opt_self();
}

uint64_t sub_1AE60B810(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = sub_1AE9255FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1AE924780();
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t))(v8 + 16))((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DC6700], v2);
  return sub_1AE9255C0();
}

void sub_1AE60B91C(NSObject *a1, const void *a2, uint64_t a3, uint64_t *a4, uint64_t *a5, _QWORD *a6, uint64_t a7, uint64_t a8, const char **a9, uint64_t a10, char a11)
{
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  const char *v68;
  const char *v69;
  unint64_t v70;
  const char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  void *v75;
  uint64_t v76;
  _WORD *v77;
  os_signpost_id_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  os_log_type_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  const void *v94;
  os_log_type_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  os_log_type_t v101;
  _WORD *v102;
  uint64_t v103;
  uint64_t v104;
  const char *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  os_log_type_t v109;
  _BOOL4 v110;
  _WORD *v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  void *v154;
  void *v155;
  id v156;
  id v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  id v181;
  _QWORD *v182[3];
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  const char *v199;
  const char *v200;
  uint64_t v201;
  char *v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  const char *v208;
  unint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  int v225;
  int v226;
  int v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  NSObject *v236;
  const void *v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD *v240;
  uint64_t v241;
  const char *v242;
  unint64_t v243;
  unint64_t v244;
  const char *v245;
  uint64_t v246;
  char *v247;
  _OWORD v248[2];
  char v249;
  _OWORD v250[2];
  char v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  _OWORD v258[2];
  char v259;
  _QWORD v260[3];
  __int128 v261;
  __int128 v262;
  unint64_t v263;
  _QWORD v264[16];
  _QWORD v265[7];
  _QWORD v266[13];
  _BYTE v267[16];
  uint64_t v268;
  _BYTE v269[120];
  _QWORD *v270;
  uint64_t v271;
  unsigned __int8 v272;
  unsigned __int8 v273;
  unsigned __int8 v274;
  uint64_t v275;

  v221 = a3;
  v218 = a8;
  v239 = a7;
  v240 = a6;
  v236 = a1;
  v237 = a2;
  v275 = *MEMORY[0x1E0C80C00];
  v210 = a5;
  sub_1AE578C7C((uint64_t)a5, (uint64_t)v265, &qword_1ED30FB18);
  v182[0] = (_QWORD *)v265[0];
  v182[1] = (_QWORD *)v265[2];
  v182[2] = (_QWORD *)v265[3];
  v209 = v265[6];
  sub_1AE501548((uint64_t *)&unk_1EED94CB0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE60DD60(v17, (uint64_t)v182[0]);
  v18 = sub_1AE924780();
  v193 = *(_QWORD *)(v18 - 8);
  v194 = v18;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE4F9024();
  v192 = v20;
  sub_1AE9255D8();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v21);
  sub_1AE4F9024();
  v191 = v22;
  sub_1AE501548((uint64_t *)&unk_1ED30FB98);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v23);
  sub_1AE4F686C();
  v213 = v24;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v25);
  sub_1AE4F6A60();
  v212 = v26;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v27);
  sub_1AE4F6A60();
  v198 = v28;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v29);
  sub_1AE4F6A60();
  v197 = v30;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v31);
  sub_1AE4F6A60();
  v196 = v32;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v33);
  sub_1AE4F6A60();
  v195 = v34;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v35);
  sub_1AE4F6A60();
  v190 = v36;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v37);
  sub_1AE4F6A60();
  v189 = v38;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v39);
  sub_1AE4F6A60();
  v216 = v40;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v41);
  sub_1AE5094B0();
  v215 = v42;
  sub_1AE501548(&qword_1ED319260);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v43);
  sub_1AE4F9024();
  v238 = v44;
  v229 = type metadata accessor for SearchableViewDatabaseTable();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v45);
  sub_1AE4F686C();
  v211 = v46;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v47);
  sub_1AE4F6A60();
  v224 = v48;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v49);
  sub_1AE4F6A60();
  v214 = v50;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v51);
  sub_1AE5094B0();
  v230 = v52;
  v53 = sub_1AE60DED4();
  v234 = *(_QWORD *)(v53 - 8);
  v235 = v53;
  sub_1AE4F6630();
  v55 = MEMORY[0x1E0C80A78](v54);
  v57 = (char *)v182 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v55);
  v58 = sub_1AE60DD8C();
  v59 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  sub_1AE5009EC();
  v60 = sub_1AE925B0C();
  v232 = *(_QWORD *)(v60 - 8);
  v233 = v60;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v61);
  v231 = sub_1AE5079C0();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v62);
  sub_1AE4F9024();
  v219 = v63;
  sub_1AE5FBAC8(v267, v236);
  sub_1AE4FFF90(v269, v237);
  v220 = *a4;
  v64 = a4[1];
  v187 = a4[2];
  v188 = v64;
  v65 = a4[3];
  v185 = a4[4];
  v186 = v65;
  v66 = a4[5];
  v183 = a4[6];
  v184 = v66;
  v67 = v240[1];
  v205 = *v240;
  v206 = v67;
  v68 = *a9;
  v207 = v240[2];
  v208 = v68;
  v69 = a9[1];
  v70 = (unint64_t)a9[2];
  v203 = (unint64_t)a9[3];
  v204 = v70;
  v71 = a9[4];
  v199 = v69;
  v200 = v71;
  v72 = (char *)a9[6];
  v201 = (uint64_t)a9[5];
  v202 = v72;
  if (qword_1ED31C728 != -1)
    swift_once();
  v73 = sub_1AE4FB608(v58, (uint64_t)qword_1ED31C710);
  v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16);
  v223 = v58;
  v74(v14, v73, v58);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v75 = (void *)sub_1AE925B00();
  v76 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v77 = (_WORD *)sub_1AE4F66A0();
    v78 = sub_1AE60DE4C(v77);
    sub_1AE60DDCC(&dword_1AE4F2000, v79, (os_signpost_type_t)v76, v78, "ECR.Manager.initWithViews", "");
    sub_1AE4F9064();
  }

  v81 = v234;
  v80 = v235;
  (*(void (**)(char *, uint64_t, uint64_t))(v234 + 16))(v57, v12, v235);
  sub_1AE925B3C();
  sub_1AE4FCE84();
  v82 = sub_1AE925B30();
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v12, v80);
  v83 = v219;
  *v219 = "ECR.Manager.initWithViews";
  v83[1] = 25;
  *((_BYTE *)v83 + 16) = 2;
  v83[3] = v82;
  sub_1AE60DF2C((uint64_t)v83 + *(int *)(v231 + 24), v232);
  sub_1AE5062A4();
  v240 = v270;
  v228 = v271;
  v227 = v272;
  v225 = v274;
  v226 = v273;
  v87 = v238;
  v88 = v223;
  v89 = v220;
  if (v273 == 1)
  {
    sub_1AE578C7C((uint64_t)v210, (uint64_t)v266, &qword_1ED30FB18);
    v11 = v266[0];
    if (v266[0])
    {
      v91 = v266[1];
      v76 = v266[2];
      v92 = v266[3];
      v93 = v266[4];
      v82 = v266[5];
      v94 = (const void *)v266[6];
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      v86 = v91;
      v13 = v94;
      v85 = v92;
      v84 = v93;
      v88 = v223;
      v87 = v238;
    }
    else
    {
      if (qword_1ED319C70 != -1)
        v90 = swift_once();
      sub_1AE60DD34(v90, (uint64_t)qword_1ED31AD58);
      v95 = sub_1AE4FCF04();
      if (os_log_type_enabled(v82, v95))
      {
        v96 = (uint8_t *)sub_1AE4F66A0();
        *(_WORD *)v96 = 0;
        _os_log_impl(&dword_1AE4F2000, v82, v95, "View(entitySummary) is not available.", v96, 2u);
        sub_1AE4F9064();
      }

      sub_1AE5062A4();
      v87 = v238;
      v89 = v220;
    }
  }
  v232 = v86;
  v233 = v76;
  v266[7] = v86;
  v266[8] = v76;
  v234 = v85;
  v235 = v84;
  v266[9] = v85;
  v266[10] = v84;
  v266[11] = v82;
  v266[12] = v13;
  v209 = sub_1AE60DC3C();
  v97 = sub_1AE925C98();
  v98 = v97;
  v236 = v82;
  v237 = v13;
  if (v89)
  {
    static EntityClass.person.getter();
    v258[0] = v261;
    v258[1] = v262;
    v259 = v263;
    v252 = v188;
    v253 = v187;
    v254 = v186;
    v255 = v185;
    v256 = v184;
    v257 = v183;
    sub_1AE4F81B0();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    v264[0] = v98;
    sub_1AE53A770();
    sub_1AE60DE74();
    sub_1AE525EF8((uint64_t)v258);
    v99 = v223;
    v100 = sub_1AE60DCAC(v220);
  }
  else
  {
    if (qword_1ED319C70 != -1)
      v97 = swift_once();
    v231 = v98;
    sub_1AE60DD34(v97, (uint64_t)qword_1ED31AD58);
    v101 = sub_1AE4FCF04();
    if (sub_1AE4F698C(v101))
    {
      v102 = (_WORD *)sub_1AE4F66A0();
      sub_1AE60DEC8(v102);
      sub_1AE60DD54(&dword_1AE4F2000, v82, v88, "View(peopleSubgraph) is not available.");
      sub_1AE4F9064();
    }

    v99 = v223;
  }
  v220 = a10;
  v103 = v268;
  if (v268)
  {
    if (*(_QWORD *)(v268 + 16) == 1)
    {
      sub_1AE5F66B4((uint64_t)v267);
      static EntityClass.person.getter();
      v250[0] = v261;
      v250[1] = v262;
      v251 = v263;
      sub_1AE56E7D0((uint64_t)v250, v103);
      v103 = v104;
      sub_1AE525EF8((uint64_t)v250);
      v100 = sub_1AE60DD0C();
      if ((v103 & 1) != 0)
      {
        sub_1AE60DCAC((uint64_t)v208);
LABEL_26:
        v107 = v222;
        v108 = v240;
        goto LABEL_32;
      }
    }
  }
  v105 = v208;
  if (v208)
  {
    v99 = v204;
    v242 = v199;
    v243 = v204;
    v244 = v203;
    v245 = v200;
    v11 = v201;
    v246 = v201;
    v247 = v202;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1AE4F81B0();
    sub_1AE60DCAC((uint64_t)v105);
    static EntityClass.entity.getter();
    v248[0] = v261;
    v248[1] = v262;
    v249 = v263;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1AE4F81B0();
    v106 = v231;
    swift_isUniquelyReferenced_nonNull_native();
    v264[0] = v106;
    sub_1AE53A770();
    sub_1AE60DE74();
    sub_1AE525EF8((uint64_t)v248);
    sub_1AE4F6718();
    swift_unknownObjectRelease();
    sub_1AE4F67AC();
    goto LABEL_26;
  }
  if (qword_1ED319C70 != -1)
    v100 = swift_once();
  sub_1AE60DD34(v100, (uint64_t)qword_1ED31AD58);
  v109 = sub_1AE4FCF04();
  v110 = sub_1AE4F698C(v109);
  v107 = v222;
  v108 = v240;
  if (v110)
  {
    v111 = (_WORD *)sub_1AE4F66A0();
    sub_1AE60DEC8(v111);
    sub_1AE60DD54(&dword_1AE4F2000, v103, (os_log_type_t)v99, "Subgraph view is not available");
    sub_1AE4F9064();
  }

LABEL_32:
  v241 = MEMORY[0x1E0DEE9D8];
  v223 = v108[2];
  if (v223)
  {
    sub_1AE4F6708();
    v202 = "ality";
    v203 = 0x80000001AE9750D0;
    v204 = 0x80000001AE9806F0;
    v208 = "semistructuredSearch";
    v112 = *((unsigned __int8 *)v108 + 32);
    if (v112 >> 6)
    {
      if (v112 >> 6 != 1)
      {
        if (v112 != 128)
        {
          v222 = v107;
          if (v112 == 129)
          {
            sub_1AE5FB7B0();
            __asm { BR              X9 }
          }
          sub_1AE5FB7B0();
          __asm { BR              X9 }
        }
        if (qword_1ED31C9B0 != -1)
          swift_once();
        v154 = *(void **)(qword_1ED31C9A0 + OBJC_IVAR___GDSwiftViewService_accessRequester);
        v155 = (void *)sub_1AE925E18();
        *(_QWORD *)&v261 = 0;
        v156 = objc_msgSend(v154, sel_requestAssertionForViewName_error_, v155, &v261);

        if (v156)
        {
          v157 = (id)v261;
          v158 = objc_msgSend(v156, sel_viewArtifactURL);
          v159 = v192;
          sub_1AE924744();

          sub_1AE60B810(v159);
          (*(void (**)(uint64_t, uint64_t))(v193 + 8))(v159, v194);
          sub_1AE9255B4();
          sub_1AE4FCE84();
          v160 = v239;
          v161 = (_QWORD *)sub_1AE925578();
          sub_1AE92559C();
          sub_1AE507DFC();
          if (v160)
          {
            v162 = sub_1AE60DD7C();
            sub_1AE60DDDC(v162, (uint64_t)&off_1E5DC2B98);
            *(_QWORD *)&v261 = v160;
          }
          else
          {
            sub_1AE60DCF8();
          }
          v164 = v189;
          v165 = sub_1AE60DE0C();
          sub_1AE60DDE8(v165, v166, v167);
          v168 = v190;
          v169 = sub_1AE60DD1C();
          sub_1AE60DDE8(v169, v170, v171);
          sub_1AE506950();
          sub_1AE5035B4();
          sub_1AE60DDC4();
          swift_retain();
          sub_1AE4F935C();
          sub_1AE60DF04();
          sub_1AE60DD4C();
          v172 = (uint64_t *)sub_1AE60DE3C();
          sub_1AE60DF24(v172, 128, v173, v174, 0, v11, v164, v168, v161);
          if (!v11)
            sub_1AE60DE24();
          sub_1AE500BC8();
          sub_1AE5094A8();
          sub_1AE507978();
          swift_unknownObjectRelease();
          sub_1AE60DD0C();
          sub_1AE4FECBC();
          sub_1AE60DDBC();
          sub_1AE4FDC48();
          sub_1AE4F9038();
          sub_1AE60DD14();
          swift_release();
          sub_1AE60DDF0();
          goto LABEL_73;
        }
        v181 = (id)v261;
        sub_1AE500BC8();
        sub_1AE5094A8();
        sub_1AE60DD0C();
        sub_1AE4F76D8();
        swift_bridgeObjectRelease();
        sub_1AE4F76D8();
        sub_1AE9246B4();

        goto LABEL_70;
      }
      *((_QWORD *)&v262 + 1) = &type metadata for Features.FeatureFlag;
      v263 = sub_1AE5D7DF8();
      LOBYTE(v261) = 26;
      v113 = sub_1AE9249E4();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v261);
      if ((v113 & 1) == 0)
      {
        sub_1AE500BC8();
        sub_1AE5094A8();
        sub_1AE60DD0C();
        sub_1AE4F76D8();
        sub_1AE4FDC48();
        sub_1AE4F9038();
        sub_1AE5716CC();
        sub_1AE4F6778();
        sub_1AE5093A4();
        *(_QWORD *)v177 = v178 + 36;
        *(_QWORD *)(v177 + 8) = 0x80000001AE9806B0;
        v179 = 8;
LABEL_69:
        *(_BYTE *)(v177 + 16) = v179;
LABEL_70:
        swift_willThrow();
        sub_1AE4FECBC();
LABEL_71:
        sub_1AE60DD14();
LABEL_72:
        swift_release();
        sub_1AE60DDF0();
        goto LABEL_73;
      }
      v114 = v217;
      sub_1AE578FEC(v220, v217, (uint64_t *)&unk_1EED94CB0);
      v115 = type metadata accessor for LemmatizedSubgraphView();
      sub_1AE60DEE0(v115);
      if (!v116)
      {
        v117 = v211;
        sub_1AE57904C(v114 + *(int *)(v113 + 20), v211);
        sub_1AE555C64(v114, (uint64_t (*)(_QWORD))type metadata accessor for LemmatizedSubgraphView);
        sub_1AE572744(v117, v224);
        sub_1AE503588();
        if (v118)
        {
          v119 = sub_1AE60DD7C();
          sub_1AE60DDDC(v119, (uint64_t)&off_1E5DC2B98);
          *(_QWORD *)&v261 = v239;
        }
        else
        {
          sub_1AE60DCF8();
        }
        v140 = v212;
        v141 = sub_1AE60DE0C();
        v142 = v229;
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v141, v143, v144, v229);
        v145 = v213;
        sub_1AE57904C(v224, v213);
        sub_1AE60DF38();
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v146, v147, v148, v142);
        sub_1AE506950();
        sub_1AE5035B4();
        sub_1AE60DDC4();
        swift_retain();
        sub_1AE4F935C();
        sub_1AE60DF04();
        v149 = (uint64_t *)sub_1AE60DDA0();
        sub_1AE60DF24(v149, v150, v151, v152, v153, v11, v140, v145, v182[0]);
        sub_1AE60DF50();
        if (!v11)
          sub_1AE60DE24();
        sub_1AE500BC8();
        sub_1AE5094A8();
        sub_1AE60DD0C();
        sub_1AE4FECBC();
        sub_1AE555C64(v224, (uint64_t (*)(_QWORD))type metadata accessor for SearchableViewDatabaseTable);
        sub_1AE60DDBC();
        sub_1AE4FDC48();
        sub_1AE4F9038();
        sub_1AE60DD14();
        goto LABEL_72;
      }
      sub_1AE524534(v114, (uint64_t *)&unk_1EED94CB0);
      sub_1AE500BC8();
      sub_1AE5094A8();
      sub_1AE60DD0C();
      sub_1AE4F76D8();
      sub_1AE4FDC48();
      sub_1AE4F9038();
      sub_1AE5716CC();
      sub_1AE4F6778();
      sub_1AE5093A4();
      *(_QWORD *)v177 = v180 + 2;
      *(_QWORD *)(v177 + 8) = 0x80000001AE97E8B0;
    }
    else
    {
      sub_1AE578FEC(v221, v87, &qword_1ED319260);
      v120 = type metadata accessor for EntityAliasView();
      sub_1AE60DEE0(v120);
      if (!v116)
      {
        v121 = v214;
        sub_1AE57904C(v87 + *(int *)(v99 + 20), v214);
        sub_1AE555C64(v87, (uint64_t (*)(_QWORD))type metadata accessor for EntityAliasView);
        sub_1AE572744(v121, v230);
        sub_1AE503588();
        if (v122)
        {
          v123 = sub_1AE60DD7C();
          sub_1AE60DDDC(v123, (uint64_t)&off_1E5DC2B98);
          *(_QWORD *)&v261 = v239;
        }
        else
        {
          sub_1AE60DCF8();
        }
        v125 = v215;
        sub_1AE57904C(v230, v215);
        sub_1AE60DF38();
        v126 = v229;
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v127, v128, v129, v229);
        v130 = v216;
        v131 = sub_1AE60DD1C();
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v131, v132, v133, v126);
        sub_1AE506950();
        sub_1AE5035B4();
        sub_1AE60DDC4();
        swift_retain();
        v134 = v231;
        swift_bridgeObjectRetain();
        sub_1AE4F935C();
        v135 = (uint64_t *)sub_1AE60DDA0();
        sub_1AE60DF24(v135, v136, v137, v138, v139, v134, v125, v130, v182[0]);
        sub_1AE60DF50();
        if (!v11)
          sub_1AE60DE24();
        sub_1AE500BC8();
        sub_1AE5094A8();
        sub_1AE60DD0C();
        sub_1AE4FECBC();
        sub_1AE555C64(v230, (uint64_t (*)(_QWORD))type metadata accessor for SearchableViewDatabaseTable);
        sub_1AE60DDBC();
        sub_1AE4FDC48();
        sub_1AE4F9038();
        goto LABEL_71;
      }
      sub_1AE524534(v87, &qword_1ED319260);
      sub_1AE500BC8();
      sub_1AE5094A8();
      sub_1AE60DD0C();
      sub_1AE4F76D8();
      sub_1AE4FDC48();
      sub_1AE4F9038();
      sub_1AE5716CC();
      sub_1AE4F6778();
      *(_OWORD *)v177 = xmmword_1AE944A40;
    }
    v179 = 5;
    goto LABEL_69;
  }
  swift_bridgeObjectRelease();
  sub_1AE5FBAC8(v264, v267);
  sub_1AE4FFF90(&v261, v269);
  v175 = v241;
  v260[0] = v205;
  v260[1] = v206;
  v260[2] = v207;
  swift_allocObject();
  sub_1AE6082DC(v264, &v261, v175, (uint64_t)v260, a11 & 1);
  if (v107)
  {
    sub_1AE4FECBC();
    sub_1AE60DD14();
    sub_1AE60DDF0();
    swift_release();
LABEL_73:
    sub_1AE60DC78(v210);
    sub_1AE524534(v220, (uint64_t *)&unk_1EED94CB0);
    sub_1AE524534(v221, &qword_1ED319260);
    sub_1AE555C64((uint64_t)v219, (uint64_t (*)(_QWORD))type metadata accessor for LogSignpost);
    goto LABEL_74;
  }
  sub_1AE4FECBC();
  v176 = v219;
  sub_1AE60D8EC((uint64_t)v219);
  sub_1AE60DDF0();
  swift_release();
  sub_1AE60DC78(v210);
  sub_1AE524534(v220, (uint64_t *)&unk_1EED94CB0);
  sub_1AE524534(v221, &qword_1ED319260);
  sub_1AE555C64((uint64_t)v176, (uint64_t (*)(_QWORD))type metadata accessor for LogSignpost);
LABEL_74:
  sub_1AE4F667C();
}

void sub_1AE60CF34(const void *a1, const void *a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  os_signpost_type_t v30;
  _WORD *v31;
  os_signpost_id_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  os_unfair_lock_s *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_unfair_lock_s *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t i;
  unsigned int v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  const char *v74;
  const char *v75;
  const char *v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  const char *v93;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  const char *v104[3];
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD v108[3];
  uint64_t v109[3];
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  const char *v113;
  const char *v114;
  const char *v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  NSObject v119[16];
  _QWORD v120[7];
  uint64_t v121[7];
  _BYTE v122[40];
  _BYTE v123[16];
  uint64_t v124;
  _BYTE v125[120];
  uint64_t v126;
  char v127;
  unsigned __int8 v128;
  uint64_t v129;

  v129 = a3;
  sub_1AE501548((uint64_t *)&unk_1EED94CB0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F686C();
  v88 = v8;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F6A60();
  v86 = v10;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE5094B0();
  v89 = v12;
  sub_1AE501548(&qword_1ED319260);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F686C();
  v90 = v14;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F6A60();
  v85 = v16;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE5094B0();
  v91 = v18;
  v19 = sub_1AE60DED4();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  sub_1AE4F686C();
  v101 = v21;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v22);
  v23 = sub_1AE60DD8C();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  sub_1AE509948();
  v98 = *(_QWORD *)(sub_1AE925B0C() - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v25);
  v96 = sub_1AE5079C0();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v26);
  sub_1AE60DD60(v27, v72);
  sub_1AE5FBAC8(v123, a1);
  sub_1AE4FFF90(v125, a2);
  if (qword_1ED31C728 != -1)
    swift_once();
  v28 = sub_1AE4FB608(v23, (uint64_t)qword_1ED31C710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v5, v28, v23);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v29 = (void *)sub_1AE925B00();
  v30 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v31 = (_WORD *)sub_1AE4F66A0();
    v32 = sub_1AE60DE4C(v31);
    sub_1AE60DDCC(&dword_1AE4F2000, v33, v30, v32, "ECR.Manager.init", "");
    sub_1AE4F9064();
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v101, v6, v19);
  sub_1AE925B3C();
  sub_1AE4FCE84();
  v34 = sub_1AE925B30();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v6, v19);
  *(_QWORD *)v103 = "ECR.Manager.init";
  *(_QWORD *)(v103 + 8) = 16;
  *(_BYTE *)(v103 + 16) = 2;
  *(_QWORD *)(v103 + 24) = v34;
  sub_1AE60DF2C(v103 + *(int *)(v96 + 24), v98);
  v35 = v129;
  sub_1AE60DF5C();
  if (v4)
  {
    sub_1AE505D58();
    sub_1AE5DD3EC((uint64_t)v125);
    sub_1AE60D8EC(v103);
    sub_1AE507978();
    sub_1AE555C64(v103, (uint64_t (*)(_QWORD))type metadata accessor for LogSignpost);
  }
  else
  {
    v36 = (uint64_t)v113;
    v100 = v116;
    v81 = v117;
    v82 = (uint64_t)v114;
    v99 = v118;
    v37 = v126;
    v38 = v128;
    if (v127 == 1)
    {
      sub_1AE60DF78((uint64_t)v120);
      v97 = (uint64_t)v115;
      v39 = v120[0];
      v40 = v120[1];
      v41 = v120[2];
      v42 = v120[3];
      v43 = v120[4];
      v44 = v120[5];
      v45 = v120[6];
    }
    else
    {
      v97 = (uint64_t)v115;
      v39 = 0;
      v40 = 0;
      v41 = 0;
      v42 = 0;
      v43 = 0;
      v44 = 0;
      v45 = 0;
    }
    v121[0] = v39;
    v121[1] = v40;
    v121[2] = v41;
    v121[3] = v42;
    v121[4] = v43;
    v121[5] = v44;
    v121[6] = v45;
    if (v38)
    {
      v46 = *(os_unfair_lock_s **)(*(_QWORD *)(v35 + 16) + 24);
      sub_1AE60DD4C();
      os_unfair_lock_lock(v46);
      sub_1AE4F9094();
      sub_1AE60DEBC();
      sub_1AE4F99EC(v119, v35, v47, v48, v49, v50, v51, v52, (uint64_t *)&v113);
      sub_1AE4F682C();
      sub_1AE60DE04();
      sub_1AE507978();
      v83 = (uint64_t)v113;
      v84 = v114;
      v93 = v115;
      v53 = *(os_unfair_lock_s **)(*(_QWORD *)(v35 + 16) + 24);
      sub_1AE60DD4C();
      os_unfair_lock_lock(v53);
      sub_1AE4F9094();
      sub_1AE60DEBC();
      sub_1AE4F9EC8((uint64_t *)v119, v35, &v113);
      sub_1AE4F682C();
      sub_1AE60DE04();
      sub_1AE507978();
      v95 = (uint64_t)v113;
    }
    else
    {
      v93 = 0;
      v95 = 0;
      v83 = 0;
      v84 = 0;
    }
    v54 = v90;
    v55 = v124;
    if (v124
      && *(_QWORD *)(v124 + 16) == 1
      && (sub_1AE5F66B4((uint64_t)v123),
          static EntityClass.person.getter(),
          sub_1AE56E7D0((uint64_t)v122, v55),
          v57 = v56,
          sub_1AE525EF8((uint64_t)v122),
          sub_1AE505D58(),
          (v57 & 1) != 0))
    {
      v74 = 0;
      v75 = 0;
      v76 = 0;
      v77 = 0uLL;
      v78 = 0;
      v79 = 0;
    }
    else
    {
      sub_1AE60E030();
      v74 = v113;
      v75 = v114;
      v76 = v115;
      v77 = v116;
      v78 = v117;
      v79 = v118;
    }
    v58 = type metadata accessor for EntityAliasView();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v91, 1, 1, v58);
    v80 = type metadata accessor for LemmatizedSubgraphView();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v89, 1, 1, v80);
    v59 = *(_QWORD *)(v37 + 16);
    if (v59)
    {
      v73 = v36;
      sub_1AE4F81B0();
      v102 = 0;
      for (i = 0; i != v59; ++i)
      {
        v61 = *(unsigned __int8 *)(v37 + i + 32);
        if (v61 >> 6)
        {
          if (v61 >> 6 == 1)
          {
            *(_QWORD *)&v116 = &type metadata for Features.FeatureFlag;
            *((_QWORD *)&v116 + 1) = sub_1AE5D7DF8();
            LOBYTE(v113) = 26;
            v62 = sub_1AE9249E4();
            _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v113);
            if ((v62 & 1) != 0)
            {
              sub_1AE60DF44();
              sub_1AE60E174();
              sub_1AE524534(v89, (uint64_t *)&unk_1EED94CB0);
              sub_1AE60DF38();
              _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v63, v64, v65, v80);
              sub_1AE578C7C(v88, v89, (uint64_t *)&unk_1EED94CB0);
              v54 = v90;
            }
          }
          else if (v61 != 128)
          {
            if (v61 == 129)
            {
              sub_1AE60DF44();
              v69 = sub_1AE60E0C0();
            }
            else
            {
              sub_1AE60DF44();
              v69 = sub_1AE60E09C();
            }
            v70 = (void *)v69;

            v102 = v70;
          }
        }
        else
        {
          sub_1AE60DF44();
          sub_1AE4F604C();
          sub_1AE524534(v91, &qword_1ED319260);
          sub_1AE60DF38();
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v66, v67, v68, v58);
          sub_1AE578C7C(v54, v91, &qword_1ED319260);
        }
      }
      sub_1AE4F6718();
      v36 = v73;
      v71 = (uint64_t)v102;
    }
    else
    {
      v71 = 0;
    }
    sub_1AE5FBAC8(v119, v123);
    sub_1AE4FFF90(&v113, v125);
    sub_1AE578FEC(v91, v85, &qword_1ED319260);
    v109[0] = v36;
    v109[1] = v82;
    v110 = v100;
    v109[2] = v97;
    v111 = v81;
    v112 = v99;
    v108[0] = v83;
    v108[1] = v84;
    v108[2] = v93;
    v104[0] = v74;
    v104[1] = v75;
    v104[2] = v76;
    v105 = v77;
    v106 = v78;
    v107 = v79;
    sub_1AE578FEC(v89, v86, (uint64_t *)&unk_1EED94CB0);
    sub_1AE60B91C(v119, &v113, v85, v109, v121, v108, v95, v71, v104, v86, a4 & 1);
    sub_1AE524534(v89, (uint64_t *)&unk_1EED94CB0);
    sub_1AE524534(v91, &qword_1ED319260);
    sub_1AE60D8EC(v103);
    sub_1AE507978();
    sub_1AE555C64(v103, (uint64_t (*)(_QWORD))type metadata accessor for LogSignpost);
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE60D8EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  NSObject *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint8_t *v20;
  os_signpost_id_t v21;
  _QWORD v22[2];
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  char v28;

  v3 = sub_1AE925B18();
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F9024();
  v24 = v5;
  v6 = sub_1AE60DED4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1AE925B0C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1AE509948();
  v12 = type metadata accessor for LogSignpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v1, a1 + *(int *)(v12 + 24), v10);
  v27 = *(const char **)a1;
  v13 = *(_BYTE *)(a1 + 16);
  sub_1AE60DD4C();
  v14 = sub_1AE925B00();
  sub_1AE925B24();
  v23 = sub_1AE926664();
  result = sub_1AE926700();
  if ((result & 1) == 0)
  {
    swift_release();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v1, v10);
  }
  v22[0] = v11;
  v22[1] = v7;
  if ((v13 & 1) == 0)
  {
    if (v27)
    {
      v17 = v25;
      v16 = v26;
      v18 = v24;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v27 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v27 >> 11 != 27)
  {
    v17 = v25;
    v16 = v26;
    v18 = v24;
    if (v27 >> 16 <= 0x10)
    {
      v27 = &v28;
LABEL_9:
      sub_1AE60DD4C();
      sub_1AE925B48();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v17 + 88))(v18, v16) == *MEMORY[0x1E0DF2190])
      {
        v19 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v16);
        v19 = "";
      }
      v20 = (uint8_t *)sub_1AE4F69B0();
      *(_WORD *)v20 = 0;
      v21 = sub_1AE925AD0();
      _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v14, (os_signpost_type_t)v23, v21, v27, v19, v20, 2u);
      sub_1AE4F9064();
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

unint64_t sub_1AE60DB44()
{
  unint64_t result;

  result = qword_1ED31C380;
  if (!qword_1ED31C380)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED31C380);
  }
  return result;
}

unint64_t sub_1AE60DB80()
{
  unint64_t result;

  result = qword_1EED9DD50;
  if (!qword_1EED9DD50)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityResolutionSession, &type metadata for EntityResolutionSession);
    atomic_store(result, (unint64_t *)&qword_1EED9DD50);
  }
  return result;
}

uint64_t sub_1AE60DBBC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AE60DC10(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_1AE60DC3C()
{
  unint64_t result;

  result = qword_1ED319EC0;
  if (!qword_1ED319EC0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityClass, &type metadata for EntityClass);
    atomic_store(result, (unint64_t *)&qword_1ED319EC0);
  }
  return result;
}

uint64_t *sub_1AE60DC78(uint64_t *a1)
{
  sub_1AE60DCAC(*a1);
  return a1;
}

uint64_t sub_1AE60DCAC(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_1AE60DCF8()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 784) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 752) = 0u;
  *(_OWORD *)(v0 + 768) = 0u;
  return result;
}

uint64_t sub_1AE60DD0C()
{
  uint64_t v0;

  return sub_1AE5F676C(v0 + 1192);
}

uint64_t sub_1AE60DD14()
{
  uint64_t v0;

  return sub_1AE60D8EC(*(_QWORD *)(v0 + 320));
}

uint64_t sub_1AE60DD1C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE60DD2C()
{
  return sub_1AE925B54();
}

uint64_t sub_1AE60DD34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1AE4FB608(v2, a2);
  return sub_1AE925B54();
}

uint64_t sub_1AE60DD4C()
{
  return swift_retain();
}

void sub_1AE60DD54(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

void sub_1AE60DD60(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 304) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1AE60DD7C()
{
  return type metadata accessor for EntityResolutionRankingService();
}

void sub_1AE60DD84(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x16u);
}

uint64_t sub_1AE60DD8C()
{
  return sub_1AE925B6C();
}

uint64_t sub_1AE60DDA0()
{
  uint64_t v0;

  return v0 + 904;
}

uint64_t sub_1AE60DDBC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE60DDC4()
{
  return swift_bridgeObjectRetain();
}

void sub_1AE60DDCC(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  NSObject *v6;
  uint8_t *v7;

  _os_signpost_emit_with_name_impl(a1, v6, a3, a4, a5, a6, v7, 2u);
}

uint64_t sub_1AE60DDDC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 784) = a2;
  *(_QWORD *)(v2 + 776) = result;
  return result;
}

uint64_t sub_1AE60DDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a3, v3);
}

void sub_1AE60DDF0()
{
  uint64_t v0;

}

void sub_1AE60DE04()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

uint64_t sub_1AE60DE0C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE60DE1C()
{
  return sub_1AE9261FC();
}

void sub_1AE60DE24()
{
  JUMPOUT(0x1AF4533D0);
}

uint64_t sub_1AE60DE2C()
{
  return sub_1AE92625C();
}

uint64_t sub_1AE60DE3C()
{
  uint64_t v0;

  return v0 + 904;
}

uint64_t sub_1AE60DE4C(_WORD *a1)
{
  *a1 = 0;
  return sub_1AE925AD0();
}

uint64_t sub_1AE60DE5C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return v1 - 72;
}

uint64_t sub_1AE60DE74()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 408) = *(_QWORD *)(v0 + 904);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE60DE84(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
}

uint64_t sub_1AE60DE98(uint64_t *a1, int a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9)
{
  return sub_1AE5765E8(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1AE60DEA4()
{
  uint64_t v0;

  return sub_1AE50BA54(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
}

uint64_t sub_1AE60DEB0()
{
  return swift_release_n();
}

uint64_t sub_1AE60DEBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 640) = v1;
  return swift_retain();
}

_WORD *sub_1AE60DEC8(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1AE60DED4()
{
  return sub_1AE925AE8();
}

uint64_t sub_1AE60DEE0(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, a1);
}

uint64_t sub_1AE60DF04()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE60DF24(uint64_t *a1, int a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9)
{
  return sub_1AE5765E8(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1AE60DF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, v2);
}

void sub_1AE60DF5C()
{
  sub_1AE60E04C();
}

__n128 sub_1AE60DF78@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __n128 result;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10[2];
  __int128 v11;
  __n128 v12;
  uint64_t v13;

  v4 = *(_QWORD *)(v1 + 16);
  swift_retain();
  sub_1AE60EE24();
  sub_1AE4F9094();
  v9 = *(_QWORD *)(v4 + 16);
  swift_retain();
  sub_1AE60E778(&v9, v10);
  sub_1AE507978();
  sub_1AE507E24();
  swift_release();
  if (!v2)
  {
    v6 = v10[1];
    v7 = v13;
    result = v12;
    v8 = v11;
    *(_QWORD *)a1 = v10[0];
    *(_QWORD *)(a1 + 8) = v6;
    *(_OWORD *)(a1 + 16) = v8;
    *(__n128 *)(a1 + 32) = result;
    *(_QWORD *)(a1 + 48) = v7;
  }
  return result;
}

void sub_1AE60E030()
{
  sub_1AE60E04C();
}

void sub_1AE60E04C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE4FDC54();
  sub_1AE60EE24();
  sub_1AE4F9094();
  v0 = sub_1AE5094BC();
  sub_1AE50AB08(v0, v1, v2, v3, v4);
  sub_1AE507978();
  sub_1AE507E24();
  sub_1AE4FC564();
  sub_1AE50551C();
}

uint64_t sub_1AE60E09C()
{
  return sub_1AE60E0E4((uint64_t)sub_1AE60E964, (uint64_t (*)(uint64_t, _OWORD *))sub_1AE81B51C);
}

uint64_t sub_1AE60E0C0()
{
  return sub_1AE60E0E4((uint64_t)sub_1AE60EB10, (uint64_t (*)(uint64_t, _OWORD *))sub_1AE81B5E0);
}

uint64_t sub_1AE60E0E4(uint64_t a1, uint64_t (*a2)(uint64_t, _OWORD *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v11[3];
  uint64_t v12;

  sub_1AE60E04C();
  if (!v3)
  {
    v11[0] = v7;
    v11[1] = v8;
    v11[2] = v9;
    v12 = v10;
    v5 = *(_QWORD *)(v2 + 16);
    sub_1AE60ECBC();
    v2 = a2(v5, v11);
    sub_1AE60ED04();
  }
  return v2;
}

void sub_1AE60E174()
{
  sub_1AE60E04C();
}

uint64_t *sub_1AE60E190()
{
  uint64_t *v0;

  sub_1AE60DCAC(v0[2]);
  sub_1AE60DCAC(v0[9]);
  sub_1AE60DCAC(v0[16]);
  sub_1AE524534((uint64_t)v0 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityAliasView, &qword_1ED319260);
  sub_1AE50BA54(*(uint64_t *)((char *)v0+ OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_inferenceFeatureView), *(uint64_t *)((char *)v0+ OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_inferenceFeatureView+ 8));
  swift_release();
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_peopleKnosisServer));
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityKnosisServer));
  sub_1AE524534((uint64_t)v0+ OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_lemmatizedSubgraphView, (uint64_t *)&unk_1EED94CB0);
  return v0;
}

uint64_t sub_1AE60E258()
{
  sub_1AE60E190();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE60E27C()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(os_unfair_lock_s **)(v1 + 24);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 16);
  sub_1AE60E438(&v4);
  os_unfair_lock_unlock(v2);
  swift_release();

  return v0;
}

uint64_t sub_1AE60E2F8()
{
  sub_1AE60E27C();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE60E318()
{
  return type metadata accessor for EntityResolutionServicePool.GuardedData();
}

void sub_1AE60E320()
{
  unint64_t v0;
  unint64_t v1;

  sub_1AE60E3EC(319, &qword_1ED31B8A0, (void (*)(uint64_t))type metadata accessor for EntityAliasView);
  if (v0 <= 0x3F)
  {
    sub_1AE60E3EC(319, &qword_1ED3187E0, (void (*)(uint64_t))type metadata accessor for LemmatizedSubgraphView);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_1AE60E3EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1AE92670C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1AE60E438(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1AE501548(&qword_1ED319260);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F90C8();
  v4 = *a1;
  v5 = type metadata accessor for EntityAliasView();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 1, 1, v5);
  v6 = v4 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityAliasView;
  swift_beginAccess();
  sub_1AE60ED78(v1, v6, &qword_1ED319260);
  swift_endAccess();
  v7 = *(_QWORD *)(v4 + 128);
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(_OWORD *)(v4 + 160) = 0u;
  *(_QWORD *)(v4 + 176) = 0;
  sub_1AE60DCAC(v7);
  v8 = *(_QWORD *)(v4 + 16);
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_QWORD *)(v4 + 64) = 0;
  sub_1AE60DCAC(v8);
  v9 = (_QWORD *)(v4
                + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_inferenceFeatureView);
  v10 = *(_QWORD *)(v4
                  + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_inferenceFeatureView);
  v11 = *(_QWORD *)(v4
                  + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_inferenceFeatureView
                  + 8);
  v9[1] = 0;
  v9[2] = 0;
  *v9 = 0;
  sub_1AE50BA54(v10, v11);
  v12 = *(_QWORD *)(v4 + 72);
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 104) = 0u;
  *(_QWORD *)(v4 + 120) = 0;
  sub_1AE60DCAC(v12);
  *(_QWORD *)(v4 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_rankingService) = 0;
  swift_release();
  sub_1AE508FA4(OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_peopleKnosisServer);
  sub_1AE508FA4(OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityKnosisServer);
}

void sub_1AE60E5AC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23[3];

  v5 = type metadata accessor for LemmatizedSubgraphView();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AE501548((uint64_t *)&unk_1EED94CB0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v23 - v12;
  v14 = *a1 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_lemmatizedSubgraphView;
  swift_beginAccess();
  sub_1AE578FEC(v14, (uint64_t)v13, (uint64_t *)&unk_1EED94CB0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v5) == 1)
  {
    sub_1AE524534((uint64_t)v13, (uint64_t *)&unk_1EED94CB0);
    ViewService.lemmatizedSubgraphView.getter(v15, v16, v17, v18, v19, v20, v21, v22, v23[0]);
    if (v2)
      return;
    sub_1AE60ED4C((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for LemmatizedSubgraphView);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 0, 1, v5);
    swift_beginAccess();
    sub_1AE60ED78((uint64_t)v11, v14, (uint64_t *)&unk_1EED94CB0);
    swift_endAccess();
  }
  else
  {
    v7 = v13;
  }
  sub_1AE60EDA4((uint64_t)v7, a2, (uint64_t (*)(_QWORD))type metadata accessor for LemmatizedSubgraphView);
}

uint64_t sub_1AE60E778@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  _BYTE v20[56];
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v4 = *a1;
  v6 = (uint64_t *)(*a1 + 16);
  v5 = *v6;
  v8 = *(_QWORD *)(*a1 + 24);
  v7 = *(_QWORD *)(*a1 + 32);
  v9 = *(_QWORD *)(*a1 + 40);
  v10 = *(_QWORD *)(*a1 + 48);
  v11 = *(_QWORD *)(*a1 + 56);
  v12 = *(_QWORD *)(*a1 + 64);
  if (*v6)
  {
    *a2 = v5;
    a2[1] = v8;
    a2[2] = v7;
    a2[3] = v9;
    a2[4] = v10;
    a2[5] = v11;
    a2[6] = v12;
    return sub_1AE60EDD0(v5);
  }
  v27 = *(_QWORD *)(*a1 + 24);
  result = sub_1AE598B58();
  if (!v2)
  {
    sub_1AE60E91C((uint64_t)v20, (uint64_t)&v21);
    v14 = v21;
    if (v21)
    {
      v15 = v22;
      *(_OWORD *)(a2 + 1) = v22;
      v16 = v24;
      *(_OWORD *)(a2 + 5) = v24;
      v25 = v16;
      v26 = v15;
      v18 = *(_QWORD *)(v4 + 16);
      v19 = v23;
      sub_1AE60E91C((uint64_t)v20, (uint64_t)v6);
      swift_unknownObjectRetain();
      sub_1AE578F28((uint64_t)&v26);
      swift_unknownObjectRetain();
      sub_1AE578F28((uint64_t)&v25);
      sub_1AE60DCAC(v18);
      *a2 = v14;
      *(_OWORD *)(a2 + 3) = v19;
      return sub_1AE60EDD0(v5);
    }
    sub_1AE5716CC();
    swift_allocError();
    *(_OWORD *)v17 = xmmword_1AE944AA0;
    *(_BYTE *)(v17 + 16) = 5;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AE60E91C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1ED30FB18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1AE60E964@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *(_QWORD **)a1;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  if (v5)
  {
    v6 = *(_QWORD *)(*(_QWORD *)a1 + 72);
    v7 = *(_QWORD *)(*(_QWORD *)a1 + 80);
    v8 = *(_QWORD *)(*(_QWORD *)a1 + 88);
    v9 = *(_QWORD *)(*(_QWORD *)a1 + 96);
    v10 = *(_QWORD *)(*(_QWORD *)a1 + 104);
    v11 = *(_QWORD *)(*(_QWORD *)a1 + 112);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 120);
LABEL_3:
    *a2 = v6;
    a2[1] = v7;
    a2[2] = v8;
    a2[3] = v9;
    a2[4] = v10;
    a2[5] = v11;
    a2[6] = v12;
    return (_QWORD *)sub_1AE60EDD0(v5);
  }
  v30 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  result = ViewService.peopleSubgraphView.getter(&v23);
  if (!v2)
  {
    v6 = v23;
    if (v23)
    {
      v15 = v28;
      v14 = v29;
      v9 = v26;
      v16 = v27;
      v20 = v28;
      v21 = v27;
      v17 = v24;
      v8 = v25;
      v18 = v4[9];
      v22 = v24;
      v4[9] = v23;
      v4[10] = v17;
      v4[11] = v8;
      v4[12] = v9;
      v4[13] = v16;
      v4[14] = v15;
      v4[15] = v14;
      v12 = v14;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1AE60DCAC(v18);
      v10 = v21;
      v7 = v22;
      v11 = v20;
      goto LABEL_3;
    }
    sub_1AE5716CC();
    swift_allocError();
    *(_OWORD *)v19 = xmmword_1AE944AB0;
    *(_BYTE *)(v19 + 16) = 5;
    return (_QWORD *)swift_willThrow();
  }
  return result;
}

_QWORD *sub_1AE60EB10@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *(_QWORD **)a1;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 128);
  if (v5)
  {
    v6 = *(_QWORD *)(*(_QWORD *)a1 + 128);
    v7 = *(_QWORD *)(*(_QWORD *)a1 + 136);
    v8 = *(_QWORD *)(*(_QWORD *)a1 + 144);
    v9 = *(_QWORD *)(*(_QWORD *)a1 + 152);
    v10 = *(_QWORD *)(*(_QWORD *)a1 + 160);
    v11 = *(_QWORD *)(*(_QWORD *)a1 + 168);
    v12 = *(_QWORD *)(*(_QWORD *)a1 + 176);
LABEL_3:
    *a2 = v6;
    a2[1] = v7;
    a2[2] = v8;
    a2[3] = v9;
    a2[4] = v10;
    a2[5] = v11;
    a2[6] = v12;
    return (_QWORD *)sub_1AE60EDD0(v5);
  }
  v30 = *(_QWORD *)(*(_QWORD *)a1 + 136);
  result = ViewService.entitySubgraphView.getter(&v23);
  if (!v2)
  {
    v6 = v23;
    if (v23)
    {
      v15 = v28;
      v14 = v29;
      v9 = v26;
      v16 = v27;
      v20 = v28;
      v21 = v27;
      v17 = v24;
      v8 = v25;
      v18 = v4[16];
      v22 = v24;
      v4[16] = v23;
      v4[17] = v17;
      v4[18] = v8;
      v4[19] = v9;
      v4[20] = v16;
      v4[21] = v15;
      v4[22] = v14;
      v12 = v14;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1AE60DCAC(v18);
      v10 = v21;
      v7 = v22;
      v11 = v20;
      goto LABEL_3;
    }
    sub_1AE5716CC();
    swift_allocError();
    *(_OWORD *)v19 = xmmword_1AE944AC0;
    *(_BYTE *)(v19 + 16) = 5;
    return (_QWORD *)swift_willThrow();
  }
  return result;
}

void sub_1AE60ECBC()
{
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE4F6624();
}

void sub_1AE60ED04()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_1AE4F6624();
}

void sub_1AE60ED4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_1AE53F8D8(a1, a2, a3);
  sub_1AE4FE8EC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_1AE4F6664();
}

void sub_1AE60ED78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1AE5052E4(a1, a2, a3);
  sub_1AE4FE8EC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  sub_1AE4F6664();
}

void sub_1AE60EDA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_1AE53F8D8(a1, a2, a3);
  sub_1AE4FE8EC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_1AE4F6664();
}

uint64_t sub_1AE60EDD0(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1AE60EE1C()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

void sub_1AE60EE24()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0);
}

void sub_1AE60EE2C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AE4FD154();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1AE50AB1C() || (sub_1AE614748(), !(v6 ^ v4 | v5)))
  {
    sub_1AE61473C();
    sub_1AE519C48();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1AE4FDC70();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1AE50A424();
  sub_1AE623D00();
  if (!v3)
  {
LABEL_11:
    sub_1AE4F6648();
    *v1 = v2;
    sub_1AE4FCDD0();
    return;
  }
  sub_1AE614730();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1AE60EEC0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1AE4FD154();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1AE50AB1C() || (sub_1AE614748(), !(v6 ^ v4 | v5)))
  {
    sub_1AE61473C();
    sub_1AE519D1C();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1AE4FDC70();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = sub_1AE50A424();
  sub_1AE623F60(v8, v9);
  if (!v3)
  {
LABEL_11:
    sub_1AE4F6648();
    *v1 = v2;
    sub_1AE4FCDD0();
    return;
  }
  sub_1AE614730();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1AE60EF54()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AE4FD154();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1AE50AB1C() || (sub_1AE614748(), !(v6 ^ v4 | v5)))
  {
    sub_1AE61473C();
    sub_1AE519D38();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1AE4FDC70();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1AE50A424();
  sub_1AE623EC0();
  if (!v3)
  {
LABEL_11:
    sub_1AE4F6648();
    *v1 = v2;
    sub_1AE4FCDD0();
    return;
  }
  sub_1AE614730();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1AE60EFEC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AE4FD154();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1AE50AB1C() || (sub_1AE614748(), !(v6 ^ v4 | v5)))
  {
    sub_1AE61473C();
    sub_1AE519DF4();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1AE4FDC70();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1AE50A424();
  sub_1AE624084();
  if (!v3)
  {
LABEL_11:
    sub_1AE4F6648();
    *v1 = v2;
    sub_1AE4FCDD0();
    return;
  }
  sub_1AE614730();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_1AE60F084()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  unint64_t v45;

  sub_1AE614A7C();
  if (v6)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!sub_1AE614ACC() || (v7 = *(_QWORD *)(v0 + 24) >> 1, v7 < v4))
  {
    sub_1AE519D1C();
    v0 = v8;
    v7 = *(_QWORD *)(v8 + 24) >> 1;
  }
  v9 = v7 - *(_QWORD *)(v0 + 16);
  sub_1AE593F4C();
  if (v10 < v3)
    goto LABEL_12;
  if (v10)
  {
    v11 = *(_QWORD *)(v0 + 16);
    v6 = __OFADD__(v11, v10);
    v12 = v11 + v10;
    if (v6)
    {
      __break(1u);
      goto LABEL_43;
    }
    *(_QWORD *)(v0 + 16) = v12;
  }
  if (v10 != v9)
  {
LABEL_10:
    result = sub_1AE592EFC();
    *v1 = v0;
    return result;
  }
LABEL_13:
  v2 = *(_QWORD *)(v0 + 16);
  result = v41;
  v14 = v42;
  v15 = v43;
  v16 = v44;
  if (v45)
  {
    v17 = (v45 - 1) & v45;
    v18 = __clz(__rbit64(v45)) | (v44 << 6);
    goto LABEL_15;
  }
  v5 = v44 + 1;
  if (!__OFADD__(v44, 1))
  {
    v20 = (unint64_t)(v43 + 64) >> 6;
    if (v5 >= v20)
      goto LABEL_10;
    v23 = v42;
    v34 = *(_QWORD *)(v42 + 8 * v5);
    if (v34)
      goto LABEL_47;
    v35 = v44 + 2;
    if (v44 + 2 >= v20)
      goto LABEL_10;
    v34 = *(_QWORD *)(v42 + 8 * v35);
    if (!v34)
    {
      if (v44 + 3 >= v20)
        goto LABEL_10;
      v34 = *(_QWORD *)(v42 + 8 * (v44 + 3));
      if (v34)
      {
        v5 = v44 + 3;
        goto LABEL_47;
      }
LABEL_57:
      v35 = v5 + 3;
      if (v5 + 3 >= v20)
        goto LABEL_10;
      v34 = *(_QWORD *)(v23 + 8 * v35);
      if (!v34)
      {
        v5 += 4;
        if (v5 >= v20)
          goto LABEL_10;
        v34 = *(_QWORD *)(v23 + 8 * v5);
        if (!v34)
        {
          v36 = v16 + 6;
          while (v36 < v20)
          {
            v34 = *(_QWORD *)(v23 + 8 * v36++);
            if (v34)
            {
              v5 = v36 - 1;
              goto LABEL_47;
            }
          }
          goto LABEL_10;
        }
        goto LABEL_47;
      }
    }
    v5 = v35;
LABEL_47:
    v17 = (v34 - 1) & v34;
    v18 = __clz(__rbit64(v34)) + (v5 << 6);
    v16 = v5;
    v14 = v23;
LABEL_15:
    v19 = *(_QWORD *)(*(_QWORD *)(result + 48) + 8 * v18);
    v20 = (unint64_t)(v15 + 64) >> 6;
    v21 = v20 - 1;
LABEL_16:
    v22 = *(_QWORD *)(v0 + 24) >> 1;
    if (v22 < v2 + 1)
    {
      v38 = v20;
      v39 = v21;
      v40 = result;
      v37 = v14;
      v31 = v15;
      v32 = v17;
      sub_1AE519D1C();
      v17 = v32;
      v20 = v38;
      v21 = v39;
      v15 = v31;
      v14 = v37;
      v0 = v33;
      result = v40;
      v22 = *(_QWORD *)(v0 + 24) >> 1;
    }
    v23 = v0 + 32;
    while (1)
    {
      if (v2 >= v22)
      {
        *(_QWORD *)(v0 + 16) = v2;
        goto LABEL_16;
      }
      *(_QWORD *)(v23 + 8 * v2++) = v19;
      if (v17)
      {
        v24 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v25 = v24 | (v16 << 6);
        goto LABEL_32;
      }
      v26 = v16 + 1;
      if (__OFADD__(v16, 1))
      {
        __break(1u);
        goto LABEL_57;
      }
      if (v26 >= v20)
        goto LABEL_43;
      v27 = *(_QWORD *)(v14 + 8 * v26);
      if (!v27)
      {
        v28 = v16 + 2;
        v5 = v16 + 1;
        if (v16 + 2 >= v20)
          goto LABEL_43;
        v27 = *(_QWORD *)(v14 + 8 * v28);
        if (!v27)
        {
          v5 = v16 + 2;
          if (v16 + 3 >= v20)
            goto LABEL_43;
          v27 = *(_QWORD *)(v14 + 8 * (v16 + 3));
          if (v27)
          {
            v26 = v16 + 3;
            goto LABEL_31;
          }
          v28 = v16 + 4;
          v5 = v16 + 3;
          if (v16 + 4 >= v20)
            goto LABEL_43;
          v27 = *(_QWORD *)(v14 + 8 * v28);
          if (!v27)
          {
            v26 = v16 + 5;
            v5 = v16 + 4;
            if (v16 + 5 >= v20)
              goto LABEL_43;
            v27 = *(_QWORD *)(v14 + 8 * v26);
            if (!v27)
            {
              v30 = v16 + 6;
              while (v30 < v20)
              {
                v27 = *(_QWORD *)(v14 + 8 * v30++);
                if (v27)
                {
                  v26 = v30 - 1;
                  goto LABEL_31;
                }
              }
LABEL_43:
              *(_QWORD *)(v0 + 16) = v2;
              goto LABEL_10;
            }
            goto LABEL_31;
          }
        }
        v26 = v28;
      }
LABEL_31:
      v29 = __clz(__rbit64(v27));
      v17 = (v27 - 1) & v27;
      v25 = v29 + (v26 << 6);
      v16 = v26;
LABEL_32:
      v19 = *(_QWORD *)(*(_QWORD *)(result + 48) + 8 * v25);
    }
  }
  __break(1u);
  return result;
}

void sub_1AE60F400()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1AE4FD154();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1AE50AB1C() || (sub_1AE614748(), !(v6 ^ v4 | v5)))
  {
    sub_1AE61473C();
    sub_1AE51A068();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1AE4FDC70();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = sub_1AE50A424();
  sub_1AE624408(v8, v9);
  if (!v3)
  {
LABEL_11:
    sub_1AE4F6648();
    *v1 = v2;
    sub_1AE4FCDD0();
    return;
  }
  sub_1AE614730();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1AE60F498()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AE4FD154();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1AE50AB1C() || (sub_1AE614748(), !(v6 ^ v4 | v5)))
  {
    sub_1AE61473C();
    sub_1AE51A084();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1AE4FDC70();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1AE50A424();
  sub_1AE624498();
  if (!v3)
  {
LABEL_11:
    sub_1AE4F6648();
    *v1 = v2;
    sub_1AE4FCDD0();
    return;
  }
  sub_1AE614730();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1AE60F530()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AE4FD154();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1AE50AB1C() || (sub_1AE614748(), !(v6 ^ v4 | v5)))
  {
    sub_1AE61473C();
    sub_1AE519F94();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1AE4FDC70();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1AE50A424();
  sub_1AE6242EC();
  if (!v3)
  {
LABEL_11:
    sub_1AE4F6648();
    *v1 = v2;
    sub_1AE4FCDD0();
    return;
  }
  sub_1AE614730();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1AE60F5C8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1AE4FD154();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1AE50AB1C() || (sub_1AE614748(), !(v6 ^ v4 | v5)))
  {
    sub_1AE61473C();
    sub_1AE51A298();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1AE4FDC70();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = sub_1AE50A424();
  sub_1AE623F60(v8, v9);
  if (!v3)
  {
LABEL_11:
    sub_1AE4F6648();
    *v1 = v2;
    sub_1AE4FCDD0();
    return;
  }
  sub_1AE614730();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1AE60F65C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1AE4FD154();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1AE50AB1C() || (sub_1AE614748(), !(v6 ^ v4 | v5)))
  {
    sub_1AE61473C();
    sub_1AE51AB7C();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1AE4FDC70();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = sub_1AE50A424();
  sub_1AE624648(v8, v9);
  if (!v3)
  {
LABEL_11:
    sub_1AE4F6648();
    *v1 = v2;
    sub_1AE4FCDD0();
    return;
  }
  sub_1AE614730();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1AE60F6F0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_1AE51B06C();
    v3 = v6;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1AE624F00();
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1AE60F7CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL i;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  unsigned __int8 *v32;
  int64_t v33;
  int64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int64_t v38;
  int64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;

  sub_1AE614A7C();
  if (v5)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!sub_1AE614ACC() || (v6 = *(_QWORD *)(v0 + 24) >> 1, v6 < v4))
  {
    sub_1AE51B088();
    v0 = v7;
    v6 = *(_QWORD *)(v7 + 24) >> 1;
  }
  v8 = v6 - *(_QWORD *)(v0 + 16);
  sub_1AE594D50();
  if (v9 < v3)
    goto LABEL_12;
  if (v9)
  {
    v13 = *(_QWORD *)(v0 + 16);
    v5 = __OFADD__(v13, v9);
    v14 = v13 + v9;
    if (v5)
    {
      __break(1u);
LABEL_49:
      v20 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        return;
      }
      v21 = (unint64_t)(v11 + 64) >> 6;
      if (v20 >= v21)
        goto LABEL_10;
      v23 = v10;
      v37 = *(_QWORD *)(v10 + 8 * v20);
      if (v37)
        goto LABEL_52;
      v38 = v12 + 2;
      if (v12 + 2 >= v21)
        goto LABEL_10;
      v37 = *(_QWORD *)(v10 + 8 * v38);
      if (!v37)
      {
        if (v12 + 3 >= v21)
          goto LABEL_10;
        v37 = *(_QWORD *)(v10 + 8 * (v12 + 3));
        if (v37)
        {
          v20 = v12 + 3;
          goto LABEL_52;
        }
LABEL_63:
        v38 = v20 + 3;
        if (v20 + 3 >= v21)
          goto LABEL_10;
        v37 = *(_QWORD *)(v23 + 8 * v38);
        if (!v37)
        {
          v20 += 4;
          if (v20 >= v21)
            goto LABEL_10;
          v37 = *(_QWORD *)(v23 + 8 * v20);
          if (!v37)
          {
            v39 = v12 + 6;
            while (v39 < v21)
            {
              v37 = *(_QWORD *)(v23 + 8 * v39++);
              if (v37)
              {
                v20 = v39 - 1;
                goto LABEL_52;
              }
            }
            goto LABEL_10;
          }
          goto LABEL_52;
        }
      }
      v20 = v38;
LABEL_52:
      v15 = (v37 - 1) & v37;
      v16 = __clz(__rbit64(v37)) + (v20 << 6);
      v12 = v20;
      v10 = v23;
      goto LABEL_15;
    }
    *(_QWORD *)(v0 + 16) = v14;
  }
  if (v9 != v8)
    goto LABEL_10;
LABEL_13:
  v2 = *(_QWORD *)(v0 + 16);
  v9 = v46;
  v10 = v47;
  v11 = v48;
  v12 = v49;
  if (!v50)
    goto LABEL_49;
  v15 = (v50 - 1) & v50;
  v16 = __clz(__rbit64(v50)) | (v49 << 6);
LABEL_15:
  v17 = *(_QWORD *)(v9 + 48);
  v18 = *(unsigned __int8 *)(v17 + 24 * v16);
  if (v18 == 3)
    goto LABEL_10;
  v19 = *(_OWORD *)(v17 + 24 * v16 + 8);
  v20 = (unint64_t)(v11 + 64) >> 6;
  v21 = v20 - 1;
  while (2)
  {
    v22 = *(_QWORD *)(v0 + 24) >> 1;
    if (v22 < v2 + 1)
    {
      v43 = v20;
      v44 = v21;
      v45 = v9;
      v41 = v11;
      v42 = v10;
      v34 = v12;
      v35 = v15;
      v40 = v19;
      sub_1AE51B088();
      v19 = v40;
      v20 = v43;
      v21 = v44;
      v15 = v35;
      v12 = v34;
      v11 = v41;
      v10 = v42;
      v0 = v36;
      v9 = v45;
      v22 = *(_QWORD *)(v0 + 24) >> 1;
    }
    v23 = v0 + 32;
    for (i = v18 == 3; !i && v2 < v22; i = v18 == 3)
    {
      v26 = v23 + 24 * v2;
      *(_BYTE *)v26 = v18;
      *(_OWORD *)(v26 + 8) = v19;
      ++v2;
      if (v15)
      {
        v27 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v28 = v27 | (v12 << 6);
        goto LABEL_37;
      }
      v29 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_63;
      }
      if (v29 >= v20)
        goto LABEL_53;
      v30 = *(_QWORD *)(v10 + 8 * v29);
      if (!v30)
      {
        v31 = v12 + 2;
        if (v12 + 2 >= v20)
          goto LABEL_53;
        v30 = *(_QWORD *)(v10 + 8 * v31);
        if (!v30)
        {
          if (v12 + 3 >= v20)
            goto LABEL_53;
          v30 = *(_QWORD *)(v10 + 8 * (v12 + 3));
          if (v30)
          {
            v29 = v12 + 3;
            goto LABEL_36;
          }
          v31 = v12 + 4;
          if (v12 + 4 >= v20)
            goto LABEL_53;
          v30 = *(_QWORD *)(v10 + 8 * v31);
          if (!v30)
          {
            v29 = v12 + 5;
            if (v12 + 5 >= v20)
              goto LABEL_53;
            v30 = *(_QWORD *)(v10 + 8 * v29);
            if (!v30)
            {
              v33 = v12 + 6;
              while (v33 < v20)
              {
                v30 = *(_QWORD *)(v10 + 8 * v33++);
                if (v30)
                {
                  v29 = v33 - 1;
                  goto LABEL_36;
                }
              }
LABEL_53:
              *(_QWORD *)(v0 + 16) = v2;
              goto LABEL_10;
            }
            goto LABEL_36;
          }
        }
        v29 = v31;
      }
LABEL_36:
      v15 = (v30 - 1) & v30;
      v28 = __clz(__rbit64(v30)) + (v29 << 6);
      v12 = v29;
LABEL_37:
      v32 = (unsigned __int8 *)(*(_QWORD *)(v9 + 48) + 24 * v28);
      v18 = *v32;
      v19 = *(_OWORD *)(v32 + 8);
    }
    *(_QWORD *)(v0 + 16) = v2;
    if (v18 != 3)
      continue;
    break;
  }
LABEL_10:
  sub_1AE592EFC();
  *v1 = v0;
}

void sub_1AE60FBB0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  sub_1AE4FD154();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1AE50AB1C() || (sub_1AE614748(), !(v6 ^ v4 | v5)))
  {
    sub_1AE61473C();
    sub_1AE51B130();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1AE4FDC70();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = sub_1AE50A424();
  sub_1AE625014(v8, v9, v10);
  if (!v3)
  {
LABEL_11:
    sub_1AE4F6648();
    *v1 = v2;
    sub_1AE4FCDD0();
    return;
  }
  sub_1AE614730();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1AE60FC44()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AE4FD154();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1AE50AB1C() || (sub_1AE614748(), !(v6 ^ v4 | v5)))
  {
    sub_1AE61473C();
    sub_1AE519D00();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1AE4FDC70();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1AE50A424();
  sub_1AE623F54();
  if (!v3)
  {
LABEL_11:
    sub_1AE4F6648();
    *v1 = v2;
    sub_1AE4FCDD0();
    return;
  }
  sub_1AE614730();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1AE60FCD8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AE4FD154();
  if (v4)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1AE50AB1C() || (sub_1AE614748(), !(v6 ^ v4 | v5)))
  {
    sub_1AE61473C();
    sub_1AE51B560();
    v2 = v7;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  sub_1AE4FDC70();
  if (v6 != v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1AE50A424();
  sub_1AE625278();
  if (!v3)
  {
LABEL_11:
    sub_1AE4F6648();
    *v1 = v2;
    sub_1AE4FCDD0();
    return;
  }
  sub_1AE614730();
  if (!v4)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void EntityResolutionTextClient.__allocating_init(for:viaXPC:)()
{
  sub_1AE6148F4();
  sub_1AE614A5C();
  EntityResolutionTextClient.init(for:viaXPC:)();
  sub_1AE5035EC();
}

id EntityResolutionTextClient.init(for:viaXPC:)()
{
  char *v0;
  uint64_t v1;
  objc_class *v2;
  char v3;
  char *v4;
  uint64_t v5;
  _UNKNOWN **v6;
  char *v7;
  id v9;
  objc_class *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  objc_super v19;
  __int128 v20;
  objc_class *v21;
  _UNKNOWN **v22;

  sub_1AE614A44();
  if ((v3 & 1) != 0)
  {
    type metadata accessor for EntityResolutionTextXPCService();
    sub_1AE6149A4();
    v4 = v0;
    v5 = sub_1AE615F84(v0, 0);
    v6 = &off_1E5DC2BB0;
  }
  else
  {
    v2 = (objc_class *)type metadata accessor for EntityResolutionTextInProcessService();
    objc_allocWithZone(v2);
    v7 = v0;
    sub_1AE4F8428((uint64_t)v0, 1);
    if (v1)
    {

      type metadata accessor for EntityResolutionTextClient();
      return (id)sub_1AE614980();
    }
    v6 = &off_1E5DC59F0;
  }
  v21 = v2;
  v22 = v6;
  *(_QWORD *)&v20 = v5;
  sub_1AE50AF58(&v20, (uint64_t)&v0[OBJC_IVAR___GDEntityResolutionTextClientInner_service]);
  v9 = objc_allocWithZone((Class)type metadata accessor for FeedbackService());
  *(_QWORD *)&v0[OBJC_IVAR___GDEntityResolutionTextClientInner_feedbackService] = sub_1AE614AE0(v9);

  v10 = (objc_class *)type metadata accessor for EntityResolutionTextClient();
  return sub_1AE6149E4(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
}

id EntityResolutionTextClient.__allocating_init(for:viaXPC:warmup:)(uint64_t a1, char a2, char a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return sub_1AE614A3C(a1, a2, a3);
}

id EntityResolutionTextClient.__allocating_init(viaXPC:)(char a1)
{
  id v2;

  v2 = objc_allocWithZone((Class)type metadata accessor for EntityResolutionTextClient());
  return sub_1AE614A3C(0, a1, 0);
}

void EntityResolutionTextClient.__allocating_init(for:warmup:)()
{
  uint64_t v0;
  char v1;

  sub_1AE6148F4();
  v0 = sub_1AE614A5C();
  EntityResolutionTextClient.init(for:warmup:)(v0, v1);
  sub_1AE5035EC();
}

uint64_t sub_1AE60FF50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_1AE508FBC();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = sub_1AE4F67C0();
  v2[8] = sub_1AE4F7738();
  v4 = sub_1AE4F6854();
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = sub_1AE4FC554();
  v5 = sub_1AE5035E4();
  v2[12] = v5;
  v2[13] = *(_QWORD *)(v5 - 8);
  v2[14] = sub_1AE4FC554();
  v2[15] = sub_1AE4FBB00();
  v2[16] = sub_1AE4FC554();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

#error "1AE6100AC: call analysis failed (funcsize=128)"

uint64_t sub_1AE610274(uint64_t a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  _QWORD *v6;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  a3;
  v6 = (_QWORD *)swift_task_alloc();
  v3[4] = v6;
  *v6 = v3;
  v6[1] = sub_1AE6102E8;
  return sub_1AE60FF50(a1);
}

uint64_t sub_1AE6102E8()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v8;

  v2 = *v1;
  v8 = v2;
  v3 = *(void **)(v2 + 16);
  v4 = *v1;
  sub_1AE614860(&v8);

  v5 = *(_QWORD *)(v2 + 24);
  if (v0)
  {
    v6 = (void *)sub_1AE9246A8();

    (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v5 + 16))(*(_QWORD *)(v2 + 24), 0);
  }
  _Block_release(*(const void **)(v2 + 24));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1AE610384()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = v0;
  v2 = sub_1AE508FBC();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = sub_1AE4F67C0();
  v1[6] = sub_1AE4F7738();
  v3 = sub_1AE4F6854();
  v1[7] = v3;
  v1[8] = *(_QWORD *)(v3 - 8);
  v1[9] = sub_1AE4FC554();
  v4 = sub_1AE5035E4();
  v1[10] = v4;
  v1[11] = *(_QWORD *)(v4 - 8);
  v1[12] = sub_1AE4FC554();
  v1[13] = sub_1AE4FBB00();
  v1[14] = sub_1AE4FC554();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

#error "1AE6104E0: call analysis failed (funcsize=107)"

uint64_t sub_1AE61064C(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_1AE6146D0;
  return sub_1AE610384();
}

void sub_1AE6106AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_signpost_type_t v18;
  uint8_t *v19;
  uint8_t *v20;
  os_signpost_id_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  _WORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1AE4F67EC();
  v33 = v0;
  v34 = *(_QWORD *)(sub_1AE508FBC() - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE6148A8(v4, v30[0]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v30 - v6;
  v8 = sub_1AE4F6854();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1AE501BC0();
  v31 = *(_QWORD *)(v10 - 8);
  v32 = v10;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LogSignpost();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F90C8();
  if (qword_1ED31C728 != -1)
    swift_once();
  v16 = sub_1AE4FB608(v8, (uint64_t)qword_1ED31C710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v0, v16, v8);
  sub_1AE614868();
  sub_1AE925B00();
  sub_1AE925AC4();
  v17 = sub_1AE925B00();
  v18 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v19 = (uint8_t *)sub_1AE4F69B0();
    v30[1] = v8;
    v20 = v19;
    *(_WORD *)v19 = 0;
    v21 = sub_1AE925AD0();
    sub_1AE5079F0(&dword_1AE4F2000, v17, v18, v21, "ECR.TextClient.cooldown", "", v20);
    sub_1AE4F9064();
  }

  v22 = v34;
  sub_1AE6149B4(v30[2], (uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v23 = sub_1AE509980();
  sub_1AE4FBA8C((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  *(_QWORD *)v2 = "ECR.TextClient.cooldown";
  *(_QWORD *)(v2 + 8) = 23;
  *(_BYTE *)(v2 + 16) = 2;
  *(_QWORD *)(v2 + 24) = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v2 + *(int *)(v14 + 24), v13, v32);
  if (qword_1ED319C70 != -1)
    swift_once();
  sub_1AE4F77E8(v8, (uint64_t)qword_1ED31AD58);
  v24 = sub_1AE61496C();
  if (sub_1AE507DAC(v24))
  {
    v25 = (_WORD *)sub_1AE4F69B0();
    sub_1AE614AAC(v25);
    sub_1AE505D60(&dword_1AE4F2000, v26, v27, "ECR client: cooldown.");
    sub_1AE4F9064();
  }

  v28 = *(_QWORD *)(v33 + OBJC_IVAR___GDEntityResolutionTextClientInner_service + 24);
  v29 = *(_QWORD *)(v33 + OBJC_IVAR___GDEntityResolutionTextClientInner_service + 32);
  sub_1AE4F9858((_QWORD *)(v33 + OBJC_IVAR___GDEntityResolutionTextClientInner_service), v28);
  (*(void (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
  sub_1AE4F7EFC();
  sub_1AE50B9EC(v2);
  sub_1AE4F667C();
}

uint64_t sub_1AE6109F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_1AE508FBC();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = sub_1AE4F67C0();
  v2[7] = sub_1AE4F7738();
  v4 = sub_1AE4F6854();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = sub_1AE4FC554();
  v5 = sub_1AE5035E4();
  v2[11] = v5;
  v2[12] = *(_QWORD *)(v5 - 8);
  v2[13] = sub_1AE4FC554();
  v2[14] = sub_1AE4FBB00();
  v2[15] = sub_1AE4FC554();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

#error "1AE610B38: call analysis failed (funcsize=93)"

uint64_t sub_1AE610C3C(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  _QWORD *v7;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = a1;
  a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[5] = v7;
  *v7 = v3;
  v7[1] = sub_1AE610CB8;
  return sub_1AE6109F4((uint64_t)v6);
}

uint64_t sub_1AE610CB8(void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  void *v6;
  void *v7;
  _QWORD *v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);
  void *v10;
  _QWORD *v12;

  v3 = v1;
  v5 = (_QWORD *)*v2;
  v12 = v5;
  v7 = (void *)v5[2];
  v6 = (void *)v5[3];
  v8 = (_QWORD *)*v2;
  sub_1AE614860(&v12);

  v9 = (void (**)(_QWORD, _QWORD, _QWORD))v5[4];
  if (v3)
  {
    v10 = (void *)sub_1AE9246A8();
    sub_1AE4F6834();
    ((void (**)(_QWORD, _QWORD, void *))v9)[2](v9, 0, v10);

    _Block_release(v9);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v9)[2](v9, a1, 0);
    _Block_release(v9);

  }
  return sub_1AE4FC4C0((uint64_t (*)(void))v8[1]);
}

void sub_1AE610D68()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_signpost_type_t v8;
  _WORD *v9;
  os_signpost_id_t v10;
  uint64_t v11;
  os_log_type_t v12;
  _WORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE4F67EC();
  sub_1AE508FBC();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE614888();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE5062C8();
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE501BC0();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE614834();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F6744();
  if (qword_1ED31C728 != -1)
    v7 = swift_once();
  sub_1AE4F8244(v7, (uint64_t)qword_1ED31C710);
  sub_1AE614868();
  sub_1AE925B00();
  sub_1AE614A9C();
  sub_1AE925B00();
  v8 = sub_1AE614A0C();
  if ((sub_1AE614AEC() & 1) != 0)
  {
    v9 = (_WORD *)sub_1AE4F69B0();
    v10 = sub_1AE61480C(v9);
    sub_1AE614850(&dword_1AE4F2000, v11, v8, v10, "ECR.TextClient.resolve", "");
    sub_1AE4F9064();
  }

  sub_1AE6148DC();
  sub_1AE5086D0();
  sub_1AE4FCE84();
  sub_1AE509980();
  sub_1AE614958();
  sub_1AE614770((uint64_t)"ECR.TextClient.resolve");
  if (qword_1ED319C70 != -1)
    swift_once();
  sub_1AE4F77E8(v16, (uint64_t)qword_1ED31AD58);
  v12 = sub_1AE61496C();
  if (sub_1AE507DAC(v12))
  {
    v13 = (_WORD *)sub_1AE4F69B0();
    sub_1AE614AAC(v13);
    sub_1AE505D60(&dword_1AE4F2000, v14, v15, "ECR client: resolve entitites.");
    sub_1AE4F9064();
  }

  sub_1AE506958(OBJC_IVAR___GDEntityResolutionTextClientInner_service);
  sub_1AE614A14(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v1 + 24));
  sub_1AE6149F4();
  sub_1AE507E38();
  sub_1AE6149C4();
  sub_1AE4F667C();
}

uint64_t sub_1AE611004(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_1AE508FBC();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = sub_1AE4F67C0();
  v2[7] = sub_1AE4F7738();
  v4 = sub_1AE4F6854();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = sub_1AE4FC554();
  v5 = sub_1AE5035E4();
  v2[11] = v5;
  v2[12] = *(_QWORD *)(v5 - 8);
  v2[13] = sub_1AE4FC554();
  v2[14] = sub_1AE4FBB00();
  v2[15] = sub_1AE4FC554();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

#error "1AE611148: call analysis failed (funcsize=93)"

void sub_1AE61124C(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6)
{
  void *v9;
  _QWORD *v10;
  id v11;
  id v12;

  v9 = _Block_copy(aBlock);
  sub_1AE614994();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = v9;
  v10[4] = a1;
  v11 = a3;
  v12 = a1;
  sub_1AE62C930(a6, (uint64_t)v10);
}

uint64_t sub_1AE6112B4(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  sub_1AE53F468(0, &qword_1EED9DDF0);
  v5 = sub_1AE9261CC();
  v3[4] = v5;
  a3;
  v6 = (_QWORD *)swift_task_alloc();
  v3[5] = v6;
  *v6 = v3;
  v6[1] = sub_1AE611354;
  return sub_1AE611004(v5);
}

uint64_t sub_1AE611354()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);
  uint64_t v11;

  v2 = v0;
  v3 = *v1;
  v11 = v3;
  v4 = *(void **)(v3 + 16);
  v5 = *v1;
  sub_1AE614860(&v11);

  swift_bridgeObjectRelease();
  if (v0)
  {
    v6 = sub_1AE9246A8();

    v7 = 0;
    v8 = (void *)v6;
  }
  else
  {
    sub_1AE53F468(0, &qword_1ED30FCA0);
    v7 = sub_1AE9261C0();
    swift_bridgeObjectRelease();
    v6 = 0;
    v8 = (void *)v7;
  }
  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  return sub_1AE4FC4C0(*(uint64_t (**)(void))(v5 + 8));
}

void sub_1AE61142C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_signpost_type_t v8;
  _WORD *v9;
  os_signpost_id_t v10;
  uint64_t v11;
  os_log_type_t v12;
  _WORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE4F67EC();
  sub_1AE508FBC();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE614888();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE5062C8();
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE501BC0();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE614834();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F6744();
  if (qword_1ED31C728 != -1)
    v7 = swift_once();
  sub_1AE4F8244(v7, (uint64_t)qword_1ED31C710);
  sub_1AE614868();
  sub_1AE925B00();
  sub_1AE614A9C();
  sub_1AE925B00();
  v8 = sub_1AE614A0C();
  if ((sub_1AE614AEC() & 1) != 0)
  {
    v9 = (_WORD *)sub_1AE4F69B0();
    v10 = sub_1AE61480C(v9);
    sub_1AE614850(&dword_1AE4F2000, v11, v8, v10, "ECR.TextClient.resolveBatch", "");
    sub_1AE4F9064();
  }

  sub_1AE6148DC();
  sub_1AE5086D0();
  sub_1AE4FCE84();
  sub_1AE509980();
  sub_1AE614958();
  sub_1AE614770((uint64_t)"ECR.TextClient.resolveBatch");
  if (qword_1ED319C70 != -1)
    swift_once();
  sub_1AE4F77E8(v16, (uint64_t)qword_1ED31AD58);
  v12 = sub_1AE61496C();
  if (sub_1AE507DAC(v12))
  {
    v13 = (_WORD *)sub_1AE4F69B0();
    sub_1AE614AAC(v13);
    sub_1AE505D60(&dword_1AE4F2000, v14, v15, "ECR client: resolve entitites in batch.");
    sub_1AE4F9064();
  }

  sub_1AE506958(OBJC_IVAR___GDEntityResolutionTextClientInner_service);
  sub_1AE614A14(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v1 + 32));
  sub_1AE6149F4();
  sub_1AE507E38();
  sub_1AE6149C4();
  sub_1AE4F667C();
}

void sub_1AE611724()
{
  uint64_t v0;
  uint8_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_signpost_type_t v17;
  _WORD *v18;
  os_signpost_id_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  void *v25;
  os_log_type_t v26;
  _WORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1AE4F67EC();
  v36 = v0;
  v37 = v3;
  v38 = v4;
  v5 = sub_1AE508FBC();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  sub_1AE4F6630();
  v7 = MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_1AE4F6854();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1AE501BC0();
  v32 = *(_QWORD *)(v12 - 8);
  v33 = v12;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  v31 = sub_1AE4FD168();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F90F4();
  if (qword_1ED31C728 != -1)
    v15 = swift_once();
  sub_1AE614908(v15, (uint64_t)qword_1ED31C710);
  sub_1AE614868();
  sub_1AE925B00();
  sub_1AE925AC4();
  v16 = sub_1AE925B00();
  v17 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v18 = (_WORD *)sub_1AE4F69B0();
    v30 = v10;
    v19 = sub_1AE6149D4(v18);
    sub_1AE5079F0(&dword_1AE4F2000, v16, v17, v19, "ECR.TextClient.mention", "", v1);
    sub_1AE4F9064();
  }

  v21 = v34;
  v20 = v35;
  v22 = sub_1AE614938();
  sub_1AE6149B4(v22, v23, v24);
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v25 = (void *)sub_1AE509980();
  sub_1AE4FBA8C((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  *(_QWORD *)v2 = "ECR.TextClient.mention";
  *(_QWORD *)(v2 + 8) = 22;
  *(_BYTE *)(v2 + 16) = 2;
  *(_QWORD *)(v2 + 24) = v25;
  sub_1AE614A70(v2 + *(int *)(v31 + 24), v32);
  if (qword_1ED319C70 != -1)
    swift_once();
  sub_1AE4F77E8(v10, (uint64_t)qword_1ED31AD58);
  v26 = sub_1AE61496C();
  if (sub_1AE507DAC(v26))
  {
    v27 = (_WORD *)sub_1AE4F69B0();
    sub_1AE614AAC(v27);
    sub_1AE505D60(&dword_1AE4F2000, v28, v29, "ECR client: mengen called.");
    sub_1AE4F9064();
  }

  sub_1AE506958(OBJC_IVAR___GDEntityResolutionTextClientInner_service);
  (*(void (**)(uint64_t, uint64_t, void *, uint64_t))(v20 + 40))(v37, v38, v25, v20);
  sub_1AE4F7EFC();
  sub_1AE50B9EC(v2);
  sub_1AE6149C4();
  sub_1AE4F667C();
}

void sub_1AE611A7C()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  NSObject *v17;
  os_signpost_type_t v18;
  _WORD *v19;
  os_signpost_id_t v20;
  void (**v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  void *v28;
  void *v29;
  id v30;
  unint64_t v31;
  void *v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  BOOL v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  unint64_t v43;
  __int128 v44;
  uint64_t ObjectType;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  unint64_t v53;
  void *v54;
  void *v55;
  id v56;
  char *v57;
  void (**v58)(char *, void *, uint64_t);
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  void (**v62)(char *, char *, uint64_t);
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD v67[3];
  uint64_t v68;
  _OWORD v69[2];
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;

  sub_1AE4F67EC();
  v3 = v1;
  v63 = v4;
  v64 = v0;
  v5 = sub_1AE508FBC();
  v62 = *(void (***)(char *, char *, uint64_t))(v5 - 8);
  sub_1AE4F6630();
  v7 = MEMORY[0x1E0C80A78](v6);
  v61 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v48 - v9;
  v11 = sub_1AE4F6854();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v12);
  v60 = sub_1AE501BC0();
  v58 = *(void (***)(char *, void *, uint64_t))(v60 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F90F4();
  v57 = (char *)type metadata accessor for LogSignpost();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F9024();
  v59 = v16;
  if (qword_1ED31C728 != -1)
    goto LABEL_38;
  while (1)
  {
    sub_1AE614908(v15, (uint64_t)qword_1ED31C710);
    sub_1AE614868();
    sub_1AE925B00();
    sub_1AE925AC4();
    v17 = sub_1AE925B00();
    v18 = sub_1AE926670();
    if ((sub_1AE926700() & 1) != 0)
    {
      v19 = (_WORD *)sub_1AE4F69B0();
      v56 = (id)v11;
      v20 = sub_1AE6149D4(v19);
      sub_1AE5079F0(&dword_1AE4F2000, v17, v18, v20, "ECR.TextClient.mention", "", (uint8_t *)v3);
      sub_1AE4F9064();
    }

    v21 = v62;
    v62[2](v61, v10, v5);
    sub_1AE5086D0();
    sub_1AE4FCE84();
    v22 = sub_1AE509980();
    ((void (*)(char *, uint64_t))v21[1])(v10, v5);
    v24 = v59;
    v23 = v60;
    *v59 = "ECR.TextClient.mention";
    v24[1] = 22;
    *((_BYTE *)v24 + 16) = 2;
    v24[3] = v22;
    v58[4]((char *)v24 + *((int *)v57 + 6), v2, v23);
    if (qword_1ED319C70 != -1)
      swift_once();
    v25 = sub_1AE4F77E8(v11, (uint64_t)qword_1ED31AD58);
    v26 = sub_1AE9265E0();
    if (sub_1AE6147E0(v26))
    {
      v27 = (uint8_t *)sub_1AE4F69B0();
      *(_WORD *)v27 = 0;
      sub_1AE5068FC(&dword_1AE4F2000, v25, (os_log_type_t)v21, "ECR client: entity to text called.", v27);
      sub_1AE4F9064();
    }

    sub_1AE610D68();
    if (v3)
    {
      v46 = (uint64_t)v59;
      sub_1AE4F7EFC();
      sub_1AE50B9EC(v46);
      goto LABEL_35;
    }
    v29 = v28;
    v30 = objc_msgSend(v28, sel_rankedResults);
    sub_1AE4F77B8((uint64_t)v30, &qword_1ED30FC68);
    v31 = sub_1AE4FBB08();

    if (v31 >> 62)
      break;
    v32 = *(void **)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v32)
      goto LABEL_41;
LABEL_11:
    v33 = 0;
    v34 = v31 & 0xC000000000000001;
    v49 = v31 + 32;
    v50 = v31 & 0xFFFFFFFFFFFFFF8;
    v57 = (char *)&v70 + 8;
    v58 = (void (**)(char *, void *, uint64_t))v69 + 1;
    v53 = v31;
    v54 = v29;
    v51 = v31 & 0xC000000000000001;
    v52 = v32;
    while (1)
    {
      if (v34)
      {
        v35 = (id)MEMORY[0x1AF453B80](v33, v31);
      }
      else
      {
        if (v33 >= *(_QWORD *)(v50 + 16))
        {
          __break(1u);
          return;
        }
        v35 = *(id *)(v49 + 8 * v33);
      }
      v36 = __OFADD__(v33, 1);
      v37 = (void *)(v33 + 1);
      if (v36)
      {
        __break(1u);
        goto LABEL_40;
      }
      v56 = v35;
      v38 = objc_msgSend(v35, sel_rankedItems);
      v39 = sub_1AE614A44();
      sub_1AE53F468(v39, &qword_1ED30FC60);
      v3 = sub_1AE4FBB08();

      if (v3 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v40 = sub_1AE926AD8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v40 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      v55 = v37;
      if (v40)
        break;
LABEL_31:

      sub_1AE505348();
      v32 = v52;
      v31 = v53;
      v29 = v54;
      v33 = (unint64_t)v55;
      v34 = v51;
      if (v55 == v52)
        goto LABEL_41;
    }
    v5 = v40;
    v60 = v3;
    v61 = (char *)(v3 & 0xC000000000000001);
    v11 = 4;
    while (1)
    {
      v41 = v61 ? (id)MEMORY[0x1AF453B80](v11 - 4, v3) : *(id *)(v3 + 8 * v11);
      v2 = v41;
      v10 = (char *)(v11 - 3);
      if (__OFADD__(v11 - 4, 1))
        break;
      if (qword_1ED31C9B0 != -1)
        swift_once();
      sub_1AE598B58();
      sub_1AE60E91C((uint64_t)&v66, (uint64_t)v67);
      if (*(_QWORD *)&v67[0])
      {
        v69[0] = v67[0];
        v69[1] = v67[1];
        v70 = v67[2];
        v71 = v68;
        v42 = objc_msgSend(v2, sel_entityID);
        v43 = (unint64_t)objc_msgSend(v42, sel_intValue);

        if ((v43 & 0x8000000000000000) != 0)
          goto LABEL_37;
        v62 = (void (**)(char *, char *, uint64_t))(v11 - 3);
        v63 = v2;
        v44 = *(_OWORD *)v58;
        v64 = v70;
        v72 = *(_OWORD *)v57;
        v73 = v44;
        ObjectType = swift_getObjectType();
        MEMORY[0x1E0C80A78](ObjectType);
        *(&v48 - 2) = (uint64_t)v69;
        *(&v48 - 1) = v43;
        sub_1AE501548(&qword_1EED9DD90);
        sub_1AE924CCC();
        sub_1AE60F6F0(v65);
        swift_unknownObjectRelease();
        v74 = v73;
        sub_1AE574264((uint64_t)&v74);
        swift_unknownObjectRelease();
        v75 = v72;
        sub_1AE574264((uint64_t)&v75);
        v3 = v60;
        v10 = (char *)v62;
        v2 = v63;
      }

      ++v11;
      if (v10 == (char *)v5)
        goto LABEL_31;
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    v15 = swift_once();
  }
LABEL_40:
  swift_bridgeObjectRetain();
  v32 = (void *)sub_1AE926AD8();
  swift_bridgeObjectRelease();
  if (v32)
    goto LABEL_11;
LABEL_41:

  swift_bridgeObjectRelease();
  v47 = (uint64_t)v59;
  sub_1AE4F7EFC();
  sub_1AE50B9EC(v47);
LABEL_35:
  sub_1AE4F667C();
}

uint64_t sub_1AE612168()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  _WORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  os_log_type_t v17;
  _WORD *v18;
  uint64_t v19;
  uint64_t v20;

  sub_1AE501548(&qword_1EED9DD98);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4F6744();
  sub_1AE501548(&qword_1EED9AD58);
  sub_1AE4F7878();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F90C8();
  if (qword_1ED319C70 != -1)
    swift_once();
  v3 = sub_1AE4F6854();
  sub_1AE4FB608(v3, (uint64_t)qword_1ED31AD58);
  sub_1AE925B54();
  v4 = sub_1AE614A04();
  if (sub_1AE507DAC(v4))
  {
    v5 = (_WORD *)sub_1AE4F69B0();
    sub_1AE614828(v5);
    sub_1AE6146D4(&dword_1AE4F2000, v6, v7, "AddressToContact: embedding address string begin");
    sub_1AE4F9064();
  }

  v8 = sub_1AE925C98();
  type metadata accessor for AddressEmbedder();
  swift_allocObject();
  AddressEmbedder.init(modelName:dictionaryPaths:)(0xD00000000000002FLL, 0x80000001AE980940, v8);
  sub_1AE925E9C();
  v9 = sub_1AE925F98();
  if (v10)
  {
    v11 = v9;
    v12 = v10;
    do
    {
      sub_1AE614938();
      if ((sub_1AE925D70() & 1) == 0)
      {
        sub_1AE614938();
        if ((sub_1AE925DA0() & 1) != 0
          || (v11 == 32 ? (v13 = v12 == 0xE100000000000000) : (v13 = 0),
              v13 || (sub_1AE614938(), (sub_1AE926D60() & 1) != 0) || (sub_1AE614938(), (sub_1AE925DAC() & 1) != 0)))
        {
          v14 = sub_1AE614938();
          MEMORY[0x1AF453184](v14);
        }
      }
      swift_bridgeObjectRelease();
      v11 = sub_1AE925F98();
      v12 = v15;
    }
    while (v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_1AE60DD2C();
  v17 = sub_1AE9265EC();
  if (sub_1AE507DAC(v17))
  {
    v18 = (_WORD *)sub_1AE4F69B0();
    sub_1AE614828(v18);
    sub_1AE6146D4(&dword_1AE4F2000, v19, v20, "EmbedAddressQuery: No latin characters or numerals in address");
    sub_1AE4F9064();
  }

  swift_release();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1AE612614(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  os_log_type_t v3;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  NSObject *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  os_log_type_t v17;
  uint8_t *v19;
  os_log_type_t v20;
  uint8_t *v21;
  os_log_type_t v22;
  uint8_t *v23;

  if (qword_1ED319C70 != -1)
    swift_once();
  v5 = sub_1AE4F6854();
  v6 = sub_1AE4FB608(v5, (uint64_t)qword_1ED31AD58);
  v7 = v6;
  v8 = v6;
  sub_1AE925B54();
  v9 = sub_1AE5062C0();
  if (sub_1AE6147E0(v9))
  {
    v10 = (uint8_t *)sub_1AE4F69B0();
    *(_WORD *)v10 = 0;
    sub_1AE5068FC(&dword_1AE4F2000, v8, v2, "AddressToContact: vector search initiated for embedded address", v10);
    sub_1AE4F9064();
  }

  if (qword_1ED31C9B0 != -1)
    swift_once();
  v11 = qword_1ED31C9A0;
  v12 = ViewService.addressContactResolverEmbeddingView()();
  if (!v1)
  {
    v13 = v12;
    sub_1AE6149BC();
    v14 = sub_1AE5062C0();
    if (sub_1AE614A24(v14))
    {
      v15 = (uint8_t *)sub_1AE4F69B0();
      *(_WORD *)v15 = 0;
      sub_1AE5068FC(&dword_1AE4F2000, v11, v3, "AddressToContact: address vector database view loaded", v15);
      sub_1AE4F9064();
    }

    sub_1AE92556C();
    a1 = sub_1AE925590();
    sub_1AE6149BC();
    v17 = sub_1AE5062C0();
    if (sub_1AE614A24(v17))
    {
      v19 = (uint8_t *)sub_1AE4F69B0();
      *(_WORD *)v19 = 0;
      sub_1AE5068FC(&dword_1AE4F2000, v13, v3, "AddressToContact: vector search completed", v19);
      sub_1AE4F9064();
    }

    if (*(_QWORD *)(a1 + 16))
    {
      sub_1AE6149BC();
      v20 = sub_1AE5062C0();
      if (sub_1AE4FB89C(v20))
      {
        v21 = (uint8_t *)sub_1AE4F69B0();
        *(_WORD *)v21 = 0;
        sub_1AE5068FC(&dword_1AE4F2000, v13, v7, "AddressToContact: address candidates found", v21);
        sub_1AE4F9064();
      }

      sub_1AE4F6700();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1AE6149BC();
      v22 = sub_1AE5062C0();
      if (sub_1AE4FB89C(v22))
      {
        v23 = (uint8_t *)sub_1AE4F69B0();
        *(_WORD *)v23 = 0;
        sub_1AE5068FC(&dword_1AE4F2000, v13, v7, "AddressToContact: no address candidates found", v23);
        sub_1AE4F9064();
      }

      sub_1AE4F6700();
      return 0;
    }
  }
  return a1;
}

id sub_1AE6128B0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id result;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD, _QWORD, _QWORD);
  float v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  unint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  NSObject *v32;
  void (*v33)(_QWORD, _QWORD, _QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_1AE925644();
  sub_1AE4F7878();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F90C8();
  v7 = objc_msgSend(a1, sel_addressString);
  sub_1AE925E3C();

  v8 = sub_1AE612168();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v8 + 16))
  {
    result = (id)sub_1AE4F9038();
    goto LABEL_5;
  }
  v9 = sub_1AE612614(v8);
  result = (id)sub_1AE4F9038();
  if (!v1)
  {
    if (v9)
    {
      v39 = MEMORY[0x1E0DEE9D8];
      if (qword_1ED319C70 != -1)
        swift_once();
      v11 = sub_1AE4F6854();
      v32 = sub_1AE4FB608(v11, (uint64_t)qword_1ED31AD58);
      sub_1AE925B54();
      v12 = sub_1AE5062C0();
      if (os_log_type_enabled(v32, v12))
      {
        v13 = (uint8_t *)sub_1AE4F69B0();
        *(_WORD *)v13 = 0;
        sub_1AE5068FC(&dword_1AE4F2000, v32, v12, "AddressToContact: address contact candidates retrieved", v13);
        sub_1AE4F9064();
      }

      v14 = *(_QWORD *)(v9 + 16);
      if (v14)
      {
        v15 = v9 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
        v16 = *(_QWORD *)(v4 + 72);
        v17 = *(void (**)(_QWORD, _QWORD, _QWORD))(v4 + 16);
        v35 = v2;
        v36 = v4;
        v33 = v17;
        v34 = v16;
        do
        {
          v17(v3, v15, v2);
          sub_1AE925608();
          if (v18 > 0.88)
          {
            v19 = sub_1AE925638();
            if (v20 >> 60 != 15)
            {
              v21 = v19;
              v22 = v20;
              sub_1AE9243C0();
              sub_1AE4FCE84();
              sub_1AE9243B4();
              sub_1AE613EA0();
              sub_1AE9243A8();
              v23 = sub_1AE926D18();
              v25 = v24;
              objc_allocWithZone((Class)GDAddressResolutionResultEntity);
              swift_bridgeObjectRetain();
              v26 = sub_1AE613D74(v23, v25, v37, v38);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v27 = v26;
              MEMORY[0x1AF4533D0]();
              v28 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v28 >> 1)
              {
                sub_1AE506008(v28);
                sub_1AE926220();
              }
              sub_1AE92625C();
              sub_1AE9261FC();
              swift_release();
              sub_1AE50BDA0(v21, v22);

              v2 = v35;
              v4 = v36;
              v17 = v33;
              v16 = v34;
            }
          }
          sub_1AE4FBA8C(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
          v15 += v16;
          --v14;
        }
        while (v14);
      }
      swift_bridgeObjectRelease();
      sub_1AE925B54();
      v29 = sub_1AE5062C0();
      if (sub_1AE6147E0(v29))
      {
        v30 = (uint8_t *)sub_1AE4F69B0();
        *(_WORD *)v30 = 0;
        sub_1AE5068FC(&dword_1AE4F2000, v32, (os_log_type_t)v2, "AddressToContact: candidate payload loading succeeded", v30);
        sub_1AE4F9064();
      }

      sub_1AE4F77B8(v31, &qword_1EED9DDA8);
      return sub_1AE612CC4();
    }
LABEL_5:
    sub_1AE4F77B8((uint64_t)result, &qword_1EED9DDA8);
    return sub_1AE612CC4();
  }
  return result;
}

id sub_1AE612CC4()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1AE53F468(0, &qword_1EED9DE38);
  v1 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithRankedEntities_, v1);

  return v2;
}

void sub_1AE612DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t j;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v73 = a1 + 56;
  sub_1AE506C24();
  v9 = v8 & v7;
  sub_1AE614974();
  v10 = 0;
  v11 = MEMORY[0x1E0DEE9D8];
  if (!v9)
    goto LABEL_3;
LABEL_2:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v10 << 6); ; i = __clz(__rbit64(v15)) + (v10 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * i);
    sub_1AE61498C();
    v5 = sub_1AE61481C();
    *(_BYTE *)(v5 + 16) = 1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE6146E8();
      v11 = v21;
    }
    v19 = *(_QWORD *)(v11 + 16);
    v18 = *(_QWORD *)(v11 + 24);
    if (v19 >= v18 >> 1)
    {
      sub_1AE506008(v18);
      sub_1AE509974();
      v11 = v22;
    }
    *(_QWORD *)(v11 + 16) = v19 + 1;
    v20 = v11 + 16 * v19;
    *(_QWORD *)(v20 + 32) = v17;
    *(_QWORD *)(v20 + 40) = v5;
    if (v9)
      goto LABEL_2;
LABEL_3:
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    if (v14 >= v4)
      goto LABEL_23;
    v15 = *(_QWORD *)(v73 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v4)
        goto LABEL_23;
      v15 = *(_QWORD *)(v73 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v4)
          goto LABEL_23;
        v15 = *(_QWORD *)(v73 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_16:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 < v4)
  {
    v15 = *(_QWORD *)(v73 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        v10 = v16 + 1;
        if (__OFADD__(v16, 1))
          break;
        if (v10 >= v4)
          goto LABEL_23;
        v15 = *(_QWORD *)(v73 + 8 * v10);
        ++v16;
        if (v15)
          goto LABEL_16;
      }
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    v10 = v16;
    goto LABEL_16;
  }
LABEL_23:
  swift_release();
  v23 = a2 + 56;
  sub_1AE506C24();
  v26 = v25 & v24;
  sub_1AE614974();
  v27 = 0;
  if (!v26)
    goto LABEL_25;
LABEL_24:
  v28 = __clz(__rbit64(v26));
  v26 &= v26 - 1;
  for (j = v28 | (v27 << 6); ; j = __clz(__rbit64(v31)) + (v27 << 6))
  {
    v33 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * j);
    sub_1AE61498C();
    v34 = sub_1AE61481C();
    if ((sub_1AE61492C(v34, 2) & 1) == 0)
    {
      sub_1AE6146E8();
      v11 = v38;
    }
    v36 = *(_QWORD *)(v11 + 16);
    v35 = *(_QWORD *)(v11 + 24);
    v5 = v36 + 1;
    if (v36 >= v35 >> 1)
    {
      sub_1AE506008(v35);
      sub_1AE509974();
      v11 = v39;
    }
    *(_QWORD *)(v11 + 16) = v5;
    v37 = v11 + 16 * v36;
    *(_QWORD *)(v37 + 32) = v33;
    *(_QWORD *)(v37 + 40) = v34;
    if (v26)
      goto LABEL_24;
LABEL_25:
    v30 = v27 + 1;
    if (__OFADD__(v27, 1))
      goto LABEL_94;
    if (v30 >= v4)
      break;
    v31 = *(_QWORD *)(v23 + 8 * v30);
    ++v27;
    if (!v31)
    {
      v27 = v30 + 1;
      if (v30 + 1 >= v4)
        break;
      v31 = *(_QWORD *)(v23 + 8 * v27);
      if (!v31)
      {
        v27 = v30 + 2;
        if (v30 + 2 >= v4)
          break;
        v31 = *(_QWORD *)(v23 + 8 * v27);
        if (!v31)
        {
          v32 = v30 + 3;
          if (v32 >= v4)
            break;
          v31 = *(_QWORD *)(v23 + 8 * v32);
          if (!v31)
          {
            while (1)
            {
              v27 = v32 + 1;
              if (__OFADD__(v32, 1))
                break;
              if (v27 >= v4)
                goto LABEL_45;
              v31 = *(_QWORD *)(v23 + 8 * v27);
              ++v32;
              if (v31)
                goto LABEL_38;
            }
LABEL_98:
            __break(1u);
            goto LABEL_99;
          }
          v27 = v32;
        }
      }
    }
LABEL_38:
    v26 = (v31 - 1) & v31;
  }
LABEL_45:
  swift_release();
  v40 = a3 + 56;
  sub_1AE6147B8();
  v42 = v41 >> 6;
  swift_bridgeObjectRetain();
  v43 = 0;
  if (!v5)
    goto LABEL_47;
  while (2)
  {
    sub_1AE4FCFD4();
    v45 = v44 | (v43 << 6);
LABEL_61:
    v49 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v45);
    sub_1AE61498C();
    v50 = sub_1AE61481C();
    if ((sub_1AE61492C(v50, 3) & 1) == 0)
    {
      sub_1AE6146E8();
      v11 = v54;
    }
    v52 = *(_QWORD *)(v11 + 16);
    v51 = *(_QWORD *)(v11 + 24);
    if (v52 >= v51 >> 1)
    {
      sub_1AE506008(v51);
      sub_1AE509974();
      v11 = v55;
    }
    *(_QWORD *)(v11 + 16) = v52 + 1;
    v53 = v11 + 16 * v52;
    *(_QWORD *)(v53 + 32) = v49;
    *(_QWORD *)(v53 + 40) = v50;
    if (v5)
      continue;
    break;
  }
LABEL_47:
  v46 = v43 + 1;
  if (__OFADD__(v43, 1))
    goto LABEL_95;
  if (v46 >= v42)
  {
LABEL_67:
    swift_release();
    v56 = a4 + 56;
    sub_1AE6147B8();
    v58 = v57 >> 6;
    swift_bridgeObjectRetain();
    v59 = 0;
    while (1)
    {
      v60 = v59 + 1;
      if (__OFADD__(v59, 1))
        goto LABEL_96;
      if (v60 >= v58)
        goto LABEL_86;
      ++v59;
      if (!*(_QWORD *)(v56 + 8 * v60))
      {
        v59 = v60 + 1;
        if (v60 + 1 >= v58)
          goto LABEL_86;
        if (!*(_QWORD *)(v56 + 8 * v59))
        {
          v59 = v60 + 2;
          if (v60 + 2 >= v58)
            goto LABEL_86;
          if (!*(_QWORD *)(v56 + 8 * v59))
          {
            v61 = v60 + 3;
            if (v61 >= v58)
            {
LABEL_86:
              swift_release();
              v70 = *(_QWORD *)(v11 + 16);
              if (v70)
              {
                v71 = v11 + 40;
                while (1)
                {
                  swift_retain();
                  sub_1AE5531CC();
                  if (v72)
                    break;
                  swift_release();
                  v71 += 16;
                  if (!--v70)
                    goto LABEL_90;
                }
                sub_1AE4F81B8();
                swift_release();
              }
              else
              {
LABEL_90:
                sub_1AE4F81B8();
              }
              return;
            }
            if (!*(_QWORD *)(v56 + 8 * v61))
            {
              while (1)
              {
                v59 = v61 + 1;
                if (__OFADD__(v61, 1))
                  goto LABEL_100;
                if (v59 >= v58)
                  goto LABEL_86;
                ++v61;
                if (*(_QWORD *)(v56 + 8 * v59))
                  goto LABEL_81;
              }
            }
            v59 = v61;
          }
        }
      }
LABEL_81:
      sub_1AE614AB8();
      v63 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * (v62 + (v59 << 6)));
      sub_1AE61498C();
      v64 = sub_1AE61481C();
      if ((sub_1AE61492C(v64, 4) & 1) == 0)
      {
        sub_1AE6146E8();
        v11 = v68;
      }
      v66 = *(_QWORD *)(v11 + 16);
      v65 = *(_QWORD *)(v11 + 24);
      if (v66 >= v65 >> 1)
      {
        sub_1AE506008(v65);
        sub_1AE509974();
        v11 = v69;
      }
      *(_QWORD *)(v11 + 16) = v66 + 1;
      v67 = v11 + 16 * v66;
      *(_QWORD *)(v67 + 32) = v63;
      *(_QWORD *)(v67 + 40) = v64;
    }
  }
  ++v43;
  if (*(_QWORD *)(v40 + 8 * v46))
    goto LABEL_60;
  v43 = v46 + 1;
  if (v46 + 1 >= v42)
    goto LABEL_67;
  if (*(_QWORD *)(v40 + 8 * v43))
    goto LABEL_60;
  v43 = v46 + 2;
  if (v46 + 2 >= v42)
    goto LABEL_67;
  if (*(_QWORD *)(v40 + 8 * v43))
  {
LABEL_60:
    sub_1AE614AB8();
    v45 = v48 + (v43 << 6);
    goto LABEL_61;
  }
  v47 = v46 + 3;
  if (v47 >= v42)
    goto LABEL_67;
  if (*(_QWORD *)(v40 + 8 * v47))
  {
    v43 = v47;
    goto LABEL_60;
  }
  while (1)
  {
    v43 = v47 + 1;
    if (__OFADD__(v47, 1))
      break;
    if (v43 >= v42)
      goto LABEL_67;
    ++v47;
    if (*(_QWORD *)(v40 + 8 * v43))
      goto LABEL_60;
  }
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
}

void sub_1AE6134CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  v39 = *MEMORY[0x1E0C80C00];
  v5 = sub_1AE9244BC();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F90C8();
  v7 = v4 == (_QWORD *)7105633 && v2 == 0xE300000000000000;
  if (v7 || (sub_1AE926D60() & 1) != 0)
  {
    static EntityResolutionViewDependencies.loadECRViews()((uint64_t *)&v37);
    v8 = v37;
    if (!v37)
      goto LABEL_27;
    v9 = v37[2];
    if (v9)
    {
      v37 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1AE52154C();
      v10 = v37;
      v11 = v8 + 5;
      do
      {
        v13 = *(v11 - 1);
        v12 = *v11;
        v37 = v10;
        v15 = v10[2];
        v14 = v10[3];
        swift_bridgeObjectRetain();
        if (v15 >= v14 >> 1)
        {
          sub_1AE614AD8();
          v10 = v37;
        }
        v11 += 4;
        v10[2] = v15 + 1;
        v16 = &v10[2 * v15];
        v16[4] = v13;
        v16[5] = v12;
        --v9;
      }
      while (v9);
      sub_1AE4F81B8();
      goto LABEL_23;
    }
  }
  else
  {
    v37 = v4;
    v38 = v2;
    sub_1AE4F7630();
    v17 = sub_1AE926790();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v36 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1AE52154C();
      v19 = (uint64_t *)(v17 + 40);
      do
      {
        v20 = *v19;
        v37 = (_QWORD *)*(v19 - 1);
        v38 = v20;
        swift_bridgeObjectRetain();
        sub_1AE9244B0();
        v21 = sub_1AE9267A8();
        v23 = v22;
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v0, v35);
        swift_bridgeObjectRelease();
        v10 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE614AD8();
          v10 = v36;
        }
        v25 = v10[2];
        v24 = v10[3];
        if (v25 >= v24 >> 1)
        {
          sub_1AE506008(v24);
          sub_1AE614AD8();
          v10 = v36;
        }
        v19 += 2;
        v10[2] = v25 + 1;
        v26 = &v10[2 * v25];
        v26[4] = v21;
        v26[5] = v23;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_23:
  v27 = objc_msgSend(objc_allocWithZone((Class)GDXPCInternalService), sel_init);
  sub_1AE4F77B8((uint64_t)v27, &qword_1EED9DDB8);
  v28 = sub_1AE61387C((uint64_t)v10, 0);
  sub_1AE4F77B8((uint64_t)v28, (unint64_t *)&qword_1ED318F50);
  sub_1AE614A44();
  v29 = (void *)sub_1AE9266D0();
  v37 = 0;
  v30 = objc_msgSend(v27, sel_viewInfoWithViewQuery_rows_error_, v28, v29, &v37);

  v31 = v37;
  if (v30)
  {
    sub_1AE501548(&qword_1EED9E260);
    sub_1AE4FBB08();
    v32 = v31;

  }
  else
  {
    v33 = v37;
    sub_1AE9246B4();

    swift_willThrow();
  }

LABEL_27:
  sub_1AE4F667C();
}

id sub_1AE61387C(uint64_t a1, char a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v4 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithNames_includeDependencies_, v4, a2 & 1);

  return v5;
}

id EntityResolutionTextClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void EntityResolutionTextClient.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EntityResolutionTextClient.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EntityResolutionTextClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AE6139B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x73736572646461 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1682531437 && a2 == 0xE400000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x49746361746E6F63 && a2 == 0xE900000000000064)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AE613AFC(char a1)
{
  if (!a1)
    return 0x73736572646461;
  if (a1 == 1)
    return 1682531437;
  return 0x49746361746E6F63;
}

void sub_1AE613B50()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  v5 = sub_1AE501548(&qword_1EED9DDE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F90F4();
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE614350();
  sub_1AE926F34();
  if (v0)
  {
    sub_1AE4F90EC();
  }
  else
  {
    v7 = sub_1AE4F9230();
    v9 = v8;
    swift_bridgeObjectRetain();
    v15 = sub_1AE926BE0();
    v10 = sub_1AE4F9230();
    v12 = v11;
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v14 = v10;
    sub_1AE4FDB48(v13);
    swift_bridgeObjectRetain();
    sub_1AE4F90EC();
    sub_1AE4F9038();
    sub_1AE4F6728();
    *v4 = v7;
    v4[1] = v9;
    v4[2] = v15;
    v4[3] = v14;
    v4[4] = v12;
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE613CB4()
{
  char *v0;

  return sub_1AE613AFC(*v0);
}

uint64_t sub_1AE613CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE6139B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE613CE0()
{
  sub_1AE614350();
  return sub_1AE926F94();
}

uint64_t sub_1AE613D08()
{
  sub_1AE614350();
  return sub_1AE926FA0();
}

double sub_1AE613D30@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  uint64_t v6;

  sub_1AE613B50();
  if (!v1)
  {
    result = *(double *)&v4;
    *(_OWORD *)a1 = v4;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = v6;
  }
  return result;
}

id sub_1AE613D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v7 = (void *)sub_1AE925E18();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(v4, sel_initWithMdId_contactId_, v6, v7);

  return v8;
}

uint64_t sub_1AE613E04@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1AE629BF4(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1AE613E1C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1EED9DD98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1AE613E5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EED9DDA0;
  if (!qword_1EED9DDA0)
  {
    v1 = sub_1AE523CF0(&qword_1EED9AD58);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0C9E6C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EED9DDA0);
  }
  return result;
}

unint64_t sub_1AE613EA0()
{
  unint64_t result;

  result = qword_1EED9DDB0;
  if (!qword_1EED9DDB0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944BE8, &type metadata for VectorDbAddressContactResolverPayload);
    atomic_store(result, (unint64_t *)&qword_1EED9DDB0);
  }
  return result;
}

uint64_t method lookup function for EntityResolutionTextClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntityResolutionTextClient.__allocating_init(for:viaXPC:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.__allocating_init(for:viaXPC:warmup:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.warmup(for:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE6148C8(v1, (uint64_t)sub_1AE4FC490);
  return sub_1AE4F6A74(v2, v3);
}

uint64_t dispatch thunk of EntityResolutionTextClient.warmupSync(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.cooldown()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1AE6146CC;
  return sub_1AE4F90A8(v5);
}

uint64_t dispatch thunk of EntityResolutionTextClient.cooldownSync()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.resolveEntities(forRequest:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE6148C8(v1, (uint64_t)sub_1AE604F90);
  return sub_1AE4F6A74(v2, v3);
}

uint64_t dispatch thunk of EntityResolutionTextClient.resolveEntitiesSync(forRequest:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.resolveEntities(forBatchRequests:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE6148C8(v1, (uint64_t)sub_1AE607D1C);
  return sub_1AE4F6A74(v2, v3);
}

uint64_t dispatch thunk of EntityResolutionTextClient.resolveEntitiesSync(forBatchRequests:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.generateMentions(forQuery:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.entityToText(forRequest:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.embedAddressQuery(address:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.addressContactCandidates(vectorToSearch:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.resolveAddressToContact(forRequest:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.recordDirectFeedback(withEngagedIds:rejectedIds:ignoredIds:neverPresentedIds:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of EntityResolutionTextClient.status(forViews:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t initializeWithCopy for VectorDbAddressContactResolverPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for VectorDbAddressContactResolverPayload(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VectorDbAddressContactResolverPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for VectorDbAddressContactResolverPayload()
{
  return &type metadata for VectorDbAddressContactResolverPayload;
}

unint64_t sub_1AE614350()
{
  unint64_t result;

  result = qword_1EED9DDE8;
  if (!qword_1EED9DDE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944CD4, &type metadata for VectorDbAddressContactResolverPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DDE8);
  }
  return result;
}

uint64_t sub_1AE614390()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)sub_1AE614AA4();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE614710(v1, (uint64_t)sub_1AE607CF8);
  return sub_1AE614700(v2, v3, v4, v5);
}

uint64_t sub_1AE6143D8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  sub_1AE614994();
  return swift_deallocObject();
}

uint64_t sub_1AE614404()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)sub_1AE614AA4();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE614710(v1, (uint64_t)sub_1AE605120);
  return sub_1AE614700(v2, v3, v4, v5);
}

uint64_t sub_1AE614448()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1AE614474()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1AE607CF8;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EED9DE18 + dword_1EED9DE18))(v2, v3);
}

uint64_t sub_1AE6144D8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));

  sub_1AE614994();
  return swift_deallocObject();
}

uint64_t sub_1AE6144FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)sub_1AE614AA4();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE614710(v1, (uint64_t)sub_1AE607CF8);
  return sub_1AE614700(v2, v3, v4, v5);
}

uint64_t storeEnumTagSinglePayload for VectorDbAddressContactResolverPayload.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE61458C + 4 * byte_1AE944B85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE6145C0 + 4 * byte_1AE944B80[v4]))();
}

uint64_t sub_1AE6145C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE6145C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE6145D0);
  return result;
}

uint64_t sub_1AE6145DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE6145E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE6145E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE6145F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VectorDbAddressContactResolverPayload.CodingKeys()
{
  return &type metadata for VectorDbAddressContactResolverPayload.CodingKeys;
}

unint64_t sub_1AE614610()
{
  unint64_t result;

  result = qword_1EED9DE40;
  if (!qword_1EED9DE40)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944CAC, &type metadata for VectorDbAddressContactResolverPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DE40);
  }
  return result;
}

unint64_t sub_1AE614650()
{
  unint64_t result;

  result = qword_1EED9DE48;
  if (!qword_1EED9DE48)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944C1C, &type metadata for VectorDbAddressContactResolverPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DE48);
  }
  return result;
}

unint64_t sub_1AE614690()
{
  unint64_t result;

  result = qword_1EED9DE50;
  if (!qword_1EED9DE50)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE944C44, &type metadata for VectorDbAddressContactResolverPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DE50);
  }
  return result;
}

void sub_1AE6146D4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void sub_1AE6146E8()
{
  sub_1AE51ACEC();
}

uint64_t sub_1AE614700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_1AE614710@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_1AE614754(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1AE614770@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)v4 = a1;
  *(_QWORD *)(v4 + 8) = v1;
  *(_BYTE *)(v4 + 16) = 2;
  *(_QWORD *)(v4 + 24) = v2;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6 - 136) + 32))(v4 + *(int *)(v5 + 24), v3, *(_QWORD *)(v6 - 128));
}

BOOL sub_1AE614798(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_1AE6147A8(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  NSObject *v6;
  uint8_t *v7;

  _os_signpost_emit_with_name_impl(a1, v6, a3, a4, a5, a6, v7, 2u);
}

BOOL sub_1AE6147E0(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_1AE6147F0()
{
  void *v0;

}

uint64_t sub_1AE61480C(_WORD *a1)
{
  *a1 = 0;
  return sub_1AE925AD0();
}

uint64_t sub_1AE61481C()
{
  return swift_allocObject();
}

_WORD *sub_1AE614828(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1AE614834()
{
  return type metadata accessor for LogSignpost();
}

void sub_1AE614850(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  NSObject *v6;
  uint8_t *v7;

  _os_signpost_emit_with_name_impl(a1, v6, a3, a4, a5, a6, v7, 2u);
}

uint64_t sub_1AE614860@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

uint64_t sub_1AE614868()
{
  return sub_1AE925AF4();
}

void sub_1AE614870()
{
  void *v0;

}

void sub_1AE6148A8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1AE6148C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_1AE6148DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 - 104) + 16))(v1, v0, *(_QWORD *)(v2 - 96));
}

id sub_1AE6148F4()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

uint64_t sub_1AE614908(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_1AE4FB608(v4, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
}

uint64_t sub_1AE61492C@<X0>(uint64_t a1@<X0>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 16) = a2;
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE614938()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE614944@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t sub_1AE614958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1AE61496C()
{
  return sub_1AE9265E0();
}

uint64_t sub_1AE614974()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE614980()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1AE61498C()
{
  return type metadata accessor for EntityResolutionRankingDirectFeedback();
}

uint64_t sub_1AE614994()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE6149A4()
{
  return swift_allocObject();
}

uint64_t sub_1AE6149B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1AE6149BC()
{
  return sub_1AE925B54();
}

uint64_t sub_1AE6149C4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE6149D4(_WORD *a1)
{
  *a1 = 0;
  return sub_1AE925AD0();
}

id sub_1AE6149E4(objc_class *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, objc_super a10)
{
  uint64_t v10;
  void *v11;

  a10.receiver = v11;
  a10.super_class = a1;
  return objc_msgSendSuper2(&a10, (SEL)(v10 + 3528));
}

uint64_t sub_1AE6149F4()
{
  return sub_1AE4F7EFC();
}

uint64_t sub_1AE614A04()
{
  return sub_1AE9265D4();
}

uint64_t sub_1AE614A0C()
{
  return sub_1AE926670();
}

uint64_t sub_1AE614A14@<X0>(uint64_t (*a1)(_QWORD, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(*(_QWORD *)(v3 - 120), v1, v2);
}

BOOL sub_1AE614A24(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1AE614A34()
{
  return sub_1AE925AC4();
}

id sub_1AE614A3C(uint64_t a1, char a2, char a3)
{
  return EntityResolutionTextClient.init(for:viaXPC:warmup:)(a1, a2, a3);
}

uint64_t sub_1AE614A44()
{
  return 0;
}

uint64_t sub_1AE614A50()
{
  return sub_1AE4F7EFC();
}

uint64_t sub_1AE614A5C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE614A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, v2);
}

uint64_t sub_1AE614A9C()
{
  return sub_1AE925AC4();
}

uint64_t sub_1AE614AA4()
{
  return swift_task_alloc();
}

_WORD *sub_1AE614AAC(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1AE614ACC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_1AE614AD8()
{
  sub_1AE52154C();
}

id sub_1AE614AE0(void *a1)
{
  return objc_msgSend(a1, sel_init);
}

uint64_t sub_1AE614AEC()
{
  return sub_1AE926700();
}

void sub_1AE614AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;

  sub_1AE5DF6B4();
  v2 = *(_QWORD *)(*(_QWORD *)(v0
                             + OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_servicePool)
                 + 16);
  v3 = *(os_unfair_lock_s **)(v2 + 24);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 16);
  sub_1AE60E438(&v4);
  os_unfair_lock_unlock(v3);
  if (v1)
    __break(1u);
}

_QWORD *sub_1AE614BAC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_signpost_type_t v20;
  uint8_t *v21;
  os_signpost_id_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _OWORD v55[4];
  uint64_t v56;
  char v57;
  uint64_t v58;
  _QWORD v59[16];
  _BYTE v60[24];
  ValueMetadata *v61;
  unint64_t v62;
  _BYTE v63[128];
  _BYTE __src[136];

  v51 = sub_1AE508FBC();
  v4 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  sub_1AE4FFEB4();
  v7 = v5 - v6;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v47 - v9;
  v11 = (_QWORD *)sub_1AE4F6854();
  v12 = *(v11 - 1);
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F936C();
  v13 = sub_1AE925B0C();
  v49 = *(_QWORD *)(v13 - 8);
  v50 = v13;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE509948();
  v48 = type metadata accessor for LogSignpost();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F9024();
  v53 = a1;
  v54 = v16;
  if (objc_msgSend(a1, sel_mode) == (id)6
    && (v61 = &type metadata for Features.FeatureFlag,
        v62 = sub_1AE5D7DF8(),
        v60[0] = 26,
        v17 = sub_1AE9249E4(),
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v60),
        (v17 & 1) == 0))
  {
    sub_1AE5716CC();
    sub_1AE4F6778();
    sub_1AE508AFC();
    sub_1AE508FC4(v33, v34);
    *(_BYTE *)(v35 + 16) = v36;
    swift_willThrow();
  }
  else
  {
    if (qword_1ED31C728 != -1)
      swift_once();
    v18 = sub_1AE4FB608((uint64_t)v11, (uint64_t)qword_1ED31C710);
    sub_1AE506F88(v1, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
    sub_1AE925AF4();
    sub_1AE925B00();
    sub_1AE925AC4();
    v19 = sub_1AE925B00();
    v20 = sub_1AE926670();
    if ((sub_1AE926700() & 1) != 0)
    {
      v21 = (uint8_t *)sub_1AE4F69B0();
      *(_WORD *)v21 = 0;
      v22 = sub_1AE925AD0();
      sub_1AE5079F0(&dword_1AE4F2000, v19, v20, v22, "ECR.TextInProcessService.resolve", "", v21);
      sub_1AE4F9064();
    }

    v23 = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v7, v10, v51);
    sub_1AE5086D0();
    sub_1AE4FCE84();
    sub_1AE925B30();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v23);
    v24 = v54;
    sub_1AE5086E0((uint64_t)"ECR.TextInProcessService.resolve");
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v24 + *(int *)(v48 + 24), v2, v50);
    CFAbsoluteTimeGetCurrent();
    v25 = v52;
    v11 = v53;
    sub_1AE5DF8B0((uint64_t)__src);
    if (!v25)
    {
      memcpy(v63, __src, 0x7AuLL);
      if (qword_1ED318C58 != -1)
        swift_once();
      v26 = *(_QWORD *)(qword_1ED3274E0 + 16);
      swift_bridgeObjectRetain();
      sub_1AE81B1E8(v26);
      v27 = objc_msgSend(v11, sel_mode);
      v28 = v47;
      sub_1AE4F4CD4((uint64_t)v27, v60);
      sub_1AE4FFF90(v55, v60);
      type metadata accessor for EntityResolutionRequestManager();
      memcpy(v59, v63, 0x7AuLL);
      v29 = *(_QWORD *)(v28 + OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_servicePool);
      sub_1AE5F66B4((uint64_t)v63);
      swift_retain();
      sub_1AE60CF34(v59, v55, v29, 0);
      v31 = v30;
      v32 = sub_1AE6083F8();
      v38 = v32;
      v39 = *(_QWORD *)(v32 + 16);
      if (v39)
      {
        v53 = v31;
        v59[0] = MEMORY[0x1E0DEE9D8];
        sub_1AE9269DC();
        v40 = (_QWORD *)(v38 + 112);
        do
        {
          v41 = *(v40 - 2);
          v42 = *((_BYTE *)v40 - 8);
          v43 = *v40;
          v44 = *((_OWORD *)v40 - 4);
          v55[0] = *((_OWORD *)v40 - 5);
          v55[1] = v44;
          v45 = *((_OWORD *)v40 - 2);
          v55[2] = *((_OWORD *)v40 - 3);
          v55[3] = v45;
          v56 = v41;
          v57 = v42;
          v58 = v43;
          sub_1AE5E19D0();
          sub_1AE9269B8();
          sub_1AE9269E8();
          sub_1AE9269F4();
          sub_1AE9269C4();
          v40 += 11;
          --v39;
        }
        while (v39);
        v46 = v59[0];
        sub_1AE4F81B8();
      }
      else
      {
        sub_1AE4F81B8();
        v46 = MEMORY[0x1E0DEE9D8];
      }
      if (v46 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_1AE926AD8();
        swift_bridgeObjectRelease();
      }
      __asm { BR              X10 }
    }
    sub_1AE507E38();
  }
  return v11;
}

uint64_t sub_1AE615200(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  NSObject *v15;
  uint64_t result;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  const char *v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  char v34;

  v3 = sub_1AE925B18();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1AE925AE8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE925B0C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE5DE938(0);
  sub_1AE5DEB04(0);
  v13 = type metadata accessor for LogSignpost();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2 + *(int *)(v13 + 24), v9);
  v33 = *(const char **)a2;
  v14 = *(_BYTE *)(a2 + 16);
  swift_retain();
  v15 = sub_1AE925B00();
  sub_1AE925B24();
  v29 = sub_1AE926664();
  result = sub_1AE926700();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v25 = v15;
  v26 = v10;
  v27 = v9;
  v28 = v6;
  if ((v14 & 1) == 0)
  {
    v17 = v33;
    if (v33)
    {
      v19 = v31;
      v18 = v32;
      v20 = v30;
LABEL_9:
      swift_retain();
      sub_1AE925B48();
      swift_release();
      v21 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v20, v18);
      v15 = v25;
      if (v21 == *MEMORY[0x1E0DF2190])
      {
        v22 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v18);
        v22 = "";
      }
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      v24 = sub_1AE925AD0();
      _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v15, (os_signpost_type_t)v29, v24, v17, v22, v23, 2u);
      MEMORY[0x1AF454C78](v23, -1, -1);
      v9 = v27;
      v6 = v28;
      v10 = v26;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v33 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v33 >> 11 != 27)
  {
    v19 = v31;
    v18 = v32;
    v20 = v30;
    if (v33 >> 16 <= 0x10)
    {
      v17 = &v34;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

void sub_1AE6154C8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_signpost_type_t v25;
  uint8_t *v26;
  os_signpost_id_t v27;
  char *v28;
  _QWORD *v29;
  _QWORD *v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = sub_1AE508FBC();
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4FFEB4();
  v37 = v8 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - v11;
  sub_1AE4F6854();
  sub_1AE509EE8();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F666C();
  v16 = v15 - v14;
  v17 = sub_1AE925B0C();
  v35 = *(_QWORD *)(v17 - 8);
  v36 = v17;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F666C();
  v21 = v20 - v19;
  v34 = type metadata accessor for LogSignpost();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v22);
  sub_1AE4F6744();
  if (qword_1ED31C728 != -1)
    goto LABEL_19;
  while (1)
  {
    v23 = sub_1AE4FB608(v1, (uint64_t)qword_1ED31C710);
    sub_1AE506F88(v16, v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    sub_1AE925AF4();
    sub_1AE925B00();
    sub_1AE925AC4();
    v24 = sub_1AE925B00();
    v25 = sub_1AE926670();
    if ((sub_1AE926700() & 1) != 0)
    {
      v26 = (uint8_t *)sub_1AE4F69B0();
      v27 = sub_1AE507548(v26);
      sub_1AE5079F0(&dword_1AE4F2000, v24, v25, v27, "ECR.TextInProcessService.resolveBatch", "", v26);
      sub_1AE4F9064();
    }

    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v37, v12, v39);
    sub_1AE5086D0();
    sub_1AE4FCE84();
    sub_1AE4F6A80();
    sub_1AE4FBB14();
    sub_1AE5086E0((uint64_t)"ECR.TextInProcessService.resolveBatch");
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v35 + 32))(v4 + *(int *)(v34 + 24), v21, v36);
    v40 = MEMORY[0x1E0DEE9D8];
    if (a1 >> 62)
      break;
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v16)
      goto LABEL_21;
LABEL_6:
    v38 = v4;
    v39 = a1;
    v4 = a1 & 0xC000000000000001;
    v3 = 4;
    while (1)
    {
      v1 = v3 - 4;
      v28 = v4 ? (char *)MEMORY[0x1AF453B80](v3 - 4, a1) : (char *)*(id *)(a1 + 8 * v3);
      v12 = v28;
      a1 = v3 - 3;
      if (__OFADD__(v1, 1))
        break;
      v29 = sub_1AE614BAC(v28);
      if (v2)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        v32 = v38;
        sub_1AE615B7C(v38);
        sub_1AE50B9EC(v32);
        goto LABEL_23;
      }
      v30 = v29;
      MEMORY[0x1AF4533D0]();
      v21 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v21 >= *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1AE926220();
      sub_1AE92625C();
      sub_1AE9261FC();

      ++v3;
      v31 = a1 == v16;
      a1 = v39;
      if (v31)
      {
        sub_1AE4F81B8();
        v4 = v38;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_19:
    swift_once();
  }
  swift_bridgeObjectRetain();
  v16 = sub_1AE926AD8();
  if (v16)
    goto LABEL_6;
LABEL_21:
  sub_1AE4F81B8();
LABEL_22:
  sub_1AE615B7C(v4);
  sub_1AE507E38();
LABEL_23:
  sub_1AE4F667C();
}

void sub_1AE615840(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_signpost_type_t v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  char v51;
  uint64_t v52;

  v44 = a2;
  v43 = a1;
  v42 = sub_1AE508FBC();
  v6 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  sub_1AE4FFEB4();
  v9 = v7 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - v11;
  sub_1AE4F6854();
  sub_1AE509EE8();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F6744();
  v14 = sub_1AE925B0C();
  v40 = *(_QWORD *)(v14 - 8);
  v41 = v14;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F936C();
  v39 = type metadata accessor for LogSignpost();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F666C();
  v19 = v18 - v17;
  if (qword_1ED31C728 != -1)
    swift_once();
  v20 = sub_1AE4FB608(v2, (uint64_t)qword_1ED31C710);
  sub_1AE506F88(v5, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v21 = sub_1AE925B00();
  v22 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v23 = (uint8_t *)sub_1AE4F69B0();
    v24 = sub_1AE507548(v23);
    sub_1AE5079F0(&dword_1AE4F2000, v21, v22, v24, "ECR.TextInProcessService.mention", "", v23);
    sub_1AE4F9064();
  }

  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v9, v12, v42);
  sub_1AE5086D0();
  sub_1AE4FCE84();
  sub_1AE4F6A80();
  sub_1AE4FBB14();
  *(_QWORD *)v19 = "ECR.TextInProcessService.mention";
  *(_QWORD *)(v19 + 8) = 32;
  *(_BYTE *)(v19 + 16) = 2;
  *(_QWORD *)(v19 + 24) = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v19 + *(int *)(v39 + 24), v3, v41);
  v25 = v45;
  sub_1AE821414(v43, v44);
  if (v25)
  {
    sub_1AE615B7C(v19);
    sub_1AE50B9EC(v19);
  }
  else
  {
    v27 = v26;
    if (v26)
    {
      v28 = *(_QWORD *)(v26 + 16);
      if (v28)
      {
        v52 = MEMORY[0x1E0DEE9D8];
        sub_1AE9269DC();
        v29 = (__int128 *)(v27 + 64);
        do
        {
          v30 = *((_QWORD *)v29 + 4);
          v31 = *((_BYTE *)v29 + 40);
          v32 = *(v29 - 1);
          v46 = *(v29 - 2);
          v47 = v32;
          v33 = *v29;
          v34 = v29[1];
          v29 += 5;
          v48 = v33;
          v49 = v34;
          v50 = v30;
          v51 = v31;
          sub_1AE5E1670();
          sub_1AE9269B8();
          sub_1AE9269E8();
          sub_1AE9269F4();
          sub_1AE9269C4();
          --v28;
        }
        while (v28);
        v35 = v52;
        v36 = swift_bridgeObjectRelease();
      }
      else
      {
        v36 = swift_bridgeObjectRelease();
        v35 = MEMORY[0x1E0DEE9D8];
      }
      sub_1AE4F77B8(v36, &qword_1EED9DE78);
      v37 = v35;
    }
    else
    {
      sub_1AE4F77B8(0, &qword_1EED9DE78);
      v37 = MEMORY[0x1E0DEE9D8];
    }
    sub_1AE61BD4C(v37);
    sub_1AE615B7C(v19);
    sub_1AE50B9EC(v19);
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE615B7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  NSObject *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint8_t *v21;
  os_signpost_id_t v22;
  uint64_t v23;
  uint64_t v24;
  os_signpost_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  char v30;

  v3 = sub_1AE925B18();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F9024();
  v26 = v5;
  v6 = sub_1AE925AE8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F666C();
  v10 = v9 - v8;
  v11 = sub_1AE925B0C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1AE509948();
  v13 = type metadata accessor for LogSignpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v1, a1 + *(int *)(v13 + 24), v11);
  v29 = *(const char **)a1;
  v14 = *(_BYTE *)(a1 + 16);
  swift_retain();
  v15 = sub_1AE925B00();
  sub_1AE925B24();
  v25 = sub_1AE926664();
  result = sub_1AE926700();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v1, v11);
  }
  v23 = v12;
  v24 = v7;
  if ((v14 & 1) == 0)
  {
    if (v29)
    {
      v18 = v27;
      v17 = v28;
      v19 = v26;
LABEL_9:
      swift_retain();
      sub_1AE925B48();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v18 + 88))(v19, v17) == *MEMORY[0x1E0DF2190])
      {
        v20 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v17);
        v20 = "";
      }
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      v22 = sub_1AE925AD0();
      _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v15, v25, v22, v29, v20, v21, 2u);
      MEMORY[0x1AF454C78](v21, -1, -1);
      v12 = v23;
      v7 = v24;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v29 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v29 >> 11 != 27)
  {
    v18 = v27;
    v17 = v28;
    v19 = v26;
    if (v29 >> 16 <= 0x10)
    {
      v29 = &v30;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

void sub_1AE615DEC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1AE615E24()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EntityResolutionTextInProcessService();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1AE615EB8()
{
  sub_1AE614AF4();
}

_QWORD *sub_1AE615ED8(_QWORD *a1)
{
  return sub_1AE614BAC(a1);
}

void sub_1AE615EF8(unint64_t a1)
{
  sub_1AE6154C8(a1);
}

void sub_1AE615F18(unint64_t a1, unint64_t a2)
{
  sub_1AE615840(a1, a2);
}

uint64_t sub_1AE615F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548((uint64_t *)&unk_1ED318C48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE615F74()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE615200(v1, v0);
}

uint64_t sub_1AE615F84(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v38 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)(v3 + 16) = objc_msgSend(objc_allocWithZone((Class)GDXPCEntityResolutionService), sel_init);
  if ((a2 & 1) != 0)
  {
    if (qword_1ED319C70 != -1)
      swift_once();
    v12 = sub_1AE925B6C();
    sub_1AE4FB608(v12, (uint64_t)qword_1ED31AD58);
    v13 = sub_1AE925B54();
    v14 = sub_1AE926604();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)sub_1AE4F66A0();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1AE4F2000, v13, v14, "ECR XPC: initialized without warmup.", v15, 2u);
      sub_1AE4F9064();
    }

  }
  else
  {
    if (qword_1ED319C70 != -1)
      swift_once();
    v6 = sub_1AE925B6C();
    sub_1AE4FB608(v6, (uint64_t)qword_1ED31AD58);
    v7 = sub_1AE925B54();
    v8 = sub_1AE926604();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)sub_1AE4F66A0();
      *(_DWORD *)v9 = 134217984;
      v37 = a1;
      sub_1AE92676C();
      _os_log_impl(&dword_1AE4F2000, v7, v8, "ECR XPC: initialized and warmed up for mode: %ld.", v9, 0xCu);
      sub_1AE4F9064();
    }

    v10 = *(void **)(v3 + 16);
    v37 = 0;
    if (objc_msgSend(v10, sel_warmupForMode_error_, a1, &v37))
    {
      v11 = v37;
    }
    else
    {
      v16 = v37;
      v17 = (void *)sub_1AE9246B4();

      swift_willThrow();
      v18 = v17;
      v19 = v17;
      v20 = sub_1AE925B54();
      v21 = sub_1AE9265EC();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)sub_1AE4F66A0();
        v37 = (id)sub_1AE4F66A0();
        *(_DWORD *)v22 = 136315138;
        swift_getErrorValue();
        v23 = sub_1AE926E20();
        sub_1AE520ED4(v23, v24, (uint64_t)&v37, v25, v26, v27, v28, v29, v31, v32, v33, v34, v35, v36, (uint64_t)v37, v38, v39, v40, v41,
          v42);
        sub_1AE92676C();
        swift_bridgeObjectRelease();
        sub_1AE4FC858();
        sub_1AE4FC858();
        _os_log_impl(&dword_1AE4F2000, v20, v21, "Service is initialized but warmup failed with error: %s.", v22, 0xCu);
        swift_arrayDestroy();
        sub_1AE4F9064();
      }
      sub_1AE4FC858();
      sub_1AE4FC858();
      sub_1AE4FC858();

    }
  }
  return v3;
}

id sub_1AE6162EC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  id v10;
  id v11[2];

  v2 = v1;
  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  if (qword_1ED319C70 != -1)
    swift_once();
  v4 = sub_1AE925B6C();
  sub_1AE4FB608(v4, (uint64_t)qword_1ED31AD58);
  v5 = sub_1AE925B54();
  v6 = sub_1AE926604();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    v11[0] = a1;
    sub_1AE92676C();
    _os_log_impl(&dword_1AE4F2000, v5, v6, "ECR XPC: initialized and warmed up for mode: %ld.", v7, 0xCu);
    sub_1AE4F9064();
  }

  v8 = *(void **)(v2 + 16);
  v11[0] = 0;
  if (objc_msgSend(v8, sel_warmupForMode_error_, a1, v11))
    return v11[0];
  v10 = v11[0];
  sub_1AE507554();

  return (id)swift_willThrow();
}

uint64_t sub_1AE616470()
{
  _QWORD *v0;

  sub_1AE5716CC();
  sub_1AE4F6778();
  *v0 = 0;
  v0[1] = 0;
  return sub_1AE4FBB3C((uint64_t)v0, 1);
}

void sub_1AE6164B0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  NSObject *v18;
  os_signpost_type_t v19;
  uint8_t *v20;
  os_signpost_id_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35[6];

  v35[5] = *(id *)MEMORY[0x1E0C80C00];
  v32 = sub_1AE508FBC();
  v4 = *(_QWORD *)(v32 - 8);
  v5 = MEMORY[0x1E0C80A78](v32);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = sub_1AE4FBB28();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F666C();
  v12 = v11 - v10;
  v13 = sub_1AE5035E4();
  v30 = *(_QWORD *)(v13 - 8);
  v31 = v13;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v14);
  v29 = sub_1AE4FD168();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F6744();
  v34 = a1;
  if (objc_msgSend(a1, sel_mode) == (id)6
    && (v35[3] = &type metadata for Features.FeatureFlag,
        v35[4] = (id)sub_1AE5D7DF8(),
        LOBYTE(v35[0]) = 26,
        v16 = sub_1AE9249E4(),
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v35),
        (v16 & 1) == 0))
  {
    sub_1AE5716CC();
    sub_1AE4F6778();
    *v27 = 0xD00000000000003FLL;
    v27[1] = 0x80000001AE980CC0;
    sub_1AE4FBB3C((uint64_t)v27, 8);
  }
  else
  {
    if (qword_1ED31C728 != -1)
      swift_once();
    v17 = sub_1AE4FB608(v8, (uint64_t)qword_1ED31C710);
    sub_1AE506F88(v12, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
    sub_1AE925AF4();
    sub_1AE925B00();
    sub_1AE925AC4();
    v18 = sub_1AE925B00();
    v19 = sub_1AE926670();
    if ((sub_1AE926700() & 1) != 0)
    {
      v20 = (uint8_t *)sub_1AE4F69B0();
      v21 = sub_1AE507548(v20);
      _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v18, v19, v21, "ECR.TextXPCService.resolve", "", v20, 2u);
      sub_1AE4F9064();
    }

    v22 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v2, v32);
    sub_1AE5086D0();
    sub_1AE4FCE84();
    v23 = sub_1AE4F6A80();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v22);
    *(_QWORD *)v1 = "ECR.TextXPCService.resolve";
    *(_QWORD *)(v1 + 8) = 26;
    *(_BYTE *)(v1 + 16) = 2;
    *(_QWORD *)(v1 + 24) = v23;
    sub_1AE614A70(v1 + *(int *)(v29 + 24), v30);
    v24 = *(void **)(v33 + 16);
    v35[0] = 0;
    if (objc_msgSend(v24, sel_submitQuery_withError_, v34, v35))
    {
      v25 = v35[0];
    }
    else
    {
      v26 = v35[0];
      sub_1AE9246B4();

      swift_willThrow();
    }
    sub_1AE617198();
    sub_1AE507E38();
  }
  sub_1AE4F667C();
}

void sub_1AE6167F4(unint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_signpost_type_t v20;
  _WORD *v21;
  os_signpost_id_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1AE508FBC();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F686C();
  v31 = v8;
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1AE4FBB28();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F90F4();
  v12 = sub_1AE5035E4();
  v29 = *(_QWORD *)(v12 - 8);
  v30 = v12;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F666C();
  v16 = v15 - v14;
  v28 = type metadata accessor for LogSignpost();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE4F6744();
  if (qword_1ED31C728 != -1)
    goto LABEL_19;
  while (1)
  {
    v18 = sub_1AE4FB608(v10, (uint64_t)qword_1ED31C710);
    sub_1AE506F88(v3, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
    sub_1AE925AF4();
    sub_1AE925B00();
    sub_1AE925AC4();
    v19 = sub_1AE925B00();
    v20 = sub_1AE926670();
    if ((sub_1AE926700() & 1) != 0)
    {
      v21 = (_WORD *)sub_1AE4F69B0();
      v22 = sub_1AE507548(v21);
      sub_1AE61718C(&dword_1AE4F2000, v19, v20, v22, "ECR.TextXPCService.resolveBatch", "");
      sub_1AE4F9064();
    }

    (*(void (**)(uint64_t, void *, uint64_t))(v32 + 16))(v31, v4, v33);
    sub_1AE5086D0();
    sub_1AE4FCE84();
    v23 = sub_1AE4F6A80();
    (*(void (**)(void *, uint64_t))(v32 + 8))(v4, v33);
    *(_QWORD *)v2 = "ECR.TextXPCService.resolveBatch";
    *(_QWORD *)(v2 + 8) = 31;
    *(_BYTE *)(v2 + 16) = 2;
    *(_QWORD *)(v2 + 24) = v23;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v29 + 32))(v2 + *(int *)(v28 + 24), v16, v30);
    v34 = MEMORY[0x1E0DEE9D8];
    if (a1 >> 62)
      break;
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3)
      goto LABEL_21;
LABEL_6:
    v32 = v2;
    v33 = a1;
    v2 = a1 & 0xC000000000000001;
    v11 = 4;
    while (1)
    {
      v10 = v11 - 4;
      v24 = v2 ? (id)MEMORY[0x1AF453B80](v11 - 4, a1) : *(id *)(a1 + 8 * v11);
      v4 = v24;
      a1 = v11 - 3;
      if (__OFADD__(v10, 1))
        break;
      sub_1AE6164B0(v24);
      if (v1)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        sub_1AE616E5C(v32);
        sub_1AE50B9EC(v32);
        goto LABEL_22;
      }
      v26 = v25;
      MEMORY[0x1AF4533D0]();
      v16 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v16 >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1AE926220();
      sub_1AE92625C();
      sub_1AE9261FC();

      ++v11;
      v27 = a1 == v3;
      a1 = v33;
      if (v27)
        goto LABEL_21;
    }
    __break(1u);
LABEL_19:
    swift_once();
  }
  swift_bridgeObjectRetain();
  v3 = sub_1AE926AD8();
  if (v3)
    goto LABEL_6;
LABEL_21:
  swift_bridgeObjectRelease();
  sub_1AE617198();
  sub_1AE507E38();
LABEL_22:
  sub_1AE4F667C();
}

void sub_1AE616B78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_signpost_type_t v19;
  _WORD *v20;
  os_signpost_id_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39[2];

  v39[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1AE508FBC();
  v35 = *(_QWORD *)(v3 - 8);
  v36 = (void *)v3;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F686C();
  v34 = v5;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v30 - v7;
  v9 = sub_1AE925B6C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F666C();
  v13 = v12 - v11;
  v14 = sub_1AE5035E4();
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v15);
  v31 = sub_1AE4FD168();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F90F4();
  if (qword_1ED31C728 != -1)
    swift_once();
  v17 = sub_1AE4FB608(v9, (uint64_t)qword_1ED31C710);
  sub_1AE506F88(v13, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v18 = sub_1AE925B00();
  v19 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v20 = (_WORD *)sub_1AE4F69B0();
    v30[1] = a1;
    *v20 = 0;
    v21 = sub_1AE925AD0();
    sub_1AE61718C(&dword_1AE4F2000, v18, v19, v21, "ECR.TextXPCService.mention", "");
    sub_1AE4F9064();
  }

  v22 = v35;
  v23 = v36;
  (*(void (**)(uint64_t, char *, void *))(v35 + 16))(v34, v8, v36);
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v24 = sub_1AE925B30();
  (*(void (**)(char *, void *))(v22 + 8))(v8, v23);
  *(_QWORD *)v1 = "ECR.TextXPCService.mention";
  *(_QWORD *)(v1 + 8) = 26;
  *(_BYTE *)(v1 + 16) = 2;
  *(_QWORD *)(v1 + 24) = v24;
  sub_1AE614A70(v1 + *(int *)(v31 + 24), v32);
  v25 = *(void **)(v37 + 16);
  v26 = (void *)sub_1AE925E18();
  v39[0] = 0;
  v27 = objc_msgSend(v25, sel_generateMentionsForQuery_error_, v26, v39);

  v28 = v39[0];
  if (!v27)
  {
    v29 = sub_1AE507554();

    v38 = v29;
    swift_willThrow();
  }
  sub_1AE616E5C(v1);
  sub_1AE50B9EC(v1);
  sub_1AE4F667C();
}

uint64_t sub_1AE616E5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  NSObject *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  _QWORD v25[2];
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  char v31;

  v2 = sub_1AE925B18();
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F666C();
  v27 = v5 - v4;
  v6 = sub_1AE925AE8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F666C();
  v10 = v9 - v8;
  v11 = sub_1AE925B0C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LogSignpost();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1 + *(int *)(v15 + 24), v11);
  v30 = *(const char **)a1;
  v16 = *(_BYTE *)(a1 + 16);
  swift_retain();
  v17 = sub_1AE925B00();
  sub_1AE925B24();
  v26 = sub_1AE926664();
  result = sub_1AE926700();
  if ((result & 1) == 0)
  {
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  v25[0] = v12;
  v25[1] = v7;
  if ((v16 & 1) == 0)
  {
    if (v30)
    {
      v20 = v28;
      v19 = v29;
      v21 = v27;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v30 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v30 >> 11 != 27)
  {
    v20 = v28;
    v19 = v29;
    v21 = v27;
    if (v30 >> 16 <= 0x10)
    {
      v30 = &v31;
LABEL_9:
      swift_retain();
      sub_1AE925B48();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v20 + 88))(v21, v19) == *MEMORY[0x1E0DF2190])
      {
        v22 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v19);
        v22 = "";
      }
      v23 = (uint8_t *)sub_1AE4F66A0();
      *(_WORD *)v23 = 0;
      v24 = sub_1AE925AD0();
      _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v17, (os_signpost_type_t)v26, v24, v30, v22, v23, 2u);
      sub_1AE4F9064();
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for EntityResolutionTextXPCService()
{
  return objc_opt_self();
}

id sub_1AE6170F8(void *a1)
{
  return sub_1AE6162EC(a1);
}

uint64_t sub_1AE617118()
{
  return sub_1AE616470();
}

void sub_1AE61712C(void *a1)
{
  sub_1AE6164B0(a1);
}

void sub_1AE61714C(unint64_t a1)
{
  sub_1AE6167F4(a1);
}

void sub_1AE61716C(uint64_t a1)
{
  sub_1AE616B78(a1);
}

void sub_1AE61718C(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6)
{
  uint8_t *v6;

  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, v6, 2u);
}

uint64_t sub_1AE617198()
{
  uint64_t v0;

  return sub_1AE616E5C(v0);
}

void *sub_1AE6171A0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[144];
  _BYTE v9[144];
  _BYTE __src[144];

  switch(a1)
  {
    case 1:
      v3 = 0xE800000000000000;
      v4 = 0x6465636E616C6162;
      break;
    case 2:
      v3 = 0xEB00000000797469;
      v4 = 0x6C61755168676968;
      break;
    case 3:
      v5 = 0x786966657270;
      goto LABEL_9;
    case 4:
      v4 = 0xD000000000000014;
      v3 = 0x80000001AE9750D0;
      break;
    case 5:
      v3 = 0x80000001AE9750F0;
      v4 = 0xD000000000000010;
      break;
    case 6:
      v5 = 0x646972627968;
LABEL_9:
      v4 = v5 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
      v3 = 0xEC00000068637261;
      break;
    default:
      v3 = 0xEA00000000007963;
      v4 = 0x6E6574614C776F6CLL;
      break;
  }
  static EntityResolutionConfig.fromResource(configName:)(v4, v3, (uint64_t)v8);
  swift_bridgeObjectRelease();
  sub_1AE615F2C((uint64_t)v8, (uint64_t)v9);
  sub_1AE615F2C((uint64_t)v9, (uint64_t)__src);
  if (sub_1AE5DE050((uint64_t)__src) != 1)
    return memcpy(a2, __src, 0x8DuLL);
  sub_1AE5716CC();
  swift_allocError();
  *(_OWORD *)v6 = xmmword_1AE944A30;
  *(_BYTE *)(v6 + 16) = 9;
  return (void *)swift_willThrow();
}

void static EntityResolutionViewDependencies.loadECRViews()(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  void *v19;
  void (*v20)(uint64_t, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint8_t *v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[7];

  v3 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F666C();
  v6 = v5 - v4;
  v7 = sub_1AE924780();
  sub_1AE4FB800();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v43 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v43 - v15;
  if (qword_1ED31AD30 != -1)
    swift_once();
  if (!qword_1ED31AD20)
  {
    if (qword_1ED319C70 != -1)
      swift_once();
    v35 = sub_1AE4F6854();
    sub_1AE4FB608(v35, (uint64_t)qword_1ED31AD58);
    v36 = sub_1AE925B54();
    v37 = sub_1AE9265EC();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)sub_1AE4F66A0();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_1AE4F2000, v36, v37, "Can't find the IntelligencePlatformTestViews bundle", v38, 2u);
      sub_1AE4F9064();
    }

    goto LABEL_22;
  }
  v17 = (id)qword_1ED31AD20;
  v18 = sub_1AE6181F0(0xD00000000000001ALL, 0x80000001AE980DA0, 1852797802, 0xE400000000000000, v17);
  if (!v18)
  {
    sub_1AE4FDA38(v6, 1);
    goto LABEL_17;
  }
  v19 = v18;
  sub_1AE924744();

  v20 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 32);
  v20(v6, v14, v7);
  sub_1AE4FDA38(v6, 0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v6, 1, v7) == 1)
  {
LABEL_17:
    sub_1AE543420(v6);
    if (qword_1ED319C70 != -1)
      swift_once();
    v39 = sub_1AE4F6854();
    sub_1AE4FB608(v39, (uint64_t)qword_1ED31AD58);
    v40 = sub_1AE925B54();
    v41 = sub_1AE9265EC();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)sub_1AE4F66A0();
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_1AE4F2000, v40, v41, "Failed to get the correct URL for viewDependencies.json", v42, 2u);
      sub_1AE4F9064();
    }

    goto LABEL_22;
  }
  v20((uint64_t)v16, (char *)v6, v7);
  sub_1AE5DADEC((uint64_t)v16, v48);
  v21 = v48[0];
  if (v48[0] != 1)
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v16, v7);

    goto LABEL_23;
  }
  if (qword_1ED319C70 != -1)
    swift_once();
  v22 = sub_1AE4F6854();
  v23 = (void (*)(char *, uint64_t))sub_1AE4FB608(v22, (uint64_t)qword_1ED31AD58);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v11, v16, v7);
  v24 = sub_1AE925B54();
  v25 = sub_1AE9265EC();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)sub_1AE4F66A0();
    v46 = sub_1AE4F66A0();
    v48[0] = v46;
    v45 = v26;
    *(_DWORD *)v26 = 136315138;
    v44 = v26 + 4;
    sub_1AE523C6C();
    v27 = sub_1AE926D18();
    sub_1AE520ED4(v27, v28, (uint64_t)v48, v29, v30, v31, v32, v33, v43, (unint64_t)v44, (uint64_t)v45, v46, v47, v48[0], v48[1], v48[2], v48[3], v48[4], v48[5],
      v48[6]);
    v47 = v34;
    sub_1AE92676C();
    swift_bridgeObjectRelease();
    sub_1AE501BDC();
    _os_log_impl(&dword_1AE4F2000, v24, v25, "Failed to load config data from %s", v45, 0xCu);
    swift_arrayDestroy();
    sub_1AE4F9064();
  }

  sub_1AE501BDC();
  v23(v16, v7);
LABEL_22:
  v21 = 0;
LABEL_23:
  *a1 = v21;
}

uint64_t ViewsClientSegmentation.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1AE926B44();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t ViewsClientSegmentation.rawValue.getter()
{
  return 7105633;
}

uint64_t sub_1AE617840(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6972616C75706F70 && a2 == 0xEF65726F63537974;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x73746E65696C63 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AE6179A0(char a1)
{
  if (!a1)
    return 1701667182;
  if (a1 == 1)
    return 0x6972616C75706F70;
  return 0x73746E65696C63;
}

uint64_t sub_1AE617A0C@<X0>(BOOL *a1@<X8>)
{
  return ViewsClientSegmentation.init(rawValue:)(a1);
}

void sub_1AE617A18(_QWORD *a1@<X8>)
{
  *a1 = 7105633;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1AE617A2C()
{
  sub_1AE618818();
  return sub_1AE926190();
}

uint64_t sub_1AE617A88()
{
  sub_1AE618818();
  return sub_1AE926148();
}

uint64_t sub_1AE617AD4()
{
  char *v0;

  return sub_1AE6179A0(*v0);
}

uint64_t sub_1AE617ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE617840(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE617B00()
{
  sub_1AE618264();
  return sub_1AE926F94();
}

uint64_t sub_1AE617B28()
{
  sub_1AE618264();
  return sub_1AE926FA0();
}

void ViewClientRepresentation.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_1AE501548(&qword_1EED9DE80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F666C();
  v6 = v5 - v4;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE618264();
  sub_1AE926F4C();
  sub_1AE926C88();
  if (!v8)
  {
    sub_1AE926CAC();
    sub_1AE4F69EC();
    sub_1AE5054DC(&qword_1EED9DE98, v7, (uint64_t (*)(void))sub_1AE6182A0, MEMORY[0x1E0DEAF10]);
    sub_1AE926CC4();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  sub_1AE4FCE0C();
}

void ViewClientRepresentation.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;

  sub_1AE501548(&qword_1EED9DEA8);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE618264();
  sub_1AE4F680C();
  if (v2)
  {
    sub_1AE4F90EC();
  }
  else
  {
    v6 = sub_1AE926BB0();
    v8 = v7;
    swift_bridgeObjectRetain();
    sub_1AE926BD4();
    v10 = v9;
    sub_1AE501548(&qword_1EED9DE90);
    sub_1AE4F989C(&qword_1EED9DEB0, &qword_1EED9DE90, (uint64_t (*)(void))sub_1AE6182DC, MEMORY[0x1E0DEAF40]);
    sub_1AE926BEC();
    sub_1AE4F9250();
    *(_QWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v8;
    *(_DWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v11;
    swift_bridgeObjectRetain();
    sub_1AE4F90EC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1AE4FCE0C();
}

void sub_1AE617E80(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ViewClientRepresentation.init(from:)(a1, a2);
}

void sub_1AE617E94(_QWORD *a1)
{
  ViewClientRepresentation.encode(to:)(a1);
}

uint64_t sub_1AE617EA8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7377656976 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE617F24()
{
  return 0x7377656976;
}

uint64_t sub_1AE617F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE617EA8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE617F64()
{
  sub_1AE618318();
  return sub_1AE926F94();
}

uint64_t sub_1AE617F8C()
{
  sub_1AE618318();
  return sub_1AE926FA0();
}

void EntityResolutionViewDependencies.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1AE501548(&qword_1EED9DEC0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F666C();
  v6 = v5 - v4;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE618318();
  sub_1AE926F4C();
  sub_1AE4F69EC();
  sub_1AE5054DC(&qword_1EED9DED8, v7, (uint64_t (*)(void))sub_1AE618354, MEMORY[0x1E0DEAF10]);
  sub_1AE926CC4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  sub_1AE4F667C();
}

void EntityResolutionViewDependencies.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1AE501548(&qword_1EED9DEE8);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F666C();
  v10 = v9 - v8;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE618318();
  sub_1AE4F680C();
  if (!v2)
  {
    sub_1AE4F69EC();
    sub_1AE5054DC(&qword_1EED9DEF0, v11, (uint64_t (*)(void))sub_1AE618390, MEMORY[0x1E0DEAF40]);
    sub_1AE926BEC();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v6);
    *a2 = v12;
  }
  sub_1AE4F90EC();
  sub_1AE4F667C();
}

void sub_1AE6181C8(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  EntityResolutionViewDependencies.init(from:)(a1, a2);
}

void sub_1AE6181DC(_QWORD *a1)
{
  EntityResolutionViewDependencies.encode(to:)(a1);
}

id sub_1AE6181F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)sub_1AE925E18();
  v7 = (void *)sub_1AE925E18();
  v8 = objc_msgSend(a5, sel_URLForResource_withExtension_, v6, v7);

  return v8;
}

unint64_t sub_1AE618264()
{
  unint64_t result;

  result = qword_1EED9DE88;
  if (!qword_1EED9DE88)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9451CC, &type metadata for ViewClientRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DE88);
  }
  return result;
}

unint64_t sub_1AE6182A0()
{
  unint64_t result;

  result = qword_1EED9DEA0;
  if (!qword_1EED9DEA0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewsClientSegmentation, &type metadata for ViewsClientSegmentation);
    atomic_store(result, (unint64_t *)&qword_1EED9DEA0);
  }
  return result;
}

unint64_t sub_1AE6182DC()
{
  unint64_t result;

  result = qword_1EED9DEB8;
  if (!qword_1EED9DEB8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewsClientSegmentation, &type metadata for ViewsClientSegmentation);
    atomic_store(result, (unint64_t *)&qword_1EED9DEB8);
  }
  return result;
}

unint64_t sub_1AE618318()
{
  unint64_t result;

  result = qword_1EED9DEC8;
  if (!qword_1EED9DEC8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94517C, &type metadata for EntityResolutionViewDependencies.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DEC8);
  }
  return result;
}

unint64_t sub_1AE618354()
{
  unint64_t result;

  result = qword_1EED9DEE0;
  if (!qword_1EED9DEE0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewClientRepresentation, &type metadata for ViewClientRepresentation);
    atomic_store(result, (unint64_t *)&qword_1EED9DEE0);
  }
  return result;
}

unint64_t sub_1AE618390()
{
  unint64_t result;

  result = qword_1EED9DEF8;
  if (!qword_1EED9DEF8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewClientRepresentation, &type metadata for ViewClientRepresentation);
    atomic_store(result, (unint64_t *)&qword_1EED9DEF8);
  }
  return result;
}

unint64_t sub_1AE6183D0()
{
  unint64_t result;

  result = qword_1EED9DF00;
  if (!qword_1EED9DF00)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewsClientSegmentation, &type metadata for ViewsClientSegmentation);
    atomic_store(result, (unint64_t *)&qword_1EED9DF00);
  }
  return result;
}

void type metadata accessor for ViewsClientSegmentation()
{
  sub_1AE4F67D4();
}

uint64_t initializeWithCopy for ViewClientRepresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ViewClientRepresentation(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ViewClientRepresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for ViewClientRepresentation()
{
  sub_1AE4F67D4();
}

void type metadata accessor for EntityResolutionViewDependencies()
{
  sub_1AE4F67D4();
}

uint64_t _s20IntelligencePlatform23ViewsClientSegmentationOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE618570 + 4 * asc_1AE944DF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE618590 + 4 * byte_1AE944DF5[v4]))();
}

_BYTE *sub_1AE618570(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE618590(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE618598(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE6185A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE6185A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE6185B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EntityResolutionViewDependencies.CodingKeys()
{
  return &type metadata for EntityResolutionViewDependencies.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ViewClientRepresentation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE618618 + 4 * byte_1AE944DFF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE61864C + 4 * byte_1AE944DFA[v4]))();
}

uint64_t sub_1AE61864C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE618654(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE61865CLL);
  return result;
}

uint64_t sub_1AE618668(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE618670);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE618674(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE61867C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewClientRepresentation.CodingKeys()
{
  return &type metadata for ViewClientRepresentation.CodingKeys;
}

unint64_t sub_1AE61869C()
{
  unint64_t result;

  result = qword_1EED9DF08;
  if (!qword_1EED9DF08)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94509C, &type metadata for ViewClientRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DF08);
  }
  return result;
}

unint64_t sub_1AE6186DC()
{
  unint64_t result;

  result = qword_1EED9DF10;
  if (!qword_1EED9DF10)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE945154, &type metadata for EntityResolutionViewDependencies.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DF10);
  }
  return result;
}

unint64_t sub_1AE61871C()
{
  unint64_t result;

  result = qword_1EED9DF18;
  if (!qword_1EED9DF18)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9450C4, &type metadata for EntityResolutionViewDependencies.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DF18);
  }
  return result;
}

unint64_t sub_1AE61875C()
{
  unint64_t result;

  result = qword_1EED9DF20;
  if (!qword_1EED9DF20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9450EC, &type metadata for EntityResolutionViewDependencies.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DF20);
  }
  return result;
}

unint64_t sub_1AE61879C()
{
  unint64_t result;

  result = qword_1EED9DF28;
  if (!qword_1EED9DF28)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94500C, &type metadata for ViewClientRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DF28);
  }
  return result;
}

unint64_t sub_1AE6187DC()
{
  unint64_t result;

  result = qword_1EED9DF30;
  if (!qword_1EED9DF30)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE945034, &type metadata for ViewClientRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9DF30);
  }
  return result;
}

unint64_t sub_1AE618818()
{
  unint64_t result;

  result = qword_1EED9DF38;
  if (!qword_1EED9DF38)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewsClientSegmentation, &type metadata for ViewsClientSegmentation);
    atomic_store(result, (unint64_t *)&qword_1EED9DF38);
  }
  return result;
}

void sub_1AE618854()
{
  sub_1AE61B5F8();
  sub_1AE4FC764();
  sub_1AE4F6664();
}

uint64_t sub_1AE618890(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE6188C0 + 4 * byte_1AE945220[a1]))(0x44495F444DLL, 0xE500000000000000);
}

uint64_t sub_1AE6188C8()
{
  return sub_1AE61B588(0x73726966u);
}

unint64_t sub_1AE618918()
{
  return sub_1AE500A1C();
}

unint64_t sub_1AE618930()
{
  return 0xD000000000000015;
}

uint64_t sub_1AE618954(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE618984 + 4 * byte_1AE94522C[a1]))(0x44495F444DLL, 0xE500000000000000);
}

uint64_t sub_1AE61898C()
{
  return sub_1AE61B588(0x73726966u);
}

unint64_t sub_1AE6189DC()
{
  return sub_1AE500A1C();
}

unint64_t sub_1AE6189F4()
{
  return 0xD000000000000015;
}

void sub_1AE618A18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_1AE5116B8(*a1, *a2);
}

void sub_1AE618A24()
{
  unsigned __int8 *v0;

  sub_1AE512C90(*v0);
}

uint64_t sub_1AE618A2C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1AE5E8B90(a1, *v1);
}

void sub_1AE618A34(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FC90(a1, *v1);
}

void sub_1AE618A3C(_BYTE *a1@<X8>)
{
  char v2;

  sub_1AE618854();
  *a1 = v2;
}

void sub_1AE618A68(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_1AE618890(*v1);
  a1[1] = v3;
  sub_1AE4F6664();
}

uint64_t sub_1AE618A8C()
{
  unsigned __int8 *v0;

  return sub_1AE618954(*v0);
}

uint64_t sub_1AE618A94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE61888C();
  *a1 = result;
  return result;
}

void sub_1AE618AB8(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1AE618AC4()
{
  sub_1AE61AC4C();
  return sub_1AE926F94();
}

uint64_t sub_1AE618AEC()
{
  sub_1AE61AC4C();
  return sub_1AE926FA0();
}

void *sub_1AE618B14@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  void *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  int v34;
  _QWORD v35[23];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;

  sub_1AE501548(&qword_1EED9DF58);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F666C();
  sub_1AE61B5DC();
  sub_1AE926F34();
  if (v1)
  {
    v34 = 0;
    v6 = 0;
  }
  else
  {
    v33 = a1;
    sub_1AE61B564();
    v4 = sub_1AE926C10();
    LOBYTE(v36) = 1;
    sub_1AE61B564();
    v5 = sub_1AE926BB0();
    v9 = v8;
    v25 = v5;
    sub_1AE501548(&qword_1ED30FC40);
    LOBYTE(v35[0]) = 2;
    sub_1AE61B360(&qword_1EED9DF68, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEE9A0]);
    v11 = v10;
    sub_1AE4FB930();
    sub_1AE4FD184();
    v27 = v9;
    if (v11)
    {
      sub_1AE4FD9B8();
      sub_1AE4F66E8();
      v34 = 0;
      v6 = 2;
    }
    else
    {
      v12 = v37;
      v24 = v36;
      sub_1AE4FB930();
      sub_1AE4FFFF0();
      v26 = v37;
      v23 = v36;
      sub_1AE5086F4(4);
      sub_1AE4FFFF0();
      v22 = v36;
      sub_1AE5086F4(5);
      sub_1AE4FFFF0();
      v21 = v36;
      sub_1AE5086F4(6);
      sub_1AE4FFFF0();
      v20 = v36;
      sub_1AE5086F4(7);
      sub_1AE4FFFF0();
      v19 = v36;
      v32 = v37;
      swift_bridgeObjectRetain();
      sub_1AE4FFFF0();
      v18 = v36;
      LOBYTE(v35[0]) = 9;
      v13 = sub_1AE61AC88();
      v31 = v37;
      swift_bridgeObjectRetain();
      sub_1AE4FD184();
      if (v13)
      {
        sub_1AE4FD9B8();
        sub_1AE505530();
        sub_1AE50A434();
        sub_1AE5FB980();
        sub_1AE5094CC();
        sub_1AE507088();
        sub_1AE61B5CC();
        sub_1AE5062DC();
        sub_1AE505B1C();
        v34 = 0;
        v6 = 510;
      }
      else
      {
        v14 = (void *)v36;
        LOBYTE(v36) = 10;
        v28 = v39;
        swift_bridgeObjectRetain();
        v30 = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29 = v38;
        sub_1AE4FB930();
        sub_1AE61B564();
        sub_1AE926BC8();
        if (!v37)
        {
          v16 = v15;
          v59 = 11;
          sub_1AE61B564();
          v17 = sub_1AE926C04();
          sub_1AE4FD9B8();
          v35[0] = v4;
          v35[1] = v25;
          v35[2] = v27;
          v35[3] = v24;
          v35[4] = 0;
          v35[5] = v23;
          v35[6] = 0;
          v35[7] = v22;
          v35[8] = 0;
          v35[9] = v21;
          v35[10] = 0;
          v35[11] = v20;
          v35[12] = 0;
          v35[13] = v19;
          v35[14] = 0;
          v35[15] = v18;
          v35[16] = 0;
          v35[17] = v30;
          v35[18] = 0;
          v35[19] = v38;
          v35[20] = v39;
          v35[21] = v16;
          v35[22] = v17;
          sub_1AE578CA8((uint64_t)v35);
          sub_1AE4F66E8();
          sub_1AE4F67AC();
          sub_1AE4F76D8();
          sub_1AE5094CC();
          sub_1AE4F6728();
          swift_bridgeObjectRelease();
          sub_1AE4F9038();
          sub_1AE4F67AC();
          sub_1AE4F76D8();
          swift_bridgeObjectRelease();
          sub_1AE4F66E8();
          sub_1AE4F6728();
          sub_1AE61B5D4();
          v36 = v4;
          v37 = v25;
          v38 = v27;
          v39 = v24;
          v40 = v26;
          v41 = v23;
          v42 = v12;
          v43 = v22;
          v44 = v12;
          v45 = v21;
          v46 = v12;
          v47 = v20;
          v48 = v12;
          v49 = v19;
          v50 = v32;
          v51 = v18;
          v52 = v31;
          v53 = v30;
          v54 = 0;
          v55 = v29;
          v56 = v28;
          v57 = v16;
          v58 = v17;
          sub_1AE578D8C((uint64_t)&v36);
          return memcpy(v33, v35, 0xB8uLL);
        }
        sub_1AE4FD9B8();
        sub_1AE505530();
        sub_1AE50A434();
        sub_1AE5FB980();
        sub_1AE5094CC();
        sub_1AE507088();
        sub_1AE61B5CC();
        sub_1AE5062DC();
        sub_1AE505B1C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v6 = 1022;
        v34 = 1;
      }
    }
  }
  sub_1AE61B5D4();
  if ((v6 & 2) != 0)
  {
    sub_1AE505530();
    if (((v6 >> 2) & 1) == 0)
    {
LABEL_6:
      if (((v6 >> 3) & 1) != 0)
        goto LABEL_7;
      goto LABEL_16;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_6;
  }
  sub_1AE50A434();
  if (((v6 >> 3) & 1) != 0)
  {
LABEL_7:
    sub_1AE5FB980();
    if (((v6 >> 4) & 1) == 0)
      goto LABEL_8;
    goto LABEL_17;
  }
LABEL_16:
  if (((v6 >> 4) & 1) == 0)
  {
LABEL_8:
    if (((v6 >> 5) & 1) != 0)
      goto LABEL_9;
    goto LABEL_18;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  if (((v6 >> 5) & 1) != 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    if (((v6 >> 6) & 1) == 0)
      goto LABEL_10;
    goto LABEL_19;
  }
LABEL_18:
  if (((v6 >> 6) & 1) == 0)
  {
LABEL_10:
    if (((v6 >> 7) & 1) != 0)
      goto LABEL_11;
    goto LABEL_20;
  }
LABEL_19:
  sub_1AE4F9038();
  if (((v6 >> 7) & 1) != 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    if (((v6 >> 8) & 1) == 0)
      goto LABEL_12;
LABEL_21:
    sub_1AE4F9038();
    result = v30;
    if ((v34 & 1) == 0)
      return result;
    goto LABEL_22;
  }
LABEL_20:
  if (((v6 >> 8) & 1) != 0)
    goto LABEL_21;
LABEL_12:
  result = v30;
  if (!v34)
    return result;
LABEL_22:
  swift_bridgeObjectRelease();
  sub_1AE4F9038();
  sub_1AE4F76D8();
  return (void *)sub_1AE4F67AC();
}

void sub_1AE619218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE501548(&qword_1EED9DF78);
  sub_1AE508B20();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F666C();
  v5 = v4 - v3;
  sub_1AE61B5DC();
  sub_1AE4FC7AC();
  sub_1AE61B5C0();
  sub_1AE926CE8();
  if (!v0)
  {
    sub_1AE61B5C0();
    sub_1AE926C88();
    sub_1AE500BD4(2);
    sub_1AE500BD4(3);
    sub_1AE500BD4(4);
    sub_1AE500BD4(5);
    sub_1AE500BD4(6);
    sub_1AE500BD4(7);
    sub_1AE500BD4(8);
    sub_1AE61ACC4();
    sub_1AE61B5C0();
    sub_1AE926CC4();
    sub_1AE61B5C0();
    sub_1AE926CA0();
    sub_1AE61B5C0();
    sub_1AE926CDC();
  }
  sub_1AE4FDC10(v5, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1AE4FCE34();
}

void sub_1AE6193F4()
{
  sub_1AE61B5F8();
  sub_1AE4FC764();
  sub_1AE4F6664();
}

uint64_t sub_1AE619430(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE619460 + 4 * byte_1AE945238[a1]))(0x656C706F6570, 0xE600000000000000);
}

uint64_t sub_1AE619460()
{
  return sub_1AE4FB6F8();
}

uint64_t sub_1AE619470()
{
  return sub_1AE61B600();
}

uint64_t sub_1AE619480(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE6194B0 + 4 * byte_1AE94523C[a1]))(0x656C706F6570, 0xE600000000000000);
}

uint64_t sub_1AE6194B0()
{
  return sub_1AE4FB6F8();
}

uint64_t sub_1AE6194C0()
{
  return sub_1AE61B600();
}

uint64_t sub_1AE6194D0()
{
  sub_1AE61AC10();
  return sub_1AE924DA4();
}

uint64_t sub_1AE619520()
{
  uint64_t v0;

  v0 = *(_QWORD *)aEntitySummary;
  swift_bridgeObjectRetain();
  return v0;
}

void *sub_1AE619554@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  void *result;
  _BYTE __src[184];

  result = sub_1AE618B14(__src);
  if (!v1)
    return memcpy(a1, __src, 0xB8uLL);
  return result;
}

void sub_1AE61959C()
{
  sub_1AE619218();
}

void sub_1AE6195B0(char *a1)
{
  sub_1AE511ECC(*a1);
}

void sub_1AE6195BC()
{
  unsigned __int8 *v0;

  sub_1AE512BEC(*v0);
}

void sub_1AE6195C4(uint64_t a1)
{
  char *v1;

  sub_1AE5E8FE4(a1, *v1);
}

void sub_1AE6195CC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FE50(a1, *v1);
}

void sub_1AE6195D4(_BYTE *a1@<X8>)
{
  char v2;

  sub_1AE6193F4();
  *a1 = v2;
}

void sub_1AE619600(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_1AE619430(*v1);
  a1[1] = v3;
  sub_1AE4F6664();
}

uint64_t sub_1AE619624()
{
  unsigned __int8 *v0;

  return sub_1AE619480(*v0);
}

uint64_t sub_1AE61962C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE61942C();
  *a1 = result;
  return result;
}

void sub_1AE619650(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1AE61965C()
{
  sub_1AE61B26C();
  return sub_1AE926F94();
}

uint64_t sub_1AE619684()
{
  sub_1AE61B26C();
  return sub_1AE926FA0();
}

uint64_t sub_1AE6196AC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v30;

  v8 = sub_1AE925E78();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F666C();
  v9 = sub_1AE501548(&qword_1EED9DFF0);
  v30 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F666C();
  v12 = v11 - v10;
  sub_1AE924408();
  sub_1AE4FCE84();
  sub_1AE9243FC();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE61B26C();
  sub_1AE926F4C();
  if (!a2)
  {
LABEL_4:
    if (a3)
    {
      sub_1AE501548(&qword_1EED9C8F0);
      sub_1AE61B2A8(&qword_1EED9DFF8, &qword_1EED9E000, (uint64_t)&unk_1AE9452B4, MEMORY[0x1E0DEAF10]);
      sub_1AE4FC860();
      if (v5)
        goto LABEL_12;
      sub_1AE61B5A8();
      sub_1AE61B59C();
      v15 = sub_1AE61B574();
      MEMORY[0x1AF454348](v15);
      sub_1AE501548(&qword_1ED30FC40);
      sub_1AE61B360(&qword_1EED9E008, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
      sub_1AE4FDC84();
      sub_1AE61B5B0();
      sub_1AE4F6728();
    }
    if (!a4)
    {
LABEL_10:
      if (a5)
      {
        sub_1AE501548(&qword_1EED9C8F0);
        sub_1AE61B2A8(&qword_1EED9DFF8, &qword_1EED9E000, (uint64_t)&unk_1AE9452B4, MEMORY[0x1E0DEAF10]);
        v17 = sub_1AE4FC860();
        if (!v5)
        {
          v23 = v17;
          v24 = v18;
          sub_1AE61B5A8();
          sub_1AE925E54();
          v25 = sub_1AE50BDB4(v23, v24);
          v26 = (void *)MEMORY[0x1AF454348](v25);
          sub_1AE501548(&qword_1ED30FC40);
          sub_1AE61B360(&qword_1EED9E008, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
          sub_1AE4FDC84();
          objc_autoreleasePoolPop(v26);
          sub_1AE4F77C8();
          swift_bridgeObjectRelease();
          return sub_1AE4FDC10(v12, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
        }
      }
      goto LABEL_12;
    }
    sub_1AE501548(&qword_1EED9C8F0);
    sub_1AE61B2A8(&qword_1EED9DFF8, &qword_1EED9E000, (uint64_t)&unk_1AE9452B4, MEMORY[0x1E0DEAF10]);
    sub_1AE4FC860();
    if (!v5)
    {
      sub_1AE61B5A8();
      sub_1AE61B59C();
      v16 = sub_1AE61B574();
      MEMORY[0x1AF454348](v16);
      sub_1AE501548(&qword_1ED30FC40);
      sub_1AE61B360(&qword_1EED9E008, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
      sub_1AE4FDC84();
      sub_1AE61B5B0();
      sub_1AE4F6728();
      goto LABEL_10;
    }
LABEL_12:
    sub_1AE4F77C8();
    return sub_1AE4FDC10(v12, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
  }
  sub_1AE501548(&qword_1EED9C8F0);
  sub_1AE61B2A8(&qword_1EED9DFF8, &qword_1EED9E000, (uint64_t)&unk_1AE9452B4, MEMORY[0x1E0DEAF10]);
  v13 = sub_1AE9243F0();
  if (!v5)
  {
    v19 = v13;
    v20 = v14;
    sub_1AE61B5A8();
    sub_1AE61B59C();
    v21 = sub_1AE50BDB4(v19, v20);
    MEMORY[0x1AF454348](v21);
    sub_1AE501548(&qword_1ED30FC40);
    sub_1AE61B360(&qword_1EED9E008, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
    sub_1AE926CC4();
    sub_1AE61B5B0();
    sub_1AE4F6728();
    goto LABEL_4;
  }
  swift_release();
  return sub_1AE4FDC10(v12, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
}

uint64_t sub_1AE619B44(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_1AE925E78();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F666C();
  v24 = sub_1AE501548(&qword_1EED9DFD0);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE61B26C();
  sub_1AE926F34();
  if (v25)
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  v23 = v2;
  sub_1AE9243C0();
  sub_1AE4FCE84();
  sub_1AE9243B4();
  LOBYTE(v26) = 0;
  sub_1AE926B68();
  if (v6)
  {
    sub_1AE509988();
    v7 = sub_1AE61B550();
    v9 = v8;
    sub_1AE4F9038();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v24, v23);
    if (v9 >> 60 == 15)
    {
      v22 = 0;
    }
    else
    {
      sub_1AE501548(&qword_1EED9C8F0);
      sub_1AE61B2A8(&qword_1EED9DFE0, &qword_1EED9DFE8, (uint64_t)&unk_1AE9452DC, MEMORY[0x1E0DEAF40]);
      sub_1AE507DEC();
      sub_1AE9243A8();
      sub_1AE61B5B8(v7);
      v22 = v26;
    }
  }
  else
  {
    v22 = 0;
  }
  sub_1AE501BEC(1);
  if (v10)
  {
    sub_1AE509988();
    v11 = sub_1AE61B550();
    v13 = v12;
    sub_1AE4F9038();
    sub_1AE508B10();
    if (v13 >> 60 != 15)
    {
      sub_1AE501548(&qword_1EED9C8F0);
      sub_1AE61B2A8(&qword_1EED9DFE0, &qword_1EED9DFE8, (uint64_t)&unk_1AE9452DC, MEMORY[0x1E0DEAF40]);
      sub_1AE507DEC();
      sub_1AE508224();
      sub_1AE61B5B8(v11);
    }
  }
  sub_1AE501BEC(2);
  if (v14)
  {
    sub_1AE509988();
    v15 = sub_1AE61B550();
    v17 = v16;
    sub_1AE4F9038();
    sub_1AE508B10();
    if (v17 >> 60 != 15)
    {
      sub_1AE501548(&qword_1EED9C8F0);
      sub_1AE61B2A8(&qword_1EED9DFE0, &qword_1EED9DFE8, (uint64_t)&unk_1AE9452DC, MEMORY[0x1E0DEAF40]);
      sub_1AE507DEC();
      sub_1AE508224();
      sub_1AE61B5B8(v15);
    }
  }
  sub_1AE501BEC(3);
  if (v18 && (sub_1AE925E6C(), v21 = sub_1AE925E48(), v20 = v19, sub_1AE4F9038(), sub_1AE508B10(), v20 >> 60 != 15))
  {
    sub_1AE501548(&qword_1EED9C8F0);
    sub_1AE61B2A8(&qword_1EED9DFE0, &qword_1EED9DFE8, (uint64_t)&unk_1AE9452DC, MEMORY[0x1E0DEAF40]);
    sub_1AE507DEC();
    sub_1AE508224();
    sub_1AE5035F8();
    sub_1AE50BDA0(v21, v20);
    swift_release();
  }
  else
  {
    swift_release();
    sub_1AE5035F8();
  }
  sub_1AE505D7C();
  return v22;
}

uint64_t sub_1AE61A03C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1AE619B44(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1AE61A068(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1AE6196AC(a1, *v1, v1[1], v1[2], v1[3]);
}

void sub_1AE61A084()
{
  sub_1AE61B5F8();
  sub_1AE4FC764();
  sub_1AE4F6664();
}

uint64_t sub_1AE61A0C8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7361696C61;
  else
    return 0x44495F444DLL;
}

uint64_t sub_1AE61A0F0(char *a1, char *a2)
{
  return sub_1AE511FE8(*a1, *a2);
}

void sub_1AE61A0FC()
{
  sub_1AE512BD4();
}

uint64_t sub_1AE61A104()
{
  return sub_1AE5E9078();
}

void sub_1AE61A10C()
{
  sub_1AE54FE5C();
}

void sub_1AE61A114(_BYTE *a1@<X8>)
{
  char v2;

  sub_1AE61A084();
  *a1 = v2;
}

void sub_1AE61A140(uint64_t *a1@<X8>)
{
  char *v1;

  *a1 = sub_1AE61A0C8(*v1);
  a1[1] = 0xE500000000000000;
  sub_1AE4F6664();
}

uint64_t sub_1AE61A168()
{
  char *v0;

  return sub_1AE61A0C8(*v0);
}

uint64_t sub_1AE61A184@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE61A0C4();
  *a1 = result;
  return result;
}

uint64_t sub_1AE61A1A8()
{
  sub_1AE61AD00();
  return sub_1AE926F94();
}

uint64_t sub_1AE61A1D0()
{
  sub_1AE61AD00();
  return sub_1AE926FA0();
}

void sub_1AE61A1F8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  if (!*(_QWORD *)(v0 + 40))
  {
    v1 = (void *)MEMORY[0x1AF454348]();
    sub_1AE61A26C(&v2);
    objc_autoreleasePoolPop(v1);
    *(_QWORD *)(v0 + 40) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1AE4FE870();
}

uint64_t sub_1AE61A26C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];

  sub_1AE893DFC();
  v2 = sub_1AE925E9C();
  v4 = v3;
  swift_bridgeObjectRelease();
  sub_1AE893644(v2, v4);
  swift_bridgeObjectRelease();
  sub_1AE8938D8();
  swift_bridgeObjectRelease();
  v5 = sub_1AE925E9C();
  v7 = v6;
  swift_bridgeObjectRelease();
  v25[0] = v5;
  v25[1] = v7;
  sub_1AE4F7630();
  v8 = sub_1AE9267D8();
  swift_bridgeObjectRelease();
  v24 = MEMORY[0x1E0DEE9E8];
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    v10 = (uint64_t *)(v8 + 56);
    do
    {
      v12 = *(v10 - 3);
      v11 = *(v10 - 2);
      v13 = *(v10 - 1);
      v14 = *v10;
      swift_bridgeObjectRetain();
      v15 = MEMORY[0x1AF4530E8](v12, v11, v13, v14);
      sub_1AE555EFC((uint64_t)v25, v15, v16, v16, v17, v18, v19, v20, v23, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 += 4;
      --v9;
    }
    while (v9);
    result = swift_bridgeObjectRelease_n();
    v22 = v24;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v22 = MEMORY[0x1E0DEE9E8];
  }
  *a1 = v22;
  return result;
}

uint64_t sub_1AE61A408(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE61A418()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AE61A43C()
{
  sub_1AE61A418();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityWithAlias()
{
  return objc_opt_self();
}

void sub_1AE61A47C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1AE501548(&qword_1EED9DF98);
  sub_1AE508B20();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F683C();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE61AD00();
  sub_1AE4FC7AC();
  sub_1AE926CE8();
  if (!v1)
    sub_1AE926C88();
  sub_1AE4FDC10(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1AE4FCE34();
}

uint64_t sub_1AE61A554(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1AE61AA7C(a1);
  return v2;
}

uint64_t sub_1AE61A5A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE61A618(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  v11 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v11;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1AE61A724(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  a1[22] = a2[22];
  return a1;
}

void *sub_1AE61A8C8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB8uLL);
}

uint64_t sub_1AE61A8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  return a1;
}

uint64_t sub_1AE61A9C4(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 184))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1AE61AA04(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 184) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 184) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for EntitySummaryRecord()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE61AA7C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v1;
  sub_1AE501548(&qword_1EED9DF88);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  *(_QWORD *)(v1 + 40) = 0;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE61AD00();
  sub_1AE926F34();
  if (v2)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for EntityWithAlias();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v1 + 16) = sub_1AE926C10();
    v7 = sub_1AE926BB0();
    v9 = v8;
    sub_1AE4F777C();
    *(_QWORD *)(v3 + 24) = v7;
    *(_QWORD *)(v3 + 32) = v9;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  return v3;
}

uint64_t sub_1AE61ABC8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AE61A554(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1AE61ABF0(_QWORD *a1)
{
  sub_1AE61A47C(a1);
}

unint64_t sub_1AE61AC10()
{
  unint64_t result;

  result = qword_1EED9DF50;
  if (!qword_1EED9DF50)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94532C, &unk_1E5DBA918);
    atomic_store(result, (unint64_t *)&qword_1EED9DF50);
  }
  return result;
}

unint64_t sub_1AE61AC4C()
{
  unint64_t result;

  result = qword_1EED9DF60;
  if (!qword_1EED9DF60)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE945668, &unk_1E5DBA888);
    atomic_store(result, (unint64_t *)&qword_1EED9DF60);
  }
  return result;
}

unint64_t sub_1AE61AC88()
{
  unint64_t result;

  result = qword_1EED9DF70;
  if (!qword_1EED9DF70)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE945640, &unk_1E5DB7260);
    atomic_store(result, (unint64_t *)&qword_1EED9DF70);
  }
  return result;
}

unint64_t sub_1AE61ACC4()
{
  unint64_t result;

  result = qword_1EED9DF80;
  if (!qword_1EED9DF80)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE945618, &unk_1E5DB7260);
    atomic_store(result, (unint64_t *)&qword_1EED9DF80);
  }
  return result;
}

unint64_t sub_1AE61AD00()
{
  unint64_t result;

  result = qword_1EED9DF90;
  if (!qword_1EED9DF90)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9455C8, &unk_1E5DB6EC8);
    atomic_store(result, (unint64_t *)&qword_1EED9DF90);
  }
  return result;
}

uint64_t sub_1AE61AD3C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE61AD88 + 4 * byte_1AE945245[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE61ADBC + 4 * byte_1AE945240[v4]))();
}

uint64_t sub_1AE61ADBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE61ADC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE61ADCCLL);
  return result;
}

uint64_t sub_1AE61ADD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE61ADE0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE61ADE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE61ADEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for EntityWithAlias.CodingKeys()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE61AE04(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1AE61AE50 + 4 * byte_1AE94524F[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1AE61AE84 + 4 * byte_1AE94524A[v4]))();
}

uint64_t sub_1AE61AE84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE61AE8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE61AE94);
  return result;
}

uint64_t sub_1AE61AEA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE61AEA8);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1AE61AEAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE61AEB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for EntitySummaryRecord.CodingKeys()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE61AECC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1AE61AF04(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1AE61AF58(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1AE61AFE4(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE61B038(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1AE61B08C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void type metadata accessor for NeighborSignals()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE61B0F0()
{
  unint64_t result;

  result = qword_1EED9DFA0;
  if (!qword_1EED9DFA0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9454B0, &unk_1E5DBA888);
    atomic_store(result, (unint64_t *)&qword_1EED9DFA0);
  }
  return result;
}

unint64_t sub_1AE61B130()
{
  unint64_t result;

  result = qword_1EED9DFA8;
  if (!qword_1EED9DFA8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9455A0, &unk_1E5DB6EC8);
    atomic_store(result, (unint64_t *)&qword_1EED9DFA8);
  }
  return result;
}

unint64_t sub_1AE61B170()
{
  unint64_t result;

  result = qword_1EED9DFB0;
  if (!qword_1EED9DFB0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9454D8, &unk_1E5DB6EC8);
    atomic_store(result, (unint64_t *)&qword_1EED9DFB0);
  }
  return result;
}

unint64_t sub_1AE61B1B0()
{
  unint64_t result;

  result = qword_1EED9DFB8;
  if (!qword_1EED9DFB8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE945500, &unk_1E5DB6EC8);
    atomic_store(result, (unint64_t *)&qword_1EED9DFB8);
  }
  return result;
}

unint64_t sub_1AE61B1F0()
{
  unint64_t result;

  result = qword_1EED9DFC0;
  if (!qword_1EED9DFC0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9453E8, &unk_1E5DBA888);
    atomic_store(result, (unint64_t *)&qword_1EED9DFC0);
  }
  return result;
}

unint64_t sub_1AE61B230()
{
  unint64_t result;

  result = qword_1EED9DFC8;
  if (!qword_1EED9DFC8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE945410, &unk_1E5DBA888);
    atomic_store(result, (unint64_t *)&qword_1EED9DFC8);
  }
  return result;
}

unint64_t sub_1AE61B26C()
{
  unint64_t result;

  result = qword_1EED9DFD8;
  if (!qword_1EED9DFD8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9457A8, &unk_1E5DB71D0);
    atomic_store(result, (unint64_t *)&qword_1EED9DFD8);
  }
  return result;
}

uint64_t sub_1AE61B2A8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = sub_1AE523CF0(&qword_1EED9C8F0);
    v10 = sub_1AE61B324(a2, a3);
    result = MEMORY[0x1AF454B70](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AE61B324(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for EntityWithAlias();
    result = MEMORY[0x1AF454B70](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AE61B360(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = sub_1AE523CF0(&qword_1ED30FC40);
    v7 = a2;
    atomic_store(MEMORY[0x1AF454B70](a3, v6, &v7), a1);
  }
  sub_1AE4FE870();
}

uint64_t sub_1AE61B3B4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AE61B400 + 4 * byte_1AE945259[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AE61B434 + 4 * byte_1AE945254[v4]))();
}

uint64_t sub_1AE61B434(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE61B43C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE61B444);
  return result;
}

uint64_t sub_1AE61B450(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE61B458);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AE61B45C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE61B464(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for NeighborSignals.CodingKeys()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE61B480()
{
  unint64_t result;

  result = qword_1EED9E010;
  if (!qword_1EED9E010)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE945780, &unk_1E5DB71D0);
    atomic_store(result, (unint64_t *)&qword_1EED9E010);
  }
  return result;
}

unint64_t sub_1AE61B4C0()
{
  unint64_t result;

  result = qword_1EED9E018;
  if (!qword_1EED9E018)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9456B8, &unk_1E5DB71D0);
    atomic_store(result, (unint64_t *)&qword_1EED9E018);
  }
  return result;
}

unint64_t sub_1AE61B500()
{
  unint64_t result;

  result = qword_1EED9E020;
  if (!qword_1EED9E020)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9456E0, &unk_1E5DB71D0);
    atomic_store(result, (unint64_t *)&qword_1EED9E020);
  }
  return result;
}

uint64_t sub_1AE61B53C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v1, v0);
}

uint64_t sub_1AE61B550()
{
  return sub_1AE925E48();
}

uint64_t sub_1AE61B574()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AE50BDB4(v0, v1);
}

uint64_t sub_1AE61B588(unsigned int a1)
{
  return a1 | 0x616E5F7400000000;
}

uint64_t sub_1AE61B59C()
{
  return sub_1AE925E54();
}

uint64_t sub_1AE61B5A8()
{
  return sub_1AE925E6C();
}

void sub_1AE61B5B0()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

uint64_t sub_1AE61B5B8(uint64_t a1)
{
  unint64_t v1;

  return sub_1AE50BDA0(a1, v1);
}

uint64_t sub_1AE61B5CC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE61B5D4()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(*(_QWORD *)(v0 + 184));
}

unint64_t sub_1AE61B5DC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE4F9858(v0, v1);
  return sub_1AE61AC4C();
}

uint64_t sub_1AE61B5F8()
{
  return sub_1AE926B44();
}

uint64_t sub_1AE61B600()
{
  return 0x616C6C656373696DLL;
}

uint64_t sub_1AE61B624(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[7];

  *(_QWORD *)(v3 + 24) = 0;
  *(_BYTE *)(v3 + 32) = 1;
  if (a1 < 0)
  {
    result = sub_1AE926AA8();
    __break(1u);
  }
  else
  {
    v4 = v3;
    *(_QWORD *)(v3 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D815C8]), sel_initWithCountLimit_, a1);
    *(_QWORD *)(v3 + 24) = a2;
    *(_BYTE *)(v3 + 32) = a3 & 1;
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v7 = sub_1AE925B6C();
    sub_1AE4FB608(v7, (uint64_t)qword_1ED31BC90);
    v8 = sub_1AE925B54();
    v9 = sub_1AE9265E0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v24[0] = v11;
      *(_DWORD *)v10 = 134218242;
      sub_1AE92676C();
      *(_WORD *)(v10 + 12) = 2080;
      LOBYTE(v23) = a3 & 1;
      sub_1AE501548(&qword_1EED9DD58);
      v12 = sub_1AE925E90();
      sub_1AE520ED4(v12, v13, (uint64_t)v24, v14, v15, v16, v17, v18, v20, v21, v22, a2, v23, v24[0], v24[1], v24[2], v24[3], v24[4], v24[5],
        v24[6]);
      sub_1AE92676C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AE4F2000, v8, v9, "MemoryCache initiated with countLimit = %ld and expireAfterHours = %s.", (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF454C78](v11, -1, -1);
      MEMORY[0x1AF454C78](v10, -1, -1);
    }

    return v4;
  }
  return result;
}

id sub_1AE61B85C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  char *v14;
  _QWORD *v15;
  id v16;
  void *v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  void (*v21)(char *, uint64_t);
  id v22;
  objc_super v24;

  v3 = sub_1AE501548(&qword_1ED30EB60);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1AE9248DC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v24 - v11;
  v13 = (objc_class *)sub_1AE501548(&qword_1EED9E078);
  v14 = (char *)objc_allocWithZone(v13);
  v15 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *(_QWORD *)&v14[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v14) + 0x68)] = a1;
  v24.receiver = v14;
  v24.super_class = v13;
  v16 = objc_msgSendSuper2(&v24, sel_init);
  v17 = *(void **)(v1 + 16);
  v18 = objc_msgSend(v17, sel_objectForKey_, v16);
  if (v18)
  {
    v19 = v18;
    sub_1AE578FEC((uint64_t)v18 + *(_QWORD *)((*v15 & *v18) + 0x70), (uint64_t)v5, &qword_1ED30EB60);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v5, 1, v6) == 1)
    {

      sub_1AE52FBE8((uint64_t)v5, &qword_1ED30EB60);
LABEL_9:
      v22 = *(id *)((char *)v19 + *(_QWORD *)((*v15 & *v19) + 0x68));

      return v22;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    sub_1AE9248D0();
    v20 = sub_1AE924888();
    v21 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21(v10, v6);
    if ((v20 & 1) == 0)
    {
      v21(v12, v6);

      goto LABEL_9;
    }
    objc_msgSend(v17, sel_removeObjectForKey_, v16);

    v21(v12, v6);
  }
  else
  {

  }
  return 0;
}

void sub_1AE61BA9C(void *a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  char v7;
  void *v8;
  objc_class *v9;
  char *v10;
  id v11;
  objc_super v12;

  v5 = *(void **)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_BYTE *)(v2 + 32);
  objc_allocWithZone((Class)sub_1AE501548(qword_1EED9E080));
  v8 = (void *)sub_1AE61BB70(a1, v6, v7);
  v9 = (objc_class *)sub_1AE501548(&qword_1EED9E078);
  v10 = (char *)objc_allocWithZone(v9);
  *(_QWORD *)&v10[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v10) + 0x68)] = a2;
  v12.receiver = v10;
  v12.super_class = v9;
  v11 = objc_msgSendSuper2(&v12, sel_init);
  objc_msgSend(v5, sel_setObject_forKey_, v8, v11);

}

uint64_t sub_1AE61BB70(void *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  objc_class *ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  id v17;
  _QWORD *v18;
  uint64_t result;
  id v20;
  id v21;
  objc_super v22;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v9 = sub_1AE9248DC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1AE501548(&qword_1ED30EB60);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *(_QWORD *)((char *)v4 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x68)) = a1;
  if ((a3 & 1) != 0)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4 + *(_QWORD *)((*v16 & *v4) + 0x70), 1, 1, v9);
    v20 = a1;
    goto LABEL_5;
  }
  v17 = a1;
  v18 = v4;
  result = sub_1AE9248D0();
  if ((unsigned __int128)(a2 * (__int128)3600) >> 64 == (3600 * a2) >> 63)
  {
    sub_1AE924870();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v15, 0, 1, v9);
    sub_1AE578C7C((uint64_t)v15, (uint64_t)v18 + *(_QWORD *)((*v16 & *v18) + 0x70), &qword_1ED30EB60);

LABEL_5:
    v22.receiver = v4;
    v22.super_class = ObjectType;
    v21 = objc_msgSendSuper2(&v22, sel_init);

    return (uint64_t)v21;
  }
  __break(1u);
  return result;
}

id sub_1AE61BD30(uint64_t a1)
{
  return sub_1AE61BD68(a1, &qword_1ED30FC68, (uint64_t)off_1E5DA2440, (SEL *)&selRef_initWithRankedResults_);
}

id sub_1AE61BD4C(uint64_t a1)
{
  return sub_1AE61BD68(a1, &qword_1EED9E070, (uint64_t)off_1E5DA23F0, (SEL *)&selRef_initWithMentions_);
}

id sub_1AE61BD68(uint64_t a1, unint64_t *a2, uint64_t a3, SEL *a4)
{
  id v6;
  void *v7;
  id v8;

  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1AE53F468(0, a2);
  v7 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, *a4, v7);

  return v8;
}

uint64_t EntityResolutionXPCService.__allocating_init(viewService:config:enableSessionLogging:)(void *a1, uint64_t a2, char a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  EntityResolutionXPCService.init(viewService:config:enableSessionLogging:)(a1, a2, a3);
  return v6;
}

uint64_t EntityResolutionXPCService.init(viewService:config:enableSessionLogging:)(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  const void *v13;
  char v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[144];
  _BYTE v21[144];
  _BYTE __src[144];

  v4 = v3;
  sub_1AE578C7C(a2, (uint64_t)v21, (uint64_t *)&unk_1ED318C48);
  swift_defaultActor_initialize();
  *(_QWORD *)(v4 + 112) = 0;
  *(_QWORD *)(v4 + 288) = a1;
  v7 = a1;
  sub_1AE5DB1F8();
  v9 = v8;
  *(_QWORD *)(v4 + 120) = v8;
  sub_1AE578C7C((uint64_t)v21, (uint64_t)__src, (uint64_t *)&unk_1ED318C48);
  if (sub_1AE5DE050((uint64_t)__src) != 1)
  {
    v15 = __src[140];
    memcpy((void *)(v4 + 128), __src, 0x8DuLL);
    if (v15 != 1)
      goto LABEL_8;
LABEL_7:
    sub_1AE501548(&qword_1EED9E028);
    sub_1AE4F66BC();
    *(_QWORD *)(v4 + 112) = sub_1AE61B624(100, 0, 1);
    swift_release();
    goto LABEL_8;
  }
  if (!*(_QWORD *)(v9 + 16) || (v10 = sub_1AE5FB7B0(), v11 = sub_1AE536EDC(v10, 0xEA00000000007963), (v12 & 1) == 0))
  {
    sub_1AE5716CC();
    swift_allocError();
    *(_QWORD *)v18 = 0xD00000000000004ALL;
    *(_QWORD *)(v18 + 8) = 0x80000001AE980E20;
    *(_BYTE *)(v18 + 16) = 7;
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();

    type metadata accessor for EntityResolutionXPCService();
    sub_1AE61E2D4();
    swift_defaultActor_destroy();

    swift_deallocPartialClassInstance();
    return v4;
  }
  v13 = (const void *)(*(_QWORD *)(v9 + 56) + 144 * v11);
  memcpy(v20, v13, 0x8DuLL);
  v14 = v20[140];
  memmove((void *)(v4 + 128), v13, 0x8DuLL);
  sub_1AE5DD3A4((uint64_t)v20);
  if ((v14 & 1) != 0)
    goto LABEL_7;
LABEL_8:
  *(_BYTE *)(v4 + 269) = a3 & 1;
  type metadata accessor for EntityResolutionHandlerPool();
  v16 = sub_1AE4F66BC();
  type metadata accessor for EntityResolutionHandlerPool.EntityRerankerHandlerStore();
  sub_1AE4F66BC();
  *(_QWORD *)(v16 + 16) = sub_1AE4F5AC0();
  *(_QWORD *)(v4 + 272) = v16;
  type metadata accessor for EntityResolutionServicePool();
  sub_1AE4F66BC();
  sub_1AE4F5240((uint64_t)v7);
  *(_QWORD *)(v4 + 280) = v17;
  return v4;
}

uint64_t sub_1AE61C0A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = v1;
  return swift_task_switch();
}

uint64_t sub_1AE61C0B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t (*v9)(void);
  _BYTE v10[152];

  v2 = *(_QWORD *)(v1[21] + 120);
  switch(v1[20])
  {
    case 1:
      v3 = sub_1AE506C44();
      break;
    case 2:
      v0 = 0xEB00000000797469;
      v3 = sub_1AE5FB824();
      break;
    case 3:
      v4 = 0x786966657270;
      goto LABEL_9;
    case 4:
      v3 = 0xD000000000000014;
      v0 = 0x80000001AE9750D0;
      break;
    case 5:
      v3 = sub_1AE61E2FC();
      break;
    case 6:
      v4 = 0x646972627968;
LABEL_9:
      v3 = sub_1AE61E2E0(v4);
      break;
    default:
      v0 = 0xEA00000000007963;
      v3 = sub_1AE5FB7B0();
      break;
  }
  if (*(_QWORD *)(v2 + 16) && (v5 = sub_1AE536EDC(v3, v0), (v6 & 1) != 0))
  {
    sub_1AE4FFF90(v1 + 2, (const void *)(*(_QWORD *)(v2 + 56) + 144 * v5));
    sub_1AE5DD3A4((uint64_t)(v1 + 2));
    sub_1AE4F6648();
    sub_1AE4FFF90(v10, v1 + 2);
    sub_1AE4F52A8((uint64_t)v10);
    sub_1AE4FFF90(v10, v1 + 2);
    sub_1AE4F9C2C((uint64_t)v10);
    sub_1AE5DD3EC((uint64_t)(v1 + 2));
    v9 = (uint64_t (*)(void))v1[1];
  }
  else
  {
    sub_1AE4F6648();
    sub_1AE5716CC();
    sub_1AE4F6778();
    *(_OWORD *)v7 = xmmword_1AE944A30;
    *(_BYTE *)(v7 + 16) = 9;
    swift_willThrow();
    v9 = (uint64_t (*)(void))v1[1];
  }
  return v9();
}

uint64_t sub_1AE61C27C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[53] = a1;
  v2[54] = v1;
  sub_1AE501548((uint64_t *)&unk_1EED94CB0);
  v2[55] = sub_1AE4FECCC();
  v2[56] = sub_1AE501C08();
  sub_1AE501548(&qword_1ED319260);
  v2[57] = sub_1AE4FECCC();
  v2[58] = sub_1AE501C08();
  v3 = sub_1AE925AE8();
  v2[59] = v3;
  v2[60] = *(_QWORD *)(v3 - 8);
  v2[61] = sub_1AE4FECCC();
  v2[62] = sub_1AE501C08();
  v2[63] = sub_1AE501C08();
  v4 = sub_1AE925B6C();
  v2[64] = v4;
  v2[65] = *(_QWORD *)(v4 - 8);
  v2[66] = swift_task_alloc();
  v5 = sub_1AE925B0C();
  v2[67] = v5;
  v2[68] = *(_QWORD *)(v5 - 8);
  v2[69] = sub_1AE4FECCC();
  v2[70] = sub_1AE501C08();
  v2[71] = type metadata accessor for LogSignpost();
  v2[72] = sub_1AE4FECCC();
  v2[73] = sub_1AE501C08();
  return swift_task_switch();
}

uint64_t sub_1AE61C3C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_signpost_type_t v4;
  uint8_t *v5;
  os_signpost_id_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD __src[38];

  __src[35] = *MEMORY[0x1E0C80C00];
  if (qword_1ED31C728 != -1)
    swift_once();
  v1 = v0[66];
  v2 = v0[65];
  sub_1AE4FB608(v0[64], (uint64_t)qword_1ED31C710);
  (*(void (**)(uint64_t))(v2 + 16))(v1);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v3 = sub_1AE925B00();
  v4 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v5 = (uint8_t *)sub_1AE4F66A0();
    *(_WORD *)v5 = 0;
    v6 = sub_1AE925AD0();
    _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v3, v4, v6, "ECR.XPCService.submit", "", v5, 2u);
    sub_1AE4F9064();
  }
  v7 = v0[73];
  v8 = v0[71];
  v22 = v0[68];
  v23 = v0[67];
  v24 = v0[70];
  v9 = v0[62];
  v10 = v0[63];
  v11 = v0[59];
  v12 = v0[60];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v9, v10, v11);
  sub_1AE925B3C();
  sub_1AE4FCE84();
  sub_1AE4FC844();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  sub_1AE5065B4((uint64_t)"ECR.XPCService.submit");
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v7 + *(int *)(v8 + 24), v24, v23);
  CFAbsoluteTimeGetCurrent();
  sub_1AE5DF8B0((uint64_t)__src);
  v13 = (uint64_t)(v0 + 20);
  memcpy(v0 + 20, __src, 0x7AuLL);
  v14 = v0;
  if (qword_1ED318C58 != -1)
    swift_once();
  v15 = v0[54];
  v16 = *(_QWORD *)(qword_1ED3274E0 + 16);
  swift_bridgeObjectRetain();
  v17 = sub_1AE81B1E8(v16);
  v18 = *(_QWORD *)(v15 + 112);
  if (!v18)
  {
    sub_1AE5FB7B0();
    __asm { BR              X9 }
  }
  swift_retain();
  v19 = sub_1AE5E1050();
  sub_1AE61B85C(v19);
  sub_1AE61E2D4();
  swift_release();
  sub_1AE61D3B0(v17, v14[73]);
  sub_1AE4F6700();
  sub_1AE5F676C(v13);
  sub_1AE61E310();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_1AE4FBB48(v18, (uint64_t (*)(void))v14[1]);
}

uint64_t sub_1AE61D3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  NSObject *v15;
  uint64_t result;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  const char *v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  char v34;

  v3 = sub_1AE925B18();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1AE925AE8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE925B0C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE5DE938(0);
  sub_1AE5DEB04(1);
  v13 = type metadata accessor for LogSignpost();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2 + *(int *)(v13 + 24), v9);
  v33 = *(const char **)a2;
  v14 = *(_BYTE *)(a2 + 16);
  swift_retain();
  v15 = sub_1AE925B00();
  sub_1AE925B24();
  v29 = sub_1AE926664();
  result = sub_1AE926700();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v25 = v15;
  v26 = v10;
  v27 = v9;
  v28 = v6;
  if ((v14 & 1) == 0)
  {
    v17 = v33;
    if (v33)
    {
      v19 = v31;
      v18 = v32;
      v20 = v30;
LABEL_9:
      swift_retain();
      sub_1AE925B48();
      swift_release();
      v21 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v20, v18);
      v15 = v25;
      if (v21 == *MEMORY[0x1E0DF2190])
      {
        v22 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v18);
        v22 = "";
      }
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      v24 = sub_1AE925AD0();
      _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v15, (os_signpost_type_t)v29, v24, v17, v22, v23, 2u);
      MEMORY[0x1AF454C78](v23, -1, -1);
      v9 = v27;
      v6 = v28;
      v10 = v26;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v33 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v33 >> 11 != 27)
  {
    v19 = v31;
    v18 = v32;
    v20 = v30;
    if (v33 >> 16 <= 0x10)
    {
      v17 = &v34;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

void sub_1AE61D678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void **a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t *a11)
{
  uint64_t v11;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  unsigned __int8 *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void **v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  char v79[56];
  _BYTE v80[19];
  char v81[8];
  _OWORD v82[2];
  char v83;
  uint64_t v84;

  v71 = a8;
  v72 = a7;
  v73 = a3;
  v17 = sub_1AE501548((uint64_t *)&unk_1EED94CB0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1AE501548(&qword_1ED319260);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(a2 + 288);
  ViewService.peopleSubgraphView.getter(&v75);
  if (!v11)
  {
    v69 = a5;
    v70 = v22;
    v68 = v19;
    v74 = v23;
    v24 = v78;
    v25 = *(_QWORD *)a1;
    v26 = v76;
    *(_OWORD *)a1 = v75;
    *(_OWORD *)(a1 + 16) = v26;
    *(_OWORD *)(a1 + 32) = v77;
    *(_QWORD *)(a1 + 48) = v24;
    sub_1AE60DCAC(v25);
    v27 = v73;
    sub_1AE578C7C(v73 + 16, (uint64_t)v81, &qword_1EED995F8);
    sub_1AE578C7C((uint64_t)v81, (uint64_t)&v84, &qword_1EED995F8);
    v28 = v84;
    if (!v84)
      goto LABEL_6;
    if (*(_QWORD *)(v84 + 16) != 1)
      goto LABEL_6;
    sub_1AE5F66B4(v27);
    static EntityClass.person.getter();
    v82[0] = v75;
    v82[1] = v76;
    v83 = v77;
    sub_1AE56E7D0((uint64_t)v82, v28);
    v30 = v29;
    sub_1AE525EF8((uint64_t)v82);
    v31 = sub_1AE5F676C(v27);
    if ((v30 & 1) != 0)
    {
      v39 = (uint64_t)v70;
      v40 = v69;
    }
    else
    {
LABEL_6:
      ViewService.entitySubgraphView.getter(&v75);
      v39 = (uint64_t)v70;
      v40 = v69;
      v41 = v78;
      v42 = *(_QWORD *)a4;
      v43 = v76;
      *(_OWORD *)a4 = v75;
      *(_OWORD *)(a4 + 16) = v43;
      *(_OWORD *)(a4 + 32) = v77;
      *(_QWORD *)(a4 + 48) = v41;
      v31 = sub_1AE60DCAC(v42);
    }
    *(_OWORD *)v80 = *(_OWORD *)(v40 + 120);
    *(_DWORD *)&v80[15] = *(_DWORD *)(v40 + 135);
    v44 = *(_QWORD *)(*(_QWORD *)v80 + 16);
    if (v44)
    {
      v45 = (unsigned __int8 *)(*(_QWORD *)v80 + 32);
      v46 = sub_1AE61E280((uint64_t)v80);
      do
      {
        v55 = *v45++;
        v54 = v55;
        v56 = v55 >> 6;
        if (v55 >> 6)
        {
          if (v56 == 1)
          {
            *((_QWORD *)&v76 + 1) = &type metadata for Features.FeatureFlag;
            *(_QWORD *)&v77 = sub_1AE5D7DF8();
            LOBYTE(v75) = 26;
            v57 = sub_1AE9249E4();
            v46 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v75);
            if ((v57 & 1) != 0)
            {
              v58 = (uint64_t)v68;
              ViewService.lemmatizedSubgraphView.getter(v46, v47, v48, v49, v50, v51, v52, v53, v67);
              v59 = type metadata accessor for LemmatizedSubgraphView();
              _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v58, 0, 1, v59);
              sub_1AE60ED78(v58, v71, (uint64_t *)&unk_1EED94CB0);
              v39 = (uint64_t)v70;
            }
          }
          else if (v54 != 128)
          {
            if (v54 == 129)
              v60 = sub_1AE60E0C0();
            else
              v60 = sub_1AE60E09C();
            v61 = *v72;
            *v72 = (void *)v60;

          }
        }
        else
        {
          ViewService.entityAliasView.getter(v46, v47, v48, v49, v50, v51, v52, v53, v67);
          sub_1AE60ED78(v39, a6, &qword_1ED319260);
        }
        --v44;
      }
      while (v44);
      v31 = sub_1AE61E2A8((uint64_t)v80);
    }
    v62 = v73;
    if ((v80[17] & 1) != 0)
    {
      sub_1AE598B58();
      sub_1AE60ED78((uint64_t)v79, a9, &qword_1ED30FB18);
    }
    if ((v80[18] & 1) != 0)
    {
      if (qword_1ED31C9B0 != -1)
        swift_once();
      v63 = (void *)qword_1ED31C9A0;
      type metadata accessor for EntityResolutionRankingService();
      swift_allocObject();
      *a10 = EntityResolutionRankingService.init(config:viewService:)((uint64_t)&v75, v63);
      v31 = swift_release();
    }
    if ((*(_BYTE *)(v62 + 120) & 1) != 0)
    {
      ViewService.inferenceFeatureView.getter(v31, v32, v33, v34, v35, v36, v37, v38, v67);
      v64 = v76;
      v65 = *a11;
      v66 = a11[1];
      *(_OWORD *)a11 = v75;
      a11[2] = v64;
      sub_1AE50BA54(v65, v66);
    }
  }
}

uint64_t sub_1AE61DB60(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_signpost_type_t v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  char v55;
  uint64_t v56;

  v48 = a2;
  v47 = a1;
  v46 = sub_1AE925AE8();
  v2 = *(_QWORD *)(v46 - 8);
  v3 = MEMORY[0x1E0C80A78](v46);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v42 - v6;
  v8 = sub_1AE925B6C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F666C();
  v12 = v11 - v10;
  v13 = sub_1AE925B0C();
  v44 = *(_QWORD *)(v13 - 8);
  v45 = v13;
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F666C();
  v16 = v15 - v14;
  v43 = type metadata accessor for LogSignpost();
  MEMORY[0x1E0C80A78](v43);
  sub_1AE4F666C();
  v19 = v18 - v17;
  if (qword_1ED31C728 != -1)
    swift_once();
  v20 = sub_1AE4FB608(v8, (uint64_t)qword_1ED31C710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, v20, v8);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v21 = sub_1AE925B00();
  v22 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    v24 = sub_1AE925AD0();
    _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v21, v22, v24, "ECR.XPCService.mengen", "", v23, 2u);
    MEMORY[0x1AF454C78](v23, -1, -1);
  }

  v25 = v46;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v46);
  sub_1AE925B3C();
  swift_allocObject();
  v26 = sub_1AE925B30();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v25);
  *(_QWORD *)v19 = "ECR.XPCService.mengen";
  *(_QWORD *)(v19 + 8) = 21;
  *(_BYTE *)(v19 + 16) = 2;
  *(_QWORD *)(v19 + 24) = v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v19 + *(int *)(v43 + 24), v16, v45);
  v27 = v49;
  sub_1AE821414(v47, v48);
  if (v27)
  {
    sub_1AE576DB0(v19);
    sub_1AE50B9EC(v19);
  }
  else
  {
    v29 = v28;
    v30 = MEMORY[0x1E0DEE9D8];
    if (v28)
    {
      v31 = *(_QWORD *)(v28 + 16);
      if (v31)
      {
        v56 = MEMORY[0x1E0DEE9D8];
        sub_1AE9269DC();
        v32 = (__int128 *)(v29 + 64);
        do
        {
          v33 = *((_QWORD *)v32 + 4);
          v34 = *((_BYTE *)v32 + 40);
          v35 = *(v32 - 1);
          v50 = *(v32 - 2);
          v51 = v35;
          v36 = *v32;
          v37 = v32[1];
          v32 += 5;
          v52 = v36;
          v53 = v37;
          v54 = v33;
          v55 = v34;
          sub_1AE5E1670();
          sub_1AE9269B8();
          sub_1AE9269E8();
          sub_1AE9269F4();
          sub_1AE9269C4();
          --v31;
        }
        while (v31);
        v30 = v56;
      }
      swift_bridgeObjectRelease();
    }
    v38 = sub_1AE53F468(0, &qword_1EED9DE78);
    v39 = v30;
    v26 = v38;
    sub_1AE61BD68(v39, &qword_1EED9E070, (uint64_t)off_1E5DA23F0, (SEL *)&selRef_initWithMentions_);
    v40 = sub_1AE61E2D4();
    sub_1AE576DB0(v40);
    sub_1AE50B9EC(v19);
  }
  return v26;
}

uint64_t EntityResolutionXPCService.deinit()
{
  uint64_t v0;
  _BYTE v2[144];

  swift_release();
  swift_bridgeObjectRelease();
  sub_1AE4FFF90(v2, (const void *)(v0 + 128));
  sub_1AE5DD3EC((uint64_t)v2);
  swift_release();
  swift_release();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t EntityResolutionXPCService.__deallocating_deinit()
{
  EntityResolutionXPCService.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t EntityResolutionXPCService.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE61DF94()
{
  return EntityResolutionXPCService.unownedExecutor.getter();
}

uint64_t sub_1AE61DFAC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1AE4FC490;
  return sub_1AE61C0A0(a1);
}

uint64_t sub_1AE61DFFC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1AE61E04C;
  return sub_1AE61C27C(a1);
}

uint64_t sub_1AE61E04C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1AE4FFC38();
  if (!v1)
    v4 = a1;
  return sub_1AE4FBB48(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1AE61E080(unint64_t a1, unint64_t a2)
{
  return sub_1AE61DB60(a1, a2);
}

uint64_t type metadata accessor for EntityResolutionXPCService()
{
  return objc_opt_self();
}

uint64_t *sub_1AE61E0B4(uint64_t *a1)
{
  sub_1AE60EDD0(*a1);
  return a1;
}

uint64_t dispatch thunk of EntityResolutionXPCServiceProtocol.warmup(for:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE508B34(v1, (uint64_t)sub_1AE6146CC);
  return sub_1AE50A43C(v2, v3, v4, v5);
}

uint64_t dispatch thunk of EntityResolutionXPCServiceProtocol.submit(clientRequest:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE508B34(v1, (uint64_t)sub_1AE61E2D0);
  return sub_1AE50A43C(v2, v3, v4, v5);
}

uint64_t dispatch thunk of EntityResolutionXPCServiceProtocol.generateMentions(clientQuery:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t method lookup function for EntityResolutionXPCService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntityResolutionXPCService.__allocating_init(viewService:config:enableSessionLogging:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of EntityResolutionXPCService.warmup(for:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE6148C8(v1, (uint64_t)sub_1AE4FC490);
  return sub_1AE4F6A74(v2, v3);
}

uint64_t dispatch thunk of EntityResolutionXPCService.submit(clientRequest:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE6148C8(v1, (uint64_t)sub_1AE61E234);
  return sub_1AE4F6A74(v2, v3);
}

uint64_t sub_1AE61E234(uint64_t a1)
{
  uint64_t v1;

  sub_1AE4FFC38();
  return sub_1AE4FBB48(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t dispatch thunk of EntityResolutionXPCService.generateMentions(clientQuery:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t sub_1AE61E280(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE61E2A8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE61E2D4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE61E2E0(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
}

uint64_t sub_1AE61E2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  return sub_1AE5DD3EC(a34);
}

unint64_t sub_1AE61E2FC()
{
  return 0xD000000000000010;
}

uint64_t sub_1AE61E310()
{
  uint64_t v0;

  return sub_1AE50B9EC(v0);
}

uint64_t sub_1AE61E318()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AE61E384(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1AE61E3F4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1AE61E404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1AE61E434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1AE61E464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1AE61E494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1AE61E4C4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1AE61E574 + 4 * byte_1AE9458E0[(v8 - 1)]))();
}

void sub_1AE61E5C0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0u;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

void type metadata accessor for EntitySequence()
{
  JUMPOUT(0x1AF454AECLL);
}

void sub_1AE61E774()
{
  JUMPOUT(0x1AF454B70);
}

uint64_t sub_1AE61E784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  __int128 v15;
  __int16 v16;
  uint64_t v17;
  uint64_t *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  __int16 v38;

  v3 = *(_QWORD *)(a1 + 24);
  v33 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v32 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = sub_1AE92670C();
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v26 - v8);
  v31 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = MEMORY[0x1E0C80A78](v7);
  v27 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v30 = (uint64_t *)((char *)&v26 - v12);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1AE926760();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, TupleTypeMetadata2) == 1)
  {
    result = (*(uint64_t (**)(uint64_t *, uint64_t))(v28 + 8))(v9, v29);
    v14 = 0;
    v15 = 0uLL;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    v16 = -512;
  }
  else
  {
    v17 = *(int *)(TupleTypeMetadata2 + 48);
    v18 = v30;
    v19 = (char *)v30 + v17;
    v20 = (char *)v9 + v17;
    v29 = *v9;
    *v30 = v29;
    v21 = v33;
    v22 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    v22(v19, v20, v3);
    v23 = &v27[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v23, v19, v3);
    v24 = v32;
    v22(v32, v23, v3);
    swift_getAssociatedTypeWitness();
    sub_1AE6A2ECC((uint64_t)&v34);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v3);
    result = (*(uint64_t (**)(uint64_t *, uint64_t))(v31 + 8))(v18, TupleTypeMetadata2);
    v25 = v35;
    v15 = v36;
    v14 = v37;
    v16 = v38;
    *(_QWORD *)a2 = v29;
    *(_OWORD *)(a2 + 8) = v34;
    *(_QWORD *)(a2 + 24) = v25;
  }
  *(_OWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 48) = v14;
  *(_WORD *)(a2 + 56) = v16;
  return result;
}

void sub_1AE61EA4C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for EntitySequence.Iterator();
}

uint64_t sub_1AE61EA8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;

  v3 = v2 + *(int *)(a1 + 60);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v3, v1, AssociatedTypeWitness);
}

void sub_1AE61EAE4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  sub_1AE926070();
  sub_1AE61EA4C(MEMORY[0x1E0DEE9E8], a2);
}

uint64_t sub_1AE61EBE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

void sub_1AE61EC00(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1AE61EAE4(a1, a2);
}

uint64_t sub_1AE61EC14()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

void type metadata accessor for EntitySequence.Iterator()
{
  JUMPOUT(0x1AF454AECLL);
}

uint64_t sub_1AE61EC48()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AE61ECD8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v12 = ~v6;
    v13 = (char *)a1 + v6;
    v14 = (char *)a2 + v6;
    v15 = (unint64_t)(v13 + 8) & v12;
    v16 = (unint64_t)(v14 + 8) & v12;
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v17(v15, v16, AssociatedTypeWitness);
  }
  return a1;
}

uint64_t sub_1AE61EDB8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
}

_QWORD *sub_1AE61EE1C(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  v9(v7, v8, AssociatedTypeWitness);
  return a1;
}

_QWORD *sub_1AE61EEB4(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_QWORD *sub_1AE61EF44(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_QWORD *sub_1AE61EFB8(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_1AE61F040(_QWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (a2 <= v7)
    goto LABEL_22;
  v9 = ((v8 + 8) & ~v8) + *(_QWORD *)(v5 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((a2 - v7 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v6 & 0x80000000) != 0)
        return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(((unint64_t)a1 + v8 + 8) & ~v8, v6, AssociatedTypeWitness);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if ((_DWORD)v9)
  {
    if (v9 > 3)
      LODWORD(v9) = 4;
    __asm { BR              X12 }
  }
  return v7 + v14 + 1;
}

void sub_1AE61F1C0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 <= v7)
  {
    v10 = 0u;
  }
  else if (v8 <= 3)
  {
    v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v12))
    {
      v10 = 4u;
    }
    else if (v12 >= 0x100)
    {
      v10 = 2;
    }
    else
    {
      v10 = v12 > 1;
    }
  }
  else
  {
    v10 = 1u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

id EntitySimilarityClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id EntitySimilarityClient.init()()
{
  id v0;
  id v1;

  v0 = objc_allocWithZone((Class)type metadata accessor for EntitySimilarityClient());
  v1 = EntitySimilarityClient.init(throwing:)();
  swift_getObjectType();
  sub_1AE6217F0();
  swift_deallocPartialClassInstance();
  return v1;
}

id EntitySimilarityClient.__allocating_init(throwing:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return EntitySimilarityClient.init(throwing:)();
}

uint64_t type metadata accessor for EntitySimilarityClient()
{
  return objc_opt_self();
}

id EntitySimilarityClient.init(throwing:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;

  v2 = qword_1ED31C9B0;
  v3 = v0;
  if (v2 != -1)
    swift_once();
  v4 = (void *)qword_1ED31C9A0;
  v5 = type metadata accessor for EntitySimilarityInProcessService();
  swift_allocObject();
  v6 = sub_1AE626524(v4);
  if (v1)
  {

    type metadata accessor for EntitySimilarityClient();
    sub_1AE6217F0();
    return (id)swift_deallocPartialClassInstance();
  }
  else
  {
    v10 = v5;
    v11 = &off_1E5DAD9C8;
    *(_QWORD *)&v9 = v6;
    sub_1AE50AF58(&v9, (uint64_t)v3 + OBJC_IVAR____TtC20IntelligencePlatform22EntitySimilarityClient_service);

    v8.receiver = v3;
    v8.super_class = (Class)type metadata accessor for EntitySimilarityClient();
    return objc_msgSendSuper2(&v8, sel_init);
  }
}

uint64_t sub_1AE61F610(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1AE6216B4(a1);
  *(_QWORD *)(v2 + 48) = sub_1AE500C00(v4);
  v5 = sub_1AE4F7738();
  v6 = sub_1AE6216A8(v5);
  *(_QWORD *)(v2 + 64) = v6;
  *(_QWORD *)(v2 + 72) = *(_QWORD *)(v6 - 8);
  v7 = sub_1AE4FC554();
  v8 = sub_1AE506978(v7);
  *(_QWORD *)(v2 + 88) = v8;
  *(_QWORD *)(v2 + 96) = *(_QWORD *)(v8 - 8);
  v9 = sub_1AE4FC554();
  *(_QWORD *)(v2 + 112) = sub_1AE6216E4(v9);
  *(_QWORD *)(v2 + 120) = sub_1AE4FC554();
  *(_BYTE *)(v2 + 176) = *(_BYTE *)a2;
  *(_OWORD *)(v2 + 128) = *(_OWORD *)(a2 + 8);
  sub_1AE4F9070();
  return sub_1AE4FD190();
}

uint64_t sub_1AE61F698()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint8_t *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (qword_1ED31C728 != -1)
    swift_once();
  sub_1AE5065C8();
  sub_1AE5035C0(v1, (uint64_t)qword_1ED31C710);
  sub_1AE507E2C();
  sub_1AE925B00();
  sub_1AE614A34();
  v2 = sub_1AE925B00();
  v3 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v4 = (uint8_t *)sub_1AE4F69B0();
    *(_WORD *)v4 = 0;
    v5 = sub_1AE925AD0();
    _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v2, v3, v5, "EntitySimilarity.Client.computeSimilarity", "", v4, 2u);
    sub_1AE4F9064();
  }
  v23 = *(_QWORD *)(v0 + 136);
  v24 = *(unsigned __int8 *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 112);
  v21 = *(_QWORD *)(v0 + 104);
  v22 = *(_QWORD *)(v0 + 128);
  v9 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 48);
  v11 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 32);
  v12 = *(_QWORD *)(v0 + 40);
  v20 = *(_QWORD *)(v0 + 24);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v11, v13);
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v14 = sub_1AE4FC844();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  *(_QWORD *)v6 = "EntitySimilarity.Client.computeSimilarity";
  *(_QWORD *)(v6 + 8) = 41;
  *(_BYTE *)(v6 + 16) = 2;
  *(_QWORD *)(v6 + 24) = v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6 + *(int *)(v7 + 24), v21, v9);
  sub_1AE4F9858((_QWORD *)(v20 + OBJC_IVAR____TtC20IntelligencePlatform22EntitySimilarityClient_service), *(_QWORD *)(v20 + OBJC_IVAR____TtC20IntelligencePlatform22EntitySimilarityClient_service + 24));
  v15 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v22);
  v16 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v23);
  sub_1AE62176C();
  *(_QWORD *)(v0 + 144) = sub_1AE6212B8(v15, v16, v24);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v17;
  *v17 = v0;
  v17[1] = sub_1AE61F8B4;
  sub_1AE6217B4();
  return sub_1AE6265B0(v18);
}

uint64_t sub_1AE61F8B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  sub_1AE4F6A90();
  sub_1AE5062E4(v3);
  v2[20] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v4 = (void *)v2[18];
    v2[21] = v0;

  }
  sub_1AE4F9070();
  return sub_1AE4F77A8();
}

uint64_t sub_1AE61F910()
{
  uint64_t v0;
  void *v1;

  sub_1AE62178C();
  v1 = *(void **)(v0 + 168);
  sub_1AE6217E8();

  sub_1AE505B24();
  sub_1AE61E310();
  sub_1AE4F90C0();
  sub_1AE4F90A0();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  return sub_1AE4FBB50(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE61F980()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);

  sub_1AE620DCC(v1);
  sub_1AE505D84();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  return sub_1AE500C20(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE61F9D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1AE6216B4(a1);
  v1[6] = sub_1AE500C00(v2);
  v3 = sub_1AE4F7738();
  v4 = sub_1AE6216A8(v3);
  v1[8] = v4;
  v1[9] = *(_QWORD *)(v4 - 8);
  v5 = sub_1AE4FC554();
  v6 = sub_1AE506978(v5);
  v1[11] = v6;
  v1[12] = *(_QWORD *)(v6 - 8);
  v7 = sub_1AE4FC554();
  v1[14] = sub_1AE6216E4(v7);
  v1[15] = sub_1AE4FC554();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

uint64_t sub_1AE61FA4C()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  _WORD *v3;
  uint64_t v4;
  os_signpost_type_t v5;
  os_signpost_id_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1AE50706C();
  if (qword_1ED31C728 != -1)
    swift_once();
  sub_1AE5065C8();
  sub_1AE5035C0(v2, (uint64_t)qword_1ED31C710);
  sub_1AE507E2C();
  sub_1AE925B00();
  sub_1AE614A34();
  sub_1AE925B00();
  sub_1AE614A0C();
  if ((sub_1AE5086C4() & 1) != 0)
  {
    v3 = (_WORD *)sub_1AE4F69B0();
    sub_1AE509EDC(v3);
    sub_1AE614A90();
    sub_1AE6147A8(&dword_1AE4F2000, v4, v5, v6, "EntitySimilarity.Client.batchComputeSimilarity", "");
    sub_1AE4F9064();
  }
  v8 = v1[14];
  v7 = v1[15];
  v9 = v1[12];
  v27 = v1[11];
  v28 = v1[13];
  v10 = v1[7];
  v12 = v1[4];
  v11 = v1[5];
  v13 = v1[2];

  sub_1AE509F30(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v14 = sub_1AE4FC844();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  *(_QWORD *)v7 = "EntitySimilarity.Client.batchComputeSimilarity";
  *(_QWORD *)(v7 + 8) = 46;
  *(_BYTE *)(v7 + 16) = 2;
  *(_QWORD *)(v7 + 24) = v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v7 + *(int *)(v8 + 24), v28, v27);
  v15 = *(_QWORD *)(v13 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    v17 = v1[2];
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1AE9269DC();
    sub_1AE62176C();
    v18 = (uint64_t *)(v17 + 48);
    do
    {
      v19 = *((unsigned __int8 *)v18 - 16);
      v20 = *v18;
      v21 = sub_1AE621774();
      v22 = sub_1AE6217DC(v21);
      v23 = objc_msgSend(sub_1AE621774(), sel_initWithValue_, v20);
      sub_1AE621804(v22, v23, v19);
      sub_1AE9269B8();
      sub_1AE9269E8();
      sub_1AE508720();
      sub_1AE9269C4();
      v18 += 3;
      --v15;
    }
    while (v15);
    v16 = v29;
  }
  v1[16] = v16;
  sub_1AE4F9858((_QWORD *)(v1[3] + OBJC_IVAR____TtC20IntelligencePlatform22EntitySimilarityClient_service), *(_QWORD *)(v1[3] + OBJC_IVAR____TtC20IntelligencePlatform22EntitySimilarityClient_service + 24));
  v24 = (_QWORD *)swift_task_alloc();
  v1[17] = v24;
  *v24 = v1;
  v24[1] = sub_1AE61FC68;
  sub_1AE4FBB68();
  return sub_1AE626A30(v25);
}

uint64_t sub_1AE61FC68(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 144) = a1;
  *(_QWORD *)(v3 + 152) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  sub_1AE4F9070();
  return sub_1AE4FD190();
}

void sub_1AE61FCD0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char v29;
  char v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;

  v3 = *(_QWORD *)(v1 + 144);
  if (v3 >> 62)
  {
    sub_1AE621758();
    sub_1AE926AD8();
    sub_1AE5094E0();
    if (v2)
    {
LABEL_3:
      sub_1AE621714();
      if (v2 < 0)
      {
        __break(1u);
      }
      else
      {
        v12 = v34;
        v13 = v3 & 0xC000000000000001;
        v14 = *(_QWORD *)(v1 + 152);
        v33 = *(_QWORD *)(v1 + 144) + 32;
        while (1)
        {
          v15 = v13
              ? (id)MEMORY[0x1AF453B80](0, *(_QWORD *)(v1 + 144))
              : sub_1AE6217D0(v4, v5, v6, v7, v8, v9, v10, v11, v31.n128_i64[0], v31.n128_i64[1], v32, v33);
          sub_1AE62180C((uint64_t)v15, v16, v17, v18, v19);
          if (v14)
            break;

          v28 = sub_1AE621738(v20, v21, v22, v23, v24, v25, v26, v27, v31.n128_i64[0], v31.n128_i64[1], v32, v33, v34, v35, v36, v37);
          if (v29)
          {
            sub_1AE4F789C();
            v28 = v31;
            v12 = v34;
          }
          sub_1AE6216F0(v28);
          if (v30)
          {
            swift_bridgeObjectRelease();
            goto LABEL_17;
          }
        }

        swift_release();
        sub_1AE4F76D8();
        sub_1AE507574();
        sub_1AE61E310();
        sub_1AE4F90C0();
        sub_1AE4F90A0();
        sub_1AE4F67DC();
        sub_1AE4FCE7C();
        sub_1AE4FD9A8();
        sub_1AE50823C(*(uint64_t (**)(void))(v1 + 8));
      }
      return;
    }
  }
  else
  {
    v2 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_17:
  sub_1AE507574();
  sub_1AE61E310();
  sub_1AE4F90C0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  sub_1AE508700(v12, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1AE61FE34()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1AE506014();
  sub_1AE505D74();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  return sub_1AE500C20(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE61FE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v7 = sub_1AE925AE8();
  v6[8] = v7;
  v6[9] = *(_QWORD *)(v7 - 8);
  v6[10] = sub_1AE4F7738();
  v6[11] = sub_1AE4F7738();
  v8 = sub_1AE925B6C();
  v6[12] = v8;
  v6[13] = *(_QWORD *)(v8 - 8);
  v6[14] = sub_1AE4FC554();
  v9 = sub_1AE925B0C();
  v6[15] = v9;
  v6[16] = *(_QWORD *)(v9 - 8);
  v6[17] = sub_1AE4FC554();
  v6[18] = type metadata accessor for LogSignpost();
  v6[19] = sub_1AE4FC554();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

#error "1AE62000C: call analysis failed (funcsize=71)"

uint64_t sub_1AE620078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1AE4F6A90();
  sub_1AE5062E4(v3);
  *(_QWORD *)(v2 + 168) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 176) = v0;
  sub_1AE4F9070();
  return sub_1AE4F77A8();
}

uint64_t sub_1AE6200CC()
{
  uint64_t v0;
  void *v1;

  sub_1AE62178C();
  v1 = *(void **)(v0 + 176);
  sub_1AE6217E8();

  sub_1AE505B24();
  sub_1AE61E310();
  sub_1AE4F90C0();
  sub_1AE4F90A0();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  return sub_1AE4FBB50(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE62013C()
{
  uint64_t v0;

  sub_1AE620DCC(*(_QWORD *)(v0 + 152));
  sub_1AE505D74();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  return sub_1AE500C20(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE620198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1AE6201B8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  char v13;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  EntityIdentifier.init(_:)(v1, v2, (uint64_t)&v12);
  if ((v13 & 1) != 0
    || (v3 = v12,
        v5 = *(_QWORD *)(v0 + 32),
        v4 = *(_QWORD *)(v0 + 40),
        swift_bridgeObjectRetain(),
        EntityIdentifier.init(_:)(v5, v4, (uint64_t)&v12),
        (v13 & 1) != 0))
  {
    sub_1AE6215EC();
    v6 = sub_1AE4F6778();
    sub_1AE6217A4(v6, v7);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = v12;
    v10 = (_QWORD *)sub_1AE4F933C();
    *(_QWORD *)(v0 + 56) = v10;
    *v10 = v0;
    v10[1] = sub_1AE6202A0;
    return v11(v3, v9);
  }
}

uint64_t sub_1AE6202A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = swift_task_dealloc();
  if (!v1)
    v4 = a1;
  return sub_1AE4FE914(v4, *(uint64_t (**)(void))(v6 + 8));
}

uint64_t sub_1AE6202EC(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1AE6216B4(a1);
  v3[6] = sub_1AE500C00(v6);
  v7 = sub_1AE4F7738();
  v8 = sub_1AE6216A8(v7);
  v3[8] = v8;
  v3[9] = *(_QWORD *)(v8 - 8);
  v9 = sub_1AE4FC554();
  v10 = sub_1AE506978(v9);
  v3[11] = v10;
  v3[12] = *(_QWORD *)(v10 - 8);
  v11 = sub_1AE4FC554();
  v3[14] = sub_1AE6216E4(v11);
  v12 = sub_1AE4FC554();
  v13 = *a2;
  v3[15] = v12;
  v3[16] = v13;
  v3[17] = *a3;
  sub_1AE4F9070();
  return sub_1AE4F77A8();
}

#error "1AE620428: call analysis failed (funcsize=61)"

uint64_t sub_1AE620490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1AE4F6A90();
  sub_1AE5062E4(v3);
  *(_QWORD *)(v2 + 152) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 160) = v0;
  sub_1AE4F9070();
  return sub_1AE4F77A8();
}

uint64_t sub_1AE6204E4()
{
  uint64_t v0;
  void *v1;

  sub_1AE62178C();
  v1 = *(void **)(v0 + 160);
  sub_1AE6217E8();

  sub_1AE505B24();
  sub_1AE61E310();
  sub_1AE4F90C0();
  sub_1AE4F90A0();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  return sub_1AE4FBB50(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE620554()
{
  uint64_t v0;

  sub_1AE620DCC(*(_QWORD *)(v0 + 120));
  sub_1AE505D84();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  return sub_1AE500C20(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE6205A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1AE6205BC()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  _QWORD *v5;

  v1 = v0[2];
  sub_1AE62176C();
  v2 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v1);
  v3 = sub_1AE50A44C(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_);
  v4 = sub_1AE621804(v2, v3, 0);
  v0[5] = v4;
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_1AE62066C;
  return sub_1AE6265B0((uint64_t)v4);
}

uint64_t sub_1AE62066C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1AE4F6A90();
  sub_1AE5062E4(v3);
  *(_QWORD *)(v2 + 56) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 64) = v0;
  sub_1AE4F9070();
  return sub_1AE4F77A8();
}

uint64_t sub_1AE6206C0()
{
  uint64_t v0;

  return sub_1AE62172C(*(_QWORD *)(v0 + 64), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE6206F0()
{
  uint64_t v0;

  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE62071C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1AE6216B4(a1);
  v1[6] = sub_1AE500C00(v2);
  v3 = sub_1AE4F7738();
  v4 = sub_1AE6216A8(v3);
  v1[8] = v4;
  v1[9] = *(_QWORD *)(v4 - 8);
  v5 = sub_1AE4FC554();
  v6 = sub_1AE506978(v5);
  v1[11] = v6;
  v1[12] = *(_QWORD *)(v6 - 8);
  v7 = sub_1AE4FC554();
  v1[14] = sub_1AE6216E4(v7);
  v1[15] = sub_1AE4FC554();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

#error "1AE620840: call analysis failed (funcsize=54)"

uint64_t sub_1AE62088C(uint64_t a1)
{
  sub_1AE621660(a1);
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

void sub_1AE6208C8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  char v29;
  char v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;

  v3 = *(_QWORD *)(v1 + 136);
  if (v3 >> 62)
  {
    sub_1AE621758();
    sub_1AE926AD8();
    sub_1AE5094E0();
    if (v2)
    {
LABEL_3:
      sub_1AE621714();
      if (v2 < 0)
      {
        __break(1u);
      }
      else
      {
        v12 = v34;
        v13 = v3 & 0xC000000000000001;
        v14 = *(_QWORD *)(v1 + 144);
        v33 = *(_QWORD *)(v1 + 136) + 32;
        while (1)
        {
          v15 = v13
              ? (id)MEMORY[0x1AF453B80](0, *(_QWORD *)(v1 + 136))
              : sub_1AE6217D0(v4, v5, v6, v7, v8, v9, v10, v11, v31.n128_i64[0], v31.n128_i64[1], v32, v33);
          sub_1AE62180C((uint64_t)v15, v16, v17, v18, v19);
          if (v14)
            break;

          v28 = sub_1AE621738(v20, v21, v22, v23, v24, v25, v26, v27, v31.n128_i64[0], v31.n128_i64[1], v32, v33, v34, v35, v36, v37);
          if (v29)
          {
            sub_1AE4F789C();
            v28 = v31;
            v12 = v34;
          }
          sub_1AE6216F0(v28);
          if (v30)
          {
            swift_bridgeObjectRelease();
            goto LABEL_17;
          }
        }

        swift_release();
        sub_1AE4F76D8();
        sub_1AE507574();
        sub_1AE61E310();
        sub_1AE4F90C0();
        sub_1AE4F90A0();
        sub_1AE4F67DC();
        sub_1AE4FCE7C();
        sub_1AE4FD9A8();
        sub_1AE50823C(*(uint64_t (**)(void))(v1 + 8));
      }
      return;
    }
  }
  else
  {
    v2 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_17:
  sub_1AE507574();
  sub_1AE61E310();
  sub_1AE4F90C0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  sub_1AE508700(v12, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1AE620A2C()
{
  uint64_t v0;

  sub_1AE506014();
  sub_1AE505D74();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  return sub_1AE500C20(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE620A74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1AE620A8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    sub_1AE62177C();
    sub_1AE62176C();
    v4 = v1 + 40;
    do
    {
      v5 = sub_1AE621774();
      v6 = sub_1AE50A44C(v5, sel_initWithValue_);
      v7 = sub_1AE621774();
      v8 = sub_1AE6217DC(v7);
      sub_1AE621804(v6, v8, 0);
      sub_1AE9269B8();
      sub_1AE9269E8();
      sub_1AE508720();
      sub_1AE9269C4();
      v4 += 16;
      --v2;
    }
    while (v2);
    v3 = v12;
  }
  v0[4] = v3;
  v9 = (_QWORD *)swift_task_alloc();
  v0[5] = v9;
  v10 = sub_1AE621820(v9, (uint64_t)sub_1AE620B88);
  return sub_1AE626A30(v10);
}

uint64_t sub_1AE620B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE6216C0();
  if (!v1)
    *(_QWORD *)(v2 + 56) = v0;
  sub_1AE4F9070();
  return sub_1AE4F77A8();
}

uint64_t sub_1AE620BCC()
{
  uint64_t v0;

  sub_1AE621818();
  return sub_1AE62172C(*(_QWORD *)(v0 + 56), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE620BF8()
{
  uint64_t v0;

  sub_1AE621818();
  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE620C20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1AE6216B4(a1);
  v1[6] = sub_1AE500C00(v2);
  v3 = sub_1AE4F7738();
  v4 = sub_1AE6216A8(v3);
  v1[8] = v4;
  v1[9] = *(_QWORD *)(v4 - 8);
  v5 = sub_1AE4FC554();
  v6 = sub_1AE506978(v5);
  v1[11] = v6;
  v1[12] = *(_QWORD *)(v6 - 8);
  v7 = sub_1AE4FC554();
  v1[14] = sub_1AE6216E4(v7);
  v1[15] = sub_1AE4FC554();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

#error "1AE620D44: call analysis failed (funcsize=54)"

uint64_t sub_1AE620D90(uint64_t a1)
{
  sub_1AE621660(a1);
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

uint64_t sub_1AE620DCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  NSObject *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  os_signpost_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  char v30;

  v2 = sub_1AE925B18();
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F666C();
  v26 = v4 - v3;
  v5 = sub_1AE925AE8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  v9 = v8 - v7;
  v10 = sub_1AE925B0C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F666C();
  v14 = v13 - v12;
  v15 = type metadata accessor for LogSignpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, a1 + *(int *)(v15 + 24), v10);
  v29 = *(const char **)a1;
  v16 = *(_BYTE *)(a1 + 16);
  swift_retain();
  v17 = sub_1AE925B00();
  sub_1AE925B24();
  v25 = sub_1AE926664();
  result = sub_1AE926700();
  if ((result & 1) == 0)
  {
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
  }
  if ((v16 & 1) == 0)
  {
    if (v29)
    {
      v20 = v27;
      v19 = v28;
      v21 = v26;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v29 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v29 >> 11 != 27)
  {
    v20 = v27;
    v19 = v28;
    v21 = v26;
    if (v29 >> 16 <= 0x10)
    {
      v29 = &v30;
LABEL_9:
      swift_retain();
      sub_1AE925B48();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v20 + 88))(v21, v19) == *MEMORY[0x1E0DF2190])
      {
        v22 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v19);
        v22 = "";
      }
      v23 = (uint8_t *)sub_1AE4F69B0();
      *(_WORD *)v23 = 0;
      v24 = sub_1AE925AD0();
      _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v17, v25, v24, v29, v22, v23, 2u);
      sub_1AE4F9064();
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1AE621040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1AE621058()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    sub_1AE62177C();
    v4 = (unint64_t *)(v1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      EntityIdentifier.init(_:)(v5, v6, (uint64_t)&v18);
      if ((v19 & 1) != 0
        || (swift_bridgeObjectRetain(), EntityIdentifier.init(_:)(v7, v8, (uint64_t)&v18), (v19 & 1) != 0))
      {
        sub_1AE6215EC();
        v14 = sub_1AE4F6778();
        sub_1AE6217A4(v14, v15);
        swift_bridgeObjectRelease();
        sub_1AE4F76D8();
        swift_release();
        sub_1AE6217B4();
        __asm { BR              X0 }
      }
      v9 = v18;
      sub_1AE62176C();
      v10 = sub_1AE50A44C(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_);
      sub_1AE6212B8(v10, objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v9), 0);
      swift_bridgeObjectRelease();
      sub_1AE4F76D8();
      sub_1AE9269B8();
      sub_1AE9269E8();
      sub_1AE9269F4();
      sub_1AE9269C4();
      v4 += 4;
      --v2;
    }
    while (v2);
    v3 = v17;
  }
  v0[4] = v3;
  v11 = (_QWORD *)swift_task_alloc();
  v0[5] = v11;
  sub_1AE621820(v11, (uint64_t)sub_1AE62120C);
  sub_1AE6217B4();
  return sub_1AE626A30(v12);
}

uint64_t sub_1AE62120C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE6216C0();
  if (!v1)
    *(_QWORD *)(v2 + 56) = v0;
  sub_1AE4F9070();
  return sub_1AE4F77A8();
}

uint64_t sub_1AE621250()
{
  uint64_t v0;

  sub_1AE621818();
  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

id EntitySimilarityClient.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EntitySimilarityClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1AE6212B8(void *a1, void *a2, uint64_t a3)
{
  id v5;

  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithEntityId1_entityId2_entitySimilarityMode_, a1, a2, a3);

  return v5;
}

unint64_t sub_1AE621318()
{
  unint64_t result;

  result = qword_1EED9E198[0];
  if (!qword_1EED9E198[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1EED9E198);
  }
  return result;
}

uint64_t method lookup function for EntitySimilarityClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntitySimilarityClient.__allocating_init(throwing:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of EntitySimilarityClient.computeSimilarity(request:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v5 = (_QWORD *)sub_1AE4F933C();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1AE607CF8;
  return v7(a1, a2);
}

uint64_t dispatch thunk of EntitySimilarityClient.batchComputeSimilarity(requestBatch:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE6148C8(v1, (uint64_t)sub_1AE621634);
  return sub_1AE4F6A74(v2, v3);
}

uint64_t dispatch thunk of EntitySimilarityClient.computeSimilarity(tuple:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1AE62178C();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v0 + 16) = v11;
  *v11 = v0;
  v11[1] = sub_1AE607CF8;
  return v13(v10, v8, v6, v4, v2);
}

uint64_t dispatch thunk of EntitySimilarityClient.computeSimilarity(tuple:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v7 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1AE605120;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of EntitySimilarityClient.batchComputeSimilarity(batchTuples:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE6148C8(v1, (uint64_t)sub_1AE53D6DC);
  return sub_1AE4F6A74(v2, v3);
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE6148C8(v1, (uint64_t)sub_1AE621634);
  return sub_1AE4F6A74(v2, v3);
}

unint64_t sub_1AE6215EC()
{
  unint64_t result;

  result = qword_1EED9E218;
  if (!qword_1EED9E218)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntitySimilarityError, &type metadata for EntitySimilarityError);
    atomic_store(result, (unint64_t *)&qword_1EED9E218);
  }
  return result;
}

uint64_t sub_1AE621638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1AE62164C()
{
  return swift_task_alloc();
}

uint64_t sub_1AE621660(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v4 + 136) = a1;
  *(_QWORD *)(v4 + 144) = v1;
  return swift_task_dealloc();
}

_QWORD *sub_1AE621688@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  return sub_1AE4F9858((_QWORD *)(a3 + a1), *(_QWORD *)(a3 + a1 + 24));
}

uint64_t sub_1AE6216A8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return sub_1AE925B6C();
}

uint64_t sub_1AE6216B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1AE925AE8();
}

uint64_t sub_1AE6216C0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1AE6216E4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = a1;
  return type metadata accessor for LogSignpost();
}

void sub_1AE6216F0(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  __n128 *v6;

  *(_QWORD *)(v1 + 16) = v2;
  v6 = (__n128 *)(v1 + 32 * v3);
  v6[2].n128_u64[0] = v5;
  v6[2].n128_u8[8] = v4;
  v6[3] = a1;
}

void sub_1AE621714()
{
  sub_1AE521C30();
}

uint64_t sub_1AE62172C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

__n128 sub_1AE621738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, __int128 a16)
{
  return (__n128)a16;
}

uint64_t sub_1AE621758()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1AE62176C()
{
  return sub_1AE621318();
}

id sub_1AE621774()
{
  uint64_t v0;

  return objc_allocWithZone(*(Class *)(v0 + 4016));
}

uint64_t sub_1AE62177C()
{
  return sub_1AE9269DC();
}

uint64_t sub_1AE6217A4(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  a2[1] = 0;
  return swift_willThrow();
}

id sub_1AE6217D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  return *(id *)(a12 + 8 * v12);
}

id sub_1AE6217DC(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(a1, (SEL)(v2 + 3784), v1);
}

void sub_1AE6217E8()
{
  uint64_t v0;

  sub_1AE627BC0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1AE6217F0()
{
  uint64_t v0;

  return v0;
}

id sub_1AE621804(void *a1, void *a2, uint64_t a3)
{
  return sub_1AE6212B8(a1, a2, a3);
}

void sub_1AE62180C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_1AE627BC0((uint64_t)va);
}

uint64_t sub_1AE621818()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE621820@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_1AE621834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int128 *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  float v14;
  float v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v4 = (__int128 *)a2;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1AE521C30();
    v7 = v27;
    v8 = (_QWORD *)(a1 + 48);
    v19 = (uint64_t)v4;
    while (1)
    {
      v9 = *((_BYTE *)v8 - 16);
      v11 = *(v8 - 1);
      v10 = *v8;
      v12 = v4[1];
      v23 = *v4;
      v24 = v12;
      v13 = v4[3];
      v25 = v4[2];
      v26 = v13;
      v21 = v10;
      v22 = v11;
      sub_1AE6219B8(&v22, &v21, a3);
      if (v3)
        break;
      v15 = v14;
      v27 = v7;
      v16 = *(_QWORD *)(v7 + 16);
      if (v16 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1AE521C30();
        v7 = v27;
      }
      *(_QWORD *)(v7 + 16) = v16 + 1;
      v17 = v7 + 32 * v16;
      *(double *)(v17 + 32) = v15;
      v8 += 3;
      *(_BYTE *)(v17 + 40) = v9;
      *(_QWORD *)(v17 + 48) = v11;
      *(_QWORD *)(v17 + 56) = v10;
      --v5;
      v4 = (__int128 *)v19;
      if (!v5)
      {
        sub_1AE626390(v19);
        goto LABEL_10;
      }
    }
    swift_release();
    sub_1AE626390((uint64_t)v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE626390(a2);
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_10:
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1AE6219B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __int128 *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v5 = v3[1];
  v21 = *v3;
  v22 = v5;
  v6 = v3[3];
  v23 = v3[2];
  v7 = *a1;
  v8 = *a2;
  v24 = v6;
  if (!a3)
  {
    sub_1AE501548((uint64_t *)&unk_1ED30FDA0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AE933BD0;
    *(_QWORD *)(inited + 32) = v7;
    *(_QWORD *)(inited + 40) = v8;
    v25 = v21;
    v26 = v22;
    v27 = v23;
    v16 = sub_1AE622A84(inited);
    if (v4)
      return swift_setDeallocating();
    v20 = v16;
    sub_1AE6260D4((uint64_t)&v21);
    sub_1AE625EA4(v20, (uint64_t)&v21);
    sub_1AE4F9038();
    swift_setDeallocating();
    sub_1AE4FB75C();
  }
  sub_1AE6264D8(v7);
  if (v9)
  {
    v10 = v9;
    sub_1AE6264D8(v8);
    v12 = v11;
    sub_1AE4F6A24();
    sub_1AE4F6648();
    if (v12)
    {
      v13 = *(_QWORD *)(v10 + 16);
      swift_bridgeObjectRelease();
      result = sub_1AE4F9038();
      if (v13 >> 31)
      {
        __break(1u);
      }
      else
      {
        cblas_sdot_NEWLAPACK();
        cblas_snrm2_NEWLAPACK();
        cblas_snrm2_NEWLAPACK();
        return sub_1AE4F6648();
      }
      return result;
    }
  }
  else
  {
    sub_1AE4F6A24();
  }
  swift_bridgeObjectRelease();
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE6264D8(v7);
  if (v17)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    EntityIdentifier.description.getter();
    sub_1AE925F74();
    sub_1AE4F76D8();
  }
  sub_1AE925F74();
  sub_1AE4F76D8();
  sub_1AE6264D8(v8);
  if (v18)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    EntityIdentifier.description.getter();
    sub_1AE925F74();
    sub_1AE4F81B8();
  }
  sub_1AE925F74();
  sub_1AE4F81B8();
  sub_1AE6215EC();
  swift_allocError();
  *v19 = 0;
  v19[1] = 0xE000000000000000;
  swift_willThrow();
  return sub_1AE4F6648();
}

uint64_t EntitySimilarityEngine.loadVectorMap(entityIds:)(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v9[2];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v4 = v1[1];
  v9[0] = *v1;
  v9[1] = v4;
  v5 = v1[3];
  v10 = v1[2];
  v11 = v5;
  v12 = v9[0];
  v13 = v4;
  v14 = v10;
  v6 = sub_1AE622A84(a1);
  if (!v2)
  {
    v7 = v6;
    sub_1AE6260D4((uint64_t)v9);
    v3 = sub_1AE625EA4(v7, (uint64_t)v9);
    sub_1AE4F9038();
  }
  return v3;
}

double EntitySimilarityEngine.computeSimilarity(request:)@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  double result;
  uint64_t v13[2];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *a1;
  v6 = *((_QWORD *)a1 + 1);
  v7 = *((_QWORD *)a1 + 2);
  v8 = *(_QWORD *)v2;
  v9 = *(_OWORD *)(v2 + 24);
  v10 = *(_OWORD *)(v2 + 40);
  v11 = *(_QWORD *)(v2 + 56);
  v13[0] = v7;
  v13[1] = v8;
  v14 = *(_OWORD *)(v2 + 8);
  v15 = v9;
  v16 = v10;
  v17 = v11;
  v18 = v6;
  sub_1AE6219B8(&v18, v13, 0);
  if (!v3)
  {
    result = *(float *)&result;
    *(double *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_QWORD *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t EntitySimilarityEngine.computeSimilarityBatch(batchRequests:batchSize:)(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  __int128 v47;
  unint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  v4 = v3;
  v57 = *MEMORY[0x1E0C80C00];
  v5 = v2[1];
  v50 = *v2;
  v51 = v5;
  v6 = v2[3];
  v52 = v2[2];
  v53 = v6;
  v7 = sub_1AE6221B0(a1);
  v8 = v7;
  v49 = MEMORY[0x1E0DEE9D8];
  v43 = *(_QWORD *)(v7 + 16);
  if (!v43)
  {
    sub_1AE4F76D8();
    goto LABEL_28;
  }
  v9 = 0;
  v44 = v7 + 32;
  v10 = MEMORY[0x1E0DEE9D8];
  v42 = v7;
  while (1)
  {
    if (v9 >= *(_QWORD *)(v8 + 16))
      goto LABEL_33;
    v46 = v4;
    v11 = v44 + 24 * v9;
    v12 = *(_BYTE *)v11;
    v47 = *(_OWORD *)(v11 + 8);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE51B088();
      v10 = v38;
    }
    v14 = *(_QWORD *)(v10 + 16);
    v13 = *(_QWORD *)(v10 + 24);
    v15 = v14 + 1;
    if (v14 >= v13 >> 1)
    {
      sub_1AE4FBAB0(v13);
      sub_1AE51B088();
      v10 = v39;
    }
    *(_QWORD *)(v10 + 16) = v15;
    v16 = v10 + 24 * v14;
    *(_BYTE *)(v16 + 32) = v12;
    *(_OWORD *)(v16 + 40) = v47;
    if (v15 == a2 || v9 == *(_QWORD *)(a1 + 16) - 1)
      break;
LABEL_25:
    if (++v9 == v43)
    {
      sub_1AE4F76D8();
LABEL_28:
      sub_1AE4F81B8();
      return v49;
    }
  }
  v48 = v9;
  sub_1AE4F6A24();
  v17 = v14 + 1;
  v18 = (uint64_t *)(v10 + 48);
  v19 = MEMORY[0x1E0DEE9D8];
  do
  {
    v21 = *(v18 - 1);
    v20 = *v18;
    sub_1AE501548((uint64_t *)&unk_1ED30FDA0);
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 32) = v21;
    v23 = (_OWORD *)(inited + 32);
    *(_QWORD *)(inited + 40) = v20;
    v24 = *(_QWORD *)(v19 + 16);
    if (__OFADD__(v24, 2))
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
    }
    v25 = inited;
    if (!swift_isUniquelyReferenced_nonNull_native() || (v26 = *(_QWORD *)(v19 + 24) >> 1, v26 < v24 + 2))
    {
      sub_1AE519D1C();
      v19 = v27;
      v26 = *(_QWORD *)(v27 + 24) >> 1;
    }
    v28 = *(_QWORD *)(v19 + 16);
    if (v26 - v28 < 2)
      goto LABEL_31;
    v29 = (_OWORD *)(v19 + 8 * v28 + 32);
    if ((unint64_t)v23 < v19 + 8 * v28 + 48 && (unint64_t)v29 < v25 + 48)
    {
      sub_1AE4FCDB0();
      sub_1AE4FE890();
      result = sub_1AE926B20();
      __break(1u);
      return result;
    }
    *v29 = *v23;
    v31 = __OFADD__(v28, 2);
    v32 = v28 + 2;
    if (v31)
      goto LABEL_32;
    v18 += 3;
    *(_QWORD *)(v19 + 16) = v32;
    swift_setDeallocating();
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease_n();
  sub_1AE898248();
  sub_1AE5922D8();
  v34 = v33;
  sub_1AE4F9038();
  v54 = v50;
  v55 = v51;
  v56 = v52;
  v35 = sub_1AE622A84(v34);
  v4 = v46;
  if (!v46)
  {
    v36 = v35;
    sub_1AE6260D4((uint64_t)&v50);
    v37 = sub_1AE625EA4(v36, (uint64_t)&v50);
    sub_1AE4FDCE8();
    swift_bridgeObjectRelease();
    sub_1AE6260D4((uint64_t)&v50);
    swift_retain();
    sub_1AE621834(v10, (uint64_t)&v50, v37);
    swift_release();
    sub_1AE4F81B8();
    sub_1AE60FBB0();
    v10 = MEMORY[0x1E0DEE9D8];
    v8 = v42;
    v9 = v48;
    goto LABEL_25;
  }
  sub_1AE506C5C();
  sub_1AE4FDCE8();
  sub_1AE4F81B8();
  return sub_1AE4F76D8();
}

uint64_t sub_1AE6221B0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD *@<X8>);
  void (*v6)(_QWORD *@<X8>);
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int64_t v38;
  int64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  int64_t v76;
  unint64_t v77;
  unint64_t v78;
  int64_t v79;
  int64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unint64_t v92;
  unint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t result;
  void (*v106)(_QWORD *@<X8>);
  void (*v107)(_QWORD *@<X8>);
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int64_t v117;
  uint64_t v118;

  sub_1AE501548((uint64_t *)&unk_1EED9E368);
  sub_1AE5962D8();
  v2 = (_QWORD *)sub_1AE925C98();
  v3 = sub_1AE925C98();
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = 0;
    v6 = 0;
    v7 = (uint64_t *)(a1 + 48);
    do
    {
      v114 = v4;
      v116 = (uint64_t)v6;
      v9 = *(v7 - 1);
      v8 = *v7;
      sub_1AE626508((uint64_t)v5);
      swift_isUniquelyReferenced_nonNull_native();
      v10 = sub_1AE626500();
      if (__OFADD__(v2[2], (v11 & 1) == 0))
        goto LABEL_121;
      v12 = v10;
      v13 = v11;
      sub_1AE501548(&qword_1EED9E378);
      if ((sub_1AE926A54() & 1) != 0)
      {
        v14 = sub_1AE626500();
        if ((v13 & 1) != (v15 & 1))
          goto LABEL_132;
        v12 = v14;
      }
      sub_1AE4FDCF0();
      if ((v13 & 1) != 0)
      {
        sub_1AE4FB75C();
      }
      else
      {
        v2[(v12 >> 6) + 8] |= 1 << v12;
        *(_QWORD *)(v2[6] + 8 * v12) = v9;
        *(_QWORD *)(v2[7] + 8 * v12) = MEMORY[0x1E0DEE9E8];
        v16 = v2[2];
        v17 = v16 + 1;
        v18 = __OFADD__(v16, 1);
        sub_1AE4FB75C();
        if (v18)
          goto LABEL_126;
        v2[2] = v17;
      }
      swift_bridgeObjectRelease();
      v19 = v8;
      sub_1AE556EA8();
      sub_1AE626508(v116);
      swift_isUniquelyReferenced_nonNull_native();
      v20 = sub_1AE6264B8();
      if (__OFADD__(*(_QWORD *)(v3 + 16), (v21 & 1) == 0))
        goto LABEL_122;
      v22 = v20;
      v23 = v21;
      sub_1AE501548((uint64_t *)&unk_1EED9E380);
      if ((sub_1AE926A54() & 1) != 0)
      {
        v24 = sub_1AE6264B8();
        if ((v23 & 1) != (v25 & 1))
          goto LABEL_132;
        v22 = v24;
      }
      sub_1AE4FDCF0();
      if ((v23 & 1) != 0)
      {
        sub_1AE4F66C4();
      }
      else
      {
        sub_1AE4F78B8(v3 + 8 * (v22 >> 6));
        *(_QWORD *)(v26 + 8 * v22) = v19;
        *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v22) = 0;
        v27 = *(_QWORD *)(v3 + 16);
        v28 = v27 + 1;
        v29 = __OFADD__(v27, 1);
        sub_1AE4F66C4();
        if (v29)
          goto LABEL_127;
        *(_QWORD *)(v3 + 16) = v28;
      }
      v30 = *(_QWORD *)(v3 + 56);
      swift_bridgeObjectRelease();
      v31 = *(_QWORD *)(v30 + 8 * v22);
      v32 = __OFADD__(v31, 1);
      v33 = v31 + 1;
      if (v32)
        goto LABEL_123;
      v7 += 3;
      *(_QWORD *)(v30 + 8 * v22) = v33;
      v5 = sub_1AE6233A8;
      v6 = sub_1AE5190DC;
      v4 = v114 - 1;
    }
    while (v114 != 1);
    swift_bridgeObjectRelease();
    v106 = sub_1AE6233A8;
    v107 = sub_1AE5190DC;
  }
  else
  {
    v106 = 0;
    v107 = 0;
  }
  v34 = v3 + 64;
  v35 = 1 << *(_BYTE *)(v3 + 32);
  v36 = -1;
  if (v35 < 64)
    v36 = ~(-1 << v35);
  v37 = v36 & *(_QWORD *)(v3 + 64);
  v38 = (unint64_t)(v35 + 63) >> 6;
  sub_1AE4F66C4();
  v39 = 0;
  v40 = MEMORY[0x1E0DEE9D8];
  while (v37)
  {
    v41 = __clz(__rbit64(v37));
    v37 &= v37 - 1;
    v42 = v41 | (v39 << 6);
LABEL_48:
    if (!*(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v42))
    {
      v48 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v42);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE519D1C();
        v40 = v51;
      }
      v50 = *(_QWORD *)(v40 + 16);
      v49 = *(_QWORD *)(v40 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_1AE4FBAB0(v49);
        sub_1AE519D1C();
        v40 = v52;
      }
      *(_QWORD *)(v40 + 16) = v50 + 1;
      *(_QWORD *)(v40 + 8 * v50 + 32) = v48;
    }
  }
  v43 = v39 + 1;
  if (__OFADD__(v39, 1))
    goto LABEL_124;
  if (v43 >= v38)
    goto LABEL_54;
  ++v39;
  if (*(_QWORD *)(v34 + 8 * v43))
    goto LABEL_47;
  v39 = v43 + 1;
  if (v43 + 1 >= v38)
    goto LABEL_54;
  if (*(_QWORD *)(v34 + 8 * v39))
    goto LABEL_47;
  v39 = v43 + 2;
  if (v43 + 2 >= v38)
    goto LABEL_54;
  if (*(_QWORD *)(v34 + 8 * v39))
  {
LABEL_47:
    sub_1AE50747C();
    v37 = v46 & v45;
    v42 = v47 + (v39 << 6);
    goto LABEL_48;
  }
  v44 = v43 + 3;
  if (v44 >= v38)
    goto LABEL_54;
  if (*(_QWORD *)(v34 + 8 * v44))
  {
    v39 = v44;
    goto LABEL_47;
  }
  while (1)
  {
    v39 = v44 + 1;
    if (__OFADD__(v44, 1))
      goto LABEL_128;
    if (v39 >= v38)
      break;
    ++v44;
    if (*(_QWORD *)(v34 + 8 * v39))
      goto LABEL_47;
  }
LABEL_54:
  swift_release();
  v118 = MEMORY[0x1E0DEE9D8];
  if (!*(_QWORD *)(v40 + 16))
  {
    swift_bridgeObjectRelease();
    v104 = MEMORY[0x1E0DEE9D8];
    goto LABEL_116;
  }
  while (2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE7AA5CC();
      v40 = v103;
    }
    v53 = *(_QWORD *)(v40 + 16);
    if (!v53)
      goto LABEL_125;
    *(_QWORD *)(v40 + 16) = v53 - 1;
    if (!v2[2] || (v54 = sub_1AE626500(), (v55 & 1) == 0))
    {
LABEL_113:
      if (*(_QWORD *)(v40 + 16))
        continue;
      swift_bridgeObjectRelease();
      v104 = v118;
LABEL_116:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AE626508((uint64_t)v106);
      sub_1AE626508((uint64_t)v107);
      return v104;
    }
    break;
  }
  v56 = *(_QWORD *)(v2[7] + 8 * v54);
  swift_bridgeObjectRetain_n();
  sub_1AE60F7CC();
  v57 = 0;
  v58 = v56 + 56;
  sub_1AE507090();
  v61 = v60 & v59;
  v117 = (unint64_t)(v62 + 63) >> 6;
  while (1)
  {
LABEL_61:
    if (!v61)
    {
      v63 = v57 + 1;
      if (__OFADD__(v57, 1))
      {
        __break(1u);
LABEL_118:
        __break(1u);
        goto LABEL_119;
      }
      if (v63 >= v117)
        goto LABEL_112;
      ++v57;
      if (*(_QWORD *)(v58 + 8 * v63))
        goto LABEL_76;
      v57 = v63 + 1;
      if (v63 + 1 >= v117)
        goto LABEL_112;
      if (*(_QWORD *)(v58 + 8 * v57))
        goto LABEL_76;
      v57 = v63 + 2;
      if (v63 + 2 >= v117)
        goto LABEL_112;
      if (*(_QWORD *)(v58 + 8 * v57))
        goto LABEL_76;
      v64 = v63 + 3;
      if (v64 < v117)
      {
        if (*(_QWORD *)(v58 + 8 * v64))
        {
          v57 = v64;
LABEL_76:
          sub_1AE50747C();
          v61 = v66 & v65;
          goto LABEL_77;
        }
        while (1)
        {
          v57 = v64 + 1;
          if (__OFADD__(v64, 1))
            break;
          if (v57 >= v117)
            goto LABEL_112;
          ++v64;
          if (*(_QWORD *)(v58 + 8 * v57))
            goto LABEL_76;
        }
LABEL_119:
        __break(1u);
        goto LABEL_120;
      }
LABEL_112:
      swift_release();
      goto LABEL_113;
    }
    v61 &= v61 - 1;
LABEL_77:
    if (v2[2])
    {
      v67 = sub_1AE626500();
      if ((v68 & 1) != 0)
        break;
    }
  }
  v110 = v56;
  v111 = v40;
  v69 = *(_QWORD *)(v2[7] + 8 * v67) + 56;
  sub_1AE507090();
  v72 = v71 & v70;
  v74 = (unint64_t)(v73 + 63) >> 6;
  v113 = v58;
  v115 = v75;
  swift_bridgeObjectRetain();
  v76 = 0;
  while (1)
  {
    if (v72)
    {
      v77 = __clz(__rbit64(v72));
      v72 &= v72 - 1;
      v78 = v77 | (v76 << 6);
      goto LABEL_96;
    }
    v79 = v76 + 1;
    if (__OFADD__(v76, 1))
      goto LABEL_118;
    v58 = v113;
    if (v79 >= v74)
    {
LABEL_111:
      swift_release();
      v56 = v110;
      v40 = v111;
      goto LABEL_61;
    }
    ++v76;
    if (!*(_QWORD *)(v69 + 8 * v79))
    {
      v76 = v79 + 1;
      if (v79 + 1 >= v74)
        goto LABEL_111;
      if (!*(_QWORD *)(v69 + 8 * v76))
      {
        v76 = v79 + 2;
        if (v79 + 2 >= v74)
          goto LABEL_111;
        if (!*(_QWORD *)(v69 + 8 * v76))
          break;
      }
    }
LABEL_95:
    sub_1AE50747C();
    v72 = v82 & v81;
    v78 = v83 + (v76 << 6);
LABEL_96:
    if (*(_QWORD *)(v3 + 16))
    {
      v84 = *(_QWORD *)(*(_QWORD *)(v115 + 48) + 24 * v78 + 16);
      v85 = sub_1AE6264B8();
      if ((v86 & 1) != 0)
      {
        v87 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v85);
        v32 = __OFSUB__(v87, 1);
        v88 = v87 - 1;
        if (v32)
          goto LABEL_129;
        v109 = v88;
        swift_isUniquelyReferenced_nonNull_native();
        v89 = sub_1AE6264B8();
        v112 = v90;
        if (__OFADD__(*(_QWORD *)(v3 + 16), (v90 & 1) == 0))
          goto LABEL_130;
        v108 = v89;
        sub_1AE501548((uint64_t *)&unk_1EED9E380);
        v91 = sub_1AE926A54();
        v92 = v108;
        if ((v91 & 1) != 0)
        {
          v93 = sub_1AE536D68();
          if ((v112 & 1) != (v94 & 1))
            goto LABEL_132;
          v92 = v93;
        }
        if ((v112 & 1) != 0)
        {
          v95 = v109;
          *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v92) = v109;
        }
        else
        {
          sub_1AE4F78B8(v3 + 8 * (v92 >> 6));
          *(_QWORD *)(v96 + 8 * v97) = v84;
          v95 = v109;
          *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v97) = v109;
          v98 = *(_QWORD *)(v3 + 16);
          v32 = __OFADD__(v98, 1);
          v99 = v98 + 1;
          if (v32)
            goto LABEL_131;
          *(_QWORD *)(v3 + 16) = v99;
        }
        sub_1AE4FDCF0();
        if (!v95)
        {
          v100 = *(_QWORD *)(v111 + 16);
          v101 = v100 + 1;
          if (v100 >= *(_QWORD *)(v111 + 24) >> 1)
          {
            sub_1AE519D1C();
            v101 = v100 + 1;
            v111 = v102;
          }
          *(_QWORD *)(v111 + 16) = v101;
          *(_QWORD *)(v111 + 8 * v100 + 32) = v84;
        }
      }
    }
  }
  v80 = v79 + 3;
  if (v80 >= v74)
    goto LABEL_111;
  if (*(_QWORD *)(v69 + 8 * v80))
  {
    v76 = v80;
    goto LABEL_95;
  }
  while (1)
  {
    v76 = v80 + 1;
    if (__OFADD__(v80, 1))
      break;
    if (v76 >= v74)
      goto LABEL_111;
    ++v80;
    if (*(_QWORD *)(v69 + 8 * v76))
      goto LABEL_95;
  }
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE622A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  _QWORD v13[2];
  uint64_t v14;

  v2 = v1;
  sub_1AE92526C();
  sub_1AE5962D8();
  v4 = MEMORY[0x1E0DEE9D8];
  v14 = sub_1AE925C98();
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v13[0] = v4;
    sub_1AE52154C();
    v6 = *(_QWORD *)(v4 + 16);
    v7 = 16 * v6;
    do
    {
      v13[0] = v4;
      v8 = v6 + 1;
      if (v6 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_1AE52154C();
        v4 = v13[0];
      }
      *(_QWORD *)(v4 + 16) = v8;
      v9 = v4 + v7;
      *(_QWORD *)(v9 + 32) = 63;
      *(_QWORD *)(v9 + 40) = 0xE100000000000000;
      v7 += 16;
      v6 = v8;
      --v5;
    }
    while (v5);
    v2 = v1;
  }
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE626410(&qword_1ED318BD0);
  sub_1AE925DC4();
  swift_bridgeObjectRelease();
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  strcpy((char *)v13, "SELECT * FROM ");
  HIBYTE(v13[1]) = -18;
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  ObjectType = swift_getObjectType();
  MEMORY[0x1E0C80A78](ObjectType);
  sub_1AE924CCC();
  swift_bridgeObjectRelease();
  v11 = v14;
  if (v2)
    swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1AE622D3C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  char *v26;
  char *v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *, _QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD *__return_ptr, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  BOOL v41;
  double v42;
  uint64_t v43;
  unint64_t v44;
  float v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  char *v62;
  void (**v63)(_QWORD *__return_ptr, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  _QWORD v74[6];

  v66 = sub_1AE501548((uint64_t *)&unk_1ED30EC90);
  MEMORY[0x1E0C80A78](v66);
  v58 = (uint64_t)v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1AE9254D0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v62 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v61 = (char *)v52 - v8;
  v9 = sub_1AE501548(&qword_1EED9E398);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v64 = (uint64_t)v52 - v13;
  v14 = sub_1AE501548(&qword_1EED9E3A0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (_QWORD *)((char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = v1[4];
  v68 = v1[5];
  v69 = v17;
  v55 = v1[6];
  v54 = v1[7];
  v52[1] = a1;
  v18 = sub_1AE925218();
  v20 = v19;
  v22 = v21;
  v74[0] = v18;
  v23 = sub_1AE92526C();
  sub_1AE58FEAC(&qword_1EED9E3A8, (void (*)(uint64_t))MEMORY[0x1E0D24538]);
  sub_1AE926070();
  v24 = (_QWORD *)((char *)v16 + *(int *)(v14 + 44));
  *v24 = v20;
  v24[1] = v22;
  v63 = (void (**)(_QWORD *__return_ptr, uint64_t))v24;
  v25 = (char *)v16 + *(int *)(sub_1AE501548(&qword_1ED30ECA0) + 36);
  v65 = v5;
  v59 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v53 = MEMORY[0x1E0DEE9D8];
  v67 = v16;
  v57 = v23;
  v56 = v25;
  v60 = v12;
  v26 = v61;
  while (1)
  {
    v59(v26, v25, v4);
    sub_1AE58FEAC(qword_1ED30FFE0, (void (*)(uint64_t))MEMORY[0x1E0D24538]);
    v27 = v62;
    sub_1AE9264A8();
    sub_1AE58FEAC(&qword_1ED30FFF0, (void (*)(uint64_t))MEMORY[0x1E0D24898]);
    v28 = sub_1AE925E00();
    v29 = *(void (**)(char *, uint64_t))(v65 + 8);
    v29(v27, v4);
    v29(v26, v4);
    if ((v28 & 1) != 0)
    {
      v30 = 1;
      v31 = v64;
    }
    else
    {
      v32 = (void (*)(_QWORD *, _QWORD))sub_1AE92658C();
      v31 = v64;
      sub_1AE578FEC(v33, v64, (uint64_t *)&unk_1ED30EC90);
      v32(v74, 0);
      v74[0] = *v16;
      sub_1AE9264B4();
      v30 = 0;
    }
    v34 = (uint64_t)v60;
    v35 = v66;
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v31, v30, 1, v66);
    v36 = *v63;
    sub_1AE578C7C(v31, v34, &qword_1EED9E398);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v34, 1, v35) == 1)
    {
      sub_1AE52FBE8((uint64_t)v67, &qword_1EED9E3A0);
      return v53;
    }
    v37 = v58;
    sub_1AE578C7C(v34, v58, (uint64_t *)&unk_1ED30EC90);
    v36(v74, v37);
    v39 = v74[0];
    v38 = v74[1];
    sub_1AE52FBE8(v37, (uint64_t *)&unk_1ED30EC90);
    v40 = v39 == v69 && v38 == v68;
    if (v40
      || (sub_1AE926D60() & 1) != 0
      || (v39 == v55 ? (v41 = v38 == v54) : (v41 = 0), v41 || (sub_1AE926D60() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_1AE925278();
    sub_1AE578FEC((uint64_t)v74, (uint64_t)&v71, &qword_1EED9C208);
    if (!v73)
      break;
    sub_1AE501548((uint64_t *)&unk_1EED9E3B0);
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_28;
    swift_bridgeObjectRelease();
    v42 = v70;
    v43 = v53;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE51AB7C();
      v43 = v46;
    }
    v44 = *(_QWORD *)(v43 + 16);
    if (v44 >= *(_QWORD *)(v43 + 24) >> 1)
    {
      sub_1AE51AB7C();
      v43 = v47;
    }
    v45 = v42;
    *(_QWORD *)(v43 + 16) = v44 + 1;
    v53 = v43;
    *(float *)(v43 + 4 * v44 + 32) = v45;
    sub_1AE52FBE8((uint64_t)v74, &qword_1EED9C208);
LABEL_17:
    v16 = v67;
    v25 = v56;
  }
  sub_1AE52FBE8((uint64_t)&v71, &qword_1EED9C208);
LABEL_28:
  swift_bridgeObjectRelease();
  v71 = 0;
  v72 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  v49 = v71;
  v50 = v72;
  sub_1AE6215EC();
  swift_allocError();
  *v51 = v49;
  v51[1] = v50;
  swift_willThrow();
  sub_1AE52FBE8((uint64_t)v74, &qword_1EED9C208);
  sub_1AE52FBE8((uint64_t)v67, &qword_1EED9E3A0);
  return v53;
}

void sub_1AE6233A8(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1AE6233B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  sub_1AE524160(a1, (uint64_t)&v9);
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_2;
  sub_1AE524160(a1, (uint64_t)&v9);
  if ((swift_dynamicCast() & 1) != 0)
  {
    EntityIdentifier.init(_:)(v7, v8, (uint64_t)&v9);
    result = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
    v6 = v10;
    if (v10 == 1)
    {
      v4 = 0;
      goto LABEL_4;
    }
    goto LABEL_13;
  }
  sub_1AE524160(a1, (uint64_t)&v9);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1AE524160(a1, (uint64_t)&v9);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_1AE524160(a1, (uint64_t)&v9);
      if ((swift_dynamicCast() & 1) == 0)
      {
        result = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
        v4 = 0;
        v6 = 1;
        goto LABEL_4;
      }
      v4 = v7;
      if ((v7 & 0x8000000000000000) == 0)
        goto LABEL_3;
      result = sub_1AE926AA8();
      __break(1u);
LABEL_13:
      v6 = 0;
      v4 = v9;
      goto LABEL_4;
    }
  }
LABEL_2:
  v4 = v7;
LABEL_3:
  result = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
  v6 = 0;
LABEL_4:
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v6;
  return result;
}

uint64_t sub_1AE623580(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  unint64_t v64;
  char v65;
  char v66;
  unint64_t v67;
  char v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  __int128 v74;
  _OWORD *v75;
  uint64_t v76;
  unint64_t v77;
  __int128 v78;
  unint64_t v79;
  char *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  char v88;
  __int128 v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;

  v7 = v6;
  v85 = a2;
  v86 = a6;
  v81 = a5;
  v84 = a1;
  v10 = sub_1AE924FCC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a4 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    *(_QWORD *)&v78 = a3;
    v79 = v6;
    v80 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    v82 = v11;
    v83 = v10;
    *(_QWORD *)&v91 = MEMORY[0x1E0DEE9D8];
    sub_1AE52154C();
    v15 = v91;
    v16 = (uint64_t *)(a4 + 32);
    do
    {
      v17 = *v16++;
      *(_QWORD *)&v89 = v17;
      v18 = sub_1AE926D18();
      v20 = v19;
      *(_QWORD *)&v91 = v15;
      v21 = *(_QWORD *)(v15 + 16);
      if (v21 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_1AE52154C();
        v15 = v91;
      }
      *(_QWORD *)(v15 + 16) = v21 + 1;
      v22 = v15 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v18;
      *(_QWORD *)(v22 + 40) = v20;
      --v14;
    }
    while (v14);
    v11 = v82;
    v10 = v83;
    v13 = v80;
    v7 = v79;
  }
  sub_1AE92526C();
  *(_QWORD *)&v91 = v15;
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE626410(qword_1EED9E3C0);
  sub_1AE924FD8();
  v93 = 0;
  v91 = 0u;
  v92 = 0u;
  v23 = sub_1AE925254();
  if (v7)
  {
    sub_1AE52FBE8((uint64_t)&v91, &qword_1EED94840);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v25 = v23;
  sub_1AE52FBE8((uint64_t)&v91, &qword_1EED94840);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v76 = 0;
  if (v25 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    v27 = sub_1AE926AD8();
    swift_bridgeObjectRelease();
    if (v27)
      goto LABEL_11;
    return swift_bridgeObjectRelease();
  }
  v27 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v27)
    return swift_bridgeObjectRelease();
LABEL_11:
  v28 = v81[4];
  v29 = v81[5];
  v84 = v25 & 0xC000000000000001;
  v85 = v28;
  v30 = 4;
  *(_QWORD *)&v26 = 136315394;
  v78 = v26;
  v77 = MEMORY[0x1E0DEE9B8] + 8;
  v83 = v29;
  v80 = (char *)v27;
  v79 = v25;
  while (1)
  {
    if (v84)
    {
      v31 = MEMORY[0x1AF453B80](v30 - 4, v25);
    }
    else
    {
      v31 = *(_QWORD *)(v25 + 8 * v30);
      swift_retain();
    }
    v32 = v30 - 3;
    if (__OFADD__(v30 - 4, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    sub_1AE925278();
    if (!v90)
    {
      swift_bridgeObjectRelease();
      sub_1AE52FBE8((uint64_t)&v89, &qword_1EED9C208);
      *(_QWORD *)&v91 = 0;
      *((_QWORD *)&v91 + 1) = 0xE000000000000000;
      sub_1AE92691C();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v91 = 0xD000000000000018;
      *((_QWORD *)&v91 + 1) = 0x80000001AE981140;
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      v74 = v91;
      sub_1AE6215EC();
      swift_allocError();
      *v75 = v74;
      swift_willThrow();
      return swift_release();
    }
    sub_1AE50AF58(&v89, (uint64_t)&v91);
    v33 = *((_QWORD *)&v92 + 1);
    v34 = sub_1AE4F9858(&v91, *((uint64_t *)&v92 + 1));
    v90 = v33;
    v35 = sub_1AE52F6A8((uint64_t *)&v89);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v35, v34, v33);
    sub_1AE6233B8((uint64_t)&v89, (uint64_t)&v87);
    if (v88 == 1)
    {
      v82 = v31;
      if (qword_1ED319C70 != -1)
        swift_once();
      v36 = sub_1AE925B6C();
      sub_1AE4FB608(v36, (uint64_t)qword_1ED31AD58);
      v37 = *v81;
      v38 = v81[1];
      sub_1AE57C238((uint64_t)&v91, (uint64_t)&v89);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_unknownObjectRetain_n();
      v39 = sub_1AE925B54();
      v40 = sub_1AE9265D4();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = swift_slowAlloc();
        v42 = swift_slowAlloc();
        v94 = v42;
        *(_DWORD *)v41 = v78;
        swift_bridgeObjectRetain();
        sub_1AE520ED4(v37, v38, (uint64_t)&v94, v43, v44, v45, v46, v47, v76, v77, v78, *((uint64_t *)&v78 + 1), v79, (uint64_t)v80, (uint64_t)v81, v82, v83, v84, v85,
          (uint64_t)v86);
        *(_QWORD *)(v41 + 4) = v48;
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v41 + 12) = 2080;
        sub_1AE57C238((uint64_t)&v89, (uint64_t)&v87);
        sub_1AE501548((uint64_t *)&unk_1EED9E3B0);
        v49 = sub_1AE925E90();
        sub_1AE520ED4(v49, v50, (uint64_t)&v94, v51, v52, v53, v54, v55, v76, v77, v78, *((uint64_t *)&v78 + 1), v79, (uint64_t)v80, (uint64_t)v81, v82, v83, v84, v85,
          (uint64_t)v86);
        *(_QWORD *)(v41 + 14) = v56;
        swift_bridgeObjectRelease();
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v89);
        _os_log_impl(&dword_1AE4F2000, v39, v40, "No value found in %s: %s", (uint8_t *)v41, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1AF454C78](v42, -1, -1);
        v57 = v41;
        v27 = (uint64_t)v80;
        MEMORY[0x1AF454C78](v57, -1, -1);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_release();
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v89);
      }

      v25 = v79;
      goto LABEL_33;
    }
    v82 = v30 - 3;
    v58 = v25;
    v25 = v31;
    v59 = v86;
    v60 = v87;
    swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v89 = *v59;
    v61 = v89;
    *v59 = 0x8000000000000000;
    v62 = sub_1AE536D68();
    if (__OFADD__(*(_QWORD *)(v61 + 16), (v63 & 1) == 0))
      goto LABEL_37;
    v64 = v62;
    v65 = v63;
    sub_1AE501548(&qword_1EED9E3D0);
    v66 = sub_1AE926A54();
    v27 = (uint64_t)v80;
    if ((v66 & 1) != 0)
      break;
LABEL_26:
    v69 = (_QWORD *)v89;
    if ((v65 & 1) != 0)
    {
      v70 = *(_QWORD *)(v89 + 56);
      swift_release();
      *(_QWORD *)(v70 + 8 * v64) = v25;
    }
    else
    {
      *(_QWORD *)(v89 + 8 * (v64 >> 6) + 64) |= 1 << v64;
      *(_QWORD *)(v69[6] + 8 * v64) = v60;
      *(_QWORD *)(v69[7] + 8 * v64) = v25;
      v71 = v69[2];
      v72 = __OFADD__(v71, 1);
      v73 = v71 + 1;
      if (v72)
        goto LABEL_38;
      v69[2] = v73;
    }
    *v86 = v69;
    swift_bridgeObjectRelease();
    v25 = v58;
    v32 = v82;
LABEL_33:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v91);
    ++v30;
    if (v32 == v27)
      return swift_bridgeObjectRelease();
  }
  v67 = sub_1AE536D68();
  if ((v65 & 1) == (v68 & 1))
  {
    v64 = v67;
    goto LABEL_26;
  }
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE623D00()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE50872C();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE623D88(uint64_t a1, uint64_t a2)
{
  return sub_1AE625E14(a1, a2);
}

uint64_t sub_1AE623D94(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE4F6AA4();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1AE501548((uint64_t *)&unk_1EED9A410);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE623E24()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE6264E0();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE623EB4(uint64_t a1, uint64_t a2)
{
  return sub_1AE625AF0(a1, a2);
}

uint64_t sub_1AE623EC0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE505538();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE623F54()
{
  return sub_1AE62409C();
}

void *sub_1AE623F60(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE4F93AC();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)sub_1AE50AB48();
      return sub_1AE501C10(v7, v8, v9);
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = (void *)sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE623FE0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE6264F0();
    if (v4 + 104 * v3 <= v2 || v2 + 104 * v3 <= v4)
    {
      sub_1AE501548(&qword_1EED994F0);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624084()
{
  return sub_1AE624CD8();
}

uint64_t sub_1AE624090()
{
  return sub_1AE62409C();
}

uint64_t sub_1AE62409C()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_1AE4FC884();
  if (v3 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    if (v2 + (v1 << 6) <= v0 || v0 + (v1 << 6) <= v2)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624128()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE505538();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE6241BC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE626464();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1AE501548(&qword_1EED9E360);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE62424C(uint64_t a1, uint64_t a2)
{
  return sub_1AE625CD0(a1, a2);
}

uint64_t sub_1AE624258()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE505538();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE6242EC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE505538();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624380()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE50872C();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624408(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE626494();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1AE501548(&qword_1EED9AD18);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624498()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE509F40();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624528()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE505538();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

void *sub_1AE6245BC()
{
  uint64_t v0;
  const void *v1;
  size_t v2;
  void *v3;
  void *v4;
  BOOL v5;
  BOOL v6;
  void *result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE626510();
    if (!v6 && v5)
    {
      v5 = v4 >= v3;
      v6 = v4 == v3;
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
    if (v6 || !v5)
      return sub_1AE501C10(v3, v1, v2);
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = (void *)sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE62463C(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

void *sub_1AE624648(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE6264C0();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)sub_1AE50AB48();
      return sub_1AE501C10(v7, v8, v9);
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = (void *)sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE6246C8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE505538();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624760(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE5094EC();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1AE501548(&qword_1EED9E258);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624800()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE626480();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE62488C(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE624898()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE505538();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE62492C(uint64_t a1, uint64_t a2)
{
  return sub_1AE6250BC(a1, a2);
}

uint64_t sub_1AE624938(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE508B50();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1AE501548(&qword_1EED9AC90);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE6249C8(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE6249D8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE505538();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

void *sub_1AE624A6C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE50A454();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)sub_1AE50AB48();
      return sub_1AE501C10(v7, v8, v9);
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = (void *)sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624AEC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE6264E0();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624B7C(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE624B8C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE5094EC();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1AE501548(&qword_1EED9E3D8);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624C2C(uint64_t a1, uint64_t a2)
{
  return sub_1AE6250BC(a1, a2);
}

uint64_t sub_1AE624C38()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE505538();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624CCC()
{
  return sub_1AE624CD8();
}

uint64_t sub_1AE624CD8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE509F40();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624D60()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE626480();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624DE8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE626480();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624E70()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE6264E0();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE624F00()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE505538();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

void *sub_1AE624F94(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE626448();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)sub_1AE50AB48();
      return sub_1AE501C10(v7, v8, v9);
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = (void *)sub_1AE4FCDC4();
  __break(1u);
  return result;
}

void *sub_1AE625014(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    v3 = a1 + 32 * a2;
    if (a3 + 32 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      v6 = (void *)sub_1AE50AB48();
      return sub_1AE501C10(v6, v7, v8);
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = (void *)sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE6250A4(uint64_t a1, uint64_t a2)
{
  return sub_1AE6250BC(a1, a2);
}

uint64_t sub_1AE6250B0(uint64_t a1, uint64_t a2)
{
  return sub_1AE6250BC(a1, a2);
}

uint64_t sub_1AE6250BC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void (*v3)(_QWORD);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE507E48();
    if (!v6 & v5)
      v7 = v4 > v2;
    else
      v7 = 0;
    if (!v7)
    {
      v3(0);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE625148(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE4F6AA4();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1AE501548(&qword_1EED946D8);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE6251D8(uint64_t a1, uint64_t a2)
{
  return sub_1AE6251F0(a1, a2);
}

uint64_t sub_1AE6251E4(uint64_t a1, uint64_t a2)
{
  return sub_1AE6251F0(a1, a2);
}

uint64_t sub_1AE6251F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE626494();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      sub_1AE509998(v2, v3, v4, v5);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE625278()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_1AE4FC884();
  if (v3 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    if (v2 + 8 * v1 <= v0 || v0 + 8 * v1 <= v2)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE62530C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE509F40();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE62539C()
{
  return sub_1AE6259C8();
}

uint64_t sub_1AE6253A8(uint64_t a1, uint64_t a2)
{
  return sub_1AE625E14(a1, a2);
}

uint64_t sub_1AE6253B4(uint64_t a1, uint64_t a2)
{
  return sub_1AE625E14(a1, a2);
}

uint64_t sub_1AE6253C0(uint64_t a1, uint64_t a2)
{
  return sub_1AE625D64(a1, a2);
}

uint64_t sub_1AE6253CC(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE6253D8(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE6253E4(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE6253F0(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE6253FC(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE625408(uint64_t a1, uint64_t a2)
{
  return sub_1AE625D64(a1, a2);
}

uint64_t sub_1AE625414(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE625420(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE62542C(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE625438(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE625444(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE625450(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE62545C(uint64_t a1, uint64_t a2)
{
  return sub_1AE625D64(a1, a2);
}

uint64_t sub_1AE625468(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE625474(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE625480(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE62548C(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE625498(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE6254A4(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE6254B0(uint64_t a1, uint64_t a2)
{
  return sub_1AE625D64(a1, a2);
}

uint64_t sub_1AE6254BC(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE6254C8(uint64_t a1, uint64_t a2)
{
  return sub_1AE625D64(a1, a2);
}

uint64_t sub_1AE6254D4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE50872C();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE62555C(uint64_t a1, uint64_t a2)
{
  return sub_1AE625CD0(a1, a2);
}

uint64_t sub_1AE625568(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE5094EC();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1AE501548((uint64_t *)&unk_1EED9E290);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE625608()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE505538();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE62569C(uint64_t a1, uint64_t a2)
{
  return sub_1AE625AF0(a1, a2);
}

uint64_t sub_1AE6256A8()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_1AE4FC884();
  if (v3 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    if (v2 + 96 * v1 <= v0 || v0 + 96 * v1 <= v2)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE625740(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE62574C(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE625758()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_1AE4FC884();
  if (v3 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    if (v2 + 192 * v1 <= v0 || v0 + 192 * v1 <= v2)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE6257F0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE505538();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE625884(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE625890()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE509F40();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE625920()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE509F40();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE6259B0(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE6259BC()
{
  return sub_1AE6259C8();
}

uint64_t sub_1AE6259C8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  sub_1AE4FC884();
  if (v0 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE626480();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return sub_1AE4FDCE0();
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE625A48(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE4F6AA4();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1AE501548(&qword_1EED9E278);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE625AD8(uint64_t a1, uint64_t a2)
{
  return sub_1AE625E14(a1, a2);
}

uint64_t sub_1AE625AE4(uint64_t a1, uint64_t a2)
{
  return sub_1AE625AF0(a1, a2);
}

uint64_t sub_1AE625AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE508B50();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      sub_1AE509998(v2, v3, v4, v5);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE625B78(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE5094EC();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      sub_1AE501548((uint64_t *)&unk_1EED9E268);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE625C18(uint64_t a1, uint64_t a2)
{
  return sub_1AE625E14(a1, a2);
}

uint64_t sub_1AE625C24(uint64_t a1, uint64_t a2)
{
  return sub_1AE625C30(a1, a2);
}

uint64_t sub_1AE625C30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE507E48();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      sub_1AE509998(v2, v3, v4, v5);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE625CB8(uint64_t a1, uint64_t a2)
{
  return sub_1AE625CD0(a1, a2);
}

uint64_t sub_1AE625CC4(uint64_t a1, uint64_t a2)
{
  return sub_1AE625CD0(a1, a2);
}

uint64_t sub_1AE625CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE626464();
    if (!v8 && v7)
    {
      v7 = v6 >= v4;
      v8 = v6 == v4;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
    {
      sub_1AE509998(v2, v3, v4, v5);
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE625D58(uint64_t a1, uint64_t a2)
{
  return sub_1AE625D64(a1, a2);
}

uint64_t sub_1AE625D64(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char v8;
  char v9;
  BOOL v10;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE6264F0();
    sub_1AE509998(v3, v4, v5, v6);
    sub_1AE507A00();
    if (!v9 & v8)
      v10 = v7 > v2;
    else
      v10 = 0;
    if (!v10)
    {
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE625DF0(uint64_t a1, uint64_t a2)
{
  return sub_1AE625E14(a1, a2);
}

uint64_t sub_1AE625DFC(uint64_t a1, uint64_t a2)
{
  return sub_1AE625CD0(a1, a2);
}

uint64_t sub_1AE625E08(uint64_t a1, uint64_t a2)
{
  return sub_1AE625E14(a1, a2);
}

uint64_t sub_1AE625E14(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  void (*v3)(_QWORD);
  unint64_t v4;
  char v5;
  char v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE503294();
  }
  else
  {
    sub_1AE6264F0();
    v3(0);
    sub_1AE507A00();
    if (!v6 & v5)
      v7 = v4 > v2;
    else
      v7 = 0;
    if (!v7)
    {
      sub_1AE4FBB84();
      return sub_1AE4FD19C();
    }
    sub_1AE4FCDB0();
    sub_1AE4FE890();
  }
  result = sub_1AE4FCDC4();
  __break(1u);
  return result;
}

uint64_t sub_1AE625EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t i;
  BOOL v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1AE501548(&qword_1EED9E390);
  result = sub_1AE926AF0();
  v6 = (_QWORD *)result;
  v7 = 0;
  v28 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v9 = a1 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v25 = v9;
  v26 = (unint64_t)(v11 + 63) >> 6;
  v27 = result + 64;
  if ((v12 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v14 | (v7 << 6); ; i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v28 + 48) + 8 * i);
    v20 = swift_retain();
    v21 = sub_1AE622D3C(v20);
    result = swift_release();
    if (v2)
    {
      swift_release();
LABEL_25:
      sub_1AE626390(a2);
      return (uint64_t)v6;
    }
    *(_QWORD *)(v27 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_QWORD *)(v6[6] + 8 * i) = v19;
    *(_QWORD *)(v6[7] + 8 * i) = v21;
    v22 = v6[2];
    v16 = __OFADD__(v22, 1);
    v23 = v22 + 1;
    if (v16)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v6[2] = v23;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v16 = __OFADD__(v7++, 1);
    if (v16)
      goto LABEL_27;
    if (v7 >= v26)
      goto LABEL_25;
    v17 = *(_QWORD *)(v25 + 8 * v7);
    if (!v17)
    {
      v18 = v7 + 1;
      if (v7 + 1 >= v26)
        goto LABEL_25;
      v17 = *(_QWORD *)(v25 + 8 * v18);
      if (v17)
        goto LABEL_12;
      v18 = v7 + 2;
      if (v7 + 2 >= v26)
        goto LABEL_25;
      v17 = *(_QWORD *)(v25 + 8 * v18);
      if (v17)
      {
LABEL_12:
        v7 = v18;
        goto LABEL_13;
      }
      v24 = v7 + 3;
      if (v7 + 3 >= v26)
        goto LABEL_25;
      v17 = *(_QWORD *)(v25 + 8 * v24);
      v7 += 3;
      if (!v17)
        break;
    }
LABEL_13:
    v13 = (v17 - 1) & v17;
  }
  while (1)
  {
    v7 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v7 >= v26)
      goto LABEL_25;
    v17 = *(_QWORD *)(v25 + 8 * v7);
    ++v24;
    if (v17)
      goto LABEL_13;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1AE6260D4(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for EntitySimilarityEngine()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntitySimilarityEngine(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for EntitySimilarityEngine(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v4;
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EntitySimilarityEngine(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EntitySimilarityEngine(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntitySimilarityEngine(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EntitySimilarityEngine()
{
  return &type metadata for EntitySimilarityEngine;
}

uint64_t sub_1AE626390(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE6263E0(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1AE6263F0(unint64_t a1)
{
  uint64_t v1;

  return sub_1AE623580(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(uint64_t **)(v1 + 40), *(_QWORD **)(v1 + 48));
}

void sub_1AE626410(_QWORD *a1)
{
  if (!*a1)
  {
    sub_1AE523CF0(&qword_1ED319DE0);
    sub_1AE5068A4();
  }
  sub_1AE4F6664();
}

unint64_t sub_1AE6264B8()
{
  return sub_1AE536D68();
}

void sub_1AE6264D8(uint64_t a1)
{
  uint64_t v1;

  sub_1AE5160F0(a1, v1);
}

unint64_t sub_1AE626500()
{
  return sub_1AE536D68();
}

uint64_t sub_1AE626508(uint64_t result)
{
  return sub_1AE6263E0(result);
}

uint64_t sub_1AE626524(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = v1;
  type metadata accessor for EntitySimilarityRequestManager();
  swift_allocObject();
  v5 = sub_1AE627514(a1, 100, 0);
  if (v2)
    swift_deallocPartialClassInstance();
  else
    *(_QWORD *)(v3 + 16) = v5;
  return v3;
}

uint64_t sub_1AE6265B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[9] = a1;
  v2[10] = v1;
  v3 = sub_1AE508FBC();
  v2[11] = v3;
  v2[12] = *(_QWORD *)(v3 - 8);
  v2[13] = sub_1AE4F67C0();
  v2[14] = swift_task_alloc();
  v4 = sub_1AE925B6C();
  v2[15] = v4;
  v2[16] = *(_QWORD *)(v4 - 8);
  v2[17] = sub_1AE4FC554();
  v5 = sub_1AE5035E4();
  v2[18] = v5;
  v2[19] = *(_QWORD *)(v5 - 8);
  v2[20] = sub_1AE4FC554();
  v2[21] = sub_1AE4FBB00();
  v2[22] = sub_1AE4FC554();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

uint64_t sub_1AE626648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _WORD *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  __int128 v15;
  _QWORD *v16;
  uint64_t v18;
  _BYTE v19[8];
  __int128 v20;

  if (qword_1ED31C728 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = sub_1AE4FB608(v1, (uint64_t)qword_1ED31C710);
  sub_1AE4F93C4(v2);
  sub_1AE507E2C();
  sub_1AE925B00();
  sub_1AE925AC4();
  v3 = (void *)sub_1AE925B00();
  sub_1AE926670();
  if ((sub_1AE5086C4() & 1) != 0)
  {
    v4 = (_WORD *)sub_1AE4F69B0();
    v5 = sub_1AE509EDC(v4);
    sub_1AE6147A8(&dword_1AE4F2000, v6, (os_signpost_type_t)v1, v5, "EntitySimilarity.InProcessService.computeSimilarity", "");
    sub_1AE4F9064();
  }
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 112);
  v11 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 96);
  v18 = *(_QWORD *)(v0 + 160);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v9, v11);
  sub_1AE925B3C();
  sub_1AE4FCE84();
  sub_1AE4FC844();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  v12 = sub_1AE4FBB98((uint64_t)"EntitySimilarity.InProcessService.computeSimilarity");
  v14 = v13(v12, v18, v7);
  sub_1AE627C5C(v14, (uint64_t)v19);
  v15 = v20;
  *(_BYTE *)(v0 + 48) = v19[0];
  *(_OWORD *)(v0 + 56) = v15;
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v16;
  *v16 = v0;
  v16[1] = sub_1AE626868;
  return EntitySimilarityRequestManager.computeSimilarity(request:)(v0 + 16, v0 + 48);
}

uint64_t sub_1AE626868()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

uint64_t sub_1AE6268C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;

  v1 = *(unsigned __int8 *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *(_QWORD *)(v0 + 32));
  v4 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v2);
  v5 = *(_QWORD *)(v0 + 176);
  sub_1AE621318();
  v6 = sub_1AE6212B8(v3, v4, v1);
  v7 = sub_1AE6272B4(objc_allocWithZone((Class)GDEntitySimilarityResult), sel_initWithRequest_similarityScore_);

  sub_1AE62702C(v5);
  sub_1AE50B9EC(v5);
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1AE4F90A0();
  return (*(uint64_t (**)(id))(v0 + 8))(v7);
}

uint64_t sub_1AE6269D4()
{
  uint64_t v0;

  sub_1AE62702C(*(_QWORD *)(v0 + 176));
  sub_1AE505D74();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  return sub_1AE500C20(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE626A30(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_1AE508FBC();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = sub_1AE4F67C0();
  v2[7] = swift_task_alloc();
  v4 = sub_1AE925B6C();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = sub_1AE4FC554();
  v5 = sub_1AE5035E4();
  v2[11] = v5;
  v2[12] = *(_QWORD *)(v5 - 8);
  v2[13] = sub_1AE4FC554();
  v2[14] = sub_1AE4FBB00();
  v2[15] = sub_1AE4FC554();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

void sub_1AE626AC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _WORD *v4;
  os_signpost_id_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  char v20;
  __int128 v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30[8];
  __int128 v31;

  if (qword_1ED31C728 != -1)
    swift_once();
  v1 = v0[8];
  v2 = sub_1AE4FB608(v1, (uint64_t)qword_1ED31C710);
  sub_1AE4F93C4(v2);
  sub_1AE507E2C();
  sub_1AE925B00();
  sub_1AE925AC4();
  v3 = (void *)sub_1AE925B00();
  sub_1AE926670();
  if ((sub_1AE5086C4() & 1) != 0)
  {
    v4 = (_WORD *)sub_1AE4F69B0();
    v5 = sub_1AE509EDC(v4);
    sub_1AE6147A8(&dword_1AE4F2000, v6, (os_signpost_type_t)v1, v5, "EntitySimilarity.InProcessService.batchComputeSimilarity", "");
    sub_1AE4F9064();
  }
  v27 = v0[13];
  v25 = v0[11];
  v7 = v0[6];
  v8 = v0[7];
  v10 = v0[4];
  v9 = v0[5];
  v11 = v0[2];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v10);
  sub_1AE925B3C();
  sub_1AE4FCE84();
  sub_1AE4FC844();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  v12 = sub_1AE4FBB98((uint64_t)"EntitySimilarity.InProcessService.batchComputeSimilarity");
  v13(v12, v27, v25);
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_1AE926AD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
    goto LABEL_16;
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1AE521C90();
  if ((v14 & 0x8000000000000000) == 0)
  {
    v16 = 0;
    v15 = v29;
    v17 = v11 & 0xC000000000000001;
    v28 = v0[2] + 32;
    do
    {
      if (v17)
        v18 = (id)MEMORY[0x1AF453B80](v16, v0[2]);
      else
        v18 = *(id *)(v28 + 8 * v16);
      v19 = v18;
      sub_1AE627C5C((uint64_t)v18, (uint64_t)v30);

      v20 = v30[0];
      v21 = v31;
      v22 = *(_QWORD *)(v29 + 16);
      if (v22 >= *(_QWORD *)(v29 + 24) >> 1)
      {
        v26 = v31;
        sub_1AE521C90();
        v21 = v26;
      }
      ++v16;
      *(_QWORD *)(v29 + 16) = v22 + 1;
      v23 = v29 + 24 * v22;
      *(_BYTE *)(v23 + 32) = v20;
      *(_OWORD *)(v23 + 40) = v21;
    }
    while (v14 != v16);
LABEL_16:
    v0[16] = v15;
    v24 = (_QWORD *)swift_task_alloc();
    v0[17] = v24;
    *v24 = v0;
    v24[1] = sub_1AE626DE8;
    EntitySimilarityRequestManager.batchComputeSimilarity(requestBatch:)(v15);
    return;
  }
  __break(1u);
}

uint64_t sub_1AE626DE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 144) = a1;
  *(_QWORD *)(v3 + 152) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  sub_1AE4F9070();
  return swift_task_switch();
}

uint64_t sub_1AE626E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1AE9269DC();
    sub_1AE621318();
    v3 = (_QWORD *)(v1 + 56);
    do
    {
      v4 = sub_1AE6212B8(objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *(v3 - 1)), objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *v3), *((unsigned __int8 *)v3 - 16));
      sub_1AE6272B4(objc_allocWithZone((Class)GDEntitySimilarityResult), sel_initWithRequest_similarityScore_);

      sub_1AE9269B8();
      sub_1AE9269E8();
      sub_1AE9269F4();
      sub_1AE9269C4();
      v3 += 4;
      --v2;
    }
    while (v2);
    v0 = v7;
    v5 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x1E0DEE9D8];
  }
  sub_1AE501C18();
  sub_1AE505D74();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_1AE626FDC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1AE501C18();
  sub_1AE505D74();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  return sub_1AE500C20(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE62702C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  NSObject *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  os_signpost_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  char v30;

  v2 = sub_1AE925B18();
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F666C();
  v26 = v4 - v3;
  v5 = sub_1AE508FBC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  v9 = v8 - v7;
  v10 = sub_1AE5035E4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F666C();
  v14 = v13 - v12;
  v15 = sub_1AE4FBB00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, a1 + *(int *)(v15 + 24), v10);
  v29 = *(const char **)a1;
  v16 = *(_BYTE *)(a1 + 16);
  swift_retain();
  v17 = sub_1AE925B00();
  sub_1AE925B24();
  v25 = sub_1AE926664();
  result = sub_1AE926700();
  if ((result & 1) == 0)
  {
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
  }
  if ((v16 & 1) == 0)
  {
    if (v29)
    {
      v20 = v27;
      v19 = v28;
      v21 = v26;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v29 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v29 >> 11 != 27)
  {
    v20 = v27;
    v19 = v28;
    v21 = v26;
    if (v29 >> 16 <= 0x10)
    {
      v29 = &v30;
LABEL_9:
      swift_retain();
      sub_1AE925B48();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v20 + 88))(v21, v19) == *MEMORY[0x1E0DF2190])
      {
        v22 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v19);
        v22 = "";
      }
      v23 = (uint8_t *)sub_1AE4F69B0();
      *(_WORD *)v23 = 0;
      v24 = sub_1AE925AD0();
      _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v17, v25, v24, v29, v22, v23, 2u);
      sub_1AE4F9064();
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for EntitySimilarityInProcessService()
{
  return objc_opt_self();
}

id sub_1AE6272B4(id a1, SEL a2)
{
  uint64_t v2;
  double v3;

  return objc_msgSend(a1, a2, v2, v3);
}

uint64_t EntitySimilarityRequestManager.computeSimilarity(request:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_BYTE *)(v3 + 48) = *(_BYTE *)a2;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(a2 + 8);
  return sub_1AE4FECB0();
}

uint64_t sub_1AE6272E0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v3[8];
  __int128 v4;

  v1 = *(_QWORD *)(v0 + 16);
  v3[0] = *(_BYTE *)(v0 + 48);
  v4 = *(_OWORD *)(v0 + 32);
  sub_1AE6275B0(v3, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t EntitySimilarityRequestManager.batchComputeSimilarity(requestBatch:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE627350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  _OWORD *v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    sub_1AE500C34();
    v4 = v21;
    v5 = (char *)(v1 + 32);
    v6 = *(_QWORD *)(v21 + 16);
    v7 = v2;
    do
    {
      v9 = *v5;
      v5 += 24;
      v8 = v9;
      v21 = v4;
      v10 = v6 + 1;
      if (v6 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_1AE503620();
        v4 = v21;
      }
      *(_QWORD *)(v4 + 16) = v10;
      *(_BYTE *)(v4 + v6++ + 32) = v8;
      --v7;
    }
    while (v7);
  }
  else
  {
    v10 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  }
  swift_bridgeObjectRelease();
  if (v10 == 1)
  {
    if (v2)
    {
      v11 = *(_QWORD *)(v0 + 16);
      sub_1AE500C34();
      v3 = v21;
      v12 = (char *)(v11 + 32);
      v13 = *(_QWORD *)(v21 + 16);
      do
      {
        v15 = *v12;
        v12 += 24;
        v14 = v15;
        v21 = v3;
        if (v13 >= *(_QWORD *)(v3 + 24) >> 1)
        {
          sub_1AE503620();
          v3 = v21;
        }
        *(_QWORD *)(v3 + 16) = v13 + 1;
        *(_BYTE *)(v3 + v13++ + 32) = v14;
        --v2;
      }
      while (v2);
      goto LABEL_16;
    }
    if (*(_QWORD *)(v3 + 16))
    {
LABEL_16:
      v16 = *(_QWORD *)(v0 + 16);
      v17 = *(_BYTE *)(v3 + 32);
      swift_bridgeObjectRelease();
      LOBYTE(v21) = v17;
      v18 = sub_1AE627840(v16, &v21);
      return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v18);
    }
    swift_bridgeObjectRelease();
  }
  sub_1AE6215EC();
  swift_allocError();
  *v20 = xmmword_1AE934260;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AE627514(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[4];
  uint64_t v13;

  sub_1AE599678((uint64_t)v12);

  if (v4)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = v13;
    v9 = v12[1];
    *(_OWORD *)(v3 + 16) = v12[0];
    *(_OWORD *)(v3 + 32) = v9;
    v10 = v12[3];
    *(_OWORD *)(v3 + 48) = v12[2];
    *(_OWORD *)(v3 + 64) = v10;
    *(_QWORD *)(v3 + 80) = v8;
    *(_QWORD *)(v3 + 88) = a2;
    *(_BYTE *)(v3 + 96) = a3 & 1;
  }
  return v3;
}

void sub_1AE6275B0(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  float v18;
  float v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[9];

  v5 = *a1;
  v7 = *((_QWORD *)a1 + 1);
  v6 = *((_QWORD *)a1 + 2);
  if (*a1)
  {
    if (v5 == 1)
    {
      *(_QWORD *)a2 = 0;
    }
    else
    {
      if (qword_1ED319C70 != -1)
        swift_once();
      v20 = sub_1AE925B6C();
      sub_1AE4FB608(v20, (uint64_t)qword_1ED31AD58);
      v21 = sub_1AE925B54();
      v22 = sub_1AE9265D4();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_1AE4F2000, v21, v22, "Unknown mode, returning 0 similarity.", v23, 2u);
        MEMORY[0x1AF454C78](v23, -1, -1);
      }

      *(_QWORD *)a2 = 0;
      LOBYTE(v5) = 2;
    }
    *(_BYTE *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v7;
    *(_QWORD *)(a2 + 24) = v6;
  }
  else
  {
    v8 = v2[2];
    if (v8)
    {
      v9 = *((_QWORD *)a1 + 1);
      v10 = v2[9];
      v11 = v2[10];
      v12 = *((_QWORD *)a1 + 2);
      v13 = v2[7];
      v14 = v2[8];
      v16 = v2[5];
      v15 = v2[6];
      v17 = v2[4];
      v28[1] = v2[3];
      v28[2] = v17;
      v28[3] = v16;
      v28[4] = v15;
      v28[5] = v13;
      v28[6] = v14;
      v27 = v12;
      v28[7] = v10;
      v28[8] = v11;
      v25 = v12;
      v26 = v9;
      v28[0] = v9;
      sub_1AE627B68(v8);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1AE6219B8(v28, &v27, 0);
      v19 = v18;
      sub_1AE627AE4(v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if (!v3)
      {
        *(double *)a2 = v19;
        *(_BYTE *)(a2 + 8) = 0;
        *(_QWORD *)(a2 + 16) = v26;
        *(_QWORD *)(a2 + 24) = v25;
      }
    }
    else
    {
      sub_1AE92691C();
      swift_bridgeObjectRelease();
      sub_1AE6215EC();
      swift_allocError();
      *v24 = 0xD00000000000003ALL;
      v24[1] = 0x80000001AE981290;
      swift_willThrow();
    }
  }
}

_QWORD *sub_1AE627840(uint64_t a1, _BYTE *a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  char v17;
  __int128 v18;
  unint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v23;
  __int128 v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (*a2)
  {
    if (*a2 == 1)
    {
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v13 = *(_QWORD *)(a1 + 16);
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v13)
      {
        v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        sub_1AE521C30();
        v4 = v25;
        v14 = v25[2];
        v15 = 32 * v14 + 32;
        v16 = (_OWORD *)(a1 + 40);
        do
        {
          v17 = *((_BYTE *)v16 - 8);
          v18 = *v16;
          v25 = v4;
          v19 = v14 + 1;
          if (v14 >= v4[3] >> 1)
          {
            v24 = v18;
            sub_1AE521C30();
            v18 = v24;
            v4 = v25;
          }
          v4[2] = v19;
          v20 = (char *)v4 + v15;
          *(_QWORD *)v20 = 0;
          v20[8] = v17;
          *((_OWORD *)v20 + 1) = v18;
          v15 += 32;
          v16 = (_OWORD *)((char *)v16 + 24);
          v14 = v19;
          --v13;
        }
        while (v13);
      }
    }
  }
  else
  {
    v5 = v2[2];
    if (v5)
    {
      v6 = v2[9];
      v7 = v2[10];
      v8 = v2[7];
      v9 = v2[8];
      v11 = v2[5];
      v10 = v2[6];
      v12 = v2[4];
      v25 = (_QWORD *)v2[3];
      v26 = v12;
      v27 = v11;
      v28 = v10;
      v29 = v8;
      v30 = v9;
      v33 = v8;
      v31 = v6;
      v32 = v7;
      v23 = v2[11];
      sub_1AE627B68(v5);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v4 = (_QWORD *)EntitySimilarityEngine.computeSimilarityBatch(batchRequests:batchSize:)(a1, v23);
      sub_1AE627AE4(v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v25 = 0;
      v26 = 0xE000000000000000;
      v4 = &v25;
      sub_1AE92691C();
      swift_bridgeObjectRelease();
      sub_1AE6215EC();
      swift_allocError();
      *v21 = 0xD00000000000003ALL;
      v21[1] = 0x80000001AE981290;
      swift_willThrow();
    }
  }
  return v4;
}

uint64_t EntitySimilarityRequestManager.deinit()
{
  uint64_t v0;

  sub_1AE500014();
  return v0;
}

uint64_t EntitySimilarityRequestManager.__deallocating_deinit()
{
  sub_1AE500014();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE627AE4(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for EntitySimilarityRequestManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for EntitySimilarityRequestManager()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AE627B68(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1AE627BC0(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  _BYTE v8[8];
  __int128 v9;

  objc_msgSend(v1, sel_similarityScore);
  v5 = v4;
  v6 = objc_msgSend(v1, sel_request);
  sub_1AE627C5C((uint64_t)v6, (uint64_t)v8);

  if (!v2)
  {
    v7 = v8[0];
    *(_QWORD *)a1 = v5;
    *(_BYTE *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = v9;
  }
}

uint64_t sub_1AE627C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;

  v3 = sub_1AE507584(a1, sel_entityId1);
  if (!v3
    || (v4 = v3,
        v5 = objc_msgSend(v3, sel_intValue),
        v4,
        (v7 = sub_1AE507584(v6, sel_entityId2)) == 0))
  {
LABEL_7:
    sub_1AE6215EC();
    swift_allocError();
    *v12 = 0;
    v12[1] = 0;
    return swift_willThrow();
  }
  v8 = v7;
  v9 = objc_msgSend(v7, sel_intValue);

  result = (uint64_t)sub_1AE507584(v10, sel_entitySimilarityMode);
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (result <= 0x7FFFFFFF)
  {
    if (result < 3)
    {
      *(_BYTE *)a2 = result;
      *(_QWORD *)(a2 + 8) = v5;
      *(_QWORD *)(a2 + 16) = v9;
      return result;
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t EntitySimilarityMode.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F4D7261656E696CLL;
  if (*v0 != 1)
    v1 = 0x6E776F6E6B6E75;
  if (*v0)
    return v1;
  else
    return 0xD00000000000001FLL;
}

IntelligencePlatform::EntitySimilarityMode_optional __swiftcall EntitySimilarityMode.init(rawValue:)(Swift::Int32 rawValue)
{
  char *v1;
  char v2;

  if (rawValue >= 3)
    v2 = 3;
  else
    v2 = rawValue;
  *v1 = v2;
  return (IntelligencePlatform::EntitySimilarityMode_optional)rawValue;
}

uint64_t EntitySimilarityMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1AE627DE8()
{
  unsigned __int8 *v0;

  return sub_1AE512AC4(*v0);
}

uint64_t sub_1AE627DF0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1AE5FB78C(a1, *v1);
}

uint64_t sub_1AE627DF8(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1AE54F6A0(a1, *v1);
}

IntelligencePlatform::EntitySimilarityMode_optional sub_1AE627E00(Swift::Int32 *a1)
{
  return EntitySimilarityMode.init(rawValue:)(*a1);
}

uint64_t sub_1AE627E08@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = EntitySimilarityMode.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1AE627E2C()
{
  sub_1AE629164();
  return sub_1AE9261A8();
}

uint64_t sub_1AE627E88()
{
  sub_1AE629164();
  return sub_1AE926160();
}

double EntitySimilarityResult.similarityScore.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void EntitySimilarityResult.similarityScore.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*EntitySimilarityResult.similarityScore.modify())(_QWORD)
{
  return nullsub_1;
}

__n128 EntitySimilarityResult.request.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  *(_BYTE *)a1 = v1->n128_u8[8];
  result = v1[1];
  *(__n128 *)(a1 + 8) = result;
  return result;
}

__n128 EntitySimilarityResult.request.setter(uint64_t a1)
{
  __n128 *v1;
  __n128 result;

  v1->n128_u8[8] = *(_BYTE *)a1;
  result = *(__n128 *)(a1 + 8);
  v1[1] = result;
  return result;
}

uint64_t (*EntitySimilarityResult.request.modify())(_QWORD)
{
  return nullsub_1;
}

BOOL static EntitySimilarityResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2)
    return 0;
  return *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8)
      && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)
      && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
}

BOOL static EntitySimilarityRequest.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && *((_QWORD *)a1 + 2) == *((_QWORD *)a2 + 2);
}

uint64_t EntitySimilarityResult.hash(into:)()
{
  sub_1AE926EF8();
  sub_1AE926EEC();
  sub_1AE4FC890();
  return sub_1AE926EF8();
}

uint64_t sub_1AE628000(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6972616C696D6973 && a2 == 0xEF65726F63537974;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE628110(char a1)
{
  if ((a1 & 1) != 0)
    return 0x74736575716572;
  else
    return 0x6972616C696D6973;
}

uint64_t sub_1AE628154()
{
  char *v0;

  return sub_1AE628110(*v0);
}

uint64_t sub_1AE62815C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE628000(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE628180()
{
  sub_1AE628A78();
  return sub_1AE926F94();
}

uint64_t sub_1AE6281A8()
{
  sub_1AE628A78();
  return sub_1AE926FA0();
}

void EntitySimilarityResult.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1AE501548(&qword_1EED9E420);
  sub_1AE508B20();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F683C();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE628A78();
  sub_1AE5099A0();
  sub_1AE926CA0();
  if (!v1)
  {
    sub_1AE628AB4();
    sub_1AE4FD9D4();
  }
  sub_1AE6291A0();
  sub_1AE4FCE0C();
}

uint64_t EntitySimilarityResult.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE926EF8();
  sub_1AE50AB54();
  sub_1AE505548();
  sub_1AE4FC890();
  return sub_1AE4F905C();
}

void EntitySimilarityResult.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  sub_1AE501548(&qword_1EED9E438);
  sub_1AE509818();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE628A78();
  sub_1AE501C30();
  if (!v2)
  {
    sub_1AE926BC8();
    v7 = v6;
    sub_1AE628AF0();
    sub_1AE5033C4();
    sub_1AE4F9250();
    *(_QWORD *)a2 = v7;
    *(_BYTE *)(a2 + 8) = 0;
    *(_OWORD *)(a2 + 16) = v8;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  sub_1AE4FCE0C();
}

void sub_1AE628454(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  EntitySimilarityResult.init(from:)(a1, a2);
}

void sub_1AE628468(_QWORD *a1)
{
  EntitySimilarityResult.encode(to:)(a1);
}

uint64_t sub_1AE628484()
{
  sub_1AE926EC8();
  sub_1AE926EF8();
  sub_1AE926EEC();
  sub_1AE926EF8();
  sub_1AE926EF8();
  return sub_1AE926F10();
}

void EntitySimilarityRequest.mode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *EntitySimilarityRequest.mode.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*EntitySimilarityRequest.mode.modify())(_QWORD)
{
  return nullsub_1;
}

void EntitySimilarityRequest.entityId1.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
}

_QWORD *EntitySimilarityRequest.entityId1.setter(_QWORD *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = *result;
  return result;
}

uint64_t (*EntitySimilarityRequest.entityId1.modify())(_QWORD)
{
  return nullsub_1;
}

void EntitySimilarityRequest.entityId2.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
}

_QWORD *EntitySimilarityRequest.entityId2.setter(_QWORD *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *result;
  return result;
}

uint64_t (*EntitySimilarityRequest.entityId2.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t EntitySimilarityRequest.hash(into:)()
{
  sub_1AE926EEC();
  sub_1AE926EF8();
  return sub_1AE4FC890();
}

uint64_t sub_1AE6285BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 1701080941 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6449797469746E65 && a2 == 0xE900000000000031;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6449797469746E65 && a2 == 0xE900000000000032)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AE6286F8(char a1)
{
  if (a1)
    return 0x6449797469746E65;
  else
    return 1701080941;
}

uint64_t sub_1AE628748()
{
  char *v0;

  return sub_1AE6286F8(*v0);
}

uint64_t sub_1AE628750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE6285BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE628774()
{
  sub_1AE628B2C();
  return sub_1AE926F94();
}

uint64_t sub_1AE62879C()
{
  sub_1AE628B2C();
  return sub_1AE926FA0();
}

void EntitySimilarityRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1AE501548(&qword_1EED9E448);
  sub_1AE508B20();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F683C();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE628B2C();
  sub_1AE5099A0();
  sub_1AE628B68();
  sub_1AE4FD9D4();
  if (!v1)
  {
    sub_1AE52A494();
    sub_1AE500C4C();
    sub_1AE500C4C();
  }
  sub_1AE6291A0();
  sub_1AE4F667C();
}

void EntitySimilarityRequest.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE50AB54();
  sub_1AE505548();
  sub_1AE4FC890();
  sub_1AE4F905C();
  sub_1AE4F685C();
}

void EntitySimilarityRequest.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  sub_1AE501548(&qword_1EED9E460);
  sub_1AE509818();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE628B2C();
  sub_1AE501C30();
  if (!v2)
  {
    sub_1AE628BE4();
    sub_1AE5033C4();
    sub_1AE52A458();
    sub_1AE4FECE0();
    sub_1AE4FECE0();
    sub_1AE4F9250();
    *(_BYTE *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v6;
    *(_QWORD *)(a2 + 16) = v6;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  sub_1AE4F667C();
}

void sub_1AE628A48(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  EntitySimilarityRequest.init(from:)(a1, a2);
}

void sub_1AE628A5C(_QWORD *a1)
{
  EntitySimilarityRequest.encode(to:)(a1);
}

unint64_t sub_1AE628A78()
{
  unint64_t result;

  result = qword_1EED9E428;
  if (!qword_1EED9E428)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946054, &type metadata for EntitySimilarityResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E428);
  }
  return result;
}

unint64_t sub_1AE628AB4()
{
  unint64_t result;

  result = qword_1EED9E430;
  if (!qword_1EED9E430)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntitySimilarityRequest, &type metadata for EntitySimilarityRequest);
    atomic_store(result, (unint64_t *)&qword_1EED9E430);
  }
  return result;
}

unint64_t sub_1AE628AF0()
{
  unint64_t result;

  result = qword_1EED9E440;
  if (!qword_1EED9E440)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntitySimilarityRequest, &type metadata for EntitySimilarityRequest);
    atomic_store(result, (unint64_t *)&qword_1EED9E440);
  }
  return result;
}

unint64_t sub_1AE628B2C()
{
  unint64_t result;

  result = qword_1EED9E450;
  if (!qword_1EED9E450)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946004, &type metadata for EntitySimilarityRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E450);
  }
  return result;
}

unint64_t sub_1AE628B68()
{
  unint64_t result;

  result = qword_1EED9E458;
  if (!qword_1EED9E458)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntitySimilarityMode, &type metadata for EntitySimilarityMode);
    atomic_store(result, (unint64_t *)&qword_1EED9E458);
  }
  return result;
}

void sub_1AE628BA4()
{
  sub_1AE926EC8();
  sub_1AE50AB54();
  sub_1AE505548();
  sub_1AE4FC890();
  sub_1AE4F905C();
  sub_1AE4F685C();
}

unint64_t sub_1AE628BE4()
{
  unint64_t result;

  result = qword_1EED9E468;
  if (!qword_1EED9E468)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntitySimilarityMode, &type metadata for EntitySimilarityMode);
    atomic_store(result, (unint64_t *)&qword_1EED9E468);
  }
  return result;
}

uint64_t EntitySimilarityMode.gdMode.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

id GDEntityIdentifier.swiftUntypedId.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  id result;

  result = objc_msgSend(v1, sel_intValue);
  *a1 = result;
  return result;
}

unint64_t sub_1AE628C5C()
{
  unint64_t result;

  result = qword_1EED9E470;
  if (!qword_1EED9E470)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntitySimilarityMode, &type metadata for EntitySimilarityMode);
    atomic_store(result, (unint64_t *)&qword_1EED9E470);
  }
  return result;
}

unint64_t sub_1AE628C9C()
{
  unint64_t result;

  result = qword_1EED9E478;
  if (!qword_1EED9E478)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntitySimilarityResult, &type metadata for EntitySimilarityResult);
    atomic_store(result, (unint64_t *)&qword_1EED9E478);
  }
  return result;
}

unint64_t sub_1AE628CDC()
{
  unint64_t result;

  result = qword_1EED9E480;
  if (!qword_1EED9E480)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntitySimilarityRequest, &type metadata for EntitySimilarityRequest);
    atomic_store(result, (unint64_t *)&qword_1EED9E480);
  }
  return result;
}

void type metadata accessor for EntitySimilarityError()
{
  sub_1AE4F67D4();
}

void type metadata accessor for EntitySimilarityMode()
{
  sub_1AE4F67D4();
}

uint64_t getEnumTagSinglePayload for EntitySimilarityResult(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      v4 = v3 >= 3;
      v2 = v3 - 3;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntitySimilarityResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 2;
  }
  return result;
}

void type metadata accessor for EntitySimilarityResult()
{
  sub_1AE4F67D4();
}

uint64_t getEnumTagSinglePayload for EntitySimilarityRequest(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFE && a1[24])
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 3;
      v2 = v3 - 3;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntitySimilarityRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

void type metadata accessor for EntitySimilarityRequest()
{
  sub_1AE4F67D4();
}

uint64_t _s20IntelligencePlatform20EntitySimilarityModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE628E98 + 4 * byte_1AE945AF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE628ECC + 4 * byte_1AE945AF0[v4]))();
}

uint64_t sub_1AE628ECC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE628ED4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE628EDCLL);
  return result;
}

uint64_t sub_1AE628EE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE628EF0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE628EF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE628EFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EntitySimilarityRequest.CodingKeys()
{
  return &type metadata for EntitySimilarityRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for EntitySimilarityResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE628F64 + 4 * byte_1AE945AFF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE628F98 + 4 * byte_1AE945AFA[v4]))();
}

uint64_t sub_1AE628F98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE628FA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE628FA8);
  return result;
}

uint64_t sub_1AE628FB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE628FBCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE628FC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE628FC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EntitySimilarityResult.CodingKeys()
{
  return &type metadata for EntitySimilarityResult.CodingKeys;
}

unint64_t sub_1AE628FE8()
{
  unint64_t result;

  result = qword_1EED9E488;
  if (!qword_1EED9E488)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE945F24, &type metadata for EntitySimilarityResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E488);
  }
  return result;
}

unint64_t sub_1AE629028()
{
  unint64_t result;

  result = qword_1EED9E490;
  if (!qword_1EED9E490)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE945FDC, &type metadata for EntitySimilarityRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E490);
  }
  return result;
}

unint64_t sub_1AE629068()
{
  unint64_t result;

  result = qword_1EED9E498;
  if (!qword_1EED9E498)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE945F4C, &type metadata for EntitySimilarityRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E498);
  }
  return result;
}

unint64_t sub_1AE6290A8()
{
  unint64_t result;

  result = qword_1EED9E4A0;
  if (!qword_1EED9E4A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE945F74, &type metadata for EntitySimilarityRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E4A0);
  }
  return result;
}

unint64_t sub_1AE6290E8()
{
  unint64_t result;

  result = qword_1EED9E4A8;
  if (!qword_1EED9E4A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE945E94, &type metadata for EntitySimilarityResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E4A8);
  }
  return result;
}

unint64_t sub_1AE629128()
{
  unint64_t result;

  result = qword_1EED9E4B0;
  if (!qword_1EED9E4B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE945EBC, &type metadata for EntitySimilarityResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E4B0);
  }
  return result;
}

unint64_t sub_1AE629164()
{
  unint64_t result;

  result = qword_1EED9E4B8;
  if (!qword_1EED9E4B8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntitySimilarityMode, &type metadata for EntitySimilarityMode);
    atomic_store(result, (unint64_t *)&qword_1EED9E4B8);
  }
  return result;
}

uint64_t sub_1AE6291A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t destroy for EntitySimilarityVectorView()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntitySimilarityVectorView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for EntitySimilarityVectorView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[4];
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[4] = v4;
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EntitySimilarityVectorView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IntentHandler(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IntentHandler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EntitySimilarityVectorView()
{
  return &type metadata for EntitySimilarityVectorView;
}

uint64_t EntitySubgraphView.accessAssertion.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t destroy for EntitySummaryView()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntitySummaryView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for EntitySummaryView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[4];
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[4] = v4;
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EntitySummaryView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EntitySummaryView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntitySummaryView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EntitySubgraphView()
{
  return &type metadata for EntitySubgraphView;
}

uint64_t destroy for EntitySummary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntitySummary(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  v12 = *(_QWORD *)(a2 + 144);
  v11 = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 144) = v12;
  *(_QWORD *)(a1 + 152) = v11;
  v13 = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EntitySummary(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = v4;
  v5 = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v5;
  return a1;
}

void *initializeWithTake for EntitySummary(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB1uLL);
}

uint64_t assignWithTake for EntitySummary(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntitySummary(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 177))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntitySummary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 176) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 177) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 177) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EntitySummary()
{
  return &type metadata for EntitySummary;
}

ValueMetadata *type metadata accessor for EntitySummaryView()
{
  return &type metadata for EntitySummaryView;
}

uint64_t sub_1AE629B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;

  v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_viewArtifactTableName);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1AE925E3C();
    v12 = v11;

  }
  else
  {
    v12 = 0xEE007972616D6D75;
    v10 = 0x735F797469746E65;
  }
  result = swift_unknownObjectRelease();
  *a4 = a1;
  a4[1] = v10;
  a4[2] = v12;
  a4[3] = a2;
  a4[4] = a3;
  a4[5] = 0x44495F444DLL;
  a4[6] = 0xE500000000000000;
  return result;
}

uint64_t sub_1AE629BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  char v26;
  char v27;
  _BYTE *v28;
  void (*v29)(_BYTE *, uint64_t);
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  _BYTE *v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE v77[4];
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  uint64_t v104;
  _BYTE *v105;
  _BYTE *v106;
  _QWORD *v107;
  uint64_t v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v112[5];
  uint64_t v113[5];
  uint64_t v114[5];
  uint64_t v115;

  v110 = a1;
  v107 = a3;
  v115 = sub_1AE924C60();
  v108 = *(_QWORD *)(v115 - 8);
  v4 = MEMORY[0x1E0C80A78](v115);
  v106 = &v77[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x1E0C80A78](v4);
  v105 = &v77[-v7];
  MEMORY[0x1E0C80A78](v6);
  v9 = &v77[-v8];
  v10 = sub_1AE501548(&qword_1ED318B60);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v77[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1AE501548(&qword_1ED319190);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  swift_bridgeObjectRetain();
  sub_1AE925350();
  v113[3] = sub_1AE925374();
  v113[4] = MEMORY[0x1E0D24668];
  sub_1AE52F6A8(v113);
  sub_1AE4FDCF8();
  sub_1AE925380();
  v112[3] = MEMORY[0x1E0DEB418];
  v112[4] = MEMORY[0x1E0D249F8];
  v112[0] = a2;
  v114[3] = sub_1AE924C9C();
  v114[4] = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8(v114);
  sub_1AE9251D0();
  sub_1AE59E5F4((uint64_t)v112);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v113);
  sub_1AE925320();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v114);
  sub_1AE5BDA68();
  v16 = v111;
  v17 = sub_1AE924B64();
  if (v16)
  {
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
    return sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
  }
  else
  {
    v109 = v9;
    v103 = v13;
    v111 = v15;
    v104 = v10;
    v110 = v17;
    v19 = sub_1AE88E954();
    v20 = 0;
    v102 = v11;
    v21 = v19;
    v22 = MEMORY[0x1E0DEE9D8];
    v100 = 0x80000001AE977BF0;
    v99 = 0x80000001AE977C30;
    v23 = v108;
    v24 = v111;
LABEL_4:
    v101 = v22;
    while (v21)
    {
      v25 = v109;
      sub_1AE4FDCF8();
      sub_1AE572158();
      if (v20)
      {
        while (1)
        {
          swift_unexpectedError();
          __break(1u);
        }
      }
      v20 = sub_1AE926460();
      v27 = v26;
      v28 = v25;
      v29 = *(void (**)(_BYTE *, uint64_t))(v23 + 8);
      v29(v28, v115);
      if ((v27 & 1) == 0)
      {
        sub_1AE571708();
        v35 = v34;
        v37 = v36;
        sub_1AE500030();
        v96 = v38;
        v95 = v39;
        v40 = v105;
        sub_1AE500030();
        v94 = v41;
        v93 = v42;
        sub_1AE500030();
        v92 = v43;
        v91 = v44;
        sub_1AE500030();
        v90 = v45;
        v89 = v46;
        sub_1AE500030();
        v88 = v47;
        v87 = v48;
        sub_1AE500030();
        v86 = v49;
        v85 = v50;
        sub_1AE500030();
        v84 = v51;
        v83 = v52;
        sub_1AE500030();
        v82 = v53;
        v81 = v54;
        v97 = v37;
        v98 = v35;
        sub_1AE572158();
        v79 = sub_1AE9263A0();
        v78 = v55;
        v56 = v40;
        v57 = v115;
        v29(v56, v115);
        v58 = v106;
        sub_1AE572158();
        v80 = 0;
        v59 = sub_1AE926460();
        LOBYTE(v35) = v60;
        v29(v58, v57);
        LOBYTE(v113[0]) = v78 & 1;
        LOBYTE(v112[0]) = v35 & 1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE51B06C();
          v101 = v75;
        }
        v23 = v108;
        v61 = v98;
        v62 = v101;
        v63 = *(_QWORD *)(v101 + 16);
        if (v63 >= *(_QWORD *)(v101 + 24) >> 1)
        {
          sub_1AE51B06C();
          v62 = v76;
        }
        *(_QWORD *)(v62 + 16) = v63 + 1;
        v64 = v62 + 184 * v63;
        *(_QWORD *)(v64 + 32) = v20;
        *(_QWORD *)(v64 + 40) = v61;
        v65 = v96;
        *(_QWORD *)(v64 + 48) = v97;
        *(_QWORD *)(v64 + 56) = v65;
        v66 = v94;
        *(_QWORD *)(v64 + 64) = v95;
        *(_QWORD *)(v64 + 72) = v66;
        v67 = v92;
        *(_QWORD *)(v64 + 80) = v93;
        *(_QWORD *)(v64 + 88) = v67;
        v68 = v90;
        *(_QWORD *)(v64 + 96) = v91;
        *(_QWORD *)(v64 + 104) = v68;
        v69 = v88;
        *(_QWORD *)(v64 + 112) = v89;
        *(_QWORD *)(v64 + 120) = v69;
        v70 = v86;
        *(_QWORD *)(v64 + 128) = v87;
        *(_QWORD *)(v64 + 136) = v70;
        v71 = v84;
        *(_QWORD *)(v64 + 144) = v85;
        *(_QWORD *)(v64 + 152) = v71;
        v72 = v82;
        *(_QWORD *)(v64 + 160) = v83;
        *(_QWORD *)(v64 + 168) = v72;
        v73 = v79;
        *(_QWORD *)(v64 + 176) = v81;
        *(_QWORD *)(v64 + 184) = v73;
        *(_BYTE *)(v64 + 192) = v113[0];
        LODWORD(v73) = v114[0];
        *(_DWORD *)(v64 + 196) = *(_DWORD *)((char *)v114 + 3);
        *(_DWORD *)(v64 + 193) = v73;
        *(_QWORD *)(v64 + 200) = v59;
        *(_BYTE *)(v64 + 208) = v112[0];
        v22 = v62;
        swift_release();
        v24 = v110;
        v74 = v80;
        sub_1AE88E954();
        sub_1AE503630();
        if (v74)
        {
          swift_release();
          sub_1AE4FED00();
          sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
          return swift_bridgeObjectRelease();
        }
        goto LABEL_4;
      }
      if (qword_1ED319C70 != -1)
        swift_once();
      v30 = sub_1AE925B6C();
      sub_1AE4FB608(v30, (uint64_t)qword_1ED31AD58);
      v31 = sub_1AE925B54();
      v32 = sub_1AE9265EC();
      v20 = v32;
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_1AE4F2000, v31, (os_log_type_t)v20, "MD_ID isn't available in entity_summary view", v33, 2u);
        MEMORY[0x1AF454C78](v33, -1, -1);
      }

      swift_release();
      v24 = v110;
      sub_1AE88E954();
      sub_1AE503630();
    }
    swift_release();
    sub_1AE4FED00();
    result = sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
    *v107 = v101;
  }
  return result;
}

uint64_t static PersonEntityTaggingService.operatingPoints(for:)(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t *v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  id v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  void *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1;
    v3 = qword_1EED997B8;
    swift_bridgeObjectRetain();
    if (v3 != -1)
LABEL_25:
      swift_once();
    v4 = 0;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v6 = &qword_1EED9E000;
    v27 = v2;
    while (1)
    {
      v7 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      v8 = *(_BYTE *)(v2 + v4 + 32);
      v9 = v6[154];
      if (*(_QWORD *)(v9 + 16) && (v10 = sub_1AE5373F8(), (v11 & 1) != 0))
      {
        v2 = v1;
        v12 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v10);
        swift_isUniquelyReferenced_nonNull_native();
        v13 = sub_1AE4F93D8();
        if (__OFADD__(v5[2], (v14 & 1) == 0))
          goto LABEL_23;
        v1 = v13;
        v15 = v14;
        sub_1AE501548(&qword_1EED9E570);
        if ((sub_1AE926A54() & 1) != 0)
        {
          v16 = sub_1AE5373F8();
          if ((v15 & 1) != (v17 & 1))
          {
            result = sub_1AE926DE4();
            __break(1u);
            return result;
          }
          v1 = v16;
        }
        if ((v15 & 1) != 0)
        {
          v18 = v5[7];

          *(_QWORD *)(v18 + 8 * v1) = v12;
        }
        else
        {
          sub_1AE503648((uint64_t)&v5[v1 >> 6]);
          *(_BYTE *)(v5[6] + v1) = v8;
          *(_QWORD *)(v5[7] + 8 * v1) = v12;
          v23 = v5[2];
          v24 = __OFADD__(v23, 1);
          v25 = v23 + 1;
          if (v24)
            goto LABEL_24;
          v5[2] = v25;
        }
        sub_1AE4FDCF0();
        v1 = v2;
        v2 = v27;
        v6 = &qword_1EED9E000;
      }
      else
      {
        swift_bridgeObjectRetain();
        v19 = sub_1AE4F93D8();
        v21 = v20;
        swift_bridgeObjectRelease();
        if ((v21 & 1) != 0)
        {
          swift_isUniquelyReferenced_nonNull_native();
          sub_1AE501548(&qword_1EED9E570);
          sub_1AE926A54();
          v22 = *(void **)(v5[7] + 8 * v19);
          type metadata accessor for PersonEntityTaggingService.PersonETOperatingPoints();
          sub_1AE62B630();
          sub_1AE926A6C();

          sub_1AE4FDCF0();
        }
      }
      ++v4;
      if (v7 == v1)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
    }
  }
  return MEMORY[0x1E0DEE9E0];
}

uint64_t static PersonEntityTaggingService.rocCurve(for:)()
{
  type metadata accessor for PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic();
  sub_1AE62B630();
  return sub_1AE925C98();
}

void sub_1AE62A728()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.PersonETOperatingPoints());
  PersonEntityTaggingService.PersonETOperatingPoints.init(precision0point9:precision0point8:precision0point7:recall0point9:recall0point8:recall0point7:highPrecision:highRecall:highF1:)(0.9, 0.8, 0.7, 0.6, 0.75, 0.8, 0.9, 0.65, (uint64_t)v0, v1, v2, v3, v4, v5, v6, v7, 0x3FEA3D70A3D70A3DLL);
  qword_1EED9E4C0 = v8;
}

void PersonEntityTaggingService.PersonETOperatingPoints.__allocating_init(precision0point9:precision0point8:precision0point7:recall0point9:recall0point8:recall0point7:highPrecision:highRecall:highF1:)(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17)
{
  objc_class *v17;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v25 = objc_allocWithZone(v17);
  PersonEntityTaggingService.PersonETOperatingPoints.init(precision0point9:precision0point8:precision0point7:recall0point9:recall0point8:recall0point7:highPrecision:highRecall:highF1:)(a9, a10, a11, a12, a13, a14, a15, a16, (uint64_t)v25, v26, v27, v28, v29, v30, v31, v32, a17);
}

void sub_1AE62A840()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.PersonETOperatingPoints());
  PersonEntityTaggingService.PersonETOperatingPoints.init(precision0point9:precision0point8:precision0point7:recall0point9:recall0point8:recall0point7:highPrecision:highRecall:highF1:)(0.95, 0.9, 0.8, 0.7, 0.8, 0.85, 0.92, 0.72, (uint64_t)v0, v1, v2, v3, v4, v5, v6, v7, 0x3FEB333333333333);
  qword_1EED9E4C8 = v8;
}

void *sub_1AE62A8C0()
{
  uint64_t inited;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *result;

  sub_1AE501548(&qword_1EED9E618);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE946180;
  *(_BYTE *)(inited + 32) = 4;
  if (qword_1EED997B0 != -1)
    swift_once();
  v1 = (void *)qword_1EED9E4C8;
  *(_QWORD *)(inited + 40) = qword_1EED9E4C8;
  *(_BYTE *)(inited + 48) = 7;
  *(_QWORD *)(inited + 56) = v1;
  *(_BYTE *)(inited + 64) = 6;
  *(_QWORD *)(inited + 72) = v1;
  *(_BYTE *)(inited + 80) = 15;
  *(_QWORD *)(inited + 88) = v1;
  *(_BYTE *)(inited + 96) = 17;
  *(_QWORD *)(inited + 104) = v1;
  *(_BYTE *)(inited + 112) = 16;
  *(_QWORD *)(inited + 120) = v1;
  *(_BYTE *)(inited + 128) = 8;
  *(_QWORD *)(inited + 136) = v1;
  *(_BYTE *)(inited + 144) = 9;
  *(_QWORD *)(inited + 152) = v1;
  *(_BYTE *)(inited + 160) = 10;
  *(_QWORD *)(inited + 168) = v1;
  *(_BYTE *)(inited + 176) = 18;
  *(_QWORD *)(inited + 184) = v1;
  *(_BYTE *)(inited + 192) = 20;
  *(_QWORD *)(inited + 200) = v1;
  *(_BYTE *)(inited + 208) = 19;
  *(_QWORD *)(inited + 216) = v1;
  *(_BYTE *)(inited + 224) = 21;
  v2 = qword_1EED997A8;
  v3 = v1;
  if (v2 == -1)
  {
    v4 = v3;
  }
  else
  {
    swift_once();
    v4 = (void *)qword_1EED9E4C8;
  }
  v5 = (void *)qword_1EED9E4C0;
  *(_QWORD *)(inited + 232) = qword_1EED9E4C0;
  *(_BYTE *)(inited + 240) = 23;
  *(_QWORD *)(inited + 248) = v5;
  *(_BYTE *)(inited + 256) = 26;
  *(_QWORD *)(inited + 264) = v5;
  *(_BYTE *)(inited + 272) = 22;
  *(_QWORD *)(inited + 280) = v4;
  type metadata accessor for PersonEntityTaggingService.PersonETOperatingPoints();
  sub_1AE62B630();
  v6 = v5;
  v7 = v4;
  result = (void *)sub_1AE925C98();
  off_1EED9E4D0 = result;
  return result;
}

double PersonEntityTaggingService.PersonETOperatingPoints.precision0point9.getter()
{
  return sub_1AE500038(OBJC_IVAR___GDPersonETOperatingPointsInner_precision0point9);
}

double PersonEntityTaggingService.PersonETOperatingPoints.precision0point8.getter()
{
  return sub_1AE500038(OBJC_IVAR___GDPersonETOperatingPointsInner_precision0point8);
}

double PersonEntityTaggingService.PersonETOperatingPoints.precision0point7.getter()
{
  return sub_1AE500038(OBJC_IVAR___GDPersonETOperatingPointsInner_precision0point7);
}

double PersonEntityTaggingService.PersonETOperatingPoints.recall0point9.getter()
{
  return sub_1AE500038(OBJC_IVAR___GDPersonETOperatingPointsInner_recall0point9);
}

double PersonEntityTaggingService.PersonETOperatingPoints.recall0point8.getter()
{
  return sub_1AE500038(OBJC_IVAR___GDPersonETOperatingPointsInner_recall0point8);
}

double PersonEntityTaggingService.PersonETOperatingPoints.recall0point7.getter()
{
  return sub_1AE500038(OBJC_IVAR___GDPersonETOperatingPointsInner_recall0point7);
}

double PersonEntityTaggingService.PersonETOperatingPoints.highPrecision.getter()
{
  return sub_1AE500038(OBJC_IVAR___GDPersonETOperatingPointsInner_highPrecision);
}

double PersonEntityTaggingService.PersonETOperatingPoints.highRecall.getter()
{
  return sub_1AE500038(OBJC_IVAR___GDPersonETOperatingPointsInner_highRecall);
}

double PersonEntityTaggingService.PersonETOperatingPoints.highF1.getter()
{
  return sub_1AE500038(OBJC_IVAR___GDPersonETOperatingPointsInner_highF1);
}

void PersonEntityTaggingService.PersonETOperatingPoints.init(precision0point9:precision0point8:precision0point7:recall0point9:recall0point8:recall0point7:highPrecision:highRecall:highF1:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_super v24;

  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_precision0point9] = a1;
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_precision0point8] = a2;
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_precision0point7] = a3;
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_recall0point9] = a4;
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_recall0point8] = a5;
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_recall0point7] = a6;
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_highPrecision] = a7;
  *(double *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_highRecall] = a8;
  *(_QWORD *)&v17[OBJC_IVAR___GDPersonETOperatingPointsInner_highF1] = a17;
  v24.receiver = v17;
  v24.super_class = (Class)type metadata accessor for PersonEntityTaggingService.PersonETOperatingPoints();
  sub_1AE501C48((uint64_t)v24.super_class, sel_init, v18, v19, v20, v21, v22, v23, v24);
  sub_1AE4FC530();
}

id PersonEntityTaggingService.PersonETOperatingPoints.__allocating_init()()
{
  return objc_msgSend(sub_1AE508160(), sel_init);
}

void PersonEntityTaggingService.PersonETOperatingPoints.init()()
{
  sub_1AE4FE99C();
  __break(1u);
}

id PersonEntityTaggingService.PersonETOperatingPoints.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for PersonEntityTaggingService.PersonETOperatingPoints);
}

uint64_t PersonEntityTaggingService.PersonETOperatingCharacteristic.truePositives.getter()
{
  return sub_1AE4FC898(OBJC_IVAR___GDPersonETOperatingCharacteristicInner_truePositives);
}

uint64_t PersonEntityTaggingService.PersonETOperatingCharacteristic.falsePositives.getter()
{
  return sub_1AE4FC898(OBJC_IVAR___GDPersonETOperatingCharacteristicInner_falsePositives);
}

uint64_t PersonEntityTaggingService.PersonETOperatingCharacteristic.trueNegatives.getter()
{
  return sub_1AE4FC898(OBJC_IVAR___GDPersonETOperatingCharacteristicInner_trueNegatives);
}

uint64_t PersonEntityTaggingService.PersonETOperatingCharacteristic.falseNegatives.getter()
{
  return sub_1AE4FC898(OBJC_IVAR___GDPersonETOperatingCharacteristicInner_falseNegatives);
}

void PersonEntityTaggingService.PersonETOperatingCharacteristic.__allocating_init(truePositives:falsePositives:trueNegatives:falseNegatives:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AE508160();
  PersonEntityTaggingService.PersonETOperatingCharacteristic.init(truePositives:falsePositives:trueNegatives:falseNegatives:)(a1, a2, a3, a4);
}

void PersonEntityTaggingService.PersonETOperatingCharacteristic.init(truePositives:falsePositives:trueNegatives:falseNegatives:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v11;

  *(_QWORD *)&v4[OBJC_IVAR___GDPersonETOperatingCharacteristicInner_truePositives] = a1;
  *(_QWORD *)&v4[OBJC_IVAR___GDPersonETOperatingCharacteristicInner_falsePositives] = a2;
  *(_QWORD *)&v4[OBJC_IVAR___GDPersonETOperatingCharacteristicInner_trueNegatives] = a3;
  *(_QWORD *)&v4[OBJC_IVAR___GDPersonETOperatingCharacteristicInner_falseNegatives] = a4;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for PersonEntityTaggingService.PersonETOperatingCharacteristic();
  sub_1AE501C48((uint64_t)v11.super_class, sel_init, v5, v6, v7, v8, v9, v10, v11);
  sub_1AE4FC530();
}

void PersonEntityTaggingService.PersonETOperatingCharacteristic.init()()
{
  sub_1AE4FE99C();
  __break(1u);
}

id PersonEntityTaggingService.PersonETOperatingCharacteristic.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for PersonEntityTaggingService.PersonETOperatingCharacteristic);
}

double PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.threshold.getter()
{
  return sub_1AE500038(OBJC_IVAR___GDPersonETReceiverOperatingCharacteristicInner_threshold);
}

double PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.precision.getter()
{
  return sub_1AE500038(OBJC_IVAR___GDPersonETReceiverOperatingCharacteristicInner_precision);
}

double PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.recall.getter()
{
  return sub_1AE500038(OBJC_IVAR___GDPersonETReceiverOperatingCharacteristicInner_recall);
}

void PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.__allocating_init(threshold:precision:recall:)(double a1, double a2, double a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.init(threshold:precision:recall:)(a1, a2, a3);
}

void PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.init(threshold:precision:recall:)(double a1, double a2, double a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  *(double *)&v3[OBJC_IVAR___GDPersonETReceiverOperatingCharacteristicInner_threshold] = a1;
  *(double *)&v3[OBJC_IVAR___GDPersonETReceiverOperatingCharacteristicInner_precision] = a2;
  *(double *)&v3[OBJC_IVAR___GDPersonETReceiverOperatingCharacteristicInner_recall] = a3;
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic();
  sub_1AE501C48((uint64_t)v10.super_class, sel_init, v4, v5, v6, v7, v8, v9, v10);
  sub_1AE4FC530();
}

void PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.init()()
{
  sub_1AE4FE99C();
  __break(1u);
}

id PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic);
}

double PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.threshold.getter()
{
  return sub_1AE500038(OBJC_IVAR___GDPersonETTotalOperatingCharacteristicInner_threshold);
}

id PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.operatingCharacteristic.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___GDPersonETTotalOperatingCharacteristicInner_operatingCharacteristic);
}

void PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.__allocating_init(threshold:operatingCharacteristic:)(uint64_t a1, double a2)
{
  sub_1AE508160();
  PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.init(threshold:operatingCharacteristic:)(a1, a2);
}

void PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.init(threshold:operatingCharacteristic:)(uint64_t a1, double a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  *(double *)&v2[OBJC_IVAR___GDPersonETTotalOperatingCharacteristicInner_threshold] = a2;
  *(_QWORD *)&v2[OBJC_IVAR___GDPersonETTotalOperatingCharacteristicInner_operatingCharacteristic] = a1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for PersonEntityTaggingService.PersonETTotalOperatingCharacteristic();
  sub_1AE501C48((uint64_t)v9.super_class, sel_init, v3, v4, v5, v6, v7, v8, v9);
  sub_1AE4FC530();
}

void PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.init()()
{
  sub_1AE4FE99C();
  __break(1u);
}

id PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for PersonEntityTaggingService.PersonETTotalOperatingCharacteristic);
}

uint64_t static EntityTaggingService.operatingPoints(for:)(uint64_t a1)
{
  double v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  double v12;
  unint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t result;
  double v38;
  double v39;
  double v40;

  v1 = *(double *)(a1 + 16);
  if (v1 != 0.0)
  {
    v2 = *(double *)&a1;
    v3 = qword_1EED997D0;
    swift_bridgeObjectRetain();
    if (v3 != -1)
LABEL_25:
      swift_once();
    v4 = 0;
    v5 = MEMORY[0x1E0DEE9E0];
    v39 = v2;
    while (1)
    {
      v6 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      v7 = *(_BYTE *)(*(_QWORD *)&v2 + v4 + 32);
      v8 = off_1EED9E568;
      if (*((_QWORD *)off_1EED9E568 + 2) && (v9 = sub_1AE5373F8(), (v10 & 1) != 0))
      {
        v2 = v1;
        v40 = *(double *)(v8[7] + 72 * v9 + 64);
        swift_isUniquelyReferenced_nonNull_native();
        v11 = sub_1AE50AB60();
        if (__OFADD__(*(_QWORD *)(v5 + 16), (LOBYTE(v12) & 1) == 0))
          goto LABEL_23;
        v13 = v11;
        v1 = v12;
        sub_1AE501548(&qword_1EED9E608);
        if ((sub_1AE926A54() & 1) != 0)
        {
          v22 = sub_1AE5373F8();
          if ((LOBYTE(v1) & 1) != (v23 & 1))
          {
            result = sub_1AE926DE4();
            __break(1u);
            return result;
          }
          v13 = v22;
        }
        if ((LOBYTE(v1) & 1) != 0)
        {
          sub_1AE500C68(v14, v15, v16, v17, v18, v19, v20, v21, v38, v39, v40);
        }
        else
        {
          sub_1AE503648(v5 + 8 * (v13 >> 6));
          *(_BYTE *)(*(_QWORD *)(v5 + 48) + v13) = v7;
          sub_1AE500C68(v26, v27, v28, v29, v30, v31, v32, v33, v38, v39, v40);
          v34 = *(_QWORD *)(v5 + 16);
          v35 = __OFADD__(v34, 1);
          v36 = v34 + 1;
          if (v35)
            goto LABEL_24;
          *(_QWORD *)(v5 + 16) = v36;
        }
        sub_1AE4FDCF0();
        v1 = v2;
        v2 = v39;
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1AE50AB60();
        v25 = v24;
        swift_bridgeObjectRelease();
        if ((v25 & 1) != 0)
        {
          swift_isUniquelyReferenced_nonNull_native();
          sub_1AE501548(&qword_1EED9E608);
          sub_1AE926A54();
          sub_1AE62B630();
          sub_1AE926A6C();
          sub_1AE4FDCF0();
        }
      }
      ++v4;
      if (v6 == *(_QWORD *)&v1)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
  }
  return MEMORY[0x1E0DEE9E0];
}

uint64_t static EntityTaggingService.rocCurve(for:)()
{
  sub_1AE62B630();
  return sub_1AE925C98();
}

double sub_1AE62B1AC()
{
  double result;

  xmmword_1EED9E4D8 = xmmword_1AE946190;
  *(_OWORD *)&qword_1EED9E4E8 = xmmword_1AE9461A0;
  result = 0.75;
  xmmword_1EED9E4F8 = xmmword_1AE9461B0;
  *(_OWORD *)&qword_1EED9E508 = xmmword_1AE9461C0;
  qword_1EED9E518 = 0x3FEA3D70A3D70A3DLL;
  return result;
}

double sub_1AE62B1F4()
{
  double result;

  xmmword_1EED9E520 = xmmword_1AE9461D0;
  *(_OWORD *)&qword_1EED9E530 = xmmword_1AE9461E0;
  result = 0.8;
  xmmword_1EED9E540 = xmmword_1AE9461F0;
  *(_OWORD *)&qword_1EED9E550 = xmmword_1AE946200;
  qword_1EED9E560 = 0x3FEB333333333333;
  return result;
}

void *sub_1AE62B234()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *result;

  sub_1AE501548(&qword_1EED9E610);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1AE946180;
  *(_BYTE *)(v0 + 32) = 4;
  if (qword_1EED997C8 != -1)
    swift_once();
  v1 = xmmword_1EED9E520;
  v2 = qword_1EED9E530;
  v3 = unk_1EED9E538;
  v4 = xmmword_1EED9E540;
  v5 = qword_1EED9E550;
  v6 = unk_1EED9E558;
  v7 = qword_1EED9E560;
  *(_OWORD *)(v0 + 40) = xmmword_1EED9E520;
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = v3;
  *(_OWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 88) = v5;
  *(_QWORD *)(v0 + 96) = v6;
  *(_QWORD *)(v0 + 104) = v7;
  *(_BYTE *)(v0 + 112) = 7;
  *(_OWORD *)(v0 + 120) = v1;
  *(_QWORD *)(v0 + 136) = v2;
  *(_QWORD *)(v0 + 144) = v3;
  *(_OWORD *)(v0 + 152) = v4;
  *(_QWORD *)(v0 + 168) = v5;
  *(_QWORD *)(v0 + 176) = v6;
  *(_QWORD *)(v0 + 184) = v7;
  *(_BYTE *)(v0 + 192) = 6;
  *(_OWORD *)(v0 + 200) = v1;
  *(_QWORD *)(v0 + 216) = v2;
  *(_QWORD *)(v0 + 224) = v3;
  *(_OWORD *)(v0 + 232) = v4;
  *(_QWORD *)(v0 + 248) = v5;
  *(_QWORD *)(v0 + 256) = v6;
  *(_QWORD *)(v0 + 264) = v7;
  *(_BYTE *)(v0 + 272) = 15;
  *(_OWORD *)(v0 + 280) = v1;
  *(_QWORD *)(v0 + 296) = v2;
  *(_QWORD *)(v0 + 304) = v3;
  *(_OWORD *)(v0 + 312) = v4;
  *(_QWORD *)(v0 + 328) = v5;
  *(_QWORD *)(v0 + 336) = v6;
  *(_QWORD *)(v0 + 344) = v7;
  *(_BYTE *)(v0 + 352) = 17;
  *(_OWORD *)(v0 + 360) = v1;
  *(_QWORD *)(v0 + 376) = v2;
  *(_QWORD *)(v0 + 384) = v3;
  *(_OWORD *)(v0 + 392) = v4;
  *(_QWORD *)(v0 + 408) = v5;
  *(_QWORD *)(v0 + 416) = v6;
  *(_QWORD *)(v0 + 424) = v7;
  *(_BYTE *)(v0 + 432) = 16;
  *(_OWORD *)(v0 + 440) = v1;
  *(_QWORD *)(v0 + 456) = v2;
  *(_QWORD *)(v0 + 464) = v3;
  *(_OWORD *)(v0 + 472) = v4;
  *(_QWORD *)(v0 + 488) = v5;
  *(_QWORD *)(v0 + 496) = v6;
  *(_QWORD *)(v0 + 504) = v7;
  *(_BYTE *)(v0 + 512) = 8;
  *(_OWORD *)(v0 + 520) = v1;
  *(_QWORD *)(v0 + 536) = v2;
  *(_QWORD *)(v0 + 544) = v3;
  *(_OWORD *)(v0 + 552) = v4;
  *(_QWORD *)(v0 + 568) = v5;
  *(_QWORD *)(v0 + 576) = v6;
  *(_QWORD *)(v0 + 584) = v7;
  *(_BYTE *)(v0 + 592) = 9;
  *(_OWORD *)(v0 + 600) = v1;
  *(_QWORD *)(v0 + 616) = v2;
  *(_QWORD *)(v0 + 624) = v3;
  *(_OWORD *)(v0 + 632) = v4;
  *(_QWORD *)(v0 + 648) = v5;
  *(_QWORD *)(v0 + 656) = v6;
  *(_QWORD *)(v0 + 664) = v7;
  *(_BYTE *)(v0 + 672) = 10;
  *(_OWORD *)(v0 + 680) = v1;
  *(_QWORD *)(v0 + 696) = v2;
  *(_QWORD *)(v0 + 704) = v3;
  *(_OWORD *)(v0 + 712) = v4;
  *(_QWORD *)(v0 + 728) = v5;
  *(_QWORD *)(v0 + 736) = v6;
  *(_QWORD *)(v0 + 744) = v7;
  *(_BYTE *)(v0 + 752) = 18;
  *(_OWORD *)(v0 + 760) = v1;
  *(_QWORD *)(v0 + 776) = v2;
  *(_QWORD *)(v0 + 784) = v3;
  *(_OWORD *)(v0 + 792) = v4;
  *(_QWORD *)(v0 + 808) = v5;
  *(_QWORD *)(v0 + 816) = v6;
  *(_QWORD *)(v0 + 824) = v7;
  *(_BYTE *)(v0 + 832) = 20;
  *(_OWORD *)(v0 + 840) = v1;
  *(_QWORD *)(v0 + 856) = v2;
  *(_QWORD *)(v0 + 864) = v3;
  *(_OWORD *)(v0 + 872) = v4;
  *(_QWORD *)(v0 + 888) = v5;
  *(_QWORD *)(v0 + 896) = v6;
  *(_QWORD *)(v0 + 904) = v7;
  *(_BYTE *)(v0 + 912) = 19;
  *(_OWORD *)(v0 + 920) = v1;
  *(_QWORD *)(v0 + 936) = v2;
  *(_QWORD *)(v0 + 944) = v3;
  *(_OWORD *)(v0 + 952) = v4;
  *(_QWORD *)(v0 + 968) = v5;
  *(_QWORD *)(v0 + 976) = v6;
  *(_QWORD *)(v0 + 984) = v7;
  *(_BYTE *)(v0 + 992) = 21;
  if (qword_1EED997C0 != -1)
    swift_once();
  v8 = xmmword_1EED9E4D8;
  v9 = qword_1EED9E4E8;
  v10 = unk_1EED9E4F0;
  v11 = xmmword_1EED9E4F8;
  v12 = qword_1EED9E508;
  v13 = unk_1EED9E510;
  v14 = qword_1EED9E518;
  *(_OWORD *)(v0 + 1000) = xmmword_1EED9E4D8;
  *(_QWORD *)(v0 + 1016) = v9;
  *(_QWORD *)(v0 + 1024) = v10;
  *(_OWORD *)(v0 + 1032) = v11;
  *(_QWORD *)(v0 + 1048) = v12;
  *(_QWORD *)(v0 + 1056) = v13;
  *(_QWORD *)(v0 + 1064) = v14;
  *(_BYTE *)(v0 + 1072) = 23;
  *(_OWORD *)(v0 + 1080) = v8;
  *(_QWORD *)(v0 + 1096) = v9;
  *(_QWORD *)(v0 + 1104) = v10;
  *(_OWORD *)(v0 + 1112) = v11;
  *(_QWORD *)(v0 + 1128) = v12;
  *(_QWORD *)(v0 + 1136) = v13;
  *(_QWORD *)(v0 + 1144) = v14;
  *(_BYTE *)(v0 + 1152) = 26;
  *(_OWORD *)(v0 + 1160) = v8;
  *(_QWORD *)(v0 + 1176) = v9;
  *(_QWORD *)(v0 + 1184) = v10;
  *(_OWORD *)(v0 + 1192) = v11;
  *(_QWORD *)(v0 + 1208) = v12;
  *(_QWORD *)(v0 + 1216) = v13;
  *(_QWORD *)(v0 + 1224) = v14;
  *(_BYTE *)(v0 + 1232) = 22;
  v15 = qword_1EED9E560;
  v16 = *(_OWORD *)&qword_1EED9E530;
  *(_OWORD *)(v0 + 1240) = xmmword_1EED9E520;
  *(_OWORD *)(v0 + 1256) = v16;
  v17 = *(_OWORD *)&qword_1EED9E550;
  *(_OWORD *)(v0 + 1272) = xmmword_1EED9E540;
  *(_OWORD *)(v0 + 1288) = v17;
  *(_QWORD *)(v0 + 1304) = v15;
  sub_1AE62B630();
  result = (void *)sub_1AE925C98();
  off_1EED9E568 = result;
  return result;
}

double EntityTaggingService.OperatingPoints.precision0point8.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double EntityTaggingService.OperatingPoints.precision0point7.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double EntityTaggingService.OperatingPoints.recall0point9.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double EntityTaggingService.OperatingPoints.recall0point8.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double EntityTaggingService.OperatingPoints.recall0point7.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double EntityTaggingService.OperatingPoints.highPrecision.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

double EntityTaggingService.OperatingPoints.highRecall.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

double EntityTaggingService.OperatingPoints.highF1.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t EntityTaggingService.OperatingCharacteristic.truePositives.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t EntityTaggingService.OperatingCharacteristic.falsePositives.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t EntityTaggingService.OperatingCharacteristic.trueNegatives.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t EntityTaggingService.OperatingCharacteristic.falseNegatives.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

double EntityTaggingService.ReceiverOperatingCharacteristic.precision.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double EntityTaggingService.ReceiverOperatingCharacteristic.recall.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

__n128 EntityTaggingService.TotalOperatingCharacteristic.operatingCharacteristic.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v1 + 8);
  v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t type metadata accessor for PersonEntityTaggingService.PersonETOperatingPoints()
{
  return objc_opt_self();
}

unint64_t sub_1AE62B630()
{
  unint64_t result;

  result = qword_1EED93FF0;
  if (!qword_1EED93FF0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonEntityTagType, &type metadata for PersonEntityTagType);
    atomic_store(result, (unint64_t *)&qword_1EED93FF0);
  }
  return result;
}

uint64_t type metadata accessor for PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PersonEntityTaggingService.PersonETOperatingCharacteristic()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PersonEntityTaggingService.PersonETTotalOperatingCharacteristic()
{
  return objc_opt_self();
}

uint64_t method lookup function for PersonEntityTaggingService.PersonETOperatingPoints()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonEntityTaggingService.PersonETOperatingPoints.__allocating_init(precision0point9:precision0point8:precision0point7:recall0point9:recall0point8:recall0point7:highPrecision:highRecall:highF1:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t method lookup function for PersonEntityTaggingService.PersonETOperatingCharacteristic()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonEntityTaggingService.PersonETOperatingCharacteristic.__allocating_init(truePositives:falsePositives:trueNegatives:falseNegatives:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonEntityTaggingService.PersonETReceiverOperatingCharacteristic.__allocating_init(threshold:precision:recall:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for PersonEntityTaggingService.PersonETTotalOperatingCharacteristic()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonEntityTaggingService.PersonETTotalOperatingCharacteristic.__allocating_init(threshold:operatingCharacteristic:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t _s15OperatingPointsVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s15OperatingPointsVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 72) = v3;
  return result;
}

void type metadata accessor for EntityTaggingService.OperatingPoints()
{
  sub_1AE4F67D4();
}

uint64_t _s23OperatingCharacteristicVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s23OperatingCharacteristicVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for EntityTaggingService.OperatingCharacteristic()
{
  sub_1AE4F67D4();
}

void type metadata accessor for EntityTaggingService.ReceiverOperatingCharacteristic()
{
  sub_1AE4F67D4();
}

uint64_t _s28TotalOperatingCharacteristicVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s28TotalOperatingCharacteristicVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

void type metadata accessor for EntityTaggingService.TotalOperatingCharacteristic()
{
  sub_1AE4F67D4();
}

void sub_1AE62B85C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v2 = sub_1AE9246C0();
  v16 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (unint64_t)objc_msgSend(a1, sel_count);
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1AE521CF0();
  v6 = a1;
  sub_1AE9266A0();

  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  if (v5)
  {
    sub_1AE562F54(&qword_1EED9EC50, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    do
    {
      sub_1AE926760();
      if (!v21)
        goto LABEL_24;
      sub_1AE524160((uint64_t)&v20, (uint64_t)&v18);
      sub_1AE53F468(0, (unint64_t *)&qword_1ED318F50);
      if (swift_dynamicCast())
      {
        v7 = v17;
        v8 = objc_msgSend(v17, sel_longLongValue);

      }
      else
      {
        v8 = 0;
      }
      sub_1AE6402A8((uint64_t)&v20);
      v9 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE521CF0();
        v9 = v22;
      }
      v10 = *(_QWORD *)(v9 + 16);
      if (v10 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1AE521CF0();
        v9 = v22;
      }
      *(_QWORD *)(v9 + 16) = v10 + 1;
      *(_QWORD *)(v9 + 8 * v10 + 32) = v8;
    }
    while (--v5);
  }
  sub_1AE562F54(&qword_1EED9EC50, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_1AE926760();
  while (v19)
  {
    sub_1AE53F2F4(&v18, &v20);
    sub_1AE524160((uint64_t)&v20, (uint64_t)&v18);
    sub_1AE53F468(0, (unint64_t *)&qword_1ED318F50);
    if (swift_dynamicCast())
    {
      v11 = v17;
      v12 = objc_msgSend(v17, sel_longLongValue);

    }
    else
    {
      v12 = 0;
    }
    sub_1AE6402A8((uint64_t)&v20);
    v13 = v22;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE521CF0();
      v13 = v22;
    }
    v14 = *(_QWORD *)(v13 + 16);
    if (v14 >= *(_QWORD *)(v13 + 24) >> 1)
    {
      sub_1AE521CF0();
      v13 = v22;
    }
    *(_QWORD *)(v13 + 16) = v14 + 1;
    *(_QWORD *)(v13 + 8 * v14 + 32) = v12;
    sub_1AE926760();
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v2);
  sub_1AE52FBE8((uint64_t)&v18, (uint64_t *)&unk_1ED31C440);
}

void sub_1AE62BBE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1AE521D24();
    v3 = sub_1AE64A338(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = a1 + 64;
        while ((*(_QWORD *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v4 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v14 = v1;
          v15 = v4;
          v7 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v5);
          v8 = PersonEntityTagType.rawValue.getter();
          v10 = v9;
          v11 = *(_QWORD *)(v16 + 16);
          if (v11 >= *(_QWORD *)(v16 + 24) >> 1)
            sub_1AE521D24();
          *(_QWORD *)(v16 + 16) = v11 + 1;
          v12 = (_QWORD *)(v16 + 24 * v11);
          v12[4] = v8;
          v12[5] = v10;
          v12[6] = v7;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v6 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v15 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v13 = sub_1AE926850();
          v1 = v14 - 1;
          if (v14 == 1)
            return;
          v5 = v13;
          if ((v13 & 0x8000000000000000) == 0)
          {
            v4 = *(_DWORD *)(a1 + 36);
            if (v13 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_1AE62BDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  void *v23;
  double v24;
  Swift::String v25;
  char v26;
  uint64_t v27;
  char v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD v35[5];

  v34 = MEMORY[0x1E0DEE9D8];
  sub_1AE64A2FC(v35);
  v8 = v35[0];
  v9 = v35[1];
  v10 = v35[3];
  v11 = v35[4];
  v12 = (unint64_t)(v35[2] + 64) >> 6;
  if ((a5 & 1) != 0)
    v13 = 0;
  else
    v13 = a4;
  v32 = v13;
  result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_23;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v17 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v9 + 8 * v17);
    v19 = v10 + 1;
    if (!v18)
    {
      v19 = v10 + 2;
      if (v10 + 2 >= v12)
        goto LABEL_33;
      v18 = *(_QWORD *)(v9 + 8 * v19);
      if (!v18)
      {
        v19 = v10 + 3;
        if (v10 + 3 >= v12)
          goto LABEL_33;
        v18 = *(_QWORD *)(v9 + 8 * v19);
        if (!v18)
        {
          v19 = v10 + 4;
          if (v10 + 4 >= v12)
            goto LABEL_33;
          v18 = *(_QWORD *)(v9 + 8 * v19);
          if (!v18)
          {
            v19 = v10 + 5;
            if (v10 + 5 >= v12)
              goto LABEL_33;
            v18 = *(_QWORD *)(v9 + 8 * v19);
            if (!v18)
            {
              v20 = v10 + 6;
              while (v20 < v12)
              {
                v18 = *(_QWORD *)(v9 + 8 * v20++);
                if (v18)
                {
                  v19 = v20 - 1;
                  goto LABEL_22;
                }
              }
LABEL_33:
              swift_release();
              v31 = v34;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v31;
            }
          }
        }
      }
    }
LABEL_22:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v19 << 6);
    v10 = v19;
LABEL_23:
    v21 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v16);
    v22 = *v21;
    v23 = (void *)v21[1];
    v24 = *(double *)(*(_QWORD *)(v8 + 56) + 8 * v16);
    swift_bridgeObjectRetain_n();
    v25._countAndFlagsBits = v22;
    v25._object = v23;
    PersonEntityTagType.init(rawValue:)(v25);
    if (v33 == 30)
      v26 = 0;
    else
      v26 = v33;
    if (*(_QWORD *)(a2 + 16)
      && (v27 = sub_1AE5373F8(), (v28 & 1) != 0)
      && *(double *)(*(_QWORD *)(a2 + 56) + 8 * v27) <= v24)
    {
      v33 = v26;
      v29 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag());
      PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.init(tag:score:inferenceEventId:)(&v33, v32, v24);
      v30 = swift_bridgeObjectRelease();
      MEMORY[0x1AF4533D0](v30);
      if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1AE926220();
      sub_1AE92625C();
      result = sub_1AE9261FC();
    }
    else
    {
      result = swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

void sub_1AE62C024(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EA90, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE638684);
}

void sub_1AE62C038(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EC78, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE638988);
}

void sub_1AE62C04C(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1AE501548(a2);
    v4 = sub_1AE64092C();
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9E0];
  }
  v6 = v4;
  v5 = sub_1AE4FB75C();
  a3(v5, 1, &v6);
  sub_1AE4F6648();
  sub_1AE4FE870();
}

void sub_1AE62C0C4(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EC68, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE638D30);
}

void sub_1AE62C0D8(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EC88, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE638FE4);
}

void sub_1AE62C0EC(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED94790, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63937C);
}

void sub_1AE62C100()
{
  sub_1AE62C124();
}

void sub_1AE62C124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  void (*v3)(uint64_t, _BYTE *);
  uint64_t *v4;
  uint64_t v5;
  char v6;
  _QWORD **v7;
  uint64_t *v8;

  sub_1AE640BC4();
  if (v0)
  {
    sub_1AE501548(v4);
    sub_1AE64092C();
  }
  sub_1AE4FB75C();
  sub_1AE641194();
  sub_1AE639640(v5, v6, v7, v8, v3, v4, v2);
  if (v1)
  {
    sub_1AE6407A4();
    __break(1u);
  }
  else
  {
    sub_1AE4F6648();
    sub_1AE508274();
  }
}

void sub_1AE62C1A0()
{
  sub_1AE62C124();
}

void sub_1AE62C1C4(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EC28, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE6398B8);
}

void sub_1AE62C1D8()
{
  sub_1AE62C270();
}

void sub_1AE62C1FC(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EC08, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE639C28);
}

void sub_1AE62C210(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EBE8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE639EF0);
}

void sub_1AE62C224(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EBD8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63A1B8);
}

void sub_1AE62C238(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EBC8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63A480);
}

void sub_1AE62C24C()
{
  sub_1AE62C270();
}

void sub_1AE62C270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t (*v8)(uint64_t);

  sub_1AE640BC4();
  if (v0)
  {
    sub_1AE501548(v4);
    sub_1AE64092C();
  }
  sub_1AE4FB75C();
  sub_1AE641194();
  sub_1AE63A748(v5, v6, v7, v8, v4, v3, v2);
  if (v1)
  {
    sub_1AE6407A4();
    __break(1u);
  }
  else
  {
    sub_1AE4F6648();
    sub_1AE508274();
  }
}

void sub_1AE62C2EC(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EBA0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63D5B8);
}

void sub_1AE62C300(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EB90, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63D208);
}

void sub_1AE62C314(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EB80, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63CE58);
}

void sub_1AE62C328(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EB70, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63CAA8);
}

void sub_1AE62C33C(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EB60, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63C6F8);
}

void sub_1AE62C350(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EB50, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63C348);
}

void sub_1AE62C364(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EB40, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63BF98);
}

void sub_1AE62C378(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EB20, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63BBE8);
}

void sub_1AE62C38C(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EB10, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63B838);
}

void sub_1AE62C3A0(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EB00, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63B488);
}

void sub_1AE62C3B4(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EAF0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63B0D8);
}

void sub_1AE62C3C8(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EAE0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63AD28);
}

void sub_1AE62C3DC(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EAD0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63A978);
}

void sub_1AE62C3F0(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EAB0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63D878);
}

void sub_1AE62C404(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EAA0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63DB58);
}

void sub_1AE62C418(uint64_t a1)
{
  sub_1AE62C04C(a1, &qword_1EED9EA80, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63DEB0);
}

uint64_t sub_1AE62C42C(_QWORD *a1, void *a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  _OWORD v31[2];
  __int128 v32;
  uint64_t v33;
  id v34;

  v4 = sub_1AE9246C0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58];
  v26 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2;
  sub_1AE9266A0();

  sub_1AE562F54(&qword_1EED9EC50, 255, v5, MEMORY[0x1E0CAFB80]);
  v10 = v9;
  sub_1AE926760();
  if (!v33)
  {
LABEL_17:
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v4);
    return (uint64_t)a1;
  }
  v27 = MEMORY[0x1E0DEE9B8] + 8;
  v28 = v10;
  v29 = v7;
  while (1)
  {
    sub_1AE53F2F4(&v32, v31);
    sub_1AE524160((uint64_t)v31, (uint64_t)&v30);
    sub_1AE53F468(0, &qword_1EED9EC58);
    if (!swift_dynamicCast())
      goto LABEL_16;
    v11 = v34;
    v12 = objc_msgSend(v34, sel_idValue);
    v13 = (unint64_t)objc_msgSend(v11, "tag") - 1;
    v14 = v13 > 0x19 ? 0 : byte_1AE94743A[v13];
    swift_isUniquelyReferenced_nonNull_native();
    v30 = a1;
    v15 = sub_1AE536D68();
    if (__OFADD__(a1[2], (v16 & 1) == 0))
      break;
    v17 = v15;
    v18 = v16;
    sub_1AE501548(&qword_1EED9EC60);
    if ((sub_1AE926A54() & 1) != 0)
    {
      v19 = sub_1AE536D68();
      if ((v18 & 1) != (v20 & 1))
        goto LABEL_20;
      v17 = v19;
    }
    a1 = v30;
    if ((v18 & 1) != 0)
    {
      *(_BYTE *)(v30[7] + v17) = v14;
    }
    else
    {
      v30[(v17 >> 6) + 8] |= 1 << v17;
      *(_QWORD *)(a1[6] + 8 * v17) = v12;
      *(_BYTE *)(a1[7] + v17) = v14;
      v21 = a1[2];
      v22 = __OFADD__(v21, 1);
      v23 = v21 + 1;
      if (v22)
        goto LABEL_19;
      a1[2] = v23;
    }

    swift_bridgeObjectRelease();
    v7 = v29;
LABEL_16:
    sub_1AE6402A8((uint64_t)v31);
    sub_1AE926760();
    if (!v33)
      goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE62C704(uint64_t a1, void (*a2)(uint64_t, uint64_t, double))
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  _QWORD v19[5];

  sub_1AE64A2FC(v19);
  v3 = v19[0];
  v4 = v19[1];
  v5 = v19[3];
  v6 = v19[4];
  v7 = (unint64_t)(v19[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_3;
LABEL_2:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v10 = v9 | (v5 << 6);
  while (1)
  {
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(double *)(*(_QWORD *)(v3 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    a2(v16, v17, v18);
    result = swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_2;
LABEL_3:
    v11 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    if (v11 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v4 + 8 * v11);
    v13 = v5 + 1;
    if (!v12)
    {
      v13 = v5 + 2;
      if (v5 + 2 >= v7)
        return swift_release();
      v12 = *(_QWORD *)(v4 + 8 * v13);
      if (!v12)
      {
        v13 = v5 + 3;
        if (v5 + 3 >= v7)
          return swift_release();
        v12 = *(_QWORD *)(v4 + 8 * v13);
        if (!v12)
        {
          v13 = v5 + 4;
          if (v5 + 4 >= v7)
            return swift_release();
          v12 = *(_QWORD *)(v4 + 8 * v13);
          if (!v12)
          {
            v13 = v5 + 5;
            if (v5 + 5 >= v7)
              return swift_release();
            v12 = *(_QWORD *)(v4 + 8 * v13);
            if (!v12)
            {
              v14 = v5 + 6;
              while (v14 < v7)
              {
                v12 = *(_QWORD *)(v4 + 8 * v14++);
                if (v12)
                {
                  v13 = v14 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v5 = v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AE62C884(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1AE88D374(v2);
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1AE634A80(v6);
  return sub_1AE9269C4();
}

id sub_1AE62C8FC(uint64_t a1)
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithInteger_, a1);
}

void sub_1AE62C930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  sub_1AE501548(&qword_1ED318B50);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1AE926328();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v6, 1, 1, v7);
  v8 = (_QWORD *)sub_1AE640B58();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  v8[5] = a2;
  v9 = (_QWORD *)sub_1AE640B58();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_1EED9E9F0;
  v9[5] = v8;
  sub_1AE6348B4((uint64_t)v6, (uint64_t)&unk_1EED9EA00, (uint64_t)v9);
  swift_release();
  sub_1AE4F6624();
}

IntelligencePlatform::PersonEntityTagType __swiftcall PersonEntityTagType.init(qid:)(Swift::String qid)
{
  char *v1;
  char *v2;
  BOOL v3;
  void *object;
  uint64_t countAndFlagsBits;
  IntelligencePlatform::PersonEntityTagType result;
  char v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  char v19;

  v2 = v1;
  v3 = qid._countAndFlagsBits == 0x3036353751 && qid._object == (void *)0xE500000000000000;
  if (v3 || (object = qid._object, countAndFlagsBits = qid._countAndFlagsBits, (sub_1AE4FD134() & 1) != 0))
  {
    result = swift_bridgeObjectRelease();
    v7 = 6;
  }
  else
  {
    v8 = countAndFlagsBits == 0x3536353751 && object == (void *)0xE500000000000000;
    if (v8 || (sub_1AE4FD134() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v7 = 7;
    }
    else
    {
      v9 = countAndFlagsBits == 0x32333237373151 && object == (void *)0xE700000000000000;
      if (v9 || (sub_1AE4FD134() & 1) != 0)
      {
        result = swift_bridgeObjectRelease();
        v7 = 16;
      }
      else
      {
        v10 = countAndFlagsBits == 0x34393138303351 && object == (void *)0xE700000000000000;
        if (v10 || (sub_1AE4FD134() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v7 = 17;
        }
        else
        {
          v11 = countAndFlagsBits == 0x3634313638303151 && object == (void *)0xE900000000000035;
          if (v11 || (sub_1AE4FD134() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v7 = 9;
          }
          else
          {
            v12 = countAndFlagsBits == 0x34393035393551 && object == (void *)0xE700000000000000;
            if (v12 || (sub_1AE4FD134() & 1) != 0)
            {
              result = swift_bridgeObjectRelease();
              v7 = 10;
            }
            else
            {
              v13 = countAndFlagsBits == 0x3835373533323951 && object == (void *)0xE800000000000000;
              if (v13 || (sub_1AE4FD134() & 1) != 0)
              {
                result = swift_bridgeObjectRelease();
                v7 = 12;
              }
              else
              {
                v14 = countAndFlagsBits == 0x3434333833323951 && object == (void *)0xE800000000000000;
                if (v14 || (sub_1AE4FD134() & 1) != 0)
                {
                  result = swift_bridgeObjectRelease();
                  v7 = 13;
                }
                else
                {
                  v15 = countAndFlagsBits == 0x3737373932373151 && object == (void *)0xE900000000000037;
                  if (v15 || (sub_1AE4FD134() & 1) != 0)
                  {
                    result = swift_bridgeObjectRelease();
                    v7 = 21;
                  }
                  else
                  {
                    v16 = countAndFlagsBits == 0x30333838383151 && object == (void *)0xE700000000000000;
                    if (v16 || (sub_1AE4FD134() & 1) != 0)
                    {
                      result = swift_bridgeObjectRelease();
                      v7 = 19;
                    }
                    else
                    {
                      v17 = countAndFlagsBits == 3551824 && object == (void *)0xE300000000000000;
                      if (v17 || (sub_1AE4FD134() & 1) != 0)
                      {
                        result = swift_bridgeObjectRelease();
                        v7 = 18;
                      }
                      else if (countAndFlagsBits == 0x38373832313251 && object == (void *)0xE700000000000000)
                      {
                        result = swift_bridgeObjectRelease();
                        v7 = 20;
                      }
                      else
                      {
                        v19 = sub_1AE4FD134();
                        result = sub_1AE4F9038();
                        if ((v19 & 1) != 0)
                          v7 = 20;
                        else
                          v7 = 1;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  *v2 = v7;
  return result;
}

IntelligencePlatform::PersonEntityTagType_optional __swiftcall PersonEntityTagType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  char v4;
  char v5;
  IntelligencePlatform::PersonEntityTagType_optional result;

  v2 = v1;
  v3 = sub_1AE926DA8();
  sub_1AE4F665C();
  v4 = 0;
  v5 = 12;
  switch(v3)
  {
    case 0:
      goto LABEL_14;
    case 1:
      v4 = 1;
      goto LABEL_14;
    case 2:
      v4 = 2;
      goto LABEL_14;
    case 3:
      v4 = 3;
      goto LABEL_14;
    case 4:
      v4 = 4;
      goto LABEL_14;
    case 5:
      v4 = 5;
      goto LABEL_14;
    case 6:
      v4 = 6;
      goto LABEL_14;
    case 7:
      v4 = 7;
      goto LABEL_14;
    case 8:
      v4 = 8;
      goto LABEL_14;
    case 9:
      v4 = 9;
      goto LABEL_14;
    case 10:
      v4 = 10;
      goto LABEL_14;
    case 11:
      v4 = 11;
LABEL_14:
      v5 = v4;
      break;
    case 12:
      break;
    case 13:
      v5 = 13;
      break;
    case 14:
      v5 = 14;
      break;
    case 15:
      v5 = 15;
      break;
    case 16:
      v5 = 16;
      break;
    case 17:
      v5 = 17;
      break;
    case 18:
      v5 = 18;
      break;
    case 19:
      v5 = 19;
      break;
    case 20:
      v5 = 20;
      break;
    case 21:
      v5 = 21;
      break;
    case 22:
      v5 = 22;
      break;
    case 23:
      v5 = 23;
      break;
    case 24:
      v5 = 24;
      break;
    case 25:
      v5 = 25;
      break;
    case 26:
      v5 = 26;
      break;
    case 27:
      v5 = 27;
      break;
    case 28:
      v5 = 28;
      break;
    case 29:
      v5 = 29;
      break;
    default:
      v5 = 30;
      break;
  }
  *v2 = v5;
  sub_1AE4F6624();
  return result;
}

void *static PersonEntityTagType.allCases.getter()
{
  return &unk_1E5DA87D0;
}

uint64_t PersonEntityTagType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE62CF98 + 4 * byte_1AE9463CE[*v0]))(0x7465736E75, 0xE500000000000000);
}

uint64_t sub_1AE62CF98()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1AE62CFB0()
{
  return 0x726568746FLL;
}

uint64_t sub_1AE62CFC0()
{
  return 0x666C6573796DLL;
}

uint64_t sub_1AE62CFD4()
{
  return 0x796C696D6166;
}

uint64_t sub_1AE62CFE8()
{
  return 0x746E65726170;
}

uint64_t sub_1AE62CFFC()
{
  return 0x726568746F6DLL;
}

uint64_t sub_1AE62D014()
{
  return 0x726568746166;
}

uint64_t sub_1AE62D064()
{
  return 0x726150646E617267;
}

uint64_t sub_1AE62D084()
{
  return 0x746F6D646E617267;
}

uint64_t sub_1AE62D0B8()
{
  return 0x646C696843796DLL;
}

uint64_t sub_1AE62D0CC()
{
  return 0x646C696863;
}

uint64_t sub_1AE62D0DC()
{
  return 7237491;
}

uint64_t sub_1AE62D0EC()
{
  return 0x7265746867756164;
}

void sub_1AE62D100()
{
  JUMPOUT(0x1AE62D110);
}

uint64_t sub_1AE62D118()
{
  return 1701210487;
}

void sub_1AE62D128()
{
  JUMPOUT(0x1AE62D138);
}

uint64_t sub_1AE62D140()
{
  return 0x646E65697266;
}

unint64_t sub_1AE62D154()
{
  return sub_1AE500A68(16);
}

void sub_1AE62D16C()
{
  JUMPOUT(0x1AE62D17CLL);
}

uint64_t sub_1AE62D184()
{
  return 0x726F62686769656ELL;
}

uint64_t sub_1AE62D19C()
{
  return 0x74616D6573756F68;
}

uint64_t sub_1AE62D1B8()
{
  return 0x696E6D756C61;
}

uint64_t sub_1AE62D1CC()
{
  return 0x746550796DLL;
}

uint64_t sub_1AE62D1DC()
{
  return 0x676F44796DLL;
}

uint64_t sub_1AE62D1EC()
{
  return 0x746143796DLL;
}

void sub_1AE62D1FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_1AE511468(*a1, *a2);
}

void sub_1AE62D208()
{
  unsigned __int8 *v0;

  sub_1AE512CB4(*v0);
}

uint64_t sub_1AE62D210(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1AE5E8B10(a1, *v1);
}

void sub_1AE62D218(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FBF4(a1, *v1);
}

IntelligencePlatform::PersonEntityTagType_optional sub_1AE62D220(Swift::String *a1)
{
  return PersonEntityTagType.init(rawValue:)(*a1);
}

void sub_1AE62D22C(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = PersonEntityTagType.rawValue.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

void sub_1AE62D24C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5DA87D0;
}

uint64_t sub_1AE62D25C()
{
  sub_1AE64019C();
  return sub_1AE926190();
}

uint64_t sub_1AE62D2B8()
{
  sub_1AE64019C();
  return sub_1AE926148();
}

uint64_t sub_1AE62D304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1AE62D324()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1AE640D68();
  if (v0[2])
  {
    v1 = v0[2];
  }
  else
  {
    sub_1AE5962D8();
    v1 = sub_1AE925C98();
  }
  v0[7] = v1;
  v2 = v0[3];
  if (v2)
  {
    sub_1AE4FB75C();
    v3 = v2;
  }
  else
  {
    sub_1AE5962D8();
    sub_1AE4FB75C();
    v3 = sub_1AE925C98();
  }
  v0[8] = v3;
  v4 = v0[4];
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = v4;
  }
  else
  {
    sub_1AE5962D8();
    sub_1AE641074();
    v5 = sub_1AE925C98();
  }
  v0[9] = v5;
  v6 = v0[5];
  if (v6)
  {
    sub_1AE4F6708();
    v7 = v6;
  }
  else
  {
    sub_1AE5962D8();
    sub_1AE4F6708();
    v7 = sub_1AE925C98();
  }
  v0[10] = v7;
  sub_1AE4F6804();
  v8 = (_QWORD *)swift_task_alloc();
  v0[11] = v8;
  sub_1AE640D18(v8, (uint64_t)sub_1AE62D4A8);
  sub_1AE640D00();
  return sub_1AE62EB94(v9, v10, v11, v12);
}

uint64_t sub_1AE62D4A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1AE640824();
  sub_1AE505574();
  v2 = *v1;
  sub_1AE614860(v3);
  if (v0)
  {
    sub_1AE4F665C();
    sub_1AE4F67AC();
    sub_1AE4F76D8();
  }
  else
  {
    sub_1AE4F67AC();
    sub_1AE4F76D8();
    sub_1AE4F6648();
  }
  swift_bridgeObjectRelease();
  return sub_1AE4FC4C0(*(uint64_t (**)(void))(v2 + 8));
}

void PersonEntityTagType.init(gdTagType:)(_BYTE *a1@<X8>)
{
  sub_1AE508FD8(a1);
}

double static PersonEntityTaggingService.currentVersion.getter()
{
  return 1.0;
}

void static PersonEntityTaggingService.supportedTags(version:)()
{
  type metadata accessor for EntityTaggingService();
  sub_1AE4F6664();
}

uint64_t type metadata accessor for EntityTaggingService()
{
  return objc_opt_self();
}

void *static EntityTaggingService.supportedTags(version:)(uint64_t a1, char a2)
{
  if (*(double *)&a1 == 1.0 && (a2 & 1) == 0)
    return &unk_1E5DA8E80;
  else
    return (void *)MEMORY[0x1E0DEE9D8];
}

void PersonEntityTaggingService.__allocating_init(etConfig:)()
{
  void *v0;

  sub_1AE6408FC();
  v0 = (void *)sub_1AE607E18();
  PersonEntityTaggingService.init(etConfig:)(v0);
  sub_1AE4FC4F8();
}

char *PersonEntityTaggingService.init(etConfig:)(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  objc_super v10;

  v4 = qword_1ED31C9B0;
  v5 = v1;
  v6 = a1;
  if (v4 != -1)
    swift_once();
  v7 = (void *)qword_1ED31C9A0;
  type metadata accessor for EntityTaggingService();
  v8 = sub_1AE640890();
  EntityTaggingService.init(etConfig:viewService:)(a1, (char *)v7);
  if (v2)
  {

    type metadata accessor for PersonEntityTaggingService();
    sub_1AE607EB0();
  }
  else
  {
    *(_QWORD *)&v5[OBJC_IVAR___GDEntityTaggingServiceInner_entityTaggingService] = v8;
    *(_QWORD *)&v5[OBJC_IVAR___GDEntityTaggingServiceInner_feedbackService] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedbackService()), sel_init);

    v10.receiver = v5;
    v10.super_class = (Class)type metadata accessor for PersonEntityTaggingService();
    v5 = (char *)objc_msgSendSuper2(&v10, sel_init);

  }
  return v5;
}

void EntityTaggingService.__allocating_init(etConfig:)(void *a1)
{
  void *v2;

  if (qword_1ED31C9B0 != -1)
    swift_once();
  v2 = (void *)qword_1ED31C9A0;
  type metadata accessor for EntityTaggingService();
  sub_1AE640890();
  EntityTaggingService.init(etConfig:viewService:)(a1, (char *)v2);
  sub_1AE5035EC();
}

uint64_t sub_1AE62D808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE62D81C()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1AE62D87C;
  return sub_1AE631934(v0[2], v0[3], v0[4]);
}

uint64_t sub_1AE62D87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE501C50();
  v3 = sub_1AE4FD1AC();
  if (!v1)
    v3 = v0;
  return sub_1AE4FE914(v3, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1AE62D8C4(int a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;

  v4[2] = a2;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v7 = sub_1AE925E3C();
  v9 = v8;
  v4[5] = v8;
  v10 = a2;
  a4;
  v11 = (_QWORD *)swift_task_alloc();
  v4[6] = v11;
  *v11 = v4;
  v11[1] = sub_1AE62D964;
  return sub_1AE62D808(v7, v9, (uint64_t)a2);
}

uint64_t sub_1AE62D964(void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v5;
  void *v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v11;

  v3 = v1;
  v5 = (_QWORD *)*v2;
  v11 = v5;
  v7 = (void *)v5[2];
  v6 = (void *)v5[3];
  v8 = (_QWORD *)*v2;
  sub_1AE614860(&v11);

  sub_1AE4F665C();
  v9 = v5[4];
  if (v3)
  {
    sub_1AE6411A8();
    sub_1AE640B6C();
    sub_1AE640FB8(v9, *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v9 + 16));

    sub_1AE640F20();
  }
  else
  {
    sub_1AE6410F4(v5[4], *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v9 + 16));
    sub_1AE640F20();

  }
  return sub_1AE500C20((uint64_t (*)(void))v8[1]);
}

uint64_t sub_1AE62D9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE62DA0C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v2 = sub_1AE6406F0(v1, (uint64_t)sub_1AE62DA5C);
  return sub_1AE631C30(v2, v3);
}

uint64_t sub_1AE62DA5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1AE4FD1AC();
  if (!v1)
    v4 = a1;
  return sub_1AE4FE914(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1AE62DAB0(int a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v4[2] = a2;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v7 = sub_1AE9261CC();
  v4[5] = v7;
  v8 = a2;
  a4;
  v9 = (_QWORD *)swift_task_alloc();
  v4[6] = v9;
  *v9 = v4;
  v9[1] = sub_1AE62DB48;
  return sub_1AE62D9F8(v7, (uint64_t)a2);
}

uint64_t sub_1AE62DB48(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;

  v3 = v1;
  v11 = *v2;
  v6 = *(void **)(v11 + 16);
  v5 = *(void **)(v11 + 24);
  v7 = *v2;
  sub_1AE614860(&v11);
  sub_1AE4F665C();

  if (v3)
  {
    sub_1AE6411A8();
    sub_1AE640B6C();
    v8 = a1;
  }
  else
  {
    type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags();
    v9 = sub_1AE925C44();
    sub_1AE4F9038();
    v8 = (void *)v9;
  }
  sub_1AE640A4C();

  sub_1AE640F20();
  return sub_1AE500C20(*(uint64_t (**)(void))(v7 + 8));
}

uint64_t sub_1AE62DBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE62DC08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v2 = sub_1AE6406F0(v1, (uint64_t)sub_1AE640300);
  return sub_1AE632348(v2, v3);
}

uint64_t sub_1AE62DCCC(uint64_t a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  _QWORD *v9;

  v4[2] = a2;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v8 = a2;
  a4;
  v9 = (_QWORD *)swift_task_alloc();
  v4[5] = v9;
  *v9 = v4;
  v9[1] = sub_1AE62DD4C;
  return sub_1AE62DBF4(a1, (uint64_t)a2);
}

uint64_t sub_1AE62DD4C()
{
  _QWORD *v0;
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (**v10)(uint64_t, _QWORD, uint64_t);
  void *v11;

  sub_1AE640824();
  v3 = v1;
  v5 = v4;
  sub_1AE505574();
  v7 = (void *)v0[2];
  v6 = (void *)v0[3];
  v8 = *v2;
  sub_1AE614860(v9);

  v10 = (uint64_t (**)(uint64_t, _QWORD, uint64_t))v0[4];
  if (v3)
  {
    v11 = (void *)sub_1AE9246A8();

    sub_1AE640FB8((uint64_t)v10, v10[2]);
    _Block_release(v10);
  }
  else
  {
    sub_1AE6410F4((uint64_t)v10, v10[2]);
    _Block_release(v10);

  }
  return (*(uint64_t (**)(void))(v8 + 8))();
}

uint64_t sub_1AE62DDF4(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = v2;
  *(_BYTE *)(v3 + 49) = *a1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE62DE0C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_BYTE *)(v0 + 48) = *(_BYTE *)(v0 + 49);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1AE62DE6C;
  return sub_1AE640A7C((_BYTE *)(v0 + 48), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1AE62DE6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1AE501C50();
  v3 = *v2;
  *v4 = v3;
  *(_QWORD *)(v5 + 40) = v1;
  swift_task_dealloc();
  if (!v1)
    return sub_1AE4FE914(v0, *(uint64_t (**)(void))(v3 + 8));
  sub_1AE4F9070();
  return sub_1AE4FD190();
}

uint64_t sub_1AE62DEC0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AE62DECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE62DEE0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v2 = sub_1AE6406F0(v1, (uint64_t)sub_1AE640300);
  return sub_1AE63241C(v2, v3);
}

uint64_t sub_1AE62DF30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE62DF44()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v2 = sub_1AE6406F0(v1, (uint64_t)sub_1AE640300);
  return sub_1AE6325E0(v2, v3);
}

void sub_1AE62DFA8(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7)
{
  void *v11;
  _QWORD *v12;
  id v13;
  id v14;
  id v15;

  v11 = _Block_copy(aBlock);
  sub_1AE640A98();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = v11;
  v12[5] = a1;
  v13 = a3;
  v14 = a4;
  v15 = a1;
  sub_1AE62C930(a7, (uint64_t)v12);
}

uint64_t sub_1AE62E018(int a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v4[2] = a2;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v4[5] = sub_1AE53F468(0, (unint64_t *)&qword_1ED318F50);
  v7 = sub_1AE9261CC();
  v4[6] = v7;
  v8 = a2;
  a4;
  v9 = (_QWORD *)swift_task_alloc();
  v4[7] = v9;
  *v9 = v4;
  v9[1] = sub_1AE62E0CC;
  return sub_1AE62DF30(v7, (uint64_t)a2);
}

uint64_t sub_1AE62E0CC(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;

  v4 = v1;
  sub_1AE640E88();
  v7 = *(void **)(v3 + 16);
  v6 = *(void **)(v3 + 24);
  v8 = *v2;
  sub_1AE614860(v9);
  sub_1AE4F665C();

  if (v4)
  {
    sub_1AE6411A8();
    sub_1AE640B6C();
    v10 = a1;
  }
  else
  {
    type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons();
    sub_1AE63E3E4();
    v11 = sub_1AE925C44();
    sub_1AE4F9038();
    v10 = (void *)v11;
  }
  sub_1AE640A4C();

  sub_1AE640F20();
  return sub_1AE500C20(*(uint64_t (**)(void))(v8 + 8));
}

uint64_t static PersonEntityTaggingService.tagName(gdTag:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;

  sub_1AE6410A0(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10, SWORD2(v10), SBYTE6(v10), SHIBYTE(v10));
  return PersonEntityTagType.rawValue.getter();
}

void static PersonEntityTaggingService.gdTagType(name:)()
{
  __asm { BR              X8 }
}

uint64_t PersonEntityTagType.gdTagType.getter()
{
  char *v0;

  return qword_1AE947458[*v0];
}

uint64_t static PersonEntityTaggingService.checkServiceState()()
{
  type metadata accessor for EntityTaggingService();
  return static EntityTaggingService.checkServiceState()();
}

uint64_t static EntityTaggingService.checkServiceState()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  id v10;
  void (*v11)(id, uint64_t, uint64_t);
  id v12;
  id v13;
  char v14;
  void *v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  id v23;
  void (*v24)(id, uint64_t, uint64_t);
  id v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;

  if (qword_1ED31C9B0 != -1)
    swift_once();
  v2 = (void *)sub_1AE925E18();
  v10 = sub_1AE640AE4((int)v2, v3, v4, v5, v6, v7, v8, v9, v28, v30, 0);

  if (v10)
  {
    sub_1AE64095C();
    v11 = *(void (**)(id, uint64_t, uint64_t))(v1 + 8);
    v12 = v32;
    v11(v10, v0, v1);
    sub_1AE50327C();
    sub_1AE4F8284();
    v14 = 1;
  }
  else
  {
    v13 = v32;
    sub_1AE6411D8();
    sub_1AE501AD4();
    swift_willThrow();

    v14 = 0;
  }
  v15 = (void *)sub_1AE925E18();
  v23 = sub_1AE640AE4((int)v15, v16, v17, v18, v19, v20, v21, v22, v29, v31, 0);

  if (!v23)
  {
    v26 = v33;
    sub_1AE6411D8();
    sub_1AE501AD4();
    swift_willThrow();

    if ((v14 & 1) == 0)
      return 2;
    return 1;
  }
  sub_1AE64095C();
  v24 = *(void (**)(id, uint64_t, uint64_t))(v1 + 8);
  v25 = v33;
  v24(v23, v0, v1);
  sub_1AE50327C();
  sub_1AE4F8284();
  return (v14 & 1) != 0;
}

uint64_t sub_1AE62E7AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE62E7BC()
{
  uint64_t v0;

  sub_1AE5535B4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AE62E81C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = v1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE62E82C()
{
  objc_super *v0;
  Class super_class;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char v6;
  objc_class *v7;
  char *v8;
  char *v9;
  objc_class *v10;
  _QWORD *v11;

  super_class = v0[2].super_class;
  v2 = -[objc_class eventIds](super_class, sel_eventIds);
  sub_1AE62B85C(v2);
  v4 = v3;

  v5 = -[objc_class feedbackType](super_class, sel_feedbackType);
  if ((unint64_t)v5 >= 5)
    return sub_1AE6411CC();
  v6 = (char)v5;
  v7 = (objc_class *)type metadata accessor for EntityTaggingStatefulFeedback();
  v8 = (char *)objc_allocWithZone(v7);
  v9 = &v8[OBJC_IVAR____TtC20IntelligencePlatform29EntityTaggingStatefulFeedback_kind];
  *(_QWORD *)v9 = v4;
  v9[8] = v6;
  v0[1].receiver = v8;
  v0[1].super_class = v7;
  v10 = (objc_class *)objc_msgSendSuper2(v0 + 1, sel_init);
  v0[3].super_class = v10;
  v11 = (_QWORD *)swift_task_alloc();
  v0[4].receiver = v11;
  sub_1AE640D18(v11, (uint64_t)sub_1AE62E960);
  return sub_1AE62E7AC((uint64_t)v10);
}

uint64_t sub_1AE62E960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  sub_1AE505574();
  v3 = *v2;
  *v4 = v3;
  *(_QWORD *)(v0 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1AE4F9070();
    return sub_1AE4FD190();
  }
  else
  {

    return (*(uint64_t (**)(void))(v3 + 8))();
  }
}

uint64_t sub_1AE62E9C0()
{
  uint64_t v0;

  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

void EntityTaggingStatefulFeedback.__allocating_init(kind:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v12;

  v3 = (char *)sub_1AE508160();
  v4 = *(_BYTE *)(a1 + 8);
  v5 = &v3[OBJC_IVAR____TtC20IntelligencePlatform29EntityTaggingStatefulFeedback_kind];
  *(_QWORD *)v5 = *(_QWORD *)a1;
  v5[8] = v4;
  v12.receiver = v3;
  v12.super_class = v1;
  sub_1AE501C48((uint64_t)v3, sel_init, v6, v7, v8, v9, v10, v11, v12);
  sub_1AE509D68();
}

uint64_t sub_1AE62EAA0(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  _QWORD *v7;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = a1;
  a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[5] = v7;
  *v7 = v3;
  v7[1] = sub_1AE62EB1C;
  return sub_1AE62E81C((uint64_t)v6);
}

uint64_t sub_1AE62EB1C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  sub_1AE640E88();
  v4 = *(void **)(v2 + 16);
  v3 = *(void **)(v2 + 24);
  v5 = *v1;
  sub_1AE614860(v6);

  if (v0)
  {
    sub_1AE9246A8();
    sub_1AE6410C0();
    sub_1AE640DD8();

  }
  else
  {
    sub_1AE640DC8();
  }
  _Block_release(*(const void **)(v2 + 32));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1AE62EB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[29] = a4;
  v5[30] = v4;
  v5[27] = a2;
  v5[28] = a3;
  v5[26] = a1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE62EBAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)();
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id *v27;
  id v28;
  uint64_t (*v29)(void);

  sub_1AE640824();
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v0 + 472) = v3;
  v4 = -1;
  v5 = -1 << v3;
  if (-(-1 << v3) < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v2 + 64);
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 248) = MEMORY[0x1E0DEE9D8];
  v8 = (_QWORD *)swift_bridgeObjectRetain();
  if (v6)
  {
    v9 = 0;
    v10 = __clz(__rbit64(v6));
    v11 = (v6 - 1) & v6;
LABEL_5:
    *(_QWORD *)(v0 + 256) = v9;
    *(_QWORD *)(v0 + 264) = v11;
    v12 = *(_QWORD *)(v8[6] + 8 * v10);
    *(_BYTE *)(v0 + 473) = *(_BYTE *)(v8[7] + v10);
    if ((v12 & 0x80000000000000) != 0)
    {
      *(_QWORD *)(v0 + 24) = 0xE300000000000000;
      v13 = (_QWORD *)(v0 + 24);
      *(_QWORD *)(v0 + 16) = 3826797;
      *(_QWORD *)(v0 + 192) = v12;
    }
    else
    {
      *(_QWORD *)(v0 + 56) = 0xE300000000000000;
      v13 = (_QWORD *)(v0 + 56);
      sub_1AE6410E0();
      *(_QWORD *)(v0 + 176) = v14;
    }
    sub_1AE926D18();
    sub_1AE4F6AC4();
    sub_1AE4F665C();
    *(_QWORD *)(v0 + 272) = *v13;
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v15;
    v16 = sub_1AE62F0EC;
LABEL_9:
    v17 = sub_1AE508740(v15, (uint64_t)v16);
    return sub_1AE62D808(v17, v18, v19);
  }
  v21 = 63 - v5;
  if ((unint64_t)(63 - v5) > 0x7F)
  {
    if (v8[9])
    {
LABEL_12:
      sub_1AE640568();
      goto LABEL_5;
    }
    if (v21 >= 0xC0)
    {
      if (v8[10])
        goto LABEL_12;
      if (v21 >= 0x100)
      {
        if (v8[11])
          goto LABEL_12;
        if (v21 >= 0x140)
        {
          if (v8[12])
            goto LABEL_12;
          sub_1AE640750();
          while (1)
          {
            sub_1AE640744();
            if (v22)
              break;
            sub_1AE640738();
            if (v23)
              goto LABEL_12;
          }
        }
      }
    }
  }
  v24 = *(_QWORD *)(v0 + 216);
  swift_release();
  *(_BYTE *)(v0 + 474) = *(_BYTE *)(v24 + 32);
  sub_1AE6404E8();
  *(_QWORD *)(v0 + 304) = v7;
  sub_1AE4F66CC();
  if (v1)
  {
    sub_1AE64080C(*(_QWORD *)(v0 + 216), 0);
    if ((v25 & 0x80000000000000) != 0)
      sub_1AE640454(v25);
    else
      sub_1AE5070A8(v25);
    sub_1AE926D18();
    sub_1AE4F6AC4();
    sub_1AE4F665C();
    sub_1AE640DE8();
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v15;
    v16 = sub_1AE62F68C;
    goto LABEL_9;
  }
  sub_1AE641098();
  *(_BYTE *)(v0 + 476) = *(_BYTE *)(v24 + 32);
  sub_1AE6404E8();
  *(_QWORD *)(v0 + 360) = v7;
  sub_1AE4F66CC();
  sub_1AE640CF8();
  *(_BYTE *)(v0 + 478) = *(_BYTE *)(v24 + 32);
  sub_1AE6404E8();
  *(_QWORD *)(v0 + 416) = v7;
  sub_1AE4F66CC();
  swift_release();
  v26 = *(_QWORD *)(v7 + 16);
  if (v26)
  {
    v27 = (id *)(v7 + 40);
    do
    {
      v28 = *v27;
      sub_1AE5533C0();
      v27 += 2;

      --v26;
    }
    while (v26);
  }
  swift_bridgeObjectRelease();
  v29 = (uint64_t (*)(void))sub_1AE5094FC();
  return sub_1AE4FC4C0(v29);
}

uint64_t sub_1AE62F0EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE505574();
  sub_1AE640974();
  *(_QWORD *)(v0 + 288) = v2;
  *(_QWORD *)(v0 + 296) = v1;
  sub_1AE640924();
  swift_bridgeObjectRelease();
  if (v1)
    sub_1AE4F9038();
  sub_1AE4F9070();
  return sub_1AE4FD190();
}

#error "1AE62F17C: call analysis failed (funcsize=331)"

uint64_t sub_1AE62F68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE505574();
  sub_1AE640974();
  *(_QWORD *)(v0 + 344) = v2;
  *(_QWORD *)(v0 + 352) = v1;
  sub_1AE640924();
  swift_bridgeObjectRelease();
  if (v1)
    sub_1AE4F9038();
  sub_1AE4F9070();
  return sub_1AE4FD190();
}

#error "1AE62F71C: call analysis failed (funcsize=233)"

uint64_t sub_1AE62FA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE505574();
  sub_1AE640974();
  *(_QWORD *)(v0 + 400) = v2;
  *(_QWORD *)(v0 + 408) = v1;
  sub_1AE640924();
  swift_bridgeObjectRelease();
  if (v1)
    sub_1AE4F9038();
  sub_1AE4F9070();
  return sub_1AE4FD190();
}

#error "1AE62FB2C: call analysis failed (funcsize=183)"

uint64_t sub_1AE62FDE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE505574();
  sub_1AE640974();
  *(_QWORD *)(v0 + 456) = v2;
  *(_QWORD *)(v0 + 464) = v1;
  sub_1AE640924();
  swift_bridgeObjectRelease();
  if (v1)
    sub_1AE4F9038();
  sub_1AE4F9070();
  return sub_1AE4FD190();
}

#error "1AE62FE74: call analysis failed (funcsize=111)"

uint64_t sub_1AE630004()
{
  uint64_t v0;

  swift_release();
  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE630030()
{
  uint64_t v0;

  swift_release();
  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE63005C()
{
  uint64_t v0;

  swift_release();
  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE630088()
{
  uint64_t v0;

  swift_release();
  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

void EntityTaggingDirectFeedback.__allocating_init(kind:tagInference:)(_BYTE *a1, char *a2)
{
  sub_1AE508160();
  EntityTaggingDirectFeedback.init(kind:tagInference:)(a1, a2);
  sub_1AE4F6624();
}

uint64_t sub_1AE6300E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE630100()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = (void *)v0[2];
  if (v1)
    v2 = sub_1AE62C42C(MEMORY[0x1E0DEE9E0], v1);
  else
    v2 = 0;
  v0[7] = v2;
  v3 = (void *)v0[3];
  if (v3)
    v4 = sub_1AE62C42C(MEMORY[0x1E0DEE9E0], v3);
  else
    v4 = 0;
  v0[8] = v4;
  v5 = (void *)v0[4];
  if (v5)
    v6 = sub_1AE62C42C(MEMORY[0x1E0DEE9E0], v5);
  else
    v6 = 0;
  v0[9] = v6;
  v7 = (void *)v0[5];
  if (v7)
    v8 = sub_1AE62C42C(MEMORY[0x1E0DEE9E0], v7);
  else
    v8 = 0;
  v0[10] = v8;
  v9 = (_QWORD *)sub_1AE4FC56C();
  v0[11] = v9;
  sub_1AE640D18(v9, (uint64_t)sub_1AE6301FC);
  return v11(v2, v4, v6, v8);
}

uint64_t sub_1AE6301FC()
{
  uint64_t v0;

  sub_1AE640824();
  sub_1AE4FD1AC();
  sub_1AE4F6648();
  sub_1AE4F665C();
  sub_1AE4F76D8();
  sub_1AE4F67AC();
  return sub_1AE4FC4C0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE6302E0(void *a1, void *a2, void *a3, void *a4, void *aBlock, void *a6)
{
  _QWORD *v6;
  id v12;
  id v13;
  id v14;
  id v15;
  _QWORD *v16;

  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  v6[7] = _Block_copy(aBlock);
  v12 = a1;
  v13 = a2;
  v14 = a3;
  v15 = a4;
  a6;
  v16 = (_QWORD *)swift_task_alloc();
  v6[8] = v16;
  *v16 = v6;
  v16[1] = sub_1AE630390;
  return sub_1AE6300E8((uint64_t)a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)a4);
}

uint64_t sub_1AE630390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD *v17;
  uint64_t (*v18)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1AE640D68();
  sub_1AE640E88();
  v13 = *(void **)(v11 + 40);
  v12 = *(void **)(v11 + 48);
  v15 = *(void **)(v11 + 24);
  v14 = *(void **)(v11 + 32);
  v16 = *(void **)(v11 + 16);
  sub_1AE614860(v17);

  if (v10)
  {
    sub_1AE9246A8();
    sub_1AE6410C0();
    sub_1AE640DD8();

  }
  else
  {
    sub_1AE640DC8();
  }
  _Block_release(*(const void **)(v11 + 56));
  sub_1AE640D00();
  return v18(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10);
}

void PersonEntityTaggingService.init()()
{
  sub_1AE4FE99C();
  __break(1u);
}

id PersonEntityTaggingService.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for PersonEntityTaggingService);
}

void PersonEntityTaggingService.EntityTagConfiguration.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for PersonEntityTaggingService.EntityTagConfiguration();
  sub_1AE501C48((uint64_t)v7.super_class, sel_init, v1, v2, v3, v4, v5, v6, v7);
  sub_1AE4FC530();
}

id PersonEntityTaggingService.EntityTagConfiguration.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for PersonEntityTaggingService.EntityTagConfiguration);
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.__allocating_init(tag:score:inferenceEventId:)()
{
  double v0;
  _BYTE *v1;
  uint64_t v2;

  sub_1AE505D9C();
  v0 = sub_1AE64077C();
  PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.init(tag:score:inferenceEventId:)(v1, v2, v0);
  sub_1AE4FC6BC();
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.init(tag:score:inferenceEventId:)(_BYTE *a1, uint64_t a2, double a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  v3[OBJC_IVAR___GDScoredPersonEntityTagInner_tag] = *a1;
  *(double *)&v3[OBJC_IVAR___GDScoredPersonEntityTagInner_score] = a3;
  *(_QWORD *)&v3[OBJC_IVAR___GDScoredPersonEntityTagInner_inferenceEventId] = a2;
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag();
  sub_1AE501C48((uint64_t)v10.super_class, sel_init, v4, v5, v6, v7, v8, v9, v10);
  sub_1AE4FC530();
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.__allocating_init(tag:score:inferenceEventIdValue:)(char *a1, uint64_t a2, double a3)
{
  id v5;
  char v6;

  v6 = *a1;
  v5 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag());
  PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.init(tag:score:inferenceEventId:)(&v6, a2, a3);
  sub_1AE4FC538();
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.__allocating_init(gdTag:score:inferenceEventIdValue:)()
{
  double v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AE505D9C();
  v0 = sub_1AE64077C();
  PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.init(gdTag:score:inferenceEventIdValue:)(v1, v2, v3, v4, v5, v6, v7, v8, v0);
  sub_1AE4FC6BC();
}

uint64_t PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.init(gdTag:score:inferenceEventIdValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _BYTE v15[7];
  char v16;

  sub_1AE6410A0(a1, a2, a3, a4, a5, a6, a7, a8, v14, *(int *)v15, *(__int16 *)&v15[4], v15[6], v16);
  sub_1AE4FEA14();
  PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.__allocating_init(tag:score:inferenceEventIdValue:)(&v16, a2, a9);
  v12 = v11;
  swift_deallocPartialClassInstance();
  return v12;
}

uint64_t PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.inferenceEventId.getter()
{
  return sub_1AE4FC898(OBJC_IVAR___GDScoredPersonEntityTagInner_inferenceEventId);
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.tag.getter(_BYTE *a1@<X8>)
{
  sub_1AE508FD8(a1);
}

void sub_1AE6306C8()
{
  sub_1AE640D48();
  sub_1AE509D68();
}

double PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___GDScoredPersonEntityTagInner_score);
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.init()()
{
  sub_1AE4FE99C();
  __break(1u);
}

id PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag);
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.__allocating_init(idValue:scoredPersonEntityTags:inferenceEventIdValue:)()
{
  uint64_t v0;

  sub_1AE50602C();
  v0 = sub_1AE640790();
  PersonEntityTaggingService.ScoreRankedPersonEntityTags.init(idValue:scoredPersonEntityTags:inferenceEventIdValue:)(v0);
  sub_1AE4F6624();
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.init(idValue:scoredPersonEntityTags:inferenceEventIdValue:)(uint64_t a1)
{
  id v1;
  uint64_t v2;

  v2 = a1;
  v1 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags());
  sub_1AE640D58(&v2);
  sub_1AE640918();
  sub_1AE6407B8();
  sub_1AE4FE870();
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.__allocating_init(id:scoredPersonEntityTags:inferenceEventId:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE50602C();
  v0 = (_QWORD *)sub_1AE640790();
  PersonEntityTaggingService.ScoreRankedPersonEntityTags.init(id:scoredPersonEntityTags:inferenceEventId:)(v0, v1, v2);
  sub_1AE4F6624();
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.init(id:scoredPersonEntityTags:inferenceEventId:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  *(_QWORD *)&v3[OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_id] = *a1;
  *(_QWORD *)&v3[OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_scoredPersonEntityTags] = a2;
  *(_QWORD *)&v3[OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_inferenceEventId] = a3;
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags();
  sub_1AE501C48((uint64_t)v10.super_class, sel_init, v4, v5, v6, v7, v8, v9, v10);
  sub_1AE4FC530();
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.id.getter(_QWORD *a1@<X8>)
{
  sub_1AE641010(a1);
}

uint64_t PersonEntityTaggingService.ScoreRankedPersonEntityTags.inferenceEventId.getter()
{
  return sub_1AE4FC898(OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_inferenceEventId);
}

uint64_t sub_1AE63088C()
{
  return sub_1AE4FC898(OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_id);
}

uint64_t PersonEntityTaggingService.ScoreRankedPersonEntityTags.scoredPersonEntityTags.getter()
{
  return sub_1AE4FDD24();
}

void PersonEntityTaggingService.ScoreRankedPersonEntityTags.init()()
{
  sub_1AE4FE99C();
  __break(1u);
}

id PersonEntityTaggingService.ScoreRankedPersonEntityTags.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags);
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.id.getter(_QWORD *a1@<X8>)
{
  sub_1AE641010(a1);
}

uint64_t PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.inferenceEventId.getter()
{
  return sub_1AE4FC898(OBJC_IVAR___GDScoredPersonInner_inferenceEventId);
}

uint64_t sub_1AE63095C()
{
  return sub_1AE4FC898(OBJC_IVAR___GDScoredPersonInner_id);
}

double PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___GDScoredPersonInner_score);
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.__allocating_init(id:score:inferenceEventId:)()
{
  double v0;
  _QWORD *v1;
  uint64_t v2;

  sub_1AE505D9C();
  v0 = sub_1AE64077C();
  PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.init(id:score:inferenceEventId:)(v1, v2, v0);
  sub_1AE4FC6BC();
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.init(id:score:inferenceEventId:)(_QWORD *a1, uint64_t a2, double a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  *(_QWORD *)&v3[OBJC_IVAR___GDScoredPersonInner_id] = *a1;
  *(double *)&v3[OBJC_IVAR___GDScoredPersonInner_score] = a3;
  *(_QWORD *)&v3[OBJC_IVAR___GDScoredPersonInner_inferenceEventId] = a2;
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson();
  sub_1AE501C48((uint64_t)v10.super_class, sel_init, v4, v5, v6, v7, v8, v9, v10);
  sub_1AE4FC530();
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.__allocating_init(idValue:score:inferenceEventIdValue:)()
{
  double v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE505D9C();
  v0 = sub_1AE64077C();
  PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.init(idValue:score:inferenceEventIdValue:)(v1, v2, v0);
  sub_1AE4FC6BC();
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.init(idValue:score:inferenceEventIdValue:)(uint64_t a1, uint64_t a2, double a3)
{
  id v5;
  uint64_t v6;

  v6 = a1;
  v5 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson());
  PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.init(id:score:inferenceEventId:)(&v6, a2, a3);
  sub_1AE640918();
  sub_1AE6407B8();
  sub_1AE4FC538();
}

id PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.__allocating_init()()
{
  return objc_msgSend(sub_1AE508160(), sel_init);
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.init()()
{
  sub_1AE4FE99C();
  __break(1u);
}

id PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson);
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.__allocating_init(tag:scoredEntities:inferenceEventId:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE50602C();
  v0 = (_BYTE *)sub_1AE640790();
  PersonEntityTaggingService.ScoreRankedEntityTagPersons.init(tag:scoredEntities:inferenceEventId:)(v0, v1, v2);
  sub_1AE4F6624();
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.init(tag:scoredEntities:inferenceEventId:)(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  v3[OBJC_IVAR___GDScoreRankedEntityTagPersonsInner_tag] = *a1;
  *(_QWORD *)&v3[OBJC_IVAR___GDScoreRankedEntityTagPersonsInner_scoredEntities] = a2;
  *(_QWORD *)&v3[OBJC_IVAR___GDScoreRankedEntityTagPersonsInner_inferenceEventId] = a3;
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons();
  sub_1AE501C48((uint64_t)v10.super_class, sel_init, v4, v5, v6, v7, v8, v9, v10);
  sub_1AE4FC530();
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.__allocating_init(gdTag:scoredEntities:inferenceEventIdValue:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1AE50602C();
  v0 = sub_1AE640790();
  PersonEntityTaggingService.ScoreRankedEntityTagPersons.init(gdTag:scoredEntities:inferenceEventIdValue:)(v0, v1, v2, v3, v4, v5, v6, v7);
  sub_1AE4F6624();
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.init(gdTag:scoredEntities:inferenceEventIdValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v10;
  uint64_t v11;
  _BYTE v12[7];
  char v13;

  sub_1AE6410A0(a1, a2, a3, a4, a5, a6, a7, a8, v11, *(int *)v12, *(__int16 *)&v12[4], v12[6], v13);
  v10 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons());
  PersonEntityTaggingService.ScoreRankedEntityTagPersons.init(tag:scoredEntities:inferenceEventId:)(&v13, a2, a3);
  sub_1AE640918();
  sub_1AE6407B8();
  sub_1AE4FE870();
}

void sub_1AE630C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void), void (*a7)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;

  a6();
  v10 = sub_1AE9261CC();
  a7(a3, v10, a5);
  sub_1AE4FCDD0();
}

uint64_t PersonEntityTaggingService.ScoreRankedEntityTagPersons.inferenceEventId.getter()
{
  return sub_1AE4FC898(OBJC_IVAR___GDScoreRankedEntityTagPersonsInner_inferenceEventId);
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.tag.getter(_BYTE *a1@<X8>)
{
  sub_1AE508FD8(a1);
}

void sub_1AE630CCC()
{
  sub_1AE640D48();
  sub_1AE509D68();
}

id sub_1AE630D04(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(void))
{
  void *v5;

  a3();
  a4();
  v5 = (void *)sub_1AE9261C0();
  sub_1AE4F9038();
  return v5;
}

uint64_t PersonEntityTaggingService.ScoreRankedEntityTagPersons.scoredEntities.getter()
{
  return sub_1AE4FDD24();
}

void PersonEntityTaggingService.ScoreRankedEntityTagPersons.init()()
{
  sub_1AE4FE99C();
  __break(1u);
}

id PersonEntityTaggingService.ScoreRankedEntityTagPersons.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons);
}

id sub_1AE630DBC()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  id result;
  objc_super v4;

  sub_1AE62B630();
  v0 = sub_1AE925C98();
  v1 = (objc_class *)type metadata accessor for PersonEntityTaggingService.PersonEntityTaggingOptions();
  v2 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v2[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds] = v0;
  v4.receiver = v2;
  v4.super_class = v1;
  result = objc_msgSendSuper2(&v4, sel_init);
  qword_1EED9E620 = (uint64_t)result;
  return result;
}

void PersonEntityTaggingService.PersonEntityTaggingOptions.__allocating_init(tagThresholds:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  v3 = (char *)sub_1AE508160();
  *(_QWORD *)&v3[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds] = a1;
  v10.receiver = v3;
  v10.super_class = v1;
  sub_1AE501C48((uint64_t)v3, sel_init, v4, v5, v6, v7, v8, v9, v10);
  sub_1AE509D68();
}

id static PersonEntityTaggingService.PersonEntityTaggingOptions.defaultPersonTaggingOptions.getter()
{
  if (qword_1EED997D8 != -1)
    swift_once();
  return (id)qword_1EED9E620;
}

void PersonEntityTaggingService.PersonEntityTaggingOptions.__allocating_init(tagNameThresholds:)(uint64_t a1)
{
  sub_1AE508160();
  PersonEntityTaggingService.PersonEntityTaggingOptions.init(tagNameThresholds:)(a1);
  sub_1AE4F6664();
}

void PersonEntityTaggingService.PersonEntityTaggingOptions.init(tagNameThresholds:)(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  objc_super v7;
  uint64_t v8;

  sub_1AE62B630();
  v3 = v1;
  v8 = sub_1AE925C98();
  sub_1AE62C704(a1, (void (*)(uint64_t, uint64_t, double))sub_1AE6347E4);
  sub_1AE4F81B8();

  v4 = v8;
  v5 = (objc_class *)type metadata accessor for PersonEntityTaggingService.PersonEntityTaggingOptions();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds] = v4;
  v7.receiver = v6;
  v7.super_class = v5;
  sub_1AE4F66CC();
  objc_msgSendSuper2(&v7, sel_init);
  sub_1AE640918();
  swift_deallocPartialClassInstance();
  swift_bridgeObjectRelease();
  sub_1AE640FB0();
}

uint64_t sub_1AE630FBC(uint64_t a1, void *a2)
{
  Swift::String v4;
  uint64_t result;
  unsigned __int8 v6;

  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  PersonEntityTagType.init(rawValue:)(v4);
  result = v6;
  if (v6 != 30)
    return sub_1AE6550EC(v6);
  return result;
}

void PersonEntityTaggingService.PersonEntityTaggingOptions.init(tagThresholds:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds] = a1;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for PersonEntityTaggingService.PersonEntityTaggingOptions();
  sub_1AE501C48((uint64_t)v8.super_class, sel_init, v2, v3, v4, v5, v6, v7, v8);
  sub_1AE4FC530();
}

uint64_t sub_1AE6310A0()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_1AE631104(v0);
}

void sub_1AE6310C8()
{
  sub_1AE4F9094();
  swift_bridgeObjectRetain();
  sub_1AE4FC538();
}

uint64_t sub_1AE631104(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1AE631154())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

void sub_1AE6311F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F9094();
  v0 = sub_1AE4FB75C();
  sub_1AE62BBE4(v0);
  v2 = v1;
  sub_1AE4F6648();
  sub_1AE62C04C(v2, &qword_1EED94790, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1AE63937C);
}

void PersonEntityTaggingService.PersonEntityTaggingOptions.init()()
{
  sub_1AE4FE99C();
  __break(1u);
}

id PersonEntityTaggingService.PersonEntityTaggingOptions.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for PersonEntityTaggingService.PersonEntityTaggingOptions);
}

double static EntityTaggingService.currentVersion.getter()
{
  return 1.0;
}

uint64_t EntityTaggingService.__allocating_init(config:)()
{
  uint64_t v0;

  v0 = sub_1AE640890();
  EntityTaggingService.init(config:)();
  return v0;
}

_QWORD *EntityTaggingService.init(config:)()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(id, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v19[2];

  v2 = v0;
  v19[1] = *(id *)MEMORY[0x1E0C80C00];
  if (qword_1ED31C9B0 != -1)
    swift_once();
  v3 = qword_1ED31C9A0;
  v4 = *(void **)(qword_1ED31C9A0 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  v5 = (void *)sub_1AE640B44();
  v19[0] = 0;
  v6 = objc_msgSend(v4, sel_requestAssertionForViewName_error_, v5, v19);

  v7 = v19[0];
  if (v6)
  {
    v8 = *(_QWORD **)(v3 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    v9 = v8[5];
    v10 = v8[6];
    sub_1AE4F9858(v8 + 2, v9);
    v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 8);
    v12 = v7;
    v13 = v11(v6, v9, v10);
    if (!v1)
    {
      v2[2] = v6;
      v2[3] = v13;
      sub_1AE64115C();
      v2[4] = v15;
      v2[5] = v16;
      sub_1AE641148();
      sub_1AE640F08(v17);
      return v2;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    v14 = v19[0];
    sub_1AE507554();

    swift_willThrow();
  }
  type metadata accessor for EntityTaggingService();
  sub_1AE640BF4();
  return v2;
}

void EntityTaggingService.__allocating_init(etConfig:viewService:)(void *a1, char *a2)
{
  sub_1AE640890();
  EntityTaggingService.init(etConfig:viewService:)(a1, a2);
  sub_1AE5035EC();
}

_QWORD *EntityTaggingService.init(etConfig:viewService:)(void *a1, char *a2)
{
  _QWORD *v2;
  void *v3;
  _QWORD *v4;
  void *v7;
  void *v8;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(id, uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v24;
  id v25[2];

  v4 = v2;
  v25[1] = *(id *)MEMORY[0x1E0C80C00];
  v7 = *(void **)&a2[OBJC_IVAR___GDSwiftViewService_accessRequester];
  v8 = (void *)sub_1AE640B44();
  v25[0] = 0;
  v9 = objc_msgSend(v7, sel_requestAssertionForViewName_error_, v8, v25);

  v10 = v25[0];
  if (v9)
  {
    v24 = a1;
    v11 = *(_QWORD **)&a2[OBJC_IVAR___GDSwiftViewService_databaseCache];
    v12 = v11[5];
    v13 = v11[6];
    sub_1AE4F9858(v11 + 2, v12);
    v14 = *(uint64_t (**)(id, uint64_t, uint64_t))(v13 + 8);
    v15 = v10;
    swift_retain();
    v16 = v14(v9, v12, v13);
    if (!v3)
    {
      v19 = v16;
      v20 = v17;

      swift_release();
      v4[2] = v9;
      v4[3] = v19;
      sub_1AE64115C();
      v4[4] = v20;
      v4[5] = v21;
      sub_1AE641148();
      sub_1AE640F08(v22);
      return v4;
    }

    swift_release();
    sub_1AE4F8214();
    a1 = v24;
  }
  else
  {
    v18 = v25[0];
    sub_1AE507554();

    swift_willThrow();
  }

  type metadata accessor for EntityTaggingService();
  sub_1AE640BF4();
  return v4;
}

uint64_t sub_1AE631698(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[6] = a3;
  v5[7] = v4;
  v5[4] = a1;
  v5[5] = a2;
  v5[8] = *a4;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE6316B4()
{
  _QWORD *v0;
  uint64_t v1;
  objc_class *v2;
  char *v3;
  id v4;
  _QWORD *v5;

  v1 = v0[8];
  if (v1)
  {
    v2 = (objc_class *)type metadata accessor for PersonEntityTaggingService.PersonEntityTaggingOptions();
    v3 = (char *)objc_allocWithZone(v2);
    *(_QWORD *)&v3[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds] = v1;
    v0[2] = v3;
    v0[3] = v2;
    sub_1AE4F66CC();
    v4 = sub_1AE64113C();
  }
  else
  {
    v4 = 0;
  }
  v0[9] = v4;
  v5 = (_QWORD *)swift_task_alloc();
  v0[10] = v5;
  *v5 = v0;
  v5[1] = sub_1AE631758;
  return sub_1AE631934(v0[5], v0[6], (uint64_t)v4);
}

uint64_t sub_1AE631758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE640DA8();
  sub_1AE640CE8();
  *(_QWORD *)(v2 + 88) = v1;
  *(_QWORD *)(v2 + 96) = v0;
  sub_1AE640924();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

void sub_1AE6317A4()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v18;

  v1 = *(_QWORD *)(v0[11] + OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_scoredPersonEntityTags);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1AE4FB75C();
    if (v2)
      goto LABEL_3;
LABEL_12:
    v12 = (void *)v0[9];
    sub_1AE4F6648();

    v4 = MEMORY[0x1E0DEE9D8];
LABEL_13:
    v13 = (char *)v0[11];
    v14 = (_QWORD *)v0[4];
    v15 = *(_QWORD *)&v13[OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_id];
    v16 = *(_QWORD *)&v13[OBJC_IVAR___GDScoreRankedPersonEntityTagsInner_inferenceEventId];

    *v14 = v15;
    v14[1] = v4;
    v14[2] = v16;
    v17 = (uint64_t (*)(void))sub_1AE5094FC();
    sub_1AE6405C0(v17);
    return;
  }
  sub_1AE4FB75C();
  v2 = sub_1AE505584();
  if (!v2)
    goto LABEL_12;
LABEL_3:
  sub_1AE640F50();
  sub_1AE521D58();
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = 0;
    v4 = v18;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        sub_1AE641068();
      v5 = sub_1AE6410A8();
      v6 = v5[OBJC_IVAR___GDScoredPersonEntityTagInner_tag];
      v7 = *(_QWORD *)&v5[OBJC_IVAR___GDScoredPersonEntityTagInner_score];

      v9 = *(_QWORD *)(v18 + 16);
      v8 = *(_QWORD *)(v18 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1AE640EA8(v8);
        sub_1AE521D58();
      }
      ++v3;
      *(_QWORD *)(v18 + 16) = v9 + 1;
      v10 = v18 + 16 * v9;
      *(_BYTE *)(v10 + 32) = v6;
      *(_QWORD *)(v10 + 40) = v7;
    }
    while (v2 != v3);
    v11 = (void *)v0[9];
    sub_1AE4F6648();

    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1AE631908()
{
  uint64_t v0;

  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE631934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  return sub_1AE4FECB0();
}

void sub_1AE631948()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27[3];

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  sub_1AE4F66CC();
  EntityIdentifier.init(_:)(v1, v2, (uint64_t)v27);
  if ((v27[1] & 1) == 0)
  {
    v3 = (_OWORD *)(v0 + 16);
    v4 = v27[0];
    v5 = *(void **)(v0 + 112);
    if (v5)
    {
      v6 = *(char **)(v0 + 112);
    }
    else
    {
      if (qword_1EED997D8 == -1)
      {
        v5 = 0;
      }
      else
      {
        swift_once();
        v5 = *(void **)(v0 + 112);
      }
      v6 = (char *)(id)qword_1EED9E620;
    }
    v7 = *(_QWORD *)(v0 + 120);
    v9 = *(_OWORD *)(v7 + 32);
    v8 = *(_OWORD *)(v7 + 48);
    v10 = *(_OWORD *)(v7 + 16);
    *(_QWORD *)(v0 + 64) = *(_QWORD *)(v7 + 64);
    *(_OWORD *)(v0 + 32) = v9;
    *(_OWORD *)(v0 + 48) = v8;
    *v3 = v10;
    sub_1AE4FEA14();
    v11 = swift_task_alloc();
    *(_QWORD *)(v11 + 16) = v3;
    *(_QWORD *)(v11 + 24) = v4;
    v12 = v5;
    sub_1AE501548((uint64_t *)&unk_1EED9E738);
    sub_1AE924CCC();
    swift_task_dealloc();
    v14 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 80);
    v15 = *(_BYTE *)(v0 + 88);
    v16 = (uint64_t *)&v6[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds];
    sub_1AE4F9094();
    v17 = *v16;
    sub_1AE4F6A24();
    v18 = sub_1AE4FB930();
    v19 = sub_1AE62BDBC(v18, v17, v14, v13, v15);
    sub_1AE4F66E8();
    sub_1AE4F6728();
    if (v19 < 0 || (v19 & 0x4000000000000000) != 0)
    {
      sub_1AE4F6708();
      sub_1AE592340();
      v20 = v26;
      sub_1AE4F76D8();
    }
    else
    {
      v20 = v19 & 0xFFFFFFFFFFFFFF8;
      sub_1AE4F6708();
    }
    v27[0] = v20;
    sub_1AE62C884(v27);
    sub_1AE4F76D8();
    v27[0] = v4;
    v21 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags());
    sub_1AE641074();
    sub_1AE64108C();
    PersonEntityTaggingService.ScoreRankedPersonEntityTags.init(id:scoredPersonEntityTags:inferenceEventId:)(v22, v23, v24);
    sub_1AE50A24C();

    sub_1AE6217B4();
    __asm { BR              X1 }
  }
  v27[0] = 0;
  v27[1] = 0xE000000000000000;
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  strcpy((char *)v27, "Identifier: ");
  BYTE5(v27[1]) = 0;
  HIWORD(v27[1]) = -5120;
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE6411CC();
  sub_1AE6217B4();
}

uint64_t sub_1AE631C30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return sub_1AE4FECB0();
}

void sub_1AE631C44()
{
  uint64_t v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  objc_class *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v1 = *(void **)(v0 + 128);
  if (v1)
  {
    v2 = *(char **)(v0 + 128);
  }
  else
  {
    if (qword_1EED997D8 == -1)
    {
      v1 = 0;
    }
    else
    {
      swift_once();
      v1 = *(void **)(v0 + 128);
    }
    v2 = (char *)(id)qword_1EED9E620;
  }
  v3 = *(_QWORD *)(v0 + 120);
  v4 = type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags();
  v5 = v1;
  v32 = (objc_class *)v4;
  v6 = sub_1AE925C98();
  v7 = *(_QWORD *)(v3 + 16);
  if (v7)
  {
    v31 = v0 + 16;
    v8 = *(_QWORD *)(v0 + 120);
    v30 = *(_QWORD *)(v0 + 136) + 16;
    v28 = v2;
    v9 = (uint64_t *)&v2[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds];
    sub_1AE4FB75C();
    sub_1AE4F9094();
    v10 = (unint64_t *)(v8 + 40);
    v29 = v0;
    do
    {
      v12 = *(v10 - 1);
      v11 = *v10;
      sub_1AE4F6A24();
      EntityIdentifier.init(_:)(v12, v11, (uint64_t)&v35);
      if ((v36 & 1) == 0)
      {
        v13 = v35;
        v14 = *(_OWORD *)v30;
        v15 = *(_OWORD *)(v30 + 16);
        v16 = *(_OWORD *)(v30 + 32);
        *(_QWORD *)(v31 + 48) = *(_QWORD *)(v30 + 48);
        *(_OWORD *)(v31 + 16) = v15;
        *(_OWORD *)(v31 + 32) = v16;
        *(_OWORD *)v31 = v14;
        sub_1AE4FEA14();
        v17 = swift_task_alloc();
        *(_QWORD *)(v17 + 16) = v31;
        *(_QWORD *)(v17 + 24) = v13;
        v33 = v13;
        sub_1AE501548((uint64_t *)&unk_1EED9E738);
        sub_1AE924CCC();
        v34 = v6;
        swift_task_dealloc();
        v19 = *(_QWORD *)(v0 + 96);
        v18 = *(_QWORD *)(v0 + 104);
        v20 = *(_BYTE *)(v0 + 112);
        v21 = *v9;
        sub_1AE4F6A24();
        v22 = sub_1AE4F6804();
        v23 = sub_1AE62BDBC(v22, v21, v19, v18, v20);
        sub_1AE4F67AC();
        sub_1AE4F6728();
        if (v23 < 0 || (v23 & 0x4000000000000000) != 0)
        {
          sub_1AE4FB930();
          sub_1AE592340();
          v24 = v26;
          sub_1AE4F66E8();
        }
        else
        {
          v24 = v23 & 0xFFFFFFFFFFFFFF8;
          sub_1AE4FB930();
        }
        v35 = v24;
        sub_1AE62C884(&v35);
        v0 = v29;
        sub_1AE4F66E8();
        v35 = v33;
        v25 = objc_allocWithZone(v32);
        sub_1AE640D58(&v35);
        sub_1AE6410B4();
        v35 = v34;
        sub_1AE53A9D0();
        v6 = v35;
        sub_1AE4F6648();
      }
      swift_bridgeObjectRelease();
      v10 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    v2 = v28;
  }

  sub_1AE640E14();
  __asm { BR              X1 }
}

uint64_t sub_1AE631F5C(uint64_t a1, _BYTE *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = v3;
  *(_BYTE *)(v4 + 89) = *a2;
  *(_QWORD *)(v4 + 48) = *a3;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE631F7C()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *v2;
  char *v3;
  id v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  if (v1)
  {
    v2 = (objc_class *)type metadata accessor for PersonEntityTaggingService.PersonEntityTaggingOptions();
    v3 = (char *)objc_allocWithZone(v2);
    *(_QWORD *)&v3[OBJC_IVAR___GDPersonEntityTaggingOptionsInner_tagThresholds] = v1;
    *(_QWORD *)(v0 + 16) = v3;
    *(_QWORD *)(v0 + 24) = v2;
    sub_1AE4F66CC();
    v4 = sub_1AE64113C();
  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)(v0 + 56) = v4;
  *(_BYTE *)(v0 + 88) = *(_BYTE *)(v0 + 89);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = sub_1AE632028;
  return sub_1AE632218((_BYTE *)(v0 + 88), (uint64_t)v4);
}

uint64_t sub_1AE632028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE640DA8();
  sub_1AE640CE8();
  *(_QWORD *)(v2 + 72) = v1;
  *(_QWORD *)(v2 + 80) = v0;
  sub_1AE640924();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

void sub_1AE632074()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  void *v12;
  void *v13;
  _BYTE *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  _QWORD *v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0[9] + OBJC_IVAR___GDScoreRankedEntityTagPersonsInner_scoredEntities);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1AE4FB75C();
    if (v2)
      goto LABEL_3;
LABEL_12:
    v13 = (void *)v0[7];
    sub_1AE4F6648();

    v4 = MEMORY[0x1E0DEE9D8];
LABEL_13:
    v14 = (_BYTE *)v0[9];
    v15 = v0[4];
    v16 = v14[OBJC_IVAR___GDScoreRankedEntityTagPersonsInner_tag];
    v17 = *(_QWORD *)&v14[OBJC_IVAR___GDScoreRankedEntityTagPersonsInner_inferenceEventId];

    *(_BYTE *)v15 = v16;
    *(_QWORD *)(v15 + 8) = v4;
    *(_QWORD *)(v15 + 16) = v17;
    v18 = (uint64_t (*)(void))sub_1AE5094FC();
    sub_1AE6405C0(v18);
    return;
  }
  sub_1AE4FB75C();
  v2 = sub_1AE505584();
  if (!v2)
    goto LABEL_12;
LABEL_3:
  sub_1AE640F50();
  sub_1AE521D8C();
  if ((v2 & 0x8000000000000000) == 0)
  {
    v19 = v0;
    v3 = 0;
    v4 = v20;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        sub_1AE641068();
      v5 = (char *)sub_1AE6410A8();
      v6 = *(_QWORD *)&v5[OBJC_IVAR___GDScoredPersonInner_id];
      v7 = *(_QWORD *)&v5[OBJC_IVAR___GDScoredPersonInner_score];
      v8 = *(_QWORD *)&v5[OBJC_IVAR___GDScoredPersonInner_inferenceEventId];

      v10 = *(_QWORD *)(v20 + 16);
      v9 = *(_QWORD *)(v20 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1AE640EA8(v9);
        sub_1AE521D8C();
      }
      *(_QWORD *)(v20 + 16) = v10 + 1;
      v11 = (_QWORD *)(v20 + 24 * v10);
      v11[4] = v6;
      ++v3;
      v11[5] = v7;
      v11[6] = v8;
    }
    while (v2 != v3);
    v0 = v19;
    v12 = (void *)v19[7];
    sub_1AE4F6648();

    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1AE6321EC()
{
  uint64_t v0;

  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE632218(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 88) = a2;
  *(_QWORD *)(v3 + 96) = v2;
  *(_BYTE *)(v3 + 104) = *a1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE632230()
{
  uint64_t v0;
  void *v1;
  id v2;
  unsigned __int8 v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unsigned __int8 v9;
  _BYTE v10[9];

  v1 = *(void **)(v0 + 88);
  if (v1)
  {
    v2 = *(id *)(v0 + 88);
  }
  else
  {
    if (qword_1EED997D8 == -1)
    {
      v1 = 0;
    }
    else
    {
      swift_once();
      v1 = *(void **)(v0 + 88);
    }
    v2 = (id)qword_1EED9E620;
  }
  v3 = *(_BYTE *)(v0 + 104);
  memcpy((void *)(v0 + 16), (const void *)(*(_QWORD *)(v0 + 96) + 16), 0x48uLL);
  v9 = v3;
  v4 = v1;
  v5 = sub_1AE64E23C(&v9, (uint64_t)v2);
  if (v5)
    v6 = v5;
  else
    v6 = MEMORY[0x1E0DEE9D8];
  v10[0] = *(_BYTE *)(v0 + 104);
  v7 = objc_allocWithZone((Class)type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons());
  sub_1AE640E30(v10);
  sub_1AE501AD4();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_1AE632348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE63235C()
{
  uint64_t v0;
  _QWORD *v1;

  PersonEntityTagType.init(gdTagType:)((_BYTE *)(v0 + 56));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_1AE6323B0;
  return sub_1AE640A7C((_BYTE *)(v0 + 56), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1AE6323B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (!v1)
    return sub_1AE4FE914(a1, *(uint64_t (**)(void))(v4 + 8));
  sub_1AE4F9070();
  return sub_1AE4FD190();
}

uint64_t sub_1AE632410()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AE63241C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return sub_1AE4FECB0();
}

void sub_1AE632430()
{
  _QWORD *v0;
  void *v1;
  id v2;
  uint64_t v3;
  objc_class *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned __int8 v10;
  id v11;
  unsigned __int8 v13[16];

  v1 = (void *)v0[12];
  if (v1)
  {
    v2 = (id)v0[12];
  }
  else
  {
    if (qword_1EED997D8 == -1)
    {
      v1 = 0;
    }
    else
    {
      swift_once();
      v1 = (void *)v0[12];
    }
    v2 = (id)qword_1EED9E620;
  }
  v3 = v0[11];
  v4 = (objc_class *)type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons();
  sub_1AE62B630();
  v5 = v1;
  v6 = sub_1AE925C98();
  v7 = *(_QWORD *)(v3 + 16);
  if (v7)
  {
    v8 = v0[11];
    memcpy(v0 + 2, (const void *)(v0[13] + 16), 0x48uLL);
    v9 = (unsigned __int8 *)(v8 + 32);
    sub_1AE4F66CC();
    do
    {
      v10 = *v9++;
      v13[0] = v10;
      sub_1AE64E23C(v13, (uint64_t)v2);
      v13[0] = v10;
      v11 = objc_allocWithZone(v4);
      sub_1AE640E30(v13);
      sub_1AE6410B4();
      *(_QWORD *)v13 = v6;
      sub_1AE53A9DC();
      v6 = *(_QWORD *)v13;
      swift_bridgeObjectRelease();
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }

  sub_1AE4FBB68();
  __asm { BR              X1 }
}

uint64_t sub_1AE6325E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_1AE4FECB0();
}

void sub_1AE6325F4()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  _BYTE *v8;
  char v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0[2];
  if (v1 >> 62)
  {
    sub_1AE4F6708();
    v2 = sub_1AE505584();
    sub_1AE4F76D8();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
  {
LABEL_15:
    v0[5] = v3;
    v11 = (_QWORD *)swift_task_alloc();
    v0[6] = v11;
    *v11 = v0;
    v11[1] = sub_1AE632778;
    sub_1AE4FBB68();
    sub_1AE63241C(v12, v13);
    return;
  }
  v15 = MEMORY[0x1E0DEE9D8];
  sub_1AE521CC4();
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v3 = v15;
    v5 = v1 & 0xC000000000000001;
    v14 = v0[2] + 32;
    do
    {
      if (v5)
        v6 = (id)MEMORY[0x1AF453B80](v4, v0[2]);
      else
        v6 = *(id *)(v14 + 8 * v4);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_integerValue);

      if ((unint64_t)(v8 - 1) > 0x19)
        v9 = 0;
      else
        v9 = byte_1AE94743A[(_QWORD)(v8 - 1)];
      v10 = *(_QWORD *)(v15 + 16);
      if (v10 >= *(_QWORD *)(v15 + 24) >> 1)
        sub_1AE521CC4();
      ++v4;
      *(_QWORD *)(v15 + 16) = v10 + 1;
      *(_BYTE *)(v15 + v10 + 32) = v9;
    }
    while (v2 != v4);
    goto LABEL_15;
  }
  __break(1u);
}

uint64_t sub_1AE632778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE640DA8();
  sub_1AE640CE8();
  *(_QWORD *)(v3 + 56) = v2;
  sub_1AE640924();
  sub_1AE4F6648();
  if (v0)
    return (*(uint64_t (**)(void))(v1 + 8))();
  sub_1AE4F9070();
  return sub_1AE4FD190();
}

void sub_1AE6327D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  char v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  id v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;

  v1 = *(_QWORD *)(v0 + 56);
  sub_1AE53F468(0, (unint64_t *)&qword_1ED318F50);
  v58 = type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons();
  v57 = sub_1AE63E3E4();
  v2 = sub_1AE925C98();
  v59 = v1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(v1 + 64);
  v60 = (unint64_t)(63 - v4) >> 6;
  sub_1AE4FB75C();
  v6 = 0;
LABEL_4:
  while (2)
  {
    v7 = v2 & 0xC000000000000001;
    if (v2 < 0)
      v8 = v2;
    else
      v8 = v2 & 0xFFFFFFFFFFFFFF8;
    if (v5)
    {
LABEL_8:
      sub_1AE640C68();
      goto LABEL_32;
    }
    while (1)
    {
      v10 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }
      if (v10 >= v60)
        goto LABEL_55;
      ++v6;
      if (!*(_QWORD *)(v59 + 8 * v10))
      {
        v6 = v10 + 1;
        sub_1AE640C44();
        if (v11 == v12)
          goto LABEL_55;
        sub_1AE640C28();
        if (!v14)
        {
          v6 = v13 + 2;
          sub_1AE640C44();
          if (v11 == v12)
            goto LABEL_55;
          sub_1AE640C28();
          if (!v16)
          {
            v6 = v15 + 3;
            sub_1AE640C44();
            if (v11 == v12)
              goto LABEL_55;
            sub_1AE640C28();
            if (!v18)
            {
              v6 = v17 + 4;
              sub_1AE640C44();
              if (v11 == v12)
                goto LABEL_55;
              sub_1AE640C28();
              if (!v20)
              {
                v21 = v19 + 5;
                if (v21 >= v60)
                {
LABEL_55:
                  swift_release();
                  sub_1AE4F9038();
                  (*(void (**)(uint64_t))(v61 + 8))(v2);
                  return;
                }
                if (!*(_QWORD *)(v59 + 8 * v21))
                {
                  while (1)
                  {
                    v6 = v21 + 1;
                    if (__OFADD__(v21, 1))
                      break;
                    sub_1AE640C44();
                    if (v11 == v12)
                      goto LABEL_55;
                    sub_1AE640C28();
                    v21 = v22 + 1;
                    if (v23)
                      goto LABEL_31;
                  }
LABEL_60:
                  __break(1u);
LABEL_61:
                  __break(1u);
                  goto LABEL_62;
                }
                v6 = v21;
              }
            }
          }
        }
      }
LABEL_31:
      sub_1AE50747C();
      v5 = v25 & v24;
      v9 = v26 + (v6 << 6);
LABEL_32:
      v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, qword_1AE947458[*(char *)(*(_QWORD *)(v1 + 48) + v9)], v57, v58);
      if (*(_QWORD *)(v1 + 16))
      {
        v28 = sub_1AE5373F8();
        if ((v29 & 1) != 0)
          break;
      }
      if (v7)
      {
        v30 = v27;
        sub_1AE4F67A4();
        v31 = sub_1AE926A90();

        if (!v31)
        {
          sub_1AE4F6728();
          goto LABEL_38;
        }
        sub_1AE4F8284();
        v46 = sub_1AE926A84();
        v47 = sub_1AE6352B0(v8, v46);
        swift_retain();
        sub_1AE53741C();
        v49 = v48;
        v51 = v50;
        swift_release();
        if ((v51 & 1) != 0)
        {

          v52 = *(void **)(*(_QWORD *)(v47 + 56) + 8 * v49);
          sub_1AE641118();

          sub_1AE4F6728();
          v2 = v47;
          goto LABEL_4;
        }
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      sub_1AE4F67A4();
      sub_1AE640C08();
      v33 = v32;
      v35 = v34;
      sub_1AE4F6728();
      if ((v35 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        sub_1AE501548(&qword_1EED9E750);
        sub_1AE926A54();

        v53 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v33);
        sub_1AE641118();

        goto LABEL_54;
      }
LABEL_38:

      if (v5)
        goto LABEL_8;
    }
    v36 = *(id *)(*(_QWORD *)(v1 + 56) + 8 * v28);
    if (!v7)
      goto LABEL_43;
    v37 = sub_1AE926A84();
    if (__OFADD__(v37, 1))
      goto LABEL_61;
    v2 = sub_1AE6352B0(v8, v37 + 1);
LABEL_43:
    v38 = v36;
    swift_isUniquelyReferenced_nonNull_native();
    sub_1AE640C08();
    if (__OFADD__(*(_QWORD *)(v2 + 16), (v40 & 1) == 0))
      goto LABEL_58;
    v41 = v39;
    v42 = v40;
    sub_1AE501548(&qword_1EED9E750);
    if ((sub_1AE926A54() & 1) == 0)
      goto LABEL_47;
    sub_1AE640C08();
    if ((v42 & 1) != (v44 & 1))
    {
      sub_1AE926DE4();
      return;
    }
    v41 = v43;
LABEL_47:
    if ((v42 & 1) != 0)
    {
      v45 = *(_QWORD *)(v2 + 56);

      *(_QWORD *)(v45 + 8 * v41) = v38;
LABEL_54:

      swift_bridgeObjectRelease();
      continue;
    }
    break;
  }
  *(_QWORD *)(v2 + 8 * (v41 >> 6) + 64) |= 1 << v41;
  *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v41) = v27;
  *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v41) = v36;
  v54 = *(_QWORD *)(v2 + 16);
  v12 = __OFADD__(v54, 1);
  v55 = v54 + 1;
  if (!v12)
  {
    *(_QWORD *)(v2 + 16) = v55;
    v56 = v27;
    goto LABEL_54;
  }
LABEL_62:
  __break(1u);
}

void EntityTaggingService.deinit()
{
  sub_1AE640B78();
  sub_1AE4F76D8();
  sub_1AE4F81B8();
  swift_unknownObjectRelease();
  sub_1AE50327C();
  sub_1AE4FCDD0();
}

uint64_t EntityTaggingService.__deallocating_deinit()
{
  sub_1AE640B78();
  sub_1AE4F76D8();
  sub_1AE4F81B8();
  swift_unknownObjectRelease();
  sub_1AE50327C();
  return swift_deallocClassInstance();
}

void EntityTaggingService.RankedPersonEntityTags.ScoredPersonEntityTagType.tag.getter(_BYTE *a1@<X8>)
{
  sub_1AE508FD8(a1);
}

double EntityTaggingService.RankedPersonEntityTags.ScoredPersonEntityTagType.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void EntityTaggingService.RankedPersonEntityTags.id.getter(_QWORD *a1@<X8>)
{
  sub_1AE641010(a1);
}

uint64_t EntityTaggingService.RankedPersonEntityTags.scoredPersonEntityTags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EntityTaggingService.RankedPersonEntityTags.inferenceEventId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1AE632D14()
{
  uint64_t result;

  sub_1AE62B630();
  result = sub_1AE925C98();
  qword_1EED9E628 = result;
  return result;
}

IntelligencePlatform::EntityTaggingService::PersonTaggingOptions __swiftcall EntityTaggingService.PersonTaggingOptions.init(tagThresholds:)(IntelligencePlatform::EntityTaggingService::PersonTaggingOptions tagThresholds)
{
  IntelligencePlatform::EntityTaggingService::PersonTaggingOptions *v1;

  v1->tagThresholds._rawValue = tagThresholds.tagThresholds._rawValue;
  return tagThresholds;
}

uint64_t static EntityTaggingService.PersonTaggingOptions.defaultPersonTaggingOptions.getter@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1EED997E0 != -1)
    swift_once();
  *a1 = qword_1EED9E628;
  return swift_bridgeObjectRetain();
}

uint64_t EntityTaggingService.PersonTaggingOptions.tagThresholds.getter()
{
  return swift_bridgeObjectRetain();
}

void EntityTaggingService.PersonTaggingOptions.tagThresholds.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  sub_1AE4F6664();
}

uint64_t (*EntityTaggingService.PersonTaggingOptions.tagThresholds.modify())(_QWORD)
{
  return nullsub_1;
}

double EntityTaggingService.RankedEntityTagPersons.ScoredPersonEntity.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void EntityTaggingService.RankedEntityTagPersons.tag.getter(_BYTE *a1@<X8>)
{
  sub_1AE508FD8(a1);
}

uint64_t sub_1AE632DF4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE632E24 + 4 * byte_1AE94640A[a1]))(0x7465536E75, 0xE500000000000000);
}

uint64_t sub_1AE632E24()
{
  return 0x6465726165707061;
}

uint64_t sub_1AE632E64()
{
  return 0x6165707061736964;
}

uint64_t sub_1AE632E84(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x736449746E657665 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE607D20();
    sub_1AE4F6648();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1AE632EFC()
{
  sub_1AE633CF8();
}

uint64_t sub_1AE632F14()
{
  sub_1AE63E4E8();
  return sub_1AE926F94();
}

uint64_t sub_1AE632F3C()
{
  sub_1AE63E4E8();
  return sub_1AE926FA0();
}

uint64_t sub_1AE632F64()
{
  sub_1AE63E524();
  return sub_1AE926F94();
}

uint64_t sub_1AE632F8C()
{
  sub_1AE63E524();
  return sub_1AE926FA0();
}

uint64_t sub_1AE632FB4()
{
  unsigned __int8 *v0;

  return sub_1AE632DF4(*v0);
}

uint64_t sub_1AE632FBC()
{
  sub_1AE63E434();
  return sub_1AE926F94();
}

uint64_t sub_1AE632FE4()
{
  sub_1AE63E434();
  return sub_1AE926FA0();
}

uint64_t sub_1AE63300C()
{
  sub_1AE63E470();
  return sub_1AE926F94();
}

uint64_t sub_1AE633034()
{
  sub_1AE63E470();
  return sub_1AE926FA0();
}

uint64_t sub_1AE63305C()
{
  sub_1AE63E4AC();
  return sub_1AE926F94();
}

uint64_t sub_1AE633084()
{
  sub_1AE63E4AC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE6330AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE632E84(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE6330D4()
{
  sub_1AE63E560();
  return sub_1AE926F94();
}

uint64_t sub_1AE6330FC()
{
  sub_1AE63E560();
  return sub_1AE926FA0();
}

void EntityTaggingStatefulFeedback.FeedbackKind.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1AE4F67EC();
  sub_1AE501548(&qword_1EED9E758);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE506540(v2, v9);
  sub_1AE501548(&qword_1EED9E760);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9E768);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9E770);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F683C();
  sub_1AE501548(&qword_1EED9E778);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE5009EC();
  sub_1AE501548(&qword_1EED9E780);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4FB7E8();
  v8 = *(unsigned __int8 *)(v0 + 8);
  sub_1AE6411B0();
  sub_1AE926F4C();
  __asm { BR              X9 }
}

void sub_1AE63329C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  *(_BYTE *)(v2 - 72) = 0;
  sub_1AE63E560();
  sub_1AE579874();
  sub_1AE607F80();
  sub_1AE501548(&qword_1EED9D860);
  sub_1AE63E59C(&qword_1EED9D868, MEMORY[0x1E0DEDC68], MEMORY[0x1E0DEAF10]);
  sub_1AE608000();
  sub_1AE607E80();
  v3 = sub_1AE607FF0();
  v4(v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
  sub_1AE4F667C();
}

void EntityTaggingStatefulFeedback.FeedbackKind.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  sub_1AE4F67EC();
  v4 = v3;
  sub_1AE501548(&qword_1EED9E7B8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9E7C0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9E7C8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9E7D0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE506540(v9, v24);
  sub_1AE501548(&qword_1EED9E7D8);
  sub_1AE506C14();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE5009EC();
  v11 = sub_1AE501548(&qword_1EED9E7E0);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F6744();
  sub_1AE6411B0();
  sub_1AE926F34();
  if (!v0)
  {
    v25 = v2;
    v13 = sub_1AE926C1C();
    v14 = *(_QWORD *)(v13 + 16);
    v15 = v11;
    if (v14)
    {
      v16 = *(unsigned __int8 *)(v13 + 32);
      sub_1AE50AF34(1, v14, v13, v13 + 32, 0, (2 * v14) | 1);
      v18 = v17;
      v20 = v19;
      swift_bridgeObjectRelease();
      if (v18 == v20 >> 1)
        __asm { BR              X9 }
      v15 = v11;
    }
    v21 = sub_1AE926988();
    sub_1AE4F6778();
    v23 = v22;
    sub_1AE501548(&qword_1EED99C38);
    *v23 = &type metadata for EntityTaggingStatefulFeedback.FeedbackKind;
    sub_1AE926B5C();
    sub_1AE92697C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0DEC450], v21);
    swift_willThrow();
    sub_1AE4F8214();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v1, v15);
  }
  sub_1AE6402A8(v4);
  sub_1AE4F667C();
}

void sub_1AE6338C8()
{
  uint64_t v0;

  sub_1AE641080();
  sub_1AE50AAF0();
  if (v0)
  {
    sub_1AE4F8214();
    JUMPOUT(0x1AE6338A8);
  }
  sub_1AE501548(&qword_1EED9D860);
  sub_1AE63E59C(&qword_1EED9D8C0, MEMORY[0x1E0DEDC90], MEMORY[0x1E0DEAF40]);
  sub_1AE507DEC();
  sub_1AE607E88();
  sub_1AE640F28();
  sub_1AE4F8214();
  JUMPOUT(0x1AE633BB0);
}

void sub_1AE633910()
{
  uint64_t v0;

  sub_1AE64105C();
  sub_1AE640A64();
  if (!v0)
  {
    sub_1AE501548(&qword_1EED9D860);
    sub_1AE63E59C(&qword_1EED9D8C0, MEMORY[0x1E0DEDC90], MEMORY[0x1E0DEAF40]);
    sub_1AE607E88();
    sub_1AE607FF0();
    JUMPOUT(0x1AE633B88);
  }
  JUMPOUT(0x1AE633A10);
}

void sub_1AE633A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE641004();
  v2 = *(_QWORD *)(v1 - 128);
  sub_1AE50AAF0();
  if (v0)
  {
    sub_1AE4F8214();
    JUMPOUT(0x1AE6338A8);
  }
  sub_1AE501548(&qword_1EED9D860);
  sub_1AE63E59C(&qword_1EED9D8C0, MEMORY[0x1E0DEDC90], MEMORY[0x1E0DEAF40]);
  sub_1AE507DEC();
  sub_1AE926B98();
  sub_1AE4FB7D0(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 168) + 8));
  sub_1AE4F8214();
  sub_1AE640BE0();
  JUMPOUT(0x1AE633BC4);
}

void sub_1AE633BD0()
{
  EntityTaggingStatefulFeedback.FeedbackKind.init(from:)();
}

void sub_1AE633BE4()
{
  EntityTaggingStatefulFeedback.FeedbackKind.encode(to:)();
}

void EntityTaggingStatefulFeedback.init(kind:)(uint64_t a1)
{
  char *v1;
  char v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  v2 = *(_BYTE *)(a1 + 8);
  v3 = &v1[OBJC_IVAR____TtC20IntelligencePlatform29EntityTaggingStatefulFeedback_kind];
  *(_QWORD *)v3 = *(_QWORD *)a1;
  v3[8] = v2;
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for EntityTaggingStatefulFeedback();
  sub_1AE501C48((uint64_t)v10.super_class, sel_init, v4, v5, v6, v7, v8, v9, v10);
  sub_1AE4FC530();
}

unint64_t static EntityTaggingStatefulFeedback.type.getter()
{
  return sub_1AE500A68(50);
}

void EntityTaggingStatefulFeedback.init()()
{
  sub_1AE4FE99C();
  __break(1u);
}

uint64_t sub_1AE633C84(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1AE633CF8()
{
  sub_1AE926EC8();
  sub_1AE4F6818();
  sub_1AE4F905C();
  sub_1AE640FB0();
}

void sub_1AE633D28()
{
  sub_1AE926EC8();
  sub_1AE4F6818();
  sub_1AE4F905C();
  sub_1AE640FB0();
}

uint64_t sub_1AE633D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE633C84(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE633D7C()
{
  sub_1AE63E5F0();
  return sub_1AE926F94();
}

uint64_t sub_1AE633DA4()
{
  sub_1AE63E5F0();
  return sub_1AE926FA0();
}

id EntityTaggingStatefulFeedback.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for EntityTaggingStatefulFeedback);
}

void sub_1AE633DF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1AE501548(&qword_1EED9E7E8);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F6744();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE63E5F0();
  sub_1AE4FC7AC();
  sub_1AE63E62C();
  sub_1AE926CC4();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  sub_1AE4FCE34();
}

void EntityTaggingStatefulFeedback.__allocating_init(from:)()
{
  sub_1AE6408FC();
  sub_1AE607E18();
  EntityTaggingStatefulFeedback.init(from:)();
  sub_1AE4FC4F8();
}

void EntityTaggingStatefulFeedback.init(from:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  char v8;
  char *v9;
  objc_super v10;
  uint64_t v11;
  char v12;

  sub_1AE4F67EC();
  v5 = v4;
  sub_1AE501548(&qword_1EED9E800);
  sub_1AE506C14();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F6744();
  sub_1AE4F9858(v5, v5[3]);
  sub_1AE63E5F0();
  v7 = v0;
  sub_1AE4F680C();
  if (v1)
  {

    sub_1AE6402A8((uint64_t)v5);
    type metadata accessor for EntityTaggingStatefulFeedback();
    sub_1AE607EB0();
  }
  else
  {
    sub_1AE63E668();
    sub_1AE926BEC();
    v8 = v12;
    v9 = &v7[OBJC_IVAR____TtC20IntelligencePlatform29EntityTaggingStatefulFeedback_kind];
    *(_QWORD *)v9 = v11;
    v9[8] = v8;

    v10.receiver = v7;
    v10.super_class = (Class)type metadata accessor for EntityTaggingStatefulFeedback();
    objc_msgSendSuper2(&v10, sel_init);
    sub_1AE4FB7D0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_1AE6402A8((uint64_t)v5);
  }
  sub_1AE4F667C();
}

unint64_t sub_1AE634050()
{
  static EntityTaggingStatefulFeedback.type.getter();
  return 0xD000000000000032;
}

void sub_1AE63406C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  EntityTaggingStatefulFeedback.__allocating_init(from:)();
  if (!v1)
    *a1 = v3;
}

void sub_1AE634094(_QWORD *a1)
{
  sub_1AE633DF0(a1);
}

IntelligencePlatform::EntityTaggingDirectFeedback::FeedbackKind_optional __swiftcall EntityTaggingDirectFeedback.FeedbackKind.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (IntelligencePlatform::EntityTaggingDirectFeedback::FeedbackKind_optional)rawValue;
}

uint64_t EntityTaggingDirectFeedback.FeedbackKind.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

IntelligencePlatform::EntityTaggingDirectFeedback::FeedbackKind_optional sub_1AE6340D0(Swift::Int *a1)
{
  return EntityTaggingDirectFeedback.FeedbackKind.init(rawValue:)(*a1);
}

void sub_1AE6340D8(uint64_t *a1@<X8>)
{
  *a1 = EntityTaggingDirectFeedback.FeedbackKind.rawValue.getter();
  sub_1AE4F6664();
}

uint64_t sub_1AE6340F8()
{
  sub_1AE640160();
  return sub_1AE92619C();
}

uint64_t sub_1AE634154()
{
  sub_1AE640160();
  return sub_1AE926154();
}

void EntityTaggingDirectFeedback.init(kind:tagInference:)(_BYTE *a1, char *a2)
{
  _BYTE *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v10;

  v3 = *a2;
  v2[OBJC_IVAR____TtC20IntelligencePlatform27EntityTaggingDirectFeedback_kind] = *a1;
  v2[OBJC_IVAR____TtC20IntelligencePlatform27EntityTaggingDirectFeedback_tagInference] = v3;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for EntityTaggingDirectFeedback();
  sub_1AE501C48((uint64_t)v10.super_class, sel_init, v4, v5, v6, v7, v8, v9, v10);
  sub_1AE4FC530();
}

unint64_t static EntityTaggingDirectFeedback.type.getter()
{
  return sub_1AE500A68(48);
}

void EntityTaggingDirectFeedback.init()()
{
  sub_1AE4FE99C();
  __break(1u);
}

uint64_t sub_1AE634230(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1684957547 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265666E49676174 && a2 == 0xEC00000065636E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE634324(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7265666E49676174;
  else
    return 1684957547;
}

uint64_t sub_1AE63435C()
{
  char *v0;

  return sub_1AE634324(*v0);
}

uint64_t sub_1AE634364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE634230(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE634388()
{
  sub_1AE63E6C4();
  return sub_1AE926F94();
}

uint64_t sub_1AE6343B0()
{
  sub_1AE63E6C4();
  return sub_1AE926FA0();
}

id EntityTaggingDirectFeedback.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for EntityTaggingDirectFeedback);
}

void sub_1AE6343E4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1AE501548(&qword_1EED9E820);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F683C();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE63E6C4();
  sub_1AE4FC7AC();
  sub_1AE63E700();
  sub_1AE640DF8();
  if (!v1)
  {
    sub_1AE63E73C();
    sub_1AE640DF8();
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  sub_1AE4FCE34();
}

void EntityTaggingDirectFeedback.__allocating_init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1AE6408FC();
  v0 = sub_1AE607E18();
  EntityTaggingDirectFeedback.init(from:)(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, SWORD2(v9), SBYTE6(v9), SHIBYTE(v9));
  sub_1AE4FC4F8();
}

void EntityTaggingDirectFeedback.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  objc_super v21;

  sub_1AE4F67EC();
  v18 = v17;
  sub_1AE501548(&qword_1EED9E840);
  sub_1AE506C14();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE4FB7E8();
  sub_1AE4F9858(v18, v18[3]);
  sub_1AE63E6C4();
  v20 = v14;
  sub_1AE4F680C();
  if (v15)
  {

    sub_1AE6402A8((uint64_t)v18);
    type metadata accessor for EntityTaggingDirectFeedback();
    sub_1AE607EB0();
  }
  else
  {
    sub_1AE63E778();
    sub_1AE640CC0();
    *((_BYTE *)v20 + OBJC_IVAR____TtC20IntelligencePlatform27EntityTaggingDirectFeedback_kind) = a13;
    sub_1AE63E7B4();
    sub_1AE640CC0();
    *((_BYTE *)v20 + OBJC_IVAR____TtC20IntelligencePlatform27EntityTaggingDirectFeedback_tagInference) = a13;

    v21.receiver = v20;
    v21.super_class = (Class)type metadata accessor for EntityTaggingDirectFeedback();
    objc_msgSendSuper2(&v21, sel_init);
    sub_1AE4FB7D0(v13, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    sub_1AE6402A8((uint64_t)v18);
  }
  sub_1AE4F667C();
}

unint64_t sub_1AE6346A0()
{
  static EntityTaggingDirectFeedback.type.getter();
  return 0xD000000000000030;
}

void sub_1AE6346BC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  EntityTaggingDirectFeedback.__allocating_init(from:)();
  if (!v1)
    *a1 = v3;
}

void sub_1AE6346E4(_QWORD *a1)
{
  sub_1AE6343E4(a1);
}

uint64_t type metadata accessor for PersonEntityTaggingService()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EntityTaggingStatefulFeedback()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PersonEntityTaggingService.EntityTagConfiguration()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons()
{
  return objc_opt_self();
}

uint64_t sub_1AE6347E4(uint64_t a1, void *a2)
{
  return sub_1AE630FBC(a1, a2);
}

uint64_t type metadata accessor for PersonEntityTaggingService.PersonEntityTaggingOptions()
{
  return objc_opt_self();
}

uint64_t sub_1AE63480C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1AE607CF8;
  return v6();
}

uint64_t sub_1AE634860(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1AE607CF8;
  return v7();
}

uint64_t sub_1AE6348B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1AE926328();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v6) == 1)
  {
    sub_1AE52FBE8(a1, &qword_1ED318B50);
  }
  else
  {
    sub_1AE92631C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1AE9262EC();
    swift_unknownObjectRelease();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1AE6349F8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1AE634A5C;
  return v6(a1);
}

uint64_t sub_1AE634A5C()
{
  uint64_t (*v0)(void);

  sub_1AE4FFC38();
  v0 = (uint64_t (*)(void))sub_1AE5094FC();
  return sub_1AE4F90A8(v0);
}

void sub_1AE634A80(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;

  v3 = a1[1];
  v4 = sub_1AE926D0C();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1AE6350B0(0, v3, 1, a1);
      return;
    }
    goto LABEL_125;
  }
  v5 = v4;
  sub_1AE519788(v3 / 2);
  v96 = v6;
  v97 = v7;
  v94 = v3;
  v92 = a1;
  if (v3 <= 0)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    v32 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_89:
    v82 = v10;
    if (v32 < 2)
    {
LABEL_100:
      swift_bridgeObjectRelease();
      if (v94 >= -1)
      {
        *(_QWORD *)((v97 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
        sub_1AE9261FC();
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_130;
    }
    v83 = *v92;
    while (1)
    {
      v84 = v32 - 2;
      if (v32 < 2)
        break;
      if (!v83)
        goto LABEL_134;
      v85 = v82;
      v86 = *(_QWORD *)(v82 + 32 + 16 * v84);
      v87 = *(_QWORD *)(v82 + 32 + 16 * (v32 - 1) + 8);
      sub_1AE635118((uint64_t *)(v83 + 8 * v86), (uint64_t *)(v83 + 8 * *(_QWORD *)(v82 + 32 + 16 * (v32 - 1))), v83 + 8 * v87, v96);
      if (v1)
        goto LABEL_86;
      if (v87 < v86)
        goto LABEL_120;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE8893F4();
        v85 = v90;
      }
      if (v84 >= *(_QWORD *)(v85 + 16))
        goto LABEL_121;
      v88 = (_QWORD *)(v85 + 32 + 16 * v84);
      *v88 = v86;
      v88[1] = v87;
      v89 = *(_QWORD *)(v85 + 16);
      if (v32 > v89)
        goto LABEL_122;
      memmove((void *)(v85 + 32 + 16 * (v32 - 1)), (const void *)(v85 + 32 + 16 * v32), 16 * (v89 - v32));
      v82 = v85;
      *(_QWORD *)(v85 + 16) = v89 - 1;
      v32 = v89 - 1;
      if (v89 <= 2)
        goto LABEL_100;
    }
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v91 = *a1 - 8;
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = &qword_1EED9E000;
  v12 = v3;
  v93 = v5;
  v95 = *a1;
  while (1)
  {
    v13 = v8++;
    if (v8 < v12)
    {
      v14 = v11[218];
      v15 = *(double *)(*(_QWORD *)(v9 + 8 * v8) + v14);
      v16 = *(double *)(*(_QWORD *)(v9 + 8 * v13) + v14);
      v8 = v13 + 2;
      if (v13 + 2 < v12)
      {
        v17 = v15;
        while (1)
        {
          v18 = v17;
          v17 = *(double *)(*(_QWORD *)(v9 + 8 * v8) + v14);
          if (v16 < v15 == v18 >= v17)
            break;
          if (++v8 >= v12)
          {
            v8 = v12;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v8 < v13)
          goto LABEL_127;
        if (v13 < v8)
        {
          v19 = (uint64_t *)(v91 + 8 * v8);
          v20 = v8;
          v21 = v13;
          v22 = (uint64_t *)(v9 + 8 * v13);
          do
          {
            if (v21 != --v20)
            {
              if (!v9)
                goto LABEL_133;
              v23 = *v22;
              *v22 = *v19;
              *v19 = v23;
            }
            ++v21;
            --v19;
            ++v22;
          }
          while (v21 < v20);
        }
      }
    }
    if (v8 < v12)
    {
      if (__OFSUB__(v8, v13))
        goto LABEL_124;
      if (v8 - v13 < v5)
      {
        v24 = v13 + v5;
        if (__OFADD__(v13, v5))
          goto LABEL_128;
        if (v24 >= v12)
          v24 = v12;
        if (v24 < v13)
          goto LABEL_129;
        if (v8 != v24)
        {
          v25 = (uint64_t *)(v91 + 8 * v8);
          do
          {
            v26 = *(_QWORD *)(v9 + 8 * v8);
            v27 = v13;
            v28 = v25;
            do
            {
              v29 = *v28;
              if (*(double *)(*v28 + v11[218]) >= *(double *)(v26 + v11[218]))
                break;
              if (!v9)
                goto LABEL_131;
              *v28 = v26;
              v28[1] = v29;
              --v28;
              ++v27;
            }
            while (v8 != v27);
            ++v8;
            ++v25;
          }
          while (v8 != v24);
          v8 = v24;
        }
      }
    }
    if (v8 < v13)
      goto LABEL_123;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE889310(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
      v10 = v80;
    }
    v31 = *(_QWORD *)(v10 + 16);
    v30 = *(_QWORD *)(v10 + 24);
    v32 = v31 + 1;
    v9 = v95;
    if (v31 >= v30 >> 1)
    {
      sub_1AE889310(v30 > 1, v31 + 1, 1, (char *)v10);
      v9 = v95;
      v10 = v81;
    }
    *(_QWORD *)(v10 + 16) = v32;
    v33 = v10 + 32;
    v34 = (uint64_t *)(v10 + 32 + 16 * v31);
    *v34 = v13;
    v34[1] = v8;
    if (v31)
      break;
    v32 = 1;
LABEL_81:
    v5 = v93;
    v12 = v94;
    v11 = &qword_1EED9E000;
    if (v8 >= v94)
      goto LABEL_89;
  }
  while (1)
  {
    v35 = v32 - 1;
    if (v32 >= 4)
    {
      v40 = v33 + 16 * v32;
      v41 = *(_QWORD *)(v40 - 64);
      v42 = *(_QWORD *)(v40 - 56);
      v46 = __OFSUB__(v42, v41);
      v43 = v42 - v41;
      if (v46)
        goto LABEL_108;
      v45 = *(_QWORD *)(v40 - 48);
      v44 = *(_QWORD *)(v40 - 40);
      v46 = __OFSUB__(v44, v45);
      v38 = v44 - v45;
      v39 = v46;
      if (v46)
        goto LABEL_109;
      v47 = v32 - 2;
      v48 = (uint64_t *)(v33 + 16 * (v32 - 2));
      v50 = *v48;
      v49 = v48[1];
      v46 = __OFSUB__(v49, v50);
      v51 = v49 - v50;
      if (v46)
        goto LABEL_110;
      v46 = __OFADD__(v38, v51);
      v52 = v38 + v51;
      if (v46)
        goto LABEL_112;
      if (v52 >= v43)
      {
        v70 = (uint64_t *)(v33 + 16 * v35);
        v72 = *v70;
        v71 = v70[1];
        v46 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v46)
          goto LABEL_118;
        v63 = v38 < v73;
        goto LABEL_70;
      }
    }
    else
    {
      if (v32 != 3)
      {
        v64 = *(_QWORD *)(v10 + 32);
        v65 = *(_QWORD *)(v10 + 40);
        v46 = __OFSUB__(v65, v64);
        v57 = v65 - v64;
        v58 = v46;
        goto LABEL_64;
      }
      v37 = *(_QWORD *)(v10 + 32);
      v36 = *(_QWORD *)(v10 + 40);
      v46 = __OFSUB__(v36, v37);
      v38 = v36 - v37;
      v39 = v46;
    }
    if ((v39 & 1) != 0)
      goto LABEL_111;
    v47 = v32 - 2;
    v53 = (uint64_t *)(v33 + 16 * (v32 - 2));
    v55 = *v53;
    v54 = v53[1];
    v56 = __OFSUB__(v54, v55);
    v57 = v54 - v55;
    v58 = v56;
    if (v56)
      goto LABEL_113;
    v59 = (uint64_t *)(v33 + 16 * v35);
    v61 = *v59;
    v60 = v59[1];
    v46 = __OFSUB__(v60, v61);
    v62 = v60 - v61;
    if (v46)
      goto LABEL_115;
    if (__OFADD__(v57, v62))
      goto LABEL_117;
    if (v57 + v62 >= v38)
    {
      v63 = v38 < v62;
LABEL_70:
      if (v63)
        v35 = v47;
      goto LABEL_72;
    }
LABEL_64:
    if ((v58 & 1) != 0)
      goto LABEL_114;
    v66 = (uint64_t *)(v33 + 16 * v35);
    v68 = *v66;
    v67 = v66[1];
    v46 = __OFSUB__(v67, v68);
    v69 = v67 - v68;
    if (v46)
      goto LABEL_116;
    if (v69 < v57)
      goto LABEL_81;
LABEL_72:
    v74 = v35 - 1;
    if (v35 - 1 >= v32)
    {
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
      goto LABEL_119;
    }
    if (!v9)
      goto LABEL_132;
    v75 = (uint64_t *)(v33 + 16 * v74);
    v76 = *v75;
    v77 = (_QWORD *)(v33 + 16 * v35);
    v78 = v77[1];
    sub_1AE635118((uint64_t *)(v9 + 8 * *v75), (uint64_t *)(v9 + 8 * *v77), v9 + 8 * v78, v96);
    if (v1)
      break;
    if (v78 < v76)
      goto LABEL_105;
    if (v35 > *(_QWORD *)(v10 + 16))
      goto LABEL_106;
    *v75 = v76;
    *(_QWORD *)(v33 + 16 * v74 + 8) = v78;
    v79 = *(_QWORD *)(v10 + 16);
    if (v35 >= v79)
      goto LABEL_107;
    v32 = v79 - 1;
    memmove((void *)(v33 + 16 * v35), v77 + 2, 16 * (v79 - 1 - v35));
    *(_QWORD *)(v10 + 16) = v79 - 1;
    v9 = v95;
    if (v79 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v94 < -1)
    goto LABEL_126;
  *(_QWORD *)((v97 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_1AE9261FC();
  swift_bridgeObjectRelease();
}

uint64_t sub_1AE6350B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      v6 = *(_QWORD *)(v4 + 8 * a3);
      v7 = result;
      v8 = (uint64_t *)v5;
      do
      {
        v9 = *v8;
        if (*(double *)(*v8 + OBJC_IVAR___GDScoredPersonEntityTagInner_score) >= *(double *)(v6
                                                                                            + OBJC_IVAR___GDScoredPersonEntityTagInner_score))
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 8;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1AE635118(uint64_t *a1, uint64_t *a2, unint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v14;
  BOOL v15;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  BOOL v22;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = (char *)a2 - (char *)a1;
  v9 = a2 - a1;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_1AE5201B0(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v12 = &v4[v11];
    if (v7 >= v6 || v10 < 8)
      goto LABEL_39;
    v18 = (uint64_t *)(a3 - 8);
    while (1)
    {
      v19 = v18 + 1;
      v20 = *(v6 - 1);
      if (*(double *)(v20 + OBJC_IVAR___GDScoredPersonEntityTagInner_score) >= *(double *)(*(v12 - 1)
                                                                                          + OBJC_IVAR___GDScoredPersonEntityTagInner_score))
      {
        v22 = v19 != v12 || v18 >= v12;
        v20 = *--v12;
        if (!v22)
          goto LABEL_35;
      }
      else
      {
        v21 = v19 != v6 || v18 >= v6;
        --v6;
        if (!v21)
          goto LABEL_35;
      }
      *v18 = v20;
LABEL_35:
      --v18;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_39;
    }
  }
  sub_1AE5201B0(a1, a2 - a1, a4);
  v12 = &v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      v14 = *v6;
      if (*(double *)(*v4 + OBJC_IVAR___GDScoredPersonEntityTagInner_score) < *(double *)(*v6
                                                                                         + OBJC_IVAR___GDScoredPersonEntityTagInner_score))
        break;
      v14 = *v4;
      v15 = v7 == v4++;
      if (!v15)
        goto LABEL_11;
LABEL_12:
      ++v7;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_17;
    }
    v15 = v7 == v6++;
    if (v15)
      goto LABEL_12;
LABEL_11:
    *v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  v6 = v7;
LABEL_39:
  sub_1AE5201B0(v4, v12 - v4, v6);
  return 1;
}

uint64_t sub_1AE6352B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (!a2)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  sub_1AE501548(&qword_1EED9EC40);
  v2 = sub_1AE926B08();
  v26 = v2;
  sub_1AE926A78();
  v3 = sub_1AE926A9C();
  if (!v3)
  {
LABEL_16:
    swift_release();
    return v2;
  }
  v5 = v3;
  v6 = v4;
  sub_1AE53F468(0, (unint64_t *)&qword_1ED318F50);
  while (1)
  {
    v24 = v5;
    swift_dynamicCast();
    type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons();
    swift_dynamicCast();
    v2 = v26;
    v12 = *(_QWORD *)(v26 + 16);
    if (*(_QWORD *)(v26 + 24) <= v12)
    {
      sub_1AE6380C4(v12 + 1, 1, (uint64_t)&qword_1EED9EC40, v7, v8, v9, v10, v11, v6, v5);
      v2 = v26;
    }
    result = sub_1AE9266DC();
    v14 = v2 + 64;
    v15 = -1 << *(_BYTE *)(v2 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v2 + 64 + 8 * (v16 >> 6))) == 0)
      break;
    v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v2 + 64 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v18) = v25;
    *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v18) = v24;
    ++*(_QWORD *)(v2 + 16);
    v5 = sub_1AE926A9C();
    v6 = v23;
    if (!v5)
      goto LABEL_16;
  }
  v19 = 0;
  v20 = (unint64_t)(63 - v15) >> 6;
  while (++v17 != v20 || (v19 & 1) == 0)
  {
    v21 = v17 == v20;
    if (v17 == v20)
      v17 = 0;
    v19 |= v21;
    v22 = *(_QWORD *)(v14 + 8 * v17);
    if (v22 != -1)
    {
      v18 = __clz(__rbit64(~v22)) + (v17 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

void sub_1AE6354DC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t i;
  BOOL v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;

  sub_1AE505CD4();
  sub_1AE507E64();
  sub_1AE501548(&qword_1EED9EC98);
  sub_1AE64050C();
  sub_1AE64075C();
  if (v3)
  {
    v29 = v0;
    v4 = 0;
    v5 = v1 + 8;
    sub_1AE640B28();
    v8 = v7 & v6;
    v10 = (unint64_t)(v9 + 63) >> 6;
    if ((v7 & v6) == 0)
      goto LABEL_4;
LABEL_3:
    sub_1AE64102C();
    for (i = v11 | (v4 << 6); ; i = v17 + (v4 << 6))
    {
      v18 = *(_QWORD *)(v1[6] + 8 * i);
      v19 = *(_QWORD *)(v1[7] + 8 * i);
      if ((v2 & 1) == 0)
        sub_1AE4FB930();
      sub_1AE6408F0();
      sub_1AE926EF8();
      sub_1AE563878();
      sub_1AE6408CC();
      if (v20)
      {
        sub_1AE5053C0();
        while (1)
        {
          sub_1AE5637B4();
          if (v20)
          {
            if ((v22 & 1) != 0)
              break;
          }
          if (v23 == v24)
            v23 = 0;
          if (*(_QWORD *)(v2 + 64 + 8 * v23) != -1)
          {
            sub_1AE4FB888();
            goto LABEL_26;
          }
        }
        __break(1u);
        goto LABEL_37;
      }
      sub_1AE4FC604();
LABEL_26:
      sub_1AE6408A8(v21);
      *(_QWORD *)(v26 + 8 * v25) = v18;
      *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v25) = v19;
      sub_1AE6403DC();
      if (v8)
        goto LABEL_3;
LABEL_4:
      v13 = __OFADD__(v4++, 1);
      if (v13)
        goto LABEL_38;
      if (v4 >= v10)
        goto LABEL_28;
      if (!v5[v4])
      {
        v14 = v4 + 1;
        if (v4 + 1 >= v10)
        {
LABEL_28:
          if ((v2 & 1) == 0)
          {
            sub_1AE50A24C();
            v0 = v29;
            goto LABEL_35;
          }
          sub_1AE64037C();
          if (v28 != v13)
            *v5 = -1 << v27;
          else
            sub_1AE640AC8(v27);
          v0 = v29;
          v1[2] = 0;
          break;
        }
        if (!v5[v14])
        {
          while (1)
          {
            v4 = v14 + 1;
            if (__OFADD__(v14, 1))
              break;
            if (v4 >= v10)
              goto LABEL_28;
            ++v14;
            if (v5[v4])
              goto LABEL_13;
          }
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          return;
        }
        ++v4;
      }
LABEL_13:
      sub_1AE50747C();
      v8 = v16 & v15;
    }
  }
  sub_1AE50A24C();
LABEL_35:
  *v0 = v2;
  sub_1AE4F778C();
}

void sub_1AE635690()
{
  _QWORD *v0;
  _QWORD *v1;
  char v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  BOOL v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  sub_1AE563CB4();
  sub_1AE507E64();
  sub_1AE501548(&qword_1EED9EC38);
  sub_1AE640DB8();
  v3 = (_QWORD *)sub_1AE64050C();
  if (v1[2])
  {
    v27 = v0;
    v4 = v1 + 8;
    sub_1AE640FC4();
    v7 = v6 & v5;
    v9 = (unint64_t)(v8 + 63) >> 6;
    sub_1AE524998();
    v10 = 0;
    if (!v7)
      goto LABEL_4;
LABEL_3:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = v17 + (v10 << 6))
    {
      v18 = v1[6] + 16 * i;
      v19 = *(_QWORD *)v18;
      v20 = *(_BYTE *)(v18 + 8);
      v21 = *(_QWORD *)(v1[7] + 8 * i);
      if ((v2 & 1) == 0)
        sub_1AE4F6804();
      sub_1AE63825C(v19, v20, v21, v3);
      if (v7)
        goto LABEL_3;
LABEL_4:
      v13 = __OFADD__(v10++, 1);
      if (v13)
        goto LABEL_25;
      if (v10 >= v9)
        break;
      if (!v4[v10])
      {
        v14 = v10 + 1;
        if (v10 + 1 >= v9)
          break;
        if (!v4[v14])
        {
          while (1)
          {
            v10 = v14 + 1;
            if (__OFADD__(v14, 1))
              break;
            if (v10 >= v9)
              goto LABEL_18;
            ++v14;
            if (v4[v10])
              goto LABEL_13;
          }
          __break(1u);
LABEL_25:
          __break(1u);
          return;
        }
        ++v10;
      }
LABEL_13:
      sub_1AE50747C();
      v7 = v16 & v15;
    }
LABEL_18:
    sub_1AE50A24C();
    v0 = v27;
    if ((v2 & 1) != 0)
    {
      sub_1AE640F88();
      if (v23 ^ v13 | v22)
      {
        sub_1AE563C70();
        *v4 = v24;
      }
      else
      {
        v25 = sub_1AE64094C();
        sub_1AE555CAC(v25, v26, v1 + 8);
      }
      v1[2] = 0;
    }
  }
  sub_1AE50A24C();
  *v0 = v3;
  sub_1AE506210();
}

void sub_1AE6357F4(uint64_t a1, uint64_t a2)
{
  sub_1AE63789C(a1, a2, &qword_1EED9ECA0);
}

uint64_t sub_1AE635800(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _BYTE v25[32];

  v3 = v2;
  v5 = *v2;
  sub_1AE501548(&qword_1EED9EA90);
  v6 = (_QWORD *)sub_1AE926AFC();
  if (*(_QWORD *)(v5 + 16))
  {
    v24 = v3;
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    result = swift_retain();
    v13 = 0;
    if (!v10)
      goto LABEL_6;
LABEL_5:
    v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
      v20 = *v19;
      v21 = v19[1];
      v22 = *(_QWORD *)(v5 + 56) + 32 * i;
      if ((a2 & 1) != 0)
      {
        sub_1AE6401D8(v22, (uint64_t)v25);
      }
      else
      {
        sub_1AE6402C4(v22, (uint64_t)v25, (uint64_t *)&unk_1ED31C440);
        swift_bridgeObjectRetain();
      }
      result = sub_1AE63833C(v20, v21, (uint64_t)v25, v6);
      if (v10)
        goto LABEL_5;
LABEL_6:
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
LABEL_32:
        __break(1u);
        return result;
      }
      if (v16 >= v11)
        goto LABEL_23;
      v17 = v8[v16];
      ++v13;
      if (!v17)
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v11)
          goto LABEL_23;
        v17 = v8[v13];
        if (!v17)
        {
          v18 = v16 + 2;
          if (v18 >= v11)
          {
LABEL_23:
            swift_release();
            if ((a2 & 1) == 0)
            {
              result = swift_release();
              v3 = v24;
              goto LABEL_30;
            }
            v23 = 1 << *(_BYTE *)(v5 + 32);
            if (v23 >= 64)
              sub_1AE555CAC(0, (unint64_t)(v23 + 63) >> 6, (_QWORD *)(v5 + 64));
            else
              *v8 = -1 << v23;
            v3 = v24;
            *(_QWORD *)(v5 + 16) = 0;
            break;
          }
          v17 = v8[v18];
          if (!v17)
          {
            while (1)
            {
              v13 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_32;
              if (v13 >= v11)
                goto LABEL_23;
              v17 = v8[v13];
              ++v18;
              if (v17)
                goto LABEL_17;
            }
          }
          v13 = v18;
        }
      }
LABEL_17:
      v10 = (v17 - 1) & v17;
    }
  }
  result = swift_release();
LABEL_30:
  *v3 = v6;
  return result;
}

uint64_t sub_1AE635A24(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  v40 = sub_1AE501548(&qword_1EED9AC70);
  v5 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1AE501548(&qword_1EED9EC78);
  result = sub_1AE926AFC();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v2;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v38 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v37 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    v36 = a2;
    v17 = 16;
    if ((a2 & 1) != 0)
      v17 = 32;
    v39 = v17;
    if (!v15)
      goto LABEL_9;
LABEL_8:
    v18 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    for (i = v18 | (v11 << 6); ; i = __clz(__rbit64(v21)) + (v11 << 6))
    {
      v23 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * i);
      v24 = *(_QWORD *)(v5 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + v39))(v7, *(_QWORD *)(v8 + 56) + v24 * i, v40);
      sub_1AE926EC8();
      sub_1AE926EF8();
      result = sub_1AE926F10();
      v25 = -1 << *(_BYTE *)(v10 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v16 + 8 * (v26 >> 6))) == 0)
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v25) >> 6;
        while (++v27 != v30 || (v29 & 1) == 0)
        {
          v31 = v27 == v30;
          if (v27 == v30)
            v27 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v27);
          if (v32 != -1)
          {
            v28 = __clz(__rbit64(~v32)) + (v27 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return result;
      }
      v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v16 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v16 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v28) = v23;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v24 * v28, v7, v40);
      ++*(_QWORD *)(v10 + 16);
      if (v15)
        goto LABEL_8;
LABEL_9:
      v20 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_41;
      if (v20 >= v37)
        goto LABEL_32;
      v21 = v38[v20];
      ++v11;
      if (!v21)
      {
        v11 = v20 + 1;
        if (v20 + 1 >= v37)
          goto LABEL_32;
        v21 = v38[v11];
        if (!v21)
        {
          v22 = v20 + 2;
          if (v22 >= v37)
          {
LABEL_32:
            if ((v36 & 1) == 0)
            {
              result = swift_release();
              v3 = v35;
              goto LABEL_39;
            }
            v33 = 1 << *(_BYTE *)(v8 + 32);
            if (v33 >= 64)
              sub_1AE555CAC(0, (unint64_t)(v33 + 63) >> 6, v38);
            else
              *v38 = -1 << v33;
            v3 = v35;
            *(_QWORD *)(v8 + 16) = 0;
            break;
          }
          v21 = v38[v22];
          if (!v21)
          {
            while (1)
            {
              v11 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_42;
              if (v11 >= v37)
                goto LABEL_32;
              v21 = v38[v11];
              ++v22;
              if (v21)
                goto LABEL_20;
            }
          }
          v11 = v22;
        }
      }
LABEL_20:
      v15 = (v21 - 1) & v21;
    }
  }
  result = swift_release();
LABEL_39:
  *v3 = v10;
  return result;
}

uint64_t sub_1AE635D60(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v3 = v2;
  v5 = *v2;
  sub_1AE501548(&qword_1EED9EC68);
  result = sub_1AE926AFC();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v31 = a2;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    if (!v12)
      goto LABEL_7;
LABEL_6:
    v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    for (i = v15 | (v8 << 6); ; i = __clz(__rbit64(v18)) + (v8 << 6))
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * i);
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
      sub_1AE926EC8();
      sub_1AE926EF8();
      result = sub_1AE926F10();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v14 + 8 * (v23 >> 6))) == 0)
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v22) >> 6;
        while (++v24 != v27 || (v26 & 1) == 0)
        {
          v28 = v24 == v27;
          if (v24 == v27)
            v24 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v24);
          if (v29 != -1)
          {
            v25 = __clz(__rbit64(~v29)) + (v24 << 6);
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v14 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_28:
      *(_QWORD *)(v14 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v25) = v20;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v25) = v21;
      ++*(_QWORD *)(v7 + 16);
      if (v12)
        goto LABEL_6;
LABEL_7:
      v17 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_39;
      if (v17 >= v13)
        goto LABEL_30;
      v18 = v9[v17];
      ++v8;
      if (!v18)
      {
        v8 = v17 + 1;
        if (v17 + 1 >= v13)
          goto LABEL_30;
        v18 = v9[v8];
        if (!v18)
        {
          v19 = v17 + 2;
          if (v19 >= v13)
          {
LABEL_30:
            if ((v31 & 1) == 0)
            {
              result = swift_release();
              v3 = v2;
              goto LABEL_37;
            }
            v30 = 1 << *(_BYTE *)(v5 + 32);
            if (v30 >= 64)
              sub_1AE555CAC(0, (unint64_t)(v30 + 63) >> 6, (_QWORD *)(v5 + 64));
            else
              *v9 = -1 << v30;
            v3 = v2;
            *(_QWORD *)(v5 + 16) = 0;
            break;
          }
          v18 = v9[v19];
          if (!v18)
          {
            while (1)
            {
              v8 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_40;
              if (v8 >= v13)
                goto LABEL_30;
              v18 = v9[v8];
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          v8 = v19;
        }
      }
LABEL_18:
      v12 = (v18 - 1) & v18;
    }
  }
  result = swift_release();
LABEL_37:
  *v3 = v7;
  return result;
}

void sub_1AE636024(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  int64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  __int128 v36;
  int64_t v37;
  _QWORD v38[4];
  char v39;
  char v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  v4 = *v2;
  sub_1AE501548(&qword_1EED9EC88);
  v34 = a2;
  v35 = (_QWORD *)sub_1AE926AFC();
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = 1 << *(_BYTE *)(v4 + 32);
    v32 = (_QWORD *)(v4 + 64);
    v6 = -1;
    if (v5 < 64)
      v6 = ~(-1 << v5);
    v7 = v6 & *(_QWORD *)(v4 + 64);
    v31 = (unint64_t)(v5 + 63) >> 6;
    swift_retain();
    v8 = 0;
    v33 = v4;
    if (!v7)
      goto LABEL_6;
LABEL_5:
    v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v37 = v8;
    for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v13 << 6))
    {
      v15 = 5 * i;
      v16 = *(_QWORD *)(v4 + 56);
      v17 = *(_QWORD *)(v4 + 48) + 8 * v15;
      v18 = *(_QWORD *)v17;
      v19 = *(_QWORD *)(v17 + 8);
      v20 = *(_QWORD *)(v17 + 16);
      v21 = *(_QWORD *)(v17 + 24);
      v22 = *(_BYTE *)(v17 + 32);
      v23 = *(_BYTE *)(v17 + 33);
      v24 = (uint64_t *)(v16 + 8 * v15);
      v25 = *v24;
      v26 = *(_OWORD *)(v24 + 1);
      v27 = v24[3];
      v28 = v24[4];
      if ((v34 & 1) == 0)
      {
        v36 = *(_OWORD *)(v24 + 1);
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26 = v36;
      }
      v38[0] = v18;
      v38[1] = v19;
      v38[2] = v20;
      v38[3] = v21;
      v39 = v22;
      v40 = v23;
      v41 = v25;
      v42 = v26;
      v43 = v27;
      v44 = v28;
      sub_1AE638430((uint64_t)v38, (uint64_t)&v41, v35);
      v4 = v33;
      v8 = v37;
      if (v7)
        goto LABEL_5;
LABEL_6:
      v11 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        return;
      }
      if (v11 >= v31)
        goto LABEL_22;
      v12 = v32[v11];
      v13 = v8 + 1;
      if (!v12)
      {
        v13 = v8 + 2;
        if (v8 + 2 >= v31)
          goto LABEL_22;
        v12 = v32[v13];
        if (!v12)
        {
          v14 = v8 + 3;
          if (v8 + 3 >= v31)
          {
LABEL_22:
            swift_release();
            if ((v34 & 1) != 0)
            {
              v29 = 1 << *(_BYTE *)(v4 + 32);
              if (v29 > 63)
                sub_1AE555CAC(0, (unint64_t)(v29 + 63) >> 6, v32);
              else
                *v32 = -1 << v29;
              *(_QWORD *)(v4 + 16) = 0;
            }
            break;
          }
          v12 = v32[v14];
          if (!v12)
          {
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_29;
              if (v13 >= v31)
                goto LABEL_22;
              v12 = v32[v13];
              ++v14;
              if (v12)
                goto LABEL_17;
            }
          }
          v13 = v8 + 3;
        }
      }
LABEL_17:
      v7 = (v12 - 1) & v12;
      v37 = v13;
    }
  }
  swift_release();
  *v30 = v35;
}

void sub_1AE6362A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  _QWORD *v32;
  _QWORD *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  int64_t v43;
  int64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;
  _QWORD *v58;
  int64_t v59;
  char v60;
  _QWORD *v61;

  sub_1AE505CD4();
  a31 = v35;
  a32 = v36;
  sub_1AE507E64();
  sub_1AE501548(&qword_1EED99618);
  v60 = v34;
  v61 = (_QWORD *)sub_1AE64050C();
  if (v33[2])
  {
    sub_1AE6405FC();
    sub_1AE640FC4();
    v39 = v38 & v37;
    v58 = v32;
    v59 = (unint64_t)(v40 + 63) >> 6;
    sub_1AE524998();
    v41 = 0;
    if (!v39)
      goto LABEL_4;
LABEL_3:
    sub_1AE640C80();
    while (1)
    {
      v45 = (uint64_t *)(v33[6] + 48 * v42);
      v47 = *v45;
      v46 = v45[1];
      v48 = v45[2];
      v49 = v45[3];
      v50 = v45[4];
      v51 = v45[5];
      v52 = *(void **)(v33[7] + 8 * v42);
      if ((v60 & 1) == 0)
      {
        sub_1AE4FB764();
        sub_1AE4F67A4();
        sub_1AE4FB930();
        v53 = v52;
      }
      a15 = v47;
      a16 = v46;
      a17 = v48;
      a18 = v49;
      a19 = v50;
      a20 = v51;
      sub_1AE638568((uint64_t)&a15, (uint64_t)v52, v61);
      if (v39)
        goto LABEL_3;
LABEL_4:
      v43 = v41 + 1;
      if (__OFADD__(v41, 1))
      {
        __break(1u);
LABEL_27:
        __break(1u);
        return;
      }
      if (v43 >= v59)
        goto LABEL_20;
      ++v41;
      if (!*(_QWORD *)(a12 + 8 * v43))
      {
        v41 = v43 + 1;
        if (v43 + 1 >= v59)
          goto LABEL_20;
        if (!*(_QWORD *)(a12 + 8 * v41))
        {
          v44 = v43 + 2;
          if (v44 >= v59)
          {
LABEL_20:
            sub_1AE50A24C();
            v32 = v58;
            if ((v60 & 1) != 0)
            {
              sub_1AE640F88();
              if (v56 ^ v57 | v55)
                sub_1AE640880(v54);
              else
                sub_1AE506C64(v54);
              v33[2] = 0;
            }
            break;
          }
          if (!*(_QWORD *)(a12 + 8 * v44))
          {
            while (1)
            {
              v41 = v44 + 1;
              if (__OFADD__(v44, 1))
                goto LABEL_27;
              if (v41 >= v59)
                goto LABEL_20;
              ++v44;
              if (*(_QWORD *)(a12 + 8 * v41))
                goto LABEL_15;
            }
          }
          v41 = v44;
        }
      }
LABEL_15:
      sub_1AE640ED8();
    }
  }
  sub_1AE50A24C();
  *v32 = v61;
  sub_1AE4F778C();
}

void sub_1AE636428()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;

  sub_1AE507E64();
  sub_1AE501548(&qword_1EED94790);
  sub_1AE64050C();
  sub_1AE64075C();
  if (v3)
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v26 = v0;
    v27 = v1 + 64;
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 64);
    v7 = (unint64_t)(v4 + 63) >> 6;
    v8 = v2 + 64;
    sub_1AE524998();
    v9 = 0;
    if (!v6)
      goto LABEL_7;
LABEL_6:
    sub_1AE640C68();
    while (1)
    {
      v14 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v10);
      if ((v2 & 1) == 0)
        sub_1AE4FB930();
      sub_1AE6408F0();
      sub_1AE640F68();
      v15 = sub_1AE563878() & ~(-1 << *(_BYTE *)(v2 + 32));
      if (((-1 << v15) & ~*(_QWORD *)(v8 + 8 * (v15 >> 6))) == 0)
      {
        sub_1AE5053C0();
        while (1)
        {
          sub_1AE5637B4();
          if (v20)
          {
            if ((v17 & 1) != 0)
              break;
          }
          if (v18 == v19)
            v18 = 0;
          if (*(_QWORD *)(v8 + 8 * v18) != -1)
          {
            sub_1AE4FB888();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return;
      }
      sub_1AE4FC604();
LABEL_31:
      sub_1AE640618(v16);
      *(_QWORD *)(v22 + 8 * v21) = v14;
      sub_1AE6403DC();
      if (v6)
        goto LABEL_6;
LABEL_7:
      v11 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_40;
      if (v11 >= v7)
        goto LABEL_33;
      v12 = *(_QWORD *)(v27 + 8 * v11);
      ++v9;
      if (!v12)
      {
        v9 = v11 + 1;
        if (v11 + 1 >= v7)
          goto LABEL_33;
        v12 = *(_QWORD *)(v27 + 8 * v9);
        if (!v12)
        {
          v13 = v11 + 2;
          if (v13 >= v7)
          {
LABEL_33:
            sub_1AE50A24C();
            v0 = v26;
            if ((v2 & 1) != 0)
            {
              sub_1AE64037C();
              if (v24 != v25)
                sub_1AE640880(v23);
              else
                sub_1AE506C64(v23);
              *(_QWORD *)(v1 + 16) = 0;
            }
            break;
          }
          v12 = *(_QWORD *)(v27 + 8 * v13);
          if (!v12)
          {
            while (1)
            {
              v9 = v13 + 1;
              if (__OFADD__(v13, 1))
                goto LABEL_41;
              if (v9 >= v7)
                goto LABEL_33;
              v12 = *(_QWORD *)(v27 + 8 * v9);
              ++v13;
              if (v12)
                goto LABEL_18;
            }
          }
          v9 = v13;
        }
      }
LABEL_18:
      v6 = (v12 - 1) & v12;
      v10 = __clz(__rbit64(v12)) + (v9 << 6);
    }
  }
  sub_1AE50A24C();
  *v0 = v2;
  sub_1AE640850();
}

void sub_1AE636630()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  sub_1AE507E64();
  sub_1AE501548(&qword_1EED9EC48);
  sub_1AE64050C();
  sub_1AE64075C();
  if (v3)
  {
    sub_1AE6405FC();
    sub_1AE6409D8();
    v32 = v4;
    v5 = v2 + 64;
    sub_1AE524998();
    v6 = 0;
    if (!v0)
      goto LABEL_4;
LABEL_3:
    sub_1AE640F38();
    while (1)
    {
      v11 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v7 * v8);
      v12 = *v11;
      v13 = v11[1];
      v14 = *((_BYTE *)v11 + 16);
      if ((v2 & 1) == 0)
        sub_1AE4FB930();
      sub_1AE640FEC();
      sub_1AE640F68();
      sub_1AE926F10();
      sub_1AE6407F4();
      if (((v17 << v16) & ~*(_QWORD *)(v5 + 8 * v15)) == 0)
      {
        sub_1AE5053C0();
        while (1)
        {
          sub_1AE5637B4();
          if (v22)
          {
            if ((v19 & 1) != 0)
              break;
          }
          if (v20 == v21)
            v20 = 0;
          if (*(_QWORD *)(v5 + 8 * v20) != -1)
          {
            sub_1AE4FB888();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
      sub_1AE4FC604();
LABEL_28:
      sub_1AE640618(v18);
      v26 = v24 + v23 * v25;
      *(_QWORD *)v26 = v12;
      *(_QWORD *)(v26 + 8) = v13;
      *(_BYTE *)(v26 + 16) = v14;
      sub_1AE6403DC();
      if (v0)
        goto LABEL_3;
LABEL_4:
      v9 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_37;
      if (v9 >= v32)
        goto LABEL_30;
      ++v6;
      if (!v33[v9])
      {
        v6 = v9 + 1;
        if (v9 + 1 >= v32)
          goto LABEL_30;
        if (!v33[v6])
        {
          v10 = v9 + 2;
          if (v10 >= v32)
          {
LABEL_30:
            sub_1AE50A24C();
            if ((v2 & 1) != 0)
            {
              sub_1AE64037C();
              if (v27 != v28)
              {
                sub_1AE563C70();
                *v33 = v29;
              }
              else
              {
                v30 = sub_1AE64094C();
                sub_1AE555CAC(v30, v31, v33);
              }
              *(_QWORD *)(v1 + 16) = 0;
            }
            break;
          }
          if (!v33[v10])
          {
            while (1)
            {
              v6 = v10 + 1;
              if (__OFADD__(v10, 1))
                goto LABEL_38;
              if (v6 >= v32)
                goto LABEL_30;
              ++v10;
              if (v33[v6])
                goto LABEL_15;
            }
          }
          v6 = v10;
        }
      }
LABEL_15:
      sub_1AE640EC0();
    }
  }
  sub_1AE50A24C();
  *v0 = v2;
}

void sub_1AE636844(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t, _BYTE *))
{
  uint64_t *v4;
  _QWORD *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _BYTE v34[40];

  v7 = v4;
  sub_1AE64043C(a1, a2, a3);
  sub_1AE640DB8();
  sub_1AE64050C();
  sub_1AE64075C();
  if (v9)
  {
    v33 = v5 + 8;
    sub_1AE6409D8();
    v32 = v10;
    v11 = a2 + 64;
    sub_1AE524998();
    v12 = 0;
    if (!v4)
      goto LABEL_4;
LABEL_3:
    sub_1AE640F38();
    while (1)
    {
      v16 = v5[7] + 40 * v13;
      if ((a2 & 1) != 0)
      {
        a4(v16, v34);
      }
      else
      {
        sub_1AE52419C(v16, (uint64_t)v34);
        sub_1AE4F67A4();
      }
      sub_1AE926EC8();
      sub_1AE641100();
      sub_1AE926F10();
      sub_1AE6407F4();
      if (((v19 << v18) & ~*(_QWORD *)(v11 + 8 * v17)) == 0)
      {
        sub_1AE5053C0();
        while (1)
        {
          sub_1AE5637B4();
          if (v24)
          {
            if ((v21 & 1) != 0)
              break;
          }
          if (v22 == v23)
            v22 = 0;
          if (*(_QWORD *)(v11 + 8 * v22) != -1)
          {
            sub_1AE4FB888();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_1AE4FC604();
LABEL_29:
      sub_1AE640648(v20);
      a4((uint64_t)v34, (_BYTE *)(v26 + 40 * v25));
      sub_1AE6403DC();
      if (v4)
        goto LABEL_3;
LABEL_4:
      v14 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_38;
      if (v14 >= v32)
        goto LABEL_31;
      ++v12;
      if (!v33[v14])
      {
        v12 = v14 + 1;
        if (v14 + 1 >= v32)
          goto LABEL_31;
        if (!v33[v12])
        {
          v15 = v14 + 2;
          if (v15 >= v32)
          {
LABEL_31:
            sub_1AE50A24C();
            v7 = v4;
            if ((a2 & 1) != 0)
            {
              sub_1AE64037C();
              if (v27 != v28)
              {
                sub_1AE563C70();
                *v33 = v29;
              }
              else
              {
                v30 = sub_1AE64094C();
                sub_1AE555CAC(v30, v31, v33);
              }
              v5[2] = 0;
            }
            break;
          }
          if (!v33[v15])
          {
            while (1)
            {
              v12 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_39;
              if (v12 >= v32)
                goto LABEL_31;
              ++v15;
              if (v33[v12])
                goto LABEL_15;
            }
          }
          v12 = v15;
        }
      }
LABEL_15:
      sub_1AE640EC0();
    }
  }
  sub_1AE50A24C();
  *v7 = a2;
}

uint64_t sub_1AE636A60(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  int64_t v32;
  _QWORD *v33;
  uint64_t v34;

  v3 = v2;
  v5 = type metadata accessor for CodableLocation();
  v34 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  sub_1AE501548(&qword_1EED9EC28);
  v9 = a2;
  v10 = sub_1AE926AFC();
  v11 = (_QWORD *)v10;
  if (*(_QWORD *)(v8 + 16))
  {
    v12 = 1 << *(_BYTE *)(v8 + 32);
    v13 = *(_QWORD *)(v8 + 64);
    v33 = (_QWORD *)(v8 + 64);
    if (v12 < 64)
      v14 = ~(-1 << v12);
    else
      v14 = -1;
    v15 = v14 & v13;
    v31 = v2;
    v32 = (unint64_t)(v12 + 63) >> 6;
    v16 = v10 + 64;
    result = swift_retain();
    v18 = 0;
    if (!v15)
      goto LABEL_7;
LABEL_6:
    v19 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    for (i = v19 | (v18 << 6); ; i = __clz(__rbit64(v23)) + (v18 << 6))
    {
      v25 = *(_QWORD *)(v34 + 72);
      v26 = *(_QWORD *)(v8 + 48) + v25 * i;
      if ((v9 & 1) != 0)
        sub_1AE640220(v26, (uint64_t)v7);
      else
        sub_1AE640264(v26, (uint64_t)v7);
      v27 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * i);
      sub_1AE926EC8();
      CodableLocation.hash(into:)();
      sub_1AE926F10();
      v28 = sub_1AE92685C();
      *(_QWORD *)(v16 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      result = sub_1AE640220((uint64_t)v7, v11[6] + v25 * v28);
      *(_QWORD *)(v11[7] + 8 * v28) = v27;
      ++v11[2];
      if (v15)
        goto LABEL_6;
LABEL_7:
      v21 = v18 + 1;
      if (__OFADD__(v18, 1))
      {
        __break(1u);
LABEL_33:
        __break(1u);
        return result;
      }
      v22 = v33;
      if (v21 >= v32)
        goto LABEL_24;
      v23 = v33[v21];
      ++v18;
      if (!v23)
      {
        v18 = v21 + 1;
        if (v21 + 1 >= v32)
          goto LABEL_24;
        v23 = v33[v18];
        if (!v23)
        {
          v24 = v21 + 2;
          if (v24 >= v32)
          {
LABEL_24:
            swift_release();
            if ((v9 & 1) == 0)
            {
              result = swift_release();
              v3 = v31;
              goto LABEL_31;
            }
            v29 = 1 << *(_BYTE *)(v8 + 32);
            if (v29 >= 64)
              sub_1AE555CAC(0, (unint64_t)(v29 + 63) >> 6, v22);
            else
              *v22 = -1 << v29;
            v3 = v31;
            *(_QWORD *)(v8 + 16) = 0;
            break;
          }
          v23 = v33[v24];
          if (!v23)
          {
            while (1)
            {
              v18 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_33;
              if (v18 >= v32)
                goto LABEL_24;
              v23 = v33[v18];
              ++v24;
              if (v23)
                goto LABEL_18;
            }
          }
          v18 = v24;
        }
      }
LABEL_18:
      v15 = (v23 - 1) & v23;
    }
  }
  result = swift_release();
LABEL_31:
  *v3 = v11;
  return result;
}

void sub_1AE636D30(uint64_t a1, uint64_t a2)
{
  sub_1AE636FB4(a1, a2, &qword_1EED9E350, (uint64_t)&unk_1EED9EB00);
}

void sub_1AE636D44(uint64_t a1, uint64_t a2)
{
  sub_1AE636FB4(a1, a2, &qword_1EED9E350, (uint64_t)&unk_1EED9EB20);
}

void sub_1AE636D58(uint64_t a1, uint64_t a2)
{
  sub_1AE636FB4(a1, a2, &qword_1EED9A850, (uint64_t)&unk_1EED9EB80);
}

void sub_1AE636D6C(uint64_t a1, uint64_t a2)
{
  sub_1AE636FB4(a1, a2, &qword_1EED9E350, (uint64_t)&unk_1EED9EB90);
}

void sub_1AE636D80(uint64_t a1, uint64_t a2)
{
  sub_1AE636FB4(a1, a2, &qword_1EED9A850, (uint64_t)&unk_1EED9EB60);
}

void sub_1AE636D94(uint64_t a1, uint64_t a2)
{
  sub_1AE636FB4(a1, a2, &qword_1EED9E350, (uint64_t)&unk_1EED9EB70);
}

void sub_1AE636DA8(uint64_t a1, uint64_t a2)
{
  sub_1AE636FB4(a1, a2, &qword_1EED9A850, (uint64_t)&unk_1EED9EB40);
}

void sub_1AE636DBC(uint64_t a1, uint64_t a2)
{
  sub_1AE636FB4(a1, a2, &qword_1EED9E350, (uint64_t)&unk_1EED9EB50);
}

void sub_1AE636DD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;

  sub_1AE505CD4();
  v5 = v0;
  v7 = v6;
  sub_1AE50758C();
  sub_1AE501548(&qword_1EED9EBA0);
  sub_1AE64047C();
  sub_1AE64075C();
  if (v8)
  {
    v25 = v7;
    v9 = 0;
    v26 = v1 + 64;
    sub_1AE640704();
    if (!v3)
      goto LABEL_4;
LABEL_3:
    sub_1AE640CA8();
    while (1)
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v10);
      sub_1AE6408F0();
      sub_1AE640FE0();
      sub_1AE563878();
      sub_1AE6409A4();
      if (v14)
      {
        sub_1AE5053C0();
        while (1)
        {
          sub_1AE5637B4();
          if (v14)
          {
            if ((v16 & 1) != 0)
              break;
          }
          if (v17 == v18)
            v17 = 0;
          if (v0[v17] != -1)
          {
            sub_1AE4FB888();
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
      sub_1AE4FC604();
LABEL_26:
      sub_1AE640698(v15);
      *(_QWORD *)(v20 + 8 * v19) = v13;
      sub_1AE6403DC();
      if (v3)
        goto LABEL_3;
LABEL_4:
      v11 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_37;
      if (v11 >= v4)
        goto LABEL_28;
      ++v9;
      if (!*(_QWORD *)(v26 + 8 * v11))
      {
        v9 = v11 + 1;
        if (v11 + 1 >= v4)
          goto LABEL_28;
        if (!*(_QWORD *)(v26 + 8 * v9))
        {
          v12 = v11 + 2;
          if (v12 >= v4)
          {
LABEL_28:
            if ((v25 & 1) == 0)
            {
              sub_1AE50A24C();
              v5 = v0;
              goto LABEL_35;
            }
            sub_1AE64037C();
            if (v23 != v24)
              *v21 = -1 << v22;
            else
              sub_1AE640C50(v21, v22);
            v5 = v0;
            *(_QWORD *)(v1 + 16) = 0;
            break;
          }
          if (!*(_QWORD *)(v26 + 8 * v12))
          {
            while (1)
            {
              v9 = v12 + 1;
              if (__OFADD__(v12, 1))
                goto LABEL_38;
              if (v9 >= v4)
                goto LABEL_28;
              ++v12;
              if (*(_QWORD *)(v26 + 8 * v9))
                goto LABEL_15;
            }
          }
          v9 = v12;
        }
      }
LABEL_15:
      sub_1AE640EF0();
    }
  }
  sub_1AE50A24C();
LABEL_35:
  *v5 = v2;
  sub_1AE4F778C();
}

void sub_1AE636F64(uint64_t a1, uint64_t a2)
{
  sub_1AE636FB4(a1, a2, &qword_1EED9A850, (uint64_t)&unk_1EED9EAF0);
}

void sub_1AE636F78(uint64_t a1, uint64_t a2)
{
  sub_1AE636FB4(a1, a2, &qword_1EED9E350, (uint64_t)&unk_1EED9EB10);
}

void sub_1AE636F8C(uint64_t a1, uint64_t a2)
{
  sub_1AE636FB4(a1, a2, &qword_1EED9A850, (uint64_t)&unk_1EED9EAD0);
}

void sub_1AE636FA0(uint64_t a1, uint64_t a2)
{
  sub_1AE636FB4(a1, a2, &qword_1EED9A850, (uint64_t)&unk_1EED9EAE0);
}

void sub_1AE636FB4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  _QWORD *v38;
  int v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v6 = v4;
  v7 = a2;
  v43 = sub_1AE52FD5C(a1, a2, a3);
  v8 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v4;
  sub_1AE640C34();
  sub_1AE640DB8();
  sub_1AE64050C();
  sub_1AE64075C();
  if (v12)
  {
    v38 = v4;
    v13 = 0;
    v41 = v11 + 8;
    sub_1AE640B28();
    v16 = v15 & v14;
    v40 = (unint64_t)(v17 + 63) >> 6;
    v18 = a4 + 64;
    v39 = v7;
    v19 = 16;
    if ((v7 & 1) != 0)
      v19 = 32;
    v42 = v19;
    if (!v16)
      goto LABEL_6;
LABEL_5:
    sub_1AE640C80();
    while (1)
    {
      v23 = *(_BYTE *)(v11[6] + v20);
      v24 = *(_QWORD *)(v8 + 72);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + v42))(v10, v11[7] + v24 * v20, v43);
      sub_1AE640FF8();
      sub_1AE926EEC();
      sub_1AE926F10();
      sub_1AE6407F4();
      if (((v27 << v26) & ~*(_QWORD *)(v18 + 8 * v25)) == 0)
      {
        sub_1AE5053C0();
        while (1)
        {
          sub_1AE5637B4();
          if (v32)
          {
            if ((v29 & 1) != 0)
              break;
          }
          if (v30 == v31)
            v30 = 0;
          if (*(_QWORD *)(v18 + 8 * v30) != -1)
          {
            sub_1AE4FB888();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      sub_1AE4FC604();
LABEL_28:
      *(_QWORD *)(v18 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      *(_BYTE *)(*(_QWORD *)(a4 + 48) + v28) = v23;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(a4 + 56) + v24 * v28, v10, v43);
      sub_1AE6403DC();
      if (v16)
        goto LABEL_5;
LABEL_6:
      v21 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_39;
      if (v21 >= v40)
        goto LABEL_30;
      ++v13;
      if (!v41[v21])
      {
        v13 = v21 + 1;
        if (v21 + 1 >= v40)
          goto LABEL_30;
        if (!v41[v13])
        {
          v22 = v21 + 2;
          if (v22 >= v40)
          {
LABEL_30:
            if ((v39 & 1) == 0)
            {
              sub_1AE50A24C();
              v6 = v38;
              goto LABEL_37;
            }
            sub_1AE64037C();
            if (v35 != v36)
              *v33 = -1 << v34;
            else
              sub_1AE640C50(v33, v34);
            v6 = v38;
            v11[2] = 0;
            break;
          }
          if (!v41[v22])
          {
            while (1)
            {
              v13 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_40;
              if (v13 >= v40)
                goto LABEL_30;
              ++v22;
              if (v41[v13])
                goto LABEL_17;
            }
          }
          v13 = v22;
        }
      }
LABEL_17:
      sub_1AE640ED8();
    }
  }
  sub_1AE50A24C();
LABEL_37:
  *v6 = a4;
  sub_1AE4F8180();
}

void sub_1AE63721C(uint64_t a1, uint64_t a2)
{
  sub_1AE637264(a1, a2, &qword_1EED9EBF8);
}

void sub_1AE637228(uint64_t a1, uint64_t a2)
{
  sub_1AE637264(a1, a2, &qword_1EED9EC08);
}

void sub_1AE637234(uint64_t a1, uint64_t a2)
{
  sub_1AE637264(a1, a2, &qword_1EED9EBE8);
}

void sub_1AE637240(uint64_t a1, uint64_t a2)
{
  sub_1AE637264(a1, a2, &qword_1EED9EBD8);
}

void sub_1AE63724C(uint64_t a1, uint64_t a2)
{
  sub_1AE637264(a1, a2, &qword_1EED9EBC8);
}

void sub_1AE637258(uint64_t a1, uint64_t a2)
{
  sub_1AE637264(a1, a2, &qword_1EED9EBB8);
}

void sub_1AE637264(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v8 = v3;
  v9 = a2;
  sub_1AE64043C(a1, a2, a3);
  sub_1AE64047C();
  sub_1AE64075C();
  if (v10)
  {
    v27 = v9;
    v11 = 0;
    v12 = v4 + 8;
    sub_1AE640704();
    if (!v6)
      goto LABEL_4;
LABEL_3:
    sub_1AE640CA8();
    while (1)
    {
      v16 = *(_QWORD *)(v4[7] + 8 * v13);
      sub_1AE6408F0();
      sub_1AE640FE0();
      sub_1AE563878();
      sub_1AE6409A4();
      if (v17)
      {
        sub_1AE5053C0();
        while (1)
        {
          sub_1AE5637B4();
          if (v17)
          {
            if ((v19 & 1) != 0)
              break;
          }
          if (v20 == v21)
            v20 = 0;
          if (v3[v20] != -1)
          {
            sub_1AE4FB888();
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return;
      }
      sub_1AE4FC604();
LABEL_26:
      sub_1AE640698(v18);
      *(_QWORD *)(v23 + 8 * v22) = v16;
      sub_1AE6403DC();
      if (v6)
        goto LABEL_3;
LABEL_4:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_37;
      if (v14 >= v7)
        goto LABEL_28;
      ++v11;
      if (!v12[v14])
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v7)
          goto LABEL_28;
        if (!v12[v11])
        {
          v15 = v14 + 2;
          if (v15 >= v7)
          {
LABEL_28:
            if ((v27 & 1) == 0)
            {
              sub_1AE50A24C();
              v8 = v3;
              goto LABEL_35;
            }
            sub_1AE64037C();
            if (v25 != v26)
              *v12 = -1 << v24;
            else
              sub_1AE640AC8(v24);
            v8 = v3;
            v4[2] = 0;
            break;
          }
          if (!v12[v15])
          {
            while (1)
            {
              v11 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_38;
              if (v11 >= v7)
                goto LABEL_28;
              ++v15;
              if (v12[v11])
                goto LABEL_15;
            }
          }
          v11 = v15;
        }
      }
LABEL_15:
      sub_1AE640EF0();
    }
  }
  sub_1AE50A24C();
LABEL_35:
  *v8 = v5;
  sub_1AE640850();
}

void sub_1AE6373F4(uint64_t a1, uint64_t a2)
{
  sub_1AE637434(a1, a2, &qword_1EED9E350);
}

void sub_1AE637408(uint64_t a1, uint64_t a2)
{
  sub_1AE63789C(a1, a2, &qword_1EED9EB38);
}

void sub_1AE637414(uint64_t a1, uint64_t a2)
{
  sub_1AE63789C(a1, a2, &qword_1EED9EB30);
}

void sub_1AE637420(uint64_t a1, uint64_t a2)
{
  sub_1AE637434(a1, a2, &qword_1EED9A850);
}

void sub_1AE637434(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v4 = v3;
  v5 = a2;
  v40 = sub_1AE52FD5C(a1, a2, a3);
  v6 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  sub_1AE4F9024();
  v39 = v7;
  v8 = *v3;
  sub_1AE640C34();
  v9 = sub_1AE64050C();
  if (*(_QWORD *)(v8 + 16))
  {
    v10 = 1 << *(_BYTE *)(v8 + 32);
    v38 = (_QWORD *)(v8 + 64);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v8 + 64);
    v37 = (unint64_t)(v10 + 63) >> 6;
    swift_retain();
    v13 = 0;
    if (!v12)
      goto LABEL_7;
LABEL_6:
    v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      v19 = *(_QWORD *)(v8 + 56);
      v20 = v8;
      v21 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * i);
      v23 = *v21;
      v22 = v21[1];
      v24 = *(_QWORD *)(v6 + 72);
      v25 = v19 + v24 * i;
      if ((v5 & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v39, v25, v40);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v39, v25, v40);
        sub_1AE4FB764();
      }
      sub_1AE640FF8();
      sub_1AE925F14();
      sub_1AE926F10();
      sub_1AE6408CC();
      if (v26)
      {
        sub_1AE5053C0();
        while (1)
        {
          sub_1AE5637B4();
          if (v26)
          {
            if ((v28 & 1) != 0)
              break;
          }
          if (v29 == v30)
            v29 = 0;
          if (*(_QWORD *)(v9 + 64 + 8 * v29) != -1)
          {
            sub_1AE4FB888();
            goto LABEL_32;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      sub_1AE4FC604();
LABEL_32:
      sub_1AE6408A8(v27);
      v33 = (_QWORD *)(v32 + 16 * v31);
      *v33 = v23;
      v33[1] = v22;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(*(_QWORD *)(v9 + 56) + v24 * v31, v39, v40);
      sub_1AE6403DC();
      v8 = v20;
      if (v12)
        goto LABEL_6;
LABEL_7:
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_41;
      if (v16 >= v37)
        goto LABEL_34;
      v17 = v38[v16];
      ++v13;
      if (!v17)
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v37)
          goto LABEL_34;
        v17 = v38[v13];
        if (!v17)
        {
          v18 = v16 + 2;
          if (v18 >= v37)
          {
LABEL_34:
            swift_release();
            v4 = v3;
            if ((v5 & 1) != 0)
            {
              if (1 << *(_BYTE *)(v8 + 32) >= 64)
              {
                v35 = sub_1AE64094C();
                sub_1AE555CAC(v35, v36, v38);
              }
              else
              {
                sub_1AE563C70();
                *v38 = v34;
              }
              *(_QWORD *)(v8 + 16) = 0;
            }
            break;
          }
          v17 = v38[v18];
          if (!v17)
          {
            while (1)
            {
              v13 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v13 >= v37)
                goto LABEL_34;
              v17 = v38[v13];
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          v13 = v18;
        }
      }
LABEL_18:
      v12 = (v17 - 1) & v17;
    }
  }
  swift_release();
  *v4 = v9;
  sub_1AE4F8180();
}

void sub_1AE6376E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9, uint64_t a10)
{
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;

  sub_1AE563CB4();
  v16 = v10;
  v18 = v17;
  sub_1AE50758C();
  sub_1AE501548(&qword_1EED9EBB0);
  sub_1AE64047C();
  sub_1AE64075C();
  if (v19)
  {
    sub_1AE6403FC();
    v20 = 0;
    if (!v13)
      goto LABEL_4;
LABEL_3:
    sub_1AE5639E8();
    while (1)
    {
      v24 = *(void **)(v11[6] + 8 * v21);
      v25 = *(_QWORD *)(v11[7] + 8 * v21);
      if ((v18 & 1) == 0)
        v26 = v24;
      sub_1AE9266DC();
      sub_1AE640984();
      if (v27)
      {
        sub_1AE5053C0();
        while (1)
        {
          sub_1AE5637B4();
          if (v27)
          {
            if ((v29 & 1) != 0)
              break;
          }
          if (v30 == v31)
            v30 = 0;
          if (*(_QWORD *)(v15 + 8 * v30) != -1)
          {
            sub_1AE4FB888();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      sub_1AE4FC604();
LABEL_28:
      *(_QWORD *)(v15 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v28) = v24;
      *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v28) = v25;
      sub_1AE6403DC();
      if (v13)
        goto LABEL_3;
LABEL_4:
      v22 = v20 + 1;
      if (__OFADD__(v20, 1))
        goto LABEL_39;
      if (v22 >= v14)
        break;
      ++v20;
      if (!*(_QWORD *)(a10 + 8 * v22))
      {
        v20 = v22 + 1;
        if (v22 + 1 >= v14)
          goto LABEL_30;
        if (!*(_QWORD *)(a10 + 8 * v20))
        {
          v23 = v22 + 2;
          if (v23 >= v14)
          {
LABEL_30:
            sub_1AE50A24C();
            v16 = a9;
            if ((v18 & 1) == 0)
              goto LABEL_37;
            goto LABEL_33;
          }
          if (!*(_QWORD *)(a10 + 8 * v23))
          {
            while (1)
            {
              v20 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_40;
              if (v20 >= v14)
                goto LABEL_30;
              ++v23;
              if (*(_QWORD *)(a10 + 8 * v20))
                goto LABEL_15;
            }
          }
          v20 = v23;
        }
      }
LABEL_15:
      sub_1AE563998();
    }
    sub_1AE50A24C();
    v16 = a9;
    if ((v18 & 1) == 0)
      goto LABEL_37;
LABEL_33:
    sub_1AE64037C();
    if (v33 != v34)
      sub_1AE640880(v32);
    else
      sub_1AE506C64(v32);
    v11[2] = 0;
  }
LABEL_37:
  sub_1AE50A24C();
  *v16 = v12;
  sub_1AE506210();
}

void sub_1AE637884(uint64_t a1, uint64_t a2)
{
  sub_1AE63789C(a1, a2, &qword_1EED9EAC0);
}

void sub_1AE637890(uint64_t a1, uint64_t a2)
{
  sub_1AE63789C(a1, a2, &qword_1EED9EAC8);
}

void sub_1AE63789C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  int64_t v31;
  uint64_t v32;

  v5 = v3;
  sub_1AE64043C(a1, a2, a3);
  sub_1AE64050C();
  sub_1AE64075C();
  if (v7)
  {
    sub_1AE6405FC();
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v31 = (unint64_t)(v8 + 63) >> 6;
    v12 = a2 + 64;
    sub_1AE524998();
    v13 = 0;
    if (!v11)
      goto LABEL_7;
LABEL_6:
    sub_1AE64102C();
    for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      v19 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * i);
      if ((a2 & 1) == 0)
      {
        sub_1AE4F67A4();
        sub_1AE4FB930();
      }
      sub_1AE640FEC();
      sub_1AE641100();
      v20 = sub_1AE926F10() & ~(-1 << *(_BYTE *)(a2 + 32));
      if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        sub_1AE5053C0();
        while (1)
        {
          sub_1AE5637B4();
          if (v25)
          {
            if ((v22 & 1) != 0)
              break;
          }
          if (v23 == v24)
            v23 = 0;
          if (*(_QWORD *)(v12 + 8 * v23) != -1)
          {
            sub_1AE4FB888();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return;
      }
      sub_1AE4FC604();
LABEL_31:
      sub_1AE640648(v21);
      *(_QWORD *)(v27 + 8 * v26) = v19;
      sub_1AE6403DC();
      if (v11)
        goto LABEL_6;
LABEL_7:
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_40;
      if (v16 >= v31)
        goto LABEL_33;
      v17 = *(_QWORD *)(v32 + 8 * v16);
      ++v13;
      if (!v17)
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v31)
          goto LABEL_33;
        v17 = *(_QWORD *)(v32 + 8 * v13);
        if (!v17)
        {
          v18 = v16 + 2;
          if (v18 >= v31)
          {
LABEL_33:
            sub_1AE50A24C();
            v5 = v3;
            if ((a2 & 1) != 0)
            {
              sub_1AE64037C();
              if (v29 != v30)
                sub_1AE640880(v28);
              else
                sub_1AE506C64(v28);
              *(_QWORD *)(v4 + 16) = 0;
            }
            break;
          }
          v17 = *(_QWORD *)(v32 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v13 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_41;
              if (v13 >= v31)
                goto LABEL_33;
              v17 = *(_QWORD *)(v32 + 8 * v13);
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          v13 = v18;
        }
      }
LABEL_18:
      v11 = (v17 - 1) & v17;
    }
  }
  sub_1AE50A24C();
  *v5 = a2;
}

uint64_t sub_1AE637ABC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t *v35;
  int64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v3 = v2;
  v5 = *v2;
  sub_1AE501548(&qword_1EED9EAA0);
  result = sub_1AE926AFC();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = *(_QWORD *)(v5 + 64);
    v35 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & v9;
    v34 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    if ((v11 & v9) == 0)
      goto LABEL_7;
LABEL_6:
    v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v36 = v8;
    for (i = v14 | (v8 << 6); ; i = __clz(__rbit64(v17)) + (v18 << 6))
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * i);
      v21 = *(_QWORD *)(v5 + 56) + 72 * i;
      v39 = *(_OWORD *)(v21 + 32);
      v40 = *(_OWORD *)(v21 + 16);
      v37 = *(_OWORD *)v21;
      v38 = *(_OWORD *)(v21 + 48);
      v22 = *(_QWORD *)(v21 + 64);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      result = sub_1AE926EBC();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) == 0)
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          v29 = v25 == v28;
          if (v25 == v28)
            v25 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v13 + 8 * v25);
          if (v30 != -1)
          {
            v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v13 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v26) = v20;
      v31 = *(_QWORD *)(v7 + 56) + 72 * v26;
      *(_OWORD *)v31 = v37;
      *(_OWORD *)(v31 + 16) = v40;
      *(_OWORD *)(v31 + 32) = v39;
      *(_OWORD *)(v31 + 48) = v38;
      *(_QWORD *)(v31 + 64) = v22;
      ++*(_QWORD *)(v7 + 16);
      v8 = v36;
      if (v12)
        goto LABEL_6;
LABEL_7:
      v16 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_40;
      if (v16 >= v34)
        goto LABEL_32;
      v17 = v35[v16];
      v18 = v8 + 1;
      if (!v17)
      {
        v18 = v16 + 1;
        if (v16 + 1 >= v34)
          goto LABEL_32;
        v17 = v35[v18];
        if (!v17)
        {
          v19 = v16 + 2;
          if (v19 >= v34)
          {
LABEL_32:
            if ((a2 & 1) != 0)
            {
              if (v33 >= 64)
                sub_1AE555CAC(0, v34, v35);
              else
                *v35 = v32;
              *(_QWORD *)(v5 + 16) = 0;
            }
            break;
          }
          v17 = v35[v19];
          if (!v17)
          {
            while (1)
            {
              v18 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_41;
              if (v18 >= v34)
                goto LABEL_32;
              v17 = v35[v18];
              ++v19;
              if (v17)
                goto LABEL_18;
            }
          }
          v18 = v19;
        }
      }
LABEL_18:
      v12 = (v17 - 1) & v17;
      v36 = v18;
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1AE637DF0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  sub_1AE501548(&qword_1EED9EA80);
  result = sub_1AE926AFC();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = *(_QWORD *)(v5 + 64);
    v31 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & v9;
    v30 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    if ((v11 & v9) == 0)
      goto LABEL_7;
LABEL_6:
    v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    for (i = v14 | (v8 << 6); ; i = __clz(__rbit64(v17)) + (v8 << 6))
    {
      v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * i);
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1AE926EC8();
      sub_1AE926EF8();
      result = sub_1AE926F10();
      v21 = -1 << *(_BYTE *)(v7 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) == 0)
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v21) >> 6;
        while (++v23 != v26 || (v25 & 1) == 0)
        {
          v27 = v23 == v26;
          if (v23 == v26)
            v23 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v23);
          if (v28 != -1)
          {
            v24 = __clz(__rbit64(~v28)) + (v23 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return result;
      }
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v13 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v24) = v19;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v24) = v20;
      ++*(_QWORD *)(v7 + 16);
      if (v12)
        goto LABEL_6;
LABEL_7:
      v16 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_41;
      if (v16 >= v30)
        goto LABEL_32;
      v17 = v31[v16];
      ++v8;
      if (!v17)
      {
        v8 = v16 + 1;
        if (v16 + 1 >= v30)
          goto LABEL_32;
        v17 = v31[v8];
        if (!v17)
        {
          v18 = v16 + 2;
          if (v18 >= v30)
          {
LABEL_32:
            if ((a2 & 1) == 0)
            {
              result = swift_release();
              v3 = v2;
              goto LABEL_39;
            }
            v29 = 1 << *(_BYTE *)(v5 + 32);
            if (v29 >= 64)
              sub_1AE555CAC(0, (unint64_t)(v29 + 63) >> 6, v31);
            else
              *v31 = -1 << v29;
            v3 = v2;
            *(_QWORD *)(v5 + 16) = 0;
            break;
          }
          v17 = v31[v18];
          if (!v17)
          {
            while (1)
            {
              v8 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v8 >= v30)
                goto LABEL_32;
              v17 = v31[v8];
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          v8 = v18;
        }
      }
LABEL_18:
      v12 = (v17 - 1) & v17;
    }
  }
  result = swift_release();
LABEL_39:
  *v3 = v7;
  return result;
}

void sub_1AE6380B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9, uint64_t a10)
{
  sub_1AE6380C4(a1, a2, (uint64_t)&unk_1EED9EA78, a4, a5, a6, a7, a8, a9, a10);
}

void sub_1AE6380C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9, uint64_t a10)
{
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;

  sub_1AE563CB4();
  v16 = v10;
  v18 = v17;
  sub_1AE64043C(v19, v17, v20);
  sub_1AE64047C();
  sub_1AE64075C();
  if (v21)
  {
    sub_1AE6403FC();
    v22 = 0;
    if (!v13)
      goto LABEL_4;
LABEL_3:
    sub_1AE5639E8();
    while (1)
    {
      v26 = *(void **)(v11[6] + 8 * v23);
      v27 = *(void **)(v11[7] + 8 * v23);
      if ((v18 & 1) == 0)
      {
        v28 = v26;
        v29 = v27;
      }
      sub_1AE9266DC();
      sub_1AE640984();
      if (v30)
      {
        sub_1AE5053C0();
        while (1)
        {
          sub_1AE5637B4();
          if (v30)
          {
            if ((v32 & 1) != 0)
              break;
          }
          if (v33 == v34)
            v33 = 0;
          if (*(_QWORD *)(v15 + 8 * v33) != -1)
          {
            sub_1AE4FB888();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      sub_1AE4FC604();
LABEL_28:
      *(_QWORD *)(v15 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
      *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v31) = v26;
      *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v31) = v27;
      sub_1AE6403DC();
      if (v13)
        goto LABEL_3;
LABEL_4:
      v24 = v22 + 1;
      if (__OFADD__(v22, 1))
        goto LABEL_39;
      if (v24 >= v14)
        break;
      ++v22;
      if (!*(_QWORD *)(a10 + 8 * v24))
      {
        v22 = v24 + 1;
        if (v24 + 1 >= v14)
          goto LABEL_30;
        if (!*(_QWORD *)(a10 + 8 * v22))
        {
          v25 = v24 + 2;
          if (v25 >= v14)
          {
LABEL_30:
            sub_1AE50A24C();
            v16 = a9;
            if ((v18 & 1) == 0)
              goto LABEL_37;
            goto LABEL_33;
          }
          if (!*(_QWORD *)(a10 + 8 * v25))
          {
            while (1)
            {
              v22 = v25 + 1;
              if (__OFADD__(v25, 1))
                goto LABEL_40;
              if (v22 >= v14)
                goto LABEL_30;
              ++v25;
              if (*(_QWORD *)(a10 + 8 * v22))
                goto LABEL_15;
            }
          }
          v22 = v25;
        }
      }
LABEL_15:
      sub_1AE563998();
    }
    sub_1AE50A24C();
    v16 = a9;
    if ((v18 & 1) == 0)
      goto LABEL_37;
LABEL_33:
    sub_1AE64037C();
    if (v36 != v37)
      sub_1AE640880(v35);
    else
      sub_1AE506C64(v35);
    v11[2] = 0;
  }
LABEL_37:
  sub_1AE50A24C();
  *v16 = v12;
  sub_1AE506210();
}

unint64_t sub_1AE63825C(uint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  unint64_t result;
  uint64_t v9;

  sub_1AE926EC8();
  sub_1AE926EE0();
  if ((a2 & 1) == 0)
    sub_1AE926EF8();
  sub_1AE926F10();
  result = sub_1AE92685C();
  *(_QWORD *)((char *)a4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  v9 = a4[6] + 16 * result;
  *(_QWORD *)v9 = a1;
  *(_BYTE *)(v9 + 8) = a2 & 1;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  ++a4[2];
  return result;
}

uint64_t sub_1AE63833C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  unint64_t v8;
  _QWORD *v9;
  uint64_t result;

  sub_1AE926EC8();
  sub_1AE926EE0();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1AE925F14();
    swift_bridgeObjectRelease();
  }
  sub_1AE926F10();
  v8 = sub_1AE92685C();
  *(_QWORD *)((char *)a4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
  v9 = (_QWORD *)(a4[6] + 16 * v8);
  *v9 = a1;
  v9[1] = a2;
  result = sub_1AE6401D8(a3, a4[7] + 32 * v8);
  ++a4[2];
  return result;
}

__n128 sub_1AE638430(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  int v6;
  unint64_t v7;
  uint64_t v8;
  __int16 v9;
  __int128 v10;
  uint64_t v11;
  __n128 result;
  __int128 v13;

  sub_1AE926EC8();
  v6 = *(unsigned __int8 *)(a1 + 33);
  swift_bridgeObjectRetain();
  sub_1AE5C7880(a1);
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  sub_1AE525EF8(a1);
  sub_1AE926EE0();
  if (v6 != 2)
    sub_1AE926ED4();
  sub_1AE926F10();
  v7 = sub_1AE92685C();
  *(_QWORD *)((char *)a3 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
  v8 = a3[6] + 40 * v7;
  v9 = *(_WORD *)(a1 + 32);
  v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v8 = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 16) = v10;
  *(_WORD *)(v8 + 32) = v9;
  v11 = a3[7] + 40 * v7;
  result = *(__n128 *)a2;
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v11 = *(_OWORD *)a2;
  *(_OWORD *)(v11 + 16) = v13;
  *(_QWORD *)(v11 + 32) = *(_QWORD *)(a2 + 32);
  ++a3[2];
  return result;
}

__n128 sub_1AE638568(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __n128 result;

  sub_1AE926EC8();
  sub_1AE4F6708();
  sub_1AE925F14();
  sub_1AE4F76D8();
  sub_1AE4FB930();
  sub_1AE925F14();
  sub_1AE4F66E8();
  sub_1AE4FB764();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  sub_1AE4F905C();
  sub_1AE563C70();
  v6 = sub_1AE92685C();
  *(_QWORD *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  v7 = a3[6] + 48 * v6;
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v7 = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 16) = v8;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v7 + 32) = result;
  *(_QWORD *)(a3[7] + 8 * v6) = a2;
  ++a3[2];
  return result;
}

void sub_1AE638684(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;
  _BYTE v25[32];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v6 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1AE6402C4(v6, (uint64_t)&v28, &qword_1EED9E258);
    v8 = v28;
    v7 = v29;
    v26 = v28;
    v27 = v29;
    sub_1AE6401D8((uint64_t)&v30, (uint64_t)v25);
    v9 = (_QWORD *)*a3;
    v11 = sub_1AE537190(v8, v7);
    v12 = v9[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE501548(&qword_1ED30FC40);
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v10;
    if (v9[3] < v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EA98);
      sub_1AE926A60();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v19 = (uint64_t *)(v18[6] + 16 * v11);
    *v19 = v8;
    v19[1] = v7;
    sub_1AE6401D8((uint64_t)v25, v18[7] + 32 * v11);
    v20 = v18[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_18;
    v18[2] = v22;
    v6 += 48;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE635800(v14, a2 & 1);
  v16 = sub_1AE537190(v8, v7);
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v11 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v31 = v23;
  v24 = v23;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1AE52FBE8((uint64_t)v25, (uint64_t *)&unk_1ED31C440);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE501548(&qword_1ED30FC40);
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE638988(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  void *v33;
  id v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;

  v41 = a3;
  v6 = sub_1AE501548(&qword_1EED9AC70);
  v40 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9AC80);
  v10 = MEMORY[0x1E0C80A78](v9);
  v13 = (_QWORD *)((char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v35[1] = v3;
  v35[2] = a1;
  v39 = (char *)v13 + *(int *)(v10 + 48);
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v36 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v37 = v6;
  v38 = v8;
  while (1)
  {
    sub_1AE6402C4(v15, (uint64_t)v13, &qword_1EED9AC80);
    v16 = v13;
    v17 = *v13;
    v45 = *v13;
    v18 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
    v18(v8, v39, v6);
    v19 = (_QWORD *)*v41;
    v21 = sub_1AE536D68();
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EC80);
      sub_1AE926A60();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = (_QWORD *)*v41;
    *(_QWORD *)(*v41 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(_QWORD *)(v28[6] + 8 * v21) = v17;
    v29 = v28[7] + *(_QWORD *)(v40 + 72) * v21;
    v6 = v37;
    v8 = v38;
    v18((char *)v29, v38, v37);
    v30 = v28[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_18;
    v28[2] = v32;
    v15 += v36;
    a2 = 1;
    --v14;
    v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE635A24(v24, a2 & 1);
  v26 = sub_1AE536D68();
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v33 = (void *)swift_allocError();
  swift_willThrow();
  v44 = v33;
  v34 = v33;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v37);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v42 = 0;
  v43 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE638D30(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;

  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_17:
    swift_bridgeObjectRelease_n();
    return;
  }
  v6 = 0;
  v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v6 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_23;
    }
    v9 = *(v7 - 1);
    v8 = *v7;
    v10 = (_QWORD *)*a3;
    v12 = sub_1AE536D68();
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      goto LABEL_20;
    v16 = v11;
    if (v10[3] < v15)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EC70);
      sub_1AE926A60();
      if ((v16 & 1) != 0)
        goto LABEL_15;
    }
LABEL_11:
    v19 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(_QWORD *)(v19[6] + 8 * v12) = v9;
    *(_QWORD *)(v19[7] + 8 * v12) = v8;
    v20 = v19[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_21;
    ++v6;
    v19[2] = v22;
    v7 += 2;
    a2 = 1;
    if (v5 == v6)
      goto LABEL_17;
  }
  sub_1AE635D60(v15, a2 & 1);
  v17 = sub_1AE536D68();
  if ((v16 & 1) != (v18 & 1))
    goto LABEL_22;
  v12 = v17;
  if ((v16 & 1) == 0)
    goto LABEL_11;
LABEL_15:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v24 = v23;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_23:
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE638FE4(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __int16 v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v35;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int16 v40;
  id v41;

  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v32 = v3;
  if (!v3)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v4 = 0;
  v5 = 0;
  while (1)
  {
    if (v5 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_24;
    }
    v37 = *(_OWORD *)(a1 + v4 + 80);
    v6 = *(unsigned __int8 *)(a1 + v4 + 64);
    v7 = *(unsigned __int8 *)(a1 + v4 + 65);
    v8 = *(_QWORD *)(a1 + v4 + 104);
    v35 = *(_QWORD *)(a1 + v4 + 96);
    v9 = *(_QWORD *)(a1 + v4 + 72);
    v11 = *(_QWORD *)(a1 + v4 + 48);
    v10 = *(_QWORD *)(a1 + v4 + 56);
    v13 = *(_QWORD *)(a1 + v4 + 32);
    v12 = *(_QWORD *)(a1 + v4 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (!v12)
      goto LABEL_18;
    *(_QWORD *)&v38 = v13;
    *((_QWORD *)&v38 + 1) = v12;
    *(_QWORD *)&v39 = v11;
    *((_QWORD *)&v39 + 1) = v10;
    v40 = v6 | (v7 << 8);
    v14 = (_QWORD *)*a3;
    v16 = sub_1AE537200((uint64_t)&v38);
    v17 = v14[2];
    v18 = (v15 & 1) == 0;
    v19 = v17 + v18;
    if (__OFADD__(v17, v18))
      goto LABEL_21;
    v20 = v15;
    if (v14[3] < v19)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EC90);
      sub_1AE926A60();
      if ((v20 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v23 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    v24 = v23[6] + 40 * v16;
    v25 = v39;
    *(_OWORD *)v24 = v38;
    *(_OWORD *)(v24 + 16) = v25;
    *(_WORD *)(v24 + 32) = v40;
    v26 = v23[7] + 40 * v16;
    *(_QWORD *)v26 = v9;
    *(_OWORD *)(v26 + 8) = v37;
    *(_QWORD *)(v26 + 24) = v35;
    *(_QWORD *)(v26 + 32) = v8;
    v27 = v23[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_22;
    ++v5;
    v23[2] = v29;
    v4 += 80;
    a2 = 1;
    if (v32 == v5)
      goto LABEL_18;
  }
  sub_1AE636024(v19, a2 & 1);
  v21 = sub_1AE537200((uint64_t)&v38);
  if ((v20 & 1) != (v22 & 1))
    goto LABEL_23;
  v16 = v21;
  if ((v20 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v30 = (void *)swift_allocError();
  swift_willThrow();
  v41 = v30;
  v31 = v30;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63937C(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  char v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (i = (uint64_t *)(swift_bridgeObjectRetain() + 48); ; i += 3)
  {
    v8 = *(i - 2);
    v7 = *(i - 1);
    v9 = *i;
    v10 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    v12 = sub_1AE536EDC(v8, v7);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    if (__OFADD__(v13, v14))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v11;
    if (v10[3] < v13 + v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548((uint64_t *)&unk_1EED9EDC0);
      sub_1AE926A60();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v19 = (uint64_t *)(v18[6] + 16 * v12);
    *v19 = v8;
    v19[1] = v7;
    *(_QWORD *)(v18[7] + 8 * v12) = v9;
    v20 = v18[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_18;
    v18[2] = v22;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE636428();
  v16 = sub_1AE536EDC(v8, v7);
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v12 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v24 = v23;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE639640(uint64_t a1, char a2, _QWORD **a3, uint64_t *a4, void (*a5)(uint64_t, _BYTE *), uint64_t *a6, uint64_t *a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _BYTE v31[40];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;

  v8 = v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v12 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1AE6402C4(v12, (uint64_t)&v34, a4);
    v13 = v34;
    v14 = v35;
    v32 = v34;
    v33 = v35;
    a5((uint64_t)&v36, v31);
    v15 = sub_1AE640D28();
    v17 = sub_1AE641040(v15, v16);
    if (v19)
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v20 = v18;
    if (v8[3] < v17)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v18 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(a7);
      v8 = a3;
      sub_1AE926A60();
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v8 = *a3;
    (*a3)[(v15 >> 6) + 8] |= 1 << v15;
    v23 = (_QWORD *)(v8[6] + 16 * v15);
    *v23 = v13;
    v23[1] = v14;
    a5((uint64_t)v31, (_BYTE *)(v8[7] + 40 * v15));
    v24 = v8[2];
    v19 = __OFADD__(v24, 1);
    v25 = v24 + 1;
    if (v19)
      goto LABEL_18;
    v8[2] = v25;
    v12 += 56;
    a2 = 1;
    if (!--v9)
    {
      sub_1AE4F6824();
      return;
    }
  }
  v8 = a3;
  sub_1AE636844(v17, a2 & 1, a6, a5);
  v21 = sub_1AE640D28();
  if ((v20 & 1) != (v22 & 1))
    goto LABEL_19;
  v15 = v21;
  if ((v20 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  sub_1AE4F6778();
  sub_1AE50AB80();
  v37 = v8;
  v26 = v8;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((sub_1AE640D98() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1AE6402A8((uint64_t)v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  sub_1AE640AF8();
  sub_1AE6409F8();
  sub_1AE926A48();
  sub_1AE640C98();
  sub_1AE640F9C();
  sub_1AE640C14();
  __break(1u);
}

void sub_1AE6398B8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  void *v31;
  id v32;
  _QWORD v33[4];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;

  v7 = type metadata accessor for CodableLocation();
  v36 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v37 = (uint64_t)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9AA50);
  v10 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v33[1] = v7;
  v33[2] = v3;
  v15 = *(int *)(v10 + 48);
  v16 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v34 = *(_QWORD *)(v11 + 72);
  v35 = v15;
  v33[3] = a1;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1AE6402C4(v16, (uint64_t)v13, &qword_1EED9AA50);
    sub_1AE640220((uint64_t)v13, v37);
    v17 = *(_QWORD *)&v13[v35];
    v18 = (_QWORD *)*a3;
    v20 = sub_1AE536F04();
    v21 = v18[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v24 = v19;
    if (v18[3] < v23)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v19 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EC30);
      sub_1AE926A60();
      if ((v24 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v27 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v20 >> 6) + 64) |= 1 << v20;
    sub_1AE640220(v37, v27[6] + *(_QWORD *)(v36 + 72) * v20);
    *(_QWORD *)(v27[7] + 8 * v20) = v17;
    v28 = v27[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_18;
    v27[2] = v30;
    v16 += v34;
    a2 = 1;
    if (!--v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE636A60(v23, a2 & 1);
  v25 = sub_1AE536F04();
  if ((v24 & 1) != (v26 & 1))
    goto LABEL_19;
  v20 = v25;
  if ((v24 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v31 = (void *)swift_allocError();
  swift_willThrow();
  v40 = v31;
  v32 = v31;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1AE57B7C0(v37);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v38 = 0;
  v39 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE639C28(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;

  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v6 = 0;
  v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v6 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_24;
    }
    v8 = *((unsigned __int8 *)v7 - 8);
    if ((_DWORD)v8 == 9)
      goto LABEL_18;
    v9 = *v7;
    v10 = (_QWORD *)*a3;
    v12 = sub_1AE536F4C(v8);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      goto LABEL_21;
    v16 = v11;
    if (v10[3] < v15)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EC10);
      sub_1AE926A60();
      if ((v16 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v19 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(_BYTE *)(v19[6] + v12) = v8;
    *(_QWORD *)(v19[7] + 8 * v12) = v9;
    v20 = v19[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_22;
    ++v6;
    v19[2] = v22;
    v7 += 2;
    a2 = 1;
    if (v5 == v6)
      goto LABEL_18;
  }
  sub_1AE637264(v15, a2 & 1, &qword_1EED9EC08);
  v17 = sub_1AE536F4C(v8);
  if ((v16 & 1) != (v18 & 1))
    goto LABEL_23;
  v12 = v17;
  if ((v16 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v24 = v23;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE639EF0(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;

  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v6 = 0;
  v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v6 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_24;
    }
    v8 = *((unsigned __int8 *)v7 - 8);
    if ((_DWORD)v8 == 7)
      goto LABEL_18;
    v9 = *v7;
    v10 = (_QWORD *)*a3;
    v12 = sub_1AE536F4C(v8);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      goto LABEL_21;
    v16 = v11;
    if (v10[3] < v15)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EBF0);
      sub_1AE926A60();
      if ((v16 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v19 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(_BYTE *)(v19[6] + v12) = v8;
    *(_QWORD *)(v19[7] + 8 * v12) = v9;
    v20 = v19[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_22;
    ++v6;
    v19[2] = v22;
    v7 += 2;
    a2 = 1;
    if (v5 == v6)
      goto LABEL_18;
  }
  sub_1AE637264(v15, a2 & 1, &qword_1EED9EBE8);
  v17 = sub_1AE536F4C(v8);
  if ((v16 & 1) != (v18 & 1))
    goto LABEL_23;
  v12 = v17;
  if ((v16 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v24 = v23;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63A1B8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;

  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v6 = 0;
  v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v6 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_24;
    }
    v8 = *((unsigned __int8 *)v7 - 8);
    if ((_DWORD)v8 == 5)
      goto LABEL_18;
    v9 = *v7;
    v10 = (_QWORD *)*a3;
    v12 = sub_1AE536F4C(v8);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      goto LABEL_21;
    v16 = v11;
    if (v10[3] < v15)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EBE0);
      sub_1AE926A60();
      if ((v16 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v19 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(_BYTE *)(v19[6] + v12) = v8;
    *(_QWORD *)(v19[7] + 8 * v12) = v9;
    v20 = v19[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_22;
    ++v6;
    v19[2] = v22;
    v7 += 2;
    a2 = 1;
    if (v5 == v6)
      goto LABEL_18;
  }
  sub_1AE637264(v15, a2 & 1, &qword_1EED9EBD8);
  v17 = sub_1AE536F4C(v8);
  if ((v16 & 1) != (v18 & 1))
    goto LABEL_23;
  v12 = v17;
  if ((v16 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v24 = v23;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63A480(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;

  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v6 = 0;
  v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v6 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_24;
    }
    v8 = *((unsigned __int8 *)v7 - 8);
    if ((_DWORD)v8 == 8)
      goto LABEL_18;
    v9 = *v7;
    v10 = (_QWORD *)*a3;
    v12 = sub_1AE536F4C(v8);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      goto LABEL_21;
    v16 = v11;
    if (v10[3] < v15)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EBD0);
      sub_1AE926A60();
      if ((v16 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v19 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(_BYTE *)(v19[6] + v12) = v8;
    *(_QWORD *)(v19[7] + 8 * v12) = v9;
    v20 = v19[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_22;
    ++v6;
    v19[2] = v22;
    v7 += 2;
    a2 = 1;
    if (v5 == v6)
      goto LABEL_18;
  }
  sub_1AE637264(v15, a2 & 1, &qword_1EED9EBC8);
  v17 = sub_1AE536F4C(v8);
  if ((v16 & 1) != (v18 & 1))
    goto LABEL_23;
  v12 = v17;
  if ((v16 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v24 = v23;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63A748(uint64_t a1, char a2, _QWORD *a3, uint64_t (*a4)(uint64_t), uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  BOOL v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);

  v41 = a6;
  v42 = a7;
  v44 = a5;
  v46 = a1;
  v47 = a4;
  v10 = *(_QWORD *)(a1 + 16);
  v11 = swift_bridgeObjectRetain();
  v45 = v10;
  if (!v10)
  {
LABEL_18:
    sub_1AE4F6824();
    return;
  }
  v19 = 0;
  v20 = (uint64_t *)(v46 + 40);
  while (1)
  {
    if (v19 >= *(_QWORD *)(v46 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_24;
    }
    v21 = *((unsigned __int8 *)v20 - 8);
    if (v21 == 4)
      goto LABEL_18;
    v22 = *v20;
    v23 = sub_1AE640D38(v11, v12, v13, v14, v15, v16, v17, v18, v39, v40, v41, (uint64_t)v42, v43, (uint64_t)v44, v45, v46, v47);
    v11 = sub_1AE641040(v23, v24);
    if (v25)
      goto LABEL_21;
    v26 = v12;
    if (v7[3] < v11)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v12 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_1AE501548(v42);
      v7 = a3;
      v11 = sub_1AE926A60();
      if ((v26 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v35 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    *(_BYTE *)(v35[6] + v23) = v21;
    *(_QWORD *)(v35[7] + 8 * v23) = v22;
    v36 = v35[2];
    v25 = __OFADD__(v36, 1);
    v37 = v36 + 1;
    if (v25)
      goto LABEL_22;
    ++v19;
    v35[2] = v37;
    v20 += 2;
    a2 = 1;
    if (v45 == v19)
      goto LABEL_18;
  }
  v7 = a3;
  sub_1AE637264(v11, a2 & 1, v44);
  v11 = sub_1AE640D38(v27, v28, v29, v30, v31, v32, v33, v34, v39, v40, v41, (uint64_t)v42, v43, (uint64_t)v44, v45, v46, v47);
  if ((v26 & 1) != (v12 & 1))
    goto LABEL_23;
  v23 = v11;
  if ((v26 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  sub_1AE4F6778();
  sub_1AE50AB80();
  v38 = v7;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((sub_1AE640D98() & 1) == 0)
  {
    sub_1AE4F6824();

    return;
  }
LABEL_24:
  sub_1AE640AF8();
  sub_1AE6409F8();
  sub_1AE926A48();
  sub_1AE640C98();
  sub_1AE640F9C();
  sub_1AE640C14();
  __break(1u);
}

void sub_1AE63A978(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  unsigned __int8 v46;

  v42 = a3;
  v6 = sub_1AE501548(&qword_1EED9A850);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9A780);
  v10 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[1] = v3;
  v36[2] = a1;
  v40 = &v13[*(int *)(v10 + 48)];
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v37 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v38 = v7;
  v39 = v6;
  while (1)
  {
    sub_1AE6402C4(v15, (uint64_t)v13, &qword_1EED9A780);
    v16 = v13;
    v46 = *v13;
    v17 = v46;
    v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v41, v40, v6);
    v19 = (_QWORD *)*v42;
    v21 = sub_1AE536F4C(v17);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EAD8);
      sub_1AE926A60();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = v41;
    v29 = (_QWORD *)*v42;
    *(_QWORD *)(*v42 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(_BYTE *)(v29[6] + v21) = v17;
    v7 = v38;
    v30 = v29[7] + *(_QWORD *)(v38 + 72) * v21;
    v6 = v39;
    v18((char *)v30, v28, v39);
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_18;
    v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE636FB4(v24, a2 & 1, &qword_1EED9A850, (uint64_t)&unk_1EED9EAD0);
  v26 = sub_1AE536F4C(v17);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v34 = (void *)swift_allocError();
  swift_willThrow();
  v45 = v34;
  v35 = v34;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v39);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63AD28(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  unsigned __int8 v46;

  v42 = a3;
  v6 = sub_1AE501548(&qword_1EED9A850);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9A770);
  v10 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[1] = v3;
  v36[2] = a1;
  v40 = &v13[*(int *)(v10 + 48)];
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v37 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v38 = v7;
  v39 = v6;
  while (1)
  {
    sub_1AE6402C4(v15, (uint64_t)v13, &qword_1EED9A770);
    v16 = v13;
    v46 = *v13;
    v17 = v46;
    v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v41, v40, v6);
    v19 = (_QWORD *)*v42;
    v21 = sub_1AE536F4C(v17);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EAE8);
      sub_1AE926A60();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = v41;
    v29 = (_QWORD *)*v42;
    *(_QWORD *)(*v42 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(_BYTE *)(v29[6] + v21) = v17;
    v7 = v38;
    v30 = v29[7] + *(_QWORD *)(v38 + 72) * v21;
    v6 = v39;
    v18((char *)v30, v28, v39);
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_18;
    v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE636FB4(v24, a2 & 1, &qword_1EED9A850, (uint64_t)&unk_1EED9EAE0);
  v26 = sub_1AE536F4C(v17);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v34 = (void *)swift_allocError();
  swift_willThrow();
  v45 = v34;
  v35 = v34;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v39);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63B0D8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  unsigned __int8 v46;

  v42 = a3;
  v6 = sub_1AE501548(&qword_1EED9A850);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9A760);
  v10 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[1] = v3;
  v36[2] = a1;
  v40 = &v13[*(int *)(v10 + 48)];
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v37 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v38 = v7;
  v39 = v6;
  while (1)
  {
    sub_1AE6402C4(v15, (uint64_t)v13, &qword_1EED9A760);
    v16 = v13;
    v46 = *v13;
    v17 = v46;
    v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v41, v40, v6);
    v19 = (_QWORD *)*v42;
    v21 = sub_1AE536F4C(v17);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EAF8);
      sub_1AE926A60();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = v41;
    v29 = (_QWORD *)*v42;
    *(_QWORD *)(*v42 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(_BYTE *)(v29[6] + v21) = v17;
    v7 = v38;
    v30 = v29[7] + *(_QWORD *)(v38 + 72) * v21;
    v6 = v39;
    v18((char *)v30, v28, v39);
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_18;
    v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE636FB4(v24, a2 & 1, &qword_1EED9A850, (uint64_t)&unk_1EED9EAF0);
  v26 = sub_1AE536F4C(v17);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v34 = (void *)swift_allocError();
  swift_willThrow();
  v45 = v34;
  v35 = v34;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v39);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63B488(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  unsigned __int8 v46;

  v42 = a3;
  v6 = sub_1AE501548(&qword_1EED9E350);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9A750);
  v10 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[1] = v3;
  v36[2] = a1;
  v40 = &v13[*(int *)(v10 + 48)];
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v37 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v38 = v7;
  v39 = v6;
  while (1)
  {
    sub_1AE6402C4(v15, (uint64_t)v13, &qword_1EED9A750);
    v16 = v13;
    v46 = *v13;
    v17 = v46;
    v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v41, v40, v6);
    v19 = (_QWORD *)*v42;
    v21 = sub_1AE536F4C(v17);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EB08);
      sub_1AE926A60();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = v41;
    v29 = (_QWORD *)*v42;
    *(_QWORD *)(*v42 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(_BYTE *)(v29[6] + v21) = v17;
    v7 = v38;
    v30 = v29[7] + *(_QWORD *)(v38 + 72) * v21;
    v6 = v39;
    v18((char *)v30, v28, v39);
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_18;
    v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE636FB4(v24, a2 & 1, &qword_1EED9E350, (uint64_t)&unk_1EED9EB00);
  v26 = sub_1AE536F4C(v17);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v34 = (void *)swift_allocError();
  swift_willThrow();
  v45 = v34;
  v35 = v34;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v39);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63B838(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  unsigned __int8 v46;

  v42 = a3;
  v6 = sub_1AE501548(&qword_1EED9E350);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9A740);
  v10 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[1] = v3;
  v36[2] = a1;
  v40 = &v13[*(int *)(v10 + 48)];
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v37 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v38 = v7;
  v39 = v6;
  while (1)
  {
    sub_1AE6402C4(v15, (uint64_t)v13, &qword_1EED9A740);
    v16 = v13;
    v46 = *v13;
    v17 = v46;
    v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v41, v40, v6);
    v19 = (_QWORD *)*v42;
    v21 = sub_1AE536F4C(v17);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EB18);
      sub_1AE926A60();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = v41;
    v29 = (_QWORD *)*v42;
    *(_QWORD *)(*v42 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(_BYTE *)(v29[6] + v21) = v17;
    v7 = v38;
    v30 = v29[7] + *(_QWORD *)(v38 + 72) * v21;
    v6 = v39;
    v18((char *)v30, v28, v39);
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_18;
    v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE636FB4(v24, a2 & 1, &qword_1EED9E350, (uint64_t)&unk_1EED9EB10);
  v26 = sub_1AE536F4C(v17);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v34 = (void *)swift_allocError();
  swift_willThrow();
  v45 = v34;
  v35 = v34;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v39);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63BBE8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  unsigned __int8 v46;

  v42 = a3;
  v6 = sub_1AE501548(&qword_1EED9E350);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9A730);
  v10 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[1] = v3;
  v36[2] = a1;
  v40 = &v13[*(int *)(v10 + 48)];
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v37 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v38 = v7;
  v39 = v6;
  while (1)
  {
    sub_1AE6402C4(v15, (uint64_t)v13, &qword_1EED9A730);
    v16 = v13;
    v46 = *v13;
    v17 = v46;
    v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v41, v40, v6);
    v19 = (_QWORD *)*v42;
    v21 = sub_1AE536F4C(v17);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EB28);
      sub_1AE926A60();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = v41;
    v29 = (_QWORD *)*v42;
    *(_QWORD *)(*v42 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(_BYTE *)(v29[6] + v21) = v17;
    v7 = v38;
    v30 = v29[7] + *(_QWORD *)(v38 + 72) * v21;
    v6 = v39;
    v18((char *)v30, v28, v39);
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_18;
    v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE636FB4(v24, a2 & 1, &qword_1EED9E350, (uint64_t)&unk_1EED9EB20);
  v26 = sub_1AE536F4C(v17);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v34 = (void *)swift_allocError();
  swift_willThrow();
  v45 = v34;
  v35 = v34;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v39);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63BF98(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  unsigned __int8 v46;

  v42 = a3;
  v6 = sub_1AE501548(&qword_1EED9A850);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9A720);
  v10 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[1] = v3;
  v36[2] = a1;
  v40 = &v13[*(int *)(v10 + 48)];
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v37 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v38 = v7;
  v39 = v6;
  while (1)
  {
    sub_1AE6402C4(v15, (uint64_t)v13, &qword_1EED9A720);
    v16 = v13;
    v46 = *v13;
    v17 = v46;
    v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v41, v40, v6);
    v19 = (_QWORD *)*v42;
    v21 = sub_1AE536F4C(v17);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EB48);
      sub_1AE926A60();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = v41;
    v29 = (_QWORD *)*v42;
    *(_QWORD *)(*v42 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(_BYTE *)(v29[6] + v21) = v17;
    v7 = v38;
    v30 = v29[7] + *(_QWORD *)(v38 + 72) * v21;
    v6 = v39;
    v18((char *)v30, v28, v39);
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_18;
    v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE636FB4(v24, a2 & 1, &qword_1EED9A850, (uint64_t)&unk_1EED9EB40);
  v26 = sub_1AE536F4C(v17);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v34 = (void *)swift_allocError();
  swift_willThrow();
  v45 = v34;
  v35 = v34;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v39);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63C348(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  unsigned __int8 v46;

  v42 = a3;
  v6 = sub_1AE501548(&qword_1EED9E350);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9A710);
  v10 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[1] = v3;
  v36[2] = a1;
  v40 = &v13[*(int *)(v10 + 48)];
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v37 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v38 = v7;
  v39 = v6;
  while (1)
  {
    sub_1AE6402C4(v15, (uint64_t)v13, &qword_1EED9A710);
    v16 = v13;
    v46 = *v13;
    v17 = v46;
    v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v41, v40, v6);
    v19 = (_QWORD *)*v42;
    v21 = sub_1AE536F4C(v17);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EB58);
      sub_1AE926A60();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = v41;
    v29 = (_QWORD *)*v42;
    *(_QWORD *)(*v42 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(_BYTE *)(v29[6] + v21) = v17;
    v7 = v38;
    v30 = v29[7] + *(_QWORD *)(v38 + 72) * v21;
    v6 = v39;
    v18((char *)v30, v28, v39);
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_18;
    v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE636FB4(v24, a2 & 1, &qword_1EED9E350, (uint64_t)&unk_1EED9EB50);
  v26 = sub_1AE536F4C(v17);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v34 = (void *)swift_allocError();
  swift_willThrow();
  v45 = v34;
  v35 = v34;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v39);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63C6F8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  unsigned __int8 v46;

  v42 = a3;
  v6 = sub_1AE501548(&qword_1EED9A850);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9A700);
  v10 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[1] = v3;
  v36[2] = a1;
  v40 = &v13[*(int *)(v10 + 48)];
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v37 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v38 = v7;
  v39 = v6;
  while (1)
  {
    sub_1AE6402C4(v15, (uint64_t)v13, &qword_1EED9A700);
    v16 = v13;
    v46 = *v13;
    v17 = v46;
    v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v41, v40, v6);
    v19 = (_QWORD *)*v42;
    v21 = sub_1AE536F4C(v17);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EB68);
      sub_1AE926A60();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = v41;
    v29 = (_QWORD *)*v42;
    *(_QWORD *)(*v42 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(_BYTE *)(v29[6] + v21) = v17;
    v7 = v38;
    v30 = v29[7] + *(_QWORD *)(v38 + 72) * v21;
    v6 = v39;
    v18((char *)v30, v28, v39);
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_18;
    v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE636FB4(v24, a2 & 1, &qword_1EED9A850, (uint64_t)&unk_1EED9EB60);
  v26 = sub_1AE536F4C(v17);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v34 = (void *)swift_allocError();
  swift_willThrow();
  v45 = v34;
  v35 = v34;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v39);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63CAA8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  unsigned __int8 v46;

  v42 = a3;
  v6 = sub_1AE501548(&qword_1EED9E350);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9A6F0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[1] = v3;
  v36[2] = a1;
  v40 = &v13[*(int *)(v10 + 48)];
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v37 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v38 = v7;
  v39 = v6;
  while (1)
  {
    sub_1AE6402C4(v15, (uint64_t)v13, &qword_1EED9A6F0);
    v16 = v13;
    v46 = *v13;
    v17 = v46;
    v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v41, v40, v6);
    v19 = (_QWORD *)*v42;
    v21 = sub_1AE536F4C(v17);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EB78);
      sub_1AE926A60();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = v41;
    v29 = (_QWORD *)*v42;
    *(_QWORD *)(*v42 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(_BYTE *)(v29[6] + v21) = v17;
    v7 = v38;
    v30 = v29[7] + *(_QWORD *)(v38 + 72) * v21;
    v6 = v39;
    v18((char *)v30, v28, v39);
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_18;
    v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE636FB4(v24, a2 & 1, &qword_1EED9E350, (uint64_t)&unk_1EED9EB70);
  v26 = sub_1AE536F4C(v17);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v34 = (void *)swift_allocError();
  swift_willThrow();
  v45 = v34;
  v35 = v34;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v39);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63CE58(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  unsigned __int8 v46;

  v42 = a3;
  v6 = sub_1AE501548(&qword_1EED9A850);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9A6E0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[1] = v3;
  v36[2] = a1;
  v40 = &v13[*(int *)(v10 + 48)];
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v37 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v38 = v7;
  v39 = v6;
  while (1)
  {
    sub_1AE6402C4(v15, (uint64_t)v13, &qword_1EED9A6E0);
    v16 = v13;
    v46 = *v13;
    v17 = v46;
    v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v41, v40, v6);
    v19 = (_QWORD *)*v42;
    v21 = sub_1AE536F4C(v17);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EB88);
      sub_1AE926A60();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = v41;
    v29 = (_QWORD *)*v42;
    *(_QWORD *)(*v42 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(_BYTE *)(v29[6] + v21) = v17;
    v7 = v38;
    v30 = v29[7] + *(_QWORD *)(v38 + 72) * v21;
    v6 = v39;
    v18((char *)v30, v28, v39);
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_18;
    v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE636FB4(v24, a2 & 1, &qword_1EED9A850, (uint64_t)&unk_1EED9EB80);
  v26 = sub_1AE536F4C(v17);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v34 = (void *)swift_allocError();
  swift_willThrow();
  v45 = v34;
  v35 = v34;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v39);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63D208(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  char *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  void *v34;
  id v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  unsigned __int8 v46;

  v42 = a3;
  v6 = sub_1AE501548(&qword_1EED9E350);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9A6D0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v36[1] = v3;
  v36[2] = a1;
  v40 = &v13[*(int *)(v10 + 48)];
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v37 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v38 = v7;
  v39 = v6;
  while (1)
  {
    sub_1AE6402C4(v15, (uint64_t)v13, &qword_1EED9A6D0);
    v16 = v13;
    v46 = *v13;
    v17 = v46;
    v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v41, v40, v6);
    v19 = (_QWORD *)*v42;
    v21 = sub_1AE536F4C(v17);
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EB98);
      sub_1AE926A60();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = v41;
    v29 = (_QWORD *)*v42;
    *(_QWORD *)(*v42 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    *(_BYTE *)(v29[6] + v21) = v17;
    v7 = v38;
    v30 = v29[7] + *(_QWORD *)(v38 + 72) * v21;
    v6 = v39;
    v18((char *)v30, v28, v39);
    v31 = v29[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_18;
    v29[2] = v33;
    v15 += v37;
    a2 = 1;
    --v14;
    v13 = v16;
    if (!v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE636FB4(v24, a2 & 1, &qword_1EED9E350, (uint64_t)&unk_1EED9EB90);
  v26 = sub_1AE536F4C(v17);
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v34 = (void *)swift_allocError();
  swift_willThrow();
  v45 = v34;
  v35 = v34;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v39);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v43 = 0;
  v44 = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63D5B8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  char v15;
  uint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  void *v22;
  id v23;

  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v6 = 0;
  v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v6 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_24;
    }
    v8 = *((unsigned __int8 *)v7 - 8);
    if ((_DWORD)v8 == 4)
      goto LABEL_18;
    v9 = *v7;
    v10 = (_QWORD *)*a3;
    v12 = sub_1AE536F4C(v8);
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    if (__OFADD__(v13, v14))
      goto LABEL_21;
    v15 = v11;
    if (v10[3] < v13 + v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EBA8);
      sub_1AE926A60();
      if ((v15 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(_BYTE *)(v18[6] + v12) = v8;
    *(_QWORD *)(v18[7] + 8 * v12) = v9;
    v19 = v18[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_22;
    ++v6;
    v18[2] = v21;
    v7 += 2;
    a2 = 1;
    if (v5 == v6)
      goto LABEL_18;
  }
  sub_1AE636DD0();
  v16 = sub_1AE536F4C(v8);
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_23;
  v12 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v22 = (void *)swift_allocError();
  swift_willThrow();
  v23 = v22;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63D878(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  void **i;
  void *v7;
  _QWORD *v8;
  id v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  void *v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (i = (void **)(swift_bridgeObjectRetain() + 40); ; i += 2)
  {
    v7 = *i;
    v8 = (_QWORD *)*a3;
    v9 = *(i - 1);
    v10 = v7;
    sub_1AE537530();
    v18 = v17;
    v19 = v8[2];
    v20 = (v11 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1AE53F468(0, &qword_1EED9A668);
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_20;
    }
    v22 = v11;
    if (v8[3] < v21)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EAB8);
      sub_1AE926A60();
      if ((v22 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v25 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    *(_QWORD *)(v25[6] + 8 * v18) = v9;
    *(_QWORD *)(v25[7] + 8 * v18) = v10;
    v26 = v25[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_18;
    v25[2] = v28;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1AE6380C4(v21, a2 & 1, (uint64_t)&unk_1EED9EAB0, v12, v13, v14, v15, v16, v31, v32);
  sub_1AE537530();
  if ((v22 & 1) != (v24 & 1))
    goto LABEL_19;
  v18 = v23;
  if ((v22 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v29 = (void *)swift_allocError();
  swift_willThrow();
  v30 = v29;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_20:
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE53F468(0, &qword_1EED9A668);
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63DB58(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v30 = v4;
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v5 = 0;
  v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    if (v5 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_24;
    }
    v8 = v6[5];
    v7 = v6[6];
    v10 = v6[3];
    v9 = v6[4];
    v11 = v6[2];
    v12 = *v6;
    v36 = *(v6 - 1);
    v37 = v6[1];
    v13 = *(v6 - 3);
    v35 = *(v6 - 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 == 1)
      goto LABEL_18;
    v32 = v12;
    v33 = v11;
    v34 = v9;
    v14 = (_QWORD *)*a3;
    v16 = sub_1AE53F5F0(v13);
    v17 = v14[2];
    v18 = (v15 & 1) == 0;
    v19 = v17 + v18;
    if (__OFADD__(v17, v18))
      goto LABEL_21;
    v20 = v15;
    if (v14[3] < v19)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EAA8);
      sub_1AE926A60();
      if ((v20 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v23 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    *(_QWORD *)(v23[6] + 8 * v16) = v13;
    v24 = (_QWORD *)(v23[7] + 72 * v16);
    *v24 = v35;
    v24[1] = v36;
    v24[2] = v32;
    v24[3] = v37;
    v24[4] = v33;
    v24[5] = v10;
    v24[6] = v34;
    v24[7] = v8;
    v24[8] = v7;
    v25 = v23[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_22;
    ++v5;
    v23[2] = v27;
    v6 += 10;
    a2 = 1;
    if (v30 == v5)
      goto LABEL_18;
  }
  sub_1AE637ABC(v19, a2 & 1);
  v21 = sub_1AE53F5F0(v13);
  if ((v20 & 1) != (v22 & 1))
    goto LABEL_23;
  v16 = v21;
  if ((v20 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v28 = (void *)swift_allocError();
  swift_willThrow();
  v29 = v28;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63DEB0(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;

  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v6 = 0;
  v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    if (v6 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1AE926DE4();
      __break(1u);
      goto LABEL_24;
    }
    v9 = *(v7 - 1);
    v8 = *v7;
    swift_bridgeObjectRetain();
    if (!v8)
      goto LABEL_18;
    v10 = (_QWORD *)*a3;
    v12 = sub_1AE536D68();
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      goto LABEL_21;
    v16 = v11;
    if (v10[3] < v15)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_1AE501548(&qword_1EED9EA88);
      sub_1AE926A60();
      if ((v16 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v19 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    *(_QWORD *)(v19[6] + 8 * v12) = v9;
    *(_QWORD *)(v19[7] + 8 * v12) = v8;
    v20 = v19[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_22;
    ++v6;
    v19[2] = v22;
    v7 += 2;
    a2 = 1;
    if (v5 == v6)
      goto LABEL_18;
  }
  sub_1AE637DF0(v15, a2 & 1);
  v17 = sub_1AE536D68();
  if ((v16 & 1) != (v18 & 1))
    goto LABEL_23;
  v12 = v17;
  if ((v16 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v24 = v23;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE926AB4();
  __break(1u);
}

void sub_1AE63E178()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_1AE640514();
  v2 = sub_1AE640768((uint64_t)v1);
  sub_1AE63E268(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  sub_1AE4F6624();
}

void sub_1AE63E1AC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_1AE640514();
  v2 = sub_1AE640768((uint64_t)v1);
  sub_1AE63E2A8(v2, v3);
  *(_QWORD *)(v0 + 32) = v4;
  sub_1AE4F6624();
}

void sub_1AE63E1DC()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_1AE640514();
  v2 = (_QWORD *)sub_1AE640768((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1AE63E2EC(v2, v3, v4);
  sub_1AE4F6624();
}

void sub_1AE63E20C()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_1AE640514();
  v2 = (_QWORD *)sub_1AE640768((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_1AE63E370(v2, v3, v4);
  sub_1AE4F6624();
}

void sub_1AE63E23C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void sub_1AE63E268(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1AE640B0C(a1, a2);
  sub_1AE66B890(v4, v5, v6);
  if (v3)
    sub_1AE641130();
  *v2 = sub_1AE64110C();
  sub_1AE4F6624();
}

void sub_1AE63E2A8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1AE640B0C(a1, a2);
  sub_1AE66B890(v4, v5, v6);
  if (v3)
    sub_1AE641130();
  *v2 = sub_1AE64110C();
  sub_1AE4F6624();
}

uint64_t (*sub_1AE63E2EC(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  unint64_t v6;
  id v7;

  v6 = a3 & 0xC000000000000001;
  sub_1AE66B890(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6)
    v7 = (id)MEMORY[0x1AF453B80](a2, a3);
  else
    v7 = *(id *)(a3 + 8 * a2 + 32);
  *a1 = v7;
  return sub_1AE640378;
}

uint64_t sub_1AE63E358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1AE64B3F0(a1, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void (*sub_1AE63E370(_QWORD *a1, uint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v6;
  id v7;

  v6 = a3 & 0xC000000000000001;
  sub_1AE66B890(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6)
    v7 = (id)MEMORY[0x1AF453B80](a2, a3);
  else
    v7 = *(id *)(a3 + 8 * a2 + 32);
  *a1 = v7;
  return sub_1AE63E3DC;
}

void sub_1AE63E3DC(id *a1)
{

}

unint64_t sub_1AE63E3E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EED9E748;
  if (!qword_1EED9E748)
  {
    v1 = sub_1AE53F468(255, (unint64_t *)&qword_1ED318F50);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EED9E748);
  }
  return result;
}

unint64_t sub_1AE63E434()
{
  unint64_t result;

  result = qword_1EED9E788;
  if (!qword_1EED9E788)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9473E8, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E788);
  }
  return result;
}

unint64_t sub_1AE63E470()
{
  unint64_t result;

  result = qword_1EED9E790;
  if (!qword_1EED9E790)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947398, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.DisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E790);
  }
  return result;
}

unint64_t sub_1AE63E4AC()
{
  unint64_t result;

  result = qword_1EED9E798;
  if (!qword_1EED9E798)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947348, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.RejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E798);
  }
  return result;
}

unint64_t sub_1AE63E4E8()
{
  unint64_t result;

  result = qword_1EED9E7A0;
  if (!qword_1EED9E7A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9472F8, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E7A0);
  }
  return result;
}

unint64_t sub_1AE63E524()
{
  unint64_t result;

  result = qword_1EED9E7A8;
  if (!qword_1EED9E7A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9472A8, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.AppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E7A8);
  }
  return result;
}

unint64_t sub_1AE63E560()
{
  unint64_t result;

  result = qword_1EED9E7B0;
  if (!qword_1EED9E7B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947258, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.UnSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E7B0);
  }
  return result;
}

void sub_1AE63E59C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = sub_1AE523CF0(&qword_1EED9D860);
    v7 = a2;
    atomic_store(MEMORY[0x1AF454B70](a3, v6, &v7), a1);
  }
  sub_1AE4FE870();
}

unint64_t sub_1AE63E5F0()
{
  unint64_t result;

  result = qword_1EED9E7F0;
  if (!qword_1EED9E7F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947208, &type metadata for EntityTaggingStatefulFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E7F0);
  }
  return result;
}

unint64_t sub_1AE63E62C()
{
  unint64_t result;

  result = qword_1EED9E7F8;
  if (!qword_1EED9E7F8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityTaggingStatefulFeedback.FeedbackKind, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind);
    atomic_store(result, (unint64_t *)&qword_1EED9E7F8);
  }
  return result;
}

unint64_t sub_1AE63E668()
{
  unint64_t result;

  result = qword_1EED9E808;
  if (!qword_1EED9E808)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityTaggingStatefulFeedback.FeedbackKind, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind);
    atomic_store(result, (unint64_t *)&qword_1EED9E808);
  }
  return result;
}

uint64_t type metadata accessor for EntityTaggingDirectFeedback()
{
  return objc_opt_self();
}

unint64_t sub_1AE63E6C4()
{
  unint64_t result;

  result = qword_1EED9E828;
  if (!qword_1EED9E828)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9471B8, &type metadata for EntityTaggingDirectFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E828);
  }
  return result;
}

unint64_t sub_1AE63E700()
{
  unint64_t result;

  result = qword_1EED9E830;
  if (!qword_1EED9E830)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityTaggingDirectFeedback.FeedbackKind, &type metadata for EntityTaggingDirectFeedback.FeedbackKind);
    atomic_store(result, (unint64_t *)&qword_1EED9E830);
  }
  return result;
}

unint64_t sub_1AE63E73C()
{
  unint64_t result;

  result = qword_1EED9E838;
  if (!qword_1EED9E838)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonEntityTagType, &type metadata for PersonEntityTagType);
    atomic_store(result, (unint64_t *)&qword_1EED9E838);
  }
  return result;
}

unint64_t sub_1AE63E778()
{
  unint64_t result;

  result = qword_1EED9E848;
  if (!qword_1EED9E848)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityTaggingDirectFeedback.FeedbackKind, &type metadata for EntityTaggingDirectFeedback.FeedbackKind);
    atomic_store(result, (unint64_t *)&qword_1EED9E848);
  }
  return result;
}

unint64_t sub_1AE63E7B4()
{
  unint64_t result;

  result = qword_1EED9E850;
  if (!qword_1EED9E850)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonEntityTagType, &type metadata for PersonEntityTagType);
    atomic_store(result, (unint64_t *)&qword_1EED9E850);
  }
  return result;
}

unint64_t sub_1AE63E7F4()
{
  unint64_t result;

  result = qword_1EED93FF8[0];
  if (!qword_1EED93FF8[0])
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonEntityTagType, &type metadata for PersonEntityTagType);
    atomic_store(result, qword_1EED93FF8);
  }
  return result;
}

unint64_t sub_1AE63E834()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EED9E858;
  if (!qword_1EED9E858)
  {
    v1 = sub_1AE523CF0(&qword_1EED9E860);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EED9E858);
  }
  return result;
}

void sub_1AE63E878(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE562F54(&qword_1EED9E868, a2, (uint64_t (*)(uint64_t))type metadata accessor for EntityTaggingStatefulFeedback, (uint64_t)&protocol conformance descriptor for EntityTaggingStatefulFeedback);
  *(_QWORD *)(a1 + 8) = v3;
  sub_1AE562F54(&qword_1EED9BD10, v4, (uint64_t (*)(uint64_t))type metadata accessor for EntityTaggingStatefulFeedback, (uint64_t)&protocol conformance descriptor for EntityTaggingStatefulFeedback);
  *(_QWORD *)(a1 + 16) = v5;
}

unint64_t sub_1AE63E8D8()
{
  unint64_t result;

  result = qword_1EED9E870;
  if (!qword_1EED9E870)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityTaggingDirectFeedback.FeedbackKind, &type metadata for EntityTaggingDirectFeedback.FeedbackKind);
    atomic_store(result, (unint64_t *)&qword_1EED9E870);
  }
  return result;
}

void sub_1AE63E914(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE562F54(&qword_1EED9E878, a2, (uint64_t (*)(uint64_t))type metadata accessor for EntityTaggingDirectFeedback, (uint64_t)&protocol conformance descriptor for EntityTaggingDirectFeedback);
  *(_QWORD *)(a1 + 8) = v3;
  sub_1AE562F54(&qword_1EED9BCE8, v4, (uint64_t (*)(uint64_t))type metadata accessor for EntityTaggingDirectFeedback, (uint64_t)&protocol conformance descriptor for EntityTaggingDirectFeedback);
  *(_QWORD *)(a1 + 16) = v5;
}

void sub_1AE63E970(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1AE6310C8();
  *a1 = v2;
  sub_1AE4F6664();
}

uint64_t getEnumTagSinglePayload for PersonEntityTagType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE3)
  {
    if (a2 + 29 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 29) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 30;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1E;
  v5 = v6 - 30;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonEntityTagType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 29 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 29) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE2)
    return ((uint64_t (*)(void))((char *)&loc_1AE63EA6C + 4 * byte_1AE94641E[v4]))();
  *a1 = a2 + 29;
  return ((uint64_t (*)(void))((char *)sub_1AE63EAA0 + 4 * byte_1AE946419[v4]))();
}

uint64_t sub_1AE63EAA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE63EAA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE63EAB0);
  return result;
}

uint64_t sub_1AE63EABC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE63EAC4);
  *(_BYTE *)result = a2 + 29;
  return result;
}

uint64_t sub_1AE63EAC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE63EAD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PersonEntityTagType()
{
  sub_1AE4F67D4();
}

uint64_t method lookup function for PersonEntityTaggingService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonEntityTaggingService.__allocating_init(etConfig:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PersonEntityTaggingService.personEntityTags(for:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1AE6409C4();
  v1 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE508B34(v1, (uint64_t)sub_1AE621634);
  return sub_1AE50A43C(v2, v3, v4, v5);
}

uint64_t dispatch thunk of PersonEntityTaggingService.peopleEntityTags(for:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1AE6403EC();
  v1 = (_QWORD *)sub_1AE4F933C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4FDD0C(v1, (uint64_t)sub_1AE621634);
  return sub_1AE4FED20(v2, v3, v4);
}

uint64_t dispatch thunk of PersonEntityTaggingService.entitiesForTag(gdEntityTagType:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1AE6403EC();
  v1 = (_QWORD *)sub_1AE4F933C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4FDD0C(v1, (uint64_t)sub_1AE621634);
  return sub_1AE4FED20(v2, v3, v4);
}

uint64_t dispatch thunk of PersonEntityTaggingService.personEntities(for:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1AE6403EC();
  v1 = (_QWORD *)sub_1AE4F933C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4FDD0C(v1, (uint64_t)sub_1AE621634);
  return sub_1AE4FED20(v2, v3, v4);
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1AE6403EC();
  v1 = (_QWORD *)sub_1AE4F933C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4FDD0C(v1, (uint64_t)sub_1AE621634);
  return sub_1AE4FED20(v2, v3, v4);
}

uint64_t dispatch thunk of PersonEntityTaggingService.personEntities(tags:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1AE6403EC();
  v1 = (_QWORD *)sub_1AE4F933C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4FDD0C(v1, (uint64_t)sub_1AE621634);
  return sub_1AE4FED20(v2, v3, v4);
}

uint64_t dispatch thunk of PersonEntityTaggingService.recordStatefulFeedbackForObjC(gdFeedback:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v3 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1AE6146CC;
  return v5(a1);
}

uint64_t dispatch thunk of PersonEntityTaggingService.recordDirectFeedbackForObjC(gradedTrue:gradedFalse:ignored:neverPresented:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  sub_1AE640824();
  sub_1AE640CD0();
  v1 = (_QWORD *)sub_1AE4F933C();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1AE6146CC;
  sub_1AE640F74();
  return v2();
}

uint64_t method lookup function for PersonEntityTaggingService.ScoreRankedPersonEntityTags()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag.__allocating_init(tag:score:inferenceEventId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for PersonEntityTaggingService.ScoreRankedEntityTagPersons()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonEntityTaggingService.ScoreRankedEntityTagPersons.gdTag.getter()
{
  uint64_t *v0;

  return sub_1AE640A40(*v0);
}

uint64_t dispatch thunk of PersonEntityTaggingService.ScoreRankedEntityTagPersons.inferenceEventIdValueObjC.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t method lookup function for PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.idValueObjC.getter()
{
  uint64_t *v0;

  return sub_1AE6405E0(*v0);
}

uint64_t dispatch thunk of PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson.__allocating_init(id:score:inferenceEventId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t method lookup function for PersonEntityTaggingService.PersonEntityTaggingOptions()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonEntityTaggingService.PersonEntityTaggingOptions.tagThresholds.getter()
{
  uint64_t *v0;

  return sub_1AE640A34(*v0);
}

uint64_t dispatch thunk of PersonEntityTaggingService.PersonEntityTaggingOptions.tagThresholds.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of PersonEntityTaggingService.PersonEntityTaggingOptions.tagThresholds.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t method lookup function for EntityTaggingService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntityTaggingService.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of EntityTaggingService.__allocating_init(etConfig:viewService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of EntityTaggingService.entityTags(identifier:options:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);

  sub_1AE640824();
  sub_1AE640CD0();
  v1 = sub_1AE4F933C();
  v2 = (_QWORD *)sub_1AE4F78CC(v1);
  *v2 = v0;
  v2[1] = sub_1AE4FC490;
  sub_1AE640F74();
  return v3();
}

uint64_t dispatch thunk of EntityTaggingService.personEntityTags(for:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_1AE6409C4();
  v1 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE508B34(v1, (uint64_t)sub_1AE621634);
  return sub_1AE50A43C(v2, v3, v4, v5);
}

uint64_t dispatch thunk of EntityTaggingService.peopleEntityTags(for:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1AE6403EC();
  v1 = (_QWORD *)sub_1AE4F933C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4FDD0C(v1, (uint64_t)sub_1AE53D6DC);
  return sub_1AE4FED20(v2, v3, v4);
}

uint64_t dispatch thunk of EntityTaggingService.entitiesForTag(entityTagType:options:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  sub_1AE6409C4();
  v4 = sub_1AE4FC56C();
  v5 = (_QWORD *)sub_1AE4F78CC(v4);
  *v5 = v2;
  v5[1] = sub_1AE6146CC;
  return v7(v3, v1, v0);
}

uint64_t dispatch thunk of EntityTaggingService.personEntities(for:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1AE6403EC();
  v1 = (_QWORD *)sub_1AE4F933C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4FDD0C(v1, (uint64_t)sub_1AE621634);
  return sub_1AE4FED20(v2, v3, v4);
}

uint64_t dispatch thunk of EntityTaggingService.entitiesForTag(gdEntityTagType:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1AE6403EC();
  v1 = (_QWORD *)sub_1AE4F933C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4FDD0C(v1, (uint64_t)sub_1AE621634);
  return sub_1AE4FED20(v2, v3, v4);
}

uint64_t dispatch thunk of EntityTaggingService.personEntities(tags:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1AE6403EC();
  v1 = (_QWORD *)sub_1AE4F933C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4FDD0C(v1, (uint64_t)sub_1AE621634);
  return sub_1AE4FED20(v2, v3, v4);
}

uint64_t dispatch thunk of EntityTaggingService.personEntities(gdEntityTagTypes:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  sub_1AE6403EC();
  v1 = (_QWORD *)sub_1AE4F933C();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4FDD0C(v1, (uint64_t)sub_1AE621634);
  return sub_1AE4FED20(v2, v3, v4);
}

void type metadata accessor for EntityTaggingService.Configuration()
{
  sub_1AE4F67D4();
}

void sub_1AE63F0FC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  sub_1AE4F6664();
}

_QWORD *assignWithCopy for EntityTaggingService.RankedPersonEntityTags(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for EntityTaggingService.RankedPersonEntityTags(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void type metadata accessor for EntityTaggingService.RankedPersonEntityTags()
{
  sub_1AE4F67D4();
}

uint64_t getEnumTagSinglePayload for EntityTaggingService.RankedPersonEntityTags.ScoredPersonEntityTagType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xE3 && a1[16])
    {
      v2 = *(_DWORD *)a1 + 226;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 0x1E;
      v2 = v3 - 30;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EntityTaggingService.RankedPersonEntityTags.ScoredPersonEntityTagType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE2)
  {
    *(_QWORD *)result = a2 - 227;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xE3)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xE3)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 29;
  }
  return result;
}

void type metadata accessor for EntityTaggingService.RankedPersonEntityTags.ScoredPersonEntityTagType()
{
  sub_1AE4F67D4();
}

void type metadata accessor for EntityTaggingService.PersonTaggingOptions()
{
  sub_1AE4F67D4();
}

void sub_1AE63F268(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v2 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v2;
  swift_bridgeObjectRetain();
  sub_1AE4F6664();
}

uint64_t assignWithCopy for EntityTaggingService.RankedEntityTagPersons(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for EntityTaggingService.RankedEntityTagPersons(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

void type metadata accessor for EntityTaggingService.RankedEntityTagPersons()
{
  sub_1AE4F67D4();
}

void type metadata accessor for EntityTaggingService.RankedEntityTagPersons.ScoredPersonEntity()
{
  sub_1AE4F67D4();
}

uint64_t method lookup function for EntityTaggingStatefulFeedback()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntityTaggingStatefulFeedback.variant.getter()
{
  uint64_t *v0;

  return sub_1AE640A34(*v0);
}

uint64_t dispatch thunk of EntityTaggingStatefulFeedback.processImmediately.getter()
{
  uint64_t *v0;

  return sub_1AE6405E0(*v0);
}

uint64_t dispatch thunk of EntityTaggingStatefulFeedback.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of EntityTaggingStatefulFeedback.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t assignWithCopy for EntityTaggingStatefulFeedback.FeedbackKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1AE606704(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1AE604A30(v5, v6);
  return a1;
}

void type metadata accessor for EntityTaggingStatefulFeedback.FeedbackKind()
{
  sub_1AE4F67D4();
}

uint64_t method lookup function for EntityTaggingDirectFeedback()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntityTaggingDirectFeedback.__allocating_init(kind:tagInference:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of EntityTaggingDirectFeedback.variant.getter()
{
  uint64_t *v0;

  return sub_1AE6405E0(*v0);
}

uint64_t dispatch thunk of EntityTaggingDirectFeedback.processImmediately.getter()
{
  uint64_t *v0;

  return sub_1AE640A40(*v0);
}

uint64_t dispatch thunk of EntityTaggingDirectFeedback.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of EntityTaggingDirectFeedback.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

void type metadata accessor for EntityTaggingDirectFeedback.FeedbackKind()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for EntityTaggingDirectFeedback.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE63F500 + 4 * byte_1AE946428[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE63F534 + 4 * byte_1AE946423[v4]))();
}

uint64_t sub_1AE63F534(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE63F53C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE63F544);
  return result;
}

uint64_t sub_1AE63F550(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE63F558);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE63F55C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE63F564(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EntityTaggingDirectFeedback.CodingKeys()
{
  return &type metadata for EntityTaggingDirectFeedback.CodingKeys;
}

ValueMetadata *type metadata accessor for EntityTaggingStatefulFeedback.CodingKeys()
{
  return &type metadata for EntityTaggingStatefulFeedback.CodingKeys;
}

uint64_t _s20IntelligencePlatform27EntityTaggingDirectFeedbackC12FeedbackKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AE63F5E0 + 4 * byte_1AE946432[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AE63F614 + 4 * byte_1AE94642D[v4]))();
}

uint64_t sub_1AE63F614(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE63F61C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE63F624);
  return result;
}

uint64_t sub_1AE63F630(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE63F638);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AE63F63C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE63F644(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EntityTaggingStatefulFeedback.FeedbackKind.CodingKeys()
{
  return &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.CodingKeys;
}

ValueMetadata *type metadata accessor for EntityTaggingStatefulFeedback.FeedbackKind.UnSetCodingKeys()
{
  return &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.UnSetCodingKeys;
}

ValueMetadata *type metadata accessor for EntityTaggingStatefulFeedback.FeedbackKind.AppearedCodingKeys()
{
  return &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.AppearedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityTaggingStatefulFeedback.FeedbackKind.AcceptedCodingKeys()
{
  return &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.AcceptedCodingKeys;
}

ValueMetadata *type metadata accessor for EntityTaggingStatefulFeedback.FeedbackKind.RejectedCodingKeys()
{
  return &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.RejectedCodingKeys;
}

uint64_t _s20IntelligencePlatform29EntityTaggingStatefulFeedbackC10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE63F6E0 + 4 * byte_1AE946437[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE63F700 + 4 * byte_1AE94643C[v4]))();
}

_BYTE *sub_1AE63F6E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE63F700(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE63F708(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE63F710(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE63F718(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE63F720(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EntityTaggingStatefulFeedback.FeedbackKind.DisappearedCodingKeys()
{
  return &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.DisappearedCodingKeys;
}

unint64_t sub_1AE63F740()
{
  unint64_t result;

  result = qword_1EED9E908;
  if (!qword_1EED9E908)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946C88, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.DisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E908);
  }
  return result;
}

unint64_t sub_1AE63F780()
{
  unint64_t result;

  result = qword_1EED9E910;
  if (!qword_1EED9E910)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946D40, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.RejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E910);
  }
  return result;
}

unint64_t sub_1AE63F7C0()
{
  unint64_t result;

  result = qword_1EED9E918;
  if (!qword_1EED9E918)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946DF8, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E918);
  }
  return result;
}

unint64_t sub_1AE63F800()
{
  unint64_t result;

  result = qword_1EED9E920;
  if (!qword_1EED9E920)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946EB0, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.AppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E920);
  }
  return result;
}

unint64_t sub_1AE63F840()
{
  unint64_t result;

  result = qword_1EED9E928;
  if (!qword_1EED9E928)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946F68, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.UnSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E928);
  }
  return result;
}

unint64_t sub_1AE63F880()
{
  unint64_t result;

  result = qword_1EED9E930;
  if (!qword_1EED9E930)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947020, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E930);
  }
  return result;
}

unint64_t sub_1AE63F8C0()
{
  unint64_t result;

  result = qword_1EED9E938;
  if (!qword_1EED9E938)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9470D8, &type metadata for EntityTaggingStatefulFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E938);
  }
  return result;
}

unint64_t sub_1AE63F900()
{
  unint64_t result;

  result = qword_1EED9E940;
  if (!qword_1EED9E940)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947190, &type metadata for EntityTaggingDirectFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E940);
  }
  return result;
}

unint64_t sub_1AE63F940()
{
  unint64_t result;

  result = qword_1EED9E948;
  if (!qword_1EED9E948)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947100, &type metadata for EntityTaggingDirectFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E948);
  }
  return result;
}

unint64_t sub_1AE63F980()
{
  unint64_t result;

  result = qword_1EED9E950;
  if (!qword_1EED9E950)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947128, &type metadata for EntityTaggingDirectFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E950);
  }
  return result;
}

unint64_t sub_1AE63F9C0()
{
  unint64_t result;

  result = qword_1EED9E958;
  if (!qword_1EED9E958)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947048, &type metadata for EntityTaggingStatefulFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E958);
  }
  return result;
}

unint64_t sub_1AE63FA00()
{
  unint64_t result;

  result = qword_1EED9E960;
  if (!qword_1EED9E960)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947070, &type metadata for EntityTaggingStatefulFeedback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E960);
  }
  return result;
}

unint64_t sub_1AE63FA40()
{
  unint64_t result;

  result = qword_1EED9E968;
  if (!qword_1EED9E968)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946ED8, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.UnSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E968);
  }
  return result;
}

unint64_t sub_1AE63FA80()
{
  unint64_t result;

  result = qword_1EED9E970;
  if (!qword_1EED9E970)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946F00, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.UnSetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E970);
  }
  return result;
}

unint64_t sub_1AE63FAC0()
{
  unint64_t result;

  result = qword_1EED9E978;
  if (!qword_1EED9E978)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946E20, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.AppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E978);
  }
  return result;
}

unint64_t sub_1AE63FB00()
{
  unint64_t result;

  result = qword_1EED9E980;
  if (!qword_1EED9E980)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946E48, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.AppearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E980);
  }
  return result;
}

unint64_t sub_1AE63FB40()
{
  unint64_t result;

  result = qword_1EED9E988;
  if (!qword_1EED9E988)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946D68, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E988);
  }
  return result;
}

unint64_t sub_1AE63FB80()
{
  unint64_t result;

  result = qword_1EED9E990;
  if (!qword_1EED9E990)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946D90, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.AcceptedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E990);
  }
  return result;
}

unint64_t sub_1AE63FBC0()
{
  unint64_t result;

  result = qword_1EED9E998;
  if (!qword_1EED9E998)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946CB0, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.RejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E998);
  }
  return result;
}

unint64_t sub_1AE63FC00()
{
  unint64_t result;

  result = qword_1EED9E9A0;
  if (!qword_1EED9E9A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946CD8, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.RejectedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E9A0);
  }
  return result;
}

unint64_t sub_1AE63FC40()
{
  unint64_t result;

  result = qword_1EED9E9A8;
  if (!qword_1EED9E9A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946BF8, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.DisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E9A8);
  }
  return result;
}

unint64_t sub_1AE63FC80()
{
  unint64_t result;

  result = qword_1EED9E9B0;
  if (!qword_1EED9E9B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946C20, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.DisappearedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E9B0);
  }
  return result;
}

unint64_t sub_1AE63FCC0()
{
  unint64_t result;

  result = qword_1EED9E9B8;
  if (!qword_1EED9E9B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946F90, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E9B8);
  }
  return result;
}

unint64_t sub_1AE63FD00()
{
  unint64_t result;

  result = qword_1EED9E9C0;
  if (!qword_1EED9E9C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE946FB8, &type metadata for EntityTaggingStatefulFeedback.FeedbackKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9E9C0);
  }
  return result;
}

uint64_t sub_1AE63FD3C()
{
  uint64_t v0;

  sub_1AE641054();
  sub_1AE641024();

  sub_1AE640FD8();
  _Block_release(*(const void **)(v0 + 48));

  return swift_deallocObject();
}

uint64_t sub_1AE63FD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v19;

  sub_1AE640D68();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v11;
  *v11 = v10;
  v11[1] = sub_1AE607CF8;
  sub_1AE640D00();
  return v18(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
}

uint64_t sub_1AE63FDFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1AE640824();
  sub_1AE640E08();
  v1 = (_QWORD *)sub_1AE640ADC();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4F93E4(v1, (uint64_t)sub_1AE607CF8);
  return sub_1AE50AB6C(v2, v3, v4, v5, v6);
}

uint64_t sub_1AE63FE40()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_1AE640A98();
  return swift_deallocObject();
}

uint64_t sub_1AE63FE64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = swift_task_alloc();
  v8 = (_QWORD *)sub_1AE4F78CC(v7);
  *v8 = v2;
  v8[1] = sub_1AE607CF8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EED9E9F8 + dword_1EED9E9F8))(a1, v4, v5, v6);
}

uint64_t sub_1AE63FEE4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AE63FF08()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v3)(void);

  v1 = swift_task_alloc();
  v2 = (_QWORD *)sub_1AE4F78CC(v1);
  *v2 = v0;
  v2[1] = sub_1AE6146CC;
  sub_1AE64108C();
  return v3();
}

uint64_t sub_1AE63FF70()
{
  uint64_t v0;

  sub_1AE641054();
  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject();
}

uint64_t sub_1AE63FFA0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1AE607CF8;
  sub_1AE64108C();
  return v2();
}

uint64_t sub_1AE64000C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1AE640824();
  sub_1AE640E08();
  v1 = (_QWORD *)sub_1AE640ADC();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4F93E4(v1, (uint64_t)sub_1AE607CF8);
  return sub_1AE50AB6C(v2, v3, v4, v5, v6);
}

uint64_t sub_1AE64004C()
{
  uint64_t v0;

  sub_1AE641024();
  _Block_release(*(const void **)(v0 + 32));
  sub_1AE640FD8();
  sub_1AE640A98();
  return swift_deallocObject();
}

uint64_t sub_1AE640070()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1AE640824();
  sub_1AE640E08();
  v1 = (_QWORD *)sub_1AE640ADC();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4F93E4(v1, (uint64_t)sub_1AE607CF8);
  return sub_1AE50AB6C(v2, v3, v4, v5, v6);
}

uint64_t sub_1AE6400B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1AE640824();
  sub_1AE640E08();
  v1 = (_QWORD *)sub_1AE640ADC();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4F93E4(v1, (uint64_t)sub_1AE605120);
  return sub_1AE50AB6C(v2, v3, v4, v5, v6);
}

uint64_t sub_1AE6400F8()
{
  uint64_t v0;

  sub_1AE641054();
  sub_1AE641024();
  _Block_release(*(const void **)(v0 + 32));
  sub_1AE640FD8();
  sub_1AE640A98();
  return swift_deallocObject();
}

uint64_t sub_1AE640120()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_1AE640824();
  sub_1AE640E08();
  v1 = (_QWORD *)sub_1AE640ADC();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_1AE4F93E4(v1, (uint64_t)sub_1AE607CF8);
  return sub_1AE50AB6C(v2, v3, v4, v5, v6);
}

unint64_t sub_1AE640160()
{
  unint64_t result;

  result = qword_1EED9EA68;
  if (!qword_1EED9EA68)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityTaggingDirectFeedback.FeedbackKind, &type metadata for EntityTaggingDirectFeedback.FeedbackKind);
    atomic_store(result, (unint64_t *)&qword_1EED9EA68);
  }
  return result;
}

unint64_t sub_1AE64019C()
{
  unint64_t result;

  result = qword_1EED9EA70;
  if (!qword_1EED9EA70)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonEntityTagType, &type metadata for PersonEntityTagType);
    atomic_store(result, (unint64_t *)&qword_1EED9EA70);
  }
  return result;
}

uint64_t sub_1AE6401D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548((uint64_t *)&unk_1ED31C440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE640220(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CodableLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE640264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CodableLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE6402A8(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return destroy for TrialAssetManager.RefreshPolicy();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_1AE6402C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_1AE52FD5C(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_1AE4F6664();
}

uint64_t sub_1AE640344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AE63E358(a1, a2);
}

uint64_t sub_1AE640390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 478) = *(_BYTE *)(v1 + 32);
  *(_QWORD *)(v2 + 416) = v0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE6403C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE62D808(a1, a2, a3);
}

void sub_1AE6403DC()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 16);
}

uint64_t sub_1AE6403FC()
{
  return swift_retain();
}

uint64_t sub_1AE64043C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1AE501548(a3);
}

void sub_1AE640454(uint64_t a1@<X8>)
{
  _QWORD *v1;

  v1[11] = 0xE300000000000000;
  v1[10] = 3826797;
  v1[20] = a1;
}

uint64_t sub_1AE64047C()
{
  return sub_1AE926AFC();
}

void sub_1AE640494()
{
  sub_1AE51B14C();
}

void sub_1AE6404AC()
{
  sub_1AE51B14C();
}

void sub_1AE6404C4(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2[13] = 0xE300000000000000;
  v2[12] = v1 + 1272;
  v2[21] = a1;
}

uint64_t sub_1AE64050C()
{
  return sub_1AE926AFC();
}

void *sub_1AE640514()
{
  return malloc(0x28uLL);
}

uint64_t sub_1AE640528@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 368) = a2;
  *(_QWORD *)(v4 + 376) = v3;
  *(_BYTE *)(v4 + 477) = *(_BYTE *)(*(_QWORD *)(result + 56) + v2);
  return result;
}

uint64_t sub_1AE640548@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 424) = a2;
  *(_QWORD *)(v4 + 432) = v3;
  *(_BYTE *)(v4 + 479) = *(_BYTE *)(*(_QWORD *)(result + 56) + v2);
  return result;
}

void sub_1AE640580(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2[9] = 0xE300000000000000;
  v2[8] = v1;
  v2[23] = a1;
}

void sub_1AE6405A0(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2[17] = 0xE300000000000000;
  v2[16] = v1;
  v2[19] = a1;
}

uint64_t sub_1AE6405C0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AE6405E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x68))();
}

void sub_1AE6405EC(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v1 + 16) = v3;
  v6 = v1 + 16 * v5;
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v2;

}

void sub_1AE640618(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v4 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * a1);
  *v5 = v3;
  v5[1] = v2;
}

void sub_1AE640648(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v2 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
  v5 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * a1);
  *v5 = v4;
  v5[1] = v3;
}

void sub_1AE640678()
{
  sub_1AE5533C0();
}

void sub_1AE640688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  EntityTaggingDirectFeedback.init(kind:tagInference:)(&a12, &a13);
}

void sub_1AE640698(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
  *(_BYTE *)(*(_QWORD *)(v2 + 48) + a1) = v3;
}

void sub_1AE6406C4(uint64_t a1@<X8>)
{
  _QWORD *v1;

  v1[5] = 0xE300000000000000;
  v1[4] = 3828069;
  v1[25] = a1;
}

uint64_t sub_1AE6406F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 16);
}

uint64_t sub_1AE640730()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE640768(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double sub_1AE64077C()
{
  double v0;

  return v0;
}

uint64_t sub_1AE640790()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE6407A4()
{
  return swift_unexpectedError();
}

uint64_t sub_1AE6407B8()
{
  return swift_deallocPartialClassInstance();
}

void sub_1AE6407CC(uint64_t a1@<X8>)
{
  _QWORD *v1;

  v1[9] = 0xE300000000000000;
  v1[8] = 3826797;
  v1[23] = a1;
}

uint64_t sub_1AE64080C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 312) = a2;
  *(_QWORD *)(v4 + 320) = v3;
  *(_BYTE *)(v4 + 475) = *(_BYTE *)(*(_QWORD *)(result + 56) + v2);
  return result;
}

void sub_1AE640870()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 440) = *v1;
}

void sub_1AE640880(char a1@<W8>)
{
  _QWORD *v1;

  *v1 = -1 << a1;
}

uint64_t sub_1AE640890()
{
  return swift_allocObject();
}

uint64_t sub_1AE64089C()
{
  return type metadata accessor for EntityTaggingDirectFeedback();
}

void sub_1AE6408A8(unint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

uint64_t sub_1AE6408F0()
{
  return sub_1AE926EC8();
}

id sub_1AE6408FC()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

uint64_t sub_1AE64090C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE640918()
{
  return swift_getObjectType();
}

uint64_t sub_1AE640924()
{
  return swift_task_dealloc();
}

uint64_t sub_1AE64092C()
{
  return sub_1AE926B14();
}

uint64_t sub_1AE64094C()
{
  return 0;
}

_QWORD *sub_1AE64095C()
{
  uint64_t v0;
  _QWORD *v1;

  return sub_1AE4F9858((_QWORD *)(*(_QWORD *)(v0 + *v1) + 16), *(_QWORD *)(*(_QWORD *)(v0 + *v1) + 40));
}

void sub_1AE640974()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1AE6409F8()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE640A10()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 232);
}

void sub_1AE640A24()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 384) = *v1;
}

uint64_t sub_1AE640A34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x60))();
}

uint64_t sub_1AE640A40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))((v1 & a1) + 0x70))();
}

uint64_t sub_1AE640A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 + 32) + 16))(*(_QWORD *)(v2 + 32), v0, v1);
}

uint64_t sub_1AE640A64()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE640A7C(_BYTE *a1, uint64_t a2)
{
  return sub_1AE632218(a1, a2);
}

uint64_t sub_1AE640A98()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE640AC8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1AE555CAC(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t sub_1AE640ADC()
{
  return swift_task_alloc();
}

id sub_1AE640AE4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  void *v11;
  uint64_t v12;
  uint64_t v13;

  return objc_msgSend(v11, (SEL)(v13 + 2227), v12, &a11);
}

uint64_t sub_1AE640AF8()
{
  return sub_1AE92691C();
}

uint64_t sub_1AE640B0C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1AE640B44()
{
  return sub_1AE925E18();
}

uint64_t sub_1AE640B58()
{
  return swift_allocObject();
}

uint64_t _s20IntelligencePlatform26PersonEntityTaggingServiceC011ScoreRankedcD4TagsC2id06scoredcdI016inferenceEventIdAeA0D10IdentifierV_SayAE06ScoredcD3TagCGs5Int64VtcfCTj_0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_1AE640B6C()
{
  void *v0;

}

uint64_t sub_1AE640B78()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE640B8C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 232);
}

uint64_t sub_1AE640BA8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 224);
}

uint64_t sub_1AE640BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8))(v0, v1);
}

uint64_t sub_1AE640BF4()
{
  return swift_deallocPartialClassInstance();
}

void sub_1AE640C08()
{
  sub_1AE53741C();
}

uint64_t sub_1AE640C14()
{
  return sub_1AE926AB4();
}

uint64_t sub_1AE640C34()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

uint64_t sub_1AE640C50@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X8>)
{
  return sub_1AE555CAC(0, (unint64_t)(a2 + 63) >> 6, a1);
}

id sub_1AE640C60(id a1)
{
  return a1;
}

uint64_t sub_1AE640C98()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE640CC0()
{
  return sub_1AE926BEC();
}

void sub_1AE640CE8()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1AE640CF8()
{
  return swift_release();
}

_QWORD *sub_1AE640D18@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t sub_1AE640D28()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v0, v1);
}

uint64_t sub_1AE640D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t (*a17)(uint64_t))
{
  uint64_t v17;

  return a17(v17);
}

uint64_t sub_1AE640D48()
{
  return PersonEntityTagType.gdTagType.getter();
}

void sub_1AE640D58(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  PersonEntityTaggingService.ScoreRankedPersonEntityTags.init(id:scoredPersonEntityTags:inferenceEventId:)(a1, v2, v1);
}

uint64_t sub_1AE640D98()
{
  return swift_dynamicCast();
}

void sub_1AE640DA8()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1AE640DB8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE640DC8()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 16))(v0, 0);
}

uint64_t sub_1AE640DD8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 16))(v0, v1);
}

void sub_1AE640DE8()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 328) = *v1;
}

uint64_t sub_1AE640DF8()
{
  return sub_1AE926CC4();
}

void sub_1AE640E30(_BYTE *a1)
{
  uint64_t v1;

  PersonEntityTaggingService.ScoreRankedEntityTagPersons.init(tag:scoredEntities:inferenceEventId:)(a1, v1, 0);
}

uint64_t sub_1AE640E40@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 424) = a2;
  *(_QWORD *)(v4 + 432) = v3;
  *(_BYTE *)(v4 + 479) = *(_BYTE *)(*(_QWORD *)(result + 56) + v2);
  return result;
}

void sub_1AE640E88()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void sub_1AE640E98()
{
  void *v0;

}

id sub_1AE640EA0()
{
  id *v0;

  return *v0;
}

BOOL sub_1AE640EA8@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void sub_1AE640F08(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4[6] = v1;
  v4[7] = v2;
  v4[8] = (v3 - 32) | 0x8000000000000000;
  v4[9] = a1;
  v4[10] = v1;
}

void sub_1AE640F20()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t sub_1AE640F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1AE640F50()
{
  return 0;
}

uint64_t sub_1AE640F68()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE640FB8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, 0, v2);
}

void sub_1AE640FD8()
{
  uint64_t v0;

}

uint64_t sub_1AE640FE0()
{
  return sub_1AE926EEC();
}

uint64_t sub_1AE640FEC()
{
  return sub_1AE926EC8();
}

uint64_t sub_1AE640FF8()
{
  return sub_1AE926EC8();
}

unint64_t sub_1AE641004()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 4;
  return sub_1AE63E470();
}

void sub_1AE641010(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
}

unint64_t sub_1AE641018()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 3;
  return sub_1AE63E4AC();
}

void sub_1AE641024()
{
  uint64_t v0;

}

uint64_t sub_1AE641040(uint64_t a1, char a2)
{
  uint64_t v2;

  return *(_QWORD *)(v2 + 16) + ((a2 & 1) == 0);
}

void sub_1AE641054()
{
  uint64_t v0;

}

unint64_t sub_1AE64105C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 2;
  return sub_1AE63E4E8();
}

void sub_1AE641068()
{
  JUMPOUT(0x1AF453B80);
}

uint64_t sub_1AE641074()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1AE641080()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 1;
  return sub_1AE63E524();
}

uint64_t sub_1AE641098()
{
  return swift_release();
}

void sub_1AE6410A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  PersonEntityTagType.init(gdTagType:)(&a13);
}

id sub_1AE6410A8()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(v0 + 8 * v1 + 32);
}

uint64_t sub_1AE6410B4()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_1AE6410C0()
{
  void *v0;

}

uint64_t sub_1AE6410CC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 224);
}

void sub_1AE6410E0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 8) = 3828069;
}

uint64_t sub_1AE6410F4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2, 0);
}

uint64_t sub_1AE641100()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE64110C()
{
  return swift_retain();
}

uint64_t sub_1AE641118()
{
  return sub_1AE926A6C();
}

void sub_1AE641130()
{
  JUMPOUT(0x1AF453B80);
}

id sub_1AE64113C()
{
  const char *v0;
  objc_super *v1;

  return objc_msgSendSuper2(v1, v0);
}

uint64_t sub_1AE6411A8()
{
  return sub_1AE9246A8();
}

unint64_t sub_1AE6411B0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE4F9858(v0, v1);
  return sub_1AE63E434();
}

uint64_t sub_1AE6411CC()
{
  return sub_1AE926AB4();
}

uint64_t sub_1AE6411D8()
{
  return sub_1AE9246B4();
}

uint64_t sub_1AE6411E4(double a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  char v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  _QWORD *v36;

  sub_1AE506C24();
  v7 = v6 & v5;
  v34 = (unint64_t)(v8 + 63) >> 6;
  v35 = v9;
  swift_bridgeObjectRetain();
  v10 = 0;
  if (!v7)
    goto LABEL_3;
LABEL_2:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v22 = *(_BYTE *)(*(_QWORD *)(v35 + 48) + i);
    swift_isUniquelyReferenced_nonNull_native();
    v23 = (_QWORD *)*a3;
    v36 = (_QWORD *)*a3;
    *a3 = 0x8000000000000000;
    v24 = sub_1AE5373F8();
    if (__OFADD__(v23[2], (v25 & 1) == 0))
    {
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v26 = v24;
    v27 = v25;
    sub_1AE501548(&qword_1EED94750);
    if ((sub_1AE926A54() & 1) != 0)
    {
      v28 = sub_1AE5373F8();
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_38;
      v26 = v28;
    }
    if ((v27 & 1) != 0)
    {
      *(double *)(v36[7] + 8 * v26) = a1;
    }
    else
    {
      v36[(v26 >> 6) + 8] |= 1 << v26;
      *(_BYTE *)(v36[6] + v26) = v22;
      *(double *)(v36[7] + 8 * v26) = a1;
      v30 = v36[2];
      v16 = __OFADD__(v30, 1);
      v31 = v30 + 1;
      if (v16)
        goto LABEL_35;
      v36[2] = v31;
    }
    *a3 = v36;
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_2;
LABEL_3:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_36;
    if (v13 >= v34)
      return swift_release();
    v14 = *(_QWORD *)(v33 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      sub_1AE6461B4();
      if (v15 == v16)
        return swift_release();
      sub_1AE646194();
      if (!v14)
      {
        v10 = v17 + 2;
        sub_1AE6461B4();
        if (v15 == v16)
          return swift_release();
        sub_1AE646194();
        if (!v14)
        {
          v10 = v18 + 3;
          sub_1AE6461B4();
          if (v15 == v16)
            return swift_release();
          sub_1AE646194();
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v14 - 1) & v14;
  }
  v20 = v19 + 4;
  if (v20 >= v34)
    return swift_release();
  v14 = *(_QWORD *)(v33 + 8 * v20);
  if (v14)
  {
    v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    sub_1AE6461B4();
    if (v15 == v16)
      return swift_release();
    sub_1AE646194();
    v20 = v21 + 1;
    if (v14)
      goto LABEL_22;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE64144C(uint64_t a1, uint64_t a2)
{
  return sub_1AE641460(a1, a2, (void (*)(void))sub_1AE643DC0, (uint64_t (*)(void))sub_1AE6440AC);
}

uint64_t sub_1AE641460(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t (*a4)(void))
{
  if (*(_QWORD *)(a1 + 16) > *(_QWORD *)(a2 + 16) >> 3)
    return a4();
  a3();
  return a2;
}

void sub_1AE6414B0()
{
  qword_1EEE11C50 = (uint64_t)&unk_1E5DAC6B8;
}

void sub_1AE6414C4(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  id v17;
  double v18;
  double v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;

  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_30;
  v5 = sub_1AE503668();
  if ((v6 & 1) == 0)
    goto LABEL_30;
  if (sub_1AE646098(v5) >= 0.95)
    goto LABEL_31;
  sub_1AE50875C(&v36);
  v7 = sub_1AE8989D8((uint64_t)&unk_1E5DAC690);
  v8 = sub_1AE500040(v7);
  sub_1AE4F67AC();
  if ((v8 & 1) != 0)
    goto LABEL_31;
  v9 = sub_1AE6432D8();
  v10 = sub_1AE500040(v9);
  sub_1AE4F67AC();
  if ((v10 & 1) != 0)
    goto LABEL_31;
  v11 = sub_1AE8989D8((uint64_t)&unk_1E5DAC6F0);
  v12 = sub_1AE500040(v11);
  sub_1AE4F67AC();
  if ((v12 & 1) != 0)
    goto LABEL_31;
  sub_1AE508B70(&v35);
  v13 = sub_1AE8989D8((uint64_t)&unk_1E5DAC690);
  v14 = sub_1AE500040(v13);
  sub_1AE4F67AC();
  if ((v14 & 1) != 0)
    goto LABEL_31;
  v15 = static EntityTaggingModelUtility.interactionMechanismToStringMapping.getter();
  v16 = (void *)sub_1AE4FED30();
  v17 = sub_1AE646174((uint64_t)v16, sel_featureValueForName_);

  v18 = 0.0;
  if (v17)
  {
    objc_msgSend(v17, sel_doubleValue);
    v18 = v19;

  }
  sub_1AE516164(v15, v18);
  sub_1AE4F76D8();
  v20 = sub_1AE50AB8C();
  v21 = sub_1AE508FE0(v20);
  sub_1AE646148();
  if (v3)
  {
    sub_1AE4FED3C(v22, sel_doubleValue);
    sub_1AE6461E4();
  }
  sub_1AE4F6AD0();
  if (v23)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  sub_1AE4F9408();
  if (!v24)
    goto LABEL_34;
  sub_1AE646150();
  v25 = sub_1AE4FED30();
  v26 = sub_1AE508FE0(v25);
  sub_1AE646148();
  if (v3)
  {
    sub_1AE4FED3C(v27, sel_doubleValue);
    sub_1AE6461E4();
  }
  else
  {
    v4 = 0.0;
  }
  sub_1AE4F6AD0();
  if (v23)
    goto LABEL_35;
  if (v4 > -9.22337204e18)
  {
    sub_1AE4F9408();
    if (!v24)
      goto LABEL_37;
    sub_1AE64615C();
    v28 = sub_1AE4FED30();
    v29 = sub_1AE508FE0(v28);
    sub_1AE646148();
    if (v3)
    {
      sub_1AE4FED3C(v30, sel_doubleValue);
      sub_1AE6461E4();
    }
    v31 = (void *)sub_1AE4FED30();
    v32 = objc_msgSend(v2, sel_featureValueForName_, v31);

    if (v32)
    {
      sub_1AE507584(v33, sel_doubleValue);

    }
    sub_1AE50828C(4);
    if ((v34 & 1) == 0)
    {
      sub_1AE505DB0();
      sub_1AE4F76D8();
LABEL_31:
      sub_1AE507A1C();
      return;
    }
    sub_1AE4F76D8();
LABEL_30:
    sub_1AE64387C();
    sub_1AE4F6778();
    sub_1AE4FBBB8();
    goto LABEL_31;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1AE641874(void *a1, uint64_t a2)
{
  sub_1AE641F0C(a1, a2, 6, 5);
}

void sub_1AE641890(void *a1, uint64_t a2)
{
  sub_1AE641F0C(a1, a2, 7, 5);
}

void sub_1AE6418AC(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  double v30;
  double v31;
  char v32;
  uint64_t v33;
  _BYTE v34[7];
  char v35;

  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_23;
  v4 = sub_1AE503668();
  if ((v5 & 1) == 0)
    goto LABEL_23;
  if (sub_1AE646098(v4) >= 0.95)
    goto LABEL_24;
  sub_1AE50875C(&v35);
  v6 = sub_1AE8989D8((uint64_t)&unk_1E5DAC718);
  v7 = sub_1AE500040(v6);
  sub_1AE4F67AC();
  if ((v7 & 1) != 0)
    goto LABEL_24;
  v8 = sub_1AE6432D8();
  v9 = sub_1AE500040(v8);
  sub_1AE4F67AC();
  if ((v9 & 1) != 0)
    goto LABEL_24;
  v10 = sub_1AE8989D8((uint64_t)&unk_1E5DAC6F0);
  v11 = sub_1AE500040(v10);
  v12 = sub_1AE4F67AC();
  if ((v11 & 1) != 0)
    goto LABEL_24;
  sub_1AE5099B4(v12, v13, v14, v15, v16, v17, v18, v19, v33, *(int *)v34, *(__int16 *)&v34[4], v34[6]);
  v20 = sub_1AE8989D8((uint64_t)&unk_1E5DAC718);
  v21 = sub_1AE500040(v20);
  sub_1AE4F67AC();
  if ((v21 & 1) != 0)
    goto LABEL_24;
  v22 = sub_1AE50AB8C();
  v23 = sub_1AE50558C(v22, sel_featureValueForName_);
  sub_1AE4F6914();
  if (v21)
  {
    sub_1AE509508(v24, sel_doubleValue);
    sub_1AE5070D4();
  }
  sub_1AE4F6AD0();
  if (v25)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  sub_1AE4F9408();
  if (!v26)
    goto LABEL_27;
  AgeDifferenceCategory.init(rawValue:)((uint64_t)v3);
  v27 = sub_1AE4FED30();
  v28 = sub_1AE500C8C(v27, sel_featureValueForName_);
  sub_1AE646180();
  if (v2)
  {
    sub_1AE507584(v29, sel_doubleValue);
    v31 = v30;

  }
  else
  {
    v31 = 0.0;
  }
  sub_1AE4F6AD0();
  if (v25)
    goto LABEL_28;
  if (v31 > -9.22337204e18)
  {
    sub_1AE4F9408();
    if (!v26)
      goto LABEL_30;
    AgeDifferenceCategory.init(rawValue:)((uint64_t)v31);
    sub_1AE50828C(4);
    if ((v32 & 1) == 0)
    {
      sub_1AE505DB0();
LABEL_24:
      sub_1AE507A1C();
      return;
    }
LABEL_23:
    sub_1AE64387C();
    sub_1AE4F6778();
    sub_1AE4FBBB8();
    goto LABEL_24;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_1AE641B08(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _BOOL4 v20;
  BOOL v21;
  BOOL v22;
  _BOOL4 v23;
  char v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;

  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_47;
  v4 = sub_1AE503668();
  if ((v5 & 1) == 0)
    goto LABEL_47;
  if (sub_1AE646098(v4) >= 0.95)
    goto LABEL_48;
  sub_1AE50875C(&v37);
  v6 = sub_1AE8989D8((uint64_t)&unk_1E5DAC638);
  v7 = sub_1AE500040(v6);
  sub_1AE4F67AC();
  if ((v7 & 1) != 0)
    goto LABEL_48;
  v8 = sub_1AE6432D8();
  v9 = sub_1AE500040(v8);
  sub_1AE4F67AC();
  if ((v9 & 1) != 0)
    goto LABEL_48;
  v10 = sub_1AE8989D8((uint64_t)&unk_1E5DAC6F0);
  v11 = sub_1AE500040(v10);
  sub_1AE4F67AC();
  if ((v11 & 1) != 0)
    goto LABEL_48;
  sub_1AE508B70(&v36);
  v12 = sub_1AE8989D8((uint64_t)&unk_1E5DAC638);
  v13 = sub_1AE500040(v12);
  sub_1AE4F67AC();
  if ((v13 & 1) != 0)
    goto LABEL_48;
  v14 = sub_1AE4FED30();
  v15 = sub_1AE50558C(v14, sel_featureValueForName_);
  sub_1AE4F6914();
  if (v13)
  {
    v16 = objc_msgSend((id)v13, sel_stringValue);

    v17 = sub_1AE925E3C();
    v19 = v18;

    v20 = v19 == 0xE500000000000000;
    v21 = v17 == 0x544C554441 && v19 == 0xE500000000000000;
    if (v21)
      goto LABEL_17;
  }
  else
  {
    v20 = 0;
    v17 = 0x4E574F4E4B4E55;
    v19 = 0xE700000000000000;
  }
  if ((sub_1AE508A98() & 1) != 0)
  {
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_48:
    sub_1AE507A1C();
    return;
  }
  v22 = v17 == 1313162580 && v19 == 0xE400000000000000;
  if (v22 || (sub_1AE508A98() & 1) != 0 || (v17 == 0x444C494843 ? (v23 = v20) : (v23 = 0), v23))
  {
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  v24 = sub_1AE508A98();
  sub_1AE4F76D8();
  if ((v24 & 1) != 0)
    goto LABEL_48;
  v25 = sub_1AE50AB8C();
  v26 = sub_1AE50558C(v25, sel_featureValueForName_);
  sub_1AE4F6914();
  if (v19)
  {
    sub_1AE509508(v27, sel_doubleValue);
    sub_1AE5070D4();
  }
  sub_1AE4F6AD0();
  if (v21)
  {
    __break(1u);
    goto LABEL_50;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  sub_1AE4F9408();
  if (!v28)
    goto LABEL_51;
  AgeDifferenceCategory.init(rawValue:)((uint64_t)v3);
  v29 = sub_1AE4FED30();
  v30 = sub_1AE50558C(v29, sel_featureValueForName_);
  sub_1AE4F6914();
  if (v19)
  {
    sub_1AE509508(v31, sel_doubleValue);
    sub_1AE5070D4();
  }
  else
  {
    v3 = 0.0;
  }
  sub_1AE4F6AD0();
  if (v21)
    goto LABEL_52;
  if (v3 > -9.22337204e18)
  {
    sub_1AE4F9408();
    if (!v28)
      goto LABEL_54;
    AgeDifferenceCategory.init(rawValue:)((uint64_t)v3);
    v32 = sub_1AE4FED30();
    v33 = sub_1AE500C8C(v32, sel_featureValueForName_);
    sub_1AE646180();
    if (v2)
    {
      sub_1AE507584(v34, sel_doubleValue);

    }
    sub_1AE50828C(4);
    if ((v35 & 1) == 0)
    {
      sub_1AE505DB0();
      goto LABEL_48;
    }
LABEL_47:
    sub_1AE64387C();
    sub_1AE4F6778();
    sub_1AE4FBBB8();
    goto LABEL_48;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
}

void sub_1AE641EF0(void *a1, uint64_t a2)
{
  sub_1AE641F0C(a1, a2, 16, 15);
}

void sub_1AE641F0C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  unsigned __int8 v18;
  unsigned __int8 v19;

  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_10;
  v7 = sub_1AE5373F8();
  if ((v8 & 1) == 0)
    goto LABEL_10;
  if (sub_1AE646098(v7) < 0.95)
  {
    sub_1AE642D14(a1, (char *)&v19);
    sub_1AE511468(v19, a3);
    if ((v9 & 1) == 0)
    {
      v10 = sub_1AE6432D8();
      v11 = sub_1AE6460F0(v10);
      sub_1AE4F6728();
      if ((v11 & 1) == 0)
      {
        v12 = sub_1AE8989D8((uint64_t)&unk_1E5DAC6F0);
        v13 = sub_1AE6460F0(v12);
        sub_1AE4F6728();
        if ((v13 & 1) == 0)
        {
          sub_1AE642E08(a1, (char *)&v18);
          v14 = v18;
          sub_1AE511468(v18, a3);
          if ((v15 & 1) == 0)
          {
            sub_1AE511468(v14, 1);
            if ((v16 & 1) != 0)
            {
              sub_1AE50828C(a4);
              if ((v17 & 1) != 0)
              {
LABEL_10:
                sub_1AE64387C();
                sub_1AE4F6778();
                sub_1AE4FBBB8();
              }
            }
          }
        }
      }
    }
  }
  sub_1AE507A1C();
}

void sub_1AE64204C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  _BYTE v20[7];
  unsigned __int8 v21;
  unsigned __int8 v22;

  if (*(_QWORD *)(a2 + 16) && (v2 = sub_1AE503668(), (v3 & 1) != 0))
  {
    if (sub_1AE646098(v2) < 0.95)
    {
      sub_1AE50875C((char *)&v22);
      sub_1AE511468(v22, 17);
      if ((v4 & 1) == 0)
      {
        v5 = sub_1AE6432D8();
        v6 = sub_1AE500040(v5);
        sub_1AE4F67AC();
        if ((v6 & 1) == 0)
        {
          v7 = sub_1AE8989D8((uint64_t)&unk_1E5DAC6F0);
          v8 = sub_1AE500040(v7);
          v9 = sub_1AE4F67AC();
          if ((v8 & 1) == 0)
          {
            sub_1AE5099B4(v9, v10, v11, v12, v13, v14, v15, v16, v19, *(int *)v20, *(__int16 *)&v20[4], v20[6]);
            sub_1AE511468(v21, 17);
            if ((v17 & 1) == 0)
            {
              sub_1AE511468(v21, 1);
              if ((v18 & 1) != 0)
                sub_1AE50828C(15);
            }
          }
        }
      }
    }
  }
  else
  {
    sub_1AE64387C();
    sub_1AE4F6778();
    sub_1AE4FBBB8();
  }
  sub_1AE507A1C();
}

void sub_1AE642168(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  double v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  char v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  if (!*(_QWORD *)(a2 + 16) || (v5 = sub_1AE503668(), (v6 & 1) == 0))
  {
LABEL_29:
    sub_1AE64387C();
    sub_1AE4F6778();
    sub_1AE4FBBB8();
    return;
  }
  if (*(double *)(*(_QWORD *)(v2 + 56) + 8 * v5) < 0.95)
  {
    sub_1AE50875C(&v28);
    v7 = sub_1AE8989D8((uint64_t)&unk_1E5DAC6F0);
    v8 = sub_1AE500040(v7);
    sub_1AE4F67AC();
    if ((v8 & 1) == 0)
    {
      v9 = sub_1AE6432D8();
      v10 = sub_1AE500040(v9);
      sub_1AE4F67AC();
      if ((v10 & 1) == 0)
      {
        sub_1AE508B70(&v27);
        v11 = sub_1AE8989D8((uint64_t)&unk_1E5DAC6F0);
        v12 = sub_1AE500040(v11);
        sub_1AE4F67AC();
        if ((v12 & 1) == 0)
        {
          v13 = sub_1AE50AB8C();
          v14 = sub_1AE50558C(v13, sel_featureValueForName_);
          sub_1AE4F6914();
          if (v12)
          {
            sub_1AE509F50();
            sub_1AE5070D4();
          }
          else
          {
            v4 = 0.0;
          }
          sub_1AE4F6AD0();
          if (v15)
          {
            __break(1u);
          }
          else if (v4 > -9.22337204e18)
          {
            sub_1AE4F9408();
            if (!v16)
              goto LABEL_33;
            sub_1AE646150();
            v17 = sub_1AE4FED30();
            v18 = sub_1AE50558C(v17, sel_featureValueForName_);
            sub_1AE4F6914();
            if (v12)
            {
              sub_1AE509F50();
              sub_1AE5070D4();
            }
            else
            {
              v4 = 0.0;
            }
            sub_1AE4F6AD0();
            if (v15)
              goto LABEL_34;
            if (v4 <= -9.22337204e18)
            {
LABEL_35:
              __break(1u);
LABEL_36:
              __break(1u);
              return;
            }
            sub_1AE4F9408();
            if (!v16)
              goto LABEL_36;
            sub_1AE64615C();
            v19 = sub_1AE4FED30();
            v20 = sub_1AE50558C(v19, sel_featureValueForName_);
            sub_1AE4F6914();
            if (v12)
            {
              sub_1AE509F50();

            }
            v21 = sub_1AE4FED30();
            v22 = sub_1AE50558C(v21, sel_featureValueForName_);
            sub_1AE4F6914();
            if (v12)
            {
              sub_1AE509F50();
              sub_1AE5070D4();
            }
            v23 = sub_1AE4FED30();
            v24 = sub_1AE500C8C(v23, sel_featureValueForName_);
            sub_1AE646180();
            if (v3)
            {
              sub_1AE507584(v25, sel_doubleValue);

            }
            sub_1AE50828C(4);
            if ((v26 & 1) == 0)
            {
              sub_1AE505DB0();
              return;
            }
            goto LABEL_29;
          }
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
      }
    }
  }
}

void sub_1AE64248C(uint64_t a1, uint64_t a2)
{
  void *v2;
  char *v3;
  uint64_t v4;
  char v5;
  double v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  char v65;
  char v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;

  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_41;
  v4 = sub_1AE503668();
  if ((v5 & 1) == 0)
    goto LABEL_41;
  if (sub_1AE646098(v4) >= 0.95)
    goto LABEL_42;
  v6 = COERCE_DOUBLE(sub_1AE50828C(15));
  if ((v7 & 1) != 0)
  {
LABEL_41:
    sub_1AE64387C();
    sub_1AE4F6778();
    sub_1AE4FBBB8();
    goto LABEL_42;
  }
  if (v6 >= 0.8)
    goto LABEL_42;
  sub_1AE50875C((char *)&v77);
  sub_1AE646188(v8, v9, v10, v11, v12, v13, v14, v15, v68, v70, v73, v75, v77);
  if ((v16 & 1) != 0)
    goto LABEL_42;
  sub_1AE508B70((char *)&v77);
  sub_1AE646188(v17, v18, v19, v20, v21, v22, v23, v24, v69, v71, v74, v76, v77);
  if ((v25 & 1) != 0)
    goto LABEL_42;
  v26 = sub_1AE4FED30();
  v27 = sub_1AE50558C(v26, sel_featureValueForName_);
  sub_1AE4F6914();
  sub_1AE4F78D8();
  if (v2)
  {
    sub_1AE509F50();

  }
  v28 = sub_1AE4FED30();
  v29 = sub_1AE50558C(v28, sel_featureValueForName_);
  sub_1AE4F6914();
  if (v2)
  {
    sub_1AE509F50();
    sub_1AE5070D4();
  }
  v30 = static EntityTaggingModelUtility.interactionMechanismToStringMapping.getter();
  v31 = (void *)sub_1AE563B08();
  v32 = sub_1AE646174((uint64_t)v31, sel_featureValueForName_);

  v33 = 0.0;
  v34 = 0.0;
  if (v32)
  {
    objc_msgSend(v32, v3 + 3144);
    v34 = v35;

  }
  sub_1AE516164(v30, v34);
  v37 = v36;
  v39 = v38;
  sub_1AE4F76D8();
  if (v39)
    v40 = v37;
  else
    v40 = 0;
  v72 = v40;
  if (v39)
    v41 = v39;
  else
    v41 = 0xE000000000000000;
  v79 = v41;
  v42 = static EntityTaggingModelUtility.interactionMechanismToStringMapping.getter();
  v43 = sub_1AE563B08();
  v44 = sub_1AE6460CC(v43);

  if (v44)
  {
    objc_msgSend(v44, sel_doubleValue);
    v33 = v45;

  }
  sub_1AE516164(v42, v33);
  v47 = v46;
  v49 = v48;
  sub_1AE4F67AC();
  if (v49)
    v50 = v47;
  else
    v50 = 0;
  if (v49)
    v51 = (unint64_t)v49;
  else
    v51 = 0xE000000000000000;
  v52 = static EntityTaggingModelUtility.interactionMechanismToStringMapping.getter();
  v53 = sub_1AE563B08();
  v54 = sub_1AE6460CC(v53);

  if (v54)
  {
    sub_1AE507584(v55, sel_doubleValue);
    v57 = v56;

  }
  else
  {
    v57 = 0.0;
  }
  sub_1AE516164(v52, v57);
  v59 = v58;
  v61 = v60;
  sub_1AE4F66E8();
  if (v61)
    v62 = v59;
  else
    v62 = 0;
  if (v61)
    v63 = v61;
  else
    v63 = 0xE000000000000000;
  sub_1AE50828C(22);
  if ((v64 & 1) != 0)
  {
    sub_1AE4F66E8();
    sub_1AE4F67AC();
    sub_1AE506040();
    goto LABEL_41;
  }
  v77 = v72;
  v78 = v79;
  sub_1AE4F7630();
  if ((sub_1AE501C64() & 1) != 0)
  {
    sub_1AE4F66E8();
    sub_1AE4F67AC();
    sub_1AE4F6728();
  }
  else
  {
    v77 = v50;
    v78 = v51;
    v65 = sub_1AE501C64();
    sub_1AE4F67AC();
    if ((v65 & 1) != 0)
    {
      sub_1AE4F66E8();
      sub_1AE506040();
    }
    else
    {
      v77 = v62;
      v78 = v63;
      v66 = sub_1AE501C64();
      sub_1AE4F66E8();
      if ((v66 & 1) != 0)
      {
        sub_1AE506040();
      }
      else
      {
        v67 = v79;
        v77 = v72;
        v78 = v79;
        if ((sub_1AE501C64() & 1) == 0)
        {
          v77 = v72;
          v78 = v67;
          sub_1AE501C64();
        }
        sub_1AE4F67AC();
      }
    }
  }
LABEL_42:
  sub_1AE507A1C();
}

void sub_1AE642928(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[7];
  unsigned __int8 v36;
  unsigned __int8 v37;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_1AE503668(), (v6 & 1) != 0))
  {
    if (*(double *)(*(_QWORD *)(v2 + 56) + 8 * v5) < 0.95)
    {
      sub_1AE50875C((char *)&v37);
      sub_1AE511468(v37, 23);
      if ((v7 & 1) == 0)
      {
        sub_1AE5099B4(v7, v8, v9, v10, v11, v12, v13, v14, v34, *(int *)v35, *(__int16 *)&v35[4], v35[6]);
        sub_1AE511468(v36, 23);
        if ((v15 & 1) == 0)
        {
          v16 = sub_1AE4FED30();
          v17 = sub_1AE500C8C(v16, sel_featureValueForName_);
          sub_1AE6460A8();
          sub_1AE4F78D8();
          if (v2)
          {
            sub_1AE4FB8E8(v18, (const char *)(v4 + 3144));
            sub_1AE6460C4();
          }
          v19 = sub_1AE563B08();
          v20 = sub_1AE500C8C(v19, sel_featureValueForName_);
          sub_1AE6460A8();
          if (v2)
          {
            sub_1AE4FB8E8(v21, (const char *)(v4 + 3144));
            sub_1AE5062F0();
          }
          v22 = sub_1AE4FED30();
          v23 = sub_1AE500C8C(v22, sel_featureValueForName_);
          sub_1AE6460A8();
          if (v2)
          {
            sub_1AE4FB8E8(v24, (const char *)(v4 + 3144));
            sub_1AE646138();
          }
          sub_1AE642FA0(v3);
          v25 = sub_1AE4FED30();
          v26 = sub_1AE500C8C(v25, sel_featureValueForName_);
          sub_1AE6460A8();
          if (v2)
          {
            sub_1AE4FB8E8(v27, (const char *)(v4 + 3144));
            sub_1AE5062F0();
          }
          v28 = sub_1AE563B08();
          v29 = sub_1AE500C8C(v28, sel_featureValueForName_);
          sub_1AE6460A8();
          if (v2)
          {
            sub_1AE4FB8E8(v30, (const char *)(v4 + 3144));
            sub_1AE5062F0();
          }
          v31 = sub_1AE4FED30();
          v32 = sub_1AE500C8C(v31, sel_featureValueForName_);
          sub_1AE6460A8();
          if (v2)
          {
            sub_1AE4FB8E8(v33, (const char *)(v4 + 3144));
            sub_1AE5062F0();
          }
        }
      }
    }
  }
  else
  {
    sub_1AE64387C();
    sub_1AE4F6778();
    sub_1AE4FBBB8();
  }
}

void sub_1AE642C14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[7];
  unsigned __int8 v19;
  unsigned __int8 v20;

  if (*(_QWORD *)(a2 + 16) && (v3 = sub_1AE503668(), (v4 & 1) != 0))
  {
    if (sub_1AE646098(v3) < 0.95)
    {
      sub_1AE50875C((char *)&v20);
      sub_1AE511468(v20, 26);
      if ((v5 & 1) == 0)
      {
        sub_1AE5099B4(v5, v6, v7, v8, v9, v10, v11, v12, v17, *(int *)v18, *(__int16 *)&v18[4], v18[6]);
        sub_1AE511468(v19, 26);
        if ((v13 & 1) == 0)
        {
          v14 = sub_1AE50AB8C();
          v15 = sub_1AE500C8C(v14, sel_featureValueForName_);
          sub_1AE6460A8();
          if (v2)
          {
            sub_1AE4FB8E8(v16, sel_doubleValue);
            sub_1AE6460C4();
          }
        }
      }
    }
  }
  else
  {
    sub_1AE64387C();
    sub_1AE4F6778();
    sub_1AE4FBBB8();
  }
  sub_1AE507A1C();
}

void sub_1AE642D14(void *a1@<X0>, char *a2@<X8>)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v4 = (void *)sub_1AE925E18();
  v5 = objc_msgSend(a1, sel_featureValueForName_, v4);

  if (v5)
  {
    v6 = objc_msgSend(v5, sel_stringValue);
    v7 = sub_1AE925E3C();
    v9 = v8;

    v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v10 = v7 & 0xFFFFFFFFFFFFLL;
    if (v10)
    {
      static EntityTaggingModelUtility.entityTagTypeFromUnlocalizedLabel(label:)(v7, v9, a2);

      swift_bridgeObjectRelease();
      return;
    }
    sub_1AE4F665C();

  }
  *a2 = 1;
}

void sub_1AE642E08(void *a1@<X0>, char *a2@<X8>)
{
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  Swift::String v14;
  char v15;
  char v16;
  Swift::String v17;
  char v18;
  unsigned __int8 v19;
  unsigned __int8 v20;

  v4 = (void *)sub_1AE925E18();
  v5 = objc_msgSend(a1, sel_featureValueForName_, v4);

  if (v5)
  {
    v6 = objc_msgSend(v5, sel_stringValue);

    v5 = (id)sub_1AE925E3C();
    v8 = v7;

  }
  else
  {
    v8 = 0;
  }
  v9 = (void *)sub_1AE4FED30();
  v10 = objc_msgSend(a1, sel_featureValueForName_, v9);

  if (v10)
  {
    v11 = objc_msgSend(v10, sel_stringValue);

    v12 = sub_1AE925E3C();
    v10 = v13;

    if (!v8)
      goto LABEL_9;
  }
  else
  {
    v12 = 0;
    if (!v8)
      goto LABEL_9;
  }
  v14._countAndFlagsBits = (uint64_t)v5;
  v14._object = v8;
  PersonEntityTagType.init(qid:)(v14);
  v15 = v19;
  sub_1AE646140(v19);
  if ((v16 & 1) == 0)
  {
    sub_1AE4F81B8();
    goto LABEL_13;
  }
LABEL_9:
  if (!v10
    || (v17._countAndFlagsBits = v12,
        v17._object = v10,
        PersonEntityTagType.init(qid:)(v17),
        v15 = v20,
        sub_1AE646140(v20),
        (v18 & 1) != 0))
  {
    v15 = 1;
  }
LABEL_13:
  *a2 = v15;
}

uint64_t sub_1AE642FA0(void *a1)
{
  uint64_t v1;
  double v2;
  double v3;
  uint64_t v5;
  void *v6;
  id v7;
  double v8;
  uint64_t v9;
  void *v10;
  id v11;
  double v12;
  uint64_t v13;
  void *v14;
  id v15;
  double v16;
  double v17;
  char v19;
  char v20;

  v5 = static EntityTaggingModelUtility.interactionMechanismToStringMapping.getter();
  v6 = (void *)sub_1AE4FED30();
  v7 = sub_1AE6460E0();

  sub_1AE4F78D8();
  if (v7)
  {
    objc_msgSend(v7, (SEL)(v1 + 3144));
    v3 = v8;

  }
  sub_1AE516164(v5, v3);
  sub_1AE4F6648();
  v9 = static EntityTaggingModelUtility.interactionMechanismToStringMapping.getter();
  v10 = (void *)sub_1AE5065FC();
  v11 = objc_msgSend(a1, sel_featureValueForName_, v10);

  if (v11)
  {
    objc_msgSend(v11, (SEL)(v1 + 3144));
    v2 = v12;

  }
  sub_1AE516164(v9, v2);
  sub_1AE4F665C();
  v13 = static EntityTaggingModelUtility.interactionMechanismToStringMapping.getter();
  v14 = (void *)sub_1AE5065FC();
  v15 = sub_1AE6460E0();

  if (v15)
  {
    objc_msgSend(v15, sel_doubleValue);
    v17 = v16;

  }
  else
  {
    v17 = 0.0;
  }
  sub_1AE516164(v13, v17);
  swift_bridgeObjectRelease();
  sub_1AE4F7630();
  if ((sub_1AE4FDD2C() & 1) != 0 || (sub_1AE6460B0(), (sub_1AE4FDD2C() & 1) != 0))
  {
    sub_1AE4F665C();
    sub_1AE4F81B8();
    return sub_1AE4F6648();
  }
  if ((sub_1AE4FDD2C() & 1) != 0)
  {
    sub_1AE4F6648();
    sub_1AE4F81B8();
    return swift_bridgeObjectRelease();
  }
  sub_1AE6460B0();
  v19 = sub_1AE4FDD2C();
  sub_1AE4F665C();
  if ((v19 & 1) != 0 || (sub_1AE4FDD2C() & 1) != 0)
  {
    sub_1AE4F6648();
    return swift_bridgeObjectRelease();
  }
  sub_1AE6460B0();
  v20 = sub_1AE4FDD2C();
  sub_1AE4F81B8();
  if ((v20 & 1) != 0)
    return swift_bridgeObjectRelease();
  sub_1AE4FDD2C();
  return sub_1AE4F6648();
}

uint64_t sub_1AE6432D8()
{
  return sub_1AE8989D8((uint64_t)&unk_1E5DAC660);
}

uint64_t sub_1AE6432E4(void *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE642D14(a1, (char *)&v16);
  v1 = v16;
  sub_1AE646140(v16);
  if ((v2 & 1) != 0 || (sub_1AE511468(v1, 0), (v3 & 1) != 0))
  {
    sub_1AE62B630();
    return sub_1AE925C98();
  }
  LOBYTE(v16) = v1;
  PersonEntityTagType.allParentTagTypes.getter();
  v6 = v5;
  sub_1AE6432D8();
  v7 = sub_1AE6461C0();
  sub_1AE4F9038();
  v8 = sub_1AE8989D8((uint64_t)&unk_1E5DAC6F0);
  if ((v7 & 1) != 0)
  {
    v9 = sub_1AE6432D8();
LABEL_8:
    v11 = sub_1AE641460(v6, v9, (void (*)(void))sub_1AE643F38, (uint64_t (*)(void))sub_1AE644424);
    sub_1AE7AF358(v11, v8);
    goto LABEL_9;
  }
  v10 = sub_1AE6461C0();
  sub_1AE4F9038();
  if ((v10 & 1) != 0)
  {
    v8 = sub_1AE6432D8();
    v9 = sub_1AE8989D8((uint64_t)&unk_1E5DAC6F0);
    goto LABEL_8;
  }
  sub_1AE511468(v1, 2);
  if ((v14 & 1) == 0)
  {
    v13 = MEMORY[0x1E0DEE9E8];
    goto LABEL_10;
  }
  if (qword_1EED94358 != -1)
    swift_once();
  v15 = swift_bridgeObjectRetain();
  v12 = sub_1AE8989D8(v15);
LABEL_9:
  v13 = v12;
LABEL_10:
  v16 = MEMORY[0x1E0DEE9E0];
  sub_1AE6411E4(0.0, v13, &v16);
  sub_1AE4F9038();
  sub_1AE6411E4(1.0, v6, &v16);
  sub_1AE4F6648();
  return v16;
}

void PersonEntityTagType.allParentTagTypes.getter()
{
  __asm { BR              X9 }
}

uint64_t sub_1AE6434B4()
{
  char v0;
  uint64_t inited;

  sub_1AE501548(&qword_1EED9ABE8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE934250;
  *(_BYTE *)(inited + 32) = v0;
  return sub_1AE8989D8(inited);
}

unint64_t sub_1AE64387C()
{
  unint64_t result;

  result = qword_1EED9ECA8;
  if (!qword_1EED9ECA8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9476C4, &type metadata for EntityTaggingHeuristicModel.ETHeuristicError);
    atomic_store(result, (unint64_t *)&qword_1EED9ECA8);
  }
  return result;
}

uint64_t sub_1AE6438B8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_35:
    sub_1AE4FB730();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_1AE501548(&qword_1ED31AD70);
  result = sub_1AE9268EC();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_35;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_35;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_35;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_1AE926EC8();
    swift_bridgeObjectRetain();
    sub_1AE925F14();
    result = sub_1AE926F10();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_38;
    if (!v5)
      goto LABEL_35;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_35;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_35;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1AE643B40(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_35:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_1AE501548(&qword_1EED9BCE0);
  result = sub_1AE9268EC();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_35;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_35;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_35;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v14);
    sub_1AE926EC8();
    PersonEntityTagType.rawValue.getter();
    sub_1AE925F14();
    swift_bridgeObjectRelease();
    result = sub_1AE926F10();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_BYTE *)(*(_QWORD *)(v9 + 48) + v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_38;
    if (!v5)
      goto LABEL_35;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_35;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_35;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1AE643DC0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result + 56;
  sub_1AE506C24();
  v5 = v4 & v3;
  v7 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  if (!v5)
    goto LABEL_4;
LABEL_3:
  for (v5 &= v5 - 1; ; v5 = (v10 - 1) & v10)
  {
    swift_bridgeObjectRetain();
    sub_1AE561200();
    sub_1AE4F81B8();
    result = sub_1AE4F665C();
    if (v5)
      goto LABEL_3;
LABEL_4:
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v7)
      return swift_release();
    v10 = *(_QWORD *)(v2 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v7)
        return swift_release();
      v10 = *(_QWORD *)(v2 + 8 * v8);
      if (!v10)
      {
        v8 = v9 + 2;
        if (v9 + 2 >= v7)
          return swift_release();
        v10 = *(_QWORD *)(v2 + 8 * v8);
        if (!v10)
        {
          v8 = v9 + 3;
          if (v9 + 3 >= v7)
            return swift_release();
          v10 = *(_QWORD *)(v2 + 8 * v8);
          if (!v10)
            break;
        }
      }
    }
LABEL_19:
    ;
  }
  v11 = v9 + 4;
  if (v11 >= v7)
    return swift_release();
  v10 = *(_QWORD *)(v2 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_19;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v10 = *(_QWORD *)(v2 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_19;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1AE643F38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  if (!v5)
    goto LABEL_6;
LABEL_5:
  for (v5 &= v5 - 1; ; v5 = (v9 - 1) & v9)
  {
    sub_1AE561338();
    if (v5)
      goto LABEL_5;
LABEL_6:
    v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v8 >= v6)
      goto LABEL_24;
    v9 = *(_QWORD *)(v2 + 8 * v8);
    ++v7;
    if (!v9)
    {
      v7 = v8 + 1;
      if (v8 + 1 >= v6)
        goto LABEL_24;
      v9 = *(_QWORD *)(v2 + 8 * v7);
      if (!v9)
      {
        v7 = v8 + 2;
        if (v8 + 2 >= v6)
          goto LABEL_24;
        v9 = *(_QWORD *)(v2 + 8 * v7);
        if (!v9)
        {
          v7 = v8 + 3;
          if (v8 + 3 >= v6)
            goto LABEL_24;
          v9 = *(_QWORD *)(v2 + 8 * v7);
          if (!v9)
            break;
        }
      }
    }
LABEL_21:
    ;
  }
  v10 = v8 + 4;
  if (v10 >= v6)
  {
LABEL_24:
    swift_release();
    return;
  }
  v9 = *(_QWORD *)(v2 + 8 * v10);
  if (v9)
  {
    v7 = v10;
    goto LABEL_21;
  }
  while (1)
  {
    v7 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v7 >= v6)
      goto LABEL_24;
    v9 = *(_QWORD *)(v2 + 8 * v7);
    ++v10;
    if (v9)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_1AE6440AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  BOOL v33;
  uint64_t isStackAllocationSafe;
  char v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    sub_1AE4FB730();
    return MEMORY[0x1E0DEE9E8];
  }
  v4 = *(_QWORD *)(a1 + 56);
  v42 = a1 + 56;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  v40 = ~v5;
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & v4;
  v41 = (unint64_t)(63 - v5) >> 6;
  v8 = (void *)(a2 + 56);
  swift_bridgeObjectRetain();
  v9 = 0;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v11 = v10 | (v9 << 6);
  while (1)
  {
    v20 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v22 = *v20;
    v21 = v20[1];
    sub_1AE926EC8();
    swift_bridgeObjectRetain();
    sub_1AE925F14();
    v23 = sub_1AE926F10();
    v24 = -1 << *(_BYTE *)(v2 + 32);
    v25 = v23 & ~v24;
    sub_1AE6461A0();
    if ((v26 & 1) != 0)
      break;
LABEL_41:
    sub_1AE4F6728();
    if (v7)
      goto LABEL_6;
LABEL_7:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v12 >= v41)
      goto LABEL_53;
    v13 = *(_QWORD *)(v42 + 8 * v12);
    v14 = v9 + 1;
    if (!v13)
    {
      sub_1AE6461D8();
      if (v15 == v16)
        goto LABEL_53;
      sub_1AE6461CC();
      if (!v13)
      {
        sub_1AE6461D8();
        if (v15 == v16)
          goto LABEL_53;
        sub_1AE6461CC();
        if (!v13)
        {
          sub_1AE6461D8();
          if (v15 == v16)
            goto LABEL_53;
          sub_1AE6461CC();
          if (!v13)
          {
            v18 = v17 + 4;
            if (v18 >= v41)
            {
LABEL_53:
              sub_1AE592EFC();
              return v2;
            }
            v13 = *(_QWORD *)(v42 + 8 * v18);
            if (!v13)
            {
              while (!__OFADD__(v18, 1))
              {
                sub_1AE6461D8();
                if (v15 == v16)
                  goto LABEL_53;
                sub_1AE6461CC();
                v18 = v19 + 1;
                if (v13)
                  goto LABEL_26;
              }
LABEL_55:
              __break(1u);
            }
            v14 = v18;
          }
        }
      }
    }
LABEL_26:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
    v9 = v14;
  }
  v27 = *(_QWORD *)(v2 + 48);
  v28 = (_QWORD *)(v27 + 16 * v25);
  v29 = *v28 == v22 && v28[1] == v21;
  if (v29 || (sub_1AE646110() & 1) != 0)
  {
    sub_1AE4F6728();
    sub_1AE646120();
  }
  else
  {
    v30 = ~v24;
    do
    {
      v25 = (v25 + 1) & v30;
      sub_1AE6461A0();
      if ((v31 & 1) == 0)
        goto LABEL_41;
      v32 = (_QWORD *)(v27 + 16 * v25);
      v33 = *v32 == v22 && v32[1] == v21;
    }
    while (!v33 && (sub_1AE646110() & 1) == 0);
    sub_1AE646120();
    isStackAllocationSafe = sub_1AE4F6728();
  }
  v35 = *(_BYTE *)(v2 + 32);
  v36 = 8 * ((unint64_t)((1 << v35) + 63) >> 6);
  if ((v35 & 0x3Fu) >= 0xE)
  {
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (!(_DWORD)isStackAllocationSafe)
    {
      v38 = (void *)swift_slowAlloc();
      sub_1AE646168(v38);
      sub_1AE5075A0();
      sub_1AE4FB730();
      if (v2 == -56)
      {
        sub_1AE506984();
        sub_1AE646100();
      }
LABEL_57:

      sub_1AE646100();
    }
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  sub_1AE646168((char *)&v40 - ((v36 + 15) & 0x3FFFFFFFFFFFFFF0));
  v37 = sub_1AE5075A0();
  sub_1AE4FB730();
  if (v2 != -56)
  {
    swift_willThrow();

    __break(1u);
    goto LABEL_57;
  }
  sub_1AE506984();
  return v37;
}

uint64_t sub_1AE644424(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = (_QWORD *)(a1 + 56);
    v5 = -1;
    v6 = -1 << *(_BYTE *)(a1 + 32);
    if (-v6 < 64)
      v5 = ~(-1 << -(char)v6);
    v7 = v5 & *(_QWORD *)(a1 + 56);
    v8 = (unint64_t)(63 - v6) >> 6;
    swift_bridgeObjectRetain();
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      goto LABEL_21;
    }
    if (v8 > 1)
    {
      v10 = v4[1];
      v11 = 1;
      if (v10)
        goto LABEL_20;
      v11 = 2;
      if (v8 > 2)
      {
        v10 = v4[2];
        if (v10)
          goto LABEL_20;
        v11 = 3;
        if (v8 > 3)
        {
          v10 = v4[3];
          if (v10)
            goto LABEL_20;
          v11 = 4;
          if (v8 > 4)
          {
            v10 = v4[4];
            if (!v10)
            {
              v12 = 5;
              if (v8 > 5)
              {
                v10 = v4[5];
                if (v10)
                {
                  v11 = 5;
                  goto LABEL_20;
                }
                while (1)
                {
                  v11 = v12 + 1;
                  if (__OFADD__(v12, 1))
                    __break(1u);
                  if (v11 >= v8)
                    break;
                  v10 = v4[v11];
                  ++v12;
                  if (v10)
                    goto LABEL_20;
                }
              }
              goto LABEL_24;
            }
LABEL_20:
            v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_21:
            v13 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v9);
            sub_1AE926EC8();
            __asm { BR              X8 }
          }
        }
      }
    }
LABEL_24:
    sub_1AE592EFC();
    return v2;
  }
  swift_release();
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1AE645120(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  int64_t v36;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;

  v7 = *(_QWORD *)(a3 + 16);
  v39 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v40 = a3 + 56;
  while (2)
  {
    v38 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_15;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_48;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_46;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_46;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_46;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_14;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_46;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_46;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v36 = v9 + 6;
                while (v36 < v14)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    v13 = v36 - 1;
                    goto LABEL_14;
                  }
                }
                v15 = v14 - 1;
LABEL_46:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_1AE6438B8(v39, a2, v38, a3);
              }
              goto LABEL_14;
            }
          }
          v13 = v18;
        }
LABEL_14:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_15:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1AE926EC8();
        swift_bridgeObjectRetain();
        sub_1AE925F14();
        v22 = sub_1AE926F10();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v40 + 8 * (v24 >> 6))) == 0)
          goto LABEL_32;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_1AE926D60() & 1) != 0)
          break;
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1AE926D60() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_22;
          }
        }
LABEL_32:
        result = swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
LABEL_22:
      v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_48:
      __break(1u);
      return result;
    }
    if (v38 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1AE645410(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v20;

  v6 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v20 = v6 - 1;
  v7 = a5[3];
  v8 = a5[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v7 << 6);
    goto LABEL_13;
  }
  v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    JUMPOUT(0x1AE645E50);
  }
  v12 = (unint64_t)(a5[2] + 64) >> 6;
  if (v11 < v12)
  {
    v13 = a5[1];
    v14 = *(_QWORD *)(v13 + 8 * v11);
    if (v14)
      goto LABEL_12;
    v15 = v7 + 2;
    if (v7 + 2 >= v12)
    {
      ++v7;
    }
    else
    {
      v14 = *(_QWORD *)(v13 + 8 * v15);
      if (v14)
      {
LABEL_8:
        v11 = v15;
        goto LABEL_12;
      }
      if (v7 + 3 >= v12)
        goto LABEL_23;
      v14 = *(_QWORD *)(v13 + 8 * (v7 + 3));
      if (v14)
      {
        v11 = v7 + 3;
        goto LABEL_12;
      }
      v15 = v7 + 4;
      if (v7 + 4 >= v12)
      {
        v7 += 3;
        goto LABEL_26;
      }
      v14 = *(_QWORD *)(v13 + 8 * v15);
      if (v14)
        goto LABEL_8;
      v11 = v7 + 5;
      if (v7 + 5 >= v12)
      {
LABEL_23:
        v7 = v15;
      }
      else
      {
        v14 = *(_QWORD *)(v13 + 8 * v11);
        if (v14)
          goto LABEL_12;
        v17 = v7 + 6;
        while (v17 < v12)
        {
          v14 = *(_QWORD *)(v13 + 8 * v17++);
          if (v14)
          {
            v11 = v17 - 1;
LABEL_12:
            v9 = (v14 - 1) & v14;
            v10 = __clz(__rbit64(v14)) + (v11 << 6);
            v7 = v11;
LABEL_13:
            v16 = *(unsigned __int8 *)(*(_QWORD *)(*a5 + 48) + v10);
            a5[3] = v7;
            a5[4] = v9;
            sub_1AE926EC8();
            __asm { BR              X8 }
          }
        }
        v7 = v12 - 1;
      }
    }
  }
LABEL_26:
  a5[3] = v7;
  a5[4] = 0;
  swift_retain();
  return sub_1AE643B40(a1, a2, v20, a3);
}

uint64_t storeEnumTagSinglePayload for EntityTaggingHeuristicModel.ETHeuristicError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE645FFC + 4 * byte_1AE94760E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE64601C + 4 * byte_1AE947613[v4]))();
}

_BYTE *sub_1AE645FFC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE64601C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE646024(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE64602C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE646034(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE64603C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EntityTaggingHeuristicModel.ETHeuristicError()
{
  return &type metadata for EntityTaggingHeuristicModel.ETHeuristicError;
}

unint64_t sub_1AE64605C()
{
  unint64_t result;

  result = qword_1EED9ECB0;
  if (!qword_1EED9ECB0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94769C, &type metadata for EntityTaggingHeuristicModel.ETHeuristicError);
    atomic_store(result, (unint64_t *)&qword_1EED9ECB0);
  }
  return result;
}

double sub_1AE646098(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(*(_QWORD *)(v1 + 56) + 8 * a1);
}

void sub_1AE6460A8()
{
  void *v0;

}

double sub_1AE6460C4()
{
  void *v0;
  double result;

  return result;
}

id sub_1AE6460CC(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, (SEL)(v2 + 1480), a1);
}

id sub_1AE6460E0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, (SEL)(v2 + 1480), v1);
}

uint64_t sub_1AE6460F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE551D2C(v1, a1);
}

void sub_1AE646100()
{
  JUMPOUT(0x1AF454C78);
}

uint64_t sub_1AE646110()
{
  return sub_1AE926D60();
}

void sub_1AE646120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 - 224);
  *(_QWORD *)(v3 - 136) = v0;
  *(_QWORD *)(v3 - 128) = v4;
  *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 240);
  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = v1;
}

double sub_1AE646138()
{
  void *v0;
  double result;

  return result;
}

void sub_1AE646140(uint64_t a1)
{
  sub_1AE511468(a1, 1);
}

void sub_1AE646148()
{
  void *v0;

}

IntelligencePlatform::AgeDifferenceCategory_optional sub_1AE646150()
{
  double v0;

  return AgeDifferenceCategory.init(rawValue:)((uint64_t)v0);
}

IntelligencePlatform::AgeDifferenceCategory_optional sub_1AE64615C()
{
  double v0;

  return AgeDifferenceCategory.init(rawValue:)((uint64_t)v0);
}

void *sub_1AE646168(void *a1)
{
  const void *v1;
  size_t v2;

  return memcpy(a1, v1, v2);
}

id sub_1AE646174(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

void sub_1AE646180()
{
  void *v0;

}

void sub_1AE646188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  sub_1AE511468(a13, 21);
}

uint64_t sub_1AE6461C0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE551D2C(v1, v0);
}

double sub_1AE6461E4()
{
  void *v0;
  double result;

  return result;
}

void sub_1AE6461EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1AE521D24();
    v3 = sub_1AE56CA8C(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      v5 = v3;
      if (v3 < 1 << *(_BYTE *)(a1 + 32))
      {
        v6 = a1 + 64;
        while ((*(_QWORD *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v4 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v14 = v1;
          v15 = v4;
          v7 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v5);
          v8 = PersonEntityTagType.rawValue.getter();
          v10 = v9;
          v11 = *(_QWORD *)(v16 + 16);
          if (v11 >= *(_QWORD *)(v16 + 24) >> 1)
            sub_1AE521D24();
          *(_QWORD *)(v16 + 16) = v11 + 1;
          v12 = (_QWORD *)(v16 + 24 * v11);
          v12[4] = v8;
          v12[5] = v10;
          v12[6] = v7;
          if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v6 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
            goto LABEL_20;
          if (v15 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v13 = sub_1AE926850();
          v1 = v14 - 1;
          if (v14 == 1)
            return;
          v5 = v13;
          if ((v13 & 0x8000000000000000) == 0)
          {
            v4 = *(_DWORD *)(a1 + 36);
            if (v13 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_1AE6463C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  _QWORD v12[5];

  sub_1AE64A300(a1, v12);
  v1 = v12[0];
  v2 = v12[1];
  v3 = v12[3];
  v4 = v12[4];
  v5 = (unint64_t)(v12[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (v4)
  {
    v6 = __clz(__rbit64(v4)) | (v3 << 6);
    goto LABEL_19;
  }
  v7 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    JUMPOUT(0x1AE6467A0);
  }
  if (v7 < v5)
  {
    v8 = *(_QWORD *)(v2 + 8 * v7);
    v9 = v3 + 1;
    if (v8)
      goto LABEL_18;
    v9 = v3 + 2;
    if (v3 + 2 >= v5)
      goto LABEL_20;
    v8 = *(_QWORD *)(v2 + 8 * v9);
    if (v8)
      goto LABEL_18;
    v9 = v3 + 3;
    if (v3 + 3 >= v5)
      goto LABEL_20;
    v8 = *(_QWORD *)(v2 + 8 * v9);
    if (v8)
      goto LABEL_18;
    v9 = v3 + 4;
    if (v3 + 4 >= v5)
      goto LABEL_20;
    v8 = *(_QWORD *)(v2 + 8 * v9);
    if (v8)
    {
LABEL_18:
      v6 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_19:
      __asm { BR              X9 }
    }
    v9 = v3 + 5;
    if (v3 + 5 < v5)
    {
      v8 = *(_QWORD *)(v2 + 8 * v9);
      if (!v8)
      {
        v10 = v3 + 6;
        do
        {
          if (v10 >= v5)
            goto LABEL_20;
          v8 = *(_QWORD *)(v2 + 8 * v10++);
        }
        while (!v8);
        v9 = v10 - 1;
      }
      goto LABEL_18;
    }
  }
LABEL_20:
  swift_release();
  return 0;
}

unint64_t sub_1AE646818()
{
  return 0xD000000000000027;
}

uint64_t sub_1AE646834(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1AE501548(&qword_1EED9ED58);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F90C8();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE64A518();
  sub_1AE926F4C();
  return sub_1AE4FDD44(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
}

uint64_t sub_1AE6468E0(uint64_t a1)
{
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
}

uint64_t sub_1AE646904()
{
  sub_1AE64A518();
  return sub_1AE926F94();
}

uint64_t sub_1AE64692C()
{
  sub_1AE64A518();
  return sub_1AE926FA0();
}

uint64_t sub_1AE646954(uint64_t a1)
{
  return sub_1AE6468E0(a1);
}

uint64_t sub_1AE646968(_QWORD *a1)
{
  return sub_1AE646834(a1);
}

uint64_t sub_1AE64697C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  swift_defaultActor_initialize();
  *(_QWORD *)(v1 + 112) = 0;
  *(_BYTE *)(v1 + 120) = 1;
  return swift_task_switch();
}

uint64_t sub_1AE6469C8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1AE646A00(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 200) = a3;
  *(_QWORD *)(v4 + 208) = v3;
  *(_QWORD *)(v4 + 192) = a1;
  *(_OWORD *)(v4 + 216) = *a2;
  return sub_1AE4FD0B8();
}

void sub_1AE646A20()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 216);
  swift_unknownObjectRetain();
  v2 = sub_1AE4F66CC();
  *(_BYTE *)(v0 + 309) = sub_1AE6463C4(v2) & 1;
  sub_1AE4F9038();
  v3 = sub_1AE6432E4(v1);
  if (qword_1EED94358 != -1)
    swift_once();
  v4 = qword_1EEE11C50;
  *(_QWORD *)(v0 + 232) = qword_1EEE11C50;
  v5 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v0 + 240) = v5;
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = 0;
    do
    {
      *(_QWORD *)(v0 + 248) = v3;
      *(_QWORD *)(v0 + 256) = v6;
      v7 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 232) + v6 + 32);
      if (!*(_QWORD *)(v3 + 16) || (sub_1AE4FB75C(), sub_1AE64A720(), v9 = v8, sub_1AE4F6648(), (v9 & 1) == 0))
        __asm { BR              X8 }
      sub_1AE64A824();
    }
    while (!v10);
    swift_bridgeObjectRelease();
  }
  v11 = sub_1AE4FB75C();
  sub_1AE64A9A8(v11);
  sub_1AE4F6648();
  sub_1AE64AA54();
  sub_1AE64AA70();
  sub_1AE4FC718();
  sub_1AE4F9038();
  sub_1AE506C84();
  sub_1AE4F6648();
  sub_1AE5094FC();
  sub_1AE64A734();
  __asm { BR              X0 }
}

uint64_t sub_1AE647508()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1AE64A8C4();
  sub_1AE5062E4(v2);
  *(_QWORD *)(v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1AE64A954();
    sub_1AE4F6648();
    sub_1AE4F9038();
  }
  else
  {
    swift_unknownObjectRelease();
    sub_1AE4F6648();
  }
  return sub_1AE4F77A8();
}

uint64_t sub_1AE64757C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  _QWORD *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t (*v67)(void);

  sub_1AE64A8FC();
  v45 = v42[31];
  v46 = v42[14];
  sub_1AE64AAD8((uint64_t)(v42 + 14));
  v42[18] = v45;
  sub_1AE5373F8();
  sub_1AE50A46C();
  if (v47)
  {
    __break(1u);
    JUMPOUT(0x1AE647E98);
  }
  sub_1AE64AAC0();
  sub_1AE501548(&qword_1EED94750);
  if ((sub_1AE64A9B0() & 1) != 0)
  {
    sub_1AE5373F8();
    sub_1AE64A764();
    if (!v49)
      return sub_1AE507E80();
    v43 = v48;
  }
  v51 = v42[18];
  if ((v44 & 1) != 0)
  {
    *(_QWORD *)(*(_QWORD *)(v51 + 56) + 8 * v43) = v46;
  }
  else
  {
    sub_1AE64A7CC();
    *(_BYTE *)(v52 + v43) = 22;
    *(_QWORD *)(*(_QWORD *)(v51 + 56) + 8 * v43) = v46;
    sub_1AE64AA64();
    if (v47)
    {
      __break(1u);
      JUMPOUT(0x1AE647EA4);
    }
    *(_QWORD *)(v51 + 16) = v53;
  }
  sub_1AE4FDCF0();
  sub_1AE4F828C();
  while (1)
  {
    sub_1AE64A824();
    if (v49)
      break;
    v42[31] = v51;
    v42[32] = v62;
    v63 = *(unsigned __int8 *)(v42[29] + v62 + 32);
    if (*(_QWORD *)(v51 + 16))
    {
      sub_1AE4F6708();
      sub_1AE64A9BC();
      v65 = v64;
      v54 = sub_1AE4F76D8();
      if ((v65 & 1) != 0)
        continue;
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, _QWORD *, char *, char *, char *, char *, char *, char *, uint64_t, char *, char *, char *, char *, _QWORD *, _QWORD *, _QWORD *, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1AE64770C + *((int *)qword_1AE647EF8 + v63)))(v54, v55, v56, v57, v58, v59, v60, v61, a9, a10, a11, (char *)v42 + 305, v42 + 38, (char *)v42 + 299, (char *)v42 + 298, (char *)v42 + 302, (char *)v42 + 300, (char *)v42 + 303, (char *)v42 + 297,
             a20,
             (char *)v42 + 301,
             (char *)v42 + 308,
             (char *)v42 + 307,
             (char *)v42 + 306,
             v42 + 37,
             v42 + 8,
             v42 + 2,
             a28,
             v42 + 23,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42);
  }
  sub_1AE64AAB4();
  v66 = sub_1AE4F6708();
  sub_1AE64A9A8(v66);
  sub_1AE4F76D8();
  sub_1AE64AA54();
  sub_1AE64AA70();
  swift_unknownObjectRelease();
  sub_1AE4F9038();
  sub_1AE506C84();
  sub_1AE4F76D8();
  v67 = (uint64_t (*)(void))sub_1AE5094FC();
  return sub_1AE507A28(v67);
}

uint64_t sub_1AE647F70()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1AE64A8C4();
  sub_1AE5062E4(v2);
  *(_QWORD *)(v1 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1AE64A954();
    sub_1AE4F6648();
    sub_1AE4F9038();
  }
  else
  {
    swift_unknownObjectRelease();
    sub_1AE4F6648();
  }
  return sub_1AE4F77A8();
}

uint64_t sub_1AE647FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  _QWORD *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t (*v67)(void);

  sub_1AE64A8FC();
  v45 = v42[31];
  v46 = v42[16];
  sub_1AE64AAD8((uint64_t)(v42 + 16));
  v42[20] = v45;
  sub_1AE5373F8();
  sub_1AE50A46C();
  if (v47)
  {
    __break(1u);
    JUMPOUT(0x1AE6488B8);
  }
  sub_1AE64AAC0();
  sub_1AE501548(&qword_1EED94750);
  if ((sub_1AE64A9B0() & 1) != 0)
  {
    sub_1AE5373F8();
    sub_1AE64A764();
    if (!v49)
      return sub_1AE507E80();
    v43 = v48;
  }
  v51 = v42[20];
  if ((v44 & 1) != 0)
  {
    *(_QWORD *)(*(_QWORD *)(v51 + 56) + 8 * v43) = v46;
  }
  else
  {
    sub_1AE64A7F0();
    *(_BYTE *)(v52 + v43) = 4;
    *(_QWORD *)(*(_QWORD *)(v51 + 56) + 8 * v43) = v46;
    sub_1AE505B2C();
    if (v47)
    {
      __break(1u);
      JUMPOUT(0x1AE6488C4);
    }
    *(_QWORD *)(v51 + 16) = v53;
  }
  sub_1AE4FDCF0();
  sub_1AE4F828C();
  while (1)
  {
    sub_1AE64A824();
    if (v49)
      break;
    v42[31] = v51;
    v42[32] = v62;
    v63 = *(unsigned __int8 *)(v42[29] + v62 + 32);
    if (*(_QWORD *)(v51 + 16))
    {
      sub_1AE4FB75C();
      sub_1AE64A720();
      v65 = v64;
      v54 = sub_1AE4F6648();
      if ((v65 & 1) != 0)
        continue;
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, _QWORD *, char *, char *, char *, char *, char *, char *, uint64_t, char *, char *, char *, char *, _QWORD *, _QWORD *, _QWORD *, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_1AE648178 + *((int *)qword_1AE648918 + v63)))(v54, v55, v56, v57, v58, v59, v60, v61, a9, a10, a11, (char *)v42 + 305, v42 + 38, (char *)v42 + 299, (char *)v42 + 298, (char *)v42 + 302, (char *)v42 + 300, (char *)v42 + 303, (char *)v42 + 297,
             a20,
             (char *)v42 + 301,
             (char *)v42 + 308,
             (char *)v42 + 307,
             (char *)v42 + 306,
             v42 + 37,
             v42 + 2,
             v42 + 8,
             a28,
             v42 + 23,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42);
  }
  sub_1AE64AAB4();
  v66 = sub_1AE4FB75C();
  sub_1AE64A9A8(v66);
  sub_1AE4F6648();
  sub_1AE64AA54();
  sub_1AE64AA70();
  sub_1AE4FC718();
  sub_1AE4F9038();
  sub_1AE506C84();
  sub_1AE4F6648();
  v67 = (uint64_t (*)(void))sub_1AE5094FC();
  return sub_1AE507A28(v67);
}

uint64_t sub_1AE648990()
{
  uint64_t v0;

  sub_1AE64A868();
  swift_bridgeObjectRelease();
  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE6489C0()
{
  uint64_t v0;

  sub_1AE64A868();
  swift_bridgeObjectRelease();
  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE6489F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v7 + 57) = a6;
  *(_QWORD *)(v7 + 120) = a5;
  *(_QWORD *)(v7 + 128) = v6;
  *(_QWORD *)(v7 + 104) = a3;
  *(_QWORD *)(v7 + 112) = a4;
  *(_QWORD *)(v7 + 88) = a1;
  *(_QWORD *)(v7 + 96) = a2;
  return swift_task_switch();
}

uint64_t sub_1AE648A14()
{
  uint64_t v0;
  char v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v10;

  v1 = *(_BYTE *)(v0 + 57);
  sub_1AE75A414();
  if ((v1 & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 128);
    v2 = (uint64_t *)(v3 + 24);
  }
  else
  {
    v2 = (uint64_t *)(v0 + 120);
    v3 = *(_QWORD *)(v0 + 128);
  }
  v4 = *v2;
  v6 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 16);
  swift_unownedRetainStrong();
  *(_QWORD *)(v0 + 16) = v6;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 40) = 0x80000001AE981F00;
  *(_QWORD *)(v0 + 48) = v4;
  *(_BYTE *)(v0 + 56) = 0;
  sub_1AE75A404((_QWORD *)(v0 + 80));
  v7 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 144) = v7;
  v10 = (char *)&dword_1EED9ED08 + dword_1EED9ED08;
  swift_unknownObjectRetain();
  sub_1AE4F6708();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v8;
  *v8 = v0;
  v8[1] = sub_1AE648B34;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v10)(v0 + 64, *(_QWORD *)(v0 + 112), v0 + 16, v7);
}

uint64_t sub_1AE648B34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  swift_release();
  swift_unknownObjectRelease();
  sub_1AE4F76D8();
  swift_bridgeObjectRelease();
  sub_1AE4F6648();
  return swift_task_switch();
}

uint64_t sub_1AE648BDC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)v0[11];
  v2 = v0[9];
  *v1 = v0[8];
  v1[1] = v2;
  return sub_1AE64A838();
}

uint64_t sub_1AE648BF4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AE648C00()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1AE648C1C(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1AE4FC490;
  return sub_1AE646A00(a1, a2, a3);
}

uint64_t sub_1AE648C88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  type metadata accessor for EntityTaggingHeuristicsInferenceServiceDefinition.Runner();
  swift_allocObject();
  swift_retain();
  v4 = (_QWORD *)sub_1AE4FD1D8();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1AE5CF5F4;
  return sub_1AE64697C(a2);
}

unint64_t sub_1AE648CFC()
{
  sub_1AE646818();
  return 0xD000000000000027;
}

uint64_t sub_1AE648D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;

  *(_QWORD *)(v3 + 16) = a1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_1AE648D68;
  return sub_1AE648C88((uint64_t)v5, a3);
}

uint64_t sub_1AE648D68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  sub_1AE64A8C4();
  sub_1AE5062E4(v5);
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v2 + 16) = a1;
  return sub_1AE4FC8D4(*(uint64_t (**)(void))(v3 + 8));
}

unint64_t static EntityTaggingHeuristicsInferenceServiceRunEvent.type.getter()
{
  return 0xD000000000000044;
}

uint64_t EntityTaggingHeuristicsInferenceServiceRunEvent.entityTagsDictionary.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE648DD0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001AE981E70)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1AE648E54()
{
  return 0xD000000000000014;
}

uint64_t sub_1AE648E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE648DD0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE648E9C()
{
  sub_1AE648FE8();
  return sub_1AE926F94();
}

uint64_t sub_1AE648EC4()
{
  sub_1AE648FE8();
  return sub_1AE926FA0();
}

void EntityTaggingHeuristicsInferenceServiceRunEvent.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1AE501548(&qword_1EED9ECB8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F90C8();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE648FE8();
  sub_1AE926F4C();
  sub_1AE501548(&qword_1EED9CFE0);
  sub_1AE5CFCD4(&qword_1EED9CFE8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB080], MEMORY[0x1E0DEA0B8]);
  sub_1AE926CC4();
  sub_1AE4FDD44(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1AE4F667C();
}

unint64_t sub_1AE648FE8()
{
  unint64_t result;

  result = qword_1EED9ECC0;
  if (!qword_1EED9ECC0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9479B0, &type metadata for EntityTaggingHeuristicsInferenceServiceRunEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9ECC0);
  }
  return result;
}

void EntityTaggingHeuristicsInferenceServiceRunEvent.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v9[2];

  v5 = sub_1AE501548(&qword_1EED9ECC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE648FE8();
  sub_1AE926F34();
  if (!v2)
  {
    sub_1AE501548(&qword_1EED9CFE0);
    sub_1AE5CFCD4(&qword_1EED9CFF8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEA0D8]);
    sub_1AE926BEC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9[1];
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  sub_1AE4F667C();
}

unint64_t sub_1AE649158()
{
  static EntityTaggingHeuristicsInferenceServiceRunEvent.type.getter();
  return 0xD000000000000044;
}

uint64_t sub_1AE649174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE5D00D8(a1, a2, a3, (uint64_t (*)(void))sub_1AE649188, (uint64_t (*)(void))sub_1AE6491C4);
}

unint64_t sub_1AE649188()
{
  unint64_t result;

  result = qword_1EED94628;
  if (!qword_1EED94628)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityTaggingHeuristicsInferenceServiceRunEvent, &type metadata for EntityTaggingHeuristicsInferenceServiceRunEvent);
    atomic_store(result, (unint64_t *)&qword_1EED94628);
  }
  return result;
}

unint64_t sub_1AE6491C4()
{
  unint64_t result;

  result = qword_1EED94620;
  if (!qword_1EED94620)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityTaggingHeuristicsInferenceServiceRunEvent, &type metadata for EntityTaggingHeuristicsInferenceServiceRunEvent);
    atomic_store(result, (unint64_t *)&qword_1EED94620);
  }
  return result;
}

void sub_1AE649200(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  EntityTaggingHeuristicsInferenceServiceRunEvent.init(from:)(a1, a2);
}

void sub_1AE649214(_QWORD *a1)
{
  EntityTaggingHeuristicsInferenceServiceRunEvent.encode(to:)(a1);
}

uint64_t type metadata accessor for EntityTaggingHeuristicsInferenceServiceDefinition.Runner()
{
  return objc_opt_self();
}

void type metadata accessor for EntityTaggingHeuristicsInferenceServiceRunEvent()
{
  sub_1AE4F67D4();
}

void type metadata accessor for EntityTaggingHeuristicsInferenceServiceDefinition()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for EntityTaggingHeuristicsInferenceServiceRunEvent.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE6492A0 + 4 * byte_1AE947710[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE6492C0 + 4 * byte_1AE947715[v4]))();
}

_BYTE *sub_1AE6492A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE6492C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE6492C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE6492D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE6492D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE6492E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EntityTaggingHeuristicsInferenceServiceRunEvent.CodingKeys()
{
  return &type metadata for EntityTaggingHeuristicsInferenceServiceRunEvent.CodingKeys;
}

unint64_t sub_1AE649300()
{
  unint64_t result;

  result = qword_1EED9ECD0[0];
  if (!qword_1EED9ECD0[0])
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9478A0, &type metadata for EntityTaggingHeuristicsInferenceServiceRunEvent.CodingKeys);
    atomic_store(result, qword_1EED9ECD0);
  }
  return result;
}

unint64_t sub_1AE649340()
{
  unint64_t result;

  result = qword_1EED94668;
  if (!qword_1EED94668)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9478E4, &unk_1E5DC7300);
    atomic_store(result, (unint64_t *)&qword_1EED94668);
  }
  return result;
}

unint64_t sub_1AE649380()
{
  unint64_t result;

  result = qword_1EED94428;
  if (!qword_1EED94428)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityTaggingInferenceInterface, &type metadata for EntityTaggingInferenceInterface);
    atomic_store(result, (unint64_t *)&qword_1EED94428);
  }
  return result;
}

unint64_t sub_1AE6493C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EED94670;
  if (!qword_1EED94670)
  {
    v1 = type metadata accessor for EntityTaggingHeuristicsInferenceServiceDefinition.Runner();
    result = MEMORY[0x1AF454B70](&unk_1AE947950, v1);
    atomic_store(result, (unint64_t *)&qword_1EED94670);
  }
  return result;
}

uint64_t sub_1AE6493FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE5D00D8(a1, a2, a3, (uint64_t (*)(void))sub_1AE649410, (uint64_t (*)(void))sub_1AE64944C);
}

unint64_t sub_1AE649410()
{
  unint64_t result;

  result = qword_1EED94660;
  if (!qword_1EED94660)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947928, &unk_1E5DC7300);
    atomic_store(result, (unint64_t *)&qword_1EED94660);
  }
  return result;
}

unint64_t sub_1AE64944C()
{
  unint64_t result;

  result = qword_1EED94658;
  if (!qword_1EED94658)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947900, &unk_1E5DC7300);
    atomic_store(result, (unint64_t *)&qword_1EED94658);
  }
  return result;
}

uint64_t sub_1AE649488()
{
  return sub_1AE5BA550(&qword_1EED94630, &qword_1EED94638, (uint64_t)&protocol conformance descriptor for InferenceServiceRunnerExtendedResponseWithEvent<A, B>);
}

unint64_t sub_1AE6494B4(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE6493C0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE6494DC()
{
  unint64_t result;

  result = qword_1EED9ECE8;
  if (!qword_1EED9ECE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947810, &type metadata for EntityTaggingHeuristicsInferenceServiceRunEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9ECE8);
  }
  return result;
}

unint64_t sub_1AE64951C()
{
  unint64_t result;

  result = qword_1EED9ECF0;
  if (!qword_1EED9ECF0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947838, &type metadata for EntityTaggingHeuristicsInferenceServiceRunEvent.CodingKeys);
    atomic_store(result, &qword_1EED9ECF0);
  }
  return result;
}

uint64_t sub_1AE649558@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t result;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  id v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v18[0] = a1;
  v4 = a1;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    *(_WORD *)a2 = v14 & 1;
LABEL_5:
    *(_BYTE *)(a2 + 33) = 0;
    return result;
  }
  v18[0] = a1;
  v6 = a1;
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    *(_WORD *)a2 = 256;
    goto LABEL_5;
  }
  v17 = a1;
  v7 = a1;
  sub_1AE501548(&qword_1EED9ED28);
  if (swift_dynamicCast())
  {
    sub_1AE50AF58(&v14, (uint64_t)v18);
    v8 = v19;
    v9 = v20;
    sub_1AE4F9858(v18, v19);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v9 + 32))(&v14, v8, v9);
    v10 = v16;
    v11 = v15;
    *(_OWORD *)a2 = v14;
    *(_OWORD *)(a2 + 16) = v11;
    *(_BYTE *)(a2 + 32) = v10;
    *(_BYTE *)(a2 + 33) = 1;
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v18);
  }
  else
  {
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
    sub_1AE64A2BC((uint64_t)&v14);
    v18[0] = a1;
    v12 = a1;
    result = sub_1AE925EA8();
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v13;
    *(_BYTE *)(a2 + 33) = 2;
  }
  return result;
}

uint64_t sub_1AE6496D4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  if (qword_1ED30EF48 != -1)
    swift_once();
  *(_QWORD *)(v4 + 16) = qword_1EED93F38;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v9;
  *v9 = v4;
  v9[1] = sub_1AE649780;
  return sub_1AE649858(a1, a2, a3, a4);
}

uint64_t sub_1AE649780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_1AE505574();
  sub_1AE5062E4(v3);
  *(_QWORD *)(v0 + 32) = v1;
  swift_task_dealloc();
  if (v1)
    return sub_1AE4FD190();
  else
    return sub_1AE4FC8E4(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1AE6497D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 32);
  sub_1AE501548(&qword_1EED9ED18);
  sub_1AE5BA550(&qword_1EED9ED20, &qword_1EED9ED18, (uint64_t)&protocol conformance descriptor for InferenceMessageResponseError<A>);
  sub_1AE4F6778();
  sub_1AE649558(v1, v2);
  swift_willThrow();

  return sub_1AE4FC8D4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE649858(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)(v5 + 128) = a4;
  *(_QWORD *)(v5 + 136) = v4;
  *(_QWORD *)(v5 + 112) = a1;
  *(_QWORD *)(v5 + 120) = a2;
  v6 = a3[1];
  *(_OWORD *)(v5 + 64) = *a3;
  *(_OWORD *)(v5 + 80) = v6;
  *(_OWORD *)(v5 + 89) = *(_OWORD *)((char *)a3 + 25);
  if (qword_1ED30EF48 != -1)
    swift_once();
  *(_QWORD *)(v5 + 144) = qword_1EED93F38;
  return swift_task_switch();
}

uint64_t sub_1AE6498D4()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v8;
  _QWORD *v9;
  __int128 v11[3];
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(__int128 **)(v0 + 120);
  v3 = v2[1];
  v11[0] = *v2;
  v11[1] = v3;
  v11[2] = v2[2];
  v12 = v1;
  sub_1AE751F8C(v11, &v12);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v7;
  v7[2] = v4;
  v7[3] = v0 + 64;
  v7[4] = v6;
  v7[5] = v5;
  *(_OWORD *)(v0 + 41) = *(_OWORD *)(v0 + 89);
  v8 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 32) = v8;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v9;
  *v9 = v0;
  v9[1] = sub_1AE6499D8;
  return sub_1AE649EEC(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), v0 + 16, (uint64_t)&unk_1EED9ED40, (uint64_t)v7);
}

uint64_t sub_1AE6499D8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1AE505574();
  sub_1AE5062E4(v2);
  *(_QWORD *)(v0 + 168) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_task_dealloc();
  return sub_1AE4FD190();
}

uint64_t sub_1AE649A38()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE649A64(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)(v6 + 232) = a5;
  *(_QWORD *)(v6 + 240) = a6;
  *(_QWORD *)(v6 + 216) = a2;
  *(_QWORD *)(v6 + 224) = a3;
  *(_QWORD *)(v6 + 208) = a1;
  v7 = a4[1];
  *(_OWORD *)(v6 + 16) = *a4;
  *(_OWORD *)(v6 + 32) = v7;
  *(_OWORD *)(v6 + 41) = *(_OWORD *)((char *)a4 + 25);
  if (qword_1ED30EF48 != -1)
    swift_once();
  *(_QWORD *)(v6 + 248) = qword_1EED93F38;
  return swift_task_switch();
}

uint64_t sub_1AE649AE4()
{
  return sub_1AE4FD0B8();
}

uint64_t sub_1AE649AF4()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  _OWORD v14[3];

  v1 = *(_OWORD **)(v0 + 232);
  v2 = v1[1];
  v14[0] = *v1;
  v14[1] = v2;
  v14[2] = v1[2];
  sub_1AE7517D0(v14);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 224);
  *(_QWORD *)(v0 + 128) = sub_1AE501548(&qword_1EED94180);
  *(_QWORD *)(v0 + 136) = &off_1E5DBDC10;
  v5 = swift_allocObject();
  *(_QWORD *)(v0 + 104) = v5;
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 256) = v8;
  *(_QWORD *)(v0 + 264) = v9;
  v10 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 272) = v10;
  v11 = *(_BYTE *)(v0 + 56);
  *(_BYTE *)(v0 + 57) = v11;
  *(_QWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 24) = v7;
  *(_QWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 40) = v9;
  *(_QWORD *)(v5 + 48) = v10;
  *(_BYTE *)(v5 + 56) = v11;
  *(_QWORD *)(v0 + 176) = v4;
  *(_QWORD *)(v0 + 184) = v3;
  swift_retain();
  sub_1AE4F66CC();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v12;
  *v12 = v0;
  v12[1] = sub_1AE649C58;
  return sub_1AE752008(v0 + 64, v0 + 104, (_QWORD *)(v0 + 176));
}

uint64_t sub_1AE649C58()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1AE505574();
  sub_1AE5062E4(v2);
  *(_QWORD *)(v0 + 288) = v1;
  swift_task_dealloc();
  if (!v1)
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 104);
  return sub_1AE4FD190();
}

void sub_1AE649CB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = v0[30];
  v2 = v0[28];
  v3 = v0[12];
  sub_1AE4F9858(v0 + 8, v0[11]);
  v0[24] = v2;
  v0[25] = v1;
  v5 = **(int **)(v3 + 48) + *(_QWORD *)(v3 + 48);
  v4 = (_QWORD *)swift_task_alloc();
  v0[37] = v4;
  sub_1AE64A4A8();
  *v4 = v0;
  v4[1] = sub_1AE649DA0;
  __asm { BR              X8 }
}

uint64_t sub_1AE649DA0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1AE505574();
  sub_1AE5062E4(v2);
  *(_QWORD *)(v0 + 304) = v1;
  swift_task_dealloc();
  return sub_1AE4FD190();
}

uint64_t sub_1AE649DF4()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 104);
  sub_1AE64AA5C();
  return sub_1AE4FC8D4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE649E44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t (*v6)(void);

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD **)(v0 + 208);
  swift_release();
  sub_1AE4F6648();
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_BYTE *)(v0 + 168);
  *v2 = *(_QWORD *)(v0 + 144);
  v2[1] = v3;
  *(_QWORD *)v1 = v4;
  *(_WORD *)(v1 + 8) = v5;
  sub_1AE64AA5C();
  v6 = (uint64_t (*)(void))sub_1AE5094FC();
  return sub_1AE4FC8E4(v6);
}

uint64_t sub_1AE649EAC()
{
  uint64_t v0;

  swift_release();
  sub_1AE4F6648();
  sub_1AE64AA5C();
  return sub_1AE4FC8E4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE649EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v6[24] = a5;
  v6[25] = v5;
  v6[22] = a3;
  v6[23] = a4;
  v6[20] = a1;
  v6[21] = a2;
  v7 = sub_1AE924918();
  v6[26] = v7;
  v6[27] = *(_QWORD *)(v7 - 8);
  v6[28] = swift_task_alloc();
  if (qword_1ED30EF48 != -1)
    swift_once();
  v6[29] = qword_1EED93F38;
  return swift_task_switch();
}

uint64_t sub_1AE649F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t ObjectType;
  __int128 v12;
  void (*v13)(uint64_t, _OWORD *, ValueMetadata *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  _QWORD *v14;
  unint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  _OWORD v18[3];

  v1 = *(_QWORD *)(v0 + 200);
  sub_1AE92490C();
  v2 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(v0 + 240) = v2;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v16 = sub_1AE64A4A8();
    sub_1AE4F66CC();
    v4 = (uint64_t *)(v2 + 40);
    do
    {
      v5 = *(_QWORD *)(v0 + 224);
      v7 = *(_OWORD **)(v0 + 168);
      v6 = *(_OWORD **)(v0 + 176);
      v8 = *v4;
      v9 = *(_OWORD *)((char *)v6 + 25);
      v10 = v6[1];
      *(_OWORD *)(v0 + 16) = *v6;
      *(_OWORD *)(v0 + 32) = v10;
      *(_OWORD *)(v0 + 41) = v9;
      ObjectType = swift_getObjectType();
      v12 = v7[1];
      v18[0] = *v7;
      v18[1] = v12;
      v18[2] = v7[2];
      v13 = *(void (**)(uint64_t, _OWORD *, ValueMetadata *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v8 + 8);
      swift_unknownObjectRetain();
      v13(v5, v18, &type metadata for EntityTaggingMLModelInferenceInterface, v0 + 16, &type metadata for EntityTaggingMLModelInferenceInterface, v16, ObjectType, v8);
      swift_unknownObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  v17 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v0 + 184) + *(_QWORD *)(v0 + 184));
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v14;
  *v14 = v0;
  v14[1] = sub_1AE64A0D4;
  return v17(v0 + 112, v0 + 144);
}

uint64_t sub_1AE64A0D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_1AE505574();
  sub_1AE5062E4(v2);
  *(_QWORD *)(v0 + 256) = v1;
  swift_task_dealloc();
  return sub_1AE4FD190();
}

uint64_t sub_1AE64A124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t ObjectType;
  __int128 v13;
  void (*v14)(uint64_t, _OWORD *, ValueMetadata *, uint64_t, uint64_t, uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  _QWORD *v15;
  uint64_t (*v16)(void);
  unint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  _OWORD v22[3];
  uint64_t v23;
  char v24;
  char v25;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    v21 = *(_QWORD *)(v0 + 144);
    v19 = *(_BYTE *)(v0 + 153);
    v20 = *(_BYTE *)(v0 + 152);
    v18 = sub_1AE64A4A8();
    sub_1AE4F66CC();
    v5 = (uint64_t *)(v1 + 40);
    do
    {
      v6 = *(_QWORD *)(v0 + 224);
      v8 = *(_OWORD **)(v0 + 168);
      v7 = *(_OWORD **)(v0 + 176);
      v9 = *v5;
      v10 = *(_OWORD *)((char *)v7 + 25);
      v11 = v7[1];
      *(_OWORD *)(v0 + 64) = *v7;
      *(_OWORD *)(v0 + 80) = v11;
      *(_OWORD *)(v0 + 89) = v10;
      *(_QWORD *)(v0 + 128) = v2;
      *(_QWORD *)(v0 + 136) = v3;
      ObjectType = swift_getObjectType();
      v13 = v8[1];
      v22[0] = *v8;
      v22[1] = v13;
      v22[2] = v8[2];
      v23 = v21;
      v24 = v20;
      v25 = v19;
      v14 = *(void (**)(uint64_t, _OWORD *, ValueMetadata *, uint64_t, uint64_t, uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v9 + 24);
      swift_unknownObjectRetain();
      v14(v6, v22, &type metadata for EntityTaggingMLModelInferenceInterface, v0 + 64, v0 + 128, &v23, &type metadata for EntityTaggingMLModelInferenceInterface, v18, ObjectType, v9);
      swift_unknownObjectRelease();
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  v15 = *(_QWORD **)(v0 + 160);
  sub_1AE5099D4(*(_QWORD *)(v0 + 216));
  *v15 = v2;
  v15[1] = v3;
  swift_task_dealloc();
  v16 = (uint64_t (*)(void))sub_1AE5094FC();
  return v16();
}

uint64_t sub_1AE64A284()
{
  uint64_t v0;

  sub_1AE5099D4(*(_QWORD *)(v0 + 216));
  swift_task_dealloc();
  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE64A2BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1EED9ED30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AE64A300@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

uint64_t sub_1AE64A33C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  __int128 v12;
  _QWORD *v13;

  v12 = a4[1];
  *(_OWORD *)(v6 + 16) = *a4;
  *(_OWORD *)(v6 + 32) = v12;
  *(_OWORD *)(v6 + 41) = *(_OWORD *)((char *)a4 + 25);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 64) = v13;
  *v13 = v6;
  v13[1] = sub_1AE64A3D4;
  return sub_1AE649A64(a1, a2, a3, (_OWORD *)(v6 + 16), a5, a6);
}

uint64_t sub_1AE64A3D4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return sub_1AE4F90A8(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1AE64A414(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = v2[2];
  v7 = (_OWORD *)v2[3];
  v9 = v2[4];
  v8 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_1AE4FC490;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *, uint64_t, uint64_t))((char *)&dword_1EED9ED38
                                                                                        + dword_1EED9ED38))(a1, a2, v6, v7, v9, v8);
}

unint64_t sub_1AE64A4A8()
{
  unint64_t result;

  result = qword_1EED945C8;
  if (!qword_1EED945C8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityTaggingMLModelInferenceInterface, &type metadata for EntityTaggingMLModelInferenceInterface);
    atomic_store(result, (unint64_t *)&qword_1EED945C8);
  }
  return result;
}

uint64_t sub_1AE64A4E4()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1AE64A518()
{
  unint64_t result;

  result = qword_1EED9ED60;
  if (!qword_1EED9ED60)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947A64, &type metadata for EntityTaggingHeuristicsInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, &qword_1EED9ED60);
  }
  return result;
}

ValueMetadata *type metadata accessor for EntityTaggingHeuristicsInferenceServiceDefinition.ConfigParameters.CodingKeys()
{
  return &type metadata for EntityTaggingHeuristicsInferenceServiceDefinition.ConfigParameters.CodingKeys;
}

void type metadata accessor for EntityTaggingHeuristicsInferenceServiceDefinition.ConfigParameters()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE64A574()
{
  unint64_t result;

  result = qword_1EED9ED78;
  if (!qword_1EED9ED78)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947A14, &type metadata for EntityTaggingHeuristicsInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9ED78);
  }
  return result;
}

unint64_t sub_1AE64A5B4()
{
  unint64_t result;

  result = qword_1EED9ED80;
  if (!qword_1EED9ED80)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE947A3C, &type metadata for EntityTaggingHeuristicsInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9ED80);
  }
  return result;
}

uint64_t sub_1AE64A5F0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE551D2C(v1, v0);
}

uint64_t sub_1AE64A5FC()
{
  return sub_1AE925E18();
}

uint64_t sub_1AE64A620()
{
  return sub_1AE925E18();
}

uint64_t sub_1AE64A630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

void sub_1AE64A658()
{
  void *v0;

}

void sub_1AE64A664()
{
  uint64_t v0;
  unint64_t v1;

  *(_QWORD *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
  *(_BYTE *)(*(_QWORD *)(v0 + 48) + v1) = 18;
}

void sub_1AE64A694()
{
  uint64_t v0;
  unint64_t v1;

  *(_QWORD *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
  *(_BYTE *)(*(_QWORD *)(v0 + 48) + v1) = 18;
}

uint64_t sub_1AE64A6C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t sub_1AE64A6E0()
{
  return PersonEntityTagType.rawValue.getter();
}

void sub_1AE64A6F0()
{
  uint64_t v0;
  unint64_t v1;

  *(_QWORD *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
  *(_BYTE *)(*(_QWORD *)(v0 + 48) + v1) = 18;
}

uint64_t sub_1AE64A720()
{
  return sub_1AE5373F8();
}

uint64_t sub_1AE64A728()
{
  uint64_t v0;

  return v0;
}

void sub_1AE64A75C()
{
  void *v0;

}

uint64_t sub_1AE64A774@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _BYTE *a15, uint64_t a16, uint64_t a17, _BYTE *a18)
{
  *a18 = a1;
  *a15 = 9;
  return PersonEntityTagType.rawValue.getter();
}

uint64_t sub_1AE64A790()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 304) = 10;
  return PersonEntityTagType.rawValue.getter();
}

uint64_t sub_1AE64A7A0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  return static EntityTaggingModelUtility.entityTagTypeFromUnlocalizedLabel(label:)(v1, v0, v2);
}

void sub_1AE64A7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char *a16)
{
  uint64_t v16;

  sub_1AE642E08(*(void **)(v16 + 216), a16);
}

id sub_1AE64A7C0(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

void sub_1AE64A7CC()
{
  uint64_t v0;
  unint64_t v1;

  *(_QWORD *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
}

void sub_1AE64A7F0()
{
  uint64_t v0;
  unint64_t v1;

  *(_QWORD *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
}

uint64_t sub_1AE64A814()
{
  return sub_1AE5373F8();
}

uint64_t sub_1AE64A81C()
{
  return sub_1AE925E3C();
}

uint64_t sub_1AE64A838()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AE64A844@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _BYTE *a16, _BYTE *a17)
{
  *a16 = a1;
  *a17 = 10;
  return PersonEntityTagType.rawValue.getter();
}

uint64_t sub_1AE64A85C()
{
  return sub_1AE5373F8();
}

uint64_t sub_1AE64A868()
{
  return swift_unknownObjectRelease();
}

void sub_1AE64A870()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE642E08(*(void **)(v0 + 216), (char *)(v1 - 129));
}

void sub_1AE64A87C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE642E08(*(void **)(v0 + 216), (char *)(v1 - 130));
}

uint64_t sub_1AE64A888()
{
  return sub_1AE925E18();
}

uint64_t sub_1AE64A89C()
{
  return sub_1AE926A54();
}

uint64_t sub_1AE64A8B0()
{
  return sub_1AE926A54();
}

void sub_1AE64A8C4()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1AE64A8E4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v3 - 152);
}

uint64_t sub_1AE64A924()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE64A934(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE551D2C(v1, a1);
}

uint64_t sub_1AE64A954()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE64A960@<X0>(char a1@<W8>)
{
  _BYTE *v1;

  *v1 = a1;
  return PersonEntityTagType.rawValue.getter();
}

void sub_1AE64A97C()
{
  uint64_t v0;

  sub_1AE511468(v0, 1);
}

uint64_t sub_1AE64A994()
{
  return sub_1AE925E3C();
}

uint64_t sub_1AE64A99C()
{
  return sub_1AE926A54();
}

void sub_1AE64A9A8(uint64_t a1)
{
  sub_1AE6461EC(a1);
}

uint64_t sub_1AE64A9B0()
{
  return sub_1AE926A54();
}

uint64_t sub_1AE64A9BC()
{
  return sub_1AE5373F8();
}

uint64_t sub_1AE64A9C8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_1AE64A9D0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE64248C(v1, v0);
}

void sub_1AE64A9DC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE64204C(v1, v0);
}

void sub_1AE64A9E8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE6418AC(v1, v0);
}

void sub_1AE64A9F4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE642168(v1, v0);
}

void sub_1AE64AA00()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE641B08(v1, v0);
}

void sub_1AE64AA0C()
{
  uint64_t v0;
  void *v1;

  sub_1AE641874(v1, v0);
}

void sub_1AE64AA18()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE642928(v1, v0);
}

void sub_1AE64AA24()
{
  uint64_t v0;
  void *v1;

  sub_1AE641EF0(v1, v0);
}

void sub_1AE64AA30()
{
  uint64_t v0;
  void *v1;

  sub_1AE641890(v1, v0);
}

void sub_1AE64AA3C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE6414C4(v1, v0);
}

void sub_1AE64AA48()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE642C14(v1, v0);
}

void sub_1AE64AA54()
{
  uint64_t v0;

  sub_1AE62C0EC(v0);
}

uint64_t sub_1AE64AA5C()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
}

void sub_1AE64AA70()
{
  static EntityTaggingModelUtility.normalizeEntityTagsDictionary(input:)();
}

void sub_1AE64AA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = (v1 - 32) | 0x8000000000000000;
}

void sub_1AE64AAA0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = (v1 - 32) | 0x8000000000000000;
}

uint64_t sub_1AE64AAB4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE64AACC()
{
  uint64_t v0;

  return sub_1AE516120(8, v0);
}

uint64_t sub_1AE64AAD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE64AAE4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v12;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = a2;
  a4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v12);
  v10 = v12;
  sub_1AE4FDCF0();
  if (v4)
    sub_1AE4F9038();
  return v10;
}

uint64_t sub_1AE64AB64()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;

  sub_1AE501548(&qword_1EED9EDB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE93D220;
  *(_BYTE *)(inited + 32) = 3;
  *(_QWORD *)(inited + 40) = &unk_1E5DA9B78;
  *(_BYTE *)(inited + 48) = 4;
  *(_QWORD *)(inited + 56) = &unk_1E5DA99E8;
  *(_BYTE *)(inited + 64) = 5;
  sub_1AE501548(&qword_1ED31BCD0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v1 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(inited + 72) = v1;
  *(_BYTE *)(inited + 80) = 6;
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v3 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v3 + 40) = v4;
  *(_QWORD *)(inited + 88) = v3;
  *(_BYTE *)(inited + 96) = 7;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v5 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v5 + 40) = v6;
  *(_QWORD *)(inited + 104) = v5;
  *(_BYTE *)(inited + 112) = 8;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v7 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v7 + 40) = v8;
  *(_QWORD *)(inited + 120) = v7;
  *(_BYTE *)(inited + 128) = 9;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v9 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v9 + 40) = v10;
  *(_QWORD *)(inited + 136) = v9;
  *(_BYTE *)(inited + 144) = 10;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v11 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v11 + 40) = v12;
  *(_QWORD *)(inited + 152) = v11;
  *(_BYTE *)(inited + 160) = 11;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v13 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v13 + 40) = v14;
  *(_QWORD *)(inited + 168) = v13;
  *(_BYTE *)(inited + 176) = 12;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v15 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v15 + 40) = v16;
  *(_QWORD *)(inited + 184) = v15;
  *(_BYTE *)(inited + 192) = 13;
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v17 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v17 + 40) = v18;
  *(_QWORD *)(inited + 200) = v17;
  *(_BYTE *)(inited + 208) = 15;
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v19 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v19 + 40) = v20;
  *(_QWORD *)(inited + 216) = v19;
  *(_BYTE *)(inited + 224) = 16;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v21 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v21 + 40) = v22;
  *(_QWORD *)(inited + 232) = v21;
  *(_BYTE *)(inited + 240) = 17;
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v23 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v23 + 40) = v24;
  *(_QWORD *)(inited + 248) = v23;
  *(_BYTE *)(inited + 256) = 18;
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v25 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v25 + 40) = v26;
  *(_QWORD *)(inited + 264) = v25;
  *(_BYTE *)(inited + 272) = 19;
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v27 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(inited + 280) = v27;
  *(_BYTE *)(inited + 288) = 20;
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v29 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v29 + 40) = v30;
  *(_QWORD *)(inited + 296) = v29;
  *(_BYTE *)(inited + 304) = 21;
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v31 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v31 + 40) = v32;
  *(_QWORD *)(inited + 312) = v31;
  *(_BYTE *)(inited + 320) = 23;
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v33 + 32) = sub_1AE925E3C();
  *(_QWORD *)(v33 + 40) = v34;
  *(_QWORD *)(inited + 328) = v33;
  *(_BYTE *)(inited + 336) = 24;
  *(_QWORD *)(inited + 344) = &unk_1E5DA9A18;
  *(_BYTE *)(inited + 352) = 25;
  *(_QWORD *)(inited + 360) = &unk_1E5DA9A48;
  *(_BYTE *)(inited + 368) = 26;
  *(_QWORD *)(inited + 376) = &unk_1E5DA9A78;
  *(_BYTE *)(inited + 384) = 27;
  *(_QWORD *)(inited + 392) = &unk_1E5DA9AA8;
  *(_BYTE *)(inited + 400) = 28;
  *(_QWORD *)(inited + 408) = &unk_1E5DA9AF8;
  *(_BYTE *)(inited + 416) = 29;
  *(_QWORD *)(inited + 424) = &unk_1E5DA9B38;
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE62B630();
  result = sub_1AE925C98();
  qword_1EED9ED90 = result;
  return result;
}

void *sub_1AE64B09C()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *result;

  sub_1AE501548(&qword_1EED9EDD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE93D220;
  *(_QWORD *)(inited + 32) = 0x213E654D3C21245FLL;
  *(_QWORD *)(inited + 40) = 0xEA00000000005F24;
  *(_BYTE *)(inited + 48) = 3;
  strcpy((char *)(inited + 56), "_$!<Family>!$_");
  *(_BYTE *)(inited + 71) = -18;
  *(_BYTE *)(inited + 72) = 4;
  *(_QWORD *)(inited + 80) = sub_1AE925E3C();
  *(_QWORD *)(inited + 88) = v1;
  *(_BYTE *)(inited + 96) = 5;
  *(_QWORD *)(inited + 104) = sub_1AE925E3C();
  *(_QWORD *)(inited + 112) = v2;
  *(_BYTE *)(inited + 120) = 6;
  *(_QWORD *)(inited + 128) = sub_1AE925E3C();
  *(_QWORD *)(inited + 136) = v3;
  *(_BYTE *)(inited + 144) = 7;
  *(_QWORD *)(inited + 152) = sub_1AE925E3C();
  *(_QWORD *)(inited + 160) = v4;
  *(_BYTE *)(inited + 168) = 8;
  *(_QWORD *)(inited + 176) = sub_1AE925E3C();
  *(_QWORD *)(inited + 184) = v5;
  *(_BYTE *)(inited + 192) = 9;
  *(_QWORD *)(inited + 200) = sub_1AE925E3C();
  *(_QWORD *)(inited + 208) = v6;
  *(_BYTE *)(inited + 216) = 10;
  *(_QWORD *)(inited + 224) = sub_1AE925E3C();
  *(_QWORD *)(inited + 232) = v7;
  *(_BYTE *)(inited + 240) = 11;
  *(_QWORD *)(inited + 248) = sub_1AE925E3C();
  *(_QWORD *)(inited + 256) = v8;
  *(_BYTE *)(inited + 264) = 12;
  *(_QWORD *)(inited + 272) = sub_1AE925E3C();
  *(_QWORD *)(inited + 280) = v9;
  *(_BYTE *)(inited + 288) = 13;
  *(_QWORD *)(inited + 296) = sub_1AE925E3C();
  *(_QWORD *)(inited + 304) = v10;
  *(_BYTE *)(inited + 312) = 15;
  *(_QWORD *)(inited + 320) = sub_1AE925E3C();
  *(_QWORD *)(inited + 328) = v11;
  *(_BYTE *)(inited + 336) = 16;
  *(_QWORD *)(inited + 344) = sub_1AE925E3C();
  *(_QWORD *)(inited + 352) = v12;
  *(_BYTE *)(inited + 360) = 17;
  *(_QWORD *)(inited + 368) = sub_1AE925E3C();
  *(_QWORD *)(inited + 376) = v13;
  *(_BYTE *)(inited + 384) = 18;
  *(_QWORD *)(inited + 392) = sub_1AE925E3C();
  *(_QWORD *)(inited + 400) = v14;
  *(_BYTE *)(inited + 408) = 19;
  *(_QWORD *)(inited + 416) = sub_1AE925E3C();
  *(_QWORD *)(inited + 424) = v15;
  *(_BYTE *)(inited + 432) = 20;
  *(_QWORD *)(inited + 440) = sub_1AE925E3C();
  *(_QWORD *)(inited + 448) = v16;
  *(_BYTE *)(inited + 456) = 21;
  *(_QWORD *)(inited + 464) = sub_1AE925E3C();
  *(_QWORD *)(inited + 472) = v17;
  *(_BYTE *)(inited + 480) = 23;
  *(_QWORD *)(inited + 488) = 0xD000000000000010;
  *(_QWORD *)(inited + 496) = 0x80000001AE978200;
  *(_BYTE *)(inited + 504) = 24;
  *(_QWORD *)(inited + 512) = 0xD000000000000011;
  *(_QWORD *)(inited + 520) = 0x80000001AE978220;
  *(_BYTE *)(inited + 528) = 25;
  strcpy((char *)(inited + 536), "_$!<Alumni>!$_");
  *(_BYTE *)(inited + 551) = -18;
  *(_BYTE *)(inited + 552) = 26;
  *(_QWORD *)(inited + 560) = 7628144;
  *(_QWORD *)(inited + 568) = 0xE300000000000000;
  *(_BYTE *)(inited + 576) = 27;
  *(_QWORD *)(inited + 584) = 6778724;
  *(_QWORD *)(inited + 592) = 0xE300000000000000;
  *(_BYTE *)(inited + 600) = 28;
  *(_QWORD *)(inited + 608) = 7627107;
  *(_QWORD *)(inited + 616) = 0xE300000000000000;
  *(_BYTE *)(inited + 624) = 29;
  result = (void *)sub_1AE925C98();
  off_1EED9ED98 = result;
  return result;
}

uint64_t sub_1AE64B3F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  void (*v6)(char *, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v6 = (void (*)(char *, uint64_t, uint64_t))a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v13 = a3;
  result = sub_1AE64B438(a1, v6, v7, v8, v9, &v13);
  if (!v4)
  {
    *(_QWORD *)a4 = result;
    *(_QWORD *)(a4 + 8) = v11;
    *(_BYTE *)(a4 + 16) = v12 & 1;
  }
  return result;
}

uint64_t sub_1AE64B438(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t *v47;
  char v48;
  void (*v49)(uint64_t, uint64_t);
  void (*v50)(uint64_t *, _QWORD);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  BOOL v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  _BOOL8 v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t result;
  _QWORD v84[2];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t);
  uint64_t *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106[5];
  uint64_t v107;

  v97 = a2;
  v92 = a4;
  v93 = a5;
  v96 = a1;
  v101 = sub_1AE924C60();
  v105 = *(_QWORD *)(v101 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  v107 = v8;
  v9 = sub_1AE9254D0();
  v104 = *(_QWORD *)(v9 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F686C();
  v103 = v11;
  MEMORY[0x1E0C80A78](v12);
  v102 = (char *)v84 - v13;
  v100 = sub_1AE501548((uint64_t *)&unk_1ED30EC90);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F9024();
  v99 = (char *)v15;
  v86 = sub_1AE501548(&qword_1ED30ECA0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F686C();
  v85 = v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (_QWORD *)((char *)v84 - v19);
  v94 = *(_QWORD *)(sub_1AE501548(&qword_1ED318B60) - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v21);
  sub_1AE4F666C();
  v22 = sub_1AE501548(&qword_1ED319190);
  v90 = *(_QWORD *)(v22 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v23);
  sub_1AE4F666C();
  v26 = v25 - v24;
  v27 = *a6;
  sub_1AE4F66CC();
  sub_1AE925350();
  v95 = sub_1AE925C98();
  v88 = v27;
  v106[0] = v27;
  v106[0] = sub_1AE926D18();
  v106[1] = v28;
  v91 = v22;
  v89 = v26;
  sub_1AE925308();
  v29 = v96;
  swift_bridgeObjectRelease();
  sub_1AE56CE14(&qword_1ED30FFD0, &qword_1ED318B60);
  v30 = (uint64_t)v98;
  v31 = sub_1AE924B7C();
  v87 = v30;
  if (v30)
  {
    sub_1AE4F9418();
    if (qword_1ED31B508 != -1)
      swift_once();
    v32 = sub_1AE925B6C();
    sub_1AE4FB608(v32, (uint64_t)qword_1ED31B4F0);
    sub_1AE5099E0();
    sub_1AE5099E0();
    v33 = sub_1AE925B54();
    v34 = sub_1AE9265EC();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)sub_1AE4F66A0();
      v36 = (_QWORD *)sub_1AE4F66A0();
      *(_DWORD *)v35 = 138412290;
      sub_1AE5099E0();
      v37 = _swift_stdlib_bridgeErrorToNSError();
      v106[0] = v37;
      sub_1AE92676C();
      *v36 = v37;
      sub_1AE50ABB4();
      sub_1AE50ABB4();
      _os_log_impl(&dword_1AE4F2000, v33, v34, "Failed to query entityTagging view during ET query. This is not fatal, defaulting to graph results. Error: %@", v35, 0xCu);
      sub_1AE501548(&qword_1ED319410);
      sub_1AE5081C8();
      sub_1AE4F9064();
    }
    sub_1AE50ABB4();
    sub_1AE50ABB4();
    sub_1AE50ABB4();

    v79 = v88;
    goto LABEL_39;
  }
  v38 = v31;
  v39 = (_QWORD *)v85;
  v40 = v86;
  v98 = v20;
  sub_1AE4F9418();
  if (!v38)
  {
    sub_1AE5055A8();
LABEL_39:
    v106[0] = v79;
    v80 = sub_1AE64BD68(v29, v106);
    v81 = v95;
    swift_bridgeObjectRetain();
    v82 = sub_1AE64AAE4((uint64_t)v80, v81, (uint64_t)sub_1AE64DB08, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_1AE64D660);
    swift_bridgeObjectRelease();
    sub_1AE50ABBC();
    return v82;
  }
  v106[0] = v38;
  *v39 = v38;
  sub_1AE92526C();
  sub_1AE58FEAC(qword_1ED30FFE0, (void (*)(uint64_t))MEMORY[0x1E0D24538]);
  v84[1] = v38;
  swift_retain_n();
  sub_1AE926484();
  v41 = (uint64_t)v98;
  sub_1AE64DBA0((uint64_t)v39, (uint64_t)v98, &qword_1ED30ECA0);
  v85 = 0;
  v42 = v41 + *(int *)(v40 + 36);
  v43 = v104;
  v97 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
  v44 = 1;
  while (2)
  {
    v94 = v44;
    while (1)
    {
      v46 = v102;
      v45 = v103;
      v97(v102, v42, v9);
      v47 = v98;
      sub_1AE9264A8();
      sub_1AE58FEAC(&qword_1ED30FFF0, (void (*)(uint64_t))MEMORY[0x1E0D24898]);
      v48 = sub_1AE925E00();
      v49 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v49(v45, v9);
      v49((uint64_t)v46, v9);
      if ((v48 & 1) != 0)
      {
        sub_1AE52FBE8((uint64_t)v47, &qword_1ED30ECA0);
        sub_1AE509524();
        swift_release_n();
        v29 = v96;
        sub_1AE5055A8();
        goto LABEL_39;
      }
      v50 = (void (*)(uint64_t *, _QWORD))sub_1AE92658C();
      v51 = v99;
      sub_1AE64DBE0(v52, (uint64_t)v99);
      v50(v106, 0);
      v106[0] = *v47;
      sub_1AE9264B4();
      v54 = *(_QWORD *)v51;
      v53 = *((_QWORD *)v51 + 1);
      (*(void (**)(uint64_t, char *, uint64_t))(v105 + 32))(v107, &v51[*(int *)(v100 + 48)], v101);
      v55 = v54 == 1684628589 && v53 == 0xE400000000000000;
      if (!v55 && (sub_1AE926D60() & 1) == 0)
        break;
      sub_1AE508764(*(uint64_t (**)(_QWORD, uint64_t))(v105 + 8));
      sub_1AE4F76D8();
      v43 = v104;
    }
    v56 = v54 == 0x6469746E657665 && v53 == 0xE700000000000000;
    v44 = v94;
    if (v56 || (sub_1AE926D60() & 1) != 0)
    {
      v85 = sub_1AE926E98();
      v44 = v57 & 1;
    }
    v58 = sub_1AE9263A0();
    v59 = v95;
    if ((v60 & 1) != 0)
    {
      sub_1AE4F66CC();
      sub_1AE4F6AE0();
      v71 = v70;
      sub_1AE4F9038();
      if ((v71 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        v106[0] = v59;
        v95 = *(_QWORD *)(v59 + 24);
        sub_1AE501548((uint64_t *)&unk_1EED9EDC0);
        sub_1AE926A54();
        v72 = v106[0];
        swift_bridgeObjectRelease();
        v95 = v72;
        sub_1AE926A6C();
        sub_1AE4F76D8();
      }
      swift_bridgeObjectRelease();
      v73 = v105;
      goto LABEL_35;
    }
    v94 = v44;
    v84[0] = v58;
    LODWORD(v86) = swift_isUniquelyReferenced_nonNull_native();
    v106[0] = v59;
    v61 = sub_1AE4F6AE0();
    v63 = *(_QWORD *)(v59 + 16);
    v64 = (v62 & 1) == 0;
    v95 = v63 + v64;
    if (__OFADD__(v63, v64))
    {
      __break(1u);
    }
    else
    {
      v65 = v61;
      v66 = v62;
      sub_1AE501548((uint64_t *)&unk_1EED9EDC0);
      if ((sub_1AE926A54() & 1) == 0)
        goto LABEL_27;
      v67 = sub_1AE4F6AE0();
      if ((v66 & 1) != (v68 & 1))
        goto LABEL_42;
      v65 = v67;
LABEL_27:
      v69 = v106[0];
      v95 = v106[0];
      if ((v66 & 1) != 0)
      {
        sub_1AE507A50();
        goto LABEL_34;
      }
      *(_QWORD *)(v106[0] + 8 * (v65 >> 6) + 64) |= 1 << v65;
      v74 = (_QWORD *)(*(_QWORD *)(v69 + 48) + 16 * v65);
      *v74 = v54;
      v74[1] = v53;
      sub_1AE507A50();
      v76 = *(_QWORD *)(v75 + 16);
      v77 = __OFADD__(v76, 1);
      v78 = v76 + 1;
      if (!v77)
      {
        *(_QWORD *)(v75 + 16) = v78;
        swift_bridgeObjectRetain();
LABEL_34:
        v73 = v105;
        v44 = v94;
        sub_1AE4F76D8();
        sub_1AE4FDCF0();
LABEL_35:
        sub_1AE508764(*(uint64_t (**)(_QWORD, uint64_t))(v73 + 8));
        v43 = v104;
        continue;
      }
    }
    break;
  }
  __break(1u);
LABEL_42:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

char *sub_1AE64BD68(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  _QWORD v19[2];
  _OWORD v20[2];
  uint64_t v21;
  char *v22;

  v19[0] = a1;
  v3 = sub_1AE924FCC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a2;
  *(_QWORD *)&v20[0] = 0;
  *((_QWORD *)&v20[0] + 1) = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE92526C();
  sub_1AE501548((uint64_t *)&unk_1ED30FD78);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1AE934250;
  *(_QWORD *)&v20[0] = v7;
  v9 = EntityIdentifier.stringValue.getter();
  v10 = MEMORY[0x1E0D24968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v11;
  sub_1AE924FB4();
  v21 = 0;
  memset(v20, 0, sizeof(v20));
  v12 = v19[1];
  v13 = sub_1AE925254();
  if (v12)
  {
    swift_bridgeObjectRelease();
    sub_1AE52FBE8((uint64_t)v20, &qword_1EED94840);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    v15 = v13;
    swift_bridgeObjectRelease();
    sub_1AE52FBE8((uint64_t)v20, &qword_1EED94840);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v6 = (char *)sub_1AE925C98();
    *(_QWORD *)&v20[0] = v6;
    if (v15 >> 62)
      goto LABEL_14;
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v16; v16 = sub_1AE926AD8())
    {
      for (i = 4; ; ++i)
      {
        if ((v15 & 0xC000000000000001) != 0)
        {
          v6 = (char *)MEMORY[0x1AF453B80](i - 4, v15);
        }
        else
        {
          v6 = *(char **)(v15 + 8 * i);
          swift_retain();
        }
        v18 = i - 3;
        if (__OFADD__(i - 4, 1))
          break;
        v22 = v6;
        sub_1AE64D2A0((uint64_t *)v20);
        swift_release();
        if (v18 == v16)
        {
          swift_bridgeObjectRelease_n();
          return *(char **)&v20[0];
        }
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
  }
  return v6;
}

uint64_t sub_1AE64C0E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, unsigned __int8 a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unsigned __int8 v11;

  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v11 = a3;
  result = sub_1AE64C120(a1, v6, v7, v8, v9, &v11);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1AE64C120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t result;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  void (*v53)(char *, uint64_t);
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t *v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[5];
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108[5];
  uint64_t v109;

  v92 = a1;
  v97 = sub_1AE924C60();
  v93 = *(_QWORD *)(v97 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F686C();
  v96 = v10;
  MEMORY[0x1E0C80A78](v11);
  v95 = (char *)&v83 - v12;
  v13 = sub_1AE501548(&qword_1ED318B60);
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F666C();
  v14 = sub_1AE501548(&qword_1ED319190);
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F666C();
  v18 = v17 - v16;
  v19 = *a6;
  if ((v19 - 27) <= 2)
  {
    LOBYTE(v108[0]) = v19;
    v20 = sub_1AE509524();
    return sub_1AE64CA60(v20, a4, a5, v21);
  }
  v86 = v15;
  v88 = a4;
  v89 = a5;
  v23 = v18;
  sub_1AE501548((uint64_t *)&unk_1EED9EDA0);
  v87 = sub_1AE925C98();
  sub_1AE4F66CC();
  sub_1AE925350();
  HIDWORD(v94) = v19;
  LOBYTE(v108[0]) = v19;
  PersonEntityTagType.rawValue.getter();
  v106 = sub_1AE925374();
  v107 = MEMORY[0x1E0D24668];
  sub_1AE52F6A8(&v104);
  sub_1AE925380();
  v103[3] = MEMORY[0x1E0DEB418];
  v103[4] = MEMORY[0x1E0D249F8];
  v103[0] = 0;
  v108[3] = sub_1AE924C9C();
  v108[4] = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8(v108);
  sub_1AE925014();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v103);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v104);
  sub_1AE925320();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v108);
  sub_1AE56CE14(&qword_1ED30FFD0, &qword_1ED318B60);
  sub_1AE509524();
  v24 = v109;
  v25 = sub_1AE924B70();
  if (v24)
  {
    sub_1AE64DDF0();
    v26 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
    v27 = v23;
    v28 = v14;
LABEL_5:
    v26(v27, v28);
    v102 = 0;
    if (qword_1ED31B508 != -1)
LABEL_36:
      swift_once();
    v29 = sub_1AE925B6C();
    sub_1AE4FB608(v29, (uint64_t)qword_1ED31B4F0);
    sub_1AE4FCEFC();
    sub_1AE4FCEFC();
    v30 = sub_1AE925B54();
    v31 = sub_1AE9265EC();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = sub_1AE4F66A0();
      v33 = (_QWORD *)sub_1AE4F66A0();
      v109 = sub_1AE4F66A0();
      v108[0] = v109;
      *(_DWORD *)v32 = 136315394;
      LOBYTE(v104) = BYTE4(v94);
      v34 = PersonEntityTagType.rawValue.getter();
      sub_1AE520ED4(v34, v35, (uint64_t)v108, v36, v37, v38, v39, v40, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93,
        v94);
      v104 = v41;
      sub_1AE92676C();
      sub_1AE4F9038();
      *(_WORD *)(v32 + 12) = 2112;
      sub_1AE4FCEFC();
      v42 = _swift_stdlib_bridgeErrorToNSError();
      v104 = v42;
      sub_1AE92676C();
      *v33 = v42;
      sub_1AE4F916C();
      sub_1AE4F916C();
      _os_log_impl(&dword_1AE4F2000, v30, v31, "Failed to query entityTagging view during ET query. This is not fatal, defaulting to graph results. %s Error: %@", (uint8_t *)v32, 0x16u);
      sub_1AE501548(&qword_1ED319410);
      sub_1AE5081C8();
      sub_1AE4F9064();
    }
    sub_1AE4F916C();
    sub_1AE4F916C();
    sub_1AE4F916C();

    sub_1AE4FC8EC();
    v44 = v87;
    goto LABEL_29;
  }
  v43 = v25;
  v84 = v23;
  sub_1AE64DDF0();
  v44 = sub_1AE925C98();
  if (v43 >> 62)
  {
    sub_1AE4F66CC();
    v45 = sub_1AE926AD8();
    sub_1AE4F9038();
  }
  else
  {
    v45 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v46 = v97;
  v47 = v96;
  v102 = 0;
  v85 = v14;
  if (!v45)
  {
LABEL_27:
    sub_1AE4F9038();
    swift_bridgeObjectRelease();
    v72 = sub_1AE500C98();
    v73(v72);
    sub_1AE4FC8EC();
LABEL_29:
    LOBYTE(v108[0]) = v14;
    v74 = sub_1AE509524();
    v75 = v102;
    v79 = sub_1AE64CA60(v74, v76, v77, v78);
    if (v75)
      return swift_bridgeObjectRelease();
    else
      return sub_1AE64AAE4(v44, v79, (uint64_t)sub_1AE64DB48, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t *))sub_1AE64D870);
  }
  v91 = v43 & 0xC000000000000001;
  v48 = 4;
  v49 = v95;
  v90 = v43;
  while (1)
  {
    if (v91)
    {
      v14 = MEMORY[0x1AF453B80](v48 - 4, v43);
    }
    else
    {
      v14 = *(_QWORD *)(v43 + 8 * v48);
      swift_retain();
    }
    if (__OFADD__(v48 - 4, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    v98 = v48 - 3;
    v101 = v48;
    v50 = v45;
    v51 = v102;
    sub_1AE572158();
    if (v51)
      break;
    v99 = sub_1AE926E98();
    v100 = v52;
    v53 = *(void (**)(char *, uint64_t))(v93 + 8);
    v53(v49, v46);
    LOBYTE(v108[0]) = BYTE4(v94);
    PersonEntityTagType.rawValue.getter();
    v109 = v14;
    sub_1AE572158();
    sub_1AE4F76D8();
    LOBYTE(v14) = sub_1AE9263A0();
    v55 = v54;
    v53(v47, v46);
    if ((v55 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v108[0] = 0;
      v108[1] = 0xE000000000000000;
      sub_1AE92691C();
      swift_bridgeObjectRelease();
      v104 = 0xD00000000000001FLL;
      v105 = 0x80000001AE981F50;
      LOBYTE(v108[0]) = BYTE4(v94);
      PersonEntityTagType.rawValue.getter();
      sub_1AE925278();
      swift_bridgeObjectRelease();
      sub_1AE501548(&qword_1EED9C208);
      sub_1AE925E90();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      v80 = v104;
      v81 = v105;
      sub_1AE5CB92C();
      swift_allocError();
      *(_QWORD *)v82 = v80;
      *(_QWORD *)(v82 + 8) = v81;
      *(_BYTE *)(v82 + 16) = 1;
      swift_willThrow();
      swift_release();
      v27 = sub_1AE500C98();
      goto LABEL_5;
    }
    sub_1AE571708();
    v102 = 0;
    v57 = v56;
    v59 = v58;
    swift_isUniquelyReferenced_nonNull_native();
    v108[0] = v44;
    v60 = sub_1AE536EDC(v57, v59);
    if (__OFADD__(*(_QWORD *)(v44 + 16), (v61 & 1) == 0))
      goto LABEL_34;
    v62 = v60;
    v63 = v61;
    sub_1AE501548(&qword_1EED9B1F0);
    v64 = sub_1AE926A54();
    v45 = v50;
    v65 = v101;
    if ((v64 & 1) != 0)
    {
      v66 = sub_1AE536EDC(v57, v59);
      if ((v63 & 1) != (v67 & 1))
        goto LABEL_39;
      v62 = v66;
    }
    v44 = v108[0];
    if ((v63 & 1) != 0)
    {
      sub_1AE4FED44();
      v43 = v90;
    }
    else
    {
      *(_QWORD *)(v108[0] + 8 * (v62 >> 6) + 64) |= 1 << v62;
      v68 = (uint64_t *)(*(_QWORD *)(v44 + 48) + 16 * v62);
      *v68 = v57;
      v68[1] = v59;
      sub_1AE4FED44();
      v69 = *(_QWORD *)(v44 + 16);
      v70 = __OFADD__(v69, 1);
      v71 = v69 + 1;
      v43 = v90;
      if (v70)
        goto LABEL_35;
      *(_QWORD *)(v44 + 16) = v71;
      swift_bridgeObjectRetain();
    }
    swift_release();
    swift_bridgeObjectRelease();
    sub_1AE4FDCF0();
    v48 = v65 + 1;
    v46 = v97;
    v47 = v96;
    v49 = v95;
    if (v98 == v45)
      goto LABEL_27;
  }
  swift_unexpectedError();
  __break(1u);
LABEL_39:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE64CA60(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  uint64_t i;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v46 = a1;
  v6 = sub_1AE924FCC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a4;
  if (qword_1EED997F0 != -1)
    goto LABEL_27;
  while (1)
  {
    sub_1AE5161DC(v10, qword_1EED9ED90);
    if (!v11)
      break;
    v12 = v11;
    v44 = v9;
    v45 = v7;
    *(_QWORD *)&v47 = 0;
    *((_QWORD *)&v47 + 1) = 0xE000000000000000;
    sub_1AE92691C();
    sub_1AE925F74();
    sub_1AE925F74();
    sub_1AE925F74();
    sub_1AE925F74();
    sub_1AE925F74();
    sub_1AE925F74();
    sub_1AE925F74();
    sub_1AE925F74();
    sub_1AE925F74();
    v13 = *(_QWORD *)(v12 + 16);
    v14 = MEMORY[0x1E0DEE9D8];
    if (v13)
    {
      v43 = v6;
      v52 = MEMORY[0x1E0DEE9D8];
      sub_1AE52154C();
      v14 = v52;
      v15 = *(_QWORD *)(v52 + 16);
      v16 = 16 * v15;
      do
      {
        v52 = v14;
        v17 = v15 + 1;
        if (v15 >= *(_QWORD *)(v14 + 24) >> 1)
        {
          sub_1AE52154C();
          v14 = v52;
        }
        *(_QWORD *)(v14 + 16) = v17;
        v18 = v14 + v16;
        *(_QWORD *)(v18 + 32) = 63;
        *(_QWORD *)(v18 + 40) = 0xE100000000000000;
        v16 += 16;
        v15 = v17;
        --v13;
      }
      while (v13);
      v6 = v43;
    }
    v52 = v14;
    v10 = (uint64_t)&qword_1ED319DE0;
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE56CE14(&qword_1ED318BD0, &qword_1ED319DE0);
    sub_1AE925DC4();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    sub_1AE92526C();
    *(_QWORD *)&v47 = v12;
    sub_1AE56CE14(qword_1EED9E3C0, &qword_1ED319DE0);
    v19 = (unint64_t)v44;
    sub_1AE924FD8();
    v49 = 0;
    v47 = 0u;
    v48 = 0u;
    v20 = sub_1AE925254();
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_1AE52FBE8((uint64_t)&v47, &qword_1EED94840);
      (*(void (**)(unint64_t, uint64_t))(v45 + 8))(v19, v6);
      return v6;
    }
    v35 = v20;
    swift_bridgeObjectRelease();
    sub_1AE52FBE8((uint64_t)&v47, &qword_1EED94840);
    (*(void (**)(unint64_t, uint64_t))(v45 + 8))(v19, v6);
    sub_1AE501548((uint64_t *)&unk_1EED9EDA0);
    v6 = sub_1AE925C98();
    *(_QWORD *)&v47 = v6;
    if (v35 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1AE926AD8();
      if (!v7)
      {
LABEL_29:
        swift_bridgeObjectRelease_n();
        return v6;
      }
    }
    else
    {
      v7 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v7)
        goto LABEL_29;
    }
    for (i = 4; ; ++i)
    {
      if ((v35 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1AF453B80](i - 4, v35);
      }
      else
      {
        v6 = *(_QWORD *)(v35 + 8 * i);
        swift_retain();
      }
      v9 = (char *)(i - 3);
      if (__OFADD__(i - 4, 1))
        break;
      v52 = v6;
      sub_1AE64D0A4((uint64_t)&v47, (uint64_t)&v52, v37, v38, v39, v40, v41, v42);
      swift_release();
      if (v9 == (char *)v7)
      {
        swift_bridgeObjectRelease_n();
        return v47;
      }
    }
    __break(1u);
LABEL_27:
    swift_once();
  }
  if (qword_1ED31B508 != -1)
    swift_once();
  v21 = sub_1AE925B6C();
  sub_1AE4FB608(v21, (uint64_t)qword_1ED31B4F0);
  v22 = sub_1AE925B54();
  v23 = sub_1AE9265EC();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    *(_QWORD *)&v47 = v25;
    *(_DWORD *)v24 = 136315138;
    LOBYTE(v52) = v10;
    v26 = PersonEntityTagType.rawValue.getter();
    sub_1AE520ED4(v26, v27, (uint64_t)&v47, v28, v29, v30, v31, v32, v43, (unint64_t)v44, v45, v46, v47, *((uint64_t *)&v47 + 1), v48, *((uint64_t *)&v48 + 1), v49, v50, v51,
      v52);
    v52 = v33;
    sub_1AE92676C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AE4F2000, v22, v23, "Entity Tagging knosisTagLookup: Tag type not supported by DB query: %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF454C78](v25, -1, -1);
    MEMORY[0x1AF454C78](v24, -1, -1);
  }

  sub_1AE501548((uint64_t *)&unk_1EED9EDA0);
  return sub_1AE925C98();
}

uint64_t sub_1AE64D0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t vars0;
  uint64_t vars8;

  sub_1AE57225C(0xD000000000000010, 0x80000001AE9821A0, a3, a4, a5, a6, a7, a8, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, vars0,
    vars8);
  if (v8)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v9 = sub_1AE925E84();
    EntityIdentifier.init(_:)(v9, v10, (uint64_t)&v32);
    if ((v33 & 1) != 0)
    {
      v32 = 0;
      v33 = 0xE000000000000000;
      sub_1AE92691C();
      sub_1AE925F74();
      sub_1AE57225C(0xD000000000000010, 0x80000001AE9821A0, v17, v18, v19, v20, v21, v22, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, vars0,
        vars8);
      sub_1AE925E84();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      v23 = v32;
      v24 = v33;
      sub_1AE5CB92C();
      swift_allocError();
      *(_QWORD *)v25 = v23;
      *(_QWORD *)(v25 + 8) = v24;
      *(_BYTE *)(v25 + 16) = 1;
      return swift_willThrow();
    }
    else
    {
      v27 = v32;
      sub_1AE57225C(0x6E656469666E6F63, 0xEA00000000006563, v11, v12, v13, v14, v15, v16, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, vars0,
        vars8);
      v28 = sub_1AE925E84();
      sub_1AE56416C(v28, v29);
      v32 = v27;
      v30 = sub_1AE926D18();
      sub_1AE655194(0, 1, v30, v31);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1AE64D2A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_1AE571708();
  if (v1)
  {
    swift_unexpectedError();
    __break(1u);
    return;
  }
  v5 = v3;
  v6 = v4;
  if (qword_1EED997F8 != -1)
    swift_once();
  v7 = off_1EED9ED98;
  if (*((_QWORD *)off_1EED9ED98 + 2))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1AE536EDC(v5, v6);
    if ((v9 & 1) != 0)
    {
      v10 = *(_BYTE *)(v7[7] + v8);
      swift_bridgeObjectRelease();
      sub_1AE57225C(0x6E656469666E6F63, 0xEA00000000006563, v11, v12, v13, v14, v15, v16, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44,
        v45);
      v17 = sub_1AE925E84();
      sub_1AE56416C(v17, v18);
      if ((v19 & 1) != 0)
      {
        sub_1AE92691C();
        sub_1AE925F74();
        sub_1AE925F74();
        swift_bridgeObjectRelease();
        sub_1AE5CB92C();
        swift_allocError();
        *(_QWORD *)v33 = 0;
        *(_QWORD *)(v33 + 8) = 0xE000000000000000;
        *(_BYTE *)(v33 + 16) = 1;
        swift_willThrow();
      }
      else
      {
        swift_bridgeObjectRelease();
        LOBYTE(v34) = v10;
        v20 = PersonEntityTagType.rawValue.getter();
        sub_1AE51619C(v20, v21, *a1);
        swift_bridgeObjectRelease();
        LOBYTE(v34) = v10;
        PersonEntityTagType.rawValue.getter();
        sub_1AE65513C();
        swift_bridgeObjectRelease();
      }
      return;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1ED31B508 != -1)
    swift_once();
  v22 = sub_1AE925B6C();
  sub_1AE4FB608(v22, (uint64_t)qword_1ED31B4F0);
  swift_bridgeObjectRetain();
  v23 = sub_1AE925B54();
  v24 = sub_1AE9265EC();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v34 = v26;
    *(_DWORD *)v25 = 136315138;
    swift_bridgeObjectRetain();
    sub_1AE520ED4(v5, v6, (uint64_t)&v34, v27, v28, v29, v30, v31, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44,
      v45);
    v39 = v32;
    sub_1AE92676C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AE4F2000, v23, v24, "Entity Tagging: Unmapped relation lookup: %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF454C78](v26, -1, -1);
    MEMORY[0x1AF454C78](v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

