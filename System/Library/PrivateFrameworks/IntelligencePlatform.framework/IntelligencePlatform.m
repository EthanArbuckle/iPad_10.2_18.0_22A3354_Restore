uint64_t getEnumTagSinglePayload for LogSignpost()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE4F48DC()
{
  unint64_t v0;

  v0 = sub_1AE926B44();
  sub_1AE4F6648();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

void sub_1AE4F4920(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25[3];

  v5 = sub_1AE501548(&qword_1ED319260);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v25 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v25 - v12;
  v14 = *a1 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityAliasView;
  swift_beginAccess();
  sub_1AE578FEC(v14, (uint64_t)v13, &qword_1ED319260);
  v15 = type metadata accessor for EntityAliasView();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v15) == 1)
  {
    sub_1AE524534((uint64_t)v13, &qword_1ED319260);
    ViewService.entityAliasView.getter(v16, v17, v18, v19, v20, v21, v22, v23, v25[0]);
    if (!v2)
    {
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v11, 1, v15) == 1)
      {
        sub_1AE524534((uint64_t)v11, &qword_1ED319260);
        sub_1AE5716CC();
        swift_allocError();
        *(_OWORD *)v24 = xmmword_1AE944A40;
        *(_BYTE *)(v24 + 16) = 5;
        swift_willThrow();
      }
      else
      {
        sub_1AE60EDA4((uint64_t)v11, a2, (uint64_t (*)(_QWORD))type metadata accessor for EntityAliasView);
        sub_1AE60ED4C(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for EntityAliasView);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 0, 1, v15);
        swift_beginAccess();
        sub_1AE60ED78((uint64_t)v8, v14, &qword_1ED319260);
        swift_endAccess();
      }
    }
  }
  else
  {
    sub_1AE60EDA4((uint64_t)v13, a2, (uint64_t (*)(_QWORD))type metadata accessor for EntityAliasView);
  }
}

_QWORD *EntityResolutionRankingService.init(config:viewService:)(uint64_t a1, void *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  id v13;
  id v14;
  id v15;

  if (qword_1ED3193B0 != -1)
    swift_once();
  v5 = sub_1AE5FDF74(qword_1ED3193A0);
  if (v3)
  {

    type metadata accessor for EntityResolutionRankingService();
    sub_1AE607EB0();
  }
  else
  {
    v8 = v5;
    v9 = v6;
    v10 = v7;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    v2[3] = sub_1AE5CC9F8(v8, v9, v10);
    v2[4] = v12;
    v2[5] = a2;
    v2[6] = a2;
    v13 = objc_allocWithZone((Class)type metadata accessor for FeedbackService());
    v14 = a2;
    v15 = objc_msgSend(v13, sel_init);
    sub_1AE4F8214();
    swift_unknownObjectRelease();
    v2[2] = v15;
  }
  return v2;
}

void *sub_1AE4F4CD4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  const void *v4;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _BYTE v11[144];

  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_defaultMode) == a1)
  {
    v4 = (const void *)(v2 + OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_defaultConfig);
    sub_1AE4FFF90(v11, v4);
    sub_1AE4FFF90(a2, v4);
    return (void *)sub_1AE5DD3A4((uint64_t)v11);
  }
  else
  {
    if (qword_1ED319C70 != -1)
      swift_once();
    v7 = sub_1AE4F6854();
    sub_1AE4FB608(v7, (uint64_t)qword_1ED31AD58);
    v8 = sub_1AE925B54();
    v9 = sub_1AE9265EC();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)sub_1AE4F69B0();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1AE4F2000, v8, v9, "The mode specified here should be the same as initialized. Otherwise, the processing takes longer time.", v10, 2u);
      sub_1AE4F9064();
    }

    return sub_1AE6171A0(a1, a2);
  }
}

uint64_t sub_1AE4F4E00()
{
  unint64_t v0;

  v0 = sub_1AE926B44();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

void sub_1AE4F4E48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1AE501548(&qword_1ED319460);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE50B5EC();
  sub_1AE4F69D4();
  if (!v1)
  {
    sub_1AE50B400();
    sub_1AE508F3C();
    sub_1AE50704C();
  }
  sub_1AE4F90EC();
  sub_1AE4FCE34();
}

uint64_t sub_1AE4F4F10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6974737561687865 && a2 == 0xEA00000000006576;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1265659764 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t type metadata accessor for EntityResolutionRankingService()
{
  return objc_opt_self();
}

uint64_t sub_1AE4F5018()
{
  unint64_t v0;

  v0 = sub_1AE926B44();
  sub_1AE4F6648();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1AE4F505C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

void *sub_1AE4F50D4(uint64_t a1)
{
  uint64_t v1;
  void *result;
  _BYTE v3[144];
  _BYTE v4[144];
  _BYTE v5[144];

  result = sub_1AE4F4CD4(a1, v5);
  if (!v1)
  {
    sub_1AE4FFF90(v4, v5);
    sub_1AE4FFF90(v3, v5);
    sub_1AE4F52A8((uint64_t)v3);
    sub_1AE4FFF90(v3, v4);
    sub_1AE4F9C2C((uint64_t)v3);
    return (void *)sub_1AE5DD3EC((uint64_t)v4);
  }
  return result;
}

void sub_1AE4F517C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  bzero((void *)(v0 + 16), 0xA8uLL);
  v1 = type metadata accessor for EntityAliasView();
  sub_1AE4FC808(v1);
  v2 = (_QWORD *)(v0
                + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_inferenceFeatureView);
  v2[1] = 0;
  v2[2] = 0;
  *v2 = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_rankingService) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_peopleKnosisServer) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityKnosisServer) = 0;
  v3 = type metadata accessor for LemmatizedSubgraphView();
  sub_1AE4FC808(v3);
  sub_1AE4F6664();
}

uint64_t type metadata accessor for EntityAliasView()
{
  uint64_t result;

  result = qword_1ED31B890;
  if (!qword_1ED31B890)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1AE4F5240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1;
  *(_QWORD *)(v1 + 24) = a1;
  type metadata accessor for EntityResolutionServicePool.GuardedData();
  v3 = swift_allocObject();
  sub_1AE4F517C();
  sub_1AE501548(&qword_1ED319270);
  swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1AE50B7A4(v3);
  sub_1AE4F6664();
}

void sub_1AE4F52A8(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE4F52E8()
{
  char v0;
  uint64_t result;

  v0 = sub_1AE926D60();
  result = swift_bridgeObjectRelease();
  if ((v0 & 1) != 0)
    return sub_1AE5DF5F4(0x746C7561666564, 0xE700000000000000);
  return result;
}

void sub_1AE4F5468(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1AE501548(&qword_1ED319448);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE50B844();
  sub_1AE4F69D4();
  if (!v1)
  {
    sub_1AE50B768();
    sub_1AE508F3C();
    sub_1AE50704C();
  }
  sub_1AE4F90EC();
  sub_1AE4FCE34();
}

void EntityResolutionTextClient.init(for:warmup:)(uint64_t a1, char a2)
{
  id v4;

  v4 = objc_allocWithZone((Class)type metadata accessor for EntityResolutionTextClient());
  sub_1AE614A3C(a1, 0, a2);
  swift_getObjectType();
  sub_1AE614980();
  sub_1AE5035EC();
}

uint64_t type metadata accessor for EntityResolutionTextClient()
{
  return objc_opt_self();
}

double PriorityQueue.init(usingComparator:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  double result;
  __int128 v8;
  uint64_t v9;

  swift_retain();
  Heap.init(usingComparator:)(a1, a2, &v8);
  v6 = v9;
  result = *(double *)&v8;
  *(_OWORD *)a3 = v8;
  *(_QWORD *)(a3 + 16) = v6;
  *(_QWORD *)(a3 + 24) = a1;
  *(_QWORD *)(a3 + 32) = a2;
  return result;
}

void Heap.init(usingComparator:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;

  v6 = sub_1AE926238();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v6;
  sub_1AE4F6624();
}

id sub_1AE4F56E0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  id v5;
  void *v6;

  v5 = a1;
  v6 = (void *)a4();

  return v6;
}

uint64_t sub_1AE4F57EC()
{
  sub_1AE4F5848();
  return sub_1AE926190();
}

unint64_t sub_1AE4F5848()
{
  unint64_t result;

  result = qword_1ED319280;
  if (!qword_1ED319280)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PreprocessingStep, &type metadata for PreprocessingStep);
    atomic_store(result, (unint64_t *)&qword_1ED319280);
  }
  return result;
}

uint64_t sub_1AE4F5884(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x6E69646465626D65 && a2 == 0xEF68637261655367;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65537369736F6E6BLL && a2 == 0xEC00000068637261;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001AE9750F0 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x80000001AE97E030 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x80000001AE97E050)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      v7 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 4;
      else
        return 5;
    }
  }
}

uint64_t sub_1AE4F5AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0;
  type metadata accessor for EntityResolutionHandlerPool.EntityRerankerHandlerStore.GuardedData();
  v2 = swift_allocObject();
  type metadata accessor for EntityRerankerHandler();
  *(_QWORD *)(v2 + 16) = sub_1AE925C98();
  sub_1AE501548(&qword_1ED319268);
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1AE50B7A4(v2);
  return v1;
}

void sub_1AE4F5B4C(uint64_t a1)
{
  uint64_t v1;
  _DWORD *v3;

  v3 = (_DWORD *)swift_slowAlloc();
  *v3 = 0;
  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = v3;
  sub_1AE4F6664();
}

void static EntityResolutionConfig.fromResource(configName:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void (*v22)(uint64_t);
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[18];
  _QWORD v60[19];

  v50 = a3;
  v5 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AE924780();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v47 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v47 - v14;
  if (qword_1ED31C450 != -1)
    swift_once();
  v16 = sub_1AE4F63C4(a1, a2, 1852797802, 0xE400000000000000, 0xD000000000000019, 0x80000001AE97F260, (void *)qword_1ED31C4B0);
  if (v16)
  {
    v17 = v16;
    sub_1AE924744();

    v18 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v18(v7, v13, v8);
    sub_1AE4FDA38((uint64_t)v7, 0);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v7, 1, v8) != 1)
    {
      v18(v15, v7, v8);
      sub_1AE4F70FC((uint64_t)v15, (uint64_t)&v52);
      sub_1AE5CD6E0((uint64_t)&v52, (uint64_t)v59, (uint64_t *)&unk_1ED30EC70);
      sub_1AE5CD6E0((uint64_t)v59, (uint64_t)v60, (uint64_t *)&unk_1ED30EC70);
      if (sub_1AE5DD290((uint64_t)v60) == 1)
      {
        if (qword_1ED319C70 != -1)
          swift_once();
        v19 = sub_1AE4F6854();
        v20 = (void (*)(char *, uint64_t))sub_1AE4FB608(v19, (uint64_t)qword_1ED31AD58);
        v21 = sub_1AE5061E4();
        v22(v21);
        v23 = sub_1AE925B54();
        v24 = sub_1AE9265EC();
        if (os_log_type_enabled(v23, v24))
        {
          v25 = (uint8_t *)sub_1AE4F66A0();
          v49 = sub_1AE4F66A0();
          v52 = v49;
          *(_DWORD *)v25 = 136315138;
          v48 = v25 + 4;
          sub_1AE523C6C();
          v26 = sub_1AE5DE594();
          sub_1AE520ED4(v26, v27, (uint64_t)&v52, v28, v29, v30, v31, v32, v47, (unint64_t)v48, v49, v50, v51, v52, v53, v54, v55, v56, v57,
            v58);
          v51 = v33;
          sub_1AE92676C();
          sub_1AE4F9038();
          sub_1AE5DE584();
          _os_log_impl(&dword_1AE4F2000, v23, v24, "Failed to load config data from %s", v25, 0xCu);
          sub_1AE5081C8();
          sub_1AE4F9064();
        }

        sub_1AE5DE584();
        v20(v15, v8);
        sub_1AE5DD288(&v52);
        v45 = &v52;
      }
      else
      {
        sub_1AE4FBA8C((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
        v45 = v60;
      }
      v46 = v50;
      goto LABEL_19;
    }
  }
  else
  {
    sub_1AE4FDA38((uint64_t)v7, 1);
  }
  sub_1AE543420((uint64_t)v7);
  if (qword_1ED319C70 != -1)
    swift_once();
  v34 = sub_1AE4F6854();
  sub_1AE4FB608(v34, (uint64_t)qword_1ED31AD58);
  swift_bridgeObjectRetain_n();
  v35 = sub_1AE925B54();
  v36 = sub_1AE9265EC();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)sub_1AE4F66A0();
    v60[0] = sub_1AE4F66A0();
    *(_DWORD *)v37 = 136315138;
    swift_bridgeObjectRetain();
    sub_1AE520ED4(a1, a2, (uint64_t)v60, v38, v39, v40, v41, v42, v47, (unint64_t)v48, v49, v50, v51, v52, v53, v54, v55, v56, v57,
      v58);
    v59[0] = v43;
    sub_1AE92676C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AE4F2000, v35, v36, "Failed to get the correct URL for config file %s", v37, 0xCu);
    sub_1AE5081C8();
    sub_1AE4F9064();
  }

  swift_bridgeObjectRelease_n();
  v44 = v50;
  sub_1AE5DD288(v60);
  v45 = v60;
  v46 = v44;
LABEL_19:
  sub_1AE5CD6E0((uint64_t)v45, v46, (uint64_t *)&unk_1ED318C48);
  sub_1AE4F8180();
}

void sub_1AE4F604C()
{
  sub_1AE60E04C();
}

id EntityResolutionTextClient.init(for:viaXPC:warmup:)(uint64_t a1, char a2, char a3)
{
  char *v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  void *v9;
  char *v10;
  uint64_t v11;
  _UNKNOWN **v12;
  char *v13;
  id v15;
  objc_class *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  objc_super v25;
  __int128 v26;
  objc_class *v27;
  _UNKNOWN **v28;

  v6 = v3;
  if ((a2 & 1) != 0)
  {
    if ((a3 & 1) != 0)
      v9 = (void *)a1;
    else
      v9 = 0;
    type metadata accessor for EntityResolutionTextXPCService();
    sub_1AE6149A4();
    v10 = v6;
    v11 = sub_1AE615F84(v9, (a3 & 1) == 0);
    v12 = &off_1E5DC2BB0;
  }
  else
  {
    v5 = (objc_class *)type metadata accessor for EntityResolutionTextInProcessService();
    objc_allocWithZone(v5);
    v13 = v6;
    sub_1AE4F8428(a1, a3 & 1);
    if (v4)
    {

      type metadata accessor for EntityResolutionTextClient();
      return (id)sub_1AE614980();
    }
    v12 = &off_1E5DC59F0;
  }
  v27 = v5;
  v28 = v12;
  *(_QWORD *)&v26 = v11;
  sub_1AE50AF58(&v26, (uint64_t)&v6[OBJC_IVAR___GDEntityResolutionTextClientInner_service]);
  v15 = objc_allocWithZone((Class)type metadata accessor for FeedbackService());
  *(_QWORD *)&v6[OBJC_IVAR___GDEntityResolutionTextClientInner_feedbackService] = sub_1AE614AE0(v15);

  v16 = (objc_class *)type metadata accessor for EntityResolutionTextClient();
  return sub_1AE6149E4(v16, v17, v18, v19, v20, v21, v22, v23, v24, v25);
}

uint64_t type metadata accessor for EntityResolutionTextInProcessService()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeedbackService()
{
  return objc_opt_self();
}

void ViewService.entityAliasView.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  sub_1AE4FB9E0();
  sub_1AE509DF8();
  sub_1AE5093F8();
  sub_1AE925E18();
  sub_1AE4F691C();
  v13 = sub_1AE4FD034(v12, sel_requestAssertionForViewName_error_);
  sub_1AE4F6914();
  if (v11)
  {
    sub_1AE4FFE8C(OBJC_IVAR___GDSwiftViewService_databaseCache);
    sub_1AE500ACC();
    if (v10)
    {
      sub_1AE4FC718();
    }
    else
    {
      v15 = sub_1AE4FC704();
      sub_1AE59CEF0(v15, v16, v17, v18);
      v19 = type metadata accessor for EntityAliasView();
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v9, 0, 1, v19);
    }
  }
  else
  {
    v14 = a9;
    sub_1AE4FD028();
    sub_1AE501AD4();
    sub_1AE4FB928();
  }
  sub_1AE4FEBAC();
}

void ViewService.inferenceFeatureView.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  sub_1AE4FB9E0();
  sub_1AE509DF8();
  v12 = *(_QWORD *)(v10 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  sub_1AE925E18();
  sub_1AE4F691C();
  v14 = sub_1AE4FD034(v13, sel_requestAssertionForViewName_error_);
  sub_1AE4F6914();
  if (v12)
  {
    sub_1AE4FFE8C(OBJC_IVAR___GDSwiftViewService_databaseCache);
    v15 = sub_1AE500ACC();
    if (v11)
    {
      sub_1AE4FC718();
    }
    else
    {
      *v9 = v12;
      v9[1] = v15;
      v9[2] = v16;
    }
  }
  else
  {
    v17 = a9;
    sub_1AE4FD028();
    sub_1AE501AD4();
    sub_1AE4FB928();
  }
  sub_1AE4FEBAC();
}

id sub_1AE4F63C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v8 = (void *)sub_1AE925E18();
  v9 = (void *)sub_1AE925E18();
  v10 = (void *)sub_1AE925E18();
  v11 = objc_msgSend(a7, sel_URLForResource_withExtension_subdirectory_, v8, v9, v10);

  return v11;
}

void sub_1AE4F6460()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  v5 = sub_1AE501548(&qword_1ED319468);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE50B544();
  sub_1AE4F680C();
  if (v0)
  {
    sub_1AE4F90EC();
  }
  else
  {
    sub_1AE4F69EC();
    sub_1AE5054DC(&qword_1ED319408, v6, (uint64_t (*)(void))sub_1AE5DDFD8, MEMORY[0x1E0DEAF40]);
    sub_1AE505F98();
    v7 = sub_1AE50BA98();
    swift_bridgeObjectRetain();
    sub_1AE505F98();
    if (v7)
    {
      sub_1AE4F9250();
      sub_1AE4F6728();
    }
    else
    {
      v9 = sub_1AE509910(2);
      v8 = sub_1AE509910(3);
      sub_1AE4F9250();
      *(_QWORD *)v4 = v10;
      *(_QWORD *)(v4 + 8) = v10;
      *(_BYTE *)(v4 + 16) = v11;
      *(_BYTE *)(v4 + 17) = v9 & 1;
      *(_BYTE *)(v4 + 18) = v8 & 1;
    }
    sub_1AE4F90EC();
    sub_1AE4F6728();
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE4F663C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F6648()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F665C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F6694()
{
  return sub_1AE926ED4();
}

uint64_t sub_1AE4F66A0()
{
  return swift_slowAlloc();
}

uint64_t sub_1AE4F66BC()
{
  return swift_allocObject();
}

uint64_t sub_1AE4F66C4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4F66CC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4F66D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a3, a4);
}

uint64_t sub_1AE4F66E0()
{
  return swift_retain();
}

uint64_t sub_1AE4F66E8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F6700()
{
  return swift_release();
}

uint64_t sub_1AE4F6708()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4F6710()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F6718()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F6720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  return sub_1AE525A98((uint64_t)&a43);
}

uint64_t sub_1AE4F6728()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F6730()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4F6738()
{
  return swift_allocObject();
}

uint64_t sub_1AE4F675C()
{
  return sub_1AE9248DC();
}

uint64_t sub_1AE4F6764()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 104));
}

uint64_t sub_1AE4F6770()
{
  return sub_1AE924C9C();
}

uint64_t sub_1AE4F6778()
{
  return swift_allocError();
}

uint64_t sub_1AE4F6784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AE4FB608(v2, a2);
}

uint64_t sub_1AE4F67A4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4F67AC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F67B4()
{
  return _swift_stdlib_strtod_clocale();
}

uint64_t sub_1AE4F67C0()
{
  return swift_task_alloc();
}

uint64_t sub_1AE4F67DC()
{
  return swift_task_dealloc();
}

uint64_t sub_1AE4F67E4()
{
  return swift_task_dealloc();
}

uint64_t sub_1AE4F6804()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4F680C()
{
  return sub_1AE926F34();
}

uint64_t sub_1AE4F6818()
{
  return sub_1AE926ED4();
}

uint64_t sub_1AE4F6824()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1AE4F682C()
{
  return swift_release();
}

void sub_1AE4F6834()
{
  void *v0;

}

uint64_t sub_1AE4F6854()
{
  return sub_1AE925B6C();
}

uint64_t sub_1AE4F6880()
{
  return 0;
}

uint64_t sub_1AE4F6898()
{
  return sub_1AE926EC8();
}

uint64_t sub_1AE4F68A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_1AE4F68B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  sub_1AE520ED4(a1, a2, v20 + 152, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1AE4F68C0()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4F68D4(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 v2;

  return sub_1AE526540(a1, v1, v2);
}

uint64_t sub_1AE4F68F4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4F690C()
{
  return swift_endAccess();
}

void sub_1AE4F6914()
{
  void *v0;

}

uint64_t sub_1AE4F6928()
{
  return swift_willThrow();
}

uint64_t sub_1AE4F6930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1AE4F6940()
{
  return sub_1AE926760();
}

void sub_1AE4F6964()
{
  static EntityClass.entity.getter();
}

uint64_t sub_1AE4F6974()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE4F6984()
{
  return sub_1AE926ED4();
}

BOOL sub_1AE4F698C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

float sub_1AE4F699C()
{
  float v0;

  return v0;
}

uint64_t sub_1AE4F69B0()
{
  return swift_slowAlloc();
}

id sub_1AE4F69BC(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 0);
}

uint64_t sub_1AE4F69C4()
{
  return sub_1AE926B8C();
}

uint64_t sub_1AE4F69D4()
{
  return sub_1AE926F34();
}

uint64_t sub_1AE4F69EC()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

uint64_t sub_1AE4F69F4()
{
  return sub_1AE92676C();
}

uint64_t sub_1AE4F6A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE4F6A14()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4F6A24()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1AE4F6A2C()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4F6A38()
{
  return swift_allocObject();
}

uint64_t sub_1AE4F6A4C()
{
  return sub_1AE926220();
}

uint64_t sub_1AE4F6A6C()
{
  return swift_release();
}

uint64_t sub_1AE4F6A74(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1AE4F6A80()
{
  return sub_1AE925B30();
}

void sub_1AE4F6A90()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1AE4F6AC4()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4F6AE0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v1, v0);
}

uint64_t sub_1AE4F6AEC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F6AF4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  *v3 = result;
  *(_QWORD *)(result + 8) = v1;
  *(_QWORD *)(result + 16) = v2;
  return result;
}

uint64_t sub_1AE4F6B20()
{
  return swift_task_switch();
}

uint64_t sub_1AE4F6B30@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_1AE925C08();
}

uint64_t sub_1AE4F6B70()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE4F6B80()
{
  uint64_t v0;

  return v0;
}

__n128 sub_1AE4F6B8C@<Q0>(__int128 *a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_OWORD *)(v1 - 135) = *(__int128 *)((char *)a1 + 41);
  *(_OWORD *)(v1 - 160) = v3;
  *(_OWORD *)(v1 - 144) = v4;
  *(_OWORD *)(v1 - 176) = v2;
  sub_1AE68E1BC();
  return result;
}

uint64_t sub_1AE4F6BAC()
{
  return swift_getObjectType();
}

void sub_1AE4F6BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(v0 + *(int *)(v1 + 44));
  v4 = *v3;
  v5 = v3[1];
  LOBYTE(v3) = *((_BYTE *)v3 + 16);
  *(_QWORD *)(v2 - 104) = v4;
  *(_QWORD *)(v2 - 96) = v5;
  *(_BYTE *)(v2 - 88) = (_BYTE)v3;
  *(_BYTE *)(v2 - 65) = 7;
}

uint64_t sub_1AE4F6BFC()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE4F6C08()
{
  return 255;
}

uint64_t sub_1AE4F6C18()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 352) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1AE4F6C38()
{
  return type metadata accessor for InferenceServiceContextMemberVariables();
}

uint64_t sub_1AE4F6C44()
{
  return sub_1AE926694();
}

uint64_t sub_1AE4F6C54(_OWORD *a1)
{
  uint64_t v1;
  __int128 v2;

  *(_QWORD *)(v1 - 248) = a1;
  v2 = *(_OWORD *)(v1 - 192);
  a1[1] = *(_OWORD *)(v1 - 208);
  a1[2] = v2;
  a1[3] = *(_OWORD *)(v1 - 176);
  *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)(v1 - 167);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4F6C90()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE4F6CA4()
{
  return sub_1AE9245A0();
}

uint64_t sub_1AE4F6CC0()
{
  return 0x746361746E6F63;
}

uint64_t sub_1AE4F6CD4()
{
  return 0x48544E4F4D5F31;
}

_QWORD *sub_1AE4F6CEC()
{
  uint64_t v0;

  return sub_1AE56E58C((_QWORD *)(v0 - 256));
}

void *sub_1AE4F6D24(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC0uLL);
}

uint64_t sub_1AE4F6D2C()
{
  return sub_1AE925B0C();
}

void *sub_1AE4F6D48(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA9uLL);
}

void sub_1AE4F6D60(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void (*a9)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD *)@<X8>)
{
  uint64_t v9;

  sub_1AE807B1C(a1, a2, a3, a4, a5, a6, a7, a8, v9, a9);
}

void sub_1AE4F6D74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v8)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD);

  sub_1AE80DE04(a1, a2, a3, a4, a5, a6, a7, a8, v8);
}

uint64_t sub_1AE4F6D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE4F6D90()
{
  return 1;
}

void sub_1AE4F6DAC()
{
  sub_1AE51A3F4();
}

uint64_t sub_1AE4F6DB8()
{
  return swift_release();
}

void sub_1AE4F6DC0()
{
  JUMPOUT(0x1AF454348);
}

uint64_t sub_1AE4F6DCC()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4F6DD4()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE4F6DDC()
{
  sub_1AE51A614();
}

uint64_t sub_1AE4F6DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  *(_DWORD *)(v4 - 188) = v3;
  *(_QWORD *)(v4 - 216) = v2;
  *(_QWORD *)(v4 - 208) = v1;
  *(_QWORD *)(v4 - 184) = v0;
  return swift_unknownObjectRetain();
}

void sub_1AE4F6E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1AE520ED4(v21, v20, v22 - 256, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1AE4F6E20(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1AE4F6E28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v2, v1, a1);
}

uint64_t sub_1AE4F6E44()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = *v0;
  return swift_retain();
}

uint64_t sub_1AE4F6E5C()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE4F6E74()
{
  return sub_1AE92538C();
}

uint64_t sub_1AE4F6E80()
{
  return sub_1AE926B50();
}

unint64_t sub_1AE4F6EA4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = a1;
  *(_BYTE *)(v1 - 89) = 2;
  return sub_1AE8B83B0();
}

uint64_t sub_1AE4F6EB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

id FeedbackService.init()()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  objc_super v8;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = OBJC_IVAR___GDFeedbackServiceInner_encoder;
  sub_1AE924630();
  swift_allocObject();
  v4 = v0;
  v5 = sub_1AE924624();
  sub_1AE92460C();
  *(_QWORD *)&v1[v3] = v5;
  v6 = objc_msgSend(objc_allocWithZone((Class)GDXPCFeedbackService), sel_init);
  *(_QWORD *)&v4[OBJC_IVAR___GDFeedbackServiceInner_server] = v6;

  v8.receiver = v4;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

SEL *sub_1AE4F6F70()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  SEL *v5;
  SEL *v6;
  void *v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(id, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  id v16;
  void *v18;
  void *v19;
  SEL *v20;
  id v21;
  id v22[10];
  uint64_t v23;
  uint64_t v24;

  sub_1AE4FB9E0();
  v23 = v3;
  v24 = v4;
  v6 = v5;
  v22[1] = *(id *)MEMORY[0x1E0C80C00];
  v7 = *(void **)(v0 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  sub_1AE925E18();
  sub_1AE4F691C();
  v8 = objc_msgSend(v7, sel_requestAssertionForViewName_error_, v2, v22);

  v9 = v22[0];
  if (v8)
  {
    v10 = *(_QWORD **)(v0 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    v11 = v10[10];
    v12 = v10[11];
    sub_1AE4F9858(v10 + 7, v11);
    v13 = *(uint64_t (**)(id, uint64_t, uint64_t))(v12 + 8);
    v14 = v9;
    v15 = v13(v8, v11, v12);
    if (v1)
    {
      sub_1AE509D98();
    }
    else
    {
      v18 = (void *)v15;
      v19 = (void *)objc_opt_self();
      v22[0] = 0;
      v20 = (SEL *)objc_msgSend(v19, *v6, v8, v18, v22);
      if (v20)
      {
        v6 = v20;
        v21 = v22[0];
      }
      else
      {
        v6 = (SEL *)v22[0];
        sub_1AE9246B4();

        sub_1AE506FEC();
      }
      sub_1AE509D98();

    }
  }
  else
  {
    v16 = v22[0];
    sub_1AE9246B4();

    sub_1AE506FEC();
  }
  return v6;
}

uint64_t sub_1AE4F70FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  unint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t *v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[18];
  _QWORD v44[18];
  unint64_t v45;
  unint64_t v46;

  v41 = a2;
  v3 = sub_1AE924780();
  v42 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v40 = (unint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1AE925E78();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE925E0C();
  sub_1AE925E6C();
  v9 = sub_1AE925E48();
  v11 = v10;
  swift_bridgeObjectRelease();
  v12 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v11 >> 60 == 15)
  {
    v45 = 0;
    v46 = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    v45 = 0xD00000000000001ELL;
    v46 = 0x80000001AE97F380;
    sub_1AE523C6C();
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    v13 = v45;
    v14 = v46;
    sub_1AE5DE068();
    v15 = (void *)swift_allocError();
    *v16 = v13;
    v16[1] = v14;
    swift_willThrow();
    v17 = v42;
    v18 = v40;
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v19 = sub_1AE925B6C();
    sub_1AE4FB608(v19, (uint64_t)qword_1ED31BC90);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 16))(v18, a1, v3);
    v20 = v15;
    v21 = v15;
    v22 = sub_1AE925B54();
    v23 = sub_1AE9265F8();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v39 = (_QWORD *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v45 = v40;
      *(_DWORD *)v24 = 136315394;
      sub_1AE523C6C();
      v25 = sub_1AE926D18();
      sub_1AE520ED4(v25, v26, (uint64_t)&v45, v27, v28, v29, v30, v31, (uint64_t)v39, v40, v41, v42, v43[0], v43[1], v43[2], v43[3], v43[4], v43[5], v43[6],
        v43[7]);
      v44[0] = v32;
      sub_1AE92676C();
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v42 + 8))(v18, v3);
      *(_WORD *)(v24 + 12) = 2112;
      v33 = v15;
      v34 = _swift_stdlib_bridgeErrorToNSError();
      v44[0] = v34;
      sub_1AE92676C();
      v35 = v39;
      *v39 = v34;

      _os_log_impl(&dword_1AE4F2000, v22, v23, "Failed to load data from %s with error %@", (uint8_t *)v24, 0x16u);
      sub_1AE501548(&qword_1ED319410);
      swift_arrayDestroy();
      MEMORY[0x1AF454C78](v35, -1, -1);
      v36 = v40;
      swift_arrayDestroy();
      MEMORY[0x1AF454C78](v36, -1, -1);
      MEMORY[0x1AF454C78](v24, -1, -1);

    }
    else
    {

      (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v18, v3);
    }
    sub_1AE5DE0E0((uint64_t)&v45);
    v38 = &v45;
  }
  else
  {
    v39 = (_QWORD *)MEMORY[0x1AF454348](v12);
    sub_1AE9243C0();
    swift_allocObject();
    sub_1AE9243B4();
    sub_1AE501548((uint64_t *)&unk_1ED318C48);
    sub_1AE4F989C(&qword_1ED3192E0, (uint64_t *)&unk_1ED318C48, (uint64_t (*)(void))sub_1AE5DE110, MEMORY[0x1E0DEE9A0]);
    sub_1AE9243A8();
    swift_release();
    objc_autoreleasePoolPop(v39);
    sub_1AE50BDA0(v9, v11);
    sub_1AE5CD6E0((uint64_t)&v45, (uint64_t)v43, (uint64_t *)&unk_1ED318C48);
    sub_1AE5CD6E0((uint64_t)v43, (uint64_t)v44, (uint64_t *)&unk_1ED318C48);
    nullsub_1(v44);
    v38 = v44;
  }
  return sub_1AE5CD6E0((uint64_t)v38, v41, (uint64_t *)&unk_1ED30EC70);
}

unint64_t sub_1AE4F7630()
{
  unint64_t result;

  result = qword_1ED31C430;
  if (!qword_1ED31C430)
  {
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED31C430);
  }
  return result;
}

uint64_t type metadata accessor for Analytics()
{
  return objc_opt_self();
}

IntelligencePlatform::PreprocessingStep_optional __swiftcall PreprocessingStep.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  IntelligencePlatform::PreprocessingStep_optional result;

  v2 = v1;
  v3 = sub_1AE926B44();
  sub_1AE4F6648();
  v4 = 8;
  if (v3 < 8)
    v4 = v3;
  *v2 = v4;
  sub_1AE4F6624();
  return result;
}

uint64_t sub_1AE4F76D8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F76E0()
{
  return sub_1AE926EC8();
}

uint64_t sub_1AE4F76EC()
{
  return 0x65746E6F4373746BLL;
}

uint64_t sub_1AE4F7700()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4F7714()
{
  uint64_t v0;

  return v0;
}

BOOL sub_1AE4F7720@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1AE4F7738()
{
  return swift_task_alloc();
}

uint64_t sub_1AE4F775C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t sub_1AE4F7774()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F777C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE4F77A8()
{
  return swift_task_switch();
}

uint64_t sub_1AE4F77B8(uint64_t a1, unint64_t *a2)
{
  return sub_1AE53F468(0, a2);
}

uint64_t sub_1AE4F77C0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_1AE4F77C8()
{
  return swift_release();
}

uint64_t sub_1AE4F77D0()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 4208);
}

uint64_t sub_1AE4F77E0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE4F77E8(uint64_t a1, uint64_t a2)
{
  sub_1AE4FB608(a1, a2);
  return sub_1AE925B54();
}

uint64_t sub_1AE4F77FC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F7804()
{
  return swift_endAccess();
}

uint64_t sub_1AE4F7820()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4F7838()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4F7840()
{
  uint64_t v0;

  return v0;
}

uint64_t _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4F786C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE4F788C()
{
  return 0x7361696C61;
}

void sub_1AE4F789C()
{
  sub_1AE521C30();
}

void sub_1AE4F78B8(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 64) |= v1;
}

uint64_t sub_1AE4F78CC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t sub_1AE4F78E8()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1AE4F7900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t sub_1AE4F790C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1AE4F7914()
{
  uint64_t v0;
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v0, 1, v1);
}

uint64_t sub_1AE4F7950()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F7958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  return sub_1AE5241DC((uint64_t)&a34, (uint64_t)&a9);
}

void sub_1AE4F7964()
{
  void *v0;

}

uint64_t sub_1AE4F7970()
{
  return swift_arrayDestroy();
}

uint64_t sub_1AE4F7980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

void sub_1AE4F798C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 280) = v1;
  *(_QWORD *)(v3 - 272) = v0;
  *(_QWORD *)(v3 - 264) = v2;
}

uint64_t sub_1AE4F79A8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE78FBA4(v0, v1, 1u);
}

uint64_t sub_1AE4F79CC()
{
  return swift_allocObject();
}

uint64_t sub_1AE4F79F0()
{
  return sub_1AE924450();
}

void sub_1AE4F79FC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)v3 = a1;
  *(_QWORD *)(v3 + 8) = v1;
  *(_BYTE *)(v3 + 16) = 2;
  *(_QWORD *)(v3 + 24) = v2;
}

double sub_1AE4F7A10()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 32) = 0;
  result = 0.0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

uint64_t sub_1AE4F7A20()
{
  return sub_1AE926C10();
}

uint64_t sub_1AE4F7A34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AE80360C(a1, a2, v2, 0);
}

uint64_t sub_1AE4F7A40()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4F7A50(_QWORD *a1)
{
  uint64_t v1;
  size_t v3;

  v3 = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(v3 - 32) / 32);
  return sub_1AE6259BC();
}

uint64_t sub_1AE4F7A84@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_1AE82EC08(a1, a2, a3);
}

uint64_t sub_1AE4F7A90()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v0, v1);
}

uint64_t sub_1AE4F7AA0()
{
  uint64_t v0;

  return v0 - 120;
}

void sub_1AE4F7AD0(unint64_t *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t *v4;

  sub_1AE7AB2BC(a1, v4, a3, a4);
}

unint64_t sub_1AE4F7AD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  return sub_1AE8AA834();
}

_QWORD *sub_1AE4F7AE0()
{
  _QWORD *v0;

  return sub_1AE4F9858(v0, v0[3]);
}

uint64_t sub_1AE4F7B04()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4F7B18()
{
  return 0;
}

uint64_t sub_1AE4F7B2C()
{
  return 0;
}

void SearchMode.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1AE4FCAE4();
  v2 = v1;
  v25 = v3;
  sub_1AE501548(&qword_1ED319438);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F666C();
  v26 = sub_1AE501548(&qword_1ED319440);
  MEMORY[0x1E0C80A78](v26);
  sub_1AE4F666C();
  v5 = sub_1AE501548(&qword_1ED319430);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  v9 = v8 - v7;
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE50BD30();
  sub_1AE926F34();
  if (v0)
    goto LABEL_9;
  v24 = (uint64_t)v2;
  v27 = v6;
  v10 = sub_1AE926C1C();
  v11 = *(_QWORD *)(v10 + 16);
  v12 = v5;
  if (!v11)
  {
LABEL_8:
    v18 = sub_1AE926988();
    swift_allocError();
    v20 = v19;
    sub_1AE501548(&qword_1EED99C38);
    *v20 = &type metadata for SearchMode;
    sub_1AE926B5C();
    sub_1AE92697C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0DEC450], v18);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v9, v12);
    v2 = (_QWORD *)v24;
LABEL_9:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
    goto LABEL_10;
  }
  v13 = *(_BYTE *)(v10 + 32);
  sub_1AE50AF34(1, v11, v10, v10 + 32, 0, (2 * v11) | 1);
  v15 = v14;
  v17 = v16;
  sub_1AE4F81B8();
  if (v15 != v17 >> 1)
  {
    v12 = v5;
    goto LABEL_8;
  }
  if ((v13 & 1) != 0)
  {
    sub_1AE8C4FD0();
    sub_1AE4FE304();
    v21 = sub_1AE926BE0();
    sub_1AE4FD814();
    sub_1AE4FBA84();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    sub_1AE8C2FDC();
    sub_1AE4FE304();
    sub_1AE926BD4();
    v23 = v22;
    sub_1AE503DF4();
    sub_1AE50A238();
    sub_1AE501314();
    v21 = v23;
  }
  *(_QWORD *)v25 = v21;
  *(_BYTE *)(v25 + 8) = v13;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v24);
LABEL_10:
  sub_1AE4FCE0C();
}

uint64_t sub_1AE4F7EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  NSObject *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint8_t *v19;
  os_signpost_id_t v20;
  _QWORD v21[2];
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  char v27;

  sub_1AE614A44();
  v2 = sub_1AE925B18();
  v24 = *(_QWORD *)(v2 - 8);
  v25 = v2;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78]();
  sub_1AE4F9024();
  v23 = v3;
  v4 = sub_1AE508FBC();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78]();
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1AE5035E4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78]();
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1AE4FBB00();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v0 + *(int *)(v11 + 24), v7);
  v26 = *(const char **)v0;
  v12 = *(_BYTE *)(v0 + 16);
  swift_retain();
  v13 = sub_1AE925B00();
  sub_1AE925B24();
  v22 = sub_1AE926664();
  result = sub_1AE926700();
  if ((result & 1) == 0)
  {
    swift_release();

    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v21[0] = v8;
  v21[1] = v1;
  if ((v12 & 1) == 0)
  {
    if (v26)
    {
      v16 = v24;
      v15 = v25;
      v17 = v23;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v26 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v26 >> 11 != 27)
  {
    v16 = v24;
    v15 = v25;
    v17 = v23;
    if (v26 >> 16 <= 0x10)
    {
      v26 = &v27;
LABEL_9:
      swift_retain();
      sub_1AE925B48();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v16 + 88))(v17, v15) == *MEMORY[0x1E0DF2190])
      {
        v18 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
        v18 = "";
      }
      v19 = (uint8_t *)sub_1AE4F69B0();
      *(_WORD *)v19 = 0;
      v20 = sub_1AE925AD0();
      _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v13, (os_signpost_type_t)v22, v20, v26, v18, v19, 2u);
      sub_1AE4F9064();
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

void sub_1AE4F8160(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_1AE4F8198()
{
  return swift_beginAccess();
}

uint64_t sub_1AE4F81B0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4F81B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F81C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  return sub_1AE536B1C(v2, v1, v0, v3);
}

unint64_t sub_1AE4F81D4()
{
  return sub_1AE536B9C();
}

uint64_t sub_1AE4F81DC()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4F81F8()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 4112);
}

void sub_1AE4F8208()
{
  uint64_t v0;
  unint64_t v1;

  sub_1AE893644(v0, v1);
}

uint64_t sub_1AE4F8214()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE4F821C()
{
  return sub_1AE926C70();
}

uint64_t _s20IntelligencePlatform39EntityResolutionRankingStatefulFeedbackC4kindA2C0G4KindO_tcfCTj_0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1AE4F8244(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1AE4FB608(v4, a2);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(_QWORD *)(v5 - 88) = v4;
  return v7(v3, v6, v4);
}

uint64_t sub_1AE4F826C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 16);
}

uint64_t sub_1AE4F8284()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE4F82BC()
{
  return sub_1AE9269F4();
}

uint64_t sub_1AE4F82C8()
{
  return sub_1AE925F8C();
}

void *sub_1AE4F82D8(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

id sub_1AE4F82EC(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 3528));
}

void sub_1AE4F82F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = 10075;
  *(_QWORD *)(v1 - 120) = 0xE200000000000000;
  *(_QWORD *)(v1 - 104) = v0;
}

void sub_1AE4F830C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = 10075;
  *(_QWORD *)(v0 + 40) = 0xE200000000000000;
}

uint64_t sub_1AE4F8320()
{
  return sub_1AE926ED4();
}

BOOL sub_1AE4F833C(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t sub_1AE4F8344()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4F8350@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  return v3(v1 + a1, v2);
}

uint64_t sub_1AE4F835C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  *(_QWORD *)(a1 + ((v1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v1;
  v6 = (_QWORD *)(v2[6] + 16 * v1);
  *v6 = v5;
  v6[1] = v4;
  *(_QWORD *)(v2[7] + 8 * v1) = v3;
  ++v2[2];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F83AC()
{
  uint64_t v0;

  return sub_1AE50BDB4(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

__n128 sub_1AE4F83BC()
{
  __n128 *v0;
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = *(_QWORD *)(v1 - 96);
  v3 = *(_BYTE *)(v1 - 88);
  result = *(__n128 *)(v1 - 112);
  v0[5] = result;
  v0[6].n128_u64[0] = v2;
  v0[6].n128_u8[8] = v3;
  return result;
}

uint64_t sub_1AE4F83D8()
{
  return 0x7865646E496F6ELL;
}

uint64_t sub_1AE4F83F0(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, *(_QWORD *)(v1 - 152));
}

void sub_1AE4F8410()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 256) = 0;
  *(_QWORD *)(v0 - 248) = 0xE000000000000000;
}

uint64_t sub_1AE4F8420(uint64_t a1)
{
  unint64_t v1;

  return sub_1AE50BDB4(a1, v1);
}

void sub_1AE4F8428(uint64_t a1, char a2)
{
  char *v2;
  uint64_t v3;
  char *v4;
  char *v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  objc_class *v25;
  _BYTE v26[144];
  _BYTE v27[144];
  _BYTE v28[144];
  objc_super v29;
  _BYTE v30[144];
  _BYTE v31[144];
  _QWORD v32[18];

  v4 = v2;
  if (a1 == 6)
  {
    v32[3] = &type metadata for Features.FeatureFlag;
    v32[4] = sub_1AE5D7DF8();
    LOBYTE(v32[0]) = 26;
    v7 = v2;
    v8 = sub_1AE9249E4();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v32);
    if ((v8 & 1) == 0)
    {
      sub_1AE5716CC();
      sub_1AE4F6778();
      sub_1AE508AFC();
      sub_1AE508FC4(v9, v10);
      goto LABEL_19;
    }
  }
  else
  {
    v13 = v2;
  }
  if (qword_1ED319C70 != -1)
    swift_once();
  v14 = sub_1AE4F6854();
  sub_1AE4FB608(v14, (uint64_t)qword_1ED31AD58);
  v15 = sub_1AE925B54();
  v16 = sub_1AE926604();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    *(_DWORD *)v17 = 134218240;
    v32[0] = a1;
    sub_1AE92676C();
    *(_WORD *)(v17 + 12) = 1024;
    LODWORD(v32[0]) = a2 & 1;
    sub_1AE92676C();
    _os_log_impl(&dword_1AE4F2000, v15, v16, "ECR in process: initialized for mode: %ld and warmup: %{BOOL}d", (uint8_t *)v17, 0x12u);
    sub_1AE4F9064();
  }

  *(_QWORD *)&v4[OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_defaultMode] = a1;
  v18 = 0xE800000000000000;
  v19 = 0x6465636E616C6162;
  switch(a1)
  {
    case 1:
      break;
    case 2:
      v18 = 0xEB00000000797469;
      v19 = 0x6C61755168676968;
      break;
    case 3:
      v20 = 0x786966657270;
      goto LABEL_16;
    case 4:
      v19 = 0xD000000000000014;
      v18 = 0x80000001AE9750D0;
      break;
    case 5:
      v18 = 0x80000001AE9750F0;
      v19 = 0xD000000000000010;
      break;
    case 6:
      v20 = 0x646972627968;
LABEL_16:
      v19 = v20 & 0xFFFFFFFFFFFFLL | 0x6553000000000000;
      v18 = 0xEC00000068637261;
      break;
    default:
      v18 = 0xEA00000000007963;
      v19 = 0x6E6574614C776F6CLL;
      break;
  }
  static EntityResolutionConfig.fromResource(configName:)(v19, v18, (uint64_t)v30);
  swift_bridgeObjectRelease();
  sub_1AE615F2C((uint64_t)v30, (uint64_t)v31);
  sub_1AE615F2C((uint64_t)v31, (uint64_t)v32);
  if (sub_1AE5DE050((uint64_t)v32) != 1)
  {
    v21 = &v4[OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_defaultConfig];
    sub_1AE4FFF90(&v4[OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_defaultConfig], v32);
    type metadata accessor for EntityResolutionHandlerPool();
    v22 = sub_1AE4F66BC();
    type metadata accessor for EntityResolutionHandlerPool.EntityRerankerHandlerStore();
    sub_1AE4F66BC();
    *(_QWORD *)(v22 + 16) = sub_1AE4F5AC0();
    *(_QWORD *)&v4[OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_modelPool] = v22;
    if (qword_1ED31C9B0 != -1)
      swift_once();
    v23 = (void *)qword_1ED31C9A0;
    type metadata accessor for EntityResolutionServicePool();
    sub_1AE4F66BC();
    sub_1AE4F5240((uint64_t)v23);
    *(_QWORD *)&v4[OBJC_IVAR____TtC20IntelligencePlatform36EntityResolutionTextInProcessService_servicePool] = v24;
    if ((a2 & 1) != 0)
    {
      sub_1AE4FFF90(v30, v21);
      sub_1AE4FFF90(v28, v21);
      sub_1AE5DD3A4((uint64_t)v30);
      sub_1AE4F52A8((uint64_t)v28);
      if (v3)
      {
        sub_1AE5DD3EC((uint64_t)v30);
        sub_1AE4FFF90(v28, v21);
        sub_1AE5DD3EC((uint64_t)v28);
        swift_release();

        swift_release();
        goto LABEL_26;
      }
      sub_1AE5DD3EC((uint64_t)v30);
      sub_1AE4FFF90(v27, v21);
      sub_1AE4FFF90(v26, v21);
      sub_1AE5DD3A4((uint64_t)v27);
      sub_1AE4F9C2C((uint64_t)v26);
      sub_1AE5DD3EC((uint64_t)v27);
    }

    v25 = (objc_class *)type metadata accessor for EntityResolutionTextInProcessService();
    v29.receiver = v4;
    v29.super_class = v25;
    objc_msgSendSuper2(&v29, sel_init);
    goto LABEL_28;
  }
  sub_1AE5716CC();
  sub_1AE4F6778();
  *(_OWORD *)v11 = xmmword_1AE944A30;
  v12 = 9;
LABEL_19:
  *(_BYTE *)(v11 + 16) = v12;
  swift_willThrow();

LABEL_26:
  type metadata accessor for EntityResolutionTextInProcessService();
  swift_deallocPartialClassInstance();
LABEL_28:
  sub_1AE4F667C();
}

uint64_t type metadata accessor for EntityResolutionServicePool()
{
  return objc_opt_self();
}

uint64_t sub_1AE4F88D8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;

  sub_1AE501548(&qword_1ED3187F0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F9024();
  sub_1AE501548(qword_1ED319490);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE506540(v4, v24);
  sub_1AE501548(&qword_1ED319488);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1ED319478);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  v7 = sub_1AE501548(&qword_1ED319480);
  MEMORY[0x1E0C80A78](v7);
  sub_1AE5009EC();
  v8 = sub_1AE501548(&qword_1ED319470);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F666C();
  v12 = v11 - v10;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE50B168();
  sub_1AE926F34();
  if (!v25)
  {
    v13 = sub_1AE926C1C();
    v14 = *(_QWORD *)(v13 + 16);
    v15 = v8;
    if (v14)
    {
      v16 = *(unsigned __int8 *)(v13 + 32);
      sub_1AE50AF34(1, v14, v13, v13 + 32, 0, (2 * v14) | 1);
      v18 = v17;
      v20 = v19;
      swift_bridgeObjectRelease();
      if (v18 == v20 >> 1)
        __asm { BR              X9 }
      v15 = v8;
    }
    v8 = sub_1AE926988();
    sub_1AE4F6778();
    v22 = v21;
    sub_1AE501548(&qword_1EED99C38);
    *v22 = &type metadata for CandidateGenerationAlgorithm;
    sub_1AE926B5C();
    sub_1AE92697C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v22, *MEMORY[0x1E0DEC450], v8);
    swift_willThrow();
    sub_1AE4FC5B4();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v15);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  return v8;
}

double sub_1AE4F8E0C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  sub_1AE4F8E58();
  if (!v1)
  {
    *(_OWORD *)a1 = v4;
    *(_OWORD *)(a1 + 16) = v5;
    result = *(double *)&v6;
    *(_OWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 48) = v7;
  }
  return result;
}

void sub_1AE4F8E58()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  sub_1AE501548(&qword_1ED319450);
  MEMORY[0x1E0C80A78]();
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE4F9900();
  sub_1AE4F680C();
  if (v0)
  {
    sub_1AE4F90EC();
  }
  else
  {
    v5 = sub_1AE4F69C4();
    v7 = v6;
    v8 = sub_1AE4F69C4();
    v16 = v9;
    v14 = v8;
    v10 = sub_1AE4F69C4();
    v12 = v11;
    v13 = v10;
    sub_1AE501548(&qword_1ED318B90);
    sub_1AE4F989C(&qword_1ED3193F8, &qword_1ED318B90, (uint64_t (*)(void))sub_1AE5DDF9C, MEMORY[0x1E0DEAF40]);
    sub_1AE926BEC();
    sub_1AE4F777C();
    sub_1AE4F90EC();
    *(_QWORD *)v4 = v5;
    *(_BYTE *)(v4 + 8) = v7 & 1;
    *(_QWORD *)(v4 + 16) = v14;
    *(_BYTE *)(v4 + 24) = v16 & 1;
    *(_QWORD *)(v4 + 32) = v13;
    *(_BYTE *)(v4 + 40) = v12 & 1;
    *(_QWORD *)(v4 + 48) = v15;
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE4F9018()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE4F9038()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4F9040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return a12;
}

uint64_t sub_1AE4F9050@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t sub_1AE4F905C()
{
  return sub_1AE926F10();
}

void sub_1AE4F9064()
{
  JUMPOUT(0x1AF454C78);
}

uint64_t sub_1AE4F907C()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
}

uint64_t sub_1AE4F9084()
{
  return sub_1AE925374();
}

uint64_t sub_1AE4F908C()
{
  return sub_1AE88163C();
}

uint64_t sub_1AE4F9094()
{
  return swift_beginAccess();
}

uint64_t sub_1AE4F90A0()
{
  return swift_task_dealloc();
}

uint64_t sub_1AE4F90A8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AE4F90B4()
{
  return swift_task_switch();
}

uint64_t sub_1AE4F90C0()
{
  return swift_task_dealloc();
}

uint64_t sub_1AE4F90E0()
{
  return sub_1AE926EE0();
}

uint64_t sub_1AE4F90EC()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
}

uint64_t sub_1AE4F9124()
{
  return sub_1AE926BB0();
}

uint64_t sub_1AE4F9134(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_1AE4F9148()
{
  return swift_allocObject();
}

uint64_t sub_1AE4F9154()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AE54C814(v1, v0);
}

uint64_t sub_1AE4F9160()
{
  return 0;
}

void sub_1AE4F916C()
{
  void *v0;

}

uint64_t sub_1AE4F9174()
{
  return sub_1AE9261CC();
}

uint64_t sub_1AE4F91A4()
{
  return sub_1AE925248();
}

uint64_t sub_1AE4F91C4()
{
  return sub_1AE926D60();
}

void sub_1AE4F91D4()
{
  void *v0;

}

id sub_1AE4F91DC()
{
  void *v0;

  return v0;
}

uint64_t sub_1AE4F91E4()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4F91F8()
{
  return swift_release();
}

uint64_t sub_1AE4F9204()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16 * v1);
}

uint64_t sub_1AE4F921C()
{
  return 0x7865646E496F6ELL;
}

uint64_t sub_1AE4F9230()
{
  return sub_1AE926BB0();
}

uint64_t sub_1AE4F9240()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE4F9250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE4F9260()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
}

uint64_t sub_1AE4F9268()
{
  return swift_unknownObjectRetain();
}

BOOL sub_1AE4F9278()
{
  os_log_type_t v0;
  NSObject *v1;

  return os_log_type_enabled(v1, v0);
}

unint64_t sub_1AE4F92B4(uint64_t a1)
{
  char v1;

  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

void sub_1AE4F92DC(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1AE4F92E8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return sub_1AE92676C();
}

float sub_1AE4F9300()
{
  return 0.0;
}

uint64_t sub_1AE4F9314(void (*a1)(_QWORD))
{
  return sub_1AE5DA160(a1);
}

void sub_1AE4F931C()
{
  void *v0;

}

uint64_t sub_1AE4F9324()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4F933C()
{
  return swift_task_alloc();
}

uint64_t sub_1AE4F935C()
{
  uint64_t v0;

  return sub_1AE578FB0(*(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 424));
}

uint64_t sub_1AE4F936C()
{
  return 0;
}

uint64_t sub_1AE4F9388()
{
  return 0x745F797469746E65;
}

uint64_t sub_1AE4F93C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, a1, v2);
}

uint64_t sub_1AE4F93D8()
{
  return sub_1AE5373F8();
}

uint64_t sub_1AE4F93E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

double sub_1AE4F9408()
{
  return 9.22337204e18;
}

uint64_t sub_1AE4F9418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 216) + 8))(v0, v1);
}

uint64_t sub_1AE4F942C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1AE4F943C()
{
  return swift_retain();
}

uint64_t sub_1AE4F9444()
{
  return sub_1AE926A54();
}

__n128 sub_1AE4F9488()
{
  __n128 *v0;

  return v0[1];
}

uint64_t sub_1AE4F9494()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE4F949C()
{
  return sub_1AE9269B8();
}

uint64_t sub_1AE4F94C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1AE4F94D0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4F94E0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE4F94EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1AE4F94F4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE4F94FC()
{
  return swift_release();
}

void sub_1AE4F9510()
{
  JUMPOUT(0x1AF453B80);
}

void sub_1AE4F9518(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v1 - 256) = a1;
  *(_QWORD *)(v6 - 160) = v2;
  *(_QWORD *)(v6 - 152) = v5;
  *(_QWORD *)(v6 - 144) = v4;
  *(_QWORD *)(v6 - 136) = v3;
}

uint64_t sub_1AE4F952C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 104) = v0;
  return swift_task_dealloc();
}

uint64_t sub_1AE4F954C()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AE50BDB4(v1, v0);
}

uint64_t sub_1AE4F9558()
{
  return 1935763488;
}

uint64_t sub_1AE4F9570()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE4F9580()
{
  return sub_1AE9245A0();
}

void sub_1AE4F959C()
{
  sub_1AE51B560();
}

uint64_t sub_1AE4F95A8()
{
  return 0x6D614E7473726966;
}

uint64_t sub_1AE4F95F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_1AE4F9600()
{
  return sub_1AE92691C();
}

uint64_t sub_1AE4F9614()
{
  return sub_1AE925B0C();
}

uint64_t sub_1AE4F9630()
{
  return sub_1AE9243A8();
}

id sub_1AE4F9650()
{
  void *v0;

  return v0;
}

void sub_1AE4F9658(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  void (*v9)(uint64_t, char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t);

  sub_1AE807628(a1, a2, a3, a4, a5, a6, a7, a8, a9, v9);
}

void sub_1AE4F9660(uint64_t a1)
{
  sub_1AE52F13C(a1);
}

uint64_t sub_1AE4F9674@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t (*v9)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  return sub_1AE80DF7C(a1, a2, a3, a4, a5, a6, a7, a8, a9, v9);
}

uint64_t sub_1AE4F967C(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 1, 1, a1);
}

uint64_t sub_1AE4F96A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

void sub_1AE4F96B4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 232) = 0;
  *(_QWORD *)(v0 + 280) = 0;
}

uint64_t sub_1AE4F96E0()
{
  return swift_endAccess();
}

uint64_t sub_1AE4F96E8(uint64_t a1)
{
  return sub_1AE515C74(a1, 0xE100000000000000);
}

uint64_t sub_1AE4F96F0()
{
  return type metadata accessor for Embedding();
}

void sub_1AE4F96F8()
{
  sub_1AE519C48();
}

uint64_t sub_1AE4F9704()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE4F9714()
{
  sub_1AE51A614();
}

uint64_t sub_1AE4F972C()
{
  return sub_1AE805E40(6, 0, 0, 0xE0u);
}

uint64_t sub_1AE4F9740()
{
  return 0x7265746C6966;
}

uint64_t sub_1AE4F9754()
{
  return sub_1AE926A48();
}

uint64_t sub_1AE4F9760()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE4F9788()
{
  return sub_1AE926220();
}

uint64_t sub_1AE4F979C()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE4F97B8()
{
  return sub_1AE926C70();
}

uint64_t sub_1AE4F97D0(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, a1);
}

uint64_t sub_1AE4F97E4()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE4F97F8()
{
  return sub_1AE92538C();
}

_QWORD *sub_1AE4F9804()
{
  uint64_t v0;

  return sub_1AE4F9858((_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 120));
}

uint64_t sub_1AE4F9828@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

_QWORD *sub_1AE4F9834()
{
  uint64_t v0;

  return sub_1AE4F9858((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1AE4F9840()
{
  uint64_t v0;

  return v0;
}

_QWORD *sub_1AE4F9858(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1AE4F989C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = sub_1AE523CF0(a2);
    v9 = a3();
    result = MEMORY[0x1AF454B70](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AE4F9900()
{
  unint64_t result;

  result = qword_1ED3192A0;
  if (!qword_1ED3192A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FF18, &type metadata for PreprocessorConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3192A0);
  }
  return result;
}

id sub_1AE4F993C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1AE4F99B0();
    v4 = (void *)sub_1AE925C44();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

unint64_t sub_1AE4F99B0()
{
  unint64_t result;

  result = qword_1ED31C458;
  if (!qword_1ED31C458)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED31C458);
  }
  return result;
}

uint64_t sub_1AE4F99EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v9;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_t log;

  v11 = (uint64_t *)(*a1
                  + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_inferenceFeatureView);
  v13 = *v11;
  v12 = v11[1];
  v14 = v11[2];
  if (v12)
  {
    *a9 = v13;
    a9[1] = v12;
    a9[2] = v14;
  }
  else
  {
    ViewService.inferenceFeatureView.getter((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, v20);
    if (v9)
    {
      if (qword_1ED319C70 != -1)
        swift_once();
      v15 = sub_1AE925B6C();
      sub_1AE4FB608(v15, (uint64_t)qword_1ED31AD58);
      sub_1AE505B14();
      sub_1AE505B14();
      v16 = sub_1AE925B54();
      v17 = sub_1AE9265EC();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)sub_1AE4F66A0();
        v21 = (_QWORD *)sub_1AE4F66A0();
        *(_DWORD *)v18 = 138412290;
        sub_1AE505B14();
        v24 = _swift_stdlib_bridgeErrorToNSError();
        sub_1AE92676C();
        *v21 = v24;
        sub_1AE4FCDF0();
        sub_1AE4FCDF0();
        _os_log_impl(&dword_1AE4F2000, v16, v17, "Failed to fetch inferenceFeatureView with error: %@", v18, 0xCu);
        sub_1AE501548(&qword_1ED319410);
        swift_arrayDestroy();
        sub_1AE4F9064();
      }
      sub_1AE4FCDF0();
      sub_1AE4FCDF0();
      sub_1AE4FCDF0();

      *a9 = 0;
      a9[1] = 0;
      a9[2] = 0;
    }
    else
    {
      log = (os_log_t)*v11;
      v22 = v11[1];
      *v11 = v23;
      v11[1] = v25;
      v11[2] = v26;
      sub_1AE50BA28(v23, v25);
      sub_1AE50BA54((uint64_t)log, v22);
      *a9 = v23;
      a9[1] = v25;
      a9[2] = v26;
    }
  }
  return sub_1AE50BA28(v13, v12);
}

void sub_1AE4F9C2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  char v26;
  uint64_t v27;
  uint64_t (*v28)();
  _QWORD *(*v29)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  void (*v30)(uint64_t);
  void *v31;
  uint64_t v33[5];
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v3 = v1;
  type metadata accessor for LemmatizedSubgraphView();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  type metadata accessor for EntityAliasView();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F90C8();
  v9 = *(_QWORD *)(a1 + 120);
  v10 = *(unsigned __int8 *)(a1 + 138);
  if (*(_BYTE *)(a1 + 137) == 1)
  {
    sub_1AE60DF78((uint64_t)&v34);
    if (v1)
      return;
    swift_unknownObjectRelease();
    v39 = v35;
    a1 = v36;
    sub_1AE574264((uint64_t)&v39);
    swift_unknownObjectRelease();
    v38 = v37;
    sub_1AE574264((uint64_t)&v38);
  }
  if (v10)
  {
    sub_1AE507060();
    os_unfair_lock_lock((os_unfair_lock_t)a1);
    sub_1AE4F9094();
    sub_1AE509964();
    v11 = (_QWORD *)sub_1AE507534();
    sub_1AE4F99EC(v11, v12, v13, v14, v15, v16, v17, v18, v19);
    if (v1)
    {
      sub_1AE4F6A6C();
      sub_1AE60EE1C();
      __break(1u);
      sub_1AE4F6A6C();
      sub_1AE60EE1C();
      sub_1AE4FC564();
      __break(1u);
      return;
    }
    sub_1AE4F6A6C();
    sub_1AE60EE1C();
    sub_1AE4FC564();
    sub_1AE50BA54(v33[0], v33[1]);
    sub_1AE507060();
    os_unfair_lock_lock((os_unfair_lock_t)a1);
    sub_1AE509964();
    v20 = (uint64_t *)sub_1AE507534();
    sub_1AE4F9EC8(v20, v21, v22);
    v3 = 0;
    sub_1AE4F6A6C();
    sub_1AE60EE1C();
    sub_1AE4FC564();
    swift_release();
  }
  v23 = *(_QWORD *)(v9 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain();
    v24 = 0;
    while (1)
    {
      v25 = *(unsigned __int8 *)(v9 + v24 + 32);
      if (!(v25 >> 6))
        break;
      if (v25 >> 6 == 1)
      {
        v33[3] = (uint64_t)&type metadata for Features.FeatureFlag;
        v33[4] = sub_1AE5D7DF8();
        LOBYTE(v33[0]) = 26;
        v26 = sub_1AE9249E4();
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v33);
        if ((v26 & 1) != 0)
        {
          sub_1AE60E04C();
          if (v3)
            goto LABEL_24;
          v27 = (uint64_t)v7;
          v28 = type metadata accessor for LemmatizedSubgraphView;
LABEL_16:
          sub_1AE555C64(v27, (uint64_t (*)(_QWORD))v28);
        }
      }
      else if (v25 != 128)
      {
        if (v25 == 129)
        {
          v29 = sub_1AE60EB10;
          v30 = sub_1AE81B5E0;
        }
        else
        {
          v29 = sub_1AE60E964;
          v30 = sub_1AE81B51C;
        }
        v31 = (void *)sub_1AE60E0E4((uint64_t)v29, (uint64_t (*)(uint64_t, _OWORD *))v30);
        if (v3)
        {
LABEL_24:
          swift_bridgeObjectRelease();
          return;
        }

      }
      if (v23 == ++v24)
        goto LABEL_24;
    }
    sub_1AE60E04C();
    if (v3)
      goto LABEL_24;
    v27 = v2;
    v28 = type metadata accessor for EntityAliasView;
    goto LABEL_16;
  }
}

uint64_t sub_1AE4F9EC8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v15;
  uint64_t v16;
  char v17;

  v5 = *a1;
  v6 = OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_rankingService;
  if (*(_QWORD *)(*a1 + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_rankingService))
  {
    v7 = *(_QWORD **)(*a1
                    + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_rankingService);
  }
  else
  {
    v8 = *(void **)(a2 + 24);
    type metadata accessor for EntityResolutionRankingService();
    swift_allocObject();
    v9 = EntityResolutionRankingService.init(config:viewService:)((uint64_t)&v17, v8);
    if (v3)
    {
      if (qword_1ED319C70 != -1)
        swift_once();
      v10 = sub_1AE925B6C();
      sub_1AE4FB608(v10, (uint64_t)qword_1ED31AD58);
      sub_1AE505AC0();
      sub_1AE505AC0();
      v11 = sub_1AE925B54();
      v12 = sub_1AE9265EC();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)sub_1AE4F66A0();
        v15 = (_QWORD *)sub_1AE4F66A0();
        *(_DWORD *)v13 = 138412290;
        sub_1AE505AC0();
        v16 = _swift_stdlib_bridgeErrorToNSError();
        sub_1AE92676C();
        *v15 = v16;
        sub_1AE4F931C();
        sub_1AE4F931C();
        _os_log_impl(&dword_1AE4F2000, v11, v12, "Failed to fetch Entity Resolution Ranking Service with error: %@", v13, 0xCu);
        sub_1AE501548(&qword_1ED319410);
        swift_arrayDestroy();
        sub_1AE4F9064();
      }
      sub_1AE4F931C();
      sub_1AE4F931C();
      sub_1AE4F931C();

      v7 = 0;
    }
    else
    {
      v7 = v9;
      *(_QWORD *)(v5 + v6) = v9;
      swift_retain();
      swift_release();
    }
  }
  *a3 = v7;
  return swift_retain();
}

void ExpirableLazyBox.wrappedValue.getter()
{
  uint64_t v0;

  UnfairLockedBox.access<A>(_:)((void (*)(char *))sub_1AE5023D4, v0, *(_QWORD *)(*(_QWORD *)v0 + 88));
}

uint64_t sub_1AE4FA124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EED9F238 + dword_1EED9F238);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_1AE4FC490;
  return v12(a1, a2, a4, a5);
}

uint64_t initializeWithCopy for LogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1AE925B0C();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t sub_1AE4FA234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  v5[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AE4FA2C4(uint64_t a1)
{
  uint64_t result;

  swift_release();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24))
    return swift_release();
  return result;
}

void PriorityQueue.pop()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AE501144(a1, *(_QWORD *)(a1 + 16), a3, a4);
  Heap.removeRoot()();
}

void PriorityQueue.push(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AE501144(a1, *(_QWORD *)(a2 + 16), a3, a4);
  Heap.append(_:)();
}

uint64_t type metadata accessor for Heap(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Heap);
}

void UserDefault.wrappedValue.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = (void *)MEMORY[0x1AF454348]();
  sub_1AE501354(v2, *(_QWORD *)(a1 + 16), v6, v7, a2);
  objc_autoreleasePoolPop(v5);
}

uint64_t destroy for LogSignpost(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1AE925B0C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

void PriorityQueue.peek()()
{
  sub_1AE9262B0();
  sub_1AE4FEEAC();
}

uint64_t sub_1AE4FA43C()
{
  return sub_1AE926520();
}

_QWORD *sub_1AE4FA464(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v6 = a2 + 3;
  v5 = a2[3];
  swift_retain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = a2[4];
    a1[3] = v5;
    a1[4] = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v6;
  }
  return a1;
}

void static Analytics.sendEventForProductionLazy(eventName:eventPayloadBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;

  v8 = (void *)MEMORY[0x1AF454348]();
  sub_1AE4FA530(a1, a2, a3, a4);
  sub_1AE4FFBE4(v8);
}

void sub_1AE4FA530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  _QWORD v8[6];

  sub_1AE925E3C();
  sub_1AE925F74();
  sub_1AE925F74();
  v6 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  v8[4] = a3;
  v8[5] = a4;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1AE4F993C;
  v8[3] = &unk_1E5DCABB8;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v7);

}

uint64_t sub_1AE4FA62C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[9];
  v2 = v0[7];
  v3 = v0[8];
  sub_1AE926DF0();
  swift_getAssociatedConformanceWitness();
  sub_1AE926A24();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[11] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[12] = v5;
  *v5 = v0;
  v5[1] = sub_1AE4FD86C;
  return sub_1AE926DFC();
}

uint64_t sub_1AE4FA70C()
{
  sub_1AE4FA72C();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE4FA72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  v2 = sub_1AE92670C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  v4 = sub_1AE92670C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_weakDestroy();
  swift_weakDestroy();
  return v0;
}

Swift::Void __swiftcall LRUCache.clear()()
{
  uint64_t **v0;
  uint64_t *v1;

  v1 = *v0;
  sub_1AE4FB9BC();
  type metadata accessor for LRUCacheNode(0, v1[10], v1[11], v1[12]);
  sub_1AE925CF8();
  sub_1AE925CEC();
  sub_1AE4F7804();
  sub_1AE50AE0C();
  sub_1AE50AE0C();
}

void EntityResolutionConfig.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _QWORD v37[18];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;

  sub_1AE4F67EC();
  v4 = v3;
  v6 = v5;
  v7 = sub_1AE501548(&qword_1ED319458);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE5009EC();
  v36 = (uint64_t)v4;
  sub_1AE4F9858(v4, v4[3]);
  sub_1AE50B6A4();
  sub_1AE926F34();
  if (v0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v4);
  }
  else
  {
    v35 = v6;
    sub_1AE50B700();
    sub_1AE501B7C();
    v32 = v38;
    v33 = v40;
    v34 = v42;
    v31 = v39;
    v66 = v39;
    v65 = v41;
    v64 = v43;
    LOBYTE(v37[0]) = 1;
    swift_bridgeObjectRetain();
    sub_1AE5DE5C0();
    sub_1AE501B7C();
    v25 = v43;
    v26 = v41;
    v30 = v44;
    v27 = v38;
    v28 = v40;
    v29 = v42;
    v63 = v39;
    v62 = v41;
    v61 = v43;
    LOBYTE(v37[0]) = 2;
    v9 = sub_1AE50B5A8();
    swift_bridgeObjectRetain();
    sub_1AE501B7C();
    if (v9)
    {
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v7);
      sub_1AE4F6728();
      sub_1AE4F66E8();
      v10 = 0;
      v11 = v36;
    }
    else
    {
      v24 = v44;
      v20 = v43;
      v21 = v41;
      v22 = v39;
      v23 = v38;
      LOBYTE(v37[0]) = 3;
      sub_1AE50B508();
      sub_1AE5DE5C0();
      sub_1AE501B7C();
      v12 = v38;
      v13 = v39;
      v14 = v40;
      v19 = BYTE1(v40);
      v60 = v40;
      LOBYTE(v37[0]) = 4;
      v15 = sub_1AE50B808();
      swift_bridgeObjectRetain();
      sub_1AE501B7C();
      if (!v15)
      {
        v18 = BYTE2(v40);
        v16 = v38;
        v17 = sub_1AE926BBC();
        sub_1AE4FFF7C();
        v37[0] = v32;
        LOBYTE(v37[1]) = v31;
        v37[2] = v33;
        LOBYTE(v37[3]) = v26;
        v37[4] = v34;
        LOBYTE(v37[5]) = v25;
        v37[6] = v30;
        v37[7] = v27;
        LOBYTE(v37[8]) = v22;
        v37[9] = v28;
        LOBYTE(v37[10]) = v21;
        v37[11] = v29;
        LOBYTE(v37[12]) = v20;
        v37[13] = v24;
        LOBYTE(v37[14]) = v23;
        v37[15] = v12;
        v37[16] = v13;
        LOBYTE(v37[17]) = v14;
        BYTE1(v37[17]) = v19;
        BYTE2(v37[17]) = v18;
        BYTE3(v37[17]) = v16;
        BYTE4(v37[17]) = v17 & 1;
        sub_1AE5DD3A4((uint64_t)v37);
        swift_bridgeObjectRelease();
        sub_1AE4F66E8();
        sub_1AE4F76D8();
        memcpy(v35, v37, 0x8DuLL);
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v36);
        v38 = v32;
        LOBYTE(v39) = v66;
        v40 = v33;
        v41 = v65;
        v42 = v34;
        v43 = v64;
        v44 = v30;
        v45 = v27;
        v46 = v63;
        v47 = v28;
        v48 = v62;
        v49 = v29;
        v50 = v61;
        v51 = v24;
        v52 = v23;
        v53 = v12;
        v54 = v13;
        v55 = v60;
        v56 = v19;
        v57 = v18;
        v58 = v16;
        v59 = v17 & 1;
        sub_1AE5DD3EC((uint64_t)&v38);
        goto LABEL_6;
      }
      sub_1AE4FFF7C();
      sub_1AE4F6728();
      sub_1AE4F66E8();
      sub_1AE4F76D8();
      v10 = 1;
      v11 = v36;
    }
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v11);
    sub_1AE4F6728();
    sub_1AE4F66E8();
    if ((v10 & 1) != 0)
      swift_bridgeObjectRelease();
  }
LABEL_6:
  sub_1AE4F667C();
}

void sub_1AE4FADB4()
{
  uint64_t (**v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_signpost_type_t v11;
  _WORD *v12;
  os_signpost_id_t v13;
  uint64_t v14;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1AE4F67EC();
  v5 = v4;
  v6 = sub_1AE508FBC();
  v22 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78]();
  sub_1AE6148A8(v7, v19);
  MEMORY[0x1E0C80A78]();
  v8 = sub_1AE5062C8();
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78]();
  v20 = *(_QWORD *)(sub_1AE501BC0() - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78]();
  v9 = sub_1AE4FD168();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78]();
  sub_1AE4F6744();
  if (qword_1ED31C728 != -1)
    swift_once();
  v10 = sub_1AE4FB608(v8, (uint64_t)qword_1ED31C710);
  v24 = v8;
  sub_1AE6149B4(v1, v10, v0[2]);
  sub_1AE614868();
  sub_1AE925B00();
  sub_1AE614A9C();
  sub_1AE925B00();
  v11 = sub_1AE614A0C();
  if ((sub_1AE614AEC() & 1) != 0)
  {
    v12 = (_WORD *)sub_1AE4F69B0();
    v13 = sub_1AE61480C(v12);
    sub_1AE614850(&dword_1AE4F2000, v14, v11, v13, "ECR.TextClient.warmup", "");
    sub_1AE4F9064();
  }

  sub_1AE6149B4(v21, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
  sub_1AE5086D0();
  v15 = sub_1AE4FCE84();
  v16 = sub_1AE509980();
  sub_1AE4FBA8C(v3, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  *(_QWORD *)v2 = "ECR.TextClient.warmup";
  *(_QWORD *)(v2 + 8) = 21;
  *(_BYTE *)(v2 + 16) = 2;
  *(_QWORD *)(v2 + 24) = v16;
  sub_1AE614A70(v2 + *(int *)(v9 + 24), v20);
  if (qword_1ED319C70 != -1)
    swift_once();
  sub_1AE4F77E8(v24, (uint64_t)qword_1ED31AD58);
  v17 = sub_1AE61496C();
  if (sub_1AE507DAC(v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v18 = 134217984;
    sub_1AE92676C();
    _os_log_impl(&dword_1AE4F2000, v16, v15, "ECR client: warmup for mode: %ld.", v18, 0xCu);
    sub_1AE4F9064();
  }

  sub_1AE506958(OBJC_IVAR___GDEntityResolutionTextClientInner_service);
  (*(void (**)(uint64_t, NSObject *, uint64_t))(v23 + 8))(v5, v16, v23);
  sub_1AE4F7EFC();
  sub_1AE507E38();
  sub_1AE4F667C();
}

uint64_t LRUCache.createOrGet(_:initializer:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint8_t *v70;
  uint64_t (*v71)(void);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t (*v78)(void);

  v70 = (uint8_t *)a3;
  v71 = a2;
  v73 = a4;
  v74 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v77 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](a1);
  v67 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v7);
  v69 = (char *)&v63 - v8;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v63 - v10;
  v13 = *(_QWORD *)(v12 + 88);
  v14 = sub_1AE92670C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v63 - v17;
  v19 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F686C();
  v68 = v20;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v63 - v22;
  v76 = (char *)a1;
  v66 = v4;
  LRUCache.get(_:)(a1, (uint64_t)v18);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v18, 1, v13) == 1)
  {
    v65 = v19;
    v72 = v13;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v24 = sub_1AE925B6C();
    sub_1AE4FB608(v24, (uint64_t)qword_1ED31BC90);
    v25 = v77;
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16);
    v27 = v67;
    v28 = v74;
    v26(v67, (uint64_t)v76, v74);
    v29 = sub_1AE925B54();
    v30 = sub_1AE9265E0();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)sub_1AE4F66A0();
      v78 = (uint64_t (*)(void))sub_1AE4F66A0();
      *(_DWORD *)v31 = 136315138;
      v64 = v31 + 4;
      v26((uint64_t)v69, v27, v28);
      v32 = sub_1AE925E90();
      sub_1AE520ED4(v32, v33, (uint64_t)&v78, v34, v35, v36, v37, v38, v63, (unint64_t)v64, v65, v66, v67, v68, (uint64_t)v69, (uint64_t)v70, (uint64_t)v71, v72, v73,
        v74);
      sub_1AE4FBF9C(v39);
      sub_1AE92676C();
      swift_bridgeObjectRelease();
      sub_1AE4F77C0(v27, *(uint64_t (**)(uint64_t, uint64_t))(v77 + 8));
      _os_log_impl(&dword_1AE4F2000, v29, v30, "LRUCache Miss for %s", v31, 0xCu);
      sub_1AE81DE48();
      sub_1AE4F9064();
    }
    sub_1AE4F77C0(v27, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));

    v58 = v72;
    v59 = v65;
    v60 = v68;
    v61 = v75;
    result = v71();
    if (!v61)
    {
      LRUCache.set(_:forKey:)(v60, (uint64_t)v76);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 32))(v73, v60, v58);
    }
  }
  else
  {
    v40 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v40(v23, v18, v13);
    v41 = v13;
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v42 = sub_1AE925B6C();
    sub_1AE4FB608(v42, (uint64_t)qword_1ED31BC90);
    v43 = v77;
    v44 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
    v45 = v74;
    v44(v11, v76, v74);
    v46 = sub_1AE925B54();
    v47 = sub_1AE9265E0();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = sub_1AE4F66A0();
      v76 = (char *)v40;
      v49 = (uint8_t *)v48;
      v71 = (uint64_t (*)(void))sub_1AE4F66A0();
      v78 = v71;
      v72 = v41;
      *(_DWORD *)v49 = 136315138;
      v70 = v49 + 4;
      v44(v69, v11, v45);
      v50 = sub_1AE925E90();
      sub_1AE520ED4(v50, v51, (uint64_t)&v78, v52, v53, v54, v55, v56, v63, (unint64_t)v64, v65, v66, v67, v68, (uint64_t)v69, (uint64_t)v70, (uint64_t)v71, v72, v73,
        v74);
      sub_1AE4FBF9C(v57);
      sub_1AE92676C();
      swift_bridgeObjectRelease();
      sub_1AE4F77C0((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v77 + 8));
      _os_log_impl(&dword_1AE4F2000, v46, v47, "LRUCache Hit for %s", v49, 0xCu);
      sub_1AE81DE48();
      sub_1AE4F9064();
    }
    sub_1AE4F77C0((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));

    return ((uint64_t (*)(uint64_t, char *, uint64_t))v40)(v73, v23, v41);
  }
  return result;
}

uint64_t static Paths.baseDirectoryURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED31B530 != -1)
    swift_once();
  v2 = sub_1AE924780();
  v3 = sub_1AE4FB608(v2, (uint64_t)qword_1ED31B510);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1AE4FB5A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1AE4F6854();
  v6 = sub_1AE4FB608(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1AE4FB608(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t LogSignpost.signposter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(sub_1AE4FBB00() + 24);
  v4 = sub_1AE5035E4();
  return sub_1AE4FD010(a1, v3, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 16));
}

uint64_t LogSignpost.init(name:state:signposter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  v7 = a6 + *(int *)(sub_1AE4FBB00() + 24);
  v8 = sub_1AE5035E4();
  return sub_1AE4FD010(v7, a5, v8, *(uint64_t (**)(void))(*(_QWORD *)(v8 - 8) + 32));
}

uint64_t type metadata accessor for LogSignpost()
{
  uint64_t result;

  result = qword_1ED31C700;
  if (!qword_1ED31C700)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AE4FB6E0()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE4FB6F0()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE4FB6F8()
{
  return 0x6E6F697461636F6CLL;
}

size_t sub_1AE4FB70C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t sub_1AE4FB730()
{
  return swift_release();
}

uint64_t sub_1AE4FB738(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

void sub_1AE4FB74C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1AE4FB75C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4FB764()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4FB794(unsigned __int8 *a1)
{
  return *a1;
}

void sub_1AE4FB7A4()
{
  sub_1AE519C48();
}

void sub_1AE4FB7B0()
{
  uint64_t v0;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 24));
}

uint64_t sub_1AE4FB7BC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4FB7D0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_1AE4FB810@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_1AE4FB81C()
{
  return swift_willThrow();
}

uint64_t sub_1AE4FB824@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t sub_1AE4FB838@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_1AE4FB844()
{
  return swift_unknownObjectRelease();
}

void sub_1AE4FB84C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
}

BOOL sub_1AE4FB89C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1AE4FB8AC()
{
  return 0x79676F6C6F746E6FLL;
}

id sub_1AE4FB8E0()
{
  void *v0;

  return v0;
}

id sub_1AE4FB8E8(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_1AE4FB908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1AE4FB910()
{
  return sub_1AE924F18();
}

uint64_t sub_1AE4FB928()
{
  return swift_willThrow();
}

uint64_t sub_1AE4FB930()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4FB938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
}

uint64_t sub_1AE4FB94C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 24) + 8))();
}

uint64_t sub_1AE4FB97C()
{
  return sub_1AE926760();
}

void sub_1AE4FB98C()
{
  uint64_t v0;

  sub_1AE5B90E8(v0);
}

uint64_t sub_1AE4FB998()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4FB9BC()
{
  return swift_beginAccess();
}

uint64_t sub_1AE4FB9C4()
{
  return sub_1AE926C88();
}

uint64_t sub_1AE4FB9D4()
{
  return sub_1AE9262B0();
}

uint64_t sub_1AE4FB9F8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_1AE4FBA1C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 96) = v2;
  *(_BYTE *)(v0 + 112) = *(_BYTE *)(v1 + 32);
  static EntityClass.entity.getter();
}

uint64_t sub_1AE4FBA64()
{
  uint64_t v0;

  return v0 + 0x2000;
}

uint64_t sub_1AE4FBA70()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE4FBA84()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE4FBA8C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_1AE4FBA94()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE4FBAA4()
{
  return swift_bridgeObjectRelease_n();
}

BOOL sub_1AE4FBAB0@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1AE4FBAC4(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE536EDC(a1, v1);
}

uint64_t sub_1AE4FBAE0()
{
  return sub_1AE925F74();
}

void sub_1AE4FBAE8()
{
  sub_1AE51ACEC();
}

uint64_t sub_1AE4FBB00()
{
  return type metadata accessor for LogSignpost();
}

uint64_t sub_1AE4FBB08()
{
  return sub_1AE9261CC();
}

uint64_t sub_1AE4FBB14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1AE4FBB28()
{
  return sub_1AE925B6C();
}

uint64_t sub_1AE4FBB3C@<X0>(uint64_t a1@<X1>, char a2@<W8>)
{
  *(_BYTE *)(a1 + 16) = a2;
  return swift_willThrow();
}

uint64_t sub_1AE4FBB48(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1AE4FBB50(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AE4FBB84()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4FBB98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)v3 = a1;
  *(_QWORD *)(v3 + 8) = v1;
  *(_BYTE *)(v3 + 16) = 2;
  *(_QWORD *)(v3 + 24) = v2;
  return v3 + *(int *)(v4 + 24);
}

uint64_t sub_1AE4FBBB8()
{
  return swift_willThrow();
}

void sub_1AE4FBBC4(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2[10] = a1;
  v2[11] = (v1 - 32) | 0x8000000000000000;
  v2[12] = 0x636E657265666E69;
  v2[13] = 0xEF656E69676E4565;
}

uint64_t sub_1AE4FBBF8()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t sub_1AE4FBC20()
{
  uint64_t v0;

  return v0;
}

void sub_1AE4FBC58(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1AE65AC94(a1, a2, a3, a4, a5, a6, a7, a8, v8);
}

uint64_t sub_1AE4FBC60()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4FBC68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;

  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = a1;
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v5;
  *(_WORD *)(a2 + 32) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t *sub_1AE4FBC78()
{
  uint64_t v0;

  return sub_1AE52F6A8((uint64_t *)(v0 - 168));
}

uint64_t sub_1AE4FBC80()
{
  return swift_release();
}

uint64_t sub_1AE4FBC88()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4FBC98()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4FBCB0()
{
  return sub_1AE9269E8();
}

uint64_t sub_1AE4FBCC0()
{
  uint64_t v0;

  return sub_1AE65A5F4(v0);
}

void sub_1AE4FBCCC()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_1AE555C64(v0, v1);
}

uint64_t sub_1AE4FBCDC()
{
  uint64_t *v0;
  uint64_t v1;

  return sub_1AE52982C(v1, v0);
}

void sub_1AE4FBCF8(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(__n128 *)(v7 - 336) = a1;
  *(_QWORD *)(v7 - 304) = v2;
  *(_QWORD *)(v7 - 352) = v3;
  *(_QWORD *)(v7 - 360) = v4;
  *(_QWORD *)(v7 - 320) = v5;
  *(_QWORD *)(v7 - 368) = v6;
  *(_QWORD *)(v7 - 312) = v1;
}

uint64_t sub_1AE4FBD48()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1AE4FBD54()
{
  return swift_dynamicCast();
}

uint64_t sub_1AE4FBD64()
{
  return swift_deallocObject();
}

BOOL sub_1AE4FBD7C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1AE4FBD8C()
{
  return 32;
}

uint64_t sub_1AE4FBD98()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 320) = 0;
  *(_QWORD *)(v0 - 312) = 0xE000000000000000;
  return sub_1AE92691C();
}

uint64_t sub_1AE4FBDB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 96), v1);
}

uint64_t sub_1AE4FBDC8()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE4FBDDC()
{
  return sub_1AE926BB0();
}

uint64_t sub_1AE4FBDE8@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

uint64_t sub_1AE4FBDF8(uint64_t a1, ...)
{
  uint64_t v1;
  va_list va;

  va_start(va, a1);
  return sub_1AE57C238(v1, (uint64_t)va);
}

uint64_t sub_1AE4FBE04(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AE4FBE20()
{
  return sub_1AE925F8C();
}

void sub_1AE4FBE30()
{
  EntityClass.ancestorClassesSet.getter();
}

uint64_t sub_1AE4FBE44()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4FBE54()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE4FBE64()
{
  return 0x7961646874726962;
}

uint64_t sub_1AE4FBE7C()
{
  return swift_getTupleTypeMetadata2();
}

void sub_1AE4FBE84(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1AE4FBE98()
{
  return type metadata accessor for CustomGraphActivityEvent(0);
}

uint64_t sub_1AE4FBEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(v1, v0);
}

id sub_1AE4FBEB4()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 2104));
}

uint64_t sub_1AE4FBEC0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4FBECC@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 128) = a1;
  return sub_1AE926BC8();
}

uint64_t sub_1AE4FBEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE8035B8(a1, a2, v2, 0);
  sub_1AE8035B8(v4, v5, v3, 0);
  return sub_1AE80360C(v4, v5, v3, 0);
}

uint64_t sub_1AE4FBF20@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (*a9)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  return sub_1AE809AAC(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1AE4FBF28()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v1, v0);
}

uint64_t sub_1AE4FBF38()
{
  return sub_1AE925E00();
}

uint64_t sub_1AE4FBF50()
{
  return type metadata accessor for CodableLocation();
}

uint64_t sub_1AE4FBF58()
{
  return sub_1AE926F34();
}

uint64_t sub_1AE4FBF74()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE4FBF7C(uint64_t a1)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 24));
}

uint64_t sub_1AE4FBF94()
{
  return swift_release();
}

uint64_t sub_1AE4FBF9C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return v1 - 88;
}

__n128 *sub_1AE4FBFB0(__n128 *result, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, unint64_t a12)
{
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  result[1] = a2;
  result[2].n128_u64[0] = v12;
  result[2].n128_u64[1] = v14;
  result[3].n128_u64[0] = v20;
  result[3].n128_u64[1] = v19;
  result[4].n128_u64[0] = v13;
  result[4].n128_u64[1] = a12;
  result[5].n128_u64[0] = a11;
  result[5].n128_u64[1] = v15;
  result[6].n128_u64[0] = v18;
  result[6].n128_u64[1] = v17;
  result[7].n128_u64[0] = v16;
  return result;
}

uint64_t sub_1AE4FBFD4(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

uint64_t sub_1AE4FBFFC()
{
  return sub_1AE9262B0();
}

uint64_t sub_1AE4FC014(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  result = sub_1AE805E40(a1, 0, 0, 0xE0u);
  v8 = *(_QWORD *)(v6 - 200);
  *(_QWORD *)(v8 + 72) = v1;
  *(_QWORD *)(v8 + 80) = v3;
  *(_QWORD *)(v8 + 88) = v4;
  *(_QWORD *)(v8 + 96) = v5;
  *(_BYTE *)(v8 + 104) = v2;
  return result;
}

_QWORD *sub_1AE4FC04C()
{
  _QWORD *v0;

  return sub_1AE7B4664(v0);
}

uint64_t sub_1AE4FC054()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4FC060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v1, v0);
}

uint64_t sub_1AE4FC074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return a36;
}

__n128 sub_1AE4FC0AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v2 = *(_QWORD *)(v1 - 96);
  v3 = *(_BYTE *)(v1 - 88);
  result = *(__n128 *)(v1 - 192);
  v5 = *(_OWORD *)(v1 - 176);
  v6 = *(_OWORD *)(v1 - 160);
  v7 = *(_OWORD *)(v1 - 144);
  v8 = *(_OWORD *)(v1 - 128);
  v9 = *(_OWORD *)(v1 - 112);
  *(__n128 *)v0 = result;
  *(_OWORD *)(v0 + 16) = v5;
  *(_OWORD *)(v0 + 32) = v6;
  *(_OWORD *)(v0 + 48) = v7;
  *(_OWORD *)(v0 + 64) = v8;
  *(_OWORD *)(v0 + 80) = v9;
  *(_QWORD *)(v0 + 96) = v2;
  *(_BYTE *)(v0 + 104) = v3;
  return result;
}

uint64_t sub_1AE4FC0D8()
{
  uint64_t v0;

  return sub_1AE66B890(0, (v0 & 0xC000000000000001) == 0, v0);
}

uint64_t sub_1AE4FC0EC()
{
  return sub_1AE9254DC();
}

uint64_t sub_1AE4FC0FC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v1, v0);
}

uint64_t sub_1AE4FC10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1AE4FC11C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v1, v0);
}

void sub_1AE4FC12C()
{
  sub_1AE519C48();
}

uint64_t sub_1AE4FC144()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4FC490()
{
  uint64_t v0;

  sub_1AE4FFC38();
  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE4FC4B4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4FC4C0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AE4FC4EC()
{
  return swift_retain();
}

uint64_t sub_1AE4FC504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

double sub_1AE4FC514()
{
  return 0.0;
}

uint64_t sub_1AE4FC540()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4FC54C()
{
  return swift_release_n();
}

uint64_t sub_1AE4FC554()
{
  return swift_task_alloc();
}

uint64_t sub_1AE4FC564()
{
  return swift_release();
}

uint64_t sub_1AE4FC56C()
{
  return swift_task_alloc();
}

void sub_1AE4FC590()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[1];
  *(_QWORD *)(v1 - 120) = *v0;
  *(_QWORD *)(v1 - 112) = v2;
}

uint64_t sub_1AE4FC5B4()
{
  return swift_unknownObjectRelease();
}

unint64_t sub_1AE4FC5BC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 1;
  return sub_1AE54B1EC();
}

uint64_t sub_1AE4FC5C8()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  return sub_1AE5474BC(v0, v1, v2);
}

uint64_t sub_1AE4FC5D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  return 255;
}

uint64_t sub_1AE4FC618(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
}

uint64_t sub_1AE4FC630()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE4FC640()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4FC654()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_1AE4FC660(sqlite3_stmt *a1)
{
  int v1;

  return sqlite3_column_type(a1, v1);
}

void sub_1AE4FC678()
{
  sub_1AE519F94();
}

uint64_t sub_1AE4FC6CC()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 136);
}

uint64_t sub_1AE4FC6EC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE4FC6F8()
{
  return 255;
}

uint64_t sub_1AE4FC704()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4FC718()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE4FC720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 8))(v1, v0);
}

uint64_t sub_1AE4FC734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  _QWORD *v13;
  void (*v14)(uint64_t *);
  va_list va;

  va_start(va, a13);
  return sub_1AE59B8A0((uint64_t *)va, v13, v14);
}

uint64_t sub_1AE4FC74C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, a1, v1);
}

uint64_t sub_1AE4FC764()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4FC770()
{
  return sub_1AE926D18();
}

uint64_t sub_1AE4FC780(uint64_t a1)
{
  return sub_1AE5B7800(a1, 1);
}

uint64_t sub_1AE4FC788()
{
  return swift_slowAlloc();
}

void *sub_1AE4FC7A4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x468uLL);
}

uint64_t sub_1AE4FC7AC()
{
  return sub_1AE926F4C();
}

id sub_1AE4FC7BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1AE5E15E8(v0, v1, v3, v2);
}

uint64_t sub_1AE4FC7D4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = a1;
  return sub_1AE926BF8();
}

uint64_t sub_1AE4FC7EC()
{
  return sub_1AE926BC8();
}

uint64_t sub_1AE4FC7FC()
{
  return swift_release_n();
}

uint64_t sub_1AE4FC808(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 1, 1, a1);
}

uint64_t sub_1AE4FC81C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)v6 = a1;
  *(_QWORD *)(v6 + 8) = v3;
  *(_BYTE *)(v6 + 16) = 2;
  *(_QWORD *)(v6 + 24) = v4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6 + *(int *)(v7 + 24), a3, v5);
}

uint64_t sub_1AE4FC844()
{
  return sub_1AE925B30();
}

void sub_1AE4FC858()
{
  void *v0;

}

uint64_t sub_1AE4FC860()
{
  return sub_1AE9243F0();
}

uint64_t sub_1AE4FC878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  return sub_1AE50BA54(a58, a59);
}

uint64_t sub_1AE4FC890()
{
  return sub_1AE926EF8();
}

uint64_t sub_1AE4FC898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

void sub_1AE4FC8A0(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2[4] = a1;
  v2[5] = (v1 - 32) | 0x8000000000000000;
  v2[6] = 0x636E657265666E69;
  v2[7] = 0xEF656E69676E4565;
}

uint64_t sub_1AE4FC8D4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AE4FC8E4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AE4FC908()
{
  return sub_1AE926C88();
}

double sub_1AE4FC918()
{
  _QWORD *v0;
  double v1;

  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t sub_1AE4FC934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  return v3(a1, a2, a3, v5, v4);
}

uint64_t sub_1AE4FC940(uint64_t a1, uint64_t *a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return sub_1AE65A518((uint64_t)va, a2);
}

void sub_1AE4FC948(id a1)
{

}

uint64_t *sub_1AE4FC960()
{
  uint64_t v0;

  return sub_1AE52F6A8((uint64_t *)(v0 - 128));
}

uint64_t sub_1AE4FC968()
{
  uint64_t v0;

  return sub_1AE59E5F4(v0 - 208);
}

uint64_t sub_1AE4FC970(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v2);
}

uint64_t sub_1AE4FC97C()
{
  return sub_1AE9269E8();
}

uint64_t sub_1AE4FC99C(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_1AE4FC9AC()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE4FC9C0()
{
  return swift_getAssociatedTypeWitness();
}

id sub_1AE4FC9D4()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 48) = v0;
  return v0;
}

uint64_t sub_1AE4FC9E0()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE4FC9E8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v1, v0);
}

uint64_t sub_1AE4FC9F4()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1AE579F84(v2, v1, v0);
}

uint64_t sub_1AE4FCA04()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 472);
}

uint64_t sub_1AE4FCA20()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE4FCA30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(v1, v0);
}

void sub_1AE4FCA44()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

uint64_t sub_1AE4FCA54()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4FCA60()
{
  return sub_1AE925F8C();
}

void sub_1AE4FCA68()
{
  sub_1AE519C48();
}

uint64_t sub_1AE4FCA74()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE4FCA88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_1AE4FCA90()
{
  return swift_deallocUninitializedObject();
}

void sub_1AE4FCAA8()
{
  sub_1AE519DF4();
}

uint64_t sub_1AE4FCAB4()
{
  return 0x7473657265746E69;
}

void *sub_1AE4FCACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  const void *v9;

  return memcpy(&a9, v9, 0x58uLL);
}

uint64_t sub_1AE4FCADC()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE4FCB00()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

uint64_t sub_1AE4FCB28()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v1, v0);
}

uint64_t sub_1AE4FCB34(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  return sub_1AE8035B8(result, a2, a3, a4);
}

uint64_t sub_1AE4FCB50(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t (*a4)(_QWORD, uint64_t, _QWORD))
{
  return a4(*a1, a2, a3 & 1);
}

void sub_1AE4FCB60(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
}

uint64_t sub_1AE4FCB7C()
{
  return sub_1AE92697C();
}

uint64_t sub_1AE4FCB98()
{
  return sub_1AE926C40();
}

void sub_1AE4FCBA0()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

uint64_t sub_1AE4FCBA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8))(v0, v1);
}

uint64_t sub_1AE4FCBBC()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4FCBE0()
{
  uint64_t v0;

  return sub_1AE82F33C(v0);
}

void sub_1AE4FCBE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)(v23 - 224) = v22;
  *(_QWORD *)(v23 - 216) = a17;
  *(_QWORD *)(v23 - 208) = a16;
  *(_QWORD *)(v23 - 200) = a15;
  *(_QWORD *)(v23 - 192) = a20;
  *(_QWORD *)(v23 - 184) = a22;
}

void sub_1AE4FCC0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = v1;
}

uint64_t sub_1AE4FCC30()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4FCC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v2, *(_QWORD *)(v0 + 184));
}

uint64_t sub_1AE4FCC48()
{
  return sub_1AE926B50();
}

void sub_1AE4FCC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  sub_1AE520ED4(a1, a2, v20 - 72, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

unint64_t sub_1AE4FCC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a4 + 16) = v4;
  return a4
       + ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 120) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 120) + 80))
       + *(_QWORD *)(*(_QWORD *)(v6 - 120) + 72) * v5;
}

uint64_t sub_1AE4FCC94()
{
  return swift_release();
}

uint64_t sub_1AE4FCCA4()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE4FCCB0()
{
  return sub_1AE515C74(0x6465727071, 0xE500000000000000);
}

void sub_1AE4FCCC4()
{
  JUMPOUT(0x1AF451EC4);
}

uint64_t sub_1AE4FCCD4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v0, v1);
}

uint64_t sub_1AE4FCCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 88);
  v17 = *(_QWORD *)(a2 + 96);
  v13 = *(unsigned __int8 *)(a2 + 104);
  *(_DWORD *)(v2 - 84) = v13;
  return sub_1AE526458(v3, v4, v5, v6, v7, v8, v9, v10, v12, v11, v15, v16, v17, v13);
}

void sub_1AE4FCD48(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1AE4FCD64()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4FCD74()
{
  return swift_endAccess();
}

uint64_t sub_1AE4FCD7C()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE4FCDC4()
{
  return sub_1AE926B20();
}

void sub_1AE4FCDF0()
{
  void *v0;

}

uint64_t sub_1AE4FCDF8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AE50BDB4(v1, v0);
}

uint64_t sub_1AE4FCE04()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1AE4FCE28()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4FCE48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  return sub_1AE5304F4(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

__n128 sub_1AE4FCE50(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  unint64_t v9;
  unint64_t v10;
  __n128 result;

  result = a9;
  a1[1] = a9;
  a1[2].n128_u64[0] = v9;
  a1[2].n128_u64[1] = v10;
  return result;
}

uint64_t sub_1AE4FCE64()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4FCE7C()
{
  return swift_task_dealloc();
}

uint64_t sub_1AE4FCE84()
{
  return swift_allocObject();
}

uint64_t sub_1AE4FCE90()
{
  return sub_1AE925DB8();
}

uint64_t sub_1AE4FCEA4()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE4FCEB4()
{
  return sub_1AE926F34();
}

uint64_t sub_1AE4FCEC8()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE4FCED8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AE50BDB4(v1, v0);
}

uint64_t sub_1AE4FCEF0()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AE50BDB4(v1, v0);
}

id sub_1AE4FCEFC()
{
  void *v0;

  return v0;
}

uint64_t sub_1AE4FCF04()
{
  return sub_1AE9265EC();
}

uint64_t sub_1AE4FCF0C(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

uint64_t sub_1AE4FCF28()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE4FCF34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v2);
}

uint64_t sub_1AE4FCF40()
{
  return swift_unexpectedError();
}

uint64_t sub_1AE4FCF54()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4FCF60()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4FCF78()
{
  return 0x6465657073;
}

uint64_t sub_1AE4FCF8C()
{
  return swift_allocObject();
}

uint64_t sub_1AE4FCFC4()
{
  return sub_1AE926A00();
}

uint64_t sub_1AE4FCFE8()
{
  return swift_retain();
}

uint64_t sub_1AE4FCFF0()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AE50BDA0(v0, v1);
}

uint64_t sub_1AE4FCFFC()
{
  return swift_allocObject();
}

uint64_t sub_1AE4FD008()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE4FD010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_1AE4FD018()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE4FD028()
{
  return sub_1AE9246B4();
}

id sub_1AE4FD034(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_1AE4FD040()
{
  return sub_1AE926B50();
}

double sub_1AE4FD058(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 64) = 0;
  return result;
}

uint64_t sub_1AE4FD090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE4FD0A0()
{
  uint64_t v0;

  return v0 + 4096;
}

uint64_t sub_1AE4FD0AC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE4FD0B8()
{
  return swift_task_switch();
}

uint64_t sub_1AE4FD0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  unint64_t v8;
  va_list va;

  va_start(va, a7);
  STACK[0x428] = v8;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  LOBYTE(STACK[0x470]) = 0;
  return sub_1AE5DA9AC((uint64_t)va, (uint64_t)&STACK[0x478]);
}

uint64_t sub_1AE4FD0EC()
{
  return sub_1AE926CC4();
}

_QWORD *sub_1AE4FD100()
{
  _QWORD *v0;

  return sub_1AE4F9858(v0, v0[3]);
}

uint64_t sub_1AE4FD134()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE4FD144()
{
  return sub_1AE926CA0();
}

uint64_t sub_1AE4FD168()
{
  return type metadata accessor for LogSignpost();
}

uint64_t sub_1AE4FD184()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE4FD190()
{
  return swift_task_switch();
}

uint64_t sub_1AE4FD19C()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_1AE4FD1AC()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_1AE4FD1BC()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE4FD1D8()
{
  return swift_task_alloc();
}

uint64_t sub_1AE4FD1E0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1AE4FD1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t result;

  result = *v10;
  *v10 = a10;
  return result;
}

uint64_t sub_1AE4FD1FC()
{
  return swift_getAssociatedTypeWitness();
}

void sub_1AE4FD20C()
{
  sub_1AE659CFC();
}

uint64_t sub_1AE4FD220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5)
{
  return sub_1AE65F1F8(a1, a2, a3, a4, a5);
}

uint64_t sub_1AE4FD24C()
{
  return swift_arrayDestroy();
}

uint64_t sub_1AE4FD258()
{
  return _swift_stdlib_reportUnimplementedInitializer();
}

uint64_t sub_1AE4FD264()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4FD270()
{
  return swift_beginAccess();
}

uint64_t sub_1AE4FD284()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 24))(v1, v0);
}

uint64_t sub_1AE4FD298()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1AE4FD2B8()
{
  return sub_1AE924B10();
}

void sub_1AE4FD2C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 - 264);
  *(_QWORD *)(v0 - 136) = *(_QWORD *)(v0 - 256);
  *(_QWORD *)(v0 - 128) = v1;
  v2 = *(_QWORD *)(v0 - 280);
  *(_QWORD *)(v0 - 120) = *(_QWORD *)(v0 - 272);
  *(_QWORD *)(v0 - 112) = v2;
  v3 = *(_QWORD *)(v0 - 288);
  *(_QWORD *)(v0 - 104) = *(_QWORD *)(v0 - 296);
  *(_QWORD *)(v0 - 96) = v3;
}

uint64_t sub_1AE4FD300()
{
  return sub_1AE925F20();
}

uint64_t sub_1AE4FD31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for InferenceMessageResponseError.ServiceError(0, v5, v4, a4);
}

uint64_t sub_1AE4FD32C(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)va);
}

uint64_t sub_1AE4FD334@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t sub_1AE4FD348()
{
  return swift_task_dealloc();
}

uint64_t sub_1AE4FD358(_OWORD *a1)
{
  uint64_t v1;
  __int128 v2;

  v2 = a1[1];
  *(_OWORD *)(v1 - 112) = *a1;
  *(_OWORD *)(v1 - 96) = v2;
  *(_OWORD *)(v1 - 80) = a1[2];
  return swift_beginAccess();
}

uint64_t sub_1AE4FD380()
{
  return sub_1AE926BB0();
}

uint64_t sub_1AE4FD390()
{
  return 0;
}

uint64_t sub_1AE4FD3A8()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE4FD3B8()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE4FD3C8()
{
  return swift_allocObject();
}

uint64_t sub_1AE4FD3D8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4FD3F0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE4FD3FC()
{
  return 0x6D754E656E6F6870;
}

uint64_t sub_1AE4FD418()
{
  return 0x49746361746E6F63;
}

void *sub_1AE4FD458(void *a1)
{
  const void *v1;

  return memcpy(a1, v1, 0x90uLL);
}

void *sub_1AE4FD464(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA8uLL);
}

uint64_t sub_1AE4FD46C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4FD480()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE4FD4A0()
{
  return sub_1AE924474();
}

uint64_t sub_1AE4FD4B4()
{
  return 0x65636E6174736964;
}

uint64_t sub_1AE4FD4CC()
{
  return sub_1AE926F34();
}

uint64_t sub_1AE4FD4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v3 + *(int *)(v0 + 48), v1);
}

uint64_t sub_1AE4FD500()
{
  return sub_1AE926CC4();
}

void sub_1AE4FD520()
{
  _QWORD *v0;

  v0[29] = 0;
  v0[30] = 0;
  v0[34] = 0;
  v0[35] = 0;
  v0[32] = 0;
  v0[33] = 0;
  v0[37] = 0;
  v0[38] = 0;
}

uint64_t sub_1AE4FD554(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 0, 1, v1);
}

uint64_t sub_1AE4FD578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10@<Q0>, __n128 a11@<Q1>)
{
  unsigned __int8 v11;

  return sub_1AE582FC0(a1, a2, a3, a4, a5, a6, a7, a8, a10.n128_i64[0], a10.n128_i64[1], a11.n128_i64[0], a11.n128_u64[1], a9, v11);
}

uint64_t sub_1AE4FD588(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_1AE4FD590()
{
  return sub_1AE830EF4();
}

uint64_t sub_1AE4FD598(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  sub_1AE8035B8(a1, a2, a3, a4);
  return sub_1AE926D90();
}

uint64_t sub_1AE4FD5AC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 776) = a1;
  return sub_1AE92676C();
}

void sub_1AE4FD5C8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 200) = 0;
}

uint64_t sub_1AE4FD5F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
}

double sub_1AE4FD604()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 80) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)v0 = 0u;
  return result;
}

uint64_t sub_1AE4FD61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;

  return sub_1AE58307C(v33, a27, a25, a23, a21, a19, a18, a17, v27, v28, v29, v30, v31, v32);
}

__n128 sub_1AE4FD64C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  __n128 result;

  *(_OWORD *)(v2 - 200) = *(_OWORD *)(v2 - 224);
  *(_OWORD *)(v2 - 184) = *(_OWORD *)(v2 - 240);
  *(_OWORD *)(v2 - 168) = *(_OWORD *)(v2 - 256);
  *(_OWORD *)(v2 - 152) = *(_OWORD *)(v2 - 272);
  *(_OWORD *)(v2 - 136) = *(_OWORD *)(v2 - 288);
  result = *(__n128 *)(v2 - 304);
  *(__n128 *)(v2 - 120) = result;
  *(_QWORD *)(v2 - 104) = v1;
  *(_BYTE *)(v2 - 96) = v0;
  return result;
}

BOOL sub_1AE4FD694(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1AE4FD6A4()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4FD6FC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v0, v1);
}

uint64_t sub_1AE4FD708()
{
  return swift_allocObject();
}

uint64_t sub_1AE4FD730()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4FD744@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
  return sub_1AE926BB0();
}

uint64_t sub_1AE4FD75C()
{
  return swift_endAccess();
}

uint64_t sub_1AE4FD764()
{
  return sub_1AE926EE0();
}

uint64_t sub_1AE4FD76C()
{
  return sub_1AE926910();
}

void sub_1AE4FD794()
{
  sub_1AE519C48();
}

uint64_t sub_1AE4FD7AC()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE4FD7E4()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1AE7F4068(v7, v6, v5, v4);
  return sub_1AE7F4068(v3, v2, v1, v0);
}

uint64_t sub_1AE4FD814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v0, v1);
}

uint64_t sub_1AE4FD828(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 1, 1, v1);
}

uint64_t sub_1AE4FD838()
{
  return 0;
}

uint64_t sub_1AE4FD854()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4FD86C()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 88);
  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *(_QWORD *)(*v1 + 56);
  v5 = *v1;
  *(_QWORD *)(v5 + 104) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_1AE4FC4C0(*(uint64_t (**)(void))(v5 + 8));
}

uint64_t _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0()
{
  return 1;
}

uint64_t sub_1AE4FD910()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE4FD924()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1AE4FD940(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v2);
}

uint64_t sub_1AE4FD960()
{
  return swift_deallocPartialClassInstance();
}

void sub_1AE4FD99C()
{
  uint64_t v0;
  uint64_t v1;

  static AssetRegistry.createCreateBackend.setter(v0, v1);
}

uint64_t sub_1AE4FD9A8()
{
  return swift_task_dealloc();
}

uint64_t sub_1AE4FD9B0()
{
  return sub_1AE924780();
}

uint64_t sub_1AE4FD9B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE4FD9C8(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_1AE4FD9D4()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE4FD9E0()
{
  return sub_1AE926C88();
}

uint64_t sub_1AE4FD9EC()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE4FDA08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE4FDA18()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE4FDA38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v2);
}

uint64_t sub_1AE4FDA64()
{
  return swift_task_alloc();
}

id sub_1AE4FDA6C(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_1AE4FDA74()
{
  return swift_release_n();
}

uint64_t sub_1AE4FDA90()
{
  return sub_1AE926B50();
}

void sub_1AE4FDAA8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

uint64_t sub_1AE4FDAB8()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE4FDAD0()
{
  return 0x657372756F63;
}

uint64_t sub_1AE4FDAE4()
{
  return sub_1AE88163C();
}

uint64_t sub_1AE4FDAF4()
{
  return swift_deallocObject();
}

double sub_1AE4FDB00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double result;

  result = v3 * v4;
  *(_QWORD *)(v0 + 16) = v1;
  *(double *)(v0 + 8 * v2 + 32) = v3 * v4;
  return result;
}

uint64_t sub_1AE4FDB34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_OWORD *)(a1 + 88) = *(_OWORD *)(v2 + 104);
  *(_QWORD *)(a1 + 104) = v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4FDB48@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE4FDB54()
{
  uint64_t v0;

  return v0;
}

void sub_1AE4FDB84()
{
  JUMPOUT(0x1AF454B70);
}

uint64_t sub_1AE4FDB8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_1AE4FDB98()
{
  return sub_1AE9243D8();
}

void sub_1AE4FDBA4()
{
  sub_1AE5519D8();
}

uint64_t sub_1AE4FDBB4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;

  *(_QWORD *)v2 = v3;
  *(_QWORD *)(v2 + 8) = v4;
  *(_QWORD *)(v2 + 16) = result;
  *(_QWORD *)(v2 + 24) = a2;
  *(_WORD *)(v2 + 32) = v5;
  return result;
}

__n128 sub_1AE4FDBC4()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

uint64_t sub_1AE4FDBDC(uint64_t (*a1)(void))
{
  return a1();
}

void *sub_1AE4FDBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__dst)
{
  STACK[0x1B18] = 0;
  return memcpy(__dst, &STACK[0x16B8], 0x468uLL);
}

uint64_t sub_1AE4FDC10@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_1AE4FDC18(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)(a1 - 256) = a2;
}

uint64_t sub_1AE4FDC24(unsigned int a1)
{
  return a1 | 0x6E6F697400000000;
}

void sub_1AE4FDC30()
{
  sub_1AE51ACEC();
}

uint64_t sub_1AE4FDC48()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4FDC54()
{
  return swift_retain();
}

uint64_t sub_1AE4FDC84()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE4FDCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  return sub_1AE60DCAC(a51);
}

uint64_t sub_1AE4FDCB8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)v8 = a1;
  *(_QWORD *)(v8 + 8) = v4;
  *(_BYTE *)(v8 + 16) = 2;
  *(_QWORD *)(v8 + 24) = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v8 + *(int *)(v9 + 24), a4, v7);
}

uint64_t sub_1AE4FDCE0()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_1AE4FDCE8()
{
  return swift_release();
}

uint64_t sub_1AE4FDCF0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4FDCF8()
{
  return 0x44495F444DLL;
}

uint64_t sub_1AE4FDD0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_1AE4FDD24()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4FDD2C()
{
  return sub_1AE9267CC();
}

uint64_t sub_1AE4FDD44@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE4FDD50()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1AE4FDD5C()
{
  return swift_task_switch();
}

uint64_t sub_1AE4FDD64()
{
  return swift_bridgeObjectRelease();
}

void *sub_1AE4FDD74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 24) = a1;
  v2 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v1 + 32) = v2;
  return malloc(*(_QWORD *)(v2 + 64));
}

uint64_t sub_1AE4FDD8C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a2 - 8) + 8))();
}

uint64_t sub_1AE4FDD98()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t sub_1AE4FDDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = sub_1AE4FB608(v2, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_1AE4FDDF4()
{
  return sub_1AE9260E8();
}

uint64_t sub_1AE4FDE00()
{
  return sub_1AE925380();
}

uint64_t sub_1AE4FDE18()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE4FDE34()
{
  return swift_endAccess();
}

uint64_t sub_1AE4FDE3C()
{
  return swift_allocObject();
}

uint64_t sub_1AE4FDE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

uint64_t sub_1AE4FDE68()
{
  return swift_bridgeObjectRetain();
}

void sub_1AE4FDE74()
{
  JUMPOUT(0x1AF4537CCLL);
}

uint64_t sub_1AE4FDE80()
{
  return 0;
}

uint64_t sub_1AE4FDE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1AE4FB608(*(_QWORD *)(v2 - 344), a2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4FDEAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE4FDEBC(uint64_t a1, ...)
{
  uint64_t v2;
  va_list va;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a1);
  va_start(va, a1);
  v2 = va_arg(va1, _QWORD);
  v4 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  return sub_1AE57C238((uint64_t)va1, (uint64_t)va);
}

uint64_t sub_1AE4FDEC8()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE4FDEE0(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  return sub_1AE750EA0(a1, a2, a3, a4, a5, a6, a7);
}

BOOL sub_1AE4FDEFC@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1AE4FDF14()
{
  return swift_beginAccess();
}

void sub_1AE4FDF34()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

uint64_t sub_1AE4FDF3C()
{
  return type metadata accessor for K2TTextualization();
}

void sub_1AE4FDF44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v1 + 16) = v4;
  v7 = v1 + 104 * v5;
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v0;
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(v6 - 432);
  *(_QWORD *)(v7 + 56) = v2;
  *(_WORD *)(v7 + 64) = *(_DWORD *)(v6 - 436);
  v8 = *(_QWORD *)(v6 - 408);
  *(_QWORD *)(v7 + 72) = *(_QWORD *)(v6 - 416);
  *(_QWORD *)(v7 + 80) = v8;
  v9 = *(_QWORD *)(v6 - 384);
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(v6 - 392);
  *(_QWORD *)(v7 + 96) = v9;
  v10 = *(_QWORD *)(v6 - 368);
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v6 - 376);
  *(_QWORD *)(v7 + 112) = v10;
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v6 - 360);
  *(_BYTE *)(v7 + 128) = *(_DWORD *)(v6 - 352);
  *(_BYTE *)(v7 + 129) = *(_DWORD *)(v6 - 420);
}

uint64_t sub_1AE4FDFD0()
{
  return swift_bridgeObjectRetain_n();
}

void sub_1AE4FDFDC()
{
  EntityClass.ancestorClassesSet.getter();
}

uint64_t sub_1AE4FDFF4()
{
  return 0x6464416C69616D65;
}

uint64_t sub_1AE4FE010()
{
  return 0x524154535F594144;
}

uint64_t sub_1AE4FE048(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_1AE4FE050(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = 3;
  return swift_willThrow();
}

uint64_t sub_1AE4FE060()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1AE4FE078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;

  sub_1AE80360C(v2, v3, v1, v7);
  return sub_1AE80360C(v4, v5, v0, v6);
}

uint64_t sub_1AE4FE0A8()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE4FE0BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, *(_QWORD *)(v1 + 56) + *(_QWORD *)(v4 + 72) * a1, v2);
}

uint64_t sub_1AE4FE0D8()
{
  return swift_task_alloc();
}

void sub_1AE4FE0EC(uint64_t a1)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 24));
}

uint64_t sub_1AE4FE108()
{
  return swift_endAccess();
}

uint64_t sub_1AE4FE110()
{
  return swift_beginAccess();
}

void sub_1AE4FE124()
{
  sub_1AE51ADD4();
}

uint64_t sub_1AE4FE130()
{
  return sub_1AE925F74();
}

void sub_1AE4FE140()
{
  sub_1AE515BB8();
}

uint64_t sub_1AE4FE150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  return sub_1AE57C238(a2 + 40 * a1, (uint64_t)va);
}

uint64_t sub_1AE4FE160()
{
  return sub_1AE531878();
}

void sub_1AE4FE168()
{
  sub_1AE51BC88();
}

uint64_t sub_1AE4FE180()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4FE18C()
{
  return swift_task_dealloc();
}

uint64_t sub_1AE4FE19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  return sub_1AE58307C(v29, v25, a19, a23, a24, v26, a25, *(_QWORD *)(v30 - 72), a22, a21, a16, a15, v28, v27);
}

_QWORD *sub_1AE4FE1D8()
{
  __int128 *v0;
  _QWORD *v1;
  uint64_t v2;
  __int128 v3;

  v3 = *v0;
  *(_OWORD *)(v2 - 240) = v0[1];
  *(_OWORD *)(v2 - 224) = v3;
  *(_OWORD *)(v2 - 256) = v0[2];
  *(_OWORD *)(v2 - 272) = v0[3];
  *(_OWORD *)(v2 - 288) = v0[4];
  *(_OWORD *)(v2 - 304) = v0[5];
  return sub_1AE4F9858(v1, v1[3]);
}

uint64_t sub_1AE4FE238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1AE4FE248(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, a1);
}

uint64_t sub_1AE4FE26C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 88) = a1;
  return sub_1AE926C88();
}

uint64_t sub_1AE4FE284()
{
  return sub_1AE926EE0();
}

uint64_t sub_1AE4FE28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_1AE4FE29C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 - 136);
  *(_QWORD *)(v1 - 112) = v0;
  *(_QWORD *)(v1 - 104) = v2;
  return v1 - 112;
}

uint64_t sub_1AE4FE2B0()
{
  return sub_1AE926238();
}

uint64_t sub_1AE4FE2BC()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE4FE2D0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v1, v0);
}

uint64_t sub_1AE4FE2DC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t sub_1AE4FE2E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v2 - 168))(*(_QWORD *)(v2 - 216), v0, v1);
}

uint64_t sub_1AE4FE304()
{
  return sub_1AE926B50();
}

void Heap.removeRoot()()
{
  uint64_t v0;

  sub_1AE4FC4D4();
  MEMORY[0x1E0C80A78](v0);
  sub_1AE9262B0();
  sub_1AE4FDB84();
}

void sub_1AE4FE3AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if ((sub_1AE926544() & 1) != 0)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 1, 1, v0);
    sub_1AE4F8180();
  }
  else
  {
    sub_1AE9262D4();
    *(_QWORD *)(v3 - 88) = 0;
    v4 = MEMORY[0x1AF453484](v2, v0);
    if (!__OFSUB__(v4, 1))
    {
      *(_QWORD *)(v3 - 96) = v4 - 1;
      sub_1AE4FDB84();
    }
    __break(1u);
  }
}

uint64_t sub_1AE4FE494(Swift::Int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (**v3)(char *, char *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(char *, char *);
  uint64_t v14;
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  Swift::Int v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, char *);
  uint64_t v24;
  Swift::Int v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;

  v3 = (uint64_t (**)(char *, char *))v2;
  v6 = *(_QWORD *)(a2 + 16);
  v27 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v22 - v11;
  if (result + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v13 = *(uint64_t (**)(char *, char *))v2;
  v14 = *(_QWORD *)(v2 + 16);
  v26 = (_QWORD *)(v2 + 16);
  v25 = Heap.rightIndex(_:)(a1);
  result = MEMORY[0x1AF453484](v14, v6);
  if (__OFSUB__(result, 1))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  v24 = a2;
  v15 = a1;
  if (result - 1 >= ((2 * a1) | 1))
  {
    sub_1AE9262D4();
    sub_1AE9262D4();
    v16 = v13(v12, v9);
    v17 = *(void (**)(char *, uint64_t))(v27 + 8);
    v17(v9, v6);
    v17(v12, v6);
    if ((v16 & 1) != 0)
      v15 = (2 * a1) | 1;
    else
      v15 = a1;
  }
  result = MEMORY[0x1AF453484](*v26, v6);
  if (__OFSUB__(result, 1))
    goto LABEL_16;
  v18 = v25;
  if (result - 1 >= v25)
  {
    v23 = *v3;
    sub_1AE9262D4();
    sub_1AE9262D4();
    v19 = v23(v12, v9);
    v20 = *(void (**)(char *, uint64_t))(v27 + 8);
    v20(v9, v6);
    result = ((uint64_t (*)(char *, uint64_t))v20)(v12, v6);
    if ((v19 & 1) != 0)
      v15 = v18;
  }
  if (v15 != a1)
  {
    v28 = v15;
    v29 = a1;
    v21 = sub_1AE9262B0();
    MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF28], v21);
    sub_1AE925DE8();
    return sub_1AE4FE494(v15, v24);
  }
  return result;
}

Swift::Int __swiftcall Heap.rightIndex(_:)(Swift::Int result)
{
  BOOL v1;

  if (result + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v1 = __OFADD__(2 * result, 2);
  result = 2 * result + 2;
  if (v1)
LABEL_5:
    __break(1u);
  return result;
}

void Heap.append(_:)()
{
  uint64_t v0;
  uint64_t (**v1)(char *, char *);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t (*v13)(char *, char *);
  unint64_t v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;

  sub_1AE4FC4D4();
  v1 = (uint64_t (**)(char *, char *))v0;
  v3 = v2;
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v2);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v17 - v10;
  v12 = MEMORY[0x1AF453484](*(_QWORD *)(v0 + 16), v5);
  v20 = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v3, v5);
  v18 = sub_1AE9262B0();
  v19 = v0 + 16;
  sub_1AE926274();
  if (v12 >= 1)
  {
    do
    {
      v13 = *v1;
      sub_1AE501DE4();
      v14 = v12 - 1;
      sub_1AE501DE4();
      v15 = v13(v11, v9);
      v16 = *(void (**)(char *, uint64_t))(v20 + 8);
      v16(v9, v5);
      v16(v11, v5);
      if ((v15 & 1) == 0)
        break;
      v21 = (unint64_t)(v12 - 1) >> 1;
      v22 = v12;
      MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF28], v18);
      sub_1AE925DE8();
      v12 = (unint64_t)(v12 - 1) >> 1;
    }
    while (v14 > 1);
  }
  sub_1AE4F8180();
}

uint64_t sub_1AE4FE858()
{
  return sub_1AE926B50();
}

void *sub_1AE4FE880@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t sub_1AE4FE8A0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE4FE8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = sub_1AE4FB608(v2, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v3, v4, v2);
}

uint64_t sub_1AE4FE8EC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_1AE4FE8F8(uint64_t a1, uint64_t a2)
{
  return sub_1AE536EDC(a1, a2);
}

uint64_t sub_1AE4FE900()
{
  return sub_1AE926A54();
}

uint64_t sub_1AE4FE914(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1AE4FE920@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE4FE92C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE4FE934()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1AE547444(v2, v1, v0);
}

uint64_t sub_1AE4FE944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v1, v0);
}

uint64_t sub_1AE4FE958()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AE50BDB4(v1, v0);
}

uint64_t sub_1AE4FE964()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  return sub_1AE54C858(v0, v1, v2, 1);
}

uint64_t sub_1AE4FE99C()
{
  return _swift_stdlib_reportUnimplementedInitializer();
}

uint64_t sub_1AE4FE9A8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AE50BDA0(v1, v0);
}

uint64_t sub_1AE4FE9B4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 - 8);
  *v2 = *v0;
  *v2 = *v0;
  return swift_task_dealloc();
}

uint64_t sub_1AE4FEA14()
{
  return swift_getObjectType();
}

uint64_t sub_1AE4FEA1C()
{
  return swift_getAssociatedTypeWitness();
}

void sub_1AE4FEA30()
{
  sub_1AE51A630();
}

uint64_t sub_1AE4FEA3C(uint64_t a1)
{
  uint64_t v1;

  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 1, 1, a1);
  return swift_retain();
}

uint64_t sub_1AE4FEA60(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = 4;
  return swift_willThrow();
}

uint64_t sub_1AE4FEA70@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(_BYTE *)(a1 + 16) = 4;
  return swift_willThrow();
}

void sub_1AE4FEA8C()
{
  char v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 128) = v2;
  *(_QWORD *)(v6 - 120) = v3;
  *(_QWORD *)(v6 - 112) = v4;
  *(_QWORD *)(v6 - 104) = v5;
  *(_WORD *)(v6 - 96) = v1;
  *(_BYTE *)(v6 - 94) = v0;
}

uint64_t sub_1AE4FEAC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_1AE4FEAD4()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_1AE4FEAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&a9 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
}

void sub_1AE4FEB14()
{
  sub_1AE521A0C();
}

uint64_t sub_1AE4FEB28()
{
  double v0;

  return sub_1AE57D384(v0);
}

uint64_t sub_1AE4FEB38()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 192) + 8))(v0, *(_QWORD *)(v1 - 96));
}

uint64_t sub_1AE4FEB5C()
{
  return sub_1AE924EE8();
}

uint64_t sub_1AE4FEB68()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  return sub_1AE5BBF68(v2, v1, v0);
}

uint64_t sub_1AE4FEB78()
{
  return sub_1AE926AA8();
}

uint64_t sub_1AE4FEB90()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE4FEBA0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_1AE4FEBC4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_QWORD *)a1 = a2;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 33) = 0u;
  *(_BYTE *)(a1 + 49) = 2;
  return swift_willThrow();
}

uint64_t sub_1AE4FEBF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1AE4FEC08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE4FEC18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

void sub_1AE4FEC4C()
{
  sub_1AE519C48();
}

uint64_t sub_1AE4FEC64(uint64_t a1, _BYTE *a2)
{
  *a2 = 6;
  return swift_willThrow();
}

void sub_1AE4FEC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  sub_1AE520ED4(a1, v20, v21 - 72, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1AE4FEC84()
{
  return sub_1AE926CA0();
}

uint64_t _s20IntelligencePlatform16FeedbackProtocolPAAE7variantSSSgvg_0()
{
  return 0;
}

uint64_t sub_1AE4FECA4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4FECB0()
{
  return swift_task_switch();
}

uint64_t sub_1AE4FECBC()
{
  uint64_t v0;

  return sub_1AE578C08(*(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 424));
}

uint64_t sub_1AE4FECCC()
{
  return swift_task_alloc();
}

uint64_t sub_1AE4FECE0()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE4FED00()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 288) + 8))(*(_QWORD *)(v0 - 280), *(_QWORD *)(v0 - 272));
}

uint64_t sub_1AE4FED20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1AE4FED30()
{
  return sub_1AE925E18();
}

id sub_1AE4FED3C(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

void sub_1AE4FED44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v1 + 56) + 24 * v2;
  v5 = *(_QWORD *)(v3 - 240);
  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = v5;
  *(_BYTE *)(v4 + 16) = *(_DWORD *)(v3 - 228) & 1;
}

uint64_t sub_1AE4FED68()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE4FED74()
{
  sub_1AE659108();
}

void sub_1AE4FED9C(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10@<Q0>)
{
  uint64_t v10;
  uint64_t (*v11)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1AE65AEB8(a1, a2, a3, a4, a5, a6, a7, a8, a10.n128_i64[0], a10.n128_i64[1], a9, v10, v11);
}

uint64_t sub_1AE4FEDAC()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4FEDB8()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE4FEDD8()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE4FEDF8()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE4FEE08@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE4FEE14()
{
  return sub_1AE9251D0();
}

uint64_t sub_1AE4FEE24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t sub_1AE4FEE3C()
{
  return type metadata accessor for CustomGraphActivityEvent(0);
}

void sub_1AE4FEE64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 - 440);
  *(_QWORD *)(v2 - 456) = v0;
  *(_QWORD *)(v2 - 288) = *(_QWORD *)(v3 + 72);
  *(_QWORD *)(v2 - 296) = v1;
}

void sub_1AE4FEEAC()
{
  JUMPOUT(0x1AF454B70);
}

uint64_t sub_1AE4FEEB4()
{
  return sub_1AE926D60();
}

uint64_t _s20IntelligencePlatform11GraphObjectPAAE2idAA21TypedEntityIdentifierVyxGvg_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

_QWORD *sub_1AE4FEECC(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return (*(_QWORD *(**)(uint64_t *__return_ptr))(a2 + 32))((uint64_t *)va);
}

uint64_t sub_1AE4FEED8()
{
  return swift_getAssociatedTypeWitness();
}

void sub_1AE4FEEEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)v0 = 0u;
  *(_WORD *)(v0 + 48) = -256;

}

uint64_t sub_1AE4FEF08()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE4FEF20()
{
  return swift_beginAccess();
}

uint64_t sub_1AE4FEF34()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE4FEF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 128));
}

uint64_t sub_1AE4FEF58()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE4FEF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE4FEF7C()
{
  return sub_1AE926AB4();
}

uint64_t sub_1AE4FEF98(unint64_t *a1)
{
  uint64_t *v1;

  return sub_1AE75B3C8(a1, v1);
}

uint64_t sub_1AE4FEFB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v0;
  return swift_retain();
}

void sub_1AE4FEFC8()
{
  sub_1AE515CAC();
}

uint64_t sub_1AE4FEFD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  sub_1AE4F9858(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t sub_1AE4FF004()
{
  return swift_bridgeObjectRetain();
}

id sub_1AE4FF014(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, 3);
}

uint64_t sub_1AE4FF0B8()
{
  return 0x69746E6565726373;
}

void sub_1AE4FF0D4()
{
  sub_1AE51B588();
}

uint64_t sub_1AE4FF0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1AE793D00(a1, a2, 1852797802, 0xE400000000000000, a5);
}

uint64_t sub_1AE4FF0F0()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4FF0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  return sub_1AE525A98((uint64_t)&a39);
}

uint64_t sub_1AE4FF104()
{
  return swift_deallocObject();
}

unint64_t sub_1AE4FF114(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return v2
       + ((*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80))
       + *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72) * v1;
}

uint64_t sub_1AE4FF14C()
{
  return sub_1AE92442C();
}

uint64_t sub_1AE4FF164()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1AE7F4068(v1, v2, v3, v0);
}

uint64_t sub_1AE4FF178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(id, uint64_t, unint64_t)@<X2>, uint64_t a4@<X8>)
{
  return sub_1AE7F44A8(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, a3, a4);
}

void sub_1AE4FF180()
{
  sub_1AE51BC4C();
}

uint64_t sub_1AE4FF18C()
{
  return swift_retain();
}

void sub_1AE4FF1AC()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

uint64_t sub_1AE4FF1B4()
{
  return sub_1AE926D60();
}

void sub_1AE4FF1C8(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10@<Q0>)
{
  uint64_t v10;
  void (*v11)(uint64_t, char *, uint64_t, uint64_t, _QWORD);

  sub_1AE80E13C(a1, a2, a3, a4, a5, a6, a7, a8, a10.n128_i64[0], a10.n128_i64[1], a9, v10, v11);
}

uint64_t sub_1AE4FF1D8()
{
  return sub_1AE926EF8();
}

uint64_t sub_1AE4FF1E4()
{
  return sub_1AE926B68();
}

uint64_t sub_1AE4FF1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t *v14;

  return sub_1AE582FC0(v14[41], v14[32], v14[33], v14[34], v14[35], v14[42], v14[36], v14[37], a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1AE4FF20C()
{
  return swift_endAccess();
}

uint64_t sub_1AE4FF214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_1AE4FF228()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 120), *(_QWORD *)(v1 - 112));
}

uint64_t sub_1AE4FF234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return a29;
}

uint64_t sub_1AE4FF264()
{
  return 0x6F6E2073656F6420;
}

void sub_1AE4FF288()
{
  sub_1AE519C48();
}

uint64_t sub_1AE4FF294()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1AE4FF2AC()
{
  return sub_1AE92670C();
}

uint64_t sub_1AE4FF2B8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AE4FF2D4()
{
  sub_1AE5FC4B4(0, 0, 0, 0, 16711680);
  sub_1AE60470C(0, 2);
  return swift_release();
}

uint64_t sub_1AE4FF308()
{
  return sub_1AE926D60();
}

void sub_1AE4FF318(unsigned __int8 a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,__int16 a52,__int16 a53,unsigned __int8 a54)
{
  uint64_t v54;
  uint64_t v55;
  char v56;

  a54 = a1;
  a38 = a12;
  a39 = a13;
  a40 = a14;
  a41 = a15;
  a42 = a16;
  a43 = a30;
  a44 = a31;
  a45 = a37;
  a46 = a11;
  a47 = a10;
  a48 = a9;
  a49 = v55;
  a50 = v54;
  a51 = v56;
  sub_1AE84CD68(&a54, (uint64_t)&a38, (uint64_t)&STACK[0x248]);
}

uint64_t sub_1AE4FF3E4()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE579F84(v2, v1, v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE4FF404()
{
  return swift_release();
}

void sub_1AE4FF40C()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

uint64_t sub_1AE4FF414()
{
  return swift_bridgeObjectRetain();
}

void sub_1AE4FF424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16)
{
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;

  *(_QWORD *)(v17 + 8 * (v16 >> 6) + 64) |= 1 << v16;
  v24 = (_QWORD *)(*(_QWORD *)(v17 + 48) + 16 * v16);
  *v24 = v18;
  v24[1] = v22;
  v25 = *(_QWORD *)(v17 + 56) + v16 * v19;
  *(_QWORD *)v25 = a14;
  *(_QWORD *)(v25 + 8) = v20;
  *(_QWORD *)(v25 + 16) = v21;
  *(_QWORD *)(v25 + 24) = v23;
  *(_BYTE *)(v25 + 32) = a16;
}

uint64_t sub_1AE4FF478()
{
  return sub_1AE925CF8();
}

uint64_t sub_1AE4FF4A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

double sub_1AE4FF4AC(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  *(__n128 *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 32) = v2;
  *(_QWORD *)(a1 + 40) = v4;
  result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_QWORD *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 136) = 0x80;
  *(_QWORD *)(a1 + 144) = 768;
  *(_QWORD *)(a1 + 152) = v3;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_QWORD *)(a1 + 240) = 0;
  *(_BYTE *)(a1 + 248) = 0x80;
  return result;
}

uint64_t sub_1AE4FF4F8()
{
  return swift_endAccess();
}

void sub_1AE4FF500()
{
  sub_1AE52154C();
}

uint64_t sub_1AE4FF514()
{
  return sub_1AE926C34();
}

void sub_1AE4FF548()
{
  sub_1AE51BDD4();
}

uint64_t sub_1AE4FF560()
{
  return sub_1AE926B50();
}

void sub_1AE4FF578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;

  GraphObjectBareContextProtocol.graphObject<A>(for:)((uint64_t)&a10, a3, *(_QWORD *)(a2 + 16), a4, *(_QWORD *)(a2 + 24), a6, a7, a8, a9, *v20, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t sub_1AE4FF59C()
{
  return swift_beginAccess();
}

uint64_t sub_1AE4FF5B0()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE4FF5BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void LRUCache.set(_:forKey:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t Strong;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint8_t *v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[3];
  uint64_t *v70;

  v3 = v2;
  v67 = a1;
  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 80);
  v7 = sub_1AE92670C();
  v8 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  v61 = v8;
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  sub_1AE4F686C();
  v63 = v9;
  sub_1AE4F9350();
  v10 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v59 = (char *)&v55 - v11;
  v62 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F686C();
  v64 = v12;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v55 - v14;
  v16 = *(_QWORD *)(v5 + 88);
  v17 = sub_1AE92670C();
  v65 = *(_QWORD *)(v17 - 8);
  v66 = v17;
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v55 - v19;
  v21 = v2 + 3;
  sub_1AE4FB9BC();
  v22 = v2[3];
  v23 = *(_QWORD *)(v5 + 96);
  v24 = type metadata accessor for LRUCacheNode(0, v6, v16, v23);
  v68 = a2;
  v25 = v22;
  v26 = v23;
  MEMORY[0x1AF452F2C](v69, a2, v25, v6, v24, v23);
  v27 = v69[0];
  if (!v69[0])
  {
    v32 = v61;
    v65 = v24;
    v66 = v26;
    v56 = v16;
    v57 = v20;
    v58 = v21;
    sub_1AE4FE108();
    v33 = sub_1AE5018CC();
    v34 = v67;
    v35 = v68;
    v36 = v64;
    v37 = v62;
    if (v33 >= v3[2])
    {
      Strong = swift_weakLoadStrong();
      if (!Strong)
      {
LABEL_7:
        v42 = v34;
        if (qword_1ED31BCB0 != -1)
          swift_once();
        v43 = sub_1AE925B6C();
        sub_1AE4FB608(v43, (uint64_t)qword_1ED31BC90);
        v44 = sub_1AE925B54();
        v45 = sub_1AE9265F8();
        if (os_log_type_enabled(v44, v45))
        {
          v46 = v35;
          v47 = v37;
          v48 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v48 = 0;
          _os_log_impl(&dword_1AE4F2000, v44, v45, "LRUCache: Unable to get LRU node or key.", v48, 2u);
          v49 = v48;
          v37 = v47;
          v35 = v46;
          MEMORY[0x1AF454C78](v49, -1, -1);
        }

        v34 = v42;
        v36 = v64;
        goto LABEL_13;
      }
      v39 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 104);
      sub_1AE4FB9BC();
      v40 = (uint64_t)v59;
      v41 = v60;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v59, v39, v60);
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v40, 1, v6) == 1)
      {
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v40, v41);
        v35 = v68;
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v15, v40, v6);
      sub_1AE50184C();
      v36 = v64;
      (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v64, v15, v6);
      v70 = 0;
      sub_1AE4FB9BC();
      sub_1AE925CF8();
      sub_1AE925D1C();
      sub_1AE4FE108();
      swift_release();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v6);
      v35 = v68;
    }
LABEL_13:
    v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
    v51 = v63;
    v50(v63, v35, v6);
    sub_1AE4FD554(v51);
    v52 = v35;
    v53 = (uint64_t)v57;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v57, v34, v56);
    sub_1AE4FD554(v53);
    v54 = sub_1AE50238C(v51, v53);
    sub_1AE5017B0();
    v50(v36, v52, v6);
    v70 = v54;
    sub_1AE4FB9BC();
    sub_1AE925CF8();
    swift_retain();
    sub_1AE925D1C();
    sub_1AE4FE108();
    swift_release();
    goto LABEL_14;
  }
  sub_1AE4FE108();
  sub_1AE4F94EC((uint64_t)v20, v67, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16));
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v20, 0, 1, v16);
  v28 = v27 + *(_QWORD *)(*(_QWORD *)v27 + 112);
  sub_1AE4FB9BC();
  v29 = v65;
  v30 = v28;
  v31 = v66;
  sub_1AE4F94EC(v30, (uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 40));
  sub_1AE4FE108();
  LRUCache.get(_:)(v68, (uint64_t)v20);
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v31);
LABEL_14:
  sub_1AE4F8180();
}

void UnfairLockedBox.access<A>(_:)(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[6];

  v11[5] = a3;
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + *(_QWORD *)(v9 + 96)));
  v10 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 88);
  sub_1AE4F9094();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
  a1(v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1AE81B76C(v3);
}

uint64_t sub_1AE4FFBC0()
{
  return sub_1AE926B50();
}

BOOL sub_1AE4FFBDC()
{
  return sub_1AE85D040();
}

void sub_1AE4FFBE4(void *a1)
{
  objc_autoreleasePoolPop(a1);
}

uint64_t sub_1AE4FFBF8()
{
  return swift_allocObject();
}

uint64_t sub_1AE4FFC08()
{
  return sub_1AE926AB4();
}

uint64_t sub_1AE4FFC38()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

void sub_1AE4FFC58(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 64) |= v1;
}

uint64_t sub_1AE4FFC6C()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE4FFC80()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return sub_1AE54ABBC(v5, v4, v3, v2, v1, v0, 1);
}

uint64_t sub_1AE4FFCA0()
{
  return swift_release();
}

uint64_t sub_1AE4FFCA8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AE50BDA0(v1, v0);
}

uint64_t sub_1AE4FFCB4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AE50BDB4(v1, v0);
}

void *sub_1AE4FFCC0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x90uLL);
}

uint64_t sub_1AE4FFCC8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AE4FFCD4()
{
  return sub_1AE925F74();
}

id sub_1AE4FFCE4(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_1AE4FFCF0()
{
  return sub_1AE926AB4();
}

uint64_t sub_1AE4FFD04()
{
  return sub_1AE9268EC();
}

uint64_t sub_1AE4FFD14(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_1AE4FFD28()
{
  return sub_1AE924FA8();
}

uint64_t sub_1AE4FFD44()
{
  return sub_1AE926CA0();
}

uint64_t sub_1AE4FFD50()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE4FFD5C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 24) + 8))();
}

void sub_1AE4FFD94()
{
  sub_1AE521A0C();
}

uint64_t sub_1AE4FFDAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
}

uint64_t sub_1AE4FFE10()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE581354(v0, v1);
}

uint64_t sub_1AE4FFE1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v2, v0);
}

double sub_1AE4FFE2C()
{
  uint64_t v0;
  __int16 v1;
  double result;

  v1 = *(_WORD *)(v0 - 148);
  result = *(double *)(v0 - 160);
  *(double *)(v0 - 136) = result;
  *(_DWORD *)(v0 - 128) = *(_DWORD *)(v0 - 152);
  *(_WORD *)(v0 - 124) = v1;
  return result;
}

uint64_t sub_1AE4FFE64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE4FFE74()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE4FFE80()
{
  return swift_beginAccess();
}

id sub_1AE4FFE8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;

  sub_1AE4F9858((_QWORD *)(*(_QWORD *)(v1 + a1) + 16), *(_QWORD *)(*(_QWORD *)(v1 + a1) + 40));
  return v2;
}

uint64_t sub_1AE4FFEC4(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE50FFB8(a1, v1 + 80);
}

uint64_t sub_1AE4FFECC()
{
  return sub_1AE924CCC();
}

uint64_t sub_1AE4FFEE0()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE4FFEF0(_QWORD *a1)
{
  uint64_t v1;

  return sub_1AE50FDF0(a1, (_QWORD *)(v1 + 80));
}

uint64_t sub_1AE4FFEF8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE52F880(v1, v0);
}

void sub_1AE4FFF10()
{
  sub_1AE519C48();
}

void sub_1AE4FFF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  *(_QWORD *)(v12 + 8 * (v14 >> 6) + 64) |= 1 << v14;
  v15 = (_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v14);
  *v15 = v11;
  v15[1] = v13;
  *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v14) = a11;
}

uint64_t sub_1AE4FFF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 8))(v2, v1);
}

void *sub_1AE4FFF90(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x8DuLL);
}

uint64_t sub_1AE4FFF98()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4FFFAC()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1AE4FFFB8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = a1;
  return sub_1AE926BC8();
}

uint64_t sub_1AE4FFFD0()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s20IntelligencePlatform30EntityResolutionRankingServiceC04TextD7OptionsV10typeFilterShyAA0C5ClassVGSgvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE4FFFE0()
{
  return type metadata accessor for UnstructuredImage.Asset(0);
}

uint64_t sub_1AE4FFFF0()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE500014()
{
  uint64_t v0;

  return sub_1AE627AE4(*(_QWORD *)(v0 + 16));
}

void sub_1AE500030()
{
  sub_1AE571708();
}

double sub_1AE500038@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(double *)(v1 + a1);
}

uint64_t sub_1AE500040(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE551D2C(v1, a1);
}

uint64_t sub_1AE500050()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE50005C()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE500070()
{
  return swift_beginAccess();
}

uint64_t sub_1AE500090@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 104) = v1;
  *(_QWORD *)(v3 - 96) = v2;
  *(_QWORD *)(v3 - 112) = a1;
  return sub_1AE9248DC();
}

uint64_t sub_1AE5000AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1AE8BBB30(v3, a1, v2, v1);
}

uint64_t sub_1AE5000C4()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE5000E8()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_1AE5000F4()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_1AE500118()
{
  return sub_1AE925380();
}

uint64_t sub_1AE50013C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_1AE500144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 104))(a1, v1);
}

void sub_1AE500150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,void *a50,void *a51)
{
  uint64_t v51;

  sub_1AE68B860(*(_QWORD *)(v51 - 328), *(_QWORD *)(v51 - 336), *(_QWORD *)(v51 - 344), *(_QWORD *)(v51 - 352), *(_QWORD *)(v51 - 360), *(_QWORD *)(v51 - 368), *(_QWORD *)(v51 - 376), *(_QWORD *)(v51 - 384), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46,
    a47,
    a48,
    a49,
    a50,
    a51);
}

uint64_t sub_1AE5001F4()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE5001FC()
{
  sub_1AE796C2C();
}

uint64_t sub_1AE500214()
{
  return swift_getObjectType();
}

void sub_1AE500230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  GraphObjectBareContextProtocol.graphObject<A>(for:)(v23 - 72, v20, v21, v22, a1, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t sub_1AE500254()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE500264(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  uint64_t v43;

  return sub_1AE5CD6E0((uint64_t)&a43, v43, a3);
}

uint64_t sub_1AE500270()
{
  return swift_getAssociatedTypeWitness();
}

void sub_1AE500298(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, __int128 a14, uint64_t a15, unsigned __int8 a16)
{
  uint64_t v16;

  *(_QWORD *)v16 = a11;
  *(__n128 *)(v16 + 8) = a1;
  *(_OWORD *)(v16 + 24) = a14;
  *(_QWORD *)(v16 + 40) = a15;
  *(_WORD *)(v16 + 48) = a16;
}

uint64_t sub_1AE5002C0()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE5002E0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2;

  sub_1AE526540(a1, a2, v2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE5002F8()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1AE50030C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for InferenceMessageResponseError(0, v5, v4, a4);
}

void sub_1AE50031C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_1AE500330()
{
  return swift_task_alloc();
}

uint64_t sub_1AE50033C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8))(v1, v0);
}

uint64_t sub_1AE500350()
{
  return swift_allocObject();
}

__n128 sub_1AE50035C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __n128 a15, __int128 a16, __int128 a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 result;

  *(_QWORD *)(v18 + 16) = v19;
  v22 = v18 + v21 * v20;
  result = a15;
  *(_QWORD *)(v22 + 80) = a18;
  *(_OWORD *)(v22 + 48) = a16;
  *(_OWORD *)(v22 + 64) = a17;
  *(__n128 *)(v22 + 32) = a15;
  return result;
}

uint64_t sub_1AE50039C(uint64_t result)
{
  _QWORD *v1;

  *v1 |= result;
  return result;
}

void sub_1AE5003AC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v2 + v1);
  v4 = *v3;
  LOBYTE(v3) = *((_BYTE *)v3 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = (_BYTE)v3;
}

uint64_t sub_1AE5003C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 168);
  *(_QWORD *)(v0 - 176) = *(_QWORD *)(v0 - 176);
  *(_QWORD *)(v0 - 168) = v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE5003D4()
{
  return sub_1AE926D60();
}

void sub_1AE5003E4(_QWORD *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  *(_QWORD *)(v2 - 40) = *a1;
  sub_1AE773604((uint64_t *)(v2 - 40), 1, (uint64_t *)va);
}

uint64_t sub_1AE5003FC()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE50040C()
{
  return 0;
}

void sub_1AE500470()
{
  sub_1AE51A600();
}

uint64_t sub_1AE50048C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = a16;
  result = a17;
  *(_QWORD *)(a1 + 24) = a17;
  return result;
}

uint64_t sub_1AE5004A8()
{
  return 0x6765746143707061;
}

void sub_1AE5004C4()
{
  sub_1AE51B588();
}

uint64_t sub_1AE5004D0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1AE5004DC()
{
  return sub_1AE924780();
}

void sub_1AE5004EC()
{
  void *v0;

}

uint64_t sub_1AE5004F8()
{
  return sub_1AE926D18();
}

uint64_t sub_1AE500504()
{
  return sub_1AE926220();
}

uint64_t sub_1AE500514(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_1AE50051C()
{
  return sub_1AE9269AC();
}

void sub_1AE500530()
{
  sub_1AE51BC4C();
}

void *sub_1AE500548(void *a1)
{
  const void *v1;

  return memcpy(a1, v1, 0xA9uLL);
}

uint64_t sub_1AE500554()
{
  return 0x6F69746176656C65;
}

uint64_t sub_1AE500578(uint64_t a1)
{
  return sub_1AE80360C(a1, 0, 0, 0xE0u);
}

void sub_1AE500588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  *(_QWORD *)(v2 - 96) = v0;
  *(_QWORD *)(v2 - 88) = 0;
  *(_QWORD *)(v2 - 104) = v1;
  v3 = v1 + 64;
  v4 = (unint64_t)((1 << *(_BYTE *)(v3 - 32)) + 63) >> 6;
  *(_QWORD *)(v2 - 120) = v3;
  *(_QWORD *)(v2 - 112) = v4;
  *(_QWORD *)(v2 - 128) = v4 - 1;
}

uint64_t sub_1AE5005CC(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 0, 1, v1);
}

uint64_t sub_1AE5005DC()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE5005E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1AE5005F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t *v14;

  return sub_1AE582FC0(v14[24], v14[23], v14[47], v14[48], v14[52], v14[51], v14[50], v14[49], v14[46], v14[45], v14[44], a12, a13, a14);
}

uint64_t sub_1AE500624()
{
  return sub_1AE926D18();
}

uint64_t sub_1AE500630()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE500640()
{
  return swift_deallocObject();
}

uint64_t sub_1AE500650()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE579F84(v2, v1, v0);
  return swift_bridgeObjectRelease_n();
}

_QWORD *sub_1AE500674()
{
  uint64_t v0;

  return sub_1AE4F9858((_QWORD *)(v0 - 240), *(_QWORD *)(v0 - 216));
}

double sub_1AE500694()
{
  return 0.0;
}

uint64_t sub_1AE5006A4()
{
  return swift_allocObject();
}

uint64_t sub_1AE5006B4()
{
  return sub_1AE926C40();
}

uint64_t sub_1AE5006C4()
{
  return sub_1AE925128();
}

uint64_t sub_1AE5006E4()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE5006F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t v44;
  unint64_t v45;
  unsigned __int8 v46;

  return sub_1AE582FC0(a19, a20, a21, a22, a23, a37, a38, a44, a18, a17, a16, v45, v44, v46);
}

char *sub_1AE500724()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE851BD4((uint64_t *)(v1 - 72), v0);
}

uint64_t sub_1AE500734(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x735F000000000000;
}

void sub_1AE50074C()
{
  sub_1AE519C48();
}

uint64_t sub_1AE500764()
{
  return sub_1AE9262B0();
}

uint64_t sub_1AE500770()
{
  return swift_retain();
}

uint64_t sub_1AE500790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v2, v0);
}

uint64_t sub_1AE5007A0()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE5007C0()
{
  return sub_1AE924CCC();
}

uint64_t sub_1AE5007D0()
{
  return 0x63537374726F7073;
}

uint64_t sub_1AE5007F4()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE500810()
{
  return swift_beginAccess();
}

uint64_t sub_1AE500824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return TripleEnumeratorProtocol<>.triples<A>(for:)(v4, v1, v3, a1, v2);
}

void sub_1AE500840()
{
  JUMPOUT(0x1AF452170);
}

uint64_t sub_1AE500858()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  return v0(v1);
}

uint64_t sub_1AE50087C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1AE500890()
{
  return swift_allocObject();
}

uint64_t sub_1AE5008A0()
{
  return sub_1AE926AB4();
}

uint64_t sub_1AE5008D4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5008F0()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE500900()
{
  return sub_1AE926B20();
}

uint64_t sub_1AE500918()
{
  return type metadata accessor for CustomGraphSongEvent(0);
}

uint64_t sub_1AE500934()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  return sub_1AE536AF8(v3, v1, v0, v2);
}

uint64_t sub_1AE500948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  return sub_1AE5495E4(a1, a2, a3, v13, v14, a12, v12, 0);
}

uint64_t sub_1AE500964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 8))(v1, v0);
}

uint64_t sub_1AE500978()
{
  return sub_1AE926EC8();
}

uint64_t sub_1AE500980()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE5009A4()
{
  return sub_1AE926C40();
}

id sub_1AE5009B4(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

void sub_1AE5009BC()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

uint64_t _s20IntelligencePlatform5CachePAAEy5ValueQzSg3KeyQzcig_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1AE5009D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 1, 1, a4);
  return swift_retain();
}

uint64_t sub_1AE500A04()
{
  return sub_1AE926D60();
}

unint64_t sub_1AE500A1C()
{
  return 0xD000000000000010;
}

uint64_t sub_1AE500A30()
{
  return swift_retain();
}

uint64_t sub_1AE500A44()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE500A54()
{
  return swift_retain();
}

unint64_t sub_1AE500A68(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t sub_1AE500A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_1AE500A7C()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AE54C814(v1, v0);
}

uint64_t sub_1AE500A88()
{
  return sub_1AE592EFC();
}

uint64_t sub_1AE500AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, a3);
}

uint64_t sub_1AE500ABC()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t sub_1AE500ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t sub_1AE500AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v1, v3);
}

uint64_t sub_1AE500AEC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a2 = 2;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 33) = 0u;
  *(_BYTE *)(a2 + 49) = 2;
  return swift_willThrow();
}

uint64_t sub_1AE500B14()
{
  return sub_1AE925F8C();
}

void sub_1AE500B7C()
{
  sub_1AE51A9D8();
}

uint64_t sub_1AE500B88@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 + 8);
}

uint64_t sub_1AE500BA8()
{
  return sub_1AE92676C();
}

uint64_t sub_1AE500BB8()
{
  return sub_1AE926CA0();
}

uint64_t sub_1AE500BC8()
{
  uint64_t v0;

  return sub_1AE50BA54(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
}

uint64_t sub_1AE500BD4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
  return sub_1AE926C40();
}

uint64_t sub_1AE500BEC()
{
  uint64_t v0;

  return sub_1AE60DCAC(*(_QWORD *)(v0 + 344));
}

uint64_t sub_1AE500C00(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  *(_QWORD *)(v1 + 40) = *(_QWORD *)(a1 - 8);
  return swift_task_alloc();
}

uint64_t sub_1AE500C20(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1AE500C34()
{
  sub_1AE521C64();
}

uint64_t sub_1AE500C4C()
{
  return sub_1AE926CC4();
}

double sub_1AE500C68(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  double result;

  v22 = (double *)(*(_QWORD *)(v11 + 56) + v12 * v13);
  *(_QWORD *)v22 = v14;
  *((_QWORD *)v22 + 1) = v21;
  *((_QWORD *)v22 + 2) = v20;
  *((_QWORD *)v22 + 3) = v19;
  *((_QWORD *)v22 + 4) = v18;
  *((_QWORD *)v22 + 5) = v17;
  *((_QWORD *)v22 + 6) = v16;
  *((_QWORD *)v22 + 7) = v15;
  result = a11;
  v22[8] = a11;
  return result;
}

id sub_1AE500C8C(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_1AE500C98()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 360);
}

uint64_t sub_1AE500CB8()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE500CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AE655DC4(a1, a2, a3, a4, a5);
}

void sub_1AE500CDC()
{
  JUMPOUT(0x1AF454B70);
}

uint64_t sub_1AE500CE4(uint64_t a1, uint64_t *a2)
{
  return sub_1AE657004(a1, a2);
}

uint64_t sub_1AE500CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1AE500CFC()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE500D08()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE500D18()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1AE500D24()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE500D30()
{
  return sub_1AE926940();
}

uint64_t sub_1AE500D38()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE500D4C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1AE500D58()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE500D70()
{
  return sub_1AE9269DC();
}

id sub_1AE500D7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(id *)(v1 + a1);
}

uint64_t sub_1AE500D84()
{
  return 0;
}

uint64_t sub_1AE500DB4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 32))(v1, v0);
}

uint64_t sub_1AE500DD4()
{
  return swift_deallocObject();
}

void sub_1AE500DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v0 + 8 * (v4 >> 6) + 64) |= 1 << v4;
  v5 = (_QWORD *)(*(_QWORD *)(v0 + 48) + 16 * v4);
  *v5 = v3;
  v5[1] = v2;
  *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v4) = v1;
}

uint64_t sub_1AE500E30()
{
  return type metadata accessor for InferenceServer();
}

uint64_t sub_1AE500E38()
{
  return sub_1AE926F4C();
}

uint64_t sub_1AE500E4C()
{
  return swift_allocObject();
}

uint64_t sub_1AE500E5C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_1AE500E94()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 104));
}

uint64_t sub_1AE500EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1AE500EA8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE500EBC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AE500ED4()
{
  return sub_1AE925F74();
}

_QWORD *sub_1AE500EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return sub_1AE4F9858(&a10, a13);
}

_QWORD *sub_1AE500EF0(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  return (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 24))((uint64_t *)va, v2, v3);
}

uint64_t sub_1AE500F08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 120);
  *(_QWORD *)(v0 - 104) = *(_QWORD *)(v0 - 128);
  *(_QWORD *)(v0 - 96) = v1;
  return sub_1AE925F74();
}

void sub_1AE500F38()
{
  sub_1AE51B560();
}

uint64_t sub_1AE500F50()
{
  return 0x49746361746E6F63;
}

uint64_t sub_1AE500F6C()
{
  return 0x464F5F5452415453;
}

void sub_1AE500F90()
{
  sub_1AE51B644();
}

double sub_1AE500F9C@<D0>(uint64_t a1@<X8>)
{
  return *(double *)(a1 + 120);
}

uint64_t sub_1AE500FB4()
{
  return sub_1AE926B20();
}

uint64_t sub_1AE500FCC()
{
  return sub_1AE92442C();
}

uint64_t sub_1AE500FE4()
{
  return swift_beginAccess();
}

uint64_t sub_1AE500FF4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE501008()
{
  return 0x65746E6F4373746BLL;
}

void sub_1AE501024(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10@<Q0>)
{
  void (*v10)(uint64_t, uint64_t, uint64_t, _QWORD);

  sub_1AE80E39C(a1, a2, a3, a4, a5, a6, a7, a8, a10.n128_i64[0], a10.n128_i64[1], a9, v10);
}

uint64_t sub_1AE501030(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3 + *(int *)(a1 + 48), v1, v2);
}

uint64_t sub_1AE50104C()
{
  return sub_1AE926BC8();
}

uint64_t sub_1AE501058()
{
  return swift_retain();
}

uint64_t sub_1AE501088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned __int8 a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  return sub_1AE583000(a31, a32, a33, a34, a35, a36, a37, a38, a30, a29, a28, a27, a26, a25);
}

void sub_1AE5010C4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v1;
  a1[1] = (v2 - 32) | 0x8000000000000000;
  a1[2] = 0x636C65646F6D6C6DLL;
  a1[3] = 0xE800000000000000;
}

void sub_1AE5010EC()
{
  sub_1AE519C64();
}

uint64_t sub_1AE501100()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 240);
}

uint64_t sub_1AE501108()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 8))(v0);
}

double sub_1AE50111C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 112) = a1;
  return sub_1AE8038C4(v2 - 160);
}

_QWORD *sub_1AE50112C()
{
  _QWORD *v0;

  return sub_1AE56E58C(v0);
}

uint64_t sub_1AE501134()
{
  return sub_1AE926B68();
}

uint64_t sub_1AE501144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for Heap(0, a2, a3, a4);
}

uint64_t sub_1AE50114C(uint64_t a1, uint64_t a2)
{
  return sub_1AE5158B8(a1, a2);
}

uint64_t sub_1AE501158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  return sub_1AE58307C(a36, a25, a39, a41, a42, a27, a26, a28, a35, a34, a33, a12, a13, a14);
}

uint64_t sub_1AE501180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;

  *(_QWORD *)(v37 - 216) = a31;
  *(_QWORD *)(v37 - 208) = a32;
  *(_QWORD *)(v37 - 200) = a25;
  *(_QWORD *)(v37 - 192) = a26;
  *(_QWORD *)(v37 - 184) = a27;
  *(_QWORD *)(v37 - 176) = a28;
  *(_QWORD *)(v37 - 168) = a29;
  *(_QWORD *)(v37 - 160) = a30;
  *(_QWORD *)(v37 - 152) = a33;
  *(_QWORD *)(v37 - 144) = a34;
  *(_QWORD *)(v37 - 136) = a35;
  *(_QWORD *)(v37 - 128) = a36;
  *(_QWORD *)(v37 - 120) = a37;
  *(_BYTE *)(v37 - 112) = *(_DWORD *)(v37 - 68);
  return v37 - 216;
}

void sub_1AE5011E4()
{
  sub_1AE51A7A8();
}

uint64_t sub_1AE5011F0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 88) = *(_QWORD *)(v0 - 96);
  return EntityIdentifier.stringValue.getter();
}

uint64_t sub_1AE501200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_1AE501214()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE501224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_1AE501234()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE50124C()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE50125C()
{
  return sub_1AE9267B4();
}

uint64_t sub_1AE501278()
{
  return sub_1AE926D60();
}

void sub_1AE50129C()
{
  sub_1AE519C48();
}

void sub_1AE5012B4()
{
  sub_1AE51BDD4();
}

uint64_t sub_1AE5012C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 - 120);
  v2 = *(_QWORD *)(v0 - 112);
  sub_1AE4F9858((_QWORD *)(v0 - 144), v1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 24) + 40))(v1);
}

uint64_t sub_1AE5012EC()
{
  return sub_1AE926B80();
}

uint64_t sub_1AE5012FC()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t sub_1AE50130C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1AE501314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v0, v1);
}

uint64_t sub_1AE501328()
{
  return swift_beginAccess();
}

uint64_t sub_1AE501338()
{
  return swift_release();
}

uint64_t sub_1AE501340()
{
  uint64_t v0;
  uint64_t (*v1)(BOOL);

  return sub_1AE8DD894(*(_QWORD *)(*(_QWORD *)v0 + 16), v1);
}

uint64_t sub_1AE501354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  int v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _OWORD v22[2];

  v20 = a5;
  v7 = type metadata accessor for UserDefault(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - v9;
  v19 = sub_1AE92670C();
  v11 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v13 = (char *)&v19 - v12;
  v14 = *(void **)(a1 + *(int *)(v7 + 32));
  v15 = (void *)sub_1AE925E18();
  v16 = objc_msgSend(v14, sel_objectForKey_, v15);

  if (v16)
  {
    sub_1AE9267E4();
    swift_unknownObjectRelease();
    sub_1AE53F2F4(&v21, v22);
  }
  else
  {
    memset(v22, 0, sizeof(v22));
  }
  sub_1AE501548((uint64_t *)&unk_1ED31C440);
  v17 = swift_dynamicCast();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v13, v17 ^ 1u, 1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, a2) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(v20, v10, a2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(v20, v13, a2);
  }
}

uint64_t sub_1AE501548(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1AF454B58]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

void sub_1AE501594(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();

}

uint64_t sub_1AE5015E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void *v10;
  id v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = (void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  v10 = *v9;
  *(_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8) = *v9;
  swift_bridgeObjectRetain();
  v11 = v10;
  return a1;
}

uint64_t LRUCache.get(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = (_QWORD *)*v2;
  sub_1AE4FB9BC();
  v6 = v2[3];
  v8 = v5[10];
  v7 = v5[11];
  v9 = v5[12];
  v10 = type metadata accessor for LRUCacheNode(0, v8, v7, v9);
  MEMORY[0x1AF452F2C](&v15, a1, v6, v8, v10, v9);
  v11 = v15;
  if (v15)
  {
    sub_1AE4F7804();
    sub_1AE50184C();
    sub_1AE5017B0();
    v12 = v11 + *(_QWORD *)(*(_QWORD *)v11 + 112);
    sub_1AE4FB9BC();
    v13 = sub_1AE92670C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a2, v12, v13);
    return swift_release();
  }
  else
  {
    sub_1AE4F7804();
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a2, 1, 1, v7);
  }
}

uint64_t sub_1AE501778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1AF454AEC](a1, v6, a5);
}

uint64_t type metadata accessor for LRUCacheNode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LRUCacheNode);
}

uint64_t sub_1AE5017B0()
{
  uint64_t Strong;

  Strong = swift_weakLoadStrong();
  swift_weakAssign();
  if (Strong)
    swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  return swift_release();
}

uint64_t type metadata accessor for UserDefault(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserDefault);
}

uint64_t sub_1AE50184C()
{
  uint64_t Strong;
  uint64_t v1;

  Strong = swift_weakLoadStrong();
  v1 = swift_weakLoadStrong();
  if (Strong)
    swift_weakAssign();
  if (v1)
  {
    swift_weakAssign();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1AE5018CC()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = *v0;
  sub_1AE4FB9BC();
  type metadata accessor for LRUCacheNode(0, v1[10], v1[11], v1[12]);
  swift_bridgeObjectRetain();
  v2 = sub_1AE925CBC();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_1AE501950(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1AE50196C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  unsigned __int8 v21;
  uint64_t v22;
  uint64_t v23;

  return sub_1AE525C94(a13, a17, a21, v23, v22, v21);
}

uint64_t sub_1AE501988()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5019A0()
{
  return sub_1AE924C9C();
}

uint64_t sub_1AE5019B0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t (*v9)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  return sub_1AE530384(a1, a2, a3, a4, a5, a6, a7, a8, a9, v9);
}

uint64_t sub_1AE5019B8()
{
  return sub_1AE926EC8();
}

uint64_t sub_1AE5019C4()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1AE547444(v2, v1, v0);
}

uint64_t sub_1AE5019D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 120) = v4;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v0;
  return 255;
}

uint64_t sub_1AE5019F0()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE5019FC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1AE501A20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v2);
}

uint64_t sub_1AE501A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;

  return sub_1AE5755B4(v23, a22, a23);
}

uint64_t sub_1AE501A38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(a1 + v4, v2, v1);
}

uint64_t sub_1AE501A60(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

uint64_t sub_1AE501A7C()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE501A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * ((a1 - 32) / v3);
}

uint64_t sub_1AE501ABC()
{
  return sub_1AE925E18();
}

void sub_1AE501AD4()
{
  void *v0;

}

uint64_t sub_1AE501B00(_WORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = 0;
  v1[3] = 0;
  *a1 = 0;
  v1[4] = a1 + 1;
  return sub_1AE59FC10(v2, (uint64_t)(v1 + 4), (uint64_t)(v1 + 3), (uint64_t)(v1 + 2));
}

void sub_1AE501B44()
{
  sub_1AE51AAAC();
}

uint64_t sub_1AE501B50()
{
  return sub_1AE926EE0();
}

uint64_t sub_1AE501B60()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v0, v1);
}

uint64_t sub_1AE501B7C()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE501B88@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE501B94()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE501BC0()
{
  return sub_1AE925B0C();
}

uint64_t sub_1AE501BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE501BEC@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return sub_1AE926B68();
}

uint64_t sub_1AE501C08()
{
  return swift_task_alloc();
}

void *sub_1AE501C10(void *__dst, const void *__src, size_t __n)
{
  return memcpy(__dst, __src, __n);
}

uint64_t sub_1AE501C18()
{
  uint64_t v0;

  return sub_1AE62702C(*(_QWORD *)(v0 + 120));
}

uint64_t sub_1AE501C30()
{
  return sub_1AE926F34();
}

id sub_1AE501C48(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return objc_msgSendSuper2(&a9, a2);
}

void sub_1AE501C50()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1AE501C64()
{
  return sub_1AE9267CC();
}

uint64_t sub_1AE501C7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE501C88()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t sub_1AE501CBC()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE501CC8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AE50BDA0(v0, v1);
}

uint64_t sub_1AE501CD4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE501CE0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE501CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 112));
}

id sub_1AE501D00()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

uint64_t sub_1AE501D10()
{
  return swift_beginAccess();
}

uint64_t sub_1AE501D24()
{
  uint64_t v0;
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v0, 1, v1);
}

uint64_t sub_1AE501D44()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE501D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v2;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = v4;
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(v11 - 216);
  *(_QWORD *)(a2 + 56) = v10;
  *(_QWORD *)(a2 + 64) = v9;
  *(_BYTE *)(a2 + 72) = v3;
}

uint64_t sub_1AE501D94()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE501DAC()
{
  return sub_1AE926CC4();
}

void sub_1AE501DB8(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_1AE501DC4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE501DD4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE501DE4()
{
  return sub_1AE9262D4();
}

uint64_t sub_1AE501DF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t sub_1AE501E04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 255;
}

uint64_t sub_1AE501E1C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  return sub_1AE52982C((uint64_t)&a34, a2);
}

uint64_t sub_1AE501E24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return 0;
}

uint64_t sub_1AE501E3C()
{
  return swift_task_switch();
}

uint64_t sub_1AE501E4C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 168);
}

uint64_t sub_1AE501E5C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE59CC30(v0, v1, 0);
  return sub_1AE59CC30(v0, v1, 0);
}

void sub_1AE501E84()
{
  sub_1AE519C48();
}

uint64_t sub_1AE501E90()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE501EA0()
{
  return 0;
}

uint64_t sub_1AE501ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_1AE501ED8()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE501EF0()
{
  return 0x656D614E7473616CLL;
}

uint64_t sub_1AE501F08()
{
  return 0x54535F48544E4F4DLL;
}

id sub_1AE501F44(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_1AE501F4C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE501F5C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1AE501F64()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1AE501F70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 16) = 3;
  return swift_willThrow();
}

uint64_t sub_1AE501F88()
{
  return 0x656D6954646E65;
}

uint64_t sub_1AE501FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE8035B8(a1, a2, v2, 1u);
  sub_1AE8035B8(v4, v5, v3, 1u);
  return sub_1AE80360C(v4, v5, v3, 1u);
}

uint64_t sub_1AE501FF0@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t, char *, uint64_t, _QWORD, uint64_t, _BYTE *);

  return sub_1AE807694(a1, a2, a3, a4, a5, a6, a7, a8, a9, v9, v10);
}

void sub_1AE501FFC(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void (*a9)(uint64_t, char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD)@<X8>)
{
  sub_1AE80A1DC(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1AE502004()
{
  return sub_1AE926B68();
}

uint64_t sub_1AE502028()
{
  uint64_t v0;

  return sub_1AE829678(v0 - 224, v0 - 176);
}

uint64_t sub_1AE50204C()
{
  return sub_1AE926D60();
}

__n128 sub_1AE50206C(uint64_t a1)
{
  __n128 *v1;
  uint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  sub_1AE805E40(a1, 0, 0, 0xE0u);
  v3 = *(_QWORD *)(v2 - 144);
  v4 = *(_BYTE *)(v2 - 136);
  result = *(__n128 *)(v2 - 160);
  v1[5] = result;
  v1[6].n128_u64[0] = v3;
  v1[6].n128_u8[8] = v4;
  return result;
}

void sub_1AE5020A8()
{
  JUMPOUT(0x1AF454C78);
}

uint64_t sub_1AE5020B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unsigned __int8 a42)
{
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;

  return sub_1AE582FC0(a30, a29, a32, a33, a34, a41, a35, a36, a39, v42, v43, v44, v45, a42);
}

uint64_t sub_1AE5020E8()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE502100()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AE50BDB4(v1, v0);
}

uint64_t sub_1AE50210C()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE502114@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_1AE925AE8();
}

uint64_t sub_1AE502134()
{
  uint64_t v0;

  return sub_1AE89EAE4(v0);
}

uint64_t sub_1AE502144()
{
  return sub_1AE926EE0();
}

uint64_t sub_1AE50214C(uint64_t a1, uint64_t a2)
{
  return sub_1AE698BF0(a1, a2);
}

uint64_t sub_1AE502178()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE502198()
{
  return sub_1AE926994();
}

uint64_t sub_1AE5021A4()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5021B0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5021B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

void sub_1AE5021CC()
{
  sub_1AE51BDD4();
}

uint64_t sub_1AE5021E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

__n128 sub_1AE5021F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 result;

  v2 = *(_QWORD *)(v0 + 48);
  *(_OWORD *)(v1 - 160) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 - 144) = v2;
  result = *(__n128 *)(v0 + 56);
  *(__n128 *)(v1 - 136) = result;
  return result;
}

uint64_t *sub_1AE502224(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  v6 = (uint64_t)v2 + *(_QWORD *)(*v2 + 104);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v6, 1, 1, *(_QWORD *)(*v2 + 80));
  v7 = (uint64_t)v2 + *(_QWORD *)(*v2 + 112);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v7, 1, 1, *(_QWORD *)(v5 + 88));
  swift_weakInit();
  swift_weakInit();
  swift_beginAccess();
  v8 = sub_1AE92670C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, a1, v8);
  swift_endAccess();
  swift_beginAccess();
  v9 = sub_1AE92670C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, a2, v9);
  swift_endAccess();
  swift_weakAssign();
  swift_weakAssign();
  return v2;
}

uint64_t _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t *sub_1AE50238C(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return sub_1AE502224(a1, a2);
}

uint64_t sub_1AE5023D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (**v2)(void);

  return sub_1AE5023EC(a1, v2, a2);
}

uint64_t sub_1AE5023EC@<X0>(uint64_t a1@<X0>, void (**a2)(void)@<X1>, uint64_t a3@<X8>)
{
  void (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t result;
  uint64_t v18;

  v5 = *a2;
  v6 = *((_QWORD *)*a2 + 11);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)v8;
  if (*(_QWORD *)(*(_QWORD *)v8 + 24))
  {
    swift_retain();
    sub_1AE501548((uint64_t *)&unk_1ED319C60);
    sub_1AE926340();
    swift_release();
  }
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
    goto LABEL_9;
  type metadata accessor for ExpirableLazyBox.Box(0, *((_QWORD *)v5 + 10), v6, *((_QWORD *)v5 + 12));
  a2[2]();
  *(_QWORD *)(v11 + 16) = sub_1AE666524((uint64_t)v10);
  swift_release();
  if (qword_1ED31BCB0 != -1)
    swift_once();
  v13 = sub_1AE925B6C();
  sub_1AE4FB608(v13, (uint64_t)qword_1ED31BC90);
  v14 = sub_1AE925B54();
  v15 = sub_1AE9265E0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1AE4F2000, v14, v15, "ExpirableLazyBox value initialized", v16, 2u);
    MEMORY[0x1AF454C78](v16, -1, -1);
  }

  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
LABEL_9:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a3, v12 + *(_QWORD *)(*(_QWORD *)v12 + 104), v6);
    swift_retain();
    sub_1AE50263C(v11);
    return swift_release();
  }
  else
  {
    result = sub_1AE926AB4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE50263C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;

  v41 = a1;
  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8);
  v36 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(v3 + 64);
  v38 = v3;
  v39 = v4;
  MEMORY[0x1E0C80A78](a1);
  v44 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v2[12];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v43 = sub_1AE92670C();
  v34 = *(_QWORD *)(v43 - 8);
  v7 = *(_QWORD *)(v34 + 64);
  v8 = MEMORY[0x1E0C80A78](v43);
  v42 = (char *)&v31 - v9;
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v32 = AssociatedTypeWitness;
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v31 - v12;
  v33 = (char *)&v31 - v12;
  v14 = sub_1AE501548(&qword_1ED318B50);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v16;
  v17 = v1 + v2[16];
  v18 = v1 + v2[17];
  v31 = v1 + v2[15];
  v19 = sub_1AE926328();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v16, 1, 1, v19);
  v35 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v17, AssociatedTypeWitness);
  v20 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v42, v18, v43);
  v21 = v38;
  v22 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v44, v31, v36);
  v23 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v24 = (v11 + *(unsigned __int8 *)(v20 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v25 = (v7 + *(unsigned __int8 *)(v21 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v26 = (v39 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (char *)swift_allocObject();
  *((_QWORD *)v27 + 2) = 0;
  *((_QWORD *)v27 + 3) = 0;
  *((_QWORD *)v27 + 4) = v22;
  v28 = v40;
  *((_QWORD *)v27 + 5) = v2[11];
  *((_QWORD *)v27 + 6) = v28;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v27[v23], v33, v32);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v27[v24], v42, v43);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v27[v25], v44, v22);
  *(_QWORD *)&v27[v26] = v35;
  sub_1AE75B77C((uint64_t)v37, (uint64_t)&unk_1EED9F228, (uint64_t)v27);
  *(_QWORD *)(v41 + 24) = v29;
  return swift_release();
}

uint64_t sub_1AE50290C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1ED318B50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AE50327C()
{
  return swift_unknownObjectRelease();
}

void sub_1AE5032A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  sub_1AE520ED4(a1, a2, v20 - 128, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void sub_1AE5032B0()
{
  unint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 8 * (v0 >> 6) + 64) |= 1 << v0;
}

void sub_1AE5032DC()
{
  JUMPOUT(0x1AF454B70);
}

uint64_t sub_1AE5032E4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5032F0()
{
  return swift_allocObject();
}

uint64_t sub_1AE5032FC(char a1)
{
  return a1 & 1;
}

uint64_t sub_1AE503308()
{
  return type metadata accessor for CustomGraphSongEvent(0);
}

void sub_1AE503310(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 64) |= v1;
}

uint64_t sub_1AE503334()
{
  return swift_allocObject();
}

unint64_t sub_1AE503340(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  *(_QWORD *)(a5 + 8 * (result >> 6) + 64) |= 1 << result;
  v5 = (_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  return result;
}

uint64_t sub_1AE503370(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_1AE503380()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE50338C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  return sub_1AE5495E4(a1, a2, a3, a4, a5, v6, v5, 0);
}

uint64_t sub_1AE50339C()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE5033B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t sub_1AE5033C4()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE5033D0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1AE5033D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_1AE567888(a1, a2);
  return sub_1AE567888(v2, v3);
}

uint64_t sub_1AE5033F0()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1AE503404()
{
  return sub_1AE56A800();
}

uint64_t sub_1AE503410()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE503420()
{
  return sub_1AE925248();
}

void sub_1AE503440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  sub_1AE520ED4(0x7361696C61, 0xE500000000000000, v20 + 152, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t sub_1AE503458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 304) + 8))(v1, v0);
}

id sub_1AE503470(uint64_t a1, const char *a2)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(v2 - 96), a2);
}

uint64_t sub_1AE503484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  return sub_1AE57C238(*(_QWORD *)(v28 + 56) + 40 * a1, (uint64_t)&a28);
}

uint64_t sub_1AE503498()
{
  return sub_1AE924918();
}

uint64_t sub_1AE5034A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1AE5034B0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1AE5034B8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  *(_QWORD *)v2 = v3;
  *(_QWORD *)(v2 + 8) = v4;
  *(_QWORD *)(v2 + 16) = result;
  *(_QWORD *)(v2 + 24) = a2;
  *(_BYTE *)(v2 + 32) = v5;
  return result;
}

void sub_1AE5034C8()
{
  EntityClass.ancestorClassesSet.getter();
}

void sub_1AE5034DC()
{
  sub_1AE519F94();
}

double sub_1AE5034E8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  STACK[0x16B8] = v4;
  STACK[0x16C0] = 0;
  STACK[0x16D0] = 0;
  STACK[0x16C8] = 0;
  STACK[0x16D8] = v5;
  STACK[0x16E0] = v3;
  STACK[0x16E8] = v2;
  STACK[0x16F0] = v1;
  STACK[0x16F8] = v0;
  return 0.0;
}

void *sub_1AE503520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, void *a13, unint64_t a14)
{
  unint64_t v14;

  STACK[0x848] = 0;
  LOBYTE(STACK[0x850]) = 1;
  STACK[0x858] = v14;
  LOBYTE(STACK[0x860]) = a12 & 1;
  STACK[0x868] = a14;
  return memcpy(a13, &STACK[0x408], 0x468uLL);
}

uint64_t sub_1AE503550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  return sub_1AE655044(v12, v11, v10, a4, a5, a6, a7, a8, a9, a10);
}

void sub_1AE503560(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  sub_1AE5EFDC8(a1, a2, v2, v3);
}

uint64_t sub_1AE50356C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = a1;
  return v1 - 65;
}

BOOL sub_1AE503578(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_1AE503588()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 904) = v1;
  *(_QWORD *)(v0 + 912) = *(_QWORD *)(v0 + 384);
  *(_BYTE *)(v0 + 920) = *(_DWORD *)(v0 + 380);
  *(_BYTE *)(v0 + 921) = *(_DWORD *)(v0 + 376);
  *(_BYTE *)(v0 + 922) = *(_DWORD *)(v0 + 372);
}

uint64_t sub_1AE5035B4()
{
  return swift_allocObject();
}

uint64_t sub_1AE5035C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_1AE4FB608(v3, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
}

uint64_t sub_1AE5035E4()
{
  return sub_1AE925B0C();
}

uint64_t sub_1AE5035F8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 120) + 8))(v0, *(_QWORD *)(v1 - 96));
}

uint64_t sub_1AE50360C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  return sub_1AE60DCAC(a43);
}

void sub_1AE503620()
{
  sub_1AE521C64();
}

void sub_1AE503648(uint64_t a1@<X8>)
{
  char v1;

  *(_QWORD *)(a1 + 64) |= 1 << v1;
}

uint64_t destroy for TrialAssetManager.RefreshPolicy()
{
  return swift_release();
}

uint64_t sub_1AE503668()
{
  return sub_1AE5373F8();
}

uint64_t sub_1AE50367C()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE503684(uint64_t a1, uint64_t a2)
{
  sub_1AE655C90(a1, a2);
}

uint64_t sub_1AE503690()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t sub_1AE5036A4()
{
  return sub_1AE6588A4();
}

void sub_1AE5036C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10@<Q0>)
{
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1AE65B034(a1, a2, a3, a4, a5, a6, a7, a8, a10.n128_i64[0], a10.n128_i64[1], a9, v10);
}

uint64_t sub_1AE5036D0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE5036DC@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t sub_1AE5036E8()
{
  return sub_1AE925380();
}

uint64_t sub_1AE503704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_1AE50370C()
{
  uint64_t v0;
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, v0);
}

id sub_1AE50371C(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(a1, (SEL)(v2 + 3784), v1);
}

id sub_1AE503728@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;

  sub_1AE4F9858((_QWORD *)(v1 + a1), *(_QWORD *)(v1 + a1 + 24));
  return v2;
}

uint64_t sub_1AE503748()
{
  uint64_t v0;

  return v0 + *(_QWORD *)(*(_QWORD *)v0 + 184);
}

double sub_1AE503760()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  *(_QWORD *)v0 = v1;
  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_QWORD *)(v0 + 40) = 0;
  return result;
}

uint64_t sub_1AE50377C()
{
  return swift_bridgeObjectRetain();
}

void sub_1AE503790(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 - 160) = v1;
  *(_QWORD *)(v3 - 152) = a1;
  *(_QWORD *)(v3 - 144) = *(_QWORD *)(v3 - 248);
  *(_QWORD *)(v3 - 136) = v2;
  v4 = *(_QWORD *)(v3 - 264);
  *(_QWORD *)(v3 - 128) = *(_QWORD *)(v3 - 256);
  *(_QWORD *)(v3 - 120) = v4;
  v5 = *(_QWORD *)(v3 - 280);
  *(_QWORD *)(v3 - 112) = *(_QWORD *)(v3 - 272);
  *(_QWORD *)(v3 - 104) = v5;
  *(_QWORD *)(v3 - 96) = *(_QWORD *)(v3 - 288);
}

void sub_1AE5037D0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1AE5037E4()
{
  return sub_1AE926F34();
}

uint64_t sub_1AE5037FC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1AE503814()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE503828()
{
  return sub_1AE926C88();
}

uint64_t sub_1AE503854()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE503860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 0, 1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v0, v2);
}

void sub_1AE503890()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_lock(v0);
}

void sub_1AE503898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v1 + 16) = v4;
  v7 = v1 + 104 * v5;
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v0;
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(v6 - 432);
  *(_QWORD *)(v7 + 56) = v2;
  *(_WORD *)(v7 + 64) = *(_DWORD *)(v6 - 436);
  v8 = *(_QWORD *)(v6 - 408);
  *(_QWORD *)(v7 + 72) = *(_QWORD *)(v6 - 416);
  *(_QWORD *)(v7 + 80) = v8;
  v9 = *(_QWORD *)(v6 - 392);
  *(_QWORD *)(v7 + 88) = *(_QWORD *)(v6 - 400);
  *(_QWORD *)(v7 + 96) = v9;
  v10 = *(_QWORD *)(v6 - 376);
  *(_QWORD *)(v7 + 104) = *(_QWORD *)(v6 - 384);
  *(_QWORD *)(v7 + 112) = v10;
  *(_QWORD *)(v7 + 120) = *(_QWORD *)(v6 - 368);
  *(_BYTE *)(v7 + 128) = *(_DWORD *)(v6 - 360);
  *(_BYTE *)(v7 + 129) = *(_DWORD *)(v6 - 420);
}

uint64_t sub_1AE503924()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE595318(v1 - 160, v0);
}

uint64_t sub_1AE503930(uint64_t a1, uint64_t a2)
{
  return sub_1AE5281B4(a1, a2);
}

void sub_1AE503938()
{
  sub_1AE51B560();
}

uint64_t sub_1AE503944()
{
  return 0x6E6F6974616C6572;
}

void *sub_1AE503960(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char __dst)
{
  return memcpy(&__dst, __src, 0x58uLL);
}

uint64_t sub_1AE503974()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE50399C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 296) + 8))(*(_QWORD *)(v0 - 256), *(_QWORD *)(v0 - 248));
}

uint64_t sub_1AE5039B0()
{
  return sub_1AE924450();
}

uint64_t sub_1AE5039BC()
{
  uint64_t v0;

  return sub_1AE7F3DC0(v0 + 264);
}

uint64_t sub_1AE5039C4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 120) = a1;
  return sub_1AE926BC8();
}

uint64_t sub_1AE5039FC()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

uint64_t sub_1AE503A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1AE503A28()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE503A4C()
{
  return sub_1AE926C40();
}

uint64_t sub_1AE503A60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + v4) = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 88), v1);
}

uint64_t sub_1AE503A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;

  return sub_1AE583000(a23, a24, a40, v43, v44, a20, a21, a22, v42, v41, v47, v46, v40, v45);
}

uint64_t sub_1AE503AB0()
{
  return sub_1AE926760();
}

uint64_t sub_1AE503AC4()
{
  return sub_1AE926D18();
}

uint64_t sub_1AE503AD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 264) = a1;
  return sub_1AE5C7880(v1 - 128);
}

uint64_t sub_1AE503B1C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE503B28()
{
  return swift_allocObject();
}

uint64_t sub_1AE503B34()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE8035B8(v1, v2, v3, v0);
  return sub_1AE926D90();
}

uint64_t sub_1AE503B58(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1AE503B60()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE503B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 208) = v1;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v4, v3);
}

uint64_t sub_1AE503B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  uint64_t v21;

  a20 = a14;
  a21 = a13;
  return sub_1AE846B74(v21, (uint64_t)&a20);
}

void sub_1AE503BA0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void sub_1AE503BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,unint64_t a27,unint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unint64_t a34,unint64_t a35)
{
  STACK[0x200] = a27;
  STACK[0x208] = a26;
  STACK[0x210] = a28;
  STACK[0x218] = a35;
  STACK[0x220] = a34;
}

uint64_t sub_1AE503BFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  result = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = v1[9];
  v12 = v1[10];
  v13 = v1[11];
  v14 = v1[12];
  v15 = *((_BYTE *)v1 + 104);
  *(_QWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_QWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 104) = v15;
  return result;
}

void sub_1AE503C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AE852678(a1, 0xD00000000000001DLL, a3);
}

uint64_t sub_1AE503C60()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE503C6C()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE503C80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1AE66B890(a1, v2, v1);
}

uint64_t sub_1AE503C8C()
{
  return sub_1AE926B68();
}

uint64_t sub_1AE503C9C(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

uint64_t sub_1AE503CB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v2, v1, 1, a1);
}

uint64_t sub_1AE503CDC()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE503D00()
{
  return sub_1AE926AB4();
}

uint64_t sub_1AE503D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_1AE503D2C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE503D64()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE503D7C()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE503D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  *(_QWORD *)(v2 + 8 * (v3 >> 6) + 64) |= 1 << v3;
  v6 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v3);
  *v6 = v5;
  v6[1] = v4;
  return sub_1AE89BE5C(a1, *(_QWORD *)(v2 + 56) + *(_QWORD *)(a2 + 72) * v3);
}

uint64_t *sub_1AE503DC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return sub_1AE52F6A8((uint64_t *)(v1 - 128));
}

uint64_t sub_1AE503DD4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE503DE4()
{
  return sub_1AE926C58();
}

uint64_t sub_1AE503DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 160) + 8))(v1, v0);
}

id sub_1AE503E08(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  uint64_t v10;

  return objc_msgSend(v9, a2, v10, &a9);
}

id GDXPCLog()
{
  if (qword_1ED327488 != -1)
    dispatch_once(&qword_1ED327488, &unk_1E5DB1088);
  return (id)qword_1ED327480;
}

id GDSignpostLog()
{
  if (qword_1ED327478 != -1)
    dispatch_once(&qword_1ED327478, &unk_1E5DD9678);
  return (id)qword_1ED327470;
}

void sub_1AE5043B8(uint64_t *a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t IsSandboxed;
  const char *v11;
  const char *v12;
  int isEqualToString;
  void *v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  _GDViewAccessAssertion *v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  id v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t buf[4];
  uint64_t v42;
  __int16 v43;
  id v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend_objectForKey_(v3, v4, a1[4]);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = *(_QWORD *)(a1[6] + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

  if (!*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40))
  {
    IsSandboxed = objc_msgSend_currentProcessIsSandboxed(GDRemoteViewAccessRequester, v8, v9);
    isEqualToString = objc_msgSend_isEqualToString_((void *)a1[4], v11, (uint64_t)CFSTR("standardFeatureView"));
    v14 = *(void **)(a1[5] + 16);
    if (isEqualToString)
    {
      v40 = 0;
      v15 = (id *)&v40;
      objc_msgSend_accessTokenForFeaturesWithIsSandboxed_error_(v14, v12, IsSandboxed, &v40);
      v16 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v17 = a1[4];
      v39 = 0;
      v15 = (id *)&v39;
      objc_msgSend_accessTokenForViewName_isSandboxed_error_(v14, v12, v17, IsSandboxed, &v39);
      v16 = objc_claimAutoreleasedReturnValue();
    }
    v18 = (void *)v16;
    v19 = *v15;
    if (v18)
    {
      v20 = [_GDViewAccessAssertion alloc];
      v21 = a1[4];
      v38 = v19;
      v23 = objc_msgSend_initWithViewName_extensionToken_error_(v20, v22, v21, v18, &v38);
      v24 = v38;

      v25 = *(_QWORD *)(a1[6] + 8);
      v26 = *(void **)(v25 + 40);
      *(_QWORD *)(v25 + 40) = v23;

      v29 = *(void **)(*(_QWORD *)(a1[6] + 8) + 40);
      if (v29)
      {
        if (objc_msgSend_alwaysAvailable(v29, v27, v28))
          objc_msgSend_persistentTokens(v3, v30, v31);
        else
          objc_msgSend_strongWeakCache(v3, v30, v31);
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setObject_forKey_(v35, v36, *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40), a1[4]);
        goto LABEL_16;
      }
      v33 = *(_QWORD *)(a1[7] + 8);
      v34 = v24;
    }
    else
    {
      GDViewLog();
      v32 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
      {
        v37 = a1[4];
        *(_DWORD *)buf = 138412546;
        v42 = v37;
        v43 = 2112;
        v44 = v19;
        _os_log_error_impl(&dword_1AE4F2000, v32, OS_LOG_TYPE_ERROR, "Could not retrieve access token for view name %@ error: %@", buf, 0x16u);
      }

      v33 = *(_QWORD *)(a1[7] + 8);
      v34 = v19;
    }
    v24 = v34;
    v35 = *(void **)(v33 + 40);
    *(_QWORD *)(v33 + 40) = v34;
LABEL_16:

  }
}

id GDViewLog()
{
  if (qword_1ED327468 != -1)
    dispatch_once(&qword_1ED327468, &unk_1E5DD9698);
  return (id)qword_1ED327460;
}

void sub_1AE504830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1AE5048C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AE5049FC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1AE504B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t storeEnumTagSinglePayload for LogSignpost()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t static GDLog.view.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AE4FB5A4(&qword_1ED31B508, (uint64_t)qword_1ED31B4F0, a1);
}

_BYTE *initializeBufferWithCopyOfBuffer for ActivityEventType(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t static GDLog.signpost.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AE4FB5A4(&qword_1ED31C728, (uint64_t)qword_1ED31C710, a1);
}

uint64_t LogSignpost.state.getter()
{
  return swift_retain();
}

uint64_t LogSignpost.name.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

const char *static LogSignpost.enableTelemetry.getter()
{
  return "enableTelemetry=YES";
}

uint64_t sub_1AE504CA4()
{
  return swift_release();
}

uint64_t sub_1AE504CAC()
{
  return swift_release();
}

uint64_t sub_1AE504CB4()
{
  return swift_release();
}

uint64_t sub_1AE504CBC()
{
  return swift_release();
}

uint64_t sub_1AE504CC4()
{
  return swift_release();
}

uint64_t sub_1AE504CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1AE504CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1AE504CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1AE504CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1AE504D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1AE504D24()
{
  unsigned __int8 *v0;

  return sub_1AE504D2C(*v0);
}

uint64_t sub_1AE504D2C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE504D68 + 4 * byte_1AE93F54D[a1]))(0x797265755178616DLL, 0xEC000000657A6953);
}

unint64_t sub_1AE504D68()
{
  return 0xD000000000000011;
}

unint64_t sub_1AE504D84()
{
  return 0xD000000000000014;
}

uint64_t sub_1AE504DA4()
{
  return 1701080941;
}

uint64_t _s20IntelligencePlatform22EntityResolutionConfigV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1AE504E04 + 4 * byte_1AE93F57A[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1AE504E38 + 4 * byte_1AE93F575[v4]))();
}

uint64_t sub_1AE504E38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE504E40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE504E48);
  return result;
}

uint64_t sub_1AE504E54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE504E5CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1AE504E60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE504E68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE504E74()
{
  unsigned __int8 *v0;

  return sub_1AE504E7C(*v0);
}

uint64_t sub_1AE504E7C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE504EB8 + 4 * byte_1AE93F551[a1]))(0x687469726F676C61, 0xEA0000000000736DLL);
}

uint64_t sub_1AE504EB8()
{
  return 0x6F4D686372616573;
}

unint64_t sub_1AE504ED4()
{
  return 0xD000000000000010;
}

unint64_t sub_1AE504EF0()
{
  return 0xD000000000000014;
}

uint64_t sub_1AE504F18()
{
  unsigned __int8 *v0;

  return sub_1AE504F20(*v0);
}

uint64_t sub_1AE504F20(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AE504F58 + 4 * byte_1AE93F547[a1]))(0xD000000000000012, 0x80000001AE97F2E0);
}

uint64_t sub_1AE504F58(uint64_t a1)
{
  return a1 + 10;
}

uint64_t sub_1AE504F90()
{
  return 0x72656B6E61726572;
}

uint64_t sub_1AE504FB4()
{
  return 0x6143656C62616E65;
}

uint64_t getEnumTagSinglePayload for AgeDifferenceCategory(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

IntelligencePlatform::PreprocessingStep_optional sub_1AE505060(Swift::String *a1)
{
  return PreprocessingStep.init(rawValue:)(*a1);
}

uint64_t getEnumTagSinglePayload for TriplesQuery.FullTextSearchType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

__n128 initializeWithTake for TrialAssetManager.ExperimentIdentifiers(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1AE50510C()
{
  sub_1AE505168();
  return sub_1AE926190();
}

unint64_t sub_1AE505168()
{
  unint64_t result;

  result = qword_1ED319290;
  if (!qword_1ED319290)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93F2B4, &type metadata for RerankerAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1ED319290);
  }
  return result;
}

uint64_t _s20IntelligencePlatform14RerankerConfigV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE5051E4 + 4 * byte_1AE93F57F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE505204 + 4 * byte_1AE93F584[v4]))();
}

_BYTE *sub_1AE5051E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE505204(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE50520C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE505214(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE50521C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE505224(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for AssetRegistryParameters.RemoteOptions.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t sub_1AE505280()
{
  return 0x687469726F676C61;
}

void *initializeWithTake for EntityResolutionConfig(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x8DuLL);
}

uint64_t sub_1AE5052E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1AE501548(a3);
}

uint64_t sub_1AE505310(uint64_t a1)
{
  uint64_t *v1;

  return sub_1AE52982C(a1, v1);
}

uint64_t sub_1AE505318()
{
  return sub_1AE924864();
}

uint64_t sub_1AE505348()
{
  return swift_bridgeObjectRelease_n();
}

_QWORD *sub_1AE505354()
{
  _QWORD *v0;

  return sub_1AE4F9858(v0, v0[3]);
}

uint64_t sub_1AE505374@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE505380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE505390()
{
  uint64_t v0;

  return v0;
}

id sub_1AE50539C(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return objc_msgSend(*(id *)(v5 - 112), a2, v4, v3, 0, *(_QWORD *)(v5 - 104), v2, 0);
}

BOOL sub_1AE5053FC(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1AE50540C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v11 - 128) = v7;
  *(_QWORD *)(v11 - 120) = v8;
  *(_QWORD *)(v11 - 112) = v9;
  *(_QWORD *)(v11 - 104) = v10;
  *(_WORD *)(v11 - 96) = v6;
  *(_BYTE *)(v11 - 94) = a6;
  return sub_1AE574158(v7, v8, v9, v10, v6, a6);
}

uint64_t sub_1AE505434()
{
  return swift_release_n();
}

uint64_t sub_1AE505498()
{
  uint64_t v0;

  return sub_1AE581398(*(_QWORD *)(v0 - 232));
}

uint64_t sub_1AE5054A0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5054AC()
{
  return swift_retain();
}

uint64_t sub_1AE5054D0()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5054DC(unint64_t *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t *v4;

  return sub_1AE4F989C(a1, v4, a3, a4);
}

uint64_t sub_1AE5054E4()
{
  return sub_1AE92676C();
}

uint64_t sub_1AE5054EC()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE505504@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1224) = a1;
  return sub_1AE926BC8();
}

uint64_t sub_1AE505530()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE505548()
{
  return sub_1AE926EF8();
}

double _s20IntelligencePlatform20EntityTaggingServiceC15OperatingPointsV16precision0point9Sdvg_0()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t sub_1AE50555C(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1AE505574()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_1AE505584()
{
  return sub_1AE926AD8();
}

id sub_1AE50558C(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_1AE505598()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_1AE5055A0()
{
  void *v0;

}

uint64_t sub_1AE5055C4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_1AE5055D8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE5055E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  return sub_1AE6563B4(v1, a1);
}

uint64_t sub_1AE5055F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_1AE505618(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_1AE505620()
{
  return sub_1AE9269B8();
}

void sub_1AE50564C()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1AE524534(v1, v0);
}

void sub_1AE50565C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 112) = v1;
  *(_QWORD *)(v3 - 104) = v0;
  *(_QWORD *)(v3 - 96) = v2;
}

void sub_1AE505678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_1AE694340(v0, v1, v2);
}

uint64_t sub_1AE505688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 0, 1, v0);
  return v2 - 208;
}

void sub_1AE5056EC()
{
  sub_1AE519C48();
}

uint64_t sub_1AE5056F8()
{
  uint64_t v0;

  return sub_1AE73D55C(v0 - 208);
}

uint64_t sub_1AE505700(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_1AE505710()
{
  return swift_arrayDestroy();
}

void sub_1AE505720()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 - 320);
  v2 = *(_QWORD *)(v0 - 312);
  v3 = *(_QWORD **)(v0 - 544);
  *v3 = 0;
  v3[1] = v1;
  v3[2] = v2;
}

uint64_t sub_1AE505744(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v2);
}

void sub_1AE505750()
{
  uint64_t v0;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 24));
}

uint64_t sub_1AE50575C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v0, v1, v2);
}

void sub_1AE505770()
{
  sub_1AE52161C();
}

uint64_t sub_1AE505788()
{
  return swift_allocObject();
}

uint64_t sub_1AE5057A4()
{
  return sub_1AE92499C();
}

uint64_t sub_1AE5057C0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 32) = v2;
  *(_QWORD *)(v5 + 40) = v3;
  *(_QWORD *)(v5 + 48) = result;
  *(_QWORD *)(v5 + 56) = a2;
  *(_WORD *)(v5 + 64) = v4;
  return result;
}

uint64_t sub_1AE5057D0()
{
  return 0x746361746E6F63;
}

uint64_t sub_1AE5057E8()
{
  return 0x4E455F48544E4F4DLL;
}

uint64_t sub_1AE505804()
{
  return sub_1AE9243D8();
}

uint64_t sub_1AE505820()
{
  return swift_allocObject();
}

uint64_t sub_1AE50582C()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE505844()
{
  return sub_1AE924450();
}

uint64_t sub_1AE505850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 16) = v2;
  *(_QWORD *)(v1 - 8) = a1;
  return sub_1AE9262B0();
}

void sub_1AE50585C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1AE505870()
{
  return 0x6177686769487369;
}

uint64_t sub_1AE505884()
{
  uint64_t v0;

  return v0;
}

void sub_1AE505898()
{
  JUMPOUT(0x1AF454B70);
}

uint64_t sub_1AE5058A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE5058D0()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE5058E8()
{
  uint64_t v0;

  return sub_1AE581398(*(_QWORD *)(v0 + 344));
}

uint64_t sub_1AE5058F4(uint64_t a1)
{
  return sub_1AE823F10(a1);
}

uint64_t sub_1AE5058FC()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE505904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t v14;

  return sub_1AE582FC0(a1, a2, a3, a4, a5, a6, a7, v14, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1AE50590C()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 224);
}

void sub_1AE505914()
{
  sub_1AE51BC88();
}

uint64_t sub_1AE505920()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE50595C()
{
  return sub_1AE925B9C();
}

void sub_1AE50599C()
{
  sub_1AE519F94();
}

void sub_1AE5059A8()
{
  JUMPOUT(0x1AF452068);
}

uint64_t sub_1AE5059B8()
{
  uint64_t v0;

  return sub_1AE894F20(v0);
}

void sub_1AE5059C0()
{
  sub_1AE51BDD4();
}

unsigned __int8 *sub_1AE5059D8@<X0>(unsigned __int8 *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1AE505A08@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE505A14()
{
  return type metadata accessor for VisualUnderstandingService.RecognitionResult(0);
}

void sub_1AE505A30(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1AE505A4C()
{
  return 0x6E656B6F54796E61;
}

void sub_1AE505A74()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
}

uint64_t sub_1AE505A80()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE505A94()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE505A9C()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 7136);
}

unint64_t *sub_1AE505AAC()
{
  return &STACK[0x1C88];
}

id sub_1AE505AC0()
{
  void *v0;

  return v0;
}

uint64_t sub_1AE505AC8()
{
  return sub_1AE926B98();
}

uint64_t sub_1AE505AEC()
{
  return sub_1AE926F34();
}

BOOL sub_1AE505B04(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

id sub_1AE505B14()
{
  void *v0;

  return v0;
}

uint64_t sub_1AE505B1C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE505B24()
{
  uint64_t v0;

  return sub_1AE620DCC(v0);
}

uint64_t sub_1AE505B38()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

uint64_t sub_1AE505B44()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE505B58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 352) = a1;
  return sub_1AE68E180(v1);
}

uint64_t sub_1AE505B68()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE505B70()
{
  return sub_1AE926D60();
}

void sub_1AE505B78()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 112) = 10075;
  *(_QWORD *)(v0 - 104) = 0xE200000000000000;
}

uint64_t sub_1AE505BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v3 + (v1 & ~v0), v2);
}

uint64_t sub_1AE505BCC()
{
  return sub_1AE9265E0();
}

uint64_t sub_1AE505BD4()
{
  return 0x65746E6F4373746BLL;
}

void sub_1AE505C20()
{
  sub_1AE80244C();
}

uint64_t sub_1AE505C28()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE505C30()
{
  return sub_1AE926BEC();
}

unint64_t sub_1AE505C58()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_1AE8B456C();
}

uint64_t sub_1AE505C64()
{
  uint64_t v0;

  return sub_1AE8CC510(v0 - 240);
}

uint64_t sub_1AE505C6C()
{
  return 0x69666572506C6C61;
}

uint64_t sub_1AE505C8C()
{
  return swift_beginAccess();
}

uint64_t sub_1AE505CAC(uint64_t result, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 120) = v4;
  *(_QWORD *)(v5 - 112) = result;
  *(_QWORD *)(v5 - 104) = a2;
  *(_BYTE *)(v5 - 96) = v2;
  return result;
}

uint64_t sub_1AE505CC4()
{
  return sub_1AE9266DC();
}

uint64_t sub_1AE505CF0()
{
  uint64_t v0;

  return v0;
}

void sub_1AE505D08(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t sub_1AE505D18()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 6416);
}

uint64_t sub_1AE505D28@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_task_dealloc();
}

uint64_t sub_1AE505D34()
{
  return sub_1AE561200();
}

uint64_t sub_1AE505D44()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE505D4C()
{
  uint64_t v0;

  static EntityResolutionRankingService.CandidateConstraint.== infix(_:_:)(v0 - 128);
}

uint64_t sub_1AE505D58()
{
  uint64_t v0;

  return sub_1AE5F676C(v0 + 920);
}

void sub_1AE505D60(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1AE505D74()
{
  uint64_t v0;

  return sub_1AE50B9EC(v0);
}

uint64_t sub_1AE505D7C()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(*(_QWORD *)(v0 - 88));
}

uint64_t sub_1AE505D84()
{
  uint64_t v0;

  return sub_1AE50B9EC(*(_QWORD *)(v0 + 120));
}

id sub_1AE505D9C()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

uint64_t sub_1AE505DBC()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 299) = 9;
  return PersonEntityTagType.rawValue.getter();
}

uint64_t sub_1AE505DCC()
{
  return 0x746867756164;
}

uint64_t sub_1AE505DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE657900(a1, a2, a3);
}

uint64_t sub_1AE505E08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(int *)(a1 + 28);
  *(_QWORD *)(v2 - 296) = v1;
  return v1 + v3;
}

uint64_t sub_1AE505E1C()
{
  return swift_getAssociatedConformanceWitness();
}

double sub_1AE505E24@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 80) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_1AE505E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 184));
}

void sub_1AE505E64()
{
  sub_1AE519C48();
}

uint64_t sub_1AE505E7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE505E90()
{
  return sub_1AE9243F0();
}

uint64_t sub_1AE505E9C()
{
  return 0x6F436E696769726FLL;
}

uint64_t *sub_1AE505EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;

  a13 = v14;
  a14 = v15;
  return sub_1AE52F6A8(&a10);
}

uint64_t sub_1AE505EC0()
{
  return sub_1AE838918(1);
}

uint64_t sub_1AE505EE4()
{
  return type metadata accessor for ViewService.SiriRemembersView.Entity(0);
}

uint64_t sub_1AE505EF0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1AE505EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE505F18()
{
  uint64_t v0;

  return v0 - 128;
}

uint64_t sub_1AE505F24@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_1AE926B5C();
}

void sub_1AE505F30(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1AE8CEC90(a1, v3, a3);
}

uint64_t sub_1AE505F58()
{
  return 0;
}

uint64_t sub_1AE505F70()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE505F80(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;

  return sub_1AE537038(a1, v4, a3, a4);
}

uint64_t sub_1AE505F88()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE505F98()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE505FBC()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE505FCC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE505FD4()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 5360);
}

uint64_t sub_1AE505FE4()
{
  return 0;
}

uint64_t sub_1AE505FF4()
{
  return sub_1AE926B98();
}

uint64_t sub_1AE505FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  uint64_t v5;

  return sub_1AE5FC4C8(a1, a2, a3, a4, v5, v4);
}

BOOL sub_1AE506008@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1AE506014()
{
  uint64_t v0;

  return sub_1AE620DCC(*(_QWORD *)(v0 + 120));
}

id sub_1AE50602C()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

uint64_t sub_1AE506040()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE506048()
{
  return 0x6B726F776F63;
}

uint64_t sub_1AE50605C()
{
  uint64_t v0;

  return v0;
}

void sub_1AE506070(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1AE578FEC(a1, a2, v2);
}

uint64_t sub_1AE506078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, a3);
}

uint64_t sub_1AE50608C()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE5060B0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 264) = *a1;
  *(_QWORD *)(v3 - 272) = *v1;
  *(_QWORD *)(v3 - 280) = *v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE5060EC()
{
  return 0x6373654474726F73;
}

void sub_1AE506100()
{
  sub_1AE7B4CB4();
}

uint64_t sub_1AE50610C()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 104) = *(_QWORD *)(v0 - 104);
  return EntityIdentifier.stringValue.getter();
}

uint64_t sub_1AE506130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE506138()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;

  sub_1AE579F84(v0, v1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE506158()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(*(_QWORD *)(v1 - 112) + 36);
}

uint64_t sub_1AE50616C()
{
  return sub_1AE926058();
}

uint64_t sub_1AE50617C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = result;
  return result;
}

uint64_t sub_1AE506190()
{
  return 0x6174614473746BLL;
}

uint64_t sub_1AE5061A4()
{
  return swift_allocObject();
}

uint64_t sub_1AE5061C8(uint64_t a1)
{
  uint64_t v1;

  return (a1 + 1) & v1;
}

uint64_t sub_1AE5061E4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5061F0()
{
  return sub_1AE926BB0();
}

uint64_t sub_1AE506200()
{
  return sub_1AE9268D4();
}

uint64_t sub_1AE506240()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE506248()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE506250()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 7424);
}

uint64_t sub_1AE506260()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE506270()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE506288()
{
  return sub_1AE926CA0();
}

_QWORD *sub_1AE506298@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t sub_1AE5062C0()
{
  return sub_1AE9265D4();
}

uint64_t sub_1AE5062C8()
{
  return sub_1AE925B6C();
}

uint64_t sub_1AE5062DC()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE5062E4(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

double sub_1AE5062F0()
{
  void *v0;
  double result;

  return result;
}

uint64_t sub_1AE5062F8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void sub_1AE506304()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_1AE50631C()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 144);
}

uint64_t sub_1AE506324()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE506340()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 128);
}

void sub_1AE506378(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  static EntityPredicate.isA.getter();
}

__n128 sub_1AE506384()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __n128 *v9;
  __n128 result;

  *(_QWORD *)(v0 + 16) = v1;
  v9 = (__n128 *)(v0 + (v6 << 6));
  result = *(__n128 *)(v8 - 320);
  v9[2] = result;
  v9[3].n128_u64[0] = v4;
  v9[3].n128_u64[1] = v5;
  v9[4].n128_u64[0] = v3;
  v9[4].n128_u64[1] = v7;
  v9[5].n128_u64[0] = v2;
  v9[5].n128_u8[8] = *(_DWORD *)(v8 - 304);
  return result;
}

uint64_t sub_1AE5063B4()
{
  return 0;
}

uint64_t sub_1AE5063EC()
{
  uint64_t v0;

  return v0;
}

void sub_1AE506400()
{
  sub_1AE5216D4();
}

uint64_t sub_1AE506408()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE506414()
{
  return sub_1AE9269F4();
}

uint64_t sub_1AE506420()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE506434()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

void sub_1AE506464(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
}

uint64_t sub_1AE5064B0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_1AE5064BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return sub_1AE89BEA4(a1, *(_QWORD *)(v2 + 56) + *(_QWORD *)(a2 + 72) * v3);
}

uint64_t sub_1AE5064CC@<X0>(uint64_t a1@<X8>)
{
  char v1;

  *(_BYTE *)(a1 + 104) = v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE5064D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE5064E8()
{
  return 0x65636E6174736964;
}

uint64_t sub_1AE5064FC(uint64_t a1, uint64_t a2)
{
  return sub_1AE536EDC(a1, a2);
}

uint64_t sub_1AE506504(uint64_t a1, ...)
{
  uint64_t (*v1)(char *, uint64_t *);
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a1);
  va_start(va, a1);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  return v1(va1, (uint64_t *)va);
}

uint64_t sub_1AE506514@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_1AE50651C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  *(_DWORD *)(v3 - 104) = a3;
}

uint64_t sub_1AE506534(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v2);
}

void sub_1AE506540(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1AE50655C()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 7568);
}

uint64_t sub_1AE506580()
{
  return swift_arrayDestroy();
}

uint64_t sub_1AE506588(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AE5065A4()
{
  return 0x73746E657665;
}

void sub_1AE5065B4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)v3 = a1;
  *(_QWORD *)(v3 + 8) = v1;
  *(_BYTE *)(v3 + 16) = 2;
  *(_QWORD *)(v3 + 24) = v2;
}

void sub_1AE5065D8(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2[5] = 0xE300000000000000;
  v2[4] = v1 + 1272;
  v2[25] = a1;
}

uint64_t sub_1AE5065FC()
{
  return sub_1AE925E18();
}

uint64_t sub_1AE50660C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE50661C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1AE65A518((uint64_t)&a9, a2);
}

uint64_t sub_1AE506624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  return a6(a1, a2, a3, a4, a5, v6, v7);
}

void sub_1AE506630()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 160);
  *(_QWORD *)(v0 - 144) = *(_QWORD *)(v0 - 168);
  *(_QWORD *)(v0 - 136) = v1;
  *(_QWORD *)(v0 - 128) = *(_QWORD *)(v0 - 152);
}

uint64_t sub_1AE506648(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 256) = result;
  *(_QWORD *)(v2 - 288) = v1;
  return result;
}

uint64_t sub_1AE506674()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE52F880(v0, *(_QWORD *)(v1 - 216));
}

uint64_t sub_1AE50668C()
{
  return swift_retain();
}

uint64_t sub_1AE506694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)va);
}

void sub_1AE5066A0()
{
  sub_1AE519E10();
}

uint64_t sub_1AE5066B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AE769B78(a1, *(_QWORD *)(a2 - 256));
}

uint64_t sub_1AE5066C4()
{
  return swift_release();
}

uint64_t sub_1AE5066D4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5066EC()
{
  return sub_1AE925F74();
}

void sub_1AE5066F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1AE7EA350(a1, a2, v2);
}

uint64_t sub_1AE5066FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return sub_1AE9269DC();
}

uint64_t sub_1AE50670C(_WORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = v1;
  *a1 = 0;
  return sub_1AE925AD0();
}

uint64_t sub_1AE506738()
{
  return 0x6D69547472617473;
}

uint64_t sub_1AE506750()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE50676C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  result = sub_1AE805E40(*(_QWORD *)(v5 - 208), v1, *(_QWORD *)(v5 - 184), *(_DWORD *)(v5 - 188));
  v7 = *(_QWORD *)(v5 - 200);
  *(_QWORD *)(v7 + 72) = v0;
  *(_QWORD *)(v7 + 80) = v4;
  *(_QWORD *)(v7 + 88) = v3;
  *(_QWORD *)(v7 + 96) = v2;
  *(_BYTE *)(v7 + 104) = *(_DWORD *)(v5 - 244);
  return result;
}

uint64_t sub_1AE5067A8()
{
  return 115;
}

id sub_1AE5067CC(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

uint64_t sub_1AE5067F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE867D44(a1, v1 - 176);
}

uint64_t sub_1AE506800(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 0, 1, v1);
}

uint64_t sub_1AE506810()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 0;
  return v0 - 72;
}

id sub_1AE506828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  return a9;
}

uint64_t sub_1AE506834()
{
  return sub_1AE92691C();
}

uint64_t sub_1AE506854()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE506878(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

void sub_1AE5068A4()
{
  JUMPOUT(0x1AF454B70);
}

uint64_t sub_1AE5068B0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5068BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  return v10(&a9, v12, v9, a1, v11);
}

uint64_t sub_1AE5068D4()
{
  return sub_1AE926F34();
}

uint64_t sub_1AE5068EC()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 5024);
}

void sub_1AE5068FC(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 2u);
}

uint64_t sub_1AE506904()
{
  return sub_1AE926C94();
}

void sub_1AE506914(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = a1;
}

uint64_t sub_1AE506920()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE506940()
{
  return sub_1AE926ED4();
}

uint64_t sub_1AE506950()
{
  return type metadata accessor for CandidateGenerator();
}

_QWORD *sub_1AE506958@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AE4F9858((_QWORD *)(v1 + a1), *(_QWORD *)(v1 + a1 + 24));
}

uint64_t sub_1AE506978(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = a1;
  return sub_1AE925B0C();
}

uint64_t sub_1AE506984()
{
  return sub_1AE592EFC();
}

uint64_t sub_1AE506994(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 440) = *(_QWORD *)(result - 8);
  return result;
}

uint64_t sub_1AE5069B0()
{
  return swift_retain();
}

void sub_1AE5069B8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 - 72);
  *(_QWORD *)(a1 - 32) = v1;
  *(_QWORD *)(a1 - 24) = v3;
  *(_QWORD *)(a1 - 16) = v2 - 208;
}

uint64_t sub_1AE5069D8()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE5069F0()
{
  return swift_retain();
}

uint64_t sub_1AE5069F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE506A00()
{
  return swift_dynamicCast();
}

uint64_t sub_1AE506A08()
{
  return swift_beginAccess();
}

uint64_t sub_1AE506A18()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 120);
}

uint64_t sub_1AE506A20()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 248);
}

void sub_1AE506A28(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  sub_1AE8AC150(a1, v1, v2);
}

_QWORD *sub_1AE506A38()
{
  uint64_t v0;

  return sub_1AE7B4664((_QWORD *)(v0 - 256));
}

uint64_t sub_1AE506A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_1AE506A4C()
{
  return sub_1AE925E90();
}

uint64_t sub_1AE506A58()
{
  return swift_dynamicCast();
}

uint64_t sub_1AE506A88()
{
  uint64_t v0;

  return v0;
}

__n128 sub_1AE506A94()
{
  __n128 *v0;
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = *(_QWORD *)(v1 - 112);
  v3 = *(_BYTE *)(v1 - 104);
  result = *(__n128 *)(v1 - 128);
  v0[5] = result;
  v0[6].n128_u64[0] = v2;
  v0[6].n128_u8[8] = v3;
  return result;
}

uint64_t sub_1AE506AB0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE506AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t (*v9)(char *, _QWORD);
  va_list va;

  va_start(va, a9);
  return v9(va, 0);
}

uint64_t sub_1AE506ADC()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE506AF0(uint64_t a1)
{
  unint64_t v1;

  return sub_1AE54C814(a1, v1);
}

uint64_t sub_1AE506AF8()
{
  return type metadata accessor for VisualUnderstandingService.MappingChange(0);
}

uint64_t sub_1AE506B00()
{
  return swift_retain();
}

uint64_t sub_1AE506B3C()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE506B54()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE506B64()
{
  return sub_1AE926B50();
}

unint64_t sub_1AE506B7C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_1AE5470A0();
}

uint64_t sub_1AE506B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1AE506BA8()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 6368);
}

uint64_t sub_1AE506BCC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE5EA36C(v0, v1);
  return v1;
}

uint64_t sub_1AE506C44()
{
  return 0x6465636E616C6162;
}

uint64_t sub_1AE506C5C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE506C64@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1AE555CAC(0, (unint64_t)(a1 + 63) >> 6, v1);
}

uint64_t sub_1AE506C78()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_1AE506C84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)v1 = v0;
  *(_QWORD *)(v1 + 8) = v0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE506C9C()
{
  return 0x726150646E617267;
}

uint64_t sub_1AE506CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_1AE506CC0()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE506CD0()
{
  return sub_1AE924CCC();
}

void sub_1AE506CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 304) = v1;
  *(_QWORD *)(v3 - 312) = v0 + *(int *)(v2 + 40);
}

uint64_t sub_1AE506CF8()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

void sub_1AE506D00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = *(_QWORD *)(v0 + *(int *)(v1 + 28));
  *(_BYTE *)(v2 - 65) = 3;
}

uint64_t sub_1AE506D18()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE506D40()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE506D54()
{
  return sub_1AE925DC4();
}

uint64_t sub_1AE506D70()
{
  return 2567207;
}

uint64_t sub_1AE506D88()
{
  return swift_allocObject();
}

void sub_1AE506D94()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 280) = 0;
  *(_DWORD *)(v0 - 272) = 0;
  *(_DWORD *)(v0 - 264) = 0;
  *(_DWORD *)(v0 - 256) = 0;
  *(_DWORD *)(v0 - 248) = 0;
  *(_QWORD *)(v0 - 360) = 1;
  *(_DWORD *)(v0 - 320) = 1;
  *(_DWORD *)(v0 - 316) = 1;
  *(_DWORD *)(v0 - 312) = 1;
  *(_DWORD *)(v0 - 308) = 1;
  *(_DWORD *)(v0 - 304) = 1;
  *(_DWORD *)(v0 - 300) = 1;
}

uint64_t sub_1AE506E1C()
{
  return sub_1AE924480();
}

uint64_t sub_1AE506E24(_WORD *a1)
{
  *a1 = 0;
  return sub_1AE925AD0();
}

void sub_1AE506E34()
{
  sub_1AE7FCBAC();
}

uint64_t sub_1AE506E48()
{
  return 0x6D69547472617473;
}

uint64_t sub_1AE506EAC@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)a1;
}

uint64_t sub_1AE506EB8()
{
  return swift_retain_n();
}

uint64_t sub_1AE506EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v3;

  return sub_1AE805E40(a1, a2, a3, v3);
}

void sub_1AE506ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v16 + 16) = v17;
  v21 = v16 + 16 * v18;
  *(_QWORD *)(v21 + 32) = a16;
  *(_QWORD *)(v21 + 40) = v20;
  *v19 = v16;
}

void sub_1AE506EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 16) = v0;
  v5 = v4 + 16 * v3;
  *(_QWORD *)(v5 + 32) = v1;
  *(_QWORD *)(v5 + 40) = v2;
}

uint64_t sub_1AE506EFC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE506F04()
{
  return swift_bridgeObjectRelease_n();
}

_QWORD *sub_1AE506F10()
{
  _QWORD *v0;

  return sub_1AE4F9858(v0, v0[3]);
}

uint64_t sub_1AE506F30()
{
  return sub_1AE926BEC();
}

uint64_t *sub_1AE506F44()
{
  uint64_t v0;

  return sub_1AE52F6A8((uint64_t *)(v0 - 176));
}

uint64_t sub_1AE506F4C@<X0>(uint64_t a1@<X8>)
{
  if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    return a1;
  else
    return 0;
}

uint64_t sub_1AE506F58()
{
  return sub_1AE92691C();
}

uint64_t sub_1AE506F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_1AE506FD8()
{
  return sub_1AE926BB0();
}

void sub_1AE506FE4()
{
  void *v0;

}

uint64_t sub_1AE506FEC()
{
  return swift_willThrow();
}

uint64_t sub_1AE507008()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE507014()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = 0;
  *(_QWORD *)(v1 - 120) = 0xE000000000000000;
  return v0;
}

uint64_t sub_1AE507034()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 6512);
}

unint64_t sub_1AE507044()
{
  return sub_1AE5C8958();
}

uint64_t sub_1AE50704C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE507060()
{
  return swift_retain();
}

uint64_t sub_1AE507088()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE5070A8(uint64_t a1@<X8>)
{
  _QWORD *v1;

  v1[15] = 0xE300000000000000;
  v1[14] = 3828069;
  v1[18] = a1;
}

double sub_1AE5070D4()
{
  void *v0;
  double result;

  return result;
}

uint64_t sub_1AE5070DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE536EDC(a1, v1);
}

uint64_t sub_1AE507100(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1AE507120()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE4F9858((_QWORD *)(v1 - 144), *(_QWORD *)(v1 - 120));
  return v0;
}

uint64_t sub_1AE507148(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE66C1BC(a1, *(_QWORD *)(v1 - 224));
}

void sub_1AE507154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE578FEC(v1 + *(int *)(v3 + 28) + *(int *)(v0 + 28), v4, v2);
}

uint64_t sub_1AE50718C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5071A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(a1, v2, v1);
}

uint64_t sub_1AE5071B4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE5071C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v2, v0);
}

uint64_t sub_1AE5071D4()
{
  uint64_t v0;

  return sub_1AE7335EC(v0 - 160);
}

void sub_1AE5071DC()
{
  sub_1AE51B560();
}

uint64_t sub_1AE5071E8()
{
  uint64_t v0;

  return sub_1AE78AFB8(v0);
}

void sub_1AE507214()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 320) = 0;
  *(_DWORD *)(v0 - 316) = 0;
  *(_DWORD *)(v0 - 312) = 0;
  *(_DWORD *)(v0 - 308) = 0;
  *(_DWORD *)(v0 - 304) = 0;
  *(_DWORD *)(v0 - 300) = 0;
  *(_DWORD *)(v0 - 296) = 0;
  *(_DWORD *)(v0 - 288) = 0;
  *(_DWORD *)(v0 - 280) = 0;
  *(_DWORD *)(v0 - 272) = 0;
  *(_DWORD *)(v0 - 264) = 0;
  *(_DWORD *)(v0 - 256) = 0;
  *(_DWORD *)(v0 - 248) = 0;
  *(_QWORD *)(v0 - 360) = 1;
}

uint64_t sub_1AE5072A0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1AE5072A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AE4F9858((_QWORD *)(*(_QWORD *)(v1 - 112) + a1), *(_QWORD *)(*(_QWORD *)(v1 - 112) + a1 + 24));
  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v1 - 120);
  return v1 - 96;
}

double sub_1AE5072DC(uint64_t a1, uint64_t a2)
{
  double result;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  result = *(double *)(a2 + 56);
  *(double *)(a1 + 56) = result;
  return result;
}

uint64_t sub_1AE507314()
{
  return sub_1AE88163C();
}

uint64_t sub_1AE50731C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE507328()
{
  uint64_t *v0;
  uint64_t v1;

  return sub_1AE8764EC(v0, v1);
}

uint64_t sub_1AE507338()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 - 232) + 104))(v0);
}

uint64_t sub_1AE507348@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
  return sub_1AE926BC8();
}

void sub_1AE507360()
{
  sub_1AE521774();
}

void sub_1AE507368(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

__n128 sub_1AE507374()
{
  uint64_t v0;

  return *(__n128 *)(v0 + 56);
}

uint64_t sub_1AE5073A8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE5073C4(uint64_t a1)
{
  char v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = a1;
  *(_BYTE *)(v2 - 120) = v1;
  return sub_1AE92538C();
}

uint64_t sub_1AE5073DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t sub_1AE5073F0()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5073F8()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1AE50740C()
{
  return sub_1AE926AA8();
}

uint64_t sub_1AE507424(char a1)
{
  return a1 & 1;
}

uint64_t sub_1AE507444()
{
  return swift_bridgeObjectRetain();
}

void sub_1AE507460(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1AE50748C()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE507494()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE5074AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + *(int *)(v0 + 20)) = *(_QWORD *)(v1 + *(int *)(v0 + 20));
  return v2;
}

uint64_t sub_1AE5074C0()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 5744);
}

uint64_t sub_1AE5074D0()
{
  return swift_release_n();
}

unint64_t *sub_1AE5074DC()
{
  return &STACK[0x1C88];
}

uint64_t sub_1AE5074EC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE5074F8()
{
  return 0x797469746E65;
}

void sub_1AE507508(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1AE507524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  sub_1AE520ED4(v20, v21, (uint64_t)&a15, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1AE507534()
{
  uint64_t v0;

  return v0 - 224;
}

uint64_t sub_1AE507548(_WORD *a1)
{
  *a1 = 0;
  return sub_1AE925AD0();
}

uint64_t sub_1AE507554()
{
  return sub_1AE9246B4();
}

uint64_t sub_1AE507560(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6E5F000000000000;
}

uint64_t sub_1AE507574()
{
  uint64_t v0;

  return sub_1AE620DCC(v0);
}

id sub_1AE507584(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_1AE5075A0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return sub_1AE645120(v3, v2, v0, v1, (_QWORD *)(v4 - 136));
}

uint64_t sub_1AE5075BC()
{
  return sub_1AE5373F8();
}

uint64_t sub_1AE5075C8@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_1AE5075D4()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1AE507614()
{
  uint64_t v0;

  return sub_1AE4F9858((_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 120));
}

uint64_t sub_1AE507624()
{
  return swift_bridgeObjectRetain();
}

void sub_1AE507630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE578FEC(v1 + *(int *)(v3 + 24) + *(int *)(v0 + 28), v4, v2);
}

void sub_1AE50764C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = *(_QWORD *)(v0 + *(int *)(v1 + 32));
  *(_BYTE *)(v2 - 65) = 4;
}

id sub_1AE507664(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_1AE50767C()
{
  return type metadata accessor for ResultGraph();
}

uint64_t sub_1AE507684@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v2 + a1, 1, 1, v1);
}

uint64_t sub_1AE507698()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE5076A0()
{
  return sub_1AE9249D8();
}

void sub_1AE5076A8()
{
  sub_1AE51B560();
}

uint64_t sub_1AE5076B0()
{
  return sub_1AE925E6C();
}

void sub_1AE5076C0()
{
  sub_1AE51B7F4();
}

void sub_1AE5076CC()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 320) = 0;
  *(_DWORD *)(v0 - 316) = 0;
  *(_DWORD *)(v0 - 312) = 0;
  *(_DWORD *)(v0 - 308) = 0;
  *(_DWORD *)(v0 - 304) = 0;
  *(_DWORD *)(v0 - 300) = 0;
  *(_DWORD *)(v0 - 296) = 0;
  *(_DWORD *)(v0 - 288) = 0;
  *(_DWORD *)(v0 - 280) = 0;
  *(_DWORD *)(v0 - 272) = 0;
  *(_DWORD *)(v0 - 264) = 0;
  *(_DWORD *)(v0 - 256) = 0;
  *(_DWORD *)(v0 - 248) = 0;
  *(_QWORD *)(v0 - 360) = 1;
}

uint64_t sub_1AE507768()
{
  return sub_1AE925F74();
}

unint64_t sub_1AE507784@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = 0xD00000000000002DLL;
  *(_QWORD *)(v2 - 88) = (a1 - 32) | 0x8000000000000000;
  *(_QWORD *)(v2 - 72) = v1;
  return EntityIdentifier.description.getter();
}

uint64_t _s20IntelligencePlatform16KTSSegmentRecordV15subjectIdColumnSSSgvgZ_0()
{
  return 0x656D67655373746BLL;
}

uint64_t sub_1AE5077D4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5077E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  __int128 v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  va_list va1;

  va_start(va1, a10);
  va_start(va, a10);
  v11 = va_arg(va1, __int128);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  return sub_1AE50AF58((__int128 *)va, (uint64_t)va1);
}

void sub_1AE5077EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;

  *(_QWORD *)(v22 - 216) = a17;
  *(_QWORD *)(v22 - 208) = a16;
  *(_QWORD *)(v22 - 200) = a15;
  *(_QWORD *)(v22 - 192) = a20;
  *(_QWORD *)(v22 - 184) = a22;
}

void sub_1AE507810()
{
  sub_1AE5924A8();
}

uint64_t sub_1AE507824()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE50782C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE50783C()
{
  uint64_t v0;
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 0, 1, v1);
}

unint64_t sub_1AE507850()
{
  return sub_1AE86FB44();
}

uint64_t sub_1AE507858@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 88) = a1;
  return sub_1AE926C94();
}

uint64_t sub_1AE50788C()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1AE507898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = a1;
  return sub_1AE8AA834();
}

uint64_t sub_1AE5078A0()
{
  return sub_1AE926C70();
}

uint64_t sub_1AE5078B8()
{
  return sub_1AE9258E4();
}

uint64_t sub_1AE5078D4()
{
  return sub_1AE924864();
}

__n128 sub_1AE5078E0()
{
  __n128 *v0;

  return v0[5];
}

uint64_t sub_1AE5078F4()
{
  return sub_1AE92697C();
}

uint64_t sub_1AE507904()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE507934()
{
  return 0;
}

void sub_1AE507948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  sub_1AE520ED4(0x7463656A626FLL, 0xE600000000000000, v20 - 72, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_1AE507960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  sub_1AE520ED4(a1, a2, v20 - 72, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1AE507968()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 7376);
}

uint64_t sub_1AE507978()
{
  return swift_release();
}

uint64_t sub_1AE507980()
{
  return sub_1AE926364();
}

uint64_t sub_1AE507988()
{
  return sub_1AE926C70();
}

void sub_1AE5079A4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1AE5079C0()
{
  return type metadata accessor for LogSignpost();
}

uint64_t sub_1AE5079DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v0, v2, v3);
}

void sub_1AE5079F0(void *a1, NSObject *a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5, const char *a6, uint8_t *a7)
{
  _os_signpost_emit_with_name_impl(a1, a2, a3, a4, a5, a6, a7, 2u);
}

void sub_1AE5079F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,void *a62)
{

}

double sub_1AE507A1C()
{
  double v0;

  return v0;
}

uint64_t sub_1AE507A28(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1AE507A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v1) = *(_QWORD *)(v2 - 304);
}

uint64_t sub_1AE507A64()
{
  _OWORD *v0;
  uint64_t v1;

  *v0 = *(_OWORD *)(v1 + 32);
  return sub_1AE574264((uint64_t)v0);
}

void sub_1AE507A74()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_1AE507A90()
{
  return swift_allocObject();
}

uint64_t sub_1AE507AA0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE507AAC()
{
  return sub_1AE9269F4();
}

uint64_t sub_1AE507AB4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

void sub_1AE507AC8()
{
  void *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE579F84(v3, v2, v1);

}

uint64_t sub_1AE507AE4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE507B04()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE507B24(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *a2 = v2;
  a2[1] = v3;
  return swift_willThrow();
}

uint64_t sub_1AE507B30()
{
  return 1633906540;
}

uint64_t sub_1AE507B54@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 81) = a1;
  return sub_1AE926CC4();
}

void sub_1AE507B78()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 320) = 0;
  *(_DWORD *)(v0 - 316) = 0;
  *(_DWORD *)(v0 - 312) = 0;
  *(_DWORD *)(v0 - 308) = 0;
  *(_DWORD *)(v0 - 304) = 0;
  *(_DWORD *)(v0 - 300) = 0;
  *(_DWORD *)(v0 - 296) = 0;
  *(_DWORD *)(v0 - 288) = 0;
  *(_DWORD *)(v0 - 280) = 0;
  *(_DWORD *)(v0 - 272) = 0;
  *(_DWORD *)(v0 - 264) = 0;
  *(_DWORD *)(v0 - 256) = 0;
  *(_DWORD *)(v0 - 248) = 0;
  *(_QWORD *)(v0 - 360) = 1;
}

uint64_t sub_1AE507C04(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t sub_1AE507C10()
{
  return sub_1AE926CA0();
}

uint64_t sub_1AE507C3C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE507C48()
{
  return swift_getObjectType();
}

uint64_t sub_1AE507C54()
{
  return swift_beginAccess();
}

uint64_t sub_1AE507C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  __int128 v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a10);
  va_start(va, a10);
  v11 = va_arg(va1, __int128);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  return sub_1AE50AF58((__int128 *)va, (uint64_t)va1);
}

uint64_t sub_1AE507C6C()
{
  return sub_1AE805E40(3, 0, 0, 0xE0u);
}

uint64_t sub_1AE507C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

id sub_1AE507CA4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  return objc_msgSend(v2, (SEL)(v1 + 328), a1);
}

uint64_t sub_1AE507CB8()
{
  return swift_willThrowTypedImpl();
}

uint64_t sub_1AE507CC0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 88) = a1;
  return sub_1AE926CA0();
}

uint64_t sub_1AE507CD8(uint64_t *a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 a11, __int128 a12, __int128 a13, __int128 a14, __int128 a15, __int128 a16, __int128 a17, uint64_t a18, char a19)
{
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v20 = *a1;
  v21 = a1[1];
  v22 = *((_QWORD *)v19 + 12);
  v23 = *((_BYTE *)v19 + 104);
  v24 = v19[1];
  a12 = *v19;
  a13 = v24;
  v25 = v19[3];
  a14 = v19[2];
  a15 = v25;
  v26 = v19[5];
  a16 = v19[4];
  a17 = v26;
  a18 = v22;
  a19 = v23;
  a9 = v20;
  a10 = v21;
  a11 = *((_OWORD *)a1 + 1);
  return a2(&a9);
}

uint64_t sub_1AE507D1C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 152) + 8))(v0, *(_QWORD *)(v1 - 120));
}

uint64_t sub_1AE507D3C()
{
  return type metadata accessor for VisualUnderstandingService.Context(0);
}

uint64_t sub_1AE507D48()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t *sub_1AE507D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  a17 = a1;
  a18 = a2;
  return sub_1AE52F6A8(&a14);
}

uint64_t sub_1AE507D64()
{
  return sub_1AE925DB8();
}

void sub_1AE507D88(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  sub_1AE579018(v2, a2);
}

uint64_t sub_1AE507D90()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 5072);
}

uint64_t sub_1AE507DA0()
{
  const char *v0;
  uint64_t v1;
  uint64_t v2;

  return strcmp((const char *)(v2 + v1), v0);
}

BOOL sub_1AE507DAC(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1AE507DEC()
{
  uint64_t v0;

  return v0;
}

void sub_1AE507DFC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 904) = v1;
  *(_QWORD *)(v0 + 912) = *(_QWORD *)(v0 + 384);
  *(_BYTE *)(v0 + 920) = *(_DWORD *)(v0 + 380);
  *(_BYTE *)(v0 + 921) = *(_DWORD *)(v0 + 376);
  *(_BYTE *)(v0 + 922) = *(_DWORD *)(v0 + 372);
}

void sub_1AE507E24()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

uint64_t sub_1AE507E2C()
{
  return sub_1AE925AF4();
}

uint64_t sub_1AE507E38()
{
  uint64_t v0;

  return sub_1AE50B9EC(v0);
}

void sub_1AE507E40(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1AE52FBE8(v2, a2);
}

uint64_t sub_1AE507E80()
{
  return sub_1AE926DE4();
}

uint64_t sub_1AE507EA8()
{
  return 0x74616D6573756F68;
}

uint64_t sub_1AE507EC4@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v1, v3);
}

uint64_t sub_1AE507ED4()
{
  uint64_t v0;

  return v0;
}

id sub_1AE507EE4(id a1, SEL a2)
{
  double v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t sub_1AE507EEC()
{
  return swift_retain();
}

uint64_t sub_1AE507EFC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t sub_1AE507F14()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE507F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v2);
}

uint64_t sub_1AE507F34()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE507F48()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE507F58()
{
  return sub_1AE926AD8();
}

uint64_t sub_1AE507F60()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE507F70()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE507F80()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE507F88()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE78FBA4(v0, v1, 2u);
}

uint64_t sub_1AE507F98()
{
  return 4999502;
}

uint64_t sub_1AE507FA8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE507FB0()
{
  return swift_retain();
}

void sub_1AE507FC4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = v1;
  *(_BYTE *)(v2 + 16) = 2;
  *(_QWORD *)(v2 + 24) = v3;
}

uint64_t sub_1AE507FD8()
{
  return sub_1AE9243A8();
}

uint64_t sub_1AE50800C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 96) + 8))(v0, *(_QWORD *)(v1 - 88));
}

uint64_t sub_1AE50801C()
{
  return sub_1AE926F10();
}

uint64_t sub_1AE508024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;

  return sub_1AE8035B8(v1, v2, v0, v3);
}

void sub_1AE508038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  sub_1AE520ED4(a1, v20, v21 - 256, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1AE508044()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE508050()
{
  return sub_1AE926F4C();
}

uint64_t sub_1AE508078()
{
  return swift_endAccess();
}

uint64_t sub_1AE508080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v0);
}

uint64_t sub_1AE508090(uint64_t a1, SEL *a2)
{
  void *v2;

  return sub_1AE561DEC(v2, a2);
}

uint64_t sub_1AE5080BC()
{
  return sub_1AE926400();
}

uint64_t sub_1AE5080C4()
{
  uint64_t v0;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 128);
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE5080DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1AE5080EC()
{
  return sub_1AE926760();
}

uint64_t sub_1AE508100()
{
  return sub_1AE925878();
}

void sub_1AE508124()
{
  EntityClass.ancestorClassesSet.getter();
}

uint64_t sub_1AE508140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 1, 1, a4);
}

id sub_1AE508160()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

void sub_1AE508178(uint64_t a1)
{
  uint64_t *v1;

  sub_1AE524534(a1, v1);
}

uint64_t sub_1AE508190()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 4160);
}

uint64_t sub_1AE5081A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return sub_1AE5BA314(a1, a2, a3);
}

void sub_1AE5081AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  sub_1AE520ED4(v21, v20, (uint64_t)&a12, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void sub_1AE5081BC()
{
  sub_1AE51AC34();
}

uint64_t sub_1AE5081C8()
{
  return swift_arrayDestroy();
}

uint64_t sub_1AE50821C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE508224()
{
  return sub_1AE9243A8();
}

uint64_t sub_1AE508234()
{
  return swift_release();
}

uint64_t sub_1AE50823C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AE50828C(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE516120(a1, v1);
}

uint64_t sub_1AE508294(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;

  v2[6] = result;
  *v2 = v1;
  return result;
}

uint64_t sub_1AE5082C0()
{
  return swift_task_alloc();
}

uint64_t sub_1AE5082E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

id sub_1AE5082F4()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

uint64_t sub_1AE50830C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 256) = v0;
  *(_QWORD *)(v2 - 232) = v1;
  return sub_1AE925F8C();
}

void sub_1AE508348(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

uint64_t sub_1AE508350()
{
  return swift_getAssociatedTypeWitness();
}

__n128 sub_1AE508360()
{
  uint64_t v0;

  return *(__n128 *)(v0 - 80);
}

uint64_t sub_1AE508374()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE50837C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE508388()
{
  return sub_1AE92496C();
}

uint64_t sub_1AE5083AC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE78FBA4(v1, v0, 2u);
}

uint64_t sub_1AE5083BC()
{
  return swift_retain();
}

void sub_1AE5083D0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 360) = 1;
  *(_DWORD *)(v0 - 320) = 1;
  *(_DWORD *)(v0 - 316) = 1;
  *(_DWORD *)(v0 - 312) = 1;
  *(_DWORD *)(v0 - 308) = 1;
  *(_DWORD *)(v0 - 304) = 1;
  *(_DWORD *)(v0 - 300) = 1;
  *(_DWORD *)(v0 - 296) = 1;
  *(_DWORD *)(v0 - 288) = 1;
  *(_DWORD *)(v0 - 280) = 1;
  *(_DWORD *)(v0 - 272) = 1;
  *(_DWORD *)(v0 - 264) = 1;
  *(_DWORD *)(v0 - 256) = 1;
}

uint64_t sub_1AE508460()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 112);
}

void sub_1AE508488()
{
  sub_1AE5219D8();
}

void sub_1AE5084A0()
{
  sub_1AE58F9B0();
}

unint64_t sub_1AE5084D4()
{
  return 0xD000000000000018;
}

uint64_t sub_1AE5084E4()
{
  uint64_t v0;

  return sub_1AE5B77A0(*(_QWORD *)(v0 - 168));
}

uint64_t sub_1AE5084EC()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1AE805E40(v3, v2, v1, v0);
}

uint64_t sub_1AE508500()
{
  return swift_endAccess();
}

uint64_t sub_1AE508508()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AE50BDB4(v0, v1);
}

uint64_t sub_1AE508514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

unint64_t sub_1AE508524()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 4;
  return sub_1AE895DEC();
}

uint64_t sub_1AE508530()
{
  uint64_t v0;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 128);
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE508548()
{
  return sub_1AE926F34();
}

void sub_1AE508560(uint64_t a1, uint64_t *a2, unsigned int *a3, uint64_t a4)
{
  sub_1AE8CD204(a1, a2, a3, a4, 0xE800000000000000);
}

uint64_t sub_1AE508568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1AE508578(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

void sub_1AE5085B4(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_1AE5085C0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

uint64_t sub_1AE5085CC()
{
  return sub_1AE926F4C();
}

uint64_t sub_1AE5085DC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5085E4()
{
  uint64_t v0;

  return v0;
}

void sub_1AE5085F0(void *a1)
{
  sub_1AE552C40(a1, 0, 1);
}

uint64_t sub_1AE508600()
{
  return sub_1AE926F10();
}

uint64_t sub_1AE508618()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 128) = *(_QWORD *)(v0 - 288);
  *(_BYTE *)(v0 - 120) = *(_DWORD *)(v0 - 276);
  return 0;
}

uint64_t sub_1AE508638()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 6896);
}

uint64_t sub_1AE508648()
{
  return sub_1AE926994();
}

uint64_t sub_1AE508654(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

id sub_1AE508664()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 2228));
}

uint64_t sub_1AE508670()
{
  return swift_bridgeObjectRetain();
}

_QWORD *sub_1AE50869C(_QWORD *a1)
{
  uint64_t v1;

  return sub_1AE4F9858(a1, v1);
}

uint64_t sub_1AE5086B4(uint64_t a1)
{
  char v1;

  *(_BYTE *)(a1 + 16) = v1;
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE5086C4()
{
  return sub_1AE926700();
}

uint64_t sub_1AE5086D0()
{
  return sub_1AE925B3C();
}

uint64_t sub_1AE5086D8()
{
  return sub_1AE9265E0();
}

void sub_1AE5086E0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)v3 = a1;
  *(_QWORD *)(v3 + 8) = v1;
  *(_BYTE *)(v3 + 16) = 2;
  *(_QWORD *)(v3 + 24) = v2;
}

uint64_t sub_1AE5086F4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 192) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE508700(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1AE508720()
{
  return sub_1AE9269F4();
}

uint64_t sub_1AE508740@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void sub_1AE50875C(char *a1@<X8>)
{
  void *v1;

  sub_1AE642D14(v1, a1);
}

uint64_t sub_1AE508764@<X0>(uint64_t (*a1)(_QWORD, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(*(_QWORD *)(v2 - 72), v1);
}

uint64_t sub_1AE508770()
{
  return swift_task_dealloc();
}

void sub_1AE50877C()
{
  JUMPOUT(0x1AF454B70);
}

uint64_t sub_1AE5087A4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, a2);
}

uint64_t sub_1AE5087AC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5087B8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return *(_QWORD *)(v0 - 96);
}

uint64_t sub_1AE5087DC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t sub_1AE5087F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5087FC()
{
  return swift_getObjectType();
}

void sub_1AE508808(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 568) = a1;
}

uint64_t sub_1AE508814(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1AE508828()
{
  return 544434464;
}

unint64_t sub_1AE508838()
{
  return 0xD000000000000010;
}

uint64_t sub_1AE508848()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE508854(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE52F880(a1, v1);
}

uint64_t sub_1AE508868()
{
  sub_1AE592EFC();
  return swift_release();
}

uint64_t sub_1AE508890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 88))(a1, v2, v1);
}

void sub_1AE5088B8(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

void sub_1AE5088C4()
{
  sub_1AE5223FC();
}

uint64_t sub_1AE5088DC()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1AE8035B8(v3, v2, v1, v0);
}

void sub_1AE5088F0()
{
  type metadata accessor for EventBaseView.EventViewSequence();
}

uint64_t sub_1AE5088FC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE508904()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  return sub_1AE82D42C(v1, v2, v0);
}

uint64_t sub_1AE508924()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AE54C814(v0, v1);
}

uint64_t sub_1AE508930()
{
  return swift_release();
}

unint64_t sub_1AE508938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1AE536FA8(v0, v1, v2);
}

uint64_t sub_1AE50894C@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  *(_BYTE *)(v10 - 65) = a1;
  return sub_1AE85A13C((uint64_t)va, (char *)(v10 - 65));
}

uint64_t sub_1AE50895C()
{
  return swift_beginAccess();
}

uint64_t sub_1AE508970()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE508984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1AE508994()
{
  return swift_retain();
}

unint64_t sub_1AE5089A0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 71) = 1;
  return sub_1AE895EA0();
}

uint64_t sub_1AE5089B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  return sub_1AE526458(v8, a2, a3, a4, a5, a6, a7, a8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1AE5089D0()
{
  return sub_1AE926C70();
}

uint64_t sub_1AE5089EC(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE536EDC(a1, v1);
}

uint64_t sub_1AE5089F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t sub_1AE508A44()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  sub_1AE536AF8(v3, v1, v0, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE508A68()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE508A88(uint64_t a1, uint64_t *a2)
{
  return sub_1AE501548(a2);
}

uint64_t sub_1AE508A98()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE508AA8()
{
  return sub_1AE924F9C();
}

uint64_t sub_1AE508AB4(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t (*v3)(uint64_t, char *);
  va_list va;

  va_start(va, a3);
  return v3(a1, va);
}

uint64_t sub_1AE508AC0()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 5888);
}

uint64_t sub_1AE508ADC()
{
  return swift_retain_n();
}

uint64_t sub_1AE508AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_1AE508B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 104));
}

uint64_t sub_1AE508B34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

void sub_1AE508B70(char *a1@<X8>)
{
  void *v1;

  sub_1AE642E08(v1, a1);
}

void sub_1AE508B78(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))
{
  sub_1AE6561E8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
}

uint64_t sub_1AE508B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5;
}

uint64_t sub_1AE508BAC()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE57C238(v0, v1 - 144);
}

uint64_t sub_1AE508BB8()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE508BD0()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 168);
}

uint64_t sub_1AE508BD8()
{
  return sub_1AE9269E8();
}

id sub_1AE508BE4()
{
  const char *v0;
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, v0, v2);
}

__n128 sub_1AE508BF4()
{
  __n128 *v0;
  uint64_t v1;
  __n128 result;

  *(_QWORD *)(v1 - 104) = v0->n128_u64[1];
  result = v0[1];
  *(__n128 *)(v1 - 96) = result;
  *(_BYTE *)(v1 - 65) = 1;
  return result;
}

uint64_t sub_1AE508C10()
{
  return swift_release();
}

uint64_t sub_1AE508C18()
{
  return type metadata accessor for QueryContext();
}

uint64_t sub_1AE508C20()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE508C2C()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE508C38@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t sub_1AE508C44(float a1)
{
  float *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  *v1 = a1;
  *(_QWORD *)(v3 - 272) = v1 + 1;
  v4 = *(_QWORD *)(v2 + 120);
  v5 = *(_QWORD *)(v2 + 128);
  v6 = *(_QWORD *)(v2 + 136);
  v7 = *(_QWORD *)(v2 + 144);
  v8 = *(_QWORD *)(v2 + 152);
  v9 = *(_BYTE *)(v2 + 160);
  *(_QWORD *)(v3 - 264) = *(_QWORD *)(v2 + 112);
  *(_QWORD *)(v3 - 256) = v4;
  *(_QWORD *)(v3 - 248) = v5;
  *(_QWORD *)(v3 - 240) = v6;
  *(_QWORD *)(v3 - 232) = v7;
  *(_QWORD *)(v3 - 224) = v8;
  *(_BYTE *)(v3 - 216) = v9;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE508C84()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE508CA4()
{
  return sub_1AE924984();
}

uint64_t sub_1AE508CC8()
{
  return 1701667182;
}

uint64_t sub_1AE508CEC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE508CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1AE7E9FC0(v2, *(_QWORD *)(v0 + 888), *(_DWORD *)(v0 + 880) & 1, v1);
}

void sub_1AE508D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 40) = v0;
  *(_QWORD *)(v1 + 48) = v2;
  JUMPOUT(0x1AF453184);
}

uint64_t sub_1AE508D20()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1AE508D28@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_1AE926B5C();
}

uint64_t sub_1AE508D38()
{
  return sub_1AE925E90();
}

uint64_t sub_1AE508D44()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE508D6C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE508D98()
{
  return sub_1AE926CC4();
}

void sub_1AE508DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)v16 = a14;
  *(_QWORD *)(v16 + 8) = v17;
  *(_QWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 24) = v19;
  *(_BYTE *)(v16 + 32) = a16;
}

uint64_t sub_1AE508DC8()
{
  return swift_retain();
}

uint64_t sub_1AE508DD4()
{
  uint64_t v0;

  return sub_1AE869218(*(_QWORD *)(v0 - 296));
}

uint64_t sub_1AE508DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 136));
}

uint64_t sub_1AE508DF0()
{
  return sub_1AE926BB0();
}

unint64_t sub_1AE508E04()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 7;
  return sub_1AE895D38();
}

void sub_1AE508E10()
{
  sub_1AE51BDD4();
}

uint64_t sub_1AE508E20()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE508E2C()
{
  return sub_1AE926B98();
}

uint64_t sub_1AE508E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1AE508E78()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

unint64_t sub_1AE508E80()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 112) = 47;
  *(_QWORD *)(v0 - 104) = 0xE100000000000000;
  return sub_1AE536B60();
}

uint64_t sub_1AE508E90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(a1, v1);
}

uint64_t sub_1AE508EA0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE508EB4()
{
  return swift_beginAccess();
}

uint64_t sub_1AE508EE4()
{
  return sub_1AE924FA8();
}

uint64_t sub_1AE508EEC()
{
  return sub_1AE92691C();
}

void sub_1AE508EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1AE551594(a1, v3, a3);
}

uint64_t sub_1AE508F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1AE508F10()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 7520);
}

uint64_t sub_1AE508F20(unsigned __int16 a1)
{
  return a1 | 0x3A0000u;
}

uint64_t sub_1AE508F2C()
{
  return sub_1AE926BB0();
}

uint64_t sub_1AE508F3C()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE508F54()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE508F74()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE508F7C(uint64_t a1, uint64_t a2)
{
  return sub_1AE606484(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_BYTE *)(a2 + 32));
}

void sub_1AE508FA4(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + a1);
  *(_QWORD *)(v1 + a1) = 0;

}

void sub_1AE508FB0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t sub_1AE508FBC()
{
  return sub_1AE925AE8();
}

void sub_1AE508FC4(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = a2;
  a1[1] = (v2 - 32) | 0x8000000000000000;
}

void sub_1AE508FD8(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

id sub_1AE508FE0(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, (SEL)(v2 + 1480), a1);
}

id sub_1AE508FF4(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_1AE509000()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE509028(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_1AE509030()
{
  return sub_1AE926BB0();
}

uint64_t sub_1AE509038()
{
  return sub_1AE9269E8();
}

uint64_t sub_1AE509044()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE52F880(v1, v0);
}

void sub_1AE509058()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 208) = *(_QWORD *)(v2 - 256);
  sub_1AE52444C(v0, *(_QWORD *)(v2 - 368), v1);
}

void sub_1AE509078(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 280) = a1;
  *(_QWORD *)(v2 - 272) = v1;
}

uint64_t sub_1AE5090A0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1AE52982C(a1, v1);
}

uint64_t sub_1AE5090A8()
{
  return 0;
}

uint64_t sub_1AE5090B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = v0;
  return *(_QWORD *)(v2 + 96);
}

uint64_t *sub_1AE5090E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  a19 = a1;
  return sub_1AE52F6A8(&a15);
}

char *sub_1AE509100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  return &a37;
}

uint64_t sub_1AE50911C()
{
  uint64_t v0;

  return sub_1AE52F880(*(_QWORD *)(v0 - 192), *(_QWORD *)(v0 - 176));
}

uint64_t sub_1AE50913C()
{
  return 0x7461447472617473;
}

uint64_t sub_1AE509150()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v0 + 40 * v1);
}

uint64_t sub_1AE509164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1AE525B74(v2, *(_QWORD *)(v1 + v0 - 72), *(_QWORD *)(v1 + v0 - 64), *(_QWORD *)(v1 + v0 - 56), *(unsigned __int16 *)(v1 + v0 - 48), 1u);
}

uint64_t sub_1AE5091B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  return sub_1AE57C238((uint64_t)&a30, (uint64_t)&a25);
}

void sub_1AE5091BC()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 228) = 0;
  *(_QWORD *)(v0 - 220) = 0;
  *(_DWORD *)(v0 - 72) = 0;
  *(_DWORD *)(v0 - 208) = 0;
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 184) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 248) = 0;
  *(_DWORD *)(v0 - 244) = 1;
}

uint64_t sub_1AE509208()
{
  return sub_1AE926850();
}

uint64_t sub_1AE50921C()
{
  uint64_t v0;

  return sub_1AE7EF320(v0);
}

uint64_t sub_1AE509224()
{
  return EntityIdentifier.stringValue.getter();
}

uint64_t sub_1AE509230()
{
  return sub_1AE926D90();
}

unint64_t sub_1AE509238()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1AE80B89C();
}

uint64_t sub_1AE509244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)va);
}

uint64_t sub_1AE509258()
{
  return sub_1AE926B68();
}

void sub_1AE509264()
{
  sub_1AE51BDE8();
}

void sub_1AE509278(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1AE52FBE8(v2, a2);
}

uint64_t sub_1AE509280()
{
  return sub_1AE926BB0();
}

uint64_t sub_1AE50928C()
{
  return swift_endAccess();
}

void sub_1AE509294(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 - 48) = 0;
  *(_QWORD *)(a1 - 40) = 0;
  *(_QWORD *)(a1 - 32) = 1;
  *(_BYTE *)(a1 - 24) = 0;
}

void sub_1AE5092A8()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1AE524534(v1, v0);
}

unint64_t sub_1AE5092B4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 5;
  return sub_1AE895DB0();
}

uint64_t sub_1AE5092C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1AE5092D0()
{
  return sub_1AE924F30();
}

uint64_t sub_1AE5092F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 72));
}

uint64_t sub_1AE509300()
{
  return sub_1AE924744();
}

uint64_t sub_1AE50930C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v0, v1);
}

void sub_1AE509318(uint64_t a1)
{
  uint64_t *v1;

  sub_1AE524534(a1, v1);
}

uint64_t sub_1AE509330()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1AE50933C()
{
  return sub_1AE924864();
}

uint64_t sub_1AE509358()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1AE509360()
{
  return sub_1AE536B60();
}

uint64_t sub_1AE509370(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t sub_1AE509384()
{
  return sub_1AE926CC4();
}

void sub_1AE509390()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_1AE5093CC()
{
  return sub_1AE924F24();
}

uint64_t sub_1AE5093D4()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE5093E4()
{
  return sub_1AE9248DC();
}

uint64_t sub_1AE5093F8()
{
  return 0x797469746E65;
}

uint64_t sub_1AE50940C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1AE59AE98(a1, v2, a2);
}

uint64_t sub_1AE509418()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 6608);
}

uint64_t sub_1AE50943C()
{
  return sub_1AE925F74();
}

unint64_t sub_1AE509448()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1AE5C9D70();
}

uint64_t sub_1AE509454()
{
  return sub_1AE924CCC();
}

void sub_1AE509460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 16) = v2;
  v5 = v1 + 16 * v4;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v0;
}

uint64_t sub_1AE509470()
{
  return sub_1AE925E90();
}

uint64_t sub_1AE50949C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_1AE5094A8()
{
  uint64_t v0;

  return sub_1AE5DD3EC(v0 - 248);
}

uint64_t sub_1AE5094BC()
{
  return swift_retain();
}

uint64_t sub_1AE5094CC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5094D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE61D3B0(a1, v1);
}

uint64_t sub_1AE5094E0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5094FC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

id sub_1AE509508(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_1AE509524()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 296);
}

void sub_1AE509530()
{
  void *v0;

}

void sub_1AE509538(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v23;

  sub_1AE656078(a1, a2, a3, a4, a5, a6, a7, a8, a9, v23, SWORD2(v23), SBYTE6(v23), SHIBYTE(v23), a12, a13, a14, a15, a16, a17,
    a18,
    a19,
    a20,
    a21,
    a22,
    a23);
}

uint64_t sub_1AE509540(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  *(_QWORD *)(v2 - 408) = a1;
  result = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 - 416) = result;
  return result;
}

uint64_t sub_1AE509568()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE698E20(v1, v0);
}

void sub_1AE509588()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v4 - 216);
  *(_QWORD *)(v4 - 208) = v1;
  *(_QWORD *)(v4 - 200) = v5;
  *(_QWORD *)(v4 - 192) = v3;
  *(_QWORD *)(v4 - 184) = v2;
  *(_BYTE *)(v4 - 176) = v0;
  *(_DWORD *)(v4 - 372) = v0;
  EntityClass.ancestorClassesSet.getter();
}

uint64_t sub_1AE5095A8()
{
  return swift_release();
}

uint64_t sub_1AE5095B0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 320) = a1;
  return v1 - 320;
}

uint64_t sub_1AE5095C8()
{
  return sub_1AE926C34();
}

unint64_t sub_1AE5095D4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1AE75468C();
}

_QWORD *sub_1AE5095E0()
{
  _QWORD *v0;

  return sub_1AE4F9858(v0, v0[3]);
}

uint64_t sub_1AE509604()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE509610()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE50961C()
{
  return 0x6E6F73726570;
}

uint64_t sub_1AE509648()
{
  return 0;
}

uint64_t sub_1AE50965C()
{
  return swift_dynamicCast();
}

void sub_1AE509674()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 244) = 0;
  *(_QWORD *)(v0 - 236) = 0;
  *(_DWORD *)(v0 - 248) = 0;
  *(_QWORD *)(v0 - 228) = 0;
  *(_QWORD *)(v0 - 220) = 0;
  *(_DWORD *)(v0 - 72) = 0;
  *(_DWORD *)(v0 - 208) = 0;
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 184) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
}

uint64_t sub_1AE5096C0()
{
  return 0x6E776F6E6B6E75;
}

void sub_1AE5096D8()
{
  sub_1AE519D1C();
}

uint64_t sub_1AE509718()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE50972C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE509734()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE509740(char a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1AE66B890(v2, a1 & 1, v1);
}

uint64_t sub_1AE509754()
{
  return swift_dynamicCastClass();
}

unint64_t sub_1AE509760()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1AE845B24();
}

uint64_t sub_1AE50976C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE509780()
{
  return sub_1AE92625C();
}

uint64_t sub_1AE50978C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE509798()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE5097A4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AE5097B0()
{
  return sub_1AE926B98();
}

uint64_t sub_1AE5097CC()
{
  return sub_1AE925E18();
}

uint64_t sub_1AE5097D4()
{
  return sub_1AE9259EC();
}

uint64_t sub_1AE5097DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v0, v1);
}

void sub_1AE5097EC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * a1;
}

uint64_t sub_1AE5097F8()
{
  return sub_1AE52E470();
}

uint64_t sub_1AE509808()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE50983C()
{
  return sub_1AE926BB0();
}

uint64_t sub_1AE50984C()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE509858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE509874()
{
  return sub_1AE9253B0();
}

uint64_t sub_1AE50987C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

unint64_t sub_1AE50988C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_1AE57A560();
}

void sub_1AE509898()
{
  void *v0;

}

uint64_t sub_1AE5098A4()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 5264);
}

uint64_t sub_1AE5098B4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5098C0()
{
  return sub_1AE926EF8();
}

void sub_1AE5098CC()
{
  static EntityClass.identifierRelationshipType.getter();
}

uint64_t sub_1AE5098F0()
{
  return swift_arrayDestroy();
}

uint64_t sub_1AE509910@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
  return sub_1AE926BBC();
}

uint64_t sub_1AE509928()
{
  const char *v0;
  uint64_t v1;
  uint64_t v2;

  return strcmp((const char *)(v2 + v1), v0);
}

uint64_t sub_1AE509948()
{
  return 0;
}

uint64_t sub_1AE509964()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 224) = *(_QWORD *)(v0 + 16);
  return swift_retain();
}

void sub_1AE509974()
{
  sub_1AE51ACEC();
}

uint64_t sub_1AE509980()
{
  return sub_1AE925B30();
}

uint64_t sub_1AE509988()
{
  return sub_1AE925E6C();
}

uint64_t sub_1AE509998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_1AE501548(a4);
}

uint64_t sub_1AE5099A0()
{
  return sub_1AE926F4C();
}

void sub_1AE5099B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  void *v12;

  sub_1AE642E08(v12, &a12);
}

uint64_t sub_1AE5099D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

id sub_1AE5099E0()
{
  void *v0;

  return v0;
}

uint64_t sub_1AE5099E8()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1AE5099FC()
{
  return 0x796C696D6166;
}

id sub_1AE509A10(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t sub_1AE509A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v3, v0, v2);
}

uint64_t sub_1AE509A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

id sub_1AE509A5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 - 400) = a1;
  v4 = v1 + *(int *)(v2 + 52);
  v5 = *(_QWORD *)(v4 + 8);
  *(_QWORD *)(v3 - 424) = v4;
  return sub_1AE67A0B8(v5, *(_BYTE *)(v4 + 16));
}

void sub_1AE509A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 112) = v1;
  *(_QWORD *)(v3 - 104) = v0;
  *(_QWORD *)(v3 - 96) = v2;
}

void sub_1AE509A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  GraphObjectBareContextProtocol.graphObject<A>(for:)(a1, v20, a3, v21, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t sub_1AE509AB0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE509AC4()
{
  return swift_retain();
}

uint64_t sub_1AE509ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AE66B890(0, a2, v2);
}

uint64_t sub_1AE509AD8()
{
  return sub_1AE926A54();
}

uint64_t sub_1AE509AE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 64);
}

uint64_t sub_1AE509AF8()
{
  return swift_getAssociatedTypeWitness();
}

void sub_1AE509B04()
{
  sub_1AE519C48();
}

void sub_1AE509B24()
{
  sub_1AE51B560();
}

uint64_t sub_1AE509B3C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE509B44()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE509B60(unsigned int a1)
{
  return a1 | 0x4154535F00000000;
}

uint64_t sub_1AE509B74()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE509B7C(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_1AE509B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v1, v0);
}

uint64_t sub_1AE509BAC()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t sub_1AE509BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  sub_1AE8035B8(v2, v3, v0, v4);
  return v1;
}

uint64_t sub_1AE509BF0()
{
  return sub_1AE926F4C();
}

uint64_t sub_1AE509C04(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

uint64_t sub_1AE509C10()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE509C34()
{
  return 0x6465686361657220;
}

uint64_t sub_1AE509C4C()
{
  return swift_dynamicCast();
}

uint64_t sub_1AE509C5C()
{
  return 0x49747865746E6F63;
}

uint64_t sub_1AE509C98()
{
  return swift_bridgeObjectRelease_n();
}

unint64_t sub_1AE509CA4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 6;
  return sub_1AE895D74();
}

uint64_t sub_1AE509CB0()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE509CC8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1AE5BA550(a1, v3, a3);
}

uint64_t sub_1AE509CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 152) = v1;
  *(_QWORD *)(v4 - 144) = v0;
  *(_QWORD *)(v4 - 136) = v2;
  *(_QWORD *)(v4 - 88) = v3;
  return sub_1AE926C1C();
}

void sub_1AE509CEC(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 104) = a1;
}

uint64_t sub_1AE509CF8()
{
  return sub_1AE9246B4();
}

BOOL sub_1AE509D04@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1AE509D1C(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = result + 1;
  *(_QWORD *)(v3 + 8 * result + 32) = a2;
  return result;
}

uint64_t sub_1AE509D34()
{
  return 0x65726F6373;
}

size_t sub_1AE509D44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

unint64_t sub_1AE509D74(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_QWORD *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  return result;
}

uint64_t sub_1AE509D98()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE509DA0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE509DCC()
{
  return sub_1AE924F18();
}

unint64_t sub_1AE509DE4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_1AE57A524();
}

uint64_t sub_1AE509DF0()
{
  return sub_1AE926F10();
}

uint64_t sub_1AE509E04()
{
  return swift_release();
}

uint64_t sub_1AE509E10()
{
  uint64_t v0;

  return sub_1AE525EF8(v0 + 7040);
}

void sub_1AE509E38()
{
  static EntityClass.event.getter();
}

void sub_1AE509E48(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_1AE509E84()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v0, v1);
}

uint64_t sub_1AE509ECC()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE509ED4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE509EDC(_WORD *a1)
{
  *a1 = 0;
  return sub_1AE925AD0();
}

uint64_t sub_1AE509EFC()
{
  return 0x5F7972616D697270;
}

uint64_t sub_1AE509F30@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v2, v3);
}

id sub_1AE509F50()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 3144));
}

uint64_t sub_1AE509F5C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  return static EntityTaggingModelUtility.entityTagTypeFromUnlocalizedLabel(label:)(v1, v0, v2);
}

uint64_t sub_1AE509F6C(uint64_t a1, uint64_t a2)
{
  return sub_1AE536EDC(a1, a2);
}

uint64_t sub_1AE509F74()
{
  return sub_1AE65664C();
}

uint64_t sub_1AE509F8C()
{
  return sub_1AE659790();
}

__n128 sub_1AE509F98()
{
  __n128 *v0;

  return v0[1];
}

uint64_t sub_1AE509FA4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_1AE509FAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v1 - 128);
  *(_QWORD *)(v1 - 144) = v0;
  return result;
}

uint64_t sub_1AE509FC4()
{
  return sub_1AE9269DC();
}

void sub_1AE509FCC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_1AE585700(a1, v3, a3);
}

void sub_1AE509FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_1AE52B450(a1, v5, a3, a4, a5);
}

uint64_t sub_1AE509FE0()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1AE509FE8()
{
  return sub_1AE536D68();
}

uint64_t sub_1AE509FF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

void sub_1AE50A004()
{
  type metadata accessor for InferenceMessageRemoteServerResponse.ErrorCodingKeys();
}

uint64_t sub_1AE50A010()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE50A024@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE50A030(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1AE50A040(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_1AE50A048()
{
  return sub_1AE925EA8();
}

uint64_t sub_1AE50A054()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1AE50A068()
{
  return sub_1AE92691C();
}

uint64_t sub_1AE50A09C()
{
  return sub_1AE92499C();
}

void sub_1AE50A0A4()
{
  sub_1AE51B560();
}

uint64_t sub_1AE50A0B4()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE50A0C4()
{
  return 0x65746144646E65;
}

uint64_t sub_1AE50A0DC(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_1AE50A0F0()
{
  return sub_1AE925B30();
}

uint64_t sub_1AE50A100()
{
  return swift_dynamicCastClass();
}

void sub_1AE50A10C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
}

uint64_t sub_1AE50A120()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE50A134()
{
  return swift_bridgeObjectRelease();
}

id sub_1AE50A13C(id a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + v2) = a1;
  return a1;
}

float sub_1AE50A148@<S0>(uint64_t a1@<X1>, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, float *)@<X2>, uint64_t a3@<X8>)
{
  return sub_1AE826CAC(a1, a3, a2);
}

uint64_t sub_1AE50A154()
{
  return 0x47746E657665;
}

uint64_t sub_1AE50A174()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE50A184(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_1AE50A19C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2 + *(int *)(a1 + 24), v1);
}

uint64_t sub_1AE50A1B4()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE50A1C4()
{
  return swift_slowAlloc();
}

uint64_t sub_1AE50A1D4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

unint64_t sub_1AE50A1E8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 70) = 2;
  return sub_1AE895E64();
}

uint64_t sub_1AE50A1F4()
{
  return sub_1AE924F30();
}

uint64_t sub_1AE50A218()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE50A238()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE50A24C()
{
  return swift_release();
}

uint64_t sub_1AE50A254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(*(_QWORD *)(v3 + 56) + 16 * v2);
  *v4 = v0;
  v4[1] = v1;
  return swift_bridgeObjectRelease();
}

void sub_1AE50A268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  sub_1AE520ED4(a1, a2, v20 - 232, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1AE50A274(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1AE50A290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v2);
}

uint64_t sub_1AE50A29C()
{
  return sub_1AE925DB8();
}

uint64_t sub_1AE50A2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return sub_1AE50BDB4(a14, a10);
}

id sub_1AE50A2C0()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = v0;
  return v0;
}

uint64_t sub_1AE50A2CC()
{
  uint64_t v0;

  return v0 + 56;
}

uint64_t sub_1AE50A2F4()
{
  return sub_1AE9261CC();
}

uint64_t sub_1AE50A2FC()
{
  return 0;
}

uint64_t sub_1AE50A310()
{
  return sub_1AE92676C();
}

uint64_t _s20IntelligencePlatform14ConfidenceNodeV9computing018shouldClampToValidC0ACSdyc_SbtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_BYTE *)a4 = a3;
  *(_QWORD *)(a4 + 8) = result;
  *(_QWORD *)(a4 + 16) = a2;
  return result;
}

uint64_t sub_1AE50A348()
{
  return sub_1AE926EC8();
}

void sub_1AE50A35C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 2 * (a1 / v1);
}

double sub_1AE50A37C(uint64_t a1, uint64_t a2)
{
  double result;

  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_WORD *)(a2 + 48) = 512;
  return result;
}

void sub_1AE50A398(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *v6;

  _os_log_impl(a1, v6, v4, a4, v5, 2u);
}

uint64_t sub_1AE50A3AC()
{
  return sub_1AE9268F8();
}

uint64_t sub_1AE50A3C4()
{
  return sub_1AE926004();
}

uint64_t sub_1AE50A3D4(uint64_t a1)
{
  return sub_1AE5B7800(a1, 2);
}

uint64_t sub_1AE50A3DC()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 103) = v0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE50A3E8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  return sub_1AE92676C();
}

uint64_t sub_1AE50A404()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE50A414()
{
  return sub_1AE926CD0();
}

uint64_t sub_1AE50A424()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t sub_1AE50A434()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE50A43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

id sub_1AE50A44C(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t sub_1AE50A47C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1AE50A48C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE50A49C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE50A4A8()
{
  uint64_t v0;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 168);
  return v0 - 128;
}

uint64_t sub_1AE50A4C0()
{
  uint64_t v0;

  return sub_1AE581398(v0);
}

uint64_t sub_1AE50A4C8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1AE50A4D0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1AE50A500()
{
  return sub_1AE92676C();
}

void sub_1AE50A538()
{
  uint64_t v0;

}

uint64_t sub_1AE50A54C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 328) = v0;
  return swift_task_dealloc();
}

unint64_t sub_1AE50A56C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 2;
  return sub_1AE756E28();
}

uint64_t sub_1AE50A578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1AE75A340(&a9);
}

uint64_t sub_1AE50A584()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_1AE50A594(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 1, 1, v1);
}

uint64_t sub_1AE50A5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;

  return sub_1AE59CA28(*(_QWORD *)(v9 - 416), *(_QWORD *)(v9 - 408), *(_QWORD *)(v9 - 392), *(_QWORD *)(v9 - 384), *(_QWORD *)(v9 - 376), *(_QWORD *)(v9 - 368), *(_QWORD *)(v9 - 360), *(unsigned int *)(v9 - 352), a9);
}

uint64_t sub_1AE50A5F4()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE50A604()
{
  return sub_1AE925F8C();
}

uint64_t sub_1AE50A620()
{
  return sub_1AE9249B4();
}

void sub_1AE50A63C()
{
  sub_1AE51B560();
}

uint64_t sub_1AE50A650()
{
  return 0x656D614E7473616CLL;
}

uint64_t sub_1AE50A664()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE50A674()
{
  return swift_retain();
}

uint64_t sub_1AE50A680()
{
  return sub_1AE92442C();
}

uint64_t sub_1AE50A694()
{
  return sub_1AE9269E8();
}

uint64_t sub_1AE50A6A8()
{
  return type metadata accessor for LogSignpost();
}

uint64_t sub_1AE50A6C4(uint64_t a1, __int128 a2, uint64_t a3, __int128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  *(_OWORD *)v10 = a2;
  *(_QWORD *)(v10 + 16) = a3;
  *(_OWORD *)(v10 + 24) = a4;
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)va);
}

uint64_t sub_1AE50A6E4()
{
  uint64_t v0;

  return sub_1AE7FA7D0(v0);
}

uint64_t sub_1AE50A6EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(_BYTE *)(a1 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_1AE50A708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return sub_1AE925F98();
}

void sub_1AE50A714(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  void (*v9)(uint64_t, char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t);

  sub_1AE80DBE8(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
}

uint64_t sub_1AE50A71C(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, a1);
}

void sub_1AE50A740(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = a1;
}

void sub_1AE50A74C()
{
  sub_1AE60ED04();
}

uint64_t sub_1AE50A754()
{
  uint64_t v0;

  return sub_1AE5D8968(v0);
}

void sub_1AE50A75C(const float *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, float __C, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, float __Ca)
{
  vDSP_Length v18;

  vDSP_svesq(a1, 1, &__Ca, v18);
}

unint64_t sub_1AE50A76C()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1AE50A780()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1AE50A798()
{
  return sub_1AE926C40();
}

uint64_t sub_1AE50A7A0()
{
  uint64_t v0;

  return sub_1AE525C94(*(_QWORD *)(v0 + 408), *(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 328), *(unsigned int *)(v0 + 304), *(_DWORD *)(v0 + 296));
}

uint64_t sub_1AE50A7B8()
{
  return swift_endAccess();
}

uint64_t sub_1AE50A7C0()
{
  return swift_retain();
}

void sub_1AE50A7D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_1AE73D7CC(v4, v3, a3);
}

uint64_t sub_1AE50A7DC()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE50A7FC()
{
  return sub_1AE924E58();
}

uint64_t sub_1AE50A810()
{
  return sub_1AE925F20();
}

uint64_t sub_1AE50A81C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE50A82C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = a1;
  return sub_1AE926C70();
}

void sub_1AE50A84C()
{
  sub_1AE51BDD4();
}

_QWORD *sub_1AE50A858()
{
  uint64_t v0;

  return sub_1AE4F9858((_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 120));
}

uint64_t sub_1AE50A87C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 0;
  return *(_QWORD *)(v0 - 120);
}

SEL *sub_1AE50A894()
{
  return sub_1AE4F6F70();
}

void sub_1AE50A89C()
{
  uint64_t v0;

  sub_1AE4F9858((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1AE8D30C0();
}

void sub_1AE50A8C8()
{
  sub_1AE5227C4();
}

void sub_1AE50A8F0(uint64_t a1@<X8>)
{
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  *(_WORD *)(a1 + 32) = v1;
  v6 = (_QWORD *)(*(_QWORD *)(v5 + 56) + 16 * v4);
  *v6 = v2;
  v6[1] = v3;
}

void sub_1AE50A90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v28;
  *(_QWORD *)(a2 + 16) = v23;
  *(_QWORD *)(a2 + 24) = v20;
  *(_QWORD *)(a2 + 32) = v22;
  *(_QWORD *)(a2 + 40) = v27;
  *(_QWORD *)(a2 + 48) = a20;
  *(_QWORD *)(a2 + 56) = v26;
  *(_QWORD *)(a2 + 64) = v25;
  *(_BYTE *)(a2 + 72) = v21;
}

BOOL sub_1AE50A938@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1AE50A94C()
{
  return sub_1AE926A54();
}

uint64_t sub_1AE50A960()
{
  return sub_1AE926C88();
}

uint64_t sub_1AE50A968()
{
  return sub_1AE9243C0();
}

uint64_t sub_1AE50A974()
{
  return swift_arrayDestroy();
}

uint64_t sub_1AE50A984()
{
  return 0x49747865746E6F63;
}

uint64_t sub_1AE50A9B8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE50A9DC()
{
  return sub_1AE9250F8();
}

uint64_t sub_1AE50A9F0()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE50AA00()
{
  return sub_1AE926BB0();
}

uint64_t sub_1AE50AA10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v2 + v1);
}

uint64_t sub_1AE50AA1C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE50AA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,__int128 a28)
{
  uint64_t v28;

  return sub_1AE50AF58(&a28, v28 - 136);
}

__n128 sub_1AE50AA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, __n128 a14, __int128 a15, uint64_t a16, uint64_t a17, char a18)
{
  uint64_t v18;
  __n128 result;

  result = a14;
  *(__n128 *)v18 = a14;
  *(_OWORD *)(v18 + 16) = a15;
  *(_QWORD *)(v18 + 32) = a16;
  *(_QWORD *)(v18 + 40) = a17;
  *(_BYTE *)(v18 + 48) = a18;
  return result;
}

__n128 *sub_1AE50AA94(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t sub_1AE50AAA0()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE50AAAC()
{
  return sub_1AE9268F8();
}

uint64_t sub_1AE50AAE8()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE50AAF0()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE50AAF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t sub_1AE50AB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t (*v5)(char *, uint64_t);
  uint64_t v6;
  va_list va;

  va_start(va, a5);
  return v5(va, v6);
}

uint64_t sub_1AE50AB1C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_1AE50AB28()
{
  void *v0;

}

uint64_t sub_1AE50AB48()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE50AB54()
{
  return sub_1AE926EEC();
}

uint64_t sub_1AE50AB60()
{
  return sub_1AE5373F8();
}

uint64_t sub_1AE50AB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_1AE50AB80()
{
  return swift_willThrow();
}

uint64_t sub_1AE50AB8C()
{
  return sub_1AE925E18();
}

uint64_t sub_1AE50ABA0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = v1 + a1;
  return swift_unknownObjectRetain();
}

void sub_1AE50ABB4()
{
  void *v0;

}

uint64_t sub_1AE50ABBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1AE50ABCC(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

void *sub_1AE50ABE0()
{
  return malloc(0x40uLL);
}

void sub_1AE50AC08(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  void (*v9)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1AE65AB34(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9);
}

uint64_t sub_1AE50AC10()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
}

uint64_t sub_1AE50AC18()
{
  return swift_release();
}

uint64_t sub_1AE50AC24()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 - 128) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v1 - 112) = v2;
  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 48);
  return swift_getObjectType();
}

uint64_t sub_1AE50AC54()
{
  uint64_t v0;

  return v0;
}

void sub_1AE50AC60()
{
  type metadata accessor for DynamicGraphObjectSequence();
}

double sub_1AE50AC70()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  v0[1] = 0u;
  v0[2] = 0u;
  *v0 = 0u;
  return result;
}

uint64_t sub_1AE50AC84()
{
  return sub_1AE924CCC();
}

void sub_1AE50AC94()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 312);
  *(_QWORD *)(v0 - 320) = *(_QWORD *)(v0 - 320);
  *(_QWORD *)(v0 - 312) = v1;
}

uint64_t sub_1AE50ACB8()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE50ACC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 400) + 8))(v1, v0);
}

uint64_t sub_1AE50ACD8()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE50ACE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;

  return sub_1AE59CA28(*(_QWORD *)(v9 - 416), *(_QWORD *)(v9 - 408), *(_QWORD *)(v9 - 400), *(_QWORD *)(v9 - 392), *(_QWORD *)(v9 - 384), *(_QWORD *)(v9 - 376), *(_QWORD *)(v9 - 368), *(unsigned int *)(v9 - 360), a9);
}

uint64_t sub_1AE50AD34()
{
  return sub_1AE56AD74();
}

uint64_t sub_1AE50AD3C()
{
  return sub_1AE92499C();
}

uint64_t sub_1AE50AD58()
{
  return 0x7961646874726962;
}

uint64_t sub_1AE50AD6C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE50AD74()
{
  return sub_1AE926EA4();
}

uint64_t sub_1AE50AD98()
{
  return sub_1AE924474();
}

void sub_1AE50ADA0()
{
  _QWORD *v0;

  sub_1AE4F9858(v0, v0[3]);
  sub_1AE7EB6E4();
}

void sub_1AE50ADD4()
{
  JUMPOUT(0x1AF454C78);
}

uint64_t sub_1AE50ADE4()
{
  return 0x797469437369;
}

uint64_t sub_1AE50ADF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return type metadata accessor for LifeEventEntry(0, a5, a3, a4);
}

uint64_t sub_1AE50AE04()
{
  uint64_t v0;

  return sub_1AE581398(*(_QWORD *)(v0 + 344));
}

uint64_t sub_1AE50AE0C()
{
  return swift_weakAssign();
}

uint64_t sub_1AE50AE18()
{
  return sub_1AE92676C();
}

uint64_t sub_1AE50AE2C()
{
  return sub_1AE92550C();
}

uint64_t sub_1AE50AE44(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE536EDC(a1, v1);
}

uint64_t sub_1AE50AE50(uint64_t a1)
{
  return sub_1AE805E40(a1, 0, 0, 0xE0u);
}

void sub_1AE50AE60()
{
  sub_1AE51A298();
}

uint64_t sub_1AE50AE6C()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1AE50AE78@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v3);
}

uint64_t sub_1AE50AEA0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

void sub_1AE50AEF4()
{
  sub_1AE51BDD4();
}

uint64_t sub_1AE50AF00()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE50AF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return type metadata accessor for OrderedDictionary(0, v3, a3, v4);
}

uint64_t sub_1AE50AF24@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
}

void *sub_1AE50AF38(uint64_t a1)
{
  return sub_1AE4F50D4(a1);
}

uint64_t sub_1AE50AF58(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1AE50AF70@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AE4F88D8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

unint64_t sub_1AE50AFA4()
{
  unint64_t result;

  result = qword_1ED319380;
  if (!qword_1ED319380)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE939E4C, &type metadata for CandidateGenerationAlgorithm.TextMatchingSearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED319380);
  }
  return result;
}

uint64_t sub_1AE50AFE0()
{
  return 0x6E726574746170;
}

uint64_t storeEnumTagSinglePayload for CandidateGenerationAlgorithm.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AE50B044 + 4 * byte_1AE939750[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AE50B078 + 4 * byte_1AE93974B[v4]))();
}

uint64_t sub_1AE50B078(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE50B080(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE50B088);
  return result;
}

uint64_t sub_1AE50B094(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE50B09CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AE50B0A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE50B0A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for LiveGlobalKnowledge.ExternalIdentifierType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1AE50B13C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE4F5884(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE50B160()
{
  unsigned __int8 *v0;

  return sub_1AE50B1A4(*v0);
}

unint64_t sub_1AE50B168()
{
  unint64_t result;

  result = qword_1ED319338;
  if (!qword_1ED319338)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE939EEC, &type metadata for CandidateGenerationAlgorithm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED319338);
  }
  return result;
}

uint64_t sub_1AE50B1A4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE50B1E4 + 4 * byte_1AE93970B[a1]))(0x6E69646465626D65, 0xEF68637261655367);
}

uint64_t sub_1AE50B1E4()
{
  return 0x65537369736F6E6BLL;
}

unint64_t sub_1AE50B204()
{
  return 0xD000000000000010;
}

unint64_t sub_1AE50B220()
{
  return 0xD000000000000012;
}

uint64_t type metadata accessor for EntityResolutionServicePool.GuardedData()
{
  uint64_t result;

  result = qword_1ED31AD48;
  if (!qword_1ED31AD48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for EntityResolutionHandlerPool()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EntityResolutionHandlerPool.EntityRerankerHandlerStore()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EntityResolutionHandlerPool.EntityRerankerHandlerStore.GuardedData()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for RouteFlag(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1AE50B378()
{
  sub_1AE50B43C();
  return sub_1AE926190();
}

uint64_t sub_1AE50B3D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE4F4E00();
  *a1 = result;
  return result;
}

unint64_t sub_1AE50B400()
{
  unint64_t result;

  result = qword_1ED319330;
  if (!qword_1ED319330)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960E6C, &type metadata for MentionGenerationAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1ED319330);
  }
  return result;
}

unint64_t sub_1AE50B43C()
{
  unint64_t result;

  result = qword_1ED319328;
  if (!qword_1ED319328)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960DCC, &type metadata for MentionGenerationAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1ED319328);
  }
  return result;
}

void sub_1AE50B4F4()
{
  sub_1AE4F6460();
}

unint64_t sub_1AE50B508()
{
  unint64_t result;

  result = qword_1ED319320;
  if (!qword_1ED319320)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93F9E0, &unk_1E5DBE178);
    atomic_store(result, (unint64_t *)&qword_1ED319320);
  }
  return result;
}

unint64_t sub_1AE50B544()
{
  unint64_t result;

  result = qword_1ED319308;
  if (!qword_1ED319308)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FE78, &type metadata for CandidateGeneratorConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED319308);
  }
  return result;
}

void sub_1AE50B580(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v4;

  sub_1AE4F4E48(a1);
  if (!v2)
    *a2 = v4;
}

unint64_t sub_1AE50B5A8()
{
  unint64_t result;

  result = qword_1ED319300;
  if (!qword_1ED319300)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FA08, &unk_1E5DBD168);
    atomic_store(result, (unint64_t *)&qword_1ED319300);
  }
  return result;
}

unint64_t sub_1AE50B5EC()
{
  unint64_t result;

  result = qword_1ED3192E8;
  if (!qword_1ED3192E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FEC8, &type metadata for MentionGeneratorConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3192E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EntityResolutionConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 140) = 0;
    *(_DWORD *)(result + 136) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 141) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 141) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_1AE50B690()
{
  EntityResolutionConfig.init(from:)();
}

unint64_t sub_1AE50B6A4()
{
  unint64_t result;

  result = qword_1ED3192C0;
  if (!qword_1ED3192C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FAF8, &type metadata for EntityResolutionConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3192C0);
  }
  return result;
}

uint64_t type metadata accessor for EntityRerankerHandler()
{
  return objc_opt_self();
}

unint64_t sub_1AE50B700()
{
  unint64_t result;

  result = qword_1ED3192B8;
  if (!qword_1ED3192B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FA30, &unk_1E5DB9E20);
    atomic_store(result, (unint64_t *)&qword_1ED3192B8);
  }
  return result;
}

uint64_t sub_1AE50B73C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE4F5018();
  *a1 = result;
  return result;
}

unint64_t sub_1AE50B768()
{
  unint64_t result;

  result = qword_1ED319298;
  if (!qword_1ED319298)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93F354, &type metadata for RerankerAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1ED319298);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EntityAliasView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for EntityAliasView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AE50B7E0(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v4;

  sub_1AE4F5468(a1);
  if (!v2)
    *a2 = v4;
}

unint64_t sub_1AE50B808()
{
  unint64_t result;

  result = qword_1ED319258;
  if (!qword_1ED319258)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93F9B8, &unk_1E5DB6858);
    atomic_store(result, (unint64_t *)&qword_1ED319258);
  }
  return result;
}

unint64_t sub_1AE50B844()
{
  unint64_t result;

  result = qword_1ED319240;
  if (!qword_1ED319240)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93FE28, &type metadata for RerankerConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED319240);
  }
  return result;
}

uint64_t sub_1AE50B880()
{
  sub_1AE50B944();
  return sub_1AE926190();
}

uint64_t sub_1AE50B8DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE4F48DC();
  *a1 = result;
  return result;
}

unint64_t sub_1AE50B908()
{
  unint64_t result;

  result = qword_1ED319238;
  if (!qword_1ED319238)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE939814, &type metadata for SearchPattern);
    atomic_store(result, (unint64_t *)&qword_1ED319238);
  }
  return result;
}

unint64_t sub_1AE50B944()
{
  unint64_t result;

  result = qword_1ED319230;
  if (!qword_1ED319230)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93983C, &type metadata for SearchPattern);
    atomic_store(result, (unint64_t *)&qword_1ED319230);
  }
  return result;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewService.visualIdentifierView()(GDVisualIdentifierView *__return_ptr retstr)
{
  sub_1AE50A894();
  sub_1AE4FC530();
}

uint64_t sub_1AE50B9EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LogSignpost();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AE50BA28(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_unknownObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1AE50BA54(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1AE50BA84()
{
  SearchMode.init(from:)();
}

unint64_t sub_1AE50BA98()
{
  unint64_t result;

  result = qword_1ED319228;
  if (!qword_1ED319228)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SearchMode, &type metadata for SearchMode);
    atomic_store(result, (unint64_t *)&qword_1ED319228);
  }
  return result;
}

uint64_t _s20IntelligencePlatform10SearchModeO20ExhaustiveCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE50BB14 + 4 * byte_1AE96E084[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE50BB34 + 4 * byte_1AE96E089[v4]))();
}

_BYTE *sub_1AE50BB14(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE50BB34(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE50BB3C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE50BB44(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE50BB4C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE50BB54(_DWORD *result)
{
  *result = 0;
  return result;
}

unint64_t sub_1AE50BB68()
{
  unint64_t result;

  result = qword_1ED319210;
  if (!qword_1ED319210)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E5AC, &type metadata for SearchMode.TopKCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED319210);
  }
  return result;
}

uint64_t sub_1AE50BBA4()
{
  return 0x74696D694C6D756ELL;
}

uint64_t storeEnumTagSinglePayload for SearchMode.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE50BC0C + 4 * byte_1AE96E07F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE50BC40 + 4 * byte_1AE96E07A[v4]))();
}

uint64_t sub_1AE50BC40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE50BC48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE50BC50);
  return result;
}

uint64_t sub_1AE50BC5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE50BC64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE50BC68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE50BC70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for AssetRegistryRemoteBackendType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1AE50BD04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE4F4F10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE50BD28()
{
  char *v0;

  return sub_1AE50BD6C(*v0);
}

unint64_t sub_1AE50BD30()
{
  unint64_t result;

  result = qword_1ED3191E8;
  if (!qword_1ED3191E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E5FC, &type metadata for SearchMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3191E8);
  }
  return result;
}

uint64_t sub_1AE50BD6C(char a1)
{
  if ((a1 & 1) != 0)
    return 1265659764;
  else
    return 0x6974737561687865;
}

uint64_t sub_1AE50BDA0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1AE50BDB4(a1, a2);
  return a1;
}

uint64_t sub_1AE50BDB4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t ActivityEventType.init(activityTypeEntityClass:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;

  v5 = *(_QWORD *)(a1 + 24);
  v6 = sub_1AE5B986C(0x5FuLL, (uint64_t)&v259);
  sub_1AE4F9040(v6, v7, v8, v9, v10, v11, v12, v13, v234, v259, v260, v261);
  v14 = v14 && v2 == v5;
  if (v14)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_8;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_8:
    result = swift_bridgeObjectRelease();
    v16 = 0;
    goto LABEL_9;
  }
  static EntityClass.workingActivityType.getter();
  sub_1AE4F9040(v17, v18, v19, v20, v21, v22, v23, v24, v235, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_17;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_17:
    result = swift_bridgeObjectRelease();
    v16 = 1;
    goto LABEL_9;
  }
  static EntityClass.meetingActivityType.getter();
  sub_1AE4F9040(v26, v27, v28, v29, v30, v31, v32, v33, v236, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    v16 = 2;
    sub_1AE4FD924();
    result = sub_1AE4F76D8();
    goto LABEL_9;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
    result = sub_1AE4F665C();
    v16 = 2;
    goto LABEL_9;
  }
  static EntityClass.eatingActivityType.getter();
  sub_1AE4F9040(v35, v36, v37, v38, v39, v40, v41, v42, v237, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_32;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_32:
    result = swift_bridgeObjectRelease();
    v16 = 3;
    goto LABEL_9;
  }
  static EntityClass.watchingMediaActivityType.getter();
  sub_1AE4F9040(v44, v45, v46, v47, v48, v49, v50, v51, v238, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_40;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_40:
    result = swift_bridgeObjectRelease();
    v16 = 4;
    goto LABEL_9;
  }
  static EntityClass.communicatingActivityType.getter();
  sub_1AE4F9040(v53, v54, v55, v56, v57, v58, v59, v60, v239, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_48;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_48:
    result = swift_bridgeObjectRelease();
    v16 = 5;
    goto LABEL_9;
  }
  static EntityClass.shoppingActivityType.getter();
  sub_1AE4F9040(v62, v63, v64, v65, v66, v67, v68, v69, v240, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_56;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_56:
    result = swift_bridgeObjectRelease();
    v16 = 6;
    goto LABEL_9;
  }
  static EntityClass.mindfulActivityType.getter();
  sub_1AE4F9040(v71, v72, v73, v74, v75, v76, v77, v78, v241, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_64;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_64:
    result = swift_bridgeObjectRelease();
    v16 = 7;
    goto LABEL_9;
  }
  static EntityClass.sleepActivityType.getter();
  sub_1AE4F9040(v80, v81, v82, v83, v84, v85, v86, v87, v242, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_72;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_72:
    result = swift_bridgeObjectRelease();
    v16 = 8;
    goto LABEL_9;
  }
  static EntityClass.travelActivityType.getter();
  sub_1AE4F9040(v89, v90, v91, v92, v93, v94, v95, v96, v243, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_80;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_80:
    result = swift_bridgeObjectRelease();
    v16 = 9;
    goto LABEL_9;
  }
  static EntityClass.readingActivityType.getter();
  sub_1AE4F9040(v98, v99, v100, v101, v102, v103, v104, v105, v244, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_88;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_88:
    result = swift_bridgeObjectRelease();
    v16 = 10;
    goto LABEL_9;
  }
  static EntityClass.vacationActivityType.getter();
  sub_1AE4F9040(v107, v108, v109, v110, v111, v112, v113, v114, v245, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_96;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_96:
    result = swift_bridgeObjectRelease();
    v16 = 11;
    goto LABEL_9;
  }
  static EntityClass.socialActivityType.getter();
  sub_1AE4F9040(v116, v117, v118, v119, v120, v121, v122, v123, v246, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_104;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_104:
    result = swift_bridgeObjectRelease();
    v16 = 12;
    goto LABEL_9;
  }
  static EntityClass.wakingActivityType.getter();
  sub_1AE4F9040(v125, v126, v127, v128, v129, v130, v131, v132, v247, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_112;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_112:
    result = swift_bridgeObjectRelease();
    v16 = 13;
    goto LABEL_9;
  }
  static EntityClass.goingToBedActivityType.getter();
  sub_1AE4F9040(v134, v135, v136, v137, v138, v139, v140, v141, v248, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_120;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_120:
    result = swift_bridgeObjectRelease();
    v16 = 14;
    goto LABEL_9;
  }
  static EntityClass.typeOfPhysicalExercise.getter();
  sub_1AE4F9040(v143, v144, v145, v146, v147, v148, v149, v150, v249, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_128;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_128:
    result = swift_bridgeObjectRelease();
    v16 = 15;
    goto LABEL_9;
  }
  static EntityClass.commuteActivityType.getter();
  sub_1AE4F9040(v152, v153, v154, v155, v156, v157, v158, v159, v250, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_136;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_136:
    result = swift_bridgeObjectRelease();
    v16 = 16;
    goto LABEL_9;
  }
  static EntityClass.walkingActivityType.getter();
  sub_1AE4F9040(v161, v162, v163, v164, v165, v166, v167, v168, v251, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_144;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_144:
    result = swift_bridgeObjectRelease();
    v16 = 17;
    goto LABEL_9;
  }
  static EntityClass.runningActivityType.getter();
  sub_1AE4F9040(v170, v171, v172, v173, v174, v175, v176, v177, v252, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_152;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_152:
    result = swift_bridgeObjectRelease();
    v16 = 18;
    goto LABEL_9;
  }
  static EntityClass.bikingActivityType.getter();
  sub_1AE4F9040(v179, v180, v181, v182, v183, v184, v185, v186, v253, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_160;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_160:
    result = swift_bridgeObjectRelease();
    v16 = 19;
    goto LABEL_9;
  }
  static EntityClass.hikingActivityType.getter();
  sub_1AE4F9040(v188, v189, v190, v191, v192, v193, v194, v195, v254, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_168;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_168:
    result = swift_bridgeObjectRelease();
    v16 = 20;
    goto LABEL_9;
  }
  static EntityClass.phoneCallActivityType.getter();
  sub_1AE4F9040(v197, v198, v199, v200, v201, v202, v203, v204, v255, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_176;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_176:
    result = swift_bridgeObjectRelease();
    v16 = 21;
    goto LABEL_9;
  }
  static EntityClass.facetimeActivityType.getter();
  sub_1AE4F9040(v206, v207, v208, v209, v210, v211, v212, v213, v256, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_184;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_184:
    result = swift_bridgeObjectRelease();
    v16 = 22;
    goto LABEL_9;
  }
  static EntityClass.drivingActivityType.getter();
  sub_1AE4F9040(v215, v216, v217, v218, v219, v220, v221, v222, v257, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_192;
  }
  sub_1AE4F9018();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_192:
    result = swift_bridgeObjectRelease();
    v16 = 23;
    goto LABEL_9;
  }
  static EntityClass.behaviorActivityType.getter();
  sub_1AE4F9040(v224, v225, v226, v227, v228, v229, v230, v231, v258, v259, v260, v261);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    result = sub_1AE4F76D8();
    v16 = 24;
  }
  else
  {
    v233 = sub_1AE4F9018();
    sub_1AE4F9038();
    sub_1AE4F665C();
    swift_bridgeObjectRelease();
    result = sub_1AE4F76D8();
    if ((v233 & 1) != 0)
      v16 = 24;
    else
      v16 = 25;
  }
LABEL_9:
  *a2 = v16;
  return result;
}

uint64_t ActivityEventType.activityTypeEntityClass.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)&loc_1AE50C654 + dword_1AE50C6E4[*v0]))();
}

unint64_t sub_1AE50C664@<X0>(uint64_t a1@<X8>)
{
  return sub_1AE5B986C(0x5FuLL, a1);
}

void ActivityEventType.graphObjectType.getter()
{
  __asm { BR              X10 }
}

void sub_1AE50C770()
{
  type metadata accessor for CustomGraphTransportationActivityEvent(0);
  sub_1AE512FA0(&qword_1ED30F7D0, type metadata accessor for CustomGraphTransportationActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphTransportationActivityEvent);
  sub_1AE4F6664();
}

void ActivityEventType.hash(into:)()
{
  sub_1AE926ED4();
  sub_1AE4F6664();
}

BOOL static ActivityEventType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1AE50CBA4()
{
  sub_1AE51301C();
  return sub_1AE926F94();
}

uint64_t sub_1AE50CBCC()
{
  sub_1AE51301C();
  return sub_1AE926FA0();
}

BOOL sub_1AE50CBF4(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1AE50CC04()
{
  return sub_1AE926ED4();
}

uint64_t sub_1AE50CC28(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  char v29;

  v2 = a1 == 0x726F70736E617274 && a2 == 0xEE006E6F69746174;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x676E696B726F77 && a2 == 0xE700000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x676E697465656DLL && a2 == 0xE700000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x676E69746165 && a2 == 0xE600000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x676E696863746177 && a2 == 0xED0000616964654DLL;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x63696E756D6D6F63 && a2 == 0xED0000676E697461;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x676E6970706F6873 && a2 == 0xE800000000000000;
              if (v11 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x6C7566646E696DLL && a2 == 0xE700000000000000;
                if (v12 || (sub_1AE926D60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 0x7065656C73 && a2 == 0xE500000000000000;
                  if (v13 || (sub_1AE926D60() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    v14 = a1 == 0x6C6576617274 && a2 == 0xE600000000000000;
                    if (v14 || (sub_1AE926D60() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      v15 = a1 == 0x676E6964616572 && a2 == 0xE700000000000000;
                      if (v15 || (sub_1AE926D60() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        v16 = a1 == 0x6E6F697461636176 && a2 == 0xE800000000000000;
                        if (v16 || (sub_1AE926D60() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else
                        {
                          v17 = a1 == 0x6C6169636F73 && a2 == 0xE600000000000000;
                          if (v17 || (sub_1AE926D60() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 12;
                          }
                          else
                          {
                            v18 = a1 == 0x676E696B6177 && a2 == 0xE600000000000000;
                            if (v18 || (sub_1AE926D60() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 13;
                            }
                            else
                            {
                              v19 = a1 == 0x426F54676E696F67 && a2 == 0xEA00000000006465;
                              if (v19 || (sub_1AE926D60() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 14;
                              }
                              else if (a1 == 0xD000000000000016 && a2 == 0x80000001AE97C150
                                     || (sub_1AE926D60() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 15;
                              }
                              else
                              {
                                v20 = a1 == 0x6574756D6D6F63 && a2 == 0xE700000000000000;
                                if (v20 || (sub_1AE926D60() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 16;
                                }
                                else
                                {
                                  v21 = a1 == 0x676E696B6C6177 && a2 == 0xE700000000000000;
                                  if (v21 || (sub_1AE926D60() & 1) != 0)
                                  {
                                    swift_bridgeObjectRelease();
                                    return 17;
                                  }
                                  else
                                  {
                                    v22 = a1 == 0x676E696E6E7572 && a2 == 0xE700000000000000;
                                    if (v22 || (sub_1AE926D60() & 1) != 0)
                                    {
                                      swift_bridgeObjectRelease();
                                      return 18;
                                    }
                                    else
                                    {
                                      v23 = a1 == 0x676E696B6962 && a2 == 0xE600000000000000;
                                      if (v23 || (sub_1AE926D60() & 1) != 0)
                                      {
                                        swift_bridgeObjectRelease();
                                        return 19;
                                      }
                                      else
                                      {
                                        v24 = a1 == 0x676E696B6968 && a2 == 0xE600000000000000;
                                        if (v24 || (sub_1AE926D60() & 1) != 0)
                                        {
                                          swift_bridgeObjectRelease();
                                          return 20;
                                        }
                                        else
                                        {
                                          v25 = a1 == 0x6C6143656E6F6870 && a2 == 0xE90000000000006CLL;
                                          if (v25 || (sub_1AE926D60() & 1) != 0)
                                          {
                                            swift_bridgeObjectRelease();
                                            return 21;
                                          }
                                          else
                                          {
                                            v26 = a1 == 0x656D697465636166 && a2 == 0xE800000000000000;
                                            if (v26 || (sub_1AE926D60() & 1) != 0)
                                            {
                                              swift_bridgeObjectRelease();
                                              return 22;
                                            }
                                            else
                                            {
                                              v27 = a1 == 0x676E6976697264 && a2 == 0xE700000000000000;
                                              if (v27 || (sub_1AE926D60() & 1) != 0)
                                              {
                                                swift_bridgeObjectRelease();
                                                return 23;
                                              }
                                              else if (a1 == 0x726F697661686562 && a2 == 0xE800000000000000)
                                              {
                                                swift_bridgeObjectRelease();
                                                return 24;
                                              }
                                              else
                                              {
                                                v29 = sub_1AE926D60();
                                                swift_bridgeObjectRelease();
                                                if ((v29 & 1) != 0)
                                                  return 24;
                                                else
                                                  return 25;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE50D5D8()
{
  return 25;
}

uint64_t sub_1AE50D5E0()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  return sub_1AE926F10();
}

uint64_t sub_1AE50D624()
{
  return 0;
}

uint64_t sub_1AE50D630(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE50D670 + 4 * byte_1AE931679[a1]))(0x726F70736E617274, 0xEE006E6F69746174);
}

uint64_t sub_1AE50D670()
{
  return 0x676E696B726F77;
}

uint64_t sub_1AE50D874()
{
  return 0x726F697661686562;
}

uint64_t sub_1AE50D88C()
{
  sub_1AE513148();
  return sub_1AE926F94();
}

uint64_t sub_1AE50D8B4()
{
  sub_1AE513148();
  return sub_1AE926FA0();
}

BOOL sub_1AE50D8DC(char *a1, char *a2)
{
  return sub_1AE50CBF4(*a1, *a2);
}

uint64_t sub_1AE50D8E8()
{
  return sub_1AE50D5E0();
}

uint64_t sub_1AE50D8F0()
{
  return sub_1AE50CC04();
}

uint64_t sub_1AE50D8FC()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1AE50D918()
{
  return 0;
}

uint64_t sub_1AE50D924()
{
  unsigned __int8 *v0;

  return sub_1AE50D630(*v0);
}

uint64_t sub_1AE50D92C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE50CC28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE50D950()
{
  return sub_1AE50D624();
}

uint64_t sub_1AE50D96C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE50D5D8();
  *a1 = result;
  return result;
}

uint64_t sub_1AE50D990()
{
  sub_1AE512FE0();
  return sub_1AE926F94();
}

uint64_t sub_1AE50D9B8()
{
  sub_1AE512FE0();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50D9E0()
{
  sub_1AE513490();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DA08()
{
  sub_1AE513490();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DA30()
{
  sub_1AE5131FC();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DA58()
{
  sub_1AE5131FC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DA80()
{
  sub_1AE513058();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DAA8()
{
  sub_1AE513058();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DAD0()
{
  sub_1AE513508();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DAF8()
{
  sub_1AE513508();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DB20()
{
  sub_1AE513094();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DB48()
{
  sub_1AE513094();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DB70()
{
  sub_1AE513274();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DB98()
{
  sub_1AE513274();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DBC0()
{
  sub_1AE51310C();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DBE8()
{
  sub_1AE51310C();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DC10()
{
  sub_1AE513544();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DC38()
{
  sub_1AE513544();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DC60()
{
  sub_1AE513418();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DC88()
{
  sub_1AE513418();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DCB0()
{
  sub_1AE5130D0();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DCD8()
{
  sub_1AE5130D0();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DD00()
{
  sub_1AE513364();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DD28()
{
  sub_1AE513364();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DD50()
{
  sub_1AE513184();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DD78()
{
  sub_1AE513184();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DDA0()
{
  sub_1AE513454();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DDC8()
{
  sub_1AE513454();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DDF0()
{
  sub_1AE5133DC();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DE18()
{
  sub_1AE5133DC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DE40()
{
  sub_1AE5132EC();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DE68()
{
  sub_1AE5132EC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DE90()
{
  sub_1AE5135BC();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DEB8()
{
  sub_1AE5135BC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DEE0()
{
  sub_1AE5133A0();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DF08()
{
  sub_1AE5133A0();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DF30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE50D8FC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1AE50DF58()
{
  return sub_1AE50D624();
}

uint64_t sub_1AE50DF70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1AE50DF98()
{
  sub_1AE513238();
  return sub_1AE926F94();
}

uint64_t sub_1AE50DFC0()
{
  sub_1AE513238();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50DFE8()
{
  sub_1AE513328();
  return sub_1AE926F94();
}

uint64_t sub_1AE50E010()
{
  sub_1AE513328();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50E038()
{
  sub_1AE5132B0();
  return sub_1AE926F94();
}

uint64_t sub_1AE50E060()
{
  sub_1AE5132B0();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50E088()
{
  sub_1AE5131C0();
  return sub_1AE926F94();
}

uint64_t sub_1AE50E0B0()
{
  sub_1AE5131C0();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50E0D8()
{
  sub_1AE5134CC();
  return sub_1AE926F94();
}

uint64_t sub_1AE50E100()
{
  sub_1AE5134CC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE50E128()
{
  sub_1AE513580();
  return sub_1AE926F94();
}

uint64_t sub_1AE50E150()
{
  sub_1AE513580();
  return sub_1AE926FA0();
}

void ActivityEventType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[8];
  uint64_t v90;
  _BYTE v91[8];
  uint64_t v92;
  _BYTE v93[8];
  _QWORD v94[5];
  _QWORD v95[5];
  _QWORD v96[6];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v3 = sub_1AE501548(&qword_1EED999C8);
  v96[3] = *(_QWORD *)(v3 - 8);
  v96[4] = v3;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE515438(v5, v82);
  v6 = sub_1AE501548(&qword_1EED999D0);
  v96[0] = *(_QWORD *)(v6 - 8);
  v96[1] = v6;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE505A30(v8, v82);
  v9 = sub_1AE501548(&qword_1EED999D8);
  v95[3] = *(_QWORD *)(v9 - 8);
  v95[4] = v9;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE515454(v11, v82);
  v12 = sub_1AE501548(&qword_1EED999E0);
  v95[0] = *(_QWORD *)(v12 - 8);
  v95[1] = v12;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE501950(v14, v82);
  v15 = sub_1AE501548(&qword_1EED999E8);
  v94[3] = *(_QWORD *)(v15 - 8);
  v94[4] = v15;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE515470(v17, v82);
  v18 = sub_1AE501548(&qword_1EED999F0);
  v94[0] = *(_QWORD *)(v18 - 8);
  v94[1] = v18;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE5085B4((uint64_t)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = sub_1AE501548(&qword_1EED999F8);
  sub_1AE4F9050(v21, (uint64_t)&v101);
  sub_1AE4F8160(v22);
  MEMORY[0x1E0C80A78](v23);
  sub_1AE5085B4((uint64_t)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = sub_1AE501548(&qword_1EED99A00);
  sub_1AE4F9050(v25, (uint64_t)&v100);
  sub_1AE4F8160(v26);
  MEMORY[0x1E0C80A78](v27);
  sub_1AE4F9024();
  sub_1AE5085B4(v28);
  v29 = sub_1AE501548(&qword_1EED99A08);
  sub_1AE4F9050(v29, (uint64_t)&v99);
  sub_1AE4F8160(v30);
  MEMORY[0x1E0C80A78](v31);
  sub_1AE4F9024();
  sub_1AE5085B4(v32);
  v92 = sub_1AE501548(&qword_1EED99A10);
  sub_1AE4F8160(*(_QWORD *)(v92 - 8));
  MEMORY[0x1E0C80A78](v33);
  sub_1AE4F9024();
  sub_1AE5085B4(v34);
  v35 = sub_1AE501548(&qword_1EED99A18);
  sub_1AE4F9050(v35, (uint64_t)&v97);
  sub_1AE4F8160(v36);
  MEMORY[0x1E0C80A78](v37);
  sub_1AE4F9024();
  sub_1AE5085B4(v38);
  v90 = sub_1AE501548(&qword_1EED99A20);
  sub_1AE4F8160(*(_QWORD *)(v90 - 8));
  MEMORY[0x1E0C80A78](v39);
  sub_1AE4F9024();
  sub_1AE5085B4(v40);
  v41 = sub_1AE501548(&qword_1EED99A28);
  sub_1AE4F9050(v41, (uint64_t)v96);
  sub_1AE4F8160(v42);
  MEMORY[0x1E0C80A78](v43);
  sub_1AE4F9024();
  sub_1AE5085B4(v44);
  v88 = sub_1AE501548(&qword_1EED99A30);
  sub_1AE4F8160(*(_QWORD *)(v88 - 8));
  MEMORY[0x1E0C80A78](v45);
  sub_1AE4F9024();
  sub_1AE5085B4(v46);
  v47 = sub_1AE501548(&qword_1EED99A38);
  sub_1AE4F9050(v47, (uint64_t)v95);
  sub_1AE4F8160(v48);
  MEMORY[0x1E0C80A78](v49);
  sub_1AE4F9024();
  sub_1AE5085B4(v50);
  v87 = sub_1AE501548(&qword_1EED99A40);
  sub_1AE4F8160(*(_QWORD *)(v87 - 8));
  MEMORY[0x1E0C80A78](v51);
  sub_1AE4F9024();
  sub_1AE5085B4(v52);
  v53 = sub_1AE501548(&qword_1EED99A48);
  sub_1AE4F9050(v53, (uint64_t)v94);
  sub_1AE4F8160(v54);
  MEMORY[0x1E0C80A78](v55);
  sub_1AE4F9024();
  sub_1AE5085B4(v56);
  v86 = sub_1AE501548(&qword_1EED99A50);
  sub_1AE4F8160(*(_QWORD *)(v86 - 8));
  MEMORY[0x1E0C80A78](v57);
  sub_1AE4F9024();
  sub_1AE5085B4(v58);
  v59 = sub_1AE501548(&qword_1EED99A58);
  sub_1AE4F9050(v59, (uint64_t)v93);
  sub_1AE4F8160(v60);
  MEMORY[0x1E0C80A78](v61);
  sub_1AE4F9024();
  sub_1AE5085B4(v62);
  v85 = sub_1AE501548(&qword_1EED99A60);
  sub_1AE4F8160(*(_QWORD *)(v85 - 8));
  MEMORY[0x1E0C80A78](v63);
  sub_1AE4F9024();
  sub_1AE5085B4(v64);
  v65 = sub_1AE501548(&qword_1EED99A68);
  sub_1AE4F9050(v65, (uint64_t)v91);
  sub_1AE4F8160(v66);
  MEMORY[0x1E0C80A78](v67);
  sub_1AE4F9024();
  sub_1AE5085B4(v68);
  v84 = sub_1AE501548(&qword_1EED99A70);
  sub_1AE4F8160(*(_QWORD *)(v84 - 8));
  MEMORY[0x1E0C80A78](v69);
  sub_1AE4F9024();
  sub_1AE5085B4(v70);
  v71 = sub_1AE501548(&qword_1EED99A78);
  sub_1AE4F9050(v71, (uint64_t)v89);
  sub_1AE4F8160(v72);
  MEMORY[0x1E0C80A78](v73);
  sub_1AE4F9024();
  sub_1AE5085B4(v74);
  v83 = sub_1AE501548(&qword_1EED99A80);
  sub_1AE4F8160(*(_QWORD *)(v83 - 8));
  MEMORY[0x1E0C80A78](v75);
  sub_1AE4F666C();
  v76 = sub_1AE501548(&qword_1EED99A88);
  MEMORY[0x1E0C80A78](v76);
  sub_1AE4F666C();
  v98 = sub_1AE501548(&qword_1EED99A90);
  v96[5] = *(_QWORD *)(v98 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v77);
  sub_1AE4F666C();
  v80 = v79 - v78;
  v81 = *v1;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE512FE0();
  v97 = v80;
  sub_1AE926F4C();
  __asm { BR              X9 }
}

void sub_1AE50E73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 65) = 0;
  sub_1AE5135BC();
  sub_1AE4FB6E0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 120) + 8))(v1, v0);
  sub_1AE4F667C();
}

void ActivityEventType.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE4F6694();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void ActivityEventType.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106[5];
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _BYTE v114[8];
  uint64_t v115;
  _BYTE v116[8];
  uint64_t v117;
  _BYTE v118[8];
  _BYTE v119[8];
  _BYTE v120[8];
  uint64_t v121;
  _QWORD v122[4];
  _QWORD v123[2];
  _QWORD v124[4];
  _QWORD v125[2];
  _QWORD v126[4];
  _QWORD v127[2];
  _QWORD *v128;
  uint64_t v129;
  _BYTE v130[7];
  uint64_t v131;

  v126[2] = a2;
  v3 = sub_1AE501548(&qword_1EED99B68);
  sub_1AE4F9050(v3, (uint64_t)&v131);
  sub_1AE4F8160(v4);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE515438(v6, v106[0]);
  v108 = sub_1AE501548(&qword_1EED99B70);
  sub_1AE4F8160(*(_QWORD *)(v108 - 8));
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  v126[0] = v8;
  v9 = sub_1AE501548(&qword_1EED99B78);
  sub_1AE4F9050(v9, (uint64_t)v130);
  sub_1AE4F8160(v10);
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F9024();
  v125[1] = v12;
  v117 = sub_1AE501548(&qword_1EED99B80);
  sub_1AE4F8160(*(_QWORD *)(v117 - 8));
  MEMORY[0x1E0C80A78](v13);
  sub_1AE505A30(v14, v106[0]);
  v15 = sub_1AE501548(&qword_1EED99B88);
  sub_1AE4F9050(v15, (uint64_t)&v128);
  sub_1AE4F8160(v16);
  MEMORY[0x1E0C80A78](v17);
  sub_1AE4F9024();
  v124[3] = v18;
  v19 = sub_1AE501548(&qword_1EED99B90);
  sub_1AE4F9050(v19, (uint64_t)v127);
  sub_1AE4F8160(v20);
  MEMORY[0x1E0C80A78](v21);
  sub_1AE4F9024();
  v124[2] = v22;
  v115 = sub_1AE501548(&qword_1EED99B98);
  sub_1AE4F8160(*(_QWORD *)(v115 - 8));
  MEMORY[0x1E0C80A78](v23);
  sub_1AE515454(v24, v106[0]);
  v25 = sub_1AE501548(&qword_1EED99BA0);
  sub_1AE4F9050(v25, (uint64_t)v126);
  sub_1AE4F8160(v26);
  MEMORY[0x1E0C80A78](v27);
  sub_1AE4F9024();
  v124[0] = v28;
  v29 = sub_1AE501548(&qword_1EED99BA8);
  sub_1AE4F9050(v29, (uint64_t)v125);
  sub_1AE4F8160(v30);
  MEMORY[0x1E0C80A78](v31);
  sub_1AE4F9024();
  v123[1] = v32;
  v113 = sub_1AE501548(&qword_1EED99BB0);
  sub_1AE4F8160(*(_QWORD *)(v113 - 8));
  MEMORY[0x1E0C80A78](v33);
  sub_1AE501950(v34, v106[0]);
  v35 = sub_1AE501548(&qword_1EED99BB8);
  sub_1AE4F9050(v35, (uint64_t)v124);
  sub_1AE4F8160(v36);
  MEMORY[0x1E0C80A78](v37);
  sub_1AE4F9024();
  v122[3] = v38;
  v39 = sub_1AE501548(&qword_1EED99BC0);
  sub_1AE4F9050(v39, (uint64_t)v123);
  sub_1AE4F8160(v40);
  MEMORY[0x1E0C80A78](v41);
  sub_1AE4F9024();
  v122[2] = v42;
  v112 = sub_1AE501548(&qword_1EED99BC8);
  sub_1AE4F8160(*(_QWORD *)(v112 - 8));
  MEMORY[0x1E0C80A78](v43);
  sub_1AE515470(v44, v106[0]);
  v45 = sub_1AE501548(&qword_1EED99BD0);
  sub_1AE4F9050(v45, (uint64_t)v122);
  sub_1AE4F8160(v46);
  MEMORY[0x1E0C80A78](v47);
  sub_1AE4F9024();
  v127[1] = v48;
  v111 = sub_1AE501548(&qword_1EED99BD8);
  sub_1AE4F8160(*(_QWORD *)(v111 - 8));
  MEMORY[0x1E0C80A78](v49);
  sub_1AE4F9024();
  v127[0] = v50;
  v51 = sub_1AE501548(&qword_1EED99BE0);
  sub_1AE4F9050(v51, (uint64_t)v120);
  sub_1AE4F8160(v52);
  MEMORY[0x1E0C80A78](v53);
  sub_1AE4F9024();
  v126[3] = v54;
  v55 = sub_1AE501548(&qword_1EED99BE8);
  sub_1AE4F9050(v55, (uint64_t)v119);
  sub_1AE4F8160(v56);
  MEMORY[0x1E0C80A78](v57);
  sub_1AE4F9024();
  v122[0] = v58;
  v59 = sub_1AE501548(&qword_1EED99BF0);
  sub_1AE4F9050(v59, (uint64_t)v118);
  sub_1AE4F8160(v60);
  MEMORY[0x1E0C80A78](v61);
  sub_1AE4F9024();
  v121 = v62;
  v110 = sub_1AE501548(&qword_1EED99BF8);
  sub_1AE4F8160(*(_QWORD *)(v110 - 8));
  MEMORY[0x1E0C80A78](v63);
  sub_1AE5085B4((uint64_t)v106 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65 = sub_1AE501548(&qword_1EED99C00);
  sub_1AE4F9050(v65, (uint64_t)&v117);
  sub_1AE4F8160(v66);
  MEMORY[0x1E0C80A78](v67);
  sub_1AE4F9024();
  sub_1AE5085B4(v68);
  v69 = sub_1AE501548(&qword_1EED99C08);
  sub_1AE4F9050(v69, (uint64_t)v116);
  sub_1AE4F8160(v70);
  MEMORY[0x1E0C80A78](v71);
  sub_1AE4F9024();
  sub_1AE5085B4(v72);
  v109 = sub_1AE501548(&qword_1EED99C10);
  sub_1AE4F8160(*(_QWORD *)(v109 - 8));
  MEMORY[0x1E0C80A78](v73);
  sub_1AE5085B4((uint64_t)v106 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75 = sub_1AE501548(&qword_1EED99C18);
  sub_1AE4F9050(v75, (uint64_t)&v115);
  sub_1AE4F8160(v76);
  MEMORY[0x1E0C80A78](v77);
  sub_1AE4F9024();
  sub_1AE5085B4(v78);
  v79 = sub_1AE501548(&qword_1EED99C20);
  sub_1AE4F9050(v79, (uint64_t)v114);
  sub_1AE4F8160(v80);
  MEMORY[0x1E0C80A78](v81);
  sub_1AE4F9024();
  sub_1AE5085B4(v82);
  v83 = sub_1AE501548(&qword_1EED99C28);
  v84 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  sub_1AE4F666C();
  v87 = v86 - v85;
  v88 = sub_1AE501548(&qword_1EED99C30);
  v89 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  sub_1AE4F666C();
  v92 = v91 - v90;
  v93 = a1[3];
  v128 = a1;
  sub_1AE4F9858(a1, v93);
  sub_1AE512FE0();
  v94 = v129;
  sub_1AE926F34();
  if (!v94)
  {
    v106[4] = v87;
    v106[2] = v84;
    v106[3] = v83;
    v129 = v89;
    v107 = v92;
    v95 = sub_1AE926C1C();
    v96 = *(_QWORD *)(v95 + 16);
    if (v96)
    {
      v106[1] = 0;
      v97 = *(unsigned __int8 *)(v95 + 32);
      sub_1AE4F505C(1, v96, v95, v95 + 32, 0, (2 * v96) | 1);
      v99 = v98;
      v101 = v100;
      swift_bridgeObjectRelease();
      if (v99 == v101 >> 1)
        __asm { BR              X9 }
    }
    v102 = sub_1AE926988();
    swift_allocError();
    v104 = v103;
    sub_1AE501548(&qword_1EED99C38);
    *v104 = &type metadata for ActivityEventType;
    v105 = v107;
    sub_1AE926B5C();
    sub_1AE92697C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v102 - 8) + 104))(v104, *MEMORY[0x1E0DEC450], v102);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v105, v88);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v128);
  sub_1AE4F667C();
}

void sub_1AE50F964()
{
  sub_1AE926EC8();
  sub_1AE4F6694();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE50F994(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ActivityEventType.init(from:)(a1, a2);
}

void sub_1AE50F9A8(_QWORD *a1)
{
  ActivityEventType.encode(to:)(a1);
}

void ActivityEventType.lifeEventAllowedGraphObjectType.getter()
{
  __asm { BR              X10 }
}

void sub_1AE50F9E4()
{
  type metadata accessor for CustomGraphTransportationActivityEvent(0);
  sub_1AE512FA0(&qword_1EED99D00, type metadata accessor for CustomGraphTransportationActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphTransportationActivityEvent);
  sub_1AE4F6664();
}

uint64_t sub_1AE50FDDC()
{
  char *v0;

  return qword_1AE933618[*v0];
}

uint64_t sub_1AE50FDF0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  else
    return sub_1AE4FB6F0();
}

void sub_1AE50FE18()
{
  unsigned __int8 v0;
  char v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_1AE51569C();
  v3 = v0;
  if (v0)
  {
    if (v0 == 1)
      v4 = 0x7461636964657270;
    else
      v4 = 0x7463656A626FLL;
    if (v3 == 1)
      v5 = 0xE900000000000065;
    else
      v5 = 0xE600000000000000;
  }
  else
  {
    v5 = 0xE700000000000000;
    v4 = sub_1AE515670();
  }
  if (v1)
  {
    if (v1 == 1)
      v2 = 0x7461636964657270;
    else
      v2 = 0x7463656A626FLL;
    if (v1 == 1)
      v6 = 0xE900000000000065;
    else
      v6 = 0xE600000000000000;
  }
  else
  {
    v6 = 0xE700000000000000;
  }
  if (v4 == v2 && v5 == v6)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE50FEEC(char a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v2 = 0x73736572646461;
  if (a1)
  {
    sub_1AE51526C();
    if (v4 == 1)
      v7 = v5;
    else
      v7 = 0xD000000000000013;
    if (v4 == 1)
      v8 = v6;
    else
      v8 = (v3 - 32) | 0x8000000000000000;
  }
  else
  {
    v8 = 0xE700000000000000;
    v7 = 0x73736572646461;
  }
  if (a2)
  {
    sub_1AE51526C();
    v13 = (v12 - 32) | 0x8000000000000000;
    if (v9 == 1)
      v2 = v10;
    else
      v2 = 0xD000000000000013;
    if (v9 == 1)
      v14 = v11;
    else
      v14 = v13;
  }
  else
  {
    v14 = 0xE700000000000000;
  }
  if (v7 == v2 && v8 == v14)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

uint64_t sub_1AE50FFB8(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  else
    return sub_1AE4FB6F0();
}

void sub_1AE50FFE0(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1AE510038()
{
  unint64_t v0;
  unsigned __int8 v1;

  v0 = sub_1AE515554();
  return ((uint64_t (*)(unint64_t))((char *)sub_1AE510124 + 4 * byte_1AE931718[v1]))(v0);
}

void sub_1AE510124()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (v0 - 32) | 0x8000000000000000;
  sub_1AE515518();
  if (v3 == v4 && v1 == v2)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE510224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE925E3C();
  sub_1AE515790();
  if (v1 == sub_1AE925E3C() && v0 == v2)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE510288(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE5102E8()
{
  unsigned __int8 v0;

  sub_1AE5154EC();
  return ((uint64_t (*)(void))((char *)sub_1AE510394 + 4 * byte_1AE931729[v0]))();
}

void sub_1AE510394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE5154E0();
  if (v2 == v3 && v0 == v1)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

BOOL sub_1AE510454(int a1, int a2)
{
  return a1 == a2;
}

void sub_1AE510460(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6472617774756FLL;
  else
    v3 = 0x647261776E69;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6472617774756FLL;
  else
    v5 = 0x647261776E69;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE5104E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  Features.FeatureFlag.feature.getter();
  sub_1AE926940();
  sub_1AE515790();
  Features.FeatureFlag.feature.getter();
  if (v1 == sub_1AE926940() && v0 == v2)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4FE870();
}

void sub_1AE51055C(uint64_t a1, uint64_t a2)
{
  sub_1AE511A6C(a1, a2, (void (*)(void))KGQ.Keyword.rawValue.getter);
}

void sub_1AE510568(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1954047348;
  else
    v3 = 0x65676E6172;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1954047348;
  else
    v5 = 0x65676E6172;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE5105E0(uint64_t a1, uint64_t a2)
{
  sub_1AE511A6C(a1, a2, (void (*)(void))PersonalKnowledgeToolResultAttributeSemanticType.rawValue.getter);
}

void sub_1AE5105EC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE510634(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE510694 + 4 * byte_1AE931736[a2]))(0x72656765746E69);
}

void sub_1AE510694(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x72656765746E69 && v1 == 0xE700000000000000)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE510708(uint64_t a1, uint64_t a2)
{
  sub_1AE512610(a1, a2, (void (*)(void))sub_1AE7911F0);
}

void sub_1AE510714(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE51075C()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = sub_1AE5154A8();
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE5107E0 + 4 * byte_1AE931741[v1]))(v0);
}

void sub_1AE5107E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE51548C();
  v2 = v1 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
  if (v3 == v4 && v0 == v2)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE510878(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;

  v1 = sub_1AE5155D8(a1, 0xD000000000000014);
  v6 = v5 | 0x8000000000000000;
  v8 = v7 | 0x8000000000000000;
  if (v12)
    v9 = v8;
  else
    v9 = v6;
  if ((v2 & 1) != 0)
    v10 = v4;
  else
    v10 = v3;
  if ((v2 & 1) != 0)
    v11 = v6;
  else
    v11 = v8;
  v12 = v1 == v10 && v9 == v11;
  if (v12)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE5108F4(uint64_t a1, uint64_t a2)
{
  sub_1AE512610(a1, a2, (void (*)(void))sub_1AE7C2EC8);
}

void sub_1AE510900()
{
  sub_1AE515334();
  sub_1AE515400();
  __asm { BR              X10 }
}

uint64_t sub_1AE510930()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = sub_1AE5155A8();
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE510968 + 4 * byte_1AE93174B[v1]))(v0);
}

void sub_1AE510968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE5155C0();
  if (v2 == v3 && v1 == v0)
    sub_1AE506F6C();
  else
    sub_1AE4FB6F0();
  sub_1AE4F9038();
  sub_1AE4F6648();
  sub_1AE4F6624();
}

void sub_1AE5109BC(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0x656E69736F63;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x616564696C637565;
    else
      v4 = 7630692;
    if (v3 == 1)
      v5 = 0xE90000000000006ELL;
    else
      v5 = 0xE300000000000000;
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x656E69736F63;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 0x616564696C637565;
    else
      v2 = 7630692;
    if (a2 == 1)
      v6 = 0xE90000000000006ELL;
    else
      v6 = 0xE300000000000000;
  }
  else
  {
    v6 = 0xE600000000000000;
  }
  if (v4 == v2 && v5 == v6)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE510A98()
{
  sub_1AE5153E4();
  sub_1AE505A4C();
  __asm { BR              X10 }
}

uint64_t sub_1AE510AC8()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = sub_1AE515534();
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE510B18 + 4 * byte_1AE931755[v1]))(v0);
}

void sub_1AE510B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE515508();
  if (v1 == v2 && v0 == 0xE600000000000000)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE510B7C(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0x80000001AE97BE00;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0xD000000000000010;
    else
      v4 = 0x6C65646F6DLL;
    if (v3 == 1)
      v5 = 0x80000001AE97BE20;
    else
      v5 = 0xE500000000000000;
  }
  else
  {
    v4 = 0xD000000000000012;
    v5 = 0x80000001AE97BE00;
  }
  if (a2)
  {
    if (a2 == 1)
      v6 = 0xD000000000000010;
    else
      v6 = 0x6C65646F6DLL;
    if (a2 == 1)
      v2 = 0x80000001AE97BE20;
    else
      v2 = 0xE500000000000000;
  }
  else
  {
    v6 = 0xD000000000000012;
  }
  if (v4 == v6 && v5 == v2)
    sub_1AE506F6C();
  else
    sub_1AE4FB6F0();
  sub_1AE4F9038();
  sub_1AE4F6648();
  sub_1AE4F6624();
}

BOOL sub_1AE510C50(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_1AE510C5C(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;

  v1 = sub_1AE5155D8(a1, 0xD000000000000017);
  v6 = v5 | 0x8000000000000000;
  v8 = v7 | 0x8000000000000000;
  if (v12)
    v9 = v8;
  else
    v9 = v6;
  if ((v2 & 1) != 0)
    v10 = v4;
  else
    v10 = v3;
  if ((v2 & 1) != 0)
    v11 = v6;
  else
    v11 = v8;
  v12 = v1 == v10 && v9 == v11;
  if (v12)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

uint64_t sub_1AE510CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  else
    return sub_1AE4FB6F0();
}

void sub_1AE510CF0()
{
  sub_1AE515334();
  sub_1AE515400();
  __asm { BR              X10 }
}

uint64_t sub_1AE510D30()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = sub_1AE5155A8();
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE510D94 + 4 * byte_1AE931762[v1]))(v0);
}

void sub_1AE510D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE5155C0();
  if (v2 == v3 && v1 == v0)
    sub_1AE506F6C();
  else
    sub_1AE4FB6F0();
  sub_1AE4F9038();
  sub_1AE4F6648();
  sub_1AE4F6624();
}

void sub_1AE510E14()
{
  sub_1AE515784();
  __asm { BR              X10 }
}

uint64_t sub_1AE510E68()
{
  unsigned __int8 v0;

  sub_1AE5154EC();
  return ((uint64_t (*)(void))((char *)sub_1AE510F04 + 4 * byte_1AE93176F[v0]))();
}

void sub_1AE510F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE5154E0();
  if (v2 == v3 && v0 == v1)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE510FB4(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 1953718636;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 1954047342;
    else
      v4 = 0x7473726966;
    if (v3 == 1)
      v5 = 0xE400000000000000;
    else
      v5 = 0xE500000000000000;
  }
  else
  {
    v5 = 0xE400000000000000;
    v4 = 1953718636;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 1954047342;
    else
      v2 = 0x7473726966;
    if (a2 == 1)
      v6 = 0xE400000000000000;
    else
      v6 = 0xE500000000000000;
  }
  else
  {
    v6 = 0xE400000000000000;
  }
  if (v4 == v2 && v5 == v6)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE511078()
{
  sub_1AE5156BC();
  sub_1AE515570();
  __asm { BR              X10 }
}

uint64_t sub_1AE5110C0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE511170 + 4 * byte_1AE931781[a2]))(0x696669746E656469);
}

void sub_1AE511170(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x696669746E656469 && v1 == 0xEA00000000007265)
    sub_1AE506F6C();
  else
    sub_1AE4FB6F0();
  sub_1AE4F9038();
  sub_1AE4F6648();
  sub_1AE4F6624();
}

void sub_1AE51123C()
{
  sub_1AE515784();
  __asm { BR              X10 }
}

uint64_t sub_1AE511280(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE5112E8 + 4 * byte_1AE931791[a2]))(0x6C61697274);
}

void sub_1AE5112E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0x6C61697274 && v1 == v2)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE511364(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;

  if ((a1 & 1) != 0)
    v2 = 0x80000001AE974EE0;
  else
    v2 = 0x80000001AE974EC0;
  if ((a2 & 1) != 0)
    v3 = 0x80000001AE974EE0;
  else
    v3 = 0x80000001AE974EC0;
  if (v2 == v3)
  {
    sub_1AE51523C();
  }
  else
  {
    sub_1AE515554();
    sub_1AE515518();
    sub_1AE4F9018();
  }
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE5113E0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7241746E65746E69;
  else
    v3 = 0x79676F6C6F746E6FLL;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE900000000000067;
  if ((a2 & 1) != 0)
    v5 = 0x7241746E65746E69;
  else
    v5 = 0x79676F6C6F746E6FLL;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000067;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE511468(uint64_t a1, uint64_t a2)
{
  sub_1AE511A6C(a1, a2, (void (*)(void))PersonEntityTagType.rawValue.getter);
}

void sub_1AE511474(unsigned __int8 a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0xE900000000000077;
  v3 = 0x6B5A7374726F7073;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000013;
    else
      v5 = 0x6C6F6F747069;
    if (v4 == 1)
      v6 = 0x80000001AE97BDE0;
    else
      v6 = 0xE600000000000000;
  }
  else
  {
    v5 = 0x6B5A7374726F7073;
    v6 = 0xE900000000000077;
  }
  if (a2)
  {
    if (a2 == 1)
      v3 = 0xD000000000000013;
    else
      v3 = 0x6C6F6F747069;
    if (a2 == 1)
      v2 = 0x80000001AE97BDE0;
    else
      v2 = 0xE600000000000000;
  }
  if (v5 == v3 && v6 == v2)
    sub_1AE506F6C();
  else
    sub_1AE4FB6F0();
  sub_1AE4F9038();
  sub_1AE4F6648();
  sub_1AE4F6624();
}

void sub_1AE511560()
{
  sub_1AE515784();
  __asm { BR              X10 }
}

uint64_t sub_1AE5115A4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE511624 + 4 * byte_1AE93179A[a2]))(0x61746164696B6957);
}

void sub_1AE511624(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x61746164696B6957 && v1 == 0xEB0000000044495FLL)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE5116B8(uint64_t a1, uint64_t a2)
{
  sub_1AE512610(a1, a2, (void (*)(void))sub_1AE618890);
}

void sub_1AE5116C4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE511740()
{
  unsigned __int8 v0;

  sub_1AE5154E0();
  return ((uint64_t (*)(void))((char *)sub_1AE511800 + 4 * byte_1AE9317A7[v0]))();
}

void sub_1AE511800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE5154EC();
  if (v2 == v3 && v1 == v0)
    sub_1AE506F6C();
  else
    sub_1AE4FB6F0();
  sub_1AE4F9038();
  sub_1AE4F6648();
  sub_1AE4F6624();
}

void sub_1AE5118DC(char a1)
{
  __asm { BR              X17 }
}

uint64_t sub_1AE511964(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t))((char *)sub_1AE5119DC + 4 * byte_1AE9317B7[a2]))(0xD000000000000013);
}

void sub_1AE5119DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0xD000000000000013 && v2 == ((v1 - 32) | 0x8000000000000000))
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE511A60(uint64_t a1, uint64_t a2)
{
  sub_1AE511A6C(a1, a2, (void (*)(void))UserInterestsType.rawValue.getter);
}

void sub_1AE511A6C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  a3();
  sub_1AE515790();
  if (v4 == ((uint64_t (*)(void))a3)() && v3 == v6)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4FE870();
}

void sub_1AE511AE0(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6974657263736964;
  else
    v3 = 0xD000000000000010;
  if (v2)
    v4 = 0x80000001AE97BEE0;
  else
    v4 = 0xED00007972616E6FLL;
  if ((a2 & 1) != 0)
    v5 = 0x6974657263736964;
  else
    v5 = 0xD000000000000010;
  if ((a2 & 1) != 0)
    v6 = 0xED00007972616E6FLL;
  else
    v6 = 0x80000001AE97BEE0;
  if (v3 == v5 && v4 == v6)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE511B74(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x726F746365726964;
  else
    v3 = 1701603686;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE900000000000079;
  if ((a2 & 1) != 0)
    v5 = 0x726F746365726964;
  else
    v5 = 1701603686;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000079;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE511BF4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE511C58(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE511CAC + 4 * byte_1AE9317C3[a2]))(0x745F797469746E65);
}

void sub_1AE511CAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0x745F797469746E65 && v2 == v1)
    sub_1AE506F6C();
  else
    sub_1AE4FB6F0();
  sub_1AE4F9038();
  sub_1AE4F6648();
  sub_1AE4F6624();
}

void sub_1AE511D1C()
{
  sub_1AE515784();
  __asm { BR              X10 }
}

uint64_t sub_1AE511D60()
{
  unsigned __int8 v0;

  sub_1AE51537C();
  sub_1AE5154EC();
  return ((uint64_t (*)(void))((char *)sub_1AE511E0C + 4 * byte_1AE9317D2[v0]))();
}

void sub_1AE511E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE515390();
  sub_1AE5154E0();
  if (v2 == v3 && v0 == v1)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE511ECC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE511F14()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = sub_1AE4FB6F8();
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE511F74 + 4 * byte_1AE9317E1[v1]))(v0);
}

void sub_1AE511F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE5157E4();
  if (v1 == v2 && v0 == 0xE900000000000073)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

uint64_t sub_1AE511FE8(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x7361696C61;
  else
    v2 = 0x44495F444DLL;
  if ((a2 & 1) != 0)
    v3 = 0x7361696C61;
  else
    v3 = 0x44495F444DLL;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1AE4FB6F0();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

void sub_1AE512058(char a1)
{
  __asm { BR              X17 }
}

uint64_t sub_1AE5120DC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t))((char *)sub_1AE512178 + 4 * byte_1AE9317EE[a2]))(0xD00000000000001FLL);
}

void sub_1AE512178(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0xD00000000000001FLL && v2 == ((v1 - 32) | 0x8000000000000000))
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE512224()
{
  sub_1AE51569C();
  sub_1AE515670();
  __asm { BR              X10 }
}

uint64_t sub_1AE512264()
{
  unsigned __int8 v0;

  sub_1AE5154EC();
  return ((uint64_t (*)(void))((char *)sub_1AE5122D0 + 4 * byte_1AE9317FC[v0]))();
}

void sub_1AE5122D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE5154E0();
  if (v2 == v3 && v0 == v1)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

uint64_t sub_1AE512350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 == a5 && a2 == a6)
    return _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  else
    return sub_1AE4FB6F0();
}

void sub_1AE51236C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE5123C8()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = sub_1AE51537C();
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE512464 + 4 * byte_1AE93180C[v1]))(v0);
}

void sub_1AE512464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE515390();
  v2 = v0 + 1;
  if (v3 == v4 && v1 == v2)
    sub_1AE506F6C();
  else
    sub_1AE4FB6F0();
  sub_1AE4F9038();
  sub_1AE4F6648();
  sub_1AE4F6624();
}

void sub_1AE51251C(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0x796C6B656577;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x796C68746E6F6DLL;
    else
      v4 = 0x6C61756E6E61;
    if (v3 == 1)
      v5 = 0xE700000000000000;
    else
      v5 = 0xE600000000000000;
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x796C6B656577;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 0x796C68746E6F6DLL;
    else
      v2 = 0x6C61756E6E61;
    if (a2 == 1)
      v6 = 0xE700000000000000;
    else
      v6 = 0xE600000000000000;
  }
  else
  {
    v6 = 0xE600000000000000;
  }
  if (v4 == v2 && v5 == v6)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE5125F8(uint64_t a1, uint64_t a2)
{
  sub_1AE512610(a1, a2, (void (*)(void))sub_1AE5E2020);
}

void sub_1AE512604(uint64_t a1, uint64_t a2)
{
  sub_1AE512610(a1, a2, (void (*)(void))sub_1AE5E1F5C);
}

void sub_1AE512610(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  a3();
  sub_1AE515790();
  if (v4 == ((uint64_t (*)(uint64_t))a3)(a2) && v3 == v7)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE512678(char a1, char a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v2 = 0xD000000000000014;
  v3 = 0x80000001AE97BD10;
  if (a1)
  {
    sub_1AE506B0C();
    if (v6 == 1)
      v9 = v7;
    else
      v9 = v4;
    if (v6 == 1)
      v10 = v8;
    else
      v10 = (v5 - 32) | 0x8000000000000000;
  }
  else
  {
    v9 = 0xD000000000000014;
    v10 = 0x80000001AE97BD10;
  }
  if (a2)
  {
    sub_1AE506B0C();
    v16 = (v15 - 32) | 0x8000000000000000;
    if (v12 == 1)
      v2 = v13;
    else
      v2 = v11;
    if (v12 == 1)
      v3 = v14;
    else
      v3 = v16;
  }
  if (v9 == v2 && v10 == v3)
    sub_1AE506F6C();
  else
    sub_1AE4FB6F0();
  sub_1AE4F9038();
  sub_1AE4F6648();
  sub_1AE4F6624();
}

void sub_1AE512730()
{
  sub_1AE5153E4();
  sub_1AE505A4C();
  __asm { BR              X10 }
}

uint64_t sub_1AE512760()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = sub_1AE5157D0();
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE5127C4 + 4 * byte_1AE93181D[v1]))(v0);
}

void sub_1AE5127C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE51579C();
  if (v1 == v2 && v0 == 0xE900000000000073)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

void sub_1AE51283C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE51288C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE5128EC + 4 * byte_1AE931827[a2]))(0x746C757365526F6ELL);
}

void sub_1AE5128EC(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x746C757365526F6ELL && v1 == 0xE800000000000000)
    sub_1AE51523C();
  else
    sub_1AE4F9018();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F6624();
}

BOOL sub_1AE512960(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_1AE512970()
{
  sub_1AE5156BC();
  sub_1AE515570();
  __asm { BR              X12 }
}

uint64_t sub_1AE5129E0()
{
  unint64_t v0;
  unsigned __int8 v1;

  v0 = sub_1AE515554();
  return ((uint64_t (*)(unint64_t))((char *)sub_1AE512A20 + 4 * byte_1AE93182F[v1]))(v0);
}

void sub_1AE512A20()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (v0 - 32) | 0x8000000000000000;
  sub_1AE515518();
  if (v3 == v4 && v1 == v2)
    sub_1AE506F6C();
  else
    sub_1AE4FB6F0();
  sub_1AE4F9038();
  sub_1AE4F6648();
  sub_1AE4F6624();
}

void sub_1AE512A7C(unsigned __int8 a1)
{
  sub_1AE512F04(a1, (void (*)(_QWORD))MEMORY[0x1E0DEDF30]);
}

void sub_1AE512A88()
{
  sub_1AE54F5D4();
}

void sub_1AE512A94()
{
  sub_1AE54F7C4();
}

void sub_1AE512AA0()
{
  sub_1AE54FB0C();
}

void sub_1AE512AAC(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E8934);
}

void sub_1AE512AB8(unsigned __int8 a1)
{
  sub_1AE512F04(a1, (void (*)(_QWORD))MEMORY[0x1E0DEDF10]);
}

void sub_1AE512AC8()
{
  sub_1AE4F76E0();
  swift_bridgeObjectRetain();
  sub_1AE515588();
  sub_1AE4F9038();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE512AFC(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E9698);
}

void sub_1AE512B0C(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E95C8);
}

void sub_1AE512B18(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E954C);
}

void sub_1AE512B24(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E9488);
}

void sub_1AE512B30()
{
  sub_1AE55003C();
}

void sub_1AE512B3C(uint64_t a1)
{
  sub_1AE512E24(a1, (void (*)(uint64_t))sub_1AE575500);
}

void sub_1AE512B48(uint64_t a1)
{
  sub_1AE512E24(a1, (void (*)(uint64_t))sub_1AE5E1F5C);
}

void sub_1AE512B54(uint64_t a1)
{
  sub_1AE512E24(a1, (void (*)(uint64_t))sub_1AE5E2020);
}

void sub_1AE512B60()
{
  sub_1AE54FF58();
}

void sub_1AE512B6C(uint64_t a1)
{
  sub_1AE512E24(a1, (void (*)(uint64_t))sub_1AE7FF408);
}

void sub_1AE512B78()
{
  sub_1AE54FECC();
}

void sub_1AE512B88(uint64_t a1)
{
  sub_1AE512E24(a1, (void (*)(uint64_t))sub_1AE83D6B0);
}

void sub_1AE512B94(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E90B4);
}

void sub_1AE512BA0()
{
  sub_1AE4F76E0();
  swift_bridgeObjectRetain();
  sub_1AE515588();
  sub_1AE4F9038();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE512BD4()
{
  sub_1AE54FE5C();
}

void sub_1AE512BE0(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E80C4);
}

void sub_1AE512BEC(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E8FE4);
}

void sub_1AE512BF8(uint64_t a1)
{
  sub_1AE512E24(a1, (void (*)(uint64_t))sub_1AE7FEA68);
}

void sub_1AE512C04()
{
  sub_1AE4F76E0();
  swift_bridgeObjectRetain();
  sub_1AE515598();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE512C3C(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E8E98);
}

void sub_1AE512C48(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E8D9C);
}

void sub_1AE512C54()
{
  sub_1AE54FDCC();
}

void sub_1AE512C60(uint64_t a1)
{
  sub_1AE512E24(a1, (void (*)(uint64_t))sub_1AE5D1C78);
}

void sub_1AE512C6C()
{
  sub_1AE54FD64();
}

void sub_1AE512C78()
{
  sub_1AE54FCF4();
}

void sub_1AE512C84(uint64_t a1)
{
  sub_1AE54FC9C(0, a1);
}

void sub_1AE512C90(uint64_t a1)
{
  sub_1AE512E24(a1, (void (*)(uint64_t))sub_1AE618890);
}

void sub_1AE512C9C(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E8240);
}

void sub_1AE512CA8()
{
  sub_1AE54FC00();
}

void sub_1AE512CB4(uint64_t a1)
{
  sub_1AE54FBF4(0, a1);
}

void sub_1AE512CC0()
{
  sub_1AE54FB90();
}

void sub_1AE512CCC(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E8A30);
}

void sub_1AE512CD8(uint64_t a1)
{
  sub_1AE512E24(a1, (void (*)(uint64_t))sub_1AE66803C);
}

void sub_1AE512CE4(uint64_t a1)
{
  sub_1AE512E24(a1, (void (*)(uint64_t))sub_1AE800E1C);
}

void sub_1AE512CF0()
{
  sub_1AE54FA88();
}

void sub_1AE512CFC()
{
  sub_1AE4F76E0();
  sub_1AE925F14();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE512D30()
{
  sub_1AE54F9B4();
}

void sub_1AE512D3C()
{
  sub_1AE926EC8();
  sub_1AE514FC0();
  sub_1AE925D34();
  sub_1AE926F10();
  sub_1AE4F6650();
}

void sub_1AE512D88()
{
  sub_1AE54F8EC();
}

void sub_1AE512D94()
{
  sub_1AE4F76E0();
  sub_1AE926ED4();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE512DC4()
{
  sub_1AE54F844();
}

void sub_1AE512DD0()
{
  sub_1AE4F76E0();
  sub_1AE926ED4();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE512E00(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E8624);
}

void sub_1AE512E0C(uint64_t a1)
{
  sub_1AE512E24(a1, (void (*)(uint64_t))sub_1AE7C2EC8);
}

void sub_1AE512E18(uint64_t a1)
{
  sub_1AE512E24(a1, (void (*)(uint64_t))sub_1AE7911F0);
}

void sub_1AE512E24(uint64_t a1, void (*a2)(uint64_t))
{
  sub_1AE4F76E0();
  a2(a1);
  sub_1AE5153CC();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE512E5C(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E84F4);
}

void sub_1AE512E68(uint64_t a1)
{
  sub_1AE54F7A0(0, a1);
}

void sub_1AE512E74(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E8460);
}

void sub_1AE512E80(uint64_t a1)
{
  sub_1AE54F788(0, a1);
}

void sub_1AE512E8C()
{
  sub_1AE54F734();
}

void sub_1AE512E98()
{
  sub_1AE4F76E0();
  Features.FeatureFlag.feature.getter();
  sub_1AE926940();
  sub_1AE5153CC();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE512ED4()
{
  sub_1AE4F76E0();
  sub_1AE926EEC();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE512F04(unsigned __int8 a1, void (*a2)(_QWORD))
{
  sub_1AE4F76E0();
  a2(a1);
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE512F38(uint64_t a1)
{
  sub_1AE512F44(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E8300);
}

void sub_1AE512F44(uint64_t a1, void (*a2)(_BYTE *, uint64_t))
{
  _BYTE v4[72];

  sub_1AE4F76E0();
  a2(v4, a1);
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE512F78()
{
  sub_1AE4F76E0();
  sub_1AE4F6694();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

uint64_t sub_1AE512FA0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1AF454B70](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AE512FE0()
{
  unint64_t result;

  result = qword_1EED99A98;
  if (!qword_1EED99A98)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9332B0, &type metadata for ActivityEventType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99A98);
  }
  return result;
}

unint64_t sub_1AE51301C()
{
  unint64_t result;

  result = qword_1EED99AA0;
  if (!qword_1EED99AA0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE933260, &type metadata for ActivityEventType.BehaviorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99AA0);
  }
  return result;
}

unint64_t sub_1AE513058()
{
  unint64_t result;

  result = qword_1EED99AA8;
  if (!qword_1EED99AA8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE933210, &type metadata for ActivityEventType.DrivingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99AA8);
  }
  return result;
}

unint64_t sub_1AE513094()
{
  unint64_t result;

  result = qword_1EED99AB0;
  if (!qword_1EED99AB0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9331C0, &type metadata for ActivityEventType.FacetimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99AB0);
  }
  return result;
}

unint64_t sub_1AE5130D0()
{
  unint64_t result;

  result = qword_1EED99AB8;
  if (!qword_1EED99AB8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE933170, &type metadata for ActivityEventType.PhoneCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99AB8);
  }
  return result;
}

unint64_t sub_1AE51310C()
{
  unint64_t result;

  result = qword_1EED99AC0;
  if (!qword_1EED99AC0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE933120, &type metadata for ActivityEventType.HikingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99AC0);
  }
  return result;
}

unint64_t sub_1AE513148()
{
  unint64_t result;

  result = qword_1EED99AC8;
  if (!qword_1EED99AC8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9330D0, &type metadata for ActivityEventType.BikingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99AC8);
  }
  return result;
}

unint64_t sub_1AE513184()
{
  unint64_t result;

  result = qword_1EED99AD0;
  if (!qword_1EED99AD0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE933080, &type metadata for ActivityEventType.RunningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99AD0);
  }
  return result;
}

unint64_t sub_1AE5131C0()
{
  unint64_t result;

  result = qword_1EED99AD8;
  if (!qword_1EED99AD8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE933030, &type metadata for ActivityEventType.WalkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99AD8);
  }
  return result;
}

unint64_t sub_1AE5131FC()
{
  unint64_t result;

  result = qword_1EED99AE0;
  if (!qword_1EED99AE0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932FE0, &type metadata for ActivityEventType.CommuteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99AE0);
  }
  return result;
}

unint64_t sub_1AE513238()
{
  unint64_t result;

  result = qword_1EED99AE8;
  if (!qword_1EED99AE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932F90, &type metadata for ActivityEventType.TypeOfPhysicalExerciseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99AE8);
  }
  return result;
}

unint64_t sub_1AE513274()
{
  unint64_t result;

  result = qword_1EED99AF0;
  if (!qword_1EED99AF0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932F40, &type metadata for ActivityEventType.GoingToBedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99AF0);
  }
  return result;
}

unint64_t sub_1AE5132B0()
{
  unint64_t result;

  result = qword_1EED99AF8;
  if (!qword_1EED99AF8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932EF0, &type metadata for ActivityEventType.WakingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99AF8);
  }
  return result;
}

unint64_t sub_1AE5132EC()
{
  unint64_t result;

  result = qword_1EED99B00;
  if (!qword_1EED99B00)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932EA0, &type metadata for ActivityEventType.SocialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99B00);
  }
  return result;
}

unint64_t sub_1AE513328()
{
  unint64_t result;

  result = qword_1EED99B08;
  if (!qword_1EED99B08)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932E50, &type metadata for ActivityEventType.VacationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99B08);
  }
  return result;
}

unint64_t sub_1AE513364()
{
  unint64_t result;

  result = qword_1EED99B10;
  if (!qword_1EED99B10)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932E00, &type metadata for ActivityEventType.ReadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99B10);
  }
  return result;
}

unint64_t sub_1AE5133A0()
{
  unint64_t result;

  result = qword_1EED99B18;
  if (!qword_1EED99B18)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932DB0, &type metadata for ActivityEventType.TravelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99B18);
  }
  return result;
}

unint64_t sub_1AE5133DC()
{
  unint64_t result;

  result = qword_1EED99B20;
  if (!qword_1EED99B20)
  {
    atomic_store(result, (unint64_t *)&qword_1EED99B20);
  }
  return result;
}

unint64_t sub_1AE513418()
{
  unint64_t result;

  result = qword_1EED99B28;
  if (!qword_1EED99B28)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932D10, &type metadata for ActivityEventType.MindfulCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99B28);
  }
  return result;
}

unint64_t sub_1AE513454()
{
  unint64_t result;

  result = qword_1EED99B30;
  if (!qword_1EED99B30)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932CC0, &type metadata for ActivityEventType.ShoppingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99B30);
  }
  return result;
}

unint64_t sub_1AE513490()
{
  unint64_t result;

  result = qword_1EED99B38;
  if (!qword_1EED99B38)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932C70, &type metadata for ActivityEventType.CommunicatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99B38);
  }
  return result;
}

unint64_t sub_1AE5134CC()
{
  unint64_t result;

  result = qword_1EED99B40;
  if (!qword_1EED99B40)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932C20, &type metadata for ActivityEventType.WatchingMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99B40);
  }
  return result;
}

unint64_t sub_1AE513508()
{
  unint64_t result;

  result = qword_1EED99B48;
  if (!qword_1EED99B48)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932BD0, &type metadata for ActivityEventType.EatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99B48);
  }
  return result;
}

unint64_t sub_1AE513544()
{
  unint64_t result;

  result = qword_1EED99B50;
  if (!qword_1EED99B50)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932B80, &type metadata for ActivityEventType.MeetingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99B50);
  }
  return result;
}

unint64_t sub_1AE513580()
{
  unint64_t result;

  result = qword_1EED99B58;
  if (!qword_1EED99B58)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932B30, &type metadata for ActivityEventType.WorkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99B58);
  }
  return result;
}

unint64_t sub_1AE5135BC()
{
  unint64_t result;

  result = qword_1EED99B60;
  if (!qword_1EED99B60)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932AE0, &type metadata for ActivityEventType.TransportationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED99B60);
  }
  return result;
}

uint64_t sub_1AE5135F8()
{
  _QWORD *v0;

  return sub_1AE513600(*v0);
}

uint64_t sub_1AE513608(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1AE925E24();
  *a2 = 0;
  return result;
}

uint64_t sub_1AE51367C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x1AF453658](a1, &v6);
  v4 = v6;
  v5 = v7;
  if (v7)
    v4 = 0;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1AE5136D0(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = sub_1AE926448();
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_1AE513724(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1AE925E30();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1AE5137A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE5137F8();
  *a1 = result;
  return result;
}

uint64_t sub_1AE5137C4()
{
  uint64_t v0;

  sub_1AE925E3C();
  v0 = sub_1AE925E18();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AE5137FC()
{
  uint64_t *v0;

  return sub_1AE513820(*v0, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1AE513820(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1AE925E3C();
  v4 = a2(v3);
  sub_1AE4F9038();
  return v4;
}

uint64_t sub_1AE513854()
{
  return sub_1AE513880();
}

uint64_t sub_1AE51385C()
{
  return sub_1AE926ED4();
}

uint64_t sub_1AE513880()
{
  sub_1AE925E3C();
  sub_1AE925F14();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5138C0()
{
  return sub_1AE536CFC();
}

uint64_t sub_1AE5138C8()
{
  uint64_t *v0;

  return sub_1AE513820(*v0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1AE5138F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE5137C4();
  *a1 = result;
  return result;
}

void sub_1AE513914()
{
  sub_1AE512F78();
}

void sub_1AE51392C()
{
  sub_1AE5E82E8();
}

uint64_t sub_1AE513934(uint64_t a1)
{
  _QWORD *v1;

  return sub_1AE54F6A4(a1, *v1);
}

void sub_1AE51393C(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_1AE51396C();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_1AE513974()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_1AE5157B0();
  *v0 = nullsub_1(v1);
  sub_1AE4F6664();
}

BOOL sub_1AE513994(int *a1, int *a2)
{
  return sub_1AE510454(*a1, *a2);
}

void sub_1AE5139A0(_DWORD *a1@<X8>)
{
  unsigned int *v1;

  *a1 = nullsub_1(*v1);
  sub_1AE4F6664();
}

uint64_t sub_1AE5139C4@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = sub_1AE5139F4(*a1);
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_1AE5139F4(uint64_t result)
{
  return result;
}

uint64_t sub_1AE513A10@<X0>(_DWORD *a1@<X8>)
{
  unsigned int *v1;
  uint64_t result;

  result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

void sub_1AE513A3C()
{
  sub_1AE510224();
}

BOOL sub_1AE513A48(uint64_t *a1, uint64_t *a2)
{
  return sub_1AE510C50(*a1, *a2);
}

_QWORD *sub_1AE513A54@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1AE513A64()
{
  sub_1AE512FA0(&qword_1EED9A230, (uint64_t (*)(uint64_t))type metadata accessor for BPSDemand, (uint64_t)&unk_1AE9329A4);
  sub_1AE512FA0(&qword_1EED9A238, (uint64_t (*)(uint64_t))type metadata accessor for BPSDemand, (uint64_t)&unk_1AE932944);
  return sub_1AE926B38();
}

uint64_t sub_1AE513AF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1AE925E18();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_1AE513B3C()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1AE5157B0();
  *v0 = sub_1AE536D64();
  v0[1] = v1;
  sub_1AE4F6664();
}

uint64_t sub_1AE513B5C()
{
  sub_1AE512FA0((unint64_t *)&qword_1ED3188B8, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_1AE9335D0);
  sub_1AE512FA0((unint64_t *)&unk_1EED9A2C0, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_1AE933478);
  return sub_1AE926B38();
}

void _s20IntelligencePlatform20AppleMusicEventEntryV2idAA21TypedEntityIdentifierVyxGvg_0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1AE513BEC()
{
  _QWORD *v0;

  return sub_1AE51381C(*v0);
}

uint64_t sub_1AE513BF4()
{
  return sub_1AE51385C();
}

uint64_t sub_1AE513BFC(uint64_t a1)
{
  _QWORD *v1;

  return sub_1AE536CF8(a1, *v1);
}

unint64_t sub_1AE513C08()
{
  unint64_t result;

  result = qword_1EED99D08;
  if (!qword_1EED99D08)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ActivityEventType, &type metadata for ActivityEventType);
    atomic_store(result, (unint64_t *)&qword_1EED99D08);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventType()
{
  return &type metadata for ActivityEventType;
}

_QWORD *sub_1AE513C5C(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for EntityConstructionError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EntityConstructionError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for os_unfair_recursive_lock_s(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A010);
}

uint64_t initializeBufferWithCopyOfBuffer for AppleMusicEventEntryRecord(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for EntitySimilarityEngine(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1AE513D08(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1AE513D28(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

void type metadata accessor for NSFastEnumerationState(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A018);
}

void type metadata accessor for GDEntityResolutionMode(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A020);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A028);
}

void type metadata accessor for BPSDemand(uint64_t a1)
{
  sub_1AE5150EC(a1, (unint64_t *)&unk_1EED9A030);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED94CA8);
}

void type metadata accessor for GDVUVersion(uint64_t a1)
{
  sub_1AE5150EC(a1, (unint64_t *)&unk_1EED9A040);
}

void type metadata accessor for BMSiriRemembersInteractionUserDonatorType(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1ED318948);
}

void type metadata accessor for BMDeviceMetadataDevicePlatform(uint64_t a1)
{
  sub_1AE5150EC(a1, (unint64_t *)&unk_1ED30EDB0);
}

void type metadata accessor for BMSiriRemembersInteractionInteractionStatus(uint64_t a1)
{
  sub_1AE5150EC(a1, (unint64_t *)&unk_1ED30F9A8);
}

void type metadata accessor for BMSiriRemembersInteractionInteractionDirection(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1ED30F9D0);
}

void type metadata accessor for BMSiriRemembersInteractionInteractionSource(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1ED318C68);
}

__n128 initializeWithTake for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void type metadata accessor for _GDEntityPredicateRawRecord(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A050);
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_1AE5150EC(a1, (unint64_t *)&unk_1EED9A058);
}

uint64_t _s31DefaultResolverInteractionsViewV16TupleInteractionVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s31DefaultResolverInteractionsViewV16TupleInteractionVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for _GDEntityClassRawRecord(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED94CC0);
}

uint64_t _s20IntelligencePlatform17ActivityEventTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE8)
  {
    if (a2 + 24 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 24) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 25;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x19;
  v5 = v6 - 25;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s20IntelligencePlatform17ActivityEventTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_1AE513FB0 + 4 * byte_1AE931838[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_1AE513FE4 + 4 * byte_1AE931833[v4]))();
}

uint64_t sub_1AE513FE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE513FEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE513FF4);
  return result;
}

uint64_t sub_1AE514000(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE514008);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_1AE51400C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE514014(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE514020(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1AE514028(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventType.CodingKeys()
{
  return &type metadata for ActivityEventType.CodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.TransportationCodingKeys()
{
  return &type metadata for ActivityEventType.TransportationCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.WorkingCodingKeys()
{
  return &type metadata for ActivityEventType.WorkingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.MeetingCodingKeys()
{
  return &type metadata for ActivityEventType.MeetingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.EatingCodingKeys()
{
  return &type metadata for ActivityEventType.EatingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.WatchingMediaCodingKeys()
{
  return &type metadata for ActivityEventType.WatchingMediaCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.CommunicatingCodingKeys()
{
  return &type metadata for ActivityEventType.CommunicatingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.ShoppingCodingKeys()
{
  return &type metadata for ActivityEventType.ShoppingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.MindfulCodingKeys()
{
  return &type metadata for ActivityEventType.MindfulCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.SleepCodingKeys()
{
  return &type metadata for ActivityEventType.SleepCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.TravelCodingKeys()
{
  return &type metadata for ActivityEventType.TravelCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.ReadingCodingKeys()
{
  return &type metadata for ActivityEventType.ReadingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.VacationCodingKeys()
{
  return &type metadata for ActivityEventType.VacationCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.SocialCodingKeys()
{
  return &type metadata for ActivityEventType.SocialCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.WakingCodingKeys()
{
  return &type metadata for ActivityEventType.WakingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.GoingToBedCodingKeys()
{
  return &type metadata for ActivityEventType.GoingToBedCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.TypeOfPhysicalExerciseCodingKeys()
{
  return &type metadata for ActivityEventType.TypeOfPhysicalExerciseCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.CommuteCodingKeys()
{
  return &type metadata for ActivityEventType.CommuteCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.WalkingCodingKeys()
{
  return &type metadata for ActivityEventType.WalkingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.RunningCodingKeys()
{
  return &type metadata for ActivityEventType.RunningCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.BikingCodingKeys()
{
  return &type metadata for ActivityEventType.BikingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.HikingCodingKeys()
{
  return &type metadata for ActivityEventType.HikingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.PhoneCallCodingKeys()
{
  return &type metadata for ActivityEventType.PhoneCallCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.FacetimeCodingKeys()
{
  return &type metadata for ActivityEventType.FacetimeCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.DrivingCodingKeys()
{
  return &type metadata for ActivityEventType.DrivingCodingKeys;
}

ValueMetadata *type metadata accessor for ActivityEventType.BehaviorCodingKeys()
{
  return &type metadata for ActivityEventType.BehaviorCodingKeys;
}

unint64_t sub_1AE5141D4()
{
  unint64_t result;

  result = qword_1EED9A068;
  if (!qword_1EED9A068)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932714, &type metadata for ActivityEventType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A068);
  }
  return result;
}

uint64_t sub_1AE514210()
{
  return sub_1AE512FA0(&qword_1EED9A070, (uint64_t (*)(uint64_t))type metadata accessor for BPSDemand, (uint64_t)&unk_1AE932908);
}

uint64_t sub_1AE51423C()
{
  return sub_1AE512FA0(&qword_1EED9A078, (uint64_t (*)(uint64_t))type metadata accessor for BPSDemand, (uint64_t)&unk_1AE9328DC);
}

uint64_t sub_1AE514268()
{
  return sub_1AE512FA0(&qword_1EED9A080, (uint64_t (*)(uint64_t))type metadata accessor for BPSDemand, (uint64_t)&unk_1AE932978);
}

uint64_t sub_1AE514294()
{
  return sub_1AE512FA0(&qword_1EED9A088, (uint64_t (*)(uint64_t))type metadata accessor for GDEntityResolutionMode, (uint64_t)&unk_1AE932A78);
}

unint64_t sub_1AE5142C4()
{
  unint64_t result;

  result = qword_1EED9A090;
  if (!qword_1EED9A090)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932634, &type metadata for ActivityEventType.TransportationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A090);
  }
  return result;
}

unint64_t sub_1AE514304()
{
  unint64_t result;

  result = qword_1EED9A098;
  if (!qword_1EED9A098)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93265C, &type metadata for ActivityEventType.TransportationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A098);
  }
  return result;
}

unint64_t sub_1AE514344()
{
  unint64_t result;

  result = qword_1EED9A0A0;
  if (!qword_1EED9A0A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9325E4, &type metadata for ActivityEventType.WorkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A0A0);
  }
  return result;
}

unint64_t sub_1AE514384()
{
  unint64_t result;

  result = qword_1EED9A0A8;
  if (!qword_1EED9A0A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93260C, &type metadata for ActivityEventType.WorkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A0A8);
  }
  return result;
}

unint64_t sub_1AE5143C4()
{
  unint64_t result;

  result = qword_1EED9A0B0;
  if (!qword_1EED9A0B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932594, &type metadata for ActivityEventType.MeetingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A0B0);
  }
  return result;
}

unint64_t sub_1AE514404()
{
  unint64_t result;

  result = qword_1EED9A0B8;
  if (!qword_1EED9A0B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9325BC, &type metadata for ActivityEventType.MeetingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A0B8);
  }
  return result;
}

unint64_t sub_1AE514444()
{
  unint64_t result;

  result = qword_1EED9A0C0;
  if (!qword_1EED9A0C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932544, &type metadata for ActivityEventType.EatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A0C0);
  }
  return result;
}

unint64_t sub_1AE514484()
{
  unint64_t result;

  result = qword_1EED9A0C8;
  if (!qword_1EED9A0C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93256C, &type metadata for ActivityEventType.EatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A0C8);
  }
  return result;
}

unint64_t sub_1AE5144C4()
{
  unint64_t result;

  result = qword_1EED9A0D0;
  if (!qword_1EED9A0D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9324F4, &type metadata for ActivityEventType.WatchingMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A0D0);
  }
  return result;
}

unint64_t sub_1AE514504()
{
  unint64_t result;

  result = qword_1EED9A0D8;
  if (!qword_1EED9A0D8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93251C, &type metadata for ActivityEventType.WatchingMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A0D8);
  }
  return result;
}

unint64_t sub_1AE514544()
{
  unint64_t result;

  result = qword_1EED9A0E0;
  if (!qword_1EED9A0E0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9324A4, &type metadata for ActivityEventType.CommunicatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A0E0);
  }
  return result;
}

unint64_t sub_1AE514584()
{
  unint64_t result;

  result = qword_1EED9A0E8;
  if (!qword_1EED9A0E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9324CC, &type metadata for ActivityEventType.CommunicatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A0E8);
  }
  return result;
}

unint64_t sub_1AE5145C4()
{
  unint64_t result;

  result = qword_1EED9A0F0;
  if (!qword_1EED9A0F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932454, &type metadata for ActivityEventType.ShoppingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A0F0);
  }
  return result;
}

unint64_t sub_1AE514604()
{
  unint64_t result;

  result = qword_1EED9A0F8;
  if (!qword_1EED9A0F8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93247C, &type metadata for ActivityEventType.ShoppingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A0F8);
  }
  return result;
}

unint64_t sub_1AE514644()
{
  unint64_t result;

  result = qword_1EED9A100;
  if (!qword_1EED9A100)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932404, &type metadata for ActivityEventType.MindfulCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A100);
  }
  return result;
}

unint64_t sub_1AE514684()
{
  unint64_t result;

  result = qword_1EED9A108;
  if (!qword_1EED9A108)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93242C, &type metadata for ActivityEventType.MindfulCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A108);
  }
  return result;
}

unint64_t sub_1AE5146C4()
{
  unint64_t result;

  result = qword_1EED9A110;
  if (!qword_1EED9A110)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9323B4, &type metadata for ActivityEventType.SleepCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A110);
  }
  return result;
}

unint64_t sub_1AE514704()
{
  unint64_t result;

  result = qword_1EED9A118;
  if (!qword_1EED9A118)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9323DC, &type metadata for ActivityEventType.SleepCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A118);
  }
  return result;
}

unint64_t sub_1AE514744()
{
  unint64_t result;

  result = qword_1EED9A120;
  if (!qword_1EED9A120)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932364, &type metadata for ActivityEventType.TravelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A120);
  }
  return result;
}

unint64_t sub_1AE514784()
{
  unint64_t result;

  result = qword_1EED9A128;
  if (!qword_1EED9A128)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93238C, &type metadata for ActivityEventType.TravelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A128);
  }
  return result;
}

unint64_t sub_1AE5147C4()
{
  unint64_t result;

  result = qword_1EED9A130;
  if (!qword_1EED9A130)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932314, &type metadata for ActivityEventType.ReadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A130);
  }
  return result;
}

unint64_t sub_1AE514804()
{
  unint64_t result;

  result = qword_1EED9A138;
  if (!qword_1EED9A138)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93233C, &type metadata for ActivityEventType.ReadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A138);
  }
  return result;
}

unint64_t sub_1AE514844()
{
  unint64_t result;

  result = qword_1EED9A140;
  if (!qword_1EED9A140)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9322C4, &type metadata for ActivityEventType.VacationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A140);
  }
  return result;
}

unint64_t sub_1AE514884()
{
  unint64_t result;

  result = qword_1EED9A148;
  if (!qword_1EED9A148)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9322EC, &type metadata for ActivityEventType.VacationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A148);
  }
  return result;
}

unint64_t sub_1AE5148C4()
{
  unint64_t result;

  result = qword_1EED9A150;
  if (!qword_1EED9A150)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932274, &type metadata for ActivityEventType.SocialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A150);
  }
  return result;
}

unint64_t sub_1AE514904()
{
  unint64_t result;

  result = qword_1EED9A158;
  if (!qword_1EED9A158)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93229C, &type metadata for ActivityEventType.SocialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A158);
  }
  return result;
}

unint64_t sub_1AE514944()
{
  unint64_t result;

  result = qword_1EED9A160;
  if (!qword_1EED9A160)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932224, &type metadata for ActivityEventType.WakingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A160);
  }
  return result;
}

unint64_t sub_1AE514984()
{
  unint64_t result;

  result = qword_1EED9A168;
  if (!qword_1EED9A168)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93224C, &type metadata for ActivityEventType.WakingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A168);
  }
  return result;
}

unint64_t sub_1AE5149C4()
{
  unint64_t result;

  result = qword_1EED9A170;
  if (!qword_1EED9A170)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9321D4, &type metadata for ActivityEventType.GoingToBedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A170);
  }
  return result;
}

unint64_t sub_1AE514A04()
{
  unint64_t result;

  result = qword_1EED9A178;
  if (!qword_1EED9A178)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9321FC, &type metadata for ActivityEventType.GoingToBedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A178);
  }
  return result;
}

unint64_t sub_1AE514A44()
{
  unint64_t result;

  result = qword_1EED9A180;
  if (!qword_1EED9A180)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932184, &type metadata for ActivityEventType.TypeOfPhysicalExerciseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A180);
  }
  return result;
}

unint64_t sub_1AE514A84()
{
  unint64_t result;

  result = qword_1EED9A188;
  if (!qword_1EED9A188)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9321AC, &type metadata for ActivityEventType.TypeOfPhysicalExerciseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A188);
  }
  return result;
}

unint64_t sub_1AE514AC4()
{
  unint64_t result;

  result = qword_1EED9A190;
  if (!qword_1EED9A190)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932134, &type metadata for ActivityEventType.CommuteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A190);
  }
  return result;
}

unint64_t sub_1AE514B04()
{
  unint64_t result;

  result = qword_1EED9A198;
  if (!qword_1EED9A198)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93215C, &type metadata for ActivityEventType.CommuteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A198);
  }
  return result;
}

unint64_t sub_1AE514B44()
{
  unint64_t result;

  result = qword_1EED9A1A0;
  if (!qword_1EED9A1A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9320E4, &type metadata for ActivityEventType.WalkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A1A0);
  }
  return result;
}

unint64_t sub_1AE514B84()
{
  unint64_t result;

  result = qword_1EED9A1A8;
  if (!qword_1EED9A1A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93210C, &type metadata for ActivityEventType.WalkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A1A8);
  }
  return result;
}

unint64_t sub_1AE514BC4()
{
  unint64_t result;

  result = qword_1EED9A1B0;
  if (!qword_1EED9A1B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932094, &type metadata for ActivityEventType.RunningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A1B0);
  }
  return result;
}

unint64_t sub_1AE514C04()
{
  unint64_t result;

  result = qword_1EED9A1B8;
  if (!qword_1EED9A1B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9320BC, &type metadata for ActivityEventType.RunningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A1B8);
  }
  return result;
}

unint64_t sub_1AE514C44()
{
  unint64_t result;

  result = qword_1EED9A1C0;
  if (!qword_1EED9A1C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932044, &type metadata for ActivityEventType.BikingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A1C0);
  }
  return result;
}

unint64_t sub_1AE514C84()
{
  unint64_t result;

  result = qword_1EED9A1C8;
  if (!qword_1EED9A1C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93206C, &type metadata for ActivityEventType.BikingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A1C8);
  }
  return result;
}

unint64_t sub_1AE514CC4()
{
  unint64_t result;

  result = qword_1EED9A1D0;
  if (!qword_1EED9A1D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE931FF4, &type metadata for ActivityEventType.HikingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A1D0);
  }
  return result;
}

unint64_t sub_1AE514D04()
{
  unint64_t result;

  result = qword_1EED9A1D8;
  if (!qword_1EED9A1D8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93201C, &type metadata for ActivityEventType.HikingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A1D8);
  }
  return result;
}

unint64_t sub_1AE514D44()
{
  unint64_t result;

  result = qword_1EED9A1E0;
  if (!qword_1EED9A1E0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE931FA4, &type metadata for ActivityEventType.PhoneCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A1E0);
  }
  return result;
}

unint64_t sub_1AE514D84()
{
  unint64_t result;

  result = qword_1EED9A1E8;
  if (!qword_1EED9A1E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE931FCC, &type metadata for ActivityEventType.PhoneCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A1E8);
  }
  return result;
}

unint64_t sub_1AE514DC4()
{
  unint64_t result;

  result = qword_1EED9A1F0;
  if (!qword_1EED9A1F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE931F54, &type metadata for ActivityEventType.FacetimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A1F0);
  }
  return result;
}

unint64_t sub_1AE514E04()
{
  unint64_t result;

  result = qword_1EED9A1F8;
  if (!qword_1EED9A1F8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE931F7C, &type metadata for ActivityEventType.FacetimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A1F8);
  }
  return result;
}

unint64_t sub_1AE514E44()
{
  unint64_t result;

  result = qword_1EED9A200;
  if (!qword_1EED9A200)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE931F04, &type metadata for ActivityEventType.DrivingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A200);
  }
  return result;
}

unint64_t sub_1AE514E84()
{
  unint64_t result;

  result = qword_1EED9A208;
  if (!qword_1EED9A208)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE931F2C, &type metadata for ActivityEventType.DrivingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A208);
  }
  return result;
}

unint64_t sub_1AE514EC4()
{
  unint64_t result;

  result = qword_1EED9A210;
  if (!qword_1EED9A210)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE931EB4, &type metadata for ActivityEventType.BehaviorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A210);
  }
  return result;
}

unint64_t sub_1AE514F04()
{
  unint64_t result;

  result = qword_1EED9A218;
  if (!qword_1EED9A218)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE931EDC, &type metadata for ActivityEventType.BehaviorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A218);
  }
  return result;
}

unint64_t sub_1AE514F44()
{
  unint64_t result;

  result = qword_1EED9A220;
  if (!qword_1EED9A220)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE932684, &type metadata for ActivityEventType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A220);
  }
  return result;
}

unint64_t sub_1AE514F84()
{
  unint64_t result;

  result = qword_1EED9A228;
  if (!qword_1EED9A228)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9326AC, &type metadata for ActivityEventType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9A228);
  }
  return result;
}

unint64_t sub_1AE514FC0()
{
  unint64_t result;

  result = qword_1EED9A240;
  if (!qword_1EED9A240)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonRankingServiceError, &type metadata for PersonRankingServiceError);
    atomic_store(result, (unint64_t *)&qword_1EED9A240);
  }
  return result;
}

void type metadata accessor for GDCandidateConstraint(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A248);
}

void type metadata accessor for GDKTSDataRequestCadence(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A250);
}

void type metadata accessor for GDInclusionType(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A258);
}

void type metadata accessor for GDDistanceBucket(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A260);
}

void type metadata accessor for GDTrafficBucket(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A268);
}

void type metadata accessor for GDSpeedBucket(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A270);
}

void type metadata accessor for GDRelativeFlowSpeedBucket(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A278);
}

void type metadata accessor for GDWeatherType(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A280);
}

void type metadata accessor for GDTerrainType(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A288);
}

void type metadata accessor for GDRoadType(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1EED9A290);
}

void type metadata accessor for GDPersonEntityTagType(uint64_t a1)
{
  sub_1AE5150EC(a1, (unint64_t *)&unk_1EED9A298);
}

void type metadata accessor for MLModelMetadataKey(uint64_t a1)
{
  sub_1AE5150EC(a1, &qword_1ED3188D0);
}

void sub_1AE5150EC(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
  sub_1AE4F6664();
}

uint64_t sub_1AE51512C()
{
  return sub_1AE512FA0(&qword_1EED9A2A8, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_1AE93343C);
}

uint64_t sub_1AE515158()
{
  return sub_1AE512FA0(&qword_1EED9A2B0, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_1AE933410);
}

uint64_t sub_1AE515184()
{
  return sub_1AE512FA0(&qword_1EED9A2B8, (uint64_t (*)(uint64_t))type metadata accessor for GDKTSDataRequestCadence, (uint64_t)&unk_1AE933568);
}

uint64_t sub_1AE5151B0()
{
  return sub_1AE512FA0((unint64_t *)&unk_1ED3188C0, (uint64_t (*)(uint64_t))type metadata accessor for MLModelMetadataKey, (uint64_t)&unk_1AE9334AC);
}

uint64_t sub_1AE51521C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE51522C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE515290()
{
  return 0x6F69746176656C65;
}

uint64_t sub_1AE5152F4()
{
  return 0x6850786966657270;
}

uint64_t sub_1AE515314()
{
  return 0x6C61755168676968;
}

uint64_t sub_1AE515368()
{
  return 0x656D6954646E65;
}

uint64_t sub_1AE51537C()
{
  return 0x6D69547472617473;
}

uint64_t sub_1AE5153CC()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE515400()
{
  return 0x6E6574614C776F6CLL;
}

void sub_1AE515438(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1AE515454(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1AE515470(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1AE5154A8()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_1AE5154C4()
{
  return 0x6177686769487369;
}

uint64_t sub_1AE515534()
{
  return 0x786966657270;
}

unint64_t sub_1AE515554()
{
  return 0xD000000000000010;
}

uint64_t sub_1AE515560()
{
  return 0x797469437369;
}

uint64_t sub_1AE515570()
{
  return 0x656D67655373746BLL;
}

uint64_t sub_1AE515588()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE515598()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE5155A8()
{
  return 0x6465636E616C6162;
}

uint64_t sub_1AE5155D8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  if ((a1 & 1) != 0)
    return v2;
  else
    return a2;
}

unint64_t sub_1AE5155EC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 23;
  return sub_1AE513058();
}

unint64_t sub_1AE5155F8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 22;
  return sub_1AE513094();
}

unint64_t sub_1AE515604()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 21;
  return sub_1AE5130D0();
}

unint64_t sub_1AE515610()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 20;
  return sub_1AE51310C();
}

unint64_t sub_1AE51561C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 19;
  return sub_1AE513148();
}

unint64_t sub_1AE515628()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 18;
  return sub_1AE513184();
}

unint64_t sub_1AE515634()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 17;
  return sub_1AE5131C0();
}

unint64_t sub_1AE515640()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 16;
  return sub_1AE5131FC();
}

unint64_t sub_1AE51564C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 15;
  return sub_1AE513238();
}

unint64_t sub_1AE515658()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 14;
  return sub_1AE513274();
}

unint64_t sub_1AE515664()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 13;
  return sub_1AE5132B0();
}

uint64_t sub_1AE515670()
{
  return 0x7463656A627573;
}

unint64_t sub_1AE515684()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 12;
  return sub_1AE5132EC();
}

unint64_t sub_1AE515690()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 11;
  return sub_1AE513328();
}

unint64_t sub_1AE5156B0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 24;
  return sub_1AE51301C();
}

unint64_t sub_1AE5156D0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 10;
  return sub_1AE513364();
}

unint64_t sub_1AE5156DC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 9;
  return sub_1AE5133A0();
}

unint64_t sub_1AE5156E8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 8;
  return sub_1AE5133DC();
}

unint64_t sub_1AE5156F4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 7;
  return sub_1AE513418();
}

unint64_t sub_1AE515700()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 6;
  return sub_1AE513454();
}

unint64_t sub_1AE515720()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 5;
  return sub_1AE513490();
}

unint64_t sub_1AE51572C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_1AE5134CC();
}

unint64_t sub_1AE51574C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_1AE513508();
}

unint64_t sub_1AE515758()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_1AE513544();
}

uint64_t sub_1AE515764()
{
  return 0x657361726870;
}

unint64_t sub_1AE515778()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1AE513580();
}

uint64_t sub_1AE5157B0()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_1AE5157BC()
{
  uint64_t v0;

  return v0 & 0xFFFFFFFFFFFBLL | 0xD000000000000004;
}

uint64_t sub_1AE5157D0()
{
  return 0x6E656B6F546C6C61;
}

uint64_t sub_1AE5157F8()
{
  return 6579297;
}

unint64_t sub_1AE515808()
{
  return 0xD00000000000001DLL;
}

double sub_1AE515824(uint64_t a1)
{
  uint64_t v1;
  double *v2;
  double result;
  double v4;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0.0;
  v2 = (double *)(a1 + 32);
  result = 0.0;
  do
  {
    v4 = *v2++;
    result = result + v4;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1AE515850()
{
  uint64_t v0;

  sub_1AE5158B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Add()
{
  return objc_opt_self();
}

uint64_t sub_1AE5158B8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AE515944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  swift_weakInit();
  sub_1AE501548(&qword_1ED310198);
  *(_QWORD *)(v2 + 40) = sub_1AE925C98();
  *(_DWORD *)(v2 + 48) = 0;
  *(_BYTE *)(v2 + 52) = 1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  swift_bridgeObjectRelease();
  swift_weakAssign();
  swift_release();
  *(_DWORD *)(v2 + 48) = 0;
  *(_BYTE *)(v2 + 52) = 1;
  return v2;
}

uint64_t sub_1AE5159F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v2 + 40) + 16) || (result = sub_1AE537024(a1, a2), (v6 & 1) == 0))
  {
    sub_1AE501548(&qword_1ED310198);
    swift_allocObject();
    swift_bridgeObjectRetain_n();
    swift_retain();
    v7 = sub_1AE515944(a1, a2);
    swift_beginAccess();
    sub_1AE654F74(v7, a1, a2, v8, v9, v10, v11, v12, v13, v14);
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1AE515AE0(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_1AE524A3C(), (v2 & 1) != 0))
    sub_1AE506854();
  else
    sub_1AE524A18();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void sub_1AE515B14(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1AE536DB0();
    if ((v2 & 1) != 0)
      sub_1AE52472C();
  }
  sub_1AE4F6664();
}

void sub_1AE515B48(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_1AE536DB0(), (v2 & 1) != 0))
    sub_1AE506854();
  else
    sub_1AE524A18();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void sub_1AE515B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_1AE5249E0();
  if (v2 && (v3 = sub_1AE536EF0(v1), (v4 & 1) != 0))
  {
    sub_1AE524844(v3);
  }
  else
  {
    *(_QWORD *)(v0 + 32) = 0;
    sub_1AE5248C0();
  }
  sub_1AE4F6664();
}

void sub_1AE515BB8()
{
  uint64_t v0;
  __int128 v1;
  uint64_t v2;
  char v3;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  *(double *)&v1 = sub_1AE5248D8();
  if (v2)
  {
    sub_1AE536E90();
    if ((v3 & 1) != 0)
    {
      sub_1AE5248E8();
      v5 = *((_QWORD *)v4 + 2);
      v8 = *(__int128 *)((char *)v4 + 24);
      v9 = *v4;
      v6 = *((_QWORD *)v4 + 5);
      swift_retain();
      sub_1AE4F66E0();
      v7 = v8;
      v1 = v9;
    }
    else
    {
      v5 = 0;
      v6 = 0;
      v7 = 0uLL;
      v1 = 0uLL;
    }
  }
  else
  {
    v5 = 0;
    v6 = 0;
    v7 = 0uLL;
  }
  *(_OWORD *)v0 = v1;
  *(_QWORD *)(v0 + 16) = v5;
  *(_OWORD *)(v0 + 24) = v7;
  *(_QWORD *)(v0 + 40) = v6;
  sub_1AE4FCDE0();
}

void sub_1AE515C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1AE5064FC(a1, a2);
    if ((v3 & 1) != 0)
      sub_1AE52472C();
  }
  sub_1AE4F6664();
}

void sub_1AE515C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16) && (sub_1AE5064FC(a1, a2), (v3 & 1) != 0))
    sub_1AE506854();
  else
    sub_1AE524A18();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void sub_1AE515CAC()
{
  sub_1AE515FB0();
}

void sub_1AE515CB8(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1AE5370CC(a1);
    if ((v2 & 1) != 0)
      sub_1AE524A24();
  }
  sub_1AE4F6664();
}

uint64_t sub_1AE515CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16) && (v4 = sub_1AE5064FC(a1, a2), (v5 & 1) != 0))
    return *(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + v4);
  else
    return 20;
}

void sub_1AE515D24()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1AE508E48();
  sub_1AE5248CC();
  if (v3 && (sub_1AE5064FC(v1, v2), (v4 & 1) != 0))
  {
    sub_1AE5248E8();
    v7 = *v5;
    v6 = v5[1];
    v8 = v5[2];
    v9 = *((unsigned __int8 *)v5 + 24);
    v11 = v5[4];
    v10 = v5[5];
    swift_bridgeObjectRetain();
    sub_1AE4F66CC();
    sub_1AE4F66C4();
  }
  else
  {
    v7 = 0;
    v6 = 0;
    v8 = 0;
    v9 = 0;
    v11 = 0;
    v10 = 0;
  }
  *v0 = v7;
  v0[1] = v6;
  v0[2] = v8;
  v0[3] = v9;
  v0[4] = v11;
  v0[5] = v10;
}

void sub_1AE515DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t *v8;
  __int128 v9;
  __int128 v10;

  sub_1AE5248D8();
  if (v6)
  {
    v1 = v5;
    sub_1AE536E90();
    if ((v7 & 1) != 0)
    {
      sub_1AE5248E8();
      v3 = *v8;
      v1 = v8[1];
      v10 = *((_OWORD *)v8 + 1);
      v4 = v8[4];
      v2 = v8[5];
      sub_1AE4F66CC();
      sub_1AE509330();
      sub_1AE4F66C4();
      v9 = v10;
    }
    else
    {
      sub_1AE524984();
      v9 = 0uLL;
    }
  }
  else
  {
    sub_1AE524984();
  }
  *(_QWORD *)v0 = v3;
  *(_QWORD *)(v0 + 8) = v1;
  *(_OWORD *)(v0 + 16) = v9;
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v0 + 40) = v2;
}

void sub_1AE515E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  sub_1AE5248CC();
  if (v4 && (v5 = sub_1AE5064FC(v2, v3), (v6 & 1) != 0))
  {
    sub_1AE524828(*(_QWORD *)(v1 + 56) + 32 * v5, v0);
  }
  else
  {
    sub_1AE5248C0();
    sub_1AE4F6664();
  }
}

void sub_1AE515E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  *(double *)&v3 = sub_1AE5248D8();
  if (v4)
  {
    v5 = v2;
    v6 = sub_1AE537200(v1);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(v5 + 56) + 40 * v6;
      v9 = *(_QWORD *)v8;
      v12 = *(_OWORD *)(v8 + 8);
      v11 = *(_QWORD *)(v8 + 24);
      v10 = *(_QWORD *)(v8 + 32);
      swift_unknownObjectRetain();
      sub_1AE509330();
      sub_1AE4F66C4();
      v3 = v12;
    }
    else
    {
      v9 = 0;
      v11 = 0;
      v10 = 0;
      v3 = 0uLL;
    }
  }
  else
  {
    v9 = 0;
    v11 = 0;
    v10 = 0;
  }
  *(_QWORD *)v0 = v9;
  *(_OWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 24) = v11;
  *(_QWORD *)(v0 + 32) = v10;
  sub_1AE4FE870();
}

uint64_t sub_1AE515F00()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE5249E0();
  if (v0 && (sub_1AE524A3C(), (v1 & 1) != 0))
  {
    v2 = sub_1AE501548(&qword_1EED9AC70);
    sub_1AE5246B8(v2);
    v3 = sub_1AE524A04();
  }
  else
  {
    sub_1AE501548(&qword_1EED9AC70);
    v3 = sub_1AE524954();
  }
  return sub_1AE4F66D4(v3, v4, v5, v6);
}

uint64_t sub_1AE515F58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  if (*(_QWORD *)(a2 + 16) && (v3 = sub_1AE53F5F0(), (v4 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v3);
  else
    return 0;
}

void sub_1AE515FA4()
{
  sub_1AE515FB0();
}

void sub_1AE515FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  sub_1AE5249E0();
  if (v3 && (v4 = v1, v5 = v2(), (v6 & 1) != 0))
  {
    sub_1AE524828(*(_QWORD *)(v4 + 56) + 32 * v5, v0);
  }
  else
  {
    sub_1AE5248C0();
    sub_1AE4F6664();
  }
}

void sub_1AE515FF0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  char v3;

  if (*(_QWORD *)(a2 + 16))
  {
    v2 = sub_1AE537330(a1);
    if ((v3 & 1) != 0)
      sub_1AE524A30(v2);
  }
  sub_1AE4F6664();
}

void sub_1AE516028(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    sub_1AE537360(a1);
  sub_1AE509D68();
}

void sub_1AE516078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  sub_1AE5248CC();
  if (v4 && (v5 = sub_1AE5064FC(v2, v3), (v6 & 1) != 0))
  {
    sub_1AE524288(*(_QWORD *)(v1 + 56) + 8 * v5, v0);
    v7 = 0;
  }
  else
  {
    *(_QWORD *)v0 = 0;
    v7 = 1;
  }
  *(_BYTE *)(v0 + 8) = v7;
  sub_1AE4F6664();
}

void sub_1AE5160C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1AE5064FC(a1, a2);
    if ((v3 & 1) != 0)
      sub_1AE524A24();
  }
  sub_1AE4F6664();
}

void sub_1AE5160F0(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1AE524A3C();
    if ((v2 & 1) != 0)
      sub_1AE52472C();
  }
  sub_1AE4F6664();
}

uint64_t sub_1AE516120(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  if (*(_QWORD *)(a2 + 16) && (v3 = sub_1AE5373F8(), (v4 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v3);
  else
    return 0;
}

void sub_1AE516164(uint64_t a1, double a2)
{
  char v2;

  if (*(_QWORD *)(a1 + 16) && (sub_1AE537450(a2), (v2 & 1) != 0))
    sub_1AE506854();
  else
    sub_1AE524A18();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

uint64_t sub_1AE51619C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16) && (v4 = sub_1AE5064FC(a1, a2), (v5 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
  else
    return 0;
}

void sub_1AE5161DC(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1AE5373F8();
    if ((v2 & 1) != 0)
      sub_1AE52472C();
  }
  sub_1AE4F6664();
}

void sub_1AE516210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (*(_QWORD *)(a3 + 16))
  {
    v3 = sub_1AE5064FC(a1, a2);
    if ((v4 & 1) != 0)
      sub_1AE524A30(v3);
  }
  sub_1AE4F6664();
}

void sub_1AE516248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  sub_1AE5248CC();
  if (v3 && (v4 = sub_1AE5064FC(v1, v2), (v5 & 1) != 0))
  {
    sub_1AE524844(v4);
  }
  else
  {
    *(_QWORD *)(v0 + 32) = 0;
    sub_1AE5248C0();
  }
  sub_1AE4F6664();
}

void sub_1AE51627C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  sub_1AE5249E0();
  if (v3 && (v4 = v2, v5 = sub_1AE5373C4(v1), (v6 & 1) != 0))
  {
    sub_1AE5241DC(*(_QWORD *)(v4 + 56) + 48 * v5, v0);
  }
  else
  {
    *(_QWORD *)(v0 + 32) = 0;
    sub_1AE5248C0();
    *(_BYTE *)(v0 + 40) = -1;
    sub_1AE4F6664();
  }
}

void sub_1AE5162D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char v7;
  char v8;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_1AE5372B4(a1, a2), (v7 & 1) != 0))
  {
    sub_1AE524218(*(_QWORD *)(a3 + 56) + 8 * v6, a4);
    v8 = 0;
  }
  else
  {
    *(_QWORD *)a4 = 0;
    v8 = 1;
  }
  *(_BYTE *)(a4 + 8) = v8;
  sub_1AE4F6664();
}

uint64_t sub_1AE516320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AE5248CC();
  if (v2 && (sub_1AE5064FC(v0, v1), (v3 & 1) != 0))
  {
    v4 = sub_1AE9248DC();
    sub_1AE5246B8(v4);
    v5 = sub_1AE524A04();
  }
  else
  {
    sub_1AE9248DC();
    v5 = sub_1AE524954();
  }
  return sub_1AE4F66D4(v5, v6, v7, v8);
}

void sub_1AE516370(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
    sub_1AE53F5F0(a1);
  sub_1AE509D68();
}

void sub_1AE5163C0()
{
  uint64_t v0;

  v0 = sub_1AE92670C();
  sub_1AE4FB738(v0);
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  sub_1AE4F6664();
}

uint64_t sub_1AE516414()
{
  sub_1AE5163C0();
  return swift_deallocClassInstance();
}

void sub_1AE516438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE501548(&qword_1ED310198);
  sub_1AE4F66BC();
  sub_1AE4F9070();
  *(_QWORD *)(v0 + 16) = sub_1AE515944(v1, v2);
  sub_1AE4F6664();
}

uint64_t sub_1AE51647C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;

  sub_1AE4FC4D4();
  v1 = v0 + 64;
  v2 = 1 << *(_BYTE *)(v0 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(v0 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  if (!v4)
    goto LABEL_5;
LABEL_4:
  for (v4 &= v4 - 1; ; v4 = (v9 - 1) & v9)
  {
    swift_bridgeObjectRetain();
    sub_1AE5166D8();
    result = swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_4;
LABEL_5:
    v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v8 >= v5)
      return swift_release();
    v9 = *(_QWORD *)(v1 + 8 * v8);
    ++v7;
    if (!v9)
    {
      v7 = v8 + 1;
      if (v8 + 1 >= v5)
        return swift_release();
      v9 = *(_QWORD *)(v1 + 8 * v7);
      if (!v9)
      {
        v7 = v8 + 2;
        if (v8 + 2 >= v5)
          return swift_release();
        v9 = *(_QWORD *)(v1 + 8 * v7);
        if (!v9)
          break;
      }
    }
LABEL_18:
    ;
  }
  v10 = v8 + 3;
  if (v10 >= v5)
    return swift_release();
  v9 = *(_QWORD *)(v1 + 8 * v10);
  if (v9)
  {
    v7 = v10;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v7 >= v5)
      return swift_release();
    v9 = *(_QWORD *)(v1 + 8 * v7);
    ++v10;
    if (v9)
      goto LABEL_18;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1AE5165D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unsigned int v15;
  int v16;

  sub_1AE5249CC();
  if (v5)
  {
    v6 = *(_QWORD *)(v3 + 16);
    sub_1AE524998();
    sub_1AE4F6708();
    sub_1AE5249AC();
    v8 = v7;
    result = sub_1AE4F76D8();
    v10 = *(_QWORD *)(v8 + 16);
    if (v10)
    {
      v11 = 0;
      v12 = v8 + 40;
      while (1)
      {
        if (v11 >= *(_QWORD *)(v8 + 16))
        {
          __break(1u);
          return result;
        }
        sub_1AE4F8198();
        v13 = *(_QWORD *)(v6 + 40);
        if (!*(_QWORD *)(v13 + 16))
          break;
        sub_1AE52481C();
        if ((v14 & 1) == 0)
          break;
        sub_1AE524738();
        result = sub_1AE50A24C();
        ++v11;
        v12 += 16;
        v6 = v13;
        if (v10 == v11)
        {
          sub_1AE4F6700();
          goto LABEL_13;
        }
      }
      sub_1AE4F6700();
      if (v10 == v11)
        goto LABEL_12;
      sub_1AE50A24C();
    }
    else
    {
      sub_1AE4F6700();
LABEL_12:
      v13 = v6;
LABEL_13:
      v15 = *(_DWORD *)(v13 + 48);
      v16 = *(unsigned __int8 *)(v13 + 52);
      swift_release();
      if (v16)
        return a3;
      else
        return v15;
    }
  }
  return a3;
}

void sub_1AE5166D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16[4];
  uint64_t v17;

  sub_1AE5249CC();
  if (v4)
  {
    v5 = v3;
    v6 = v2;
    v7 = *(_QWORD *)(v0 + 16);
    v17 = v7;
    sub_1AE524998();
    sub_1AE4F6708();
    sub_1AE5249AC();
    v9 = v8;
    sub_1AE4F76D8();
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_beginAccess();
      v11 = 0;
      v12 = v9 + 40;
      while (1)
      {
        if (v11 >= *(_QWORD *)(v9 + 16))
        {
          __break(1u);
          return;
        }
        sub_1AE4F8198();
        v13 = *(_QWORD *)(v7 + 40);
        if (*(_QWORD *)(v13 + 16))
        {
          sub_1AE52481C();
          if ((v14 & 1) != 0)
            break;
        }
        v16[0] = 0;
        sub_1AE4F6708();
        sub_1AE524998();
        sub_1AE5159F4(v1, v6);
        sub_1AE50A24C();
        v13 = *(_QWORD *)(v7 + 40);
        if (!*(_QWORD *)(v13 + 16) || (sub_1AE52481C(), (v15 & 1) == 0))
        {
          v13 = sub_1AE516838(v16, v1, v6);
          sub_1AE4F76D8();
          v6 = v16[0];
          sub_1AE50A24C();
          goto LABEL_12;
        }
        sub_1AE524738();
        sub_1AE50A24C();
        sub_1AE4F76D8();
LABEL_13:
        v17 = v13;
        v7 = v13;
        ++v11;
        v12 += 16;
        if (v10 == v11)
        {
          *(_DWORD *)(v13 + 48) = v5;
          *(_BYTE *)(v13 + 52) = 0;
          goto LABEL_15;
        }
      }
      sub_1AE524738();
LABEL_12:
      swift_release();
      goto LABEL_13;
    }
LABEL_15:
    sub_1AE4F6700();
    sub_1AE50A24C();
  }
}

uint64_t sub_1AE516838(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  if (v4)
  {
    v5 = v4;
  }
  else
  {
    swift_beginAccess();
    sub_1AE501548(&qword_1ED310198);
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    v5 = sub_1AE515944(a2, a3);
    swift_beginAccess();
    *a1 = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

uint64_t DictionaryTrie.deinit()
{
  uint64_t v0;

  sub_1AE52497C();
  return v0;
}

uint64_t DictionaryTrie.__deallocating_deinit()
{
  sub_1AE52497C();
  return swift_deallocClassInstance();
}

Swift::OpaquePointer_optional __swiftcall readJsonStringToIntMap(fileName:)(Swift::String fileName)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  void *v58;
  Swift::Bool v59;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  uint64_t v67;
  unint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  Swift::OpaquePointer_optional result;

  sub_1AE4FC4D4();
  v2 = v1;
  v4 = v3;
  v80 = *MEMORY[0x1E0C80C00];
  sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  v8 = v7 - v6;
  v9 = sub_1AE924780();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v67 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v67 - v17;
  if (qword_1ED31C450 != -1)
    swift_once();
  sub_1AE523BFC(v4, v2, 1852797802, 0xE400000000000000, (void *)qword_1ED31C4B0);
  if (v19)
  {
    v20 = v19;
    sub_1AE924744();

    v21 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
    v21(v8, v16, v9);
    sub_1AE4FD940(v8, 0);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v8, 1, v9) != 1)
    {
      v21((uint64_t)v18, (char *)v8, v9);
      sub_1AE9247B0();
      v60 = (void *)MEMORY[0x1AF454348]();
      v61 = (void *)objc_opt_self();
      v62 = (void *)sub_1AE92481C();
      v75 = 0;
      v63 = objc_msgSend(v61, sel_JSONObjectWithData_options_error_, v62, 0, &v75);

      if (v63)
      {
        v64 = v75;
        sub_1AE9267E4();
        swift_unknownObjectRelease();
        sub_1AE501548(&qword_1ED3101A0);
        if ((swift_dynamicCast() & 1) == 0)
          v79 = 0;
        objc_autoreleasePoolPop(v60);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
        sub_1AE4FCDF8();
      }
      else
      {
        v65 = v75;
        v66 = (void *)sub_1AE9246B4();

        swift_willThrow();
        objc_autoreleasePoolPop(v60);
        sub_1AE4FCDF8();
        if (qword_1ED3100D8 != -1)
          swift_once();
        v22 = sub_1AE925B6C();
        sub_1AE4FB608(v22, (uint64_t)qword_1ED30ECD0);
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v18, v9);
        v23 = v66;
        v24 = v66;
        v25 = sub_1AE925B54();
        v26 = sub_1AE9265EC();
        v27 = v26;
        if (os_log_type_enabled(v25, v26))
        {
          v28 = sub_1AE4F66A0();
          v69 = (void *)sub_1AE4F66A0();
          v75 = v69;
          *(_DWORD *)v28 = 136315394;
          sub_1AE523C6C();
          HIDWORD(v68) = v27;
          v29 = sub_1AE926D18();
          sub_1AE5032A4(v29, v30, v31, v32, v33, v34, v35, v36, v67, v68, (uint64_t)v69, v70, v71, v72, v73, v74, (uint64_t)v75, v76, v77,
            v78);
          v79 = v37;
          sub_1AE92676C();
          sub_1AE4F9038();
          (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
          *(_WORD *)(v28 + 12) = 2080;
          swift_getErrorValue();
          v38 = sub_1AE926E20();
          sub_1AE5032A4(v38, v39, v40, v41, v42, v43, v44, v45, v67, v68, (uint64_t)v69, v70, v71, v72, v73, v74, (uint64_t)v75, v76, v77,
            v78);
          v79 = v46;
          sub_1AE92676C();
          sub_1AE4F9038();
          sub_1AE4FCDF0();
          sub_1AE4FCDF0();
          _os_log_impl(&dword_1AE4F2000, v25, BYTE4(v68), "Error: Unable to decode file %s with error %s", (uint8_t *)v28, 0x16u);
          swift_arrayDestroy();
          sub_1AE4F9064();
        }

        sub_1AE4FCDF0();
        sub_1AE4FCDF0();
        v57 = *(void (**)(char *, uint64_t))(v10 + 8);
        v57(v13, v9);
        sub_1AE4FCDF0();
        v57(v18, v9);
      }
      goto LABEL_17;
    }
  }
  else
  {
    sub_1AE4FD940(v8, 1);
  }
  sub_1AE524534(v8, (uint64_t *)&unk_1ED31C9C0);
  if (qword_1ED3100D8 != -1)
    swift_once();
  v47 = sub_1AE925B6C();
  sub_1AE4FB608(v47, (uint64_t)qword_1ED30ECD0);
  swift_bridgeObjectRetain_n();
  v48 = sub_1AE925B54();
  v49 = sub_1AE9265EC();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)sub_1AE4F66A0();
    v75 = (id)sub_1AE4F66A0();
    *(_DWORD *)v50 = 136315138;
    sub_1AE4F66C4();
    sub_1AE520ED4(v4, v2, (uint64_t)&v75, v51, v52, v53, v54, v55, v67, v68, (uint64_t)v69, v70, v71, v72, v73, v74, (uint64_t)v75, v76, v77,
      v78);
    v79 = v56;
    sub_1AE92676C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AE4F2000, v48, v49, "Error: Unable to read file %s", v50, 0xCu);
    swift_arrayDestroy();
    sub_1AE4F9064();
  }

  swift_bridgeObjectRelease_n();
LABEL_17:
  sub_1AE4F8180();
  result.value._rawValue = v58;
  result.is_nil = v59;
  return result;
}

uint64_t AddressEmbedder.__allocating_init(modelName:dictionaryPaths:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AE4F66BC();
  AddressEmbedder.init(modelName:dictionaryPaths:)(a1, a2, a3);
  return v6;
}

_QWORD *AddressEmbedder.init(modelName:dictionaryPaths:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _BYTE *v29;

  v5 = v3;
  type metadata accessor for InferenceClient();
  sub_1AE4F66BC();
  InferenceClient.init()();
  if (v4)
  {
    sub_1AE4F66E8();
LABEL_3:
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v11 = *(_QWORD *)(v9 + 16);
  v12 = sub_1AE501548(qword_1ED310108);
  v13 = (_QWORD *)sub_1AE4F66BC();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = 0xD000000000000017;
  v13[5] = 0x80000001AE97C1B0;
  v13[6] = 0x636E657265666E69;
  v13[7] = 0xEF656E69676E4565;
  v13[11] = type metadata accessor for InferenceServer();
  v13[12] = &off_1E5DB7120;
  v13[8] = v11;
  sub_1AE501548(&qword_1ED3100F0);
  v14 = (_QWORD *)sub_1AE4F66BC();
  v14[5] = v12;
  v14[6] = sub_1AE523CAC();
  v14[2] = v13;
  v5[2] = v14;
  sub_1AE4F66E0();
  sub_1AE515C78(0x636F765F72616863, 0xEA00000000006261, a3);
  if (v16)
  {
    v17 = v16;
  }
  else
  {
    v15 = 0;
    v17 = 0xE000000000000000;
  }
  v18 = v17;
  v19 = (unint64_t)readJsonStringToIntMap(fileName:)(*(Swift::String *)&v15);
  sub_1AE4F76D8();
  if (v19)
  {
    v5[3] = v19;
    sub_1AE515C78(0x61636F765F657062, 0xE900000000000062, a3);
    v21 = v20;
    v23 = v22;
    sub_1AE4F66E8();
    if (v23)
      v24 = v21;
    else
      v24 = 0;
    if (v23)
      v25 = v23;
    else
      v25 = 0xE000000000000000;
    v26 = v25;
    v27 = (unint64_t)readJsonStringToIntMap(fileName:)(*(Swift::String *)&v24);
    sub_1AE4F76D8();
    if (v27)
    {
      type metadata accessor for DictionaryTrie();
      v28 = sub_1AE4F66BC();
      sub_1AE516438();
      v5[4] = v28;
      sub_1AE4F66E0();
      sub_1AE51647C();
      swift_release();
      sub_1AE4F66E8();
      swift_release();
      return v5;
    }
  }
  else
  {
    sub_1AE4F66E8();
  }
  sub_1AE523D34();
  swift_allocError();
  *v29 = 1;
  swift_willThrow();
  swift_release();
  swift_release();
  if (v19)
    goto LABEL_3;
LABEL_4:
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t sub_1AE517230(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);

  type metadata accessor for LocationEmbedderInferenceInterface.Output();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  v8 = v7 - v6;
  sub_1AE501548(&qword_1EED9AD50);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F666C();
  v12 = v11 - v10;
  sub_1AE4F6708();
  swift_bridgeObjectRetain();
  sub_1AE517328(a1, a2, 0, 1, v12);
  swift_bridgeObjectRelease();
  result = sub_1AE4F76D8();
  if (!v2)
  {
    sub_1AE5242C4(v12, v8);
    sub_1AE501548(&qword_1EED9AD58);
    v14 = sub_1AE524934();
    return v15(v14, v8);
  }
  return result;
}

void sub_1AE517328(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  dispatch_semaphore_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;

  v27 = a1;
  v6 = v5;
  v30 = a4;
  v28 = a2;
  v29 = a3;
  v26 = a5;
  v7 = sub_1AE501548(&qword_1EED9AD60);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1AE501548((uint64_t *)&unk_1EED9AD68);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v31 = (uint64_t)&v26 - v14;
  v15 = sub_1AE501548(&qword_1ED318B50);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = dispatch_semaphore_create(0);
  sub_1AE501548(&qword_1EED9AD78);
  v19 = swift_allocObject();
  v20 = v19 + *(_QWORD *)(*(_QWORD *)v19 + 96);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v20, 1, 1, v10);
  v21 = sub_1AE926328();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v17, 1, 1, v21);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  *(_QWORD *)(v22 + 32) = v18;
  *(_QWORD *)(v22 + 40) = v6;
  v23 = v28;
  *(_QWORD *)(v22 + 48) = v27;
  *(_QWORD *)(v22 + 56) = v23;
  *(_QWORD *)(v22 + 64) = v29;
  *(_BYTE *)(v22 + 72) = v30 & 1;
  *(_QWORD *)(v22 + 80) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = v18;
  swift_retain();
  swift_retain();
  sub_1AE7634CC((uint64_t)v17, (uint64_t)&unk_1EED9AD88, v22);
  swift_release();
  sub_1AE926688();
  swift_beginAccess();
  sub_1AE52444C(v20, (uint64_t)v9, &qword_1EED9AD60);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_1AE524534((uint64_t)v9, &qword_1EED9AD60);
    sub_1AE926AB4();
    __break(1u);
  }
  else
  {
    v25 = v31;
    sub_1AE524480((uint64_t)v9, v31, (uint64_t *)&unk_1EED9AD68);
    sub_1AE52444C(v25, (uint64_t)v13, (uint64_t *)&unk_1EED9AD68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v32 = *v13;
      sub_1AE501548((uint64_t *)&unk_1ED319C60);
      swift_willThrowTypedImpl();
      sub_1AE524534(v25, (uint64_t *)&unk_1EED9AD68);
      swift_release();

    }
    else
    {
      sub_1AE524480((uint64_t)v13, v26, &qword_1EED9AD50);
      sub_1AE524534(v25, (uint64_t *)&unk_1EED9AD68);
      swift_release();

    }
  }
}

uint64_t AddressEmbedder.getEmbedding(address:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  String.wordCharTokens(max_words:max_chars:vocab:)(10, 10, *(_QWORD *)(v0 + 24));
  v2 = v1;
  String.bpeTokens(max_words:max_tokens:vocab:)(10, 5);
  sub_1AE517230(v2, v3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void String.wordCharTokens(max_words:max_chars:vocab:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1AE4F7630();
  v6 = sub_1AE524914();
  if (__OFSUB__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    v7 = v6;
    sub_1AE4FB75C();
    v8 = sub_1AE524900();
    sub_1AE517CD0(v8, v9, v10, v7, a2, a3);
  }
}

void String.bpeTokens(max_words:max_tokens:vocab:)(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  int v32;
  unint64_t v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  _QWORD v45[2];

  sub_1AE925F74();
  sub_1AE4F66C4();
  sub_1AE925F74();
  v4 = sub_1AE4F665C();
  v5 = (void *)MEMORY[0x1AF454348](v4);
  v45[0] = 12147;
  v45[1] = 0xE200000000000000;
  v44[0] = 32;
  v44[1] = 0xE100000000000000;
  sub_1AE4F7630();
  v6 = sub_1AE524914();
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v39 = v5;
    v41 = a1;
    v45[0] = MEMORY[0x1E0DEE9D8];
    sub_1AE52154C();
    v9 = v45[0];
    v10 = v6 + 40;
    do
    {
      swift_bridgeObjectRetain();
      v11 = sub_1AE5189D8();
      v13 = v12;
      swift_bridgeObjectRelease();
      v45[0] = v9;
      v14 = *(_QWORD *)(v9 + 16);
      if (v14 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1AE52154C();
        v9 = v45[0];
      }
      v10 += 16;
      *(_QWORD *)(v9 + 16) = v14 + 1;
      v15 = v9 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v11;
      *(_QWORD *)(v15 + 40) = v13;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    v16 = v9;
    v8 = MEMORY[0x1E0DEE9D8];
    a1 = v41;
    v5 = v39;
  }
  else
  {
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
  }
  v45[0] = v16;
  objc_autoreleasePoolPop(v5);
  sub_1AE4F665C();
  v44[0] = v8;
  if (__OFSUB__(a1, 1))
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (*(_QWORD *)(v16 + 16) - 1 >= a1 - 1)
    v17 = a1 - 1;
  else
    v17 = *(_QWORD *)(v16 + 16) - 1;
  swift_retain();
  sub_1AE517FCC(0, v17, 1, (uint64_t)v45, (uint64_t)v44, a1, a2);
  v19 = v18;
  v20 = *(_QWORD *)(v18 + 16);
  v21 = __OFSUB__(a1, v20);
  v22 = a1 - v20;
  v40 = v22;
  if ((v22 < 0) ^ v21 | (v22 == 0))
    goto LABEL_45;
  if (v22 < 0)
    goto LABEL_48;
  v23 = a2 - 1;
  if (!__OFSUB__(a2, 1))
  {
    v24 = 0;
LABEL_16:
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = v24 + 1;
    while (1)
    {
      if (v27 >= v23)
      {
        if ((v27 != v23) | v26 & 1)
        {
          v42 = v28;
          v43 = v19;
          swift_retain();
          sub_1AE5217F8();
          v29 = v8;
          v30 = 0;
          v31 = 0;
          if (!v25)
            goto LABEL_37;
          while (1)
          {
            if (v31 >= v23)
            {
              if (v30 & 1 | (v31 != v23))
              {
                __break(1u);
                goto LABEL_47;
              }
              v30 = 1;
              v31 = v23;
            }
            else
            {
              ++v31;
            }
            v32 = sub_1AE524710();
            v33 = *(_QWORD *)(v29 + 16);
            if (v33 >= *(_QWORD *)(v29 + 24) >> 1)
              sub_1AE5217F8();
            *(_QWORD *)(v29 + 16) = v33 + 1;
            *(_DWORD *)(v29 + 4 * v33 + 32) = v32;
            if (!--v25)
            {
              while (1)
              {
LABEL_37:
                if (v31 >= v23)
                {
                  if ((v31 != v23) | v30 & 1)
                  {
                    sub_1AE4FB730();
                    v19 = v43;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    {
                      sub_1AE51A350();
                      v19 = v37;
                    }
                    v8 = MEMORY[0x1E0DEE9D8];
                    v36 = *(_QWORD *)(v19 + 16);
                    if (v36 >= *(_QWORD *)(v19 + 24) >> 1)
                    {
                      sub_1AE51A350();
                      v19 = v38;
                    }
                    *(_QWORD *)(v19 + 16) = v36 + 1;
                    *(_QWORD *)(v19 + 8 * v36 + 32) = v29;
                    v24 = v42;
                    if (v42 == v40)
                    {
LABEL_45:
                      swift_bridgeObjectRelease();
                      return;
                    }
                    goto LABEL_16;
                  }
                  v30 = 1;
                  v31 = v23;
                }
                else
                {
                  ++v31;
                }
                v34 = sub_1AE524710();
                v35 = *(_QWORD *)(v29 + 16);
                if (v35 >= *(_QWORD *)(v29 + 24) >> 1)
                  sub_1AE5217F8();
                *(_QWORD *)(v29 + 16) = v35 + 1;
                *(_DWORD *)(v29 + 4 * v35 + 32) = v34;
              }
            }
          }
        }
        v26 = 1;
        v27 = v23;
      }
      else
      {
        ++v27;
      }
      v21 = __OFADD__(v25++, 1);
      if (v21)
      {
        __break(1u);
        goto LABEL_45;
      }
    }
  }
LABEL_49:
  __break(1u);
}

uint64_t AddressEmbedder.deinit()
{
  uint64_t v0;

  sub_1AE52497C();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t AddressEmbedder.__deallocating_deinit()
{
  AddressEmbedder.deinit();
  return swift_deallocClassInstance();
}

void String.charTokens(max_chars:vocab:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (__OFSUB__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1AE4F66CC();
    v7 = sub_1AE524900();
    sub_1AE5182C4(v7, v8, v9, a3, a4, a2);
  }
}

void sub_1AE517CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;
  uint64_t v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BOOL4 v19;
  BOOL v20;
  uint64_t v21;
  BOOL v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;

  v7 = v6;
  v10 = a1;
  v11 = sub_1AE523FC4(a1, a2, a3);
  v35 = MEMORY[0x1E0DEE9D8];
  sub_1AE5217C4();
  if (v11 < 0)
    goto LABEL_50;
  v12 = v35;
  if (!v11)
  {
    v27 = 0;
    v26 = 0;
    v31 = 0;
    goto LABEL_24;
  }
  v27 = 0;
  v26 = 0;
  v31 = 0;
  while (1)
  {
    v13 = v10 <= a2;
    if (a3 > 0)
      v13 = v10 >= a2;
    if (v13)
      break;
    v15 = !__OFADD__(v10, a3);
    v31 = v15;
    v16 = 0x8000000000000000;
    if (!__OFADD__(v10, a3))
      v16 = 0;
    v26 = v16;
    v14 = v10;
    if (__OFADD__(v10, a3))
      v10 = ((v10 + a3) >> 63) ^ 0x8000000000000000;
    else
      v10 += a3;
LABEL_18:
    v32 = v14;
    v33 = 0;
    sub_1AE51881C(&v32, a4, a5, a6, &v34);
    if (v7)
    {
LABEL_46:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    v7 = 0;
    v17 = v34;
    v35 = v12;
    v18 = *(_QWORD *)(v12 + 16);
    if (v18 >= *(_QWORD *)(v12 + 24) >> 1)
    {
      sub_1AE5217C4();
      v12 = v35;
    }
    *(_QWORD *)(v12 + 16) = v18 + 1;
    *(_QWORD *)(v12 + 8 * v18 + 32) = v17;
    if (!--v11)
    {
      while (1)
      {
LABEL_24:
        v19 = v10 <= a2;
        if (a3 > 0)
          v19 = v10 >= a2;
        if (!v19)
          break;
        if ((v10 != a2) | v27 & 1)
          goto LABEL_47;
        if (v31)
        {
          v20 = 1;
          v27 = 1;
          v21 = a2;
LABEL_39:
          v31 = v20;
          goto LABEL_42;
        }
        if (v26 == 0x8000000000000000)
        {
LABEL_47:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        v31 = 0;
        v27 = 1;
        v21 = a2;
LABEL_42:
        v32 = v10;
        sub_1AE51881C(&v32, a4, a5, a6, &v34);
        if (v7)
          goto LABEL_46;
        v7 = 0;
        v24 = v34;
        v35 = v12;
        v25 = *(_QWORD *)(v12 + 16);
        if (v25 >= *(_QWORD *)(v12 + 24) >> 1)
        {
          sub_1AE5217C4();
          v12 = v35;
        }
        *(_QWORD *)(v12 + 16) = v25 + 1;
        *(_QWORD *)(v12 + 8 * v25 + 32) = v24;
        v10 = v21;
      }
      v22 = __OFADD__(v10, a3);
      if (v22)
        v21 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
      else
        v21 = v10 + a3;
      v23 = 0x8000000000000000;
      if (!v22)
        v23 = 0;
      v26 = v23;
      v20 = !v22;
      goto LABEL_39;
    }
  }
  if (!(v27 & 1 | (v10 != a2)))
  {
    if (!v31 && v26 == 0x8000000000000000)
      goto LABEL_49;
    v27 = 1;
    v14 = a2;
    v10 = a2;
    goto LABEL_18;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
}

void sub_1AE517FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  unint64_t v15;
  BOOL v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BOOL4 v20;
  BOOL v21;
  uint64_t v22;
  BOOL v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  BOOL v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;

  v8 = v7;
  v11 = a1;
  v12 = sub_1AE523FC4(a1, a2, a3);
  v37 = MEMORY[0x1E0DEE9D8];
  sub_1AE5217C4();
  if (v12 < 0)
    goto LABEL_50;
  v13 = v37;
  if (!v12)
  {
    v28 = 0;
    v27 = 0;
    v33 = 0;
    goto LABEL_24;
  }
  v28 = 0;
  v27 = 0;
  v33 = 0;
  while (1)
  {
    v14 = v11 <= a2;
    if (a3 > 0)
      v14 = v11 >= a2;
    if (v14)
      break;
    v16 = !__OFADD__(v11, a3);
    v33 = v16;
    v17 = 0x8000000000000000;
    if (!__OFADD__(v11, a3))
      v17 = 0;
    v27 = v17;
    v15 = v11;
    if (__OFADD__(v11, a3))
      v11 = ((v11 + a3) >> 63) ^ 0x8000000000000000;
    else
      v11 += a3;
LABEL_18:
    v34 = v15;
    v35 = 0;
    sub_1AE518AF4(&v34, a4, a5, a6, a7, &v36);
    if (v8)
    {
LABEL_46:
      swift_release();
      swift_release();
      return;
    }
    v8 = 0;
    v18 = v36;
    v37 = v13;
    v19 = *(_QWORD *)(v13 + 16);
    if (v19 >= *(_QWORD *)(v13 + 24) >> 1)
    {
      sub_1AE5217C4();
      v13 = v37;
    }
    *(_QWORD *)(v13 + 16) = v19 + 1;
    *(_QWORD *)(v13 + 8 * v19 + 32) = v18;
    if (!--v12)
    {
      while (1)
      {
LABEL_24:
        v20 = v11 <= a2;
        if (a3 > 0)
          v20 = v11 >= a2;
        if (!v20)
          break;
        if ((v11 != a2) | v28 & 1)
          goto LABEL_47;
        if (v33)
        {
          v21 = 1;
          v28 = 1;
          v22 = a2;
LABEL_39:
          v33 = v21;
          goto LABEL_42;
        }
        if (v27 == 0x8000000000000000)
        {
LABEL_47:
          swift_release();
          return;
        }
        v33 = 0;
        v28 = 1;
        v22 = a2;
LABEL_42:
        v34 = v11;
        sub_1AE518AF4(&v34, a4, a5, a6, a7, &v36);
        if (v8)
          goto LABEL_46;
        v8 = 0;
        v25 = v36;
        v37 = v13;
        v26 = *(_QWORD *)(v13 + 16);
        if (v26 >= *(_QWORD *)(v13 + 24) >> 1)
        {
          sub_1AE5217C4();
          v13 = v37;
        }
        *(_QWORD *)(v13 + 16) = v26 + 1;
        *(_QWORD *)(v13 + 8 * v26 + 32) = v25;
        v11 = v22;
      }
      v23 = __OFADD__(v11, a3);
      if (v23)
        v22 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
      else
        v22 = v11 + a3;
      v24 = 0x8000000000000000;
      if (!v23)
        v24 = 0;
      v27 = v24;
      v21 = !v23;
      goto LABEL_39;
    }
  }
  if (!(v28 & 1 | (v11 != a2)))
  {
    if (!v33 && v27 == 0x8000000000000000)
      goto LABEL_49;
    v28 = 1;
    v15 = a2;
    v11 = a2;
    goto LABEL_18;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
}

void sub_1AE5182C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  BOOL v13;
  BOOL v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  _BOOL4 v31;
  BOOL v32;
  uint64_t v33;
  BOOL v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  char v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char v55;
  BOOL v57;
  uint64_t v58;

  v7 = a3;
  v8 = a1;
  v9 = sub_1AE523FC4(a1, a2, a3);
  v58 = MEMORY[0x1E0DEE9D8];
  sub_1AE5217F8();
  if (v9 < 0)
    goto LABEL_82;
  v54 = v7;
  v51 = v7 >> 63;
  if (!v9)
  {
    v55 = 0;
    v53 = 0;
    v57 = 0;
    v11 = a2;
    goto LABEL_41;
  }
  v55 = 0;
  v57 = 0;
  v52 = (v7 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
  v53 = 0;
  v10 = v8;
  v11 = a2;
  do
  {
    v12 = v10 <= v11;
    if (v7 > 0)
      v12 = v10 >= v11;
    if (v12)
    {
      if (v55 & 1 | (v10 != v11))
        goto LABEL_79;
      if (v57)
      {
        v55 = 1;
        v8 = v11;
        v13 = 1;
      }
      else
      {
        if (v53 == 0x8000000000000000)
          goto LABEL_81;
        v13 = 0;
        v55 = 1;
        v8 = v11;
      }
    }
    else
    {
      v14 = __OFADD__(v10, v7);
      if (v14)
        v8 = v52;
      else
        v8 = v10 + v7;
      v15 = 0x8000000000000000;
      if (!v14)
        v15 = 0;
      v53 = v15;
      v13 = !v14;
    }
    v57 = v13;
    if (v10 >= sub_1AE925F20())
    {
      if (!*(_QWORD *)(a6 + 16))
        goto LABEL_35;
      v26 = 0x3E6461703CLL;
      v27 = 0xE500000000000000;
      goto LABEL_32;
    }
    v16 = sub_1AE925F50();
    if ((unint64_t)sub_1AE925F50() >> 14 < v16 >> 14)
      goto LABEL_80;
    v17 = sub_1AE926040();
    v18 = MEMORY[0x1AF4530E8](v17);
    v20 = v19;
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a6 + 16))
    {
      swift_bridgeObjectRetain();
      sub_1AE536EDC(v18, v20);
      v22 = v21;
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
      {
        if (*(_QWORD *)(a6 + 16))
        {
          v23 = sub_1AE536EDC(v18, v20);
          if ((v24 & 1) != 0)
          {
            v25 = *(_DWORD *)(*(_QWORD *)(a6 + 56) + 4 * v23);
            swift_bridgeObjectRelease();
            goto LABEL_36;
          }
        }
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a6 + 16))
    {
      v26 = 0x6E776F6E6B6E753CLL;
      v27 = 0xE90000000000003ELL;
LABEL_32:
      v28 = sub_1AE536EDC(v26, v27);
      if ((v29 & 1) != 0)
      {
        v25 = *(_DWORD *)(*(_QWORD *)(a6 + 56) + 4 * v28);
        goto LABEL_36;
      }
    }
LABEL_35:
    v25 = -1;
LABEL_36:
    v30 = *(_QWORD *)(v58 + 16);
    if (v30 >= *(_QWORD *)(v58 + 24) >> 1)
      sub_1AE5217F8();
    *(_QWORD *)(v58 + 16) = v30 + 1;
    *(_DWORD *)(v58 + 4 * v30 + 32) = v25;
    v10 = v8;
    --v9;
    v7 = v54;
    v11 = a2;
  }
  while (v9);
  while (1)
  {
LABEL_41:
    v31 = v8 <= v11;
    if (v7 > 0)
      v31 = v8 >= v11;
    if (!v31)
    {
      v34 = __OFADD__(v8, v7);
      if (v34)
        v33 = v51 ^ 0x7FFFFFFFFFFFFFFFLL;
      else
        v33 = v8 + v7;
      v35 = 0x8000000000000000;
      if (!v34)
        v35 = 0;
      v53 = v35;
      v32 = !v34;
      goto LABEL_56;
    }
    if ((v8 != v11) | v55 & 1)
      goto LABEL_77;
    if (v57)
    {
      v32 = 1;
      v55 = 1;
      v33 = v11;
LABEL_56:
      v57 = v32;
      goto LABEL_59;
    }
    if (v53 == 0x8000000000000000)
    {
LABEL_77:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v57 = 0;
    v55 = 1;
    v33 = v11;
LABEL_59:
    if (v8 >= sub_1AE925F20())
    {
      if (!*(_QWORD *)(a6 + 16))
        goto LABEL_73;
      v46 = 0x3E6461703CLL;
      v47 = 0xE500000000000000;
      goto LABEL_70;
    }
    v36 = sub_1AE925F50();
    if ((unint64_t)sub_1AE925F50() >> 14 < v36 >> 14)
      break;
    v37 = sub_1AE926040();
    v38 = MEMORY[0x1AF4530E8](v37);
    v40 = v39;
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a6 + 16))
    {
      swift_bridgeObjectRetain();
      sub_1AE536EDC(v38, v40);
      v42 = v41;
      swift_bridgeObjectRelease();
      if ((v42 & 1) != 0)
      {
        if (*(_QWORD *)(a6 + 16))
        {
          v43 = sub_1AE536EDC(v38, v40);
          if ((v44 & 1) != 0)
          {
            v45 = *(_DWORD *)(*(_QWORD *)(a6 + 56) + 4 * v43);
            swift_bridgeObjectRelease();
            goto LABEL_74;
          }
        }
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a6 + 16))
    {
      v46 = 0x6E776F6E6B6E753CLL;
      v47 = 0xE90000000000003ELL;
LABEL_70:
      v48 = sub_1AE536EDC(v46, v47);
      if ((v49 & 1) != 0)
      {
        v45 = *(_DWORD *)(*(_QWORD *)(a6 + 56) + 4 * v48);
        goto LABEL_74;
      }
    }
LABEL_73:
    v45 = -1;
LABEL_74:
    v50 = *(_QWORD *)(v58 + 16);
    if (v50 >= *(_QWORD *)(v58 + 24) >> 1)
      sub_1AE5217F8();
    *(_QWORD *)(v58 + 16) = v50 + 1;
    *(_DWORD *)(v58 + 4 * v50 + 32) = v45;
    v8 = v33;
    v7 = v54;
    v11 = a2;
  }
  __break(1u);
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
}

void sub_1AE51881C(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;

  v8 = *a1;
  if (*a1 < *(_QWORD *)(a2 + 16))
  {
    if (v8 < 0)
      goto LABEL_19;
    v9 = a3 - 1;
    if (__OFSUB__(a3, 1))
      goto LABEL_20;
    v10 = a2 + 16 * v8;
    v12 = *(_QWORD *)(v10 + 32);
    v11 = *(_QWORD *)(v10 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AE5182C4(0, v9, 1, v12, v11, a4);
    v14 = v13;
LABEL_5:
    *a5 = v14;
    return;
  }
  if (a3 < 1)
    goto LABEL_21;
  v14 = MEMORY[0x1E0DEE9D8];
  v15 = 1;
  do
  {
    if (*(_QWORD *)(a4 + 16))
    {
      v16 = sub_1AE536EDC(0x3E6461703CLL, 0xE500000000000000);
      if ((v17 & 1) != 0)
      {
        v18 = *(_DWORD *)(*(_QWORD *)(a4 + 56) + 4 * v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          goto LABEL_13;
LABEL_11:
        sub_1AE51AB98();
        v14 = v19;
        goto LABEL_13;
      }
    }
    v18 = 0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_11;
LABEL_13:
    v20 = *(_QWORD *)(v14 + 16);
    if (v20 >= *(_QWORD *)(v14 + 24) >> 1)
    {
      sub_1AE51AB98();
      v14 = v22;
    }
    *(_QWORD *)(v14 + 16) = v20 + 1;
    *(_DWORD *)(v14 + 4 * v20 + 32) = v18;
    if (a3 == v15)
      goto LABEL_5;
  }
  while (!__OFADD__(v15++, 1));
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
}

uint64_t sub_1AE5189D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_1AE524758();
  v1 = v0;
  sub_1AE4F7630();
  if ((sub_1AE5245C4() & 1) == 0 || (sub_1AE5245C4() & 1) == 0)
  {
    if ((sub_1AE5245C4() & 1) != 0)
    {
      v3 = v1;
      sub_1AE4F66C4();
    }
    else
    {
      v3 = v1;
      if ((sub_1AE5245C4() & 1) == 0)
      {
        sub_1AE524920();
        sub_1AE925F74();
        sub_1AE4FB75C();
        sub_1AE925F74();
        sub_1AE4F6648();
        return v3;
      }
      sub_1AE524920();
    }
    sub_1AE925F74();
    return v3;
  }
  sub_1AE4F66C4();
  return v1;
}

void sub_1AE518AF4(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;

  v6 = *a1;
  if ((*a1 & 0x8000000000000000) != 0)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v6 >= *(_QWORD *)(*(_QWORD *)a2 + 16))
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v9 = *(_QWORD *)a2 + 16 * v6;
  v10 = *(_QWORD *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain_n();
  v12 = sub_1AE925F20();
  swift_bridgeObjectRelease();
  v13 = v12 - 1;
  if (__OFSUB__(v12, 1))
    goto LABEL_56;
  if ((v13 & 0x8000000000000000) == 0 && *(_QWORD *)(*(_QWORD *)a3 + 16) < a4)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    if (a5 >= 1)
    {
      v59 = a5;
      v60 = a4;
      while (1)
      {
        swift_bridgeObjectRetain();
        v15 = sub_1AE925F50();
        if ((unint64_t)sub_1AE925F50() >> 14 < v15 >> 14)
          break;
        swift_bridgeObjectRetain();
        sub_1AE925F2C();
        v16 = sub_1AE926040();
        v18 = v17;
        v20 = v19;
        v22 = v21;
        swift_bridgeObjectRelease();
        v23 = MEMORY[0x1AF4530E8](v16, v18, v20, v22);
        v25 = v24;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = sub_1AE5165D8(v23, v25, 0xFFFFFFFFLL);
        swift_bridgeObjectRelease();
        if (v26 == -1)
        {
          a5 = v59;
          a4 = v60;
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1AE51AB98();
            v14 = v42;
          }
          v27 = *(_QWORD *)(v14 + 16);
          if (v27 >= *(_QWORD *)(v14 + 24) >> 1)
          {
            sub_1AE51AB98();
            v14 = v43;
          }
          a4 = v60;
          *(_QWORD *)(v14 + 16) = v27 + 1;
          *(_DWORD *)(v14 + 4 * v27 + 32) = v26;
          v28 = __OFADD__(v13, 1);
          v29 = v13 + 1;
          if (v28)
            goto LABEL_53;
          swift_bridgeObjectRetain();
          v30 = sub_1AE925F20();
          swift_bridgeObjectRelease();
          if (v29 >= v30)
          {
            swift_bridgeObjectRelease();
            v10 = 0;
            v11 = 0xE000000000000000;
          }
          else
          {
            v31 = sub_1AE925F50();
            v32 = HIBYTE(v11) & 0xF;
            if ((v11 & 0x2000000000000000) == 0)
              v32 = v10 & 0xFFFFFFFFFFFFLL;
            if (4 * v32 < v31 >> 14)
              goto LABEL_57;
            swift_bridgeObjectRetain();
            v33 = sub_1AE926040();
            v35 = v34;
            v37 = v36;
            v39 = v38;
            swift_bridgeObjectRelease();
            v10 = MEMORY[0x1AF4530E8](v33, v35, v37, v39);
            v41 = v40;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v11 = v41;
          }
          swift_bridgeObjectRetain();
          v13 = sub_1AE925F20();
          swift_bridgeObjectRelease();
          a5 = v59;
        }
        v28 = __OFSUB__(v13--, 1);
        if (v28)
          goto LABEL_52;
        if (v13 < 0 || *(_QWORD *)(*(_QWORD *)a3 + 16) >= (unint64_t)a4)
          goto LABEL_29;
        if (*(_QWORD *)(v14 + 16) >= (unint64_t)a5)
          goto LABEL_49;
      }
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
LABEL_49:
    swift_bridgeObjectRelease();
LABEL_50:
    *a6 = v14;
    return;
  }
  v14 = MEMORY[0x1E0DEE9D8];
LABEL_29:
  v44 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v44 = v10 & 0xFFFFFFFFFFFFLL;
  if (v44)
  {
    sub_1AE925F98();
    if (v45)
    {
      v46 = a5;
      do
      {
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(*(_QWORD *)a3 + 16) >= a4)
          break;
        if (*(_QWORD *)(v14 + 16) >= a5)
          goto LABEL_49;
        v47 = sub_1AE5165D8(4935253, 0xE300000000000000, 0xFFFFFFFFLL);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE51AB98();
          v14 = v50;
        }
        v48 = *(_QWORD *)(v14 + 16);
        if (v48 >= *(_QWORD *)(v14 + 24) >> 1)
        {
          sub_1AE51AB98();
          v14 = v51;
        }
        *(_QWORD *)(v14 + 16) = v48 + 1;
        *(_DWORD *)(v14 + 4 * v48 + 32) = v47;
        sub_1AE925F98();
        a5 = v46;
      }
      while (v49);
    }
  }
  swift_bridgeObjectRelease();
  v52 = *(_QWORD *)(v14 + 16);
  v53 = a5 - v52;
  if (a5 <= v52)
    goto LABEL_50;
  if (a5 - v52 >= 0)
  {
    do
    {
      v54 = sub_1AE5165D8(0x3E6461703CLL, 0xE500000000000000, 0xFFFFFFFFLL);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE51AB98();
        v14 = v56;
      }
      v55 = *(_QWORD *)(v14 + 16);
      if (v55 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_1AE51AB98();
        v14 = v57;
      }
      *(_QWORD *)(v14 + 16) = v55 + 1;
      *(_DWORD *)(v14 + 4 * v55 + 32) = v54;
      --v53;
    }
    while (v53);
    goto LABEL_50;
  }
LABEL_58:
  __break(1u);
}

void sub_1AE5190DC(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1AE5190E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 88) = a4;
  *(_QWORD *)(v6 + 96) = v5;
  *(_BYTE *)(v6 + 57) = a5;
  *(_QWORD *)(v6 + 72) = a2;
  *(_QWORD *)(v6 + 80) = a3;
  *(_QWORD *)(v6 + 64) = a1;
  *(_QWORD *)(v6 + 104) = sub_1AE501548(&qword_1EED9ADA8);
  *(_QWORD *)(v6 + 112) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AE519150()
{
  uint64_t v0;
  char v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD, uint64_t, ValueMetadata *, uint64_t, uint64_t);

  v1 = *(_BYTE *)(v0 + 57);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD **)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = v2[5];
  v7 = v2[6];
  sub_1AE4F9858(v2 + 2, v6);
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v5;
  *(_QWORD *)(v0 + 32) = 0xD000000000000019;
  *(_QWORD *)(v0 + 40) = 0x80000001AE97C480;
  *(_QWORD *)(v0 + 48) = v3;
  *(_BYTE *)(v0 + 56) = v1 & 1;
  v10 = (uint64_t (*)(_QWORD, uint64_t, ValueMetadata *, uint64_t, uint64_t))(**(int **)(v7 + 32)
                                                                                   + *(_QWORD *)(v7 + 32));
  sub_1AE4FB75C();
  sub_1AE4F66CC();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v8;
  *v8 = v0;
  v8[1] = sub_1AE51923C;
  return v10(*(_QWORD *)(v0 + 112), v0 + 16, &type metadata for LocationEmbedderInferenceInterface, v6, v7);
}

uint64_t sub_1AE51923C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1AE4FB74C();
  *v2 = *v1;
  *(_QWORD *)(v3 + 128) = v0;
  swift_task_dealloc();
  sub_1AE4F665C();
  sub_1AE4F6648();
  swift_bridgeObjectRelease();
  sub_1AE4F9070();
  return swift_task_switch();
}

uint64_t sub_1AE5192BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 64);
  sub_1AE5244F0(v1, v3);
  v4 = *(_QWORD *)(v1 + *(int *)(v2 + 28));
  sub_1AE524534(v1, &qword_1EED9ADA8);
  *(_QWORD *)(v3 + *(int *)(sub_1AE501548(&qword_1EED9AD50) + 28)) = v4;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AE519338()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AE51936C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v12;
  _QWORD *v13;
  char *v15;
  char v16;
  uint64_t v17;

  v8[8] = a4;
  v8[9] = v17;
  sub_1AE501548(&qword_1EED9AD60);
  v8[10] = swift_task_alloc();
  v8[11] = swift_task_alloc();
  sub_1AE501548(&qword_1EED9AD50);
  v12 = swift_task_alloc();
  v8[12] = v12;
  v15 = (char *)&dword_1EED9ADA0 + dword_1EED9ADA0;
  v13 = (_QWORD *)swift_task_alloc();
  v8[13] = v13;
  *v13 = v8;
  v13[1] = sub_1AE519470;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))v15)(v12, a6, a7, a8, v16 & 1);
}

uint64_t sub_1AE519470()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1AE4FB74C();
  *v2 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  swift_task_dealloc();
  sub_1AE4F9070();
  return swift_task_switch();
}

uint64_t sub_1AE5194C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE524480(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 88), &qword_1EED9AD50);
  sub_1AE501548((uint64_t *)&unk_1EED9AD68);
  swift_storeEnumTagMultiPayload();
  v1 = sub_1AE524830();
  sub_1AE5249F8(v1, v2, &qword_1EED9AD60);
  sub_1AE505C8C();
  sub_1AE5249A0();
  swift_endAccess();
  sub_1AE524858();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_1AE4FC4C0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE519568()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  **(_QWORD **)(v0 + 88) = *(_QWORD *)(v0 + 112);
  sub_1AE501548((uint64_t *)&unk_1EED9AD68);
  swift_storeEnumTagMultiPayload();
  v1 = sub_1AE524830();
  sub_1AE5249F8(v1, v2, &qword_1EED9AD60);
  sub_1AE505C8C();
  sub_1AE5249A0();
  swift_endAccess();
  sub_1AE524858();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_1AE4FC4C0(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1AE519600(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE51960C(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE519618(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE519624(uint64_t a1)
{
  sub_1AE519BDC(a1, (uint64_t *)&unk_1EED9A410);
}

void sub_1AE519630(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE51963C(uint64_t a1)
{
  sub_1AE519BDC(a1, (uint64_t *)&unk_1EED9ACD0);
}

void sub_1AE519648(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE519654(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE519660(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED994F0);
}

void sub_1AE51966C(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE519678(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE519684(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE519690(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9AD18);
}

void sub_1AE51969C(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE5196A8(uint64_t a1)
{
  sub_1AE5196C0(a1, (void (*)(_QWORD))type metadata accessor for Node);
}

void sub_1AE5196B4(uint64_t a1)
{
  sub_1AE5196C0(a1, (void (*)(_QWORD))type metadata accessor for EntityResolutionRankingService.RankedEntities.ScoredEntity);
}

void sub_1AE5196C0(uint64_t a1, void (*a2)(_QWORD))
{
  if (a1 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE50740C();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      *(_QWORD *)((sub_1AE5247C4() & 0xFFFFFFFFFFFFF8) + 0x10) = a1;
    }
    sub_1AE506B30();
  }
}

void sub_1AE519734(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9AC90);
}

void sub_1AE519740(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A5B0);
}

void sub_1AE51974C(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9ACF8);
}

void sub_1AE519758(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE519764(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE519770(uint64_t a1)
{
  sub_1AE5196C0(a1, (void (*)(_QWORD))type metadata accessor for EntityWithAlias);
}

void sub_1AE51977C(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE519788(uint64_t a1)
{
  sub_1AE5196C0(a1, (void (*)(_QWORD))type metadata accessor for PersonEntityTaggingService.ScoreRankedPersonEntityTags.ScoredPersonEntityTag);
}

void sub_1AE519794(uint64_t a1)
{
  sub_1AE5196C0(a1, (void (*)(_QWORD))type metadata accessor for PersonEntityTaggingService.ScoreRankedEntityTagPersons.ScoredPerson);
}

void sub_1AE5197A0(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE5197AC(uint64_t a1)
{
  sub_1AE5197B8(a1);
}

void sub_1AE5197B8(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE50740C();
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(sub_1AE926244() + 16) = a1;
    sub_1AE506B30();
  }
}

void sub_1AE519820(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A8E0);
}

uint64_t sub_1AE51982C(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9AA30);
}

uint64_t sub_1AE519838(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9AA38);
}

void sub_1AE519844(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A8D8);
}

void sub_1AE519850(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A8C8);
}

void sub_1AE51985C(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A8B8);
}

void sub_1AE519868(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A8B0);
}

void sub_1AE519874(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A8A8);
}

void sub_1AE519880(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A8A0);
}

void sub_1AE51988C(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A898);
}

void sub_1AE519898(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A890);
}

uint64_t sub_1AE5198A4(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9A888);
}

void sub_1AE5198B0(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A880);
}

void sub_1AE5198BC(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A878);
}

void sub_1AE5198C8(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A870);
}

void sub_1AE5198D4(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A868);
}

void sub_1AE5198E0(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A860);
}

void sub_1AE5198EC(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A858);
}

uint64_t sub_1AE5198F8(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9A850);
}

void sub_1AE519904(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9AA40);
}

void sub_1AE519910(uint64_t a1)
{
  sub_1AE519BDC(a1, (uint64_t *)&unk_1EED9A840);
}

uint64_t sub_1AE51991C(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9E350);
}

void sub_1AE519928(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED99540);
}

void sub_1AE519934(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9AA20);
}

void sub_1AE519940(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9AA28);
}

void sub_1AE51994C(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9AA18);
}

void sub_1AE519958(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9AA10);
}

void sub_1AE519964(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9AA08);
}

void sub_1AE519970(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9AA00);
}

void sub_1AE51997C(uint64_t a1)
{
  sub_1AE519990(a1, &qword_1EED9A668);
}

void sub_1AE519990(uint64_t a1, unint64_t *a2)
{
  if (a1 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE50740C();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_1AE524254(0, a2);
      *(_QWORD *)((sub_1AE5247C4() & 0xFFFFFFFFFFFFF8) + 0x10) = a1;
    }
    sub_1AE506B30();
  }
}

uint64_t sub_1AE519A04(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9A780);
}

uint64_t sub_1AE519A10(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9A750);
}

uint64_t sub_1AE519A1C(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9A770);
}

uint64_t sub_1AE519A28(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9A740);
}

uint64_t sub_1AE519A34(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9A760);
}

uint64_t sub_1AE519A40(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9A730);
}

uint64_t sub_1AE519A4C(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9A720);
}

uint64_t sub_1AE519A58(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9A710);
}

uint64_t sub_1AE519A64(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9A700);
}

uint64_t sub_1AE519A70(uint64_t a1)
{
  return sub_1AE519A7C(a1, &qword_1EED9A6F0);
}

uint64_t sub_1AE519A7C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t result;

  if (a1 < 0)
  {
    sub_1AE4FCDB0();
    result = sub_1AE50740C();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_1AE501548(a2);
      v4 = sub_1AE926244();
      *(_QWORD *)(v4 + 16) = a1;
    }
    else
    {
      v4 = MEMORY[0x1E0DEE9D8];
    }
    sub_1AE501548(a2);
    return v4;
  }
  return result;
}

void sub_1AE519B24(uint64_t a1)
{
  sub_1AE519990(a1, &qword_1EED94D28);
}

void sub_1AE519B38(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A6B0);
}

void sub_1AE519B44(uint64_t a1)
{
  sub_1AE519990(a1, &qword_1EED9A670);
}

void sub_1AE519B58(uint64_t a1)
{
  sub_1AE519990(a1, &qword_1EED9A698);
}

void sub_1AE519B6C(uint64_t a1)
{
  sub_1AE519990(a1, &qword_1EED9A690);
}

void sub_1AE519B80(uint64_t a1)
{
  sub_1AE519990(a1, &qword_1EED9A688);
}

void sub_1AE519B94(uint64_t a1)
{
  sub_1AE519990(a1, &qword_1EED9A680);
}

void sub_1AE519BA8(uint64_t a1)
{
  sub_1AE519990(a1, &qword_1EED9A678);
}

void sub_1AE519BBC(uint64_t a1)
{
  sub_1AE519990(a1, &qword_1EED9A660);
}

void sub_1AE519BD0(uint64_t a1)
{
  sub_1AE519BDC(a1, &qword_1EED9A5A0);
}

void sub_1AE519BDC(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE50740C();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_1AE501548(a2);
      *(_QWORD *)(sub_1AE5247C4() + 16) = a1;
    }
    sub_1AE506B30();
  }
}

void sub_1AE519C48()
{
  sub_1AE519FCC();
}

void sub_1AE519C64()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1AE5245DC();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v1)
  {
    sub_1AE501548(&qword_1EED9AAC8);
    v5 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE509D44(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1AE5245E8();
    sub_1AE51FA54(v6, v7, v8);
    sub_1AE4FC4B4();
  }
  else
  {
    v9 = sub_1AE5245A0();
    sub_1AE51BFDC(v9, v10, v11, v12);
  }
  sub_1AE4FCDD0();
}

void sub_1AE519D00()
{
  sub_1AE519E2C();
}

void sub_1AE519D1C()
{
  sub_1AE51A2B4();
}

void sub_1AE519D38()
{
  sub_1AE519EEC();
}

void sub_1AE519D54()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  size_t v7;
  char *v8;
  size_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  sub_1AE5245DC();
  if ((v3 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v4 != v5)
    {
      sub_1AE50A240();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v2)
  {
    sub_1AE501548(&qword_1EED9A440);
    v6 = (_QWORD *)sub_1AE4F66BC();
    v7 = j__malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * v7 - 64;
  }
  if ((v0 & 1) != 0)
  {
    v8 = (char *)sub_1AE5245E8();
    sub_1AE51FB44(v8, v9, v10);
    sub_1AE4FC4B4();
  }
  else
  {
    v11 = sub_1AE5245A0();
    sub_1AE51C1D8(v11, v12, v13, v14);
  }
  sub_1AE4F6624();
}

void sub_1AE519DF4()
{
  sub_1AE51A1F0();
}

void sub_1AE519E10()
{
  sub_1AE519E2C();
}

void sub_1AE519E2C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char *v12;
  size_t v13;
  char *v14;

  sub_1AE524568();
  if ((v4 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v5 != v6)
    {
      sub_1AE50A240();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v3)
  {
    sub_1AE524560(v7, v8, v9, v10, v11);
    v12 = (char *)sub_1AE4F66BC();
    v13 = j__malloc_size(v12);
    sub_1AE5097EC((uint64_t)(v13 - 32) / 64);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v12 + 32;
  if ((v1 & 1) != 0)
  {
    sub_1AE5207B4((char *)(v0 + 32), v2, v14);
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE5247D0(v7, v8, (uint64_t)v14);
  }
  sub_1AE4FCDD0();
}

void sub_1AE519ED0()
{
  sub_1AE519EEC();
}

void sub_1AE519EEC()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  sub_1AE508E48();
  sub_1AE52458C();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1AE4F66BC();
    v5 = sub_1AE4FB70C(v10);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1AE5085C0();
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE52457C(v5, v6, v1 + 32);
  }
  sub_1AE4F66A8();
}

void sub_1AE519F78()
{
  sub_1AE51B1BC();
}

void sub_1AE519F94()
{
  sub_1AE51BE18();
}

void sub_1AE519FB0()
{
  sub_1AE519FCC();
}

void sub_1AE519FCC()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;

  sub_1AE52458C();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1AE4F66BC();
    v11 = j__malloc_size(v10);
    sub_1AE5097EC((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (const void *)MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1AE5085C0();
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE52457C(v5, v6, (uint64_t)v10 + 32);
  }
  sub_1AE4FCDD0();
}

void sub_1AE51A068()
{
  sub_1AE51A494();
}

void sub_1AE51A084()
{
  sub_1AE51A0A0();
}

void sub_1AE51A0A0()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  sub_1AE508E48();
  sub_1AE52458C();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1AE4F66BC();
    v5 = sub_1AE4FB70C(v10);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1AE5085C0();
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE52457C(v5, v6, v1 + 32);
  }
  sub_1AE4F66A8();
}

void sub_1AE51A12C()
{
  sub_1AE51A140();
}

void sub_1AE51A140()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  sub_1AE506F78();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE5245F4();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE524604(v10);
  }
  if ((v0 & 1) != 0)
  {
    v11 = (char *)sub_1AE524704();
    sub_1AE51FEB0(v11, v12, v13);
    sub_1AE4FC4B4();
  }
  else
  {
    v14 = sub_1AE524634();
    sub_1AE51C980(v14, v15, v16, v17);
  }
  sub_1AE4FCDD0();
}

void sub_1AE51A1D4()
{
  sub_1AE51A1F0();
}

void sub_1AE51A1F0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  char *v13;

  sub_1AE508E48();
  sub_1AE524568();
  if ((v4 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v5 != v6)
    {
      sub_1AE50A240();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v3)
  {
    sub_1AE524560(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)sub_1AE4F66BC();
    v7 = sub_1AE4FB70C(v12);
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v13 = (char *)(v3 + 32);
  if ((v1 & 1) != 0)
  {
    sub_1AE52080C((char *)(v0 + 32), v2, v13);
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE5247D0(v7, v8, (uint64_t)v13);
  }
  sub_1AE4F66A8();
}

void sub_1AE51A284()
{
  sub_1AE51A140();
}

void sub_1AE51A298()
{
  sub_1AE51A2B4();
}

void sub_1AE51A2B4()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;

  sub_1AE52458C();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1AE4F66BC();
    v11 = j__malloc_size(v10);
    sub_1AE5097EC((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    v10 = (const void *)MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1AE5085C0();
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE52457C(v5, v6, (uint64_t)v10 + 32);
  }
  sub_1AE4FCDD0();
}

void sub_1AE51A350()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;
  char *v12;
  uint64_t v13;
  char *v14;

  sub_1AE506F78();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE5245F4();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1AE4F66BC();
    v11 = j__malloc_size(v10);
    sub_1AE5246D8((uint64_t)(v11 - 32) / 8);
  }
  if ((v0 & 1) != 0)
  {
    v12 = (char *)sub_1AE524704();
    sub_1AE520644(v12, v13, v14);
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE524634();
    sub_1AE51F8E8();
  }
  sub_1AE4FCDD0();
}

void sub_1AE51A3F4()
{
  sub_1AE51AB98();
}

void sub_1AE51A410()
{
  sub_1AE51A674();
}

void sub_1AE51A424()
{
  sub_1AE51A2B4();
}

void sub_1AE51A440()
{
  sub_1AE519EEC();
}

void sub_1AE51A45C()
{
  sub_1AE51BE18();
}

void sub_1AE51A478()
{
  sub_1AE51A494();
}

void sub_1AE51A494()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  sub_1AE508E48();
  sub_1AE52458C();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1AE4F66BC();
    v5 = sub_1AE4FB70C(v10);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1AE5085C0();
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE52457C(v5, v6, v1 + 32);
  }
  sub_1AE4F66A8();
}

void sub_1AE51A520()
{
  sub_1AE51A1F0();
}

void sub_1AE51A53C()
{
  sub_1AE51A2B4();
}

void sub_1AE51A558()
{
  sub_1AE519E2C();
}

void sub_1AE51A574()
{
  sub_1AE51A2B4();
}

void sub_1AE51A590()
{
  sub_1AE519E2C();
}

void sub_1AE51A5AC()
{
  sub_1AE51A2B4();
}

void sub_1AE51A5C8()
{
  sub_1AE519E2C();
}

void sub_1AE51A5E4()
{
  sub_1AE51A2B4();
}

void sub_1AE51A600()
{
  sub_1AE51A7D8();
}

void sub_1AE51A614()
{
  sub_1AE51A9F4();
}

void sub_1AE51A630()
{
  sub_1AE51A93C();
}

void sub_1AE51A644()
{
  sub_1AE51A0A0();
}

void sub_1AE51A660()
{
  sub_1AE51A674();
}

void sub_1AE51A674()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;

  sub_1AE506F78();
  if ((v6 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v10 != v11)
    {
      sub_1AE50A240();
      if (v10)
      {
        __break(1u);
        goto LABEL_22;
      }
      sub_1AE503284();
    }
  }
  else
  {
    v9 = v5;
  }
  v12 = *(_QWORD *)(v0 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(v0 + 16);
  else
    v13 = v9;
  if (!v13)
    goto LABEL_17;
  sub_1AE524560(v4, v5, v6, v7, v8);
  sub_1AE501548(v1);
  v14 = (const void *)sub_1AE524688();
  sub_1AE5248F8(v14);
  if (!v3 || ((sub_1AE524948(), v16) ? (v16 = v3 == -1) : (v16 = 0), v16))
  {
LABEL_22:
    sub_1AE4FCDB0();
    sub_1AE5249EC();
    __break(1u);
    return;
  }
  sub_1AE5246D8(v15 / v3);
LABEL_17:
  sub_1AE501548(v1);
  sub_1AE524878();
  if ((v2 & 1) != 0)
  {
    sub_1AE520CEC(v0 + v17, v12);
    sub_1AE4FC4B4();
  }
  else
  {
    v18 = sub_1AE524634();
    sub_1AE51F21C(v18, v19, v20, v21, v22);
  }
  sub_1AE52476C();
}

void sub_1AE51A7A8()
{
  sub_1AE519FCC();
}

void sub_1AE51A7C4()
{
  sub_1AE51A7D8();
}

void sub_1AE51A7D8()
{
  uint64_t v0;
  void (*v1)(_QWORD);
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD);

  sub_1AE506F78();
  if ((v6 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v10 != v11)
    {
      sub_1AE50A240();
      if (v10)
      {
        __break(1u);
        goto LABEL_22;
      }
      sub_1AE503284();
    }
  }
  else
  {
    v9 = v5;
  }
  v12 = *(_QWORD *)(v0 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(v0 + 16);
  else
    v13 = v9;
  if (!v13)
    goto LABEL_17;
  sub_1AE524560(v4, v5, v6, v7, v8);
  v1(0);
  v14 = (const void *)sub_1AE524688();
  sub_1AE5248F8(v14);
  if (!v3 || ((sub_1AE524948(), v16) ? (v16 = v3 == -1) : (v16 = 0), v16))
  {
LABEL_22:
    sub_1AE4FCDB0();
    sub_1AE5249EC();
    __break(1u);
    return;
  }
  sub_1AE5246D8(v15 / v3);
LABEL_17:
  v1(0);
  sub_1AE524878();
  if ((v2 & 1) != 0)
  {
    sub_1AE520DD0(v0 + v17, v12);
    sub_1AE4FC4B4();
  }
  else
  {
    v18 = sub_1AE524634();
    sub_1AE51F62C(v18, v19, v20, v21, v22);
  }
  sub_1AE52476C();
}

void sub_1AE51A90C()
{
  sub_1AE51AFE0();
}

void sub_1AE51A928()
{
  sub_1AE51A93C();
}

void sub_1AE51A93C()
{
  uint64_t v0;
  void (*v1)(_QWORD, uint64_t, uint64_t, uint64_t);
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  char *v14;
  uint64_t v15;
  char *v16;

  sub_1AE506F78();
  if ((v5 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v6 != v7)
    {
      sub_1AE50A240();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE5245F4();
  if (v4)
  {
    sub_1AE524560(v8, v9, v10, v11, v12);
    v13 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE524604(v13);
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
  }
  if ((v2 & 1) != 0)
  {
    v14 = (char *)sub_1AE524704();
    sub_1AE5201B4(v14, v15, v16);
    sub_1AE4FC4B4();
  }
  else
  {
    v1(0, v3, v4 + 32, v0);
  }
  sub_1AE4FCDD0();
}

void sub_1AE51A9D8()
{
  sub_1AE51A9F4();
}

void sub_1AE51A9F4()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;

  sub_1AE52458C();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1AE4F66BC();
    v11 = j__malloc_size(v10);
    sub_1AE5097EC((uint64_t)(v11 - 32) / 32);
  }
  else
  {
    v10 = (const void *)MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1AE5085C0();
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE52457C(v5, v6, (uint64_t)v10 + 32);
  }
  sub_1AE4FCDD0();
}

void sub_1AE51AA90()
{
  sub_1AE51B0A4();
}

void sub_1AE51AAAC()
{
  sub_1AE51A0A0();
}

void sub_1AE51AAC8()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  sub_1AE5245DC();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v1)
  {
    sub_1AE501548(&qword_1ED31B988);
    v5 = (const void *)sub_1AE4F66BC();
    sub_1AE5248A8(v5);
    sub_1AE524628(v6 / 8);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)sub_1AE5245E8();
    sub_1AE520644(v7, v8, v9);
    sub_1AE4FC4B4();
  }
  else
  {
    v10 = sub_1AE5245A0();
    sub_1AE51CA34(v10, v11, v12, v13);
  }
  sub_1AE4F6624();
}

void sub_1AE51AB68()
{
  sub_1AE51A350();
}

void sub_1AE51AB7C()
{
  sub_1AE51AB98();
}

void sub_1AE51AB98()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;

  sub_1AE52458C();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1AE4F66BC();
    v11 = j__malloc_size(v10);
    sub_1AE5097EC((uint64_t)(v11 - 32) / 4);
  }
  else
  {
    v10 = (const void *)MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1AE5085C0();
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE52457C(v5, v6, (uint64_t)v10 + 32);
  }
  sub_1AE4FCDD0();
}

void sub_1AE51AC34()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1AE5245DC();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v1)
  {
    sub_1AE501548((uint64_t *)&unk_1ED30FD90);
    v5 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE509D44(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1AE5245E8();
    sub_1AE520474(v6, v7, v8);
    sub_1AE4FC4B4();
  }
  else
  {
    v9 = sub_1AE5245A0();
    sub_1AE51D760(v9, v10, v11, v12);
  }
  sub_1AE4FCDD0();
}

void sub_1AE51ACD0()
{
  sub_1AE51BE18();
}

void sub_1AE51ACEC()
{
  sub_1AE51AD10();
}

void sub_1AE51AD10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  void (*v5)(uint64_t, uint64_t, _QWORD *);
  void (*v6)(uint64_t, uint64_t, _QWORD *);
  void (*v7)(_QWORD, uint64_t, _QWORD *, uint64_t, uint64_t);
  void (*v8)(_QWORD, uint64_t, _QWORD *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;

  sub_1AE508E48();
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = v3;
  v12 = v0;
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v14 != v15)
    {
      sub_1AE50A240();
      if (v14)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  else
  {
    v13 = v1;
  }
  v16 = *(_QWORD *)(v11 + 16);
  if (v13 <= v16)
    v17 = *(_QWORD *)(v11 + 16);
  else
    v17 = v13;
  if (v17)
  {
    sub_1AE524560(v0, v1, v2, v3, v4);
    v18 = (_QWORD *)sub_1AE4F66BC();
    j__malloc_size(v18);
    sub_1AE5249B8();
    v18[2] = v16;
    v18[3] = v19;
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v20 = v18 + 4;
  if ((v12 & 1) != 0)
  {
    v6(v11 + 32, v16, v20);
    sub_1AE4FC4B4();
  }
  else
  {
    v8(0, v16, v20, v11, v10);
  }
  sub_1AE4F66A8();
}

void sub_1AE51ADD4()
{
  sub_1AE519FCC();
}

void sub_1AE51ADF0()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1AE5245DC();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v1)
  {
    sub_1AE501548((uint64_t *)&unk_1ED30FDE8);
    v5 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE509D44(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1AE5245E8();
    sub_1AE5204D4(v6, v7, v8);
    sub_1AE4FC4B4();
  }
  else
  {
    v9 = sub_1AE5245A0();
    sub_1AE51DA48(v9, v10, v11, v12);
  }
  sub_1AE4FCDD0();
}

void sub_1AE51AE8C()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1AE5245DC();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v1)
  {
    sub_1AE501548((uint64_t *)&unk_1ED30FDC0);
    v5 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE509D44(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1AE5245E8();
    sub_1AE520274(v6, v7, v8);
    sub_1AE4FC4B4();
  }
  else
  {
    v9 = sub_1AE5245A0();
    sub_1AE51DB44(v9, v10, v11, v12);
  }
  sub_1AE4FCDD0();
}

void sub_1AE51AF28()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1AE5245DC();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v1)
  {
    sub_1AE501548(&qword_1ED30FD88);
    v5 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE509D44(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1AE5245E8();
    sub_1AE520530(v6, v7, v8);
    sub_1AE4FC4B4();
  }
  else
  {
    v9 = sub_1AE5245A0();
    sub_1AE51DC40(v9, v10, v11, v12);
  }
  sub_1AE4FCDD0();
}

void sub_1AE51AFC4()
{
  sub_1AE51AFE0();
}

void sub_1AE51AFE0()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  sub_1AE508E48();
  sub_1AE52458C();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1AE4F66BC();
    v5 = sub_1AE4FB70C(v10);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1AE5085C0();
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE52457C(v5, v6, v1 + 32);
  }
  sub_1AE4F66A8();
}

void sub_1AE51B06C()
{
  sub_1AE51BD10();
}

void sub_1AE51B088()
{
  sub_1AE51B0A4();
}

void sub_1AE51B0A4()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  sub_1AE508E48();
  sub_1AE52458C();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1AE4F66BC();
    v5 = sub_1AE4FB70C(v10);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1AE5085C0();
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE52457C(v5, v6, v1 + 32);
  }
  sub_1AE4F66A8();
}

void sub_1AE51B130()
{
  sub_1AE51A9F4();
}

void sub_1AE51B14C()
{
  sub_1AE51AD10();
}

void sub_1AE51B170()
{
  sub_1AE51A674();
}

void sub_1AE51B184()
{
  sub_1AE51A2B4();
}

void sub_1AE51B1A0()
{
  sub_1AE51B1BC();
}

void sub_1AE51B1BC()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  sub_1AE508E48();
  sub_1AE52458C();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1AE4F66BC();
    v5 = sub_1AE4FB70C(v10);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1AE5085C0();
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE52457C(v5, v6, v1 + 32);
  }
  sub_1AE4F66A8();
}

void sub_1AE51B248()
{
  sub_1AE51A1F0();
}

void sub_1AE51B264()
{
  sub_1AE51A2B4();
}

void sub_1AE51B280()
{
  sub_1AE51A7D8();
}

void sub_1AE51B294()
{
  sub_1AE51B2A0();
}

void sub_1AE51B2A0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  size_t v12;
  char *v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;

  sub_1AE5245DC();
  if ((v3 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v4 != v5)
    {
      sub_1AE50A240();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v2)
  {
    sub_1AE524560(v6, v7, v8, v9, v10);
    v11 = (_QWORD *)sub_1AE4F66BC();
    v12 = j__malloc_size(v11);
    v11[2] = v1;
    v11[3] = 2 * v12 - 64;
  }
  if ((v0 & 1) != 0)
  {
    v13 = (char *)sub_1AE5245E8();
    sub_1AE51FB44(v13, v14, v15);
    sub_1AE4FC4B4();
  }
  else
  {
    v16 = sub_1AE5245A0();
    sub_1AE51F3C0(v16, v17, v18, v19);
  }
  sub_1AE4F6624();
}

void sub_1AE51B338()
{
  sub_1AE51A2B4();
}

void sub_1AE51B354()
{
  sub_1AE51A1F0();
}

void sub_1AE51B370()
{
  sub_1AE51A1F0();
}

void sub_1AE51B38C()
{
  sub_1AE51A2B4();
}

void sub_1AE51B3A8()
{
  sub_1AE519E2C();
}

void sub_1AE51B3C4()
{
  sub_1AE51A0A0();
}

void sub_1AE51B3E0()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1AE5245DC();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v1)
  {
    sub_1AE501548(&qword_1EED9AB50);
    v5 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE509D44(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1AE5245E8();
    sub_1AE520728(v6, v7, v8);
    sub_1AE4FC4B4();
  }
  else
  {
    v9 = sub_1AE5245A0();
    sub_1AE51E3D4(v9, v10, v11, v12);
  }
  sub_1AE4FCDD0();
}

void sub_1AE51B47C()
{
  sub_1AE519E2C();
}

void sub_1AE51B498()
{
  sub_1AE519E2C();
}

void sub_1AE51B4B4()
{
  sub_1AE51A2B4();
}

void sub_1AE51B4D0()
{
  sub_1AE51A1F0();
}

void sub_1AE51B4EC()
{
  sub_1AE51A2B4();
}

void sub_1AE51B508()
{
  sub_1AE51B2A0();
}

void sub_1AE51B514()
{
  sub_1AE51A2B4();
}

void sub_1AE51B530()
{
  sub_1AE51A2B4();
}

void sub_1AE51B54C()
{
  sub_1AE51A7D8();
}

void sub_1AE51B560()
{
  sub_1AE51A2B4();
}

void sub_1AE51B57C()
{
  sub_1AE51B2A0();
}

void sub_1AE51B588()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  sub_1AE5245DC();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v1)
  {
    sub_1AE501548(&qword_1EED9A5E8);
    v5 = (const void *)sub_1AE4F66BC();
    sub_1AE5248A8(v5);
    sub_1AE524628(v6 / 2);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)sub_1AE5245E8();
    sub_1AE5208CC(v7, v8, v9);
    sub_1AE4FC4B4();
  }
  else
  {
    v10 = sub_1AE5245A0();
    sub_1AE51E968(v10, v11, v12, v13);
  }
  sub_1AE4F6624();
}

void sub_1AE51B628()
{
  sub_1AE51B0A4();
}

void sub_1AE51B644()
{
  sub_1AE51B658();
}

void sub_1AE51B658()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  sub_1AE506F78();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE5245F4();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (const void *)sub_1AE4F66BC();
    v11 = j__malloc_size(v10);
    sub_1AE5246D8((uint64_t)(v11 - 32) / 32);
  }
  if ((v0 & 1) != 0)
  {
    v12 = (char *)sub_1AE524704();
    sub_1AE520954(v12, v13, v14);
    sub_1AE4FC4B4();
  }
  else
  {
    v15 = sub_1AE524634();
    sub_1AE51F468(v15, v16, v17, v18);
  }
  sub_1AE4FCDD0();
}

void sub_1AE51B6FC()
{
  sub_1AE51A9F4();
}

void sub_1AE51B718()
{
  sub_1AE51A9F4();
}

void sub_1AE51B734()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  const void *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  sub_1AE5245DC();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v1)
  {
    sub_1AE501548((uint64_t *)&unk_1EED9AA90);
    v5 = (const void *)sub_1AE4F66BC();
    sub_1AE5248A8(v5);
    sub_1AE524628(v6 / 64);
  }
  if ((v0 & 1) != 0)
  {
    v7 = (char *)sub_1AE5245E8();
    sub_1AE5209AC(v7, v8, v9);
    sub_1AE4FC4B4();
  }
  else
  {
    v10 = sub_1AE5245A0();
    sub_1AE51ED5C(v10, v11, v12, v13);
  }
  sub_1AE4F6624();
}

void sub_1AE51B7D4()
{
  sub_1AE51B2A0();
}

void sub_1AE51B7E0()
{
  sub_1AE51A7D8();
}

void sub_1AE51B7F4()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1AE5245DC();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v1)
  {
    sub_1AE501548(&qword_1EED9AA60);
    v5 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE509D44(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1AE5245E8();
    sub_1AE520A30(v6, v7, v8);
    sub_1AE4FC4B4();
  }
  else
  {
    v9 = sub_1AE5245A0();
    sub_1AE51EE70(v9, v10, v11, v12);
  }
  sub_1AE4FCDD0();
}

void sub_1AE51B890()
{
  sub_1AE51A7D8();
}

void sub_1AE51B8A4()
{
  sub_1AE51A7D8();
}

void sub_1AE51B8B8()
{
  sub_1AE51A350();
}

void sub_1AE51B8CC()
{
  sub_1AE51A350();
}

void sub_1AE51B8E0()
{
  sub_1AE51AD10();
}

void sub_1AE51B904()
{
  sub_1AE51AD10();
}

void sub_1AE51B928()
{
  sub_1AE51AD10();
}

void sub_1AE51B94C()
{
  sub_1AE51AD10();
}

void sub_1AE51B970()
{
  sub_1AE51AD10();
}

void sub_1AE51B994()
{
  sub_1AE51AD10();
}

void sub_1AE51B9B8()
{
  sub_1AE51A350();
}

void sub_1AE51B9CC()
{
  sub_1AE519FCC();
}

void sub_1AE51B9E8()
{
  sub_1AE519FCC();
}

void sub_1AE51BA04()
{
  sub_1AE519FCC();
}

void sub_1AE51BA20()
{
  sub_1AE519FCC();
}

void sub_1AE51BA3C()
{
  sub_1AE519FCC();
}

void sub_1AE51BA58()
{
  sub_1AE519FCC();
}

void sub_1AE51BA74()
{
  sub_1AE51A674();
}

void sub_1AE51BA88()
{
  sub_1AE51A674();
}

void sub_1AE51BA9C()
{
  sub_1AE51A674();
}

void sub_1AE51BAB0()
{
  sub_1AE51A674();
}

void sub_1AE51BAC4()
{
  sub_1AE51A674();
}

void sub_1AE51BAD8()
{
  sub_1AE51A674();
}

void sub_1AE51BAEC()
{
  sub_1AE51A674();
}

void sub_1AE51BB00()
{
  sub_1AE51A674();
}

void sub_1AE51BB14()
{
  sub_1AE51A674();
}

void sub_1AE51BB28()
{
  sub_1AE51A674();
}

void sub_1AE51BB3C()
{
  sub_1AE51A674();
}

void sub_1AE51BB50()
{
  sub_1AE51A674();
}

void sub_1AE51BB64()
{
  sub_1AE519FCC();
}

void sub_1AE51BB80()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1AE5245DC();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v1)
  {
    sub_1AE501548(&qword_1EED9A820);
    v5 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE509D44(v5);
  }
  if ((v0 & 1) != 0)
  {
    v6 = (char *)sub_1AE5245E8();
    sub_1AE520210(v6, v7, v8);
    sub_1AE4FC4B4();
  }
  else
  {
    v9 = sub_1AE5245A0();
    sub_1AE51F004(v9, v10, v11, v12);
  }
  sub_1AE4FCDD0();
}

void sub_1AE51BC1C()
{
  sub_1AE51A350();
}

void sub_1AE51BC30()
{
  sub_1AE51A0A0();
}

void sub_1AE51BC4C()
{
  sub_1AE51B658();
}

void sub_1AE51BC60()
{
  sub_1AE51A674();
}

void sub_1AE51BC74()
{
  sub_1AE51B658();
}

void sub_1AE51BC88()
{
  sub_1AE51A7D8();
}

void sub_1AE51BC9C()
{
  sub_1AE51B0A4();
}

void sub_1AE51BCB8()
{
  sub_1AE51B2A0();
}

void sub_1AE51BCC4()
{
  sub_1AE51A2B4();
}

void sub_1AE51BCE0()
{
  sub_1AE51B658();
}

void sub_1AE51BCF4()
{
  sub_1AE51BD10();
}

void sub_1AE51BD10()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  sub_1AE508E48();
  sub_1AE52458C();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1AE4F66BC();
    v5 = sub_1AE4FB70C(v10);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1AE5085C0();
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE52457C(v5, v6, v1 + 32);
  }
  sub_1AE4F66A8();
}

void sub_1AE51BD9C()
{
  sub_1AE519FCC();
}

void sub_1AE51BDB8()
{
  sub_1AE51A2B4();
}

void sub_1AE51BDD4()
{
  sub_1AE51A7D8();
}

void sub_1AE51BDE8()
{
  sub_1AE51A7D8();
}

void sub_1AE51BDFC()
{
  sub_1AE51BE18();
}

void sub_1AE51BE18()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;

  sub_1AE508E48();
  sub_1AE52458C();
  if ((v2 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v3 != v4)
    {
      sub_1AE50A240();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v1)
  {
    sub_1AE524560(v5, v6, v7, v8, v9);
    v10 = (_QWORD *)sub_1AE4F66BC();
    v5 = sub_1AE4FB70C(v10);
  }
  else
  {
    v1 = MEMORY[0x1E0DEE9D8];
  }
  if ((v0 & 1) != 0)
  {
    sub_1AE5085C0();
    sub_1AE4FC4B4();
  }
  else
  {
    sub_1AE52457C(v5, v6, v1 + 32);
  }
  sub_1AE4F66A8();
}

void sub_1AE51BEA4()
{
  sub_1AE51A350();
}

void sub_1AE51BEB8()
{
  sub_1AE519FCC();
}

void sub_1AE51BED4()
{
  sub_1AE51A350();
}

uint64_t sub_1AE51BEE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51BFDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 144 * a1 + 32;
    v6 = a3 + 144 * v4;
    if (v5 >= v6 || v5 + 144 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51C0D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 112 * a1 + 32;
    v6 = a3 + 112 * v4;
    if (v5 >= v6 || v5 + 112 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

char *sub_1AE51C1D8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51C2C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 112 * a1 + 32;
    v6 = a3 + 112 * v4;
    if (v5 >= v6 || v5 + 112 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51C3C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 120 * a1 + 32;
    v6 = a3 + 120 * v4;
    if (v5 >= v6 || v5 + 120 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51C4C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51C5C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51C6B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      sub_1AE501548(&qword_1EED9AD18);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51C7D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

void sub_1AE51C8D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_1AE4FCDB0();
    sub_1AE503294();
    goto LABEL_11;
  }
  v5 = a4 + 40 * a1 + 32;
  if (v5 >= a3 + 40 * v4 || v5 + 40 * v4 <= a3)
  {
    sub_1AE524678();
    sub_1AE4F6648();
    sub_1AE506B30();
    return;
  }
  sub_1AE4FCDB0();
  sub_1AE4FE890();
LABEL_11:
  sub_1AE4FCDC4();
  __break(1u);
}

void sub_1AE51C980(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_1AE4FCDB0();
    sub_1AE503294();
    goto LABEL_11;
  }
  v5 = a4 + 112 * a1 + 32;
  if (v5 >= a3 + 112 * v4 || v5 + 112 * v4 <= a3)
  {
    sub_1AE524678();
    sub_1AE4F6648();
    sub_1AE506B30();
    return;
  }
  sub_1AE4FCDB0();
  sub_1AE4FE890();
LABEL_11:
  sub_1AE4FCDC4();
  __break(1u);
}

char *sub_1AE51CA34(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1AE926B20();
  __break(1u);
  return result;
}

char *sub_1AE51CB24(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51CC14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 112 * a1 + 32;
    v6 = a3 + 112 * v4;
    if (v5 >= v6 || v5 + 112 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51CD14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51CE10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51CF10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51D004(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 104 * a1 + 32;
    v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51D100(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51D1FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51D2F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 104 * a1 + 32;
    v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      sub_1AE501548(&qword_1EED994F0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51D414(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1AE501548(&qword_1EED9ACC8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51D528(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1AE501548(&qword_1EED9ACB8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51D644(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1AE501548(&qword_1EED9AC90);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51D760(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 1128 * a1 + 32;
    v6 = a3 + 1128 * v4;
    if (v5 >= v6 || v5 + 1128 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51D85C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

char *sub_1AE51D958(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51DA48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 80 * a1 + 32;
    v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51DB44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 296 * a1 + 32;
    v6 = a3 + 296 * v4;
    if (v5 >= v6 || v5 + 296 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51DC40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 104 * a1 + 32;
    v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51DD3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51DE38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 184 * a1 + 32;
    v6 = a3 + 184 * v4;
    if (v5 >= v6 || v5 + 184 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

char *sub_1AE51DF34(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 24 * a1 + 32);
    v6 = 3 * v4;
    v7 = &__dst[8 * v6];
    if (v5 >= v7 || &v5[8 * v6] <= __dst)
    {
      memcpy(__dst, v5, 8 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  result = (char *)sub_1AE926B20();
  __break(1u);
  return result;
}

char *sub_1AE51E02C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = &__dst[32 * v4];
    if (v5 >= v6 || &v5[32 * v4] <= __dst)
    {
      memcpy(__dst, v5, 32 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1AE926B20();
  __break(1u);
  return result;
}

void sub_1AE51E11C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char v8;
  BOOL v9;

  sub_1AE524758();
  if (__OFSUB__(v1, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v1 - v0 < 0)
  {
LABEL_9:
    sub_1AE4FCDB0();
    sub_1AE503294();
    goto LABEL_11;
  }
  sub_1AE5247A4();
  if (v8)
    v9 = 0;
  else
    v9 = v7 > v4;
  if (!v9)
  {
    sub_1AE524560(v2, v3, v4, v5, v6);
    sub_1AE5245B0();
    sub_1AE4F6648();
    sub_1AE508110();
    return;
  }
  sub_1AE4FCDB0();
  sub_1AE4FE890();
LABEL_11:
  sub_1AE4FCDC4();
  __break(1u);
}

uint64_t sub_1AE51E1B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 120 * a1 + 32;
    v6 = a3 + 120 * v4;
    if (v5 >= v6 || v5 + 120 * v4 <= a3)
    {
      sub_1AE501548(&qword_1EED9ABD0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51E2D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51E3D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 232 * a1 + 32;
    v6 = a3 + 232 * v4;
    if (v5 >= v6 || v5 + 232 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

void sub_1AE51E4D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_1AE4FCDB0();
    sub_1AE503294();
    goto LABEL_11;
  }
  v5 = a4 + (a1 << 6) + 32;
  if (v5 >= a3 + (v4 << 6) || v5 + (v4 << 6) <= a3)
  {
    sub_1AE524678();
    sub_1AE4F6648();
    sub_1AE506B30();
    return;
  }
  sub_1AE4FCDB0();
  sub_1AE4FE890();
LABEL_11:
  sub_1AE4FCDC4();
  __break(1u);
}

void sub_1AE51E578()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  sub_1AE524758();
  v5 = v1 - v0;
  if (__OFSUB__(v1, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_1AE4FCDB0();
    sub_1AE503294();
    goto LABEL_11;
  }
  v6 = v3 + (v0 << 6) + 32;
  if (v6 >= v2 + (v5 << 6) || v6 + (v5 << 6) <= v2)
  {
    sub_1AE524560(v0, v1, v2, v3, v4);
    sub_1AE5245B0();
    sub_1AE4F6648();
    sub_1AE508110();
    return;
  }
  sub_1AE4FCDB0();
  sub_1AE4FE890();
LABEL_11:
  sub_1AE4FCDC4();
  __break(1u);
}

void sub_1AE51E62C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  sub_1AE524758();
  v5 = v1 - v0;
  if (__OFSUB__(v1, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_1AE4FCDB0();
    sub_1AE503294();
    goto LABEL_11;
  }
  v6 = v3 + 40 * v0 + 32;
  if (v6 >= v2 + 40 * v5 || v6 + 40 * v5 <= v2)
  {
    sub_1AE524560(v0, v1, v2, v3, v4);
    sub_1AE5245B0();
    sub_1AE4F6648();
    sub_1AE508110();
    return;
  }
  sub_1AE4FCDB0();
  sub_1AE4FE890();
LABEL_11:
  sub_1AE4FCDC4();
  __break(1u);
}

void sub_1AE51E6E8(uint64_t a1, uint64_t a2)
{
  const void *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  BOOL v7;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1AE4FCDB0();
    sub_1AE503294();
    goto LABEL_11;
  }
  sub_1AE5247E4();
  if (v6)
    v7 = 0;
  else
    v7 = v5 > (unint64_t)v3;
  if (!v7)
  {
    sub_1AE5246AC(v3, v2, 8 * v4);
    sub_1AE4F6648();
    sub_1AE506B30();
    return;
  }
  sub_1AE4FCDB0();
  sub_1AE4FE890();
LABEL_11:
  sub_1AE4FCDC4();
  __break(1u);
}

uint64_t sub_1AE51E780(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51E874(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

char *sub_1AE51E968(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 2 * a1 + 32);
    v6 = &__dst[2 * v4];
    if (v5 >= v6 || &v5[2 * v4] <= __dst)
    {
      memcpy(__dst, v5, 2 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51EA58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1AE501548(&qword_1EED9A5F8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51EB74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51EC68(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51ED5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      sub_1AE501548(&qword_1EED9C040);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51EE70(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 400 * a1 + 32;
    v6 = a3 + 400 * v4;
    if (v5 >= v6 || v5 + 400 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

void sub_1AE51EF6C(uint64_t a1, uint64_t a2)
{
  const void *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  BOOL v7;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1AE4FCDB0();
    sub_1AE503294();
    goto LABEL_11;
  }
  sub_1AE524800();
  if (v6)
    v7 = 0;
  else
    v7 = v5 > (unint64_t)v3;
  if (!v7)
  {
    sub_1AE5246AC(v3, v2, 16 * v4);
    sub_1AE4F6648();
    sub_1AE506B30();
    return;
  }
  sub_1AE4FCDB0();
  sub_1AE4FE890();
LABEL_11:
  sub_1AE4FCDC4();
  __break(1u);
}

uint64_t sub_1AE51F004(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1AE501548(&qword_1EED9A828);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51F120(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

void sub_1AE51F21C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  unint64_t v6;
  char v7;
  BOOL v8;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1AE4FCDB0();
    sub_1AE503294();
    goto LABEL_11;
  }
  sub_1AE524560(a1, a2, a3, a4, a5);
  sub_1AE524648();
  if (v7)
    v8 = 0;
  else
    v8 = v6 > a3;
  if (!v8)
  {
    sub_1AE524868();
    sub_1AE4F6648();
    sub_1AE4FCDE0();
    return;
  }
  sub_1AE4FCDB0();
  sub_1AE4FE890();
LABEL_11:
  sub_1AE4FCDC4();
  __break(1u);
}

uint64_t sub_1AE51F2C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

void sub_1AE51F3C0(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  size_t v4;
  char *v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_9:
    sub_1AE4FCDB0();
    sub_1AE503294();
    goto LABEL_11;
  }
  v5 = (char *)(a4 + a1 + 32);
  if (v5 >= &a3[v4] || &v5[v4] <= a3)
  {
    sub_1AE5246AC(a3, v5, v4);
    sub_1AE4F6648();
    sub_1AE506B30();
    return;
  }
  sub_1AE4FCDB0();
  sub_1AE4FE890();
LABEL_11:
  sub_1AE4FCDC4();
  __break(1u);
}

void sub_1AE51F468(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_1AE4FCDB0();
    sub_1AE503294();
    goto LABEL_11;
  }
  v5 = a4 + 32 * a1 + 32;
  if (v5 >= a3 + 32 * v4 || v5 + 32 * v4 <= a3)
  {
    sub_1AE524678();
    sub_1AE4F6648();
    sub_1AE506B30();
    return;
  }
  sub_1AE4FCDB0();
  sub_1AE4FE890();
LABEL_11:
  sub_1AE4FCDC4();
  __break(1u);
}

uint64_t sub_1AE51F510(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 184 * a1 + 32;
    v6 = a3 + 184 * v4;
    if (v5 >= v6 || v5 + 184 * v4 <= a3)
    {
      sub_1AE501548(&qword_1EED9A5C0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

void sub_1AE51F62C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  unint64_t v6;
  char v7;
  BOOL v8;

  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    sub_1AE4FCDB0();
    sub_1AE503294();
    goto LABEL_11;
  }
  a5(0);
  sub_1AE524648();
  if (v7)
    v8 = 0;
  else
    v8 = v6 > a3;
  if (!v8)
  {
    sub_1AE524868();
    sub_1AE4F6648();
    sub_1AE4FCDE0();
    return;
  }
  sub_1AE4FCDB0();
  sub_1AE4FE890();
LABEL_11:
  sub_1AE4FCDC4();
  __break(1u);
}

uint64_t sub_1AE51F6D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE51F7D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1AE501548(&qword_1EED9A4C8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

void sub_1AE51F8E8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  sub_1AE524758();
  v5 = v1 - v0;
  if (__OFSUB__(v1, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_1AE4FCDB0();
    sub_1AE503294();
    goto LABEL_11;
  }
  v6 = v3 + 8 * v0 + 32;
  if (v6 >= v2 + 8 * v5 || v6 + 8 * v5 <= v2)
  {
    sub_1AE524560(v0, v1, v2, v3, v4);
    sub_1AE5245B0();
    sub_1AE4F6648();
    sub_1AE508110();
    return;
  }
  sub_1AE4FCDB0();
  sub_1AE4FE890();
LABEL_11:
  sub_1AE4FCDC4();
  __break(1u);
}

char *sub_1AE51F99C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

char *sub_1AE51F9F4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

char *sub_1AE51FA54(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[144 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 144 * a2);
  }
  return __src;
}

char *sub_1AE51FAE0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[112 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

char *sub_1AE51FB44(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_1AE51FBC8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[112 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 112 * a2);
  }
  return __src;
}

char *sub_1AE51FC54(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_1AE51FCD8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[120 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

char *sub_1AE51FD38(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[88 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

char *sub_1AE51FD98(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[56 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 56 * a2);
  }
  return __src;
}

char *sub_1AE51FE24(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

char *sub_1AE51FEB0(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[112 * a2] <= a3)
  {
    return (char *)sub_1AE524748(a3, 112 * a2);
  }
  return result;
}

char *sub_1AE51FF0C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_1AE51FF90(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[4 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 4 * a2);
  }
  return __src;
}

char *sub_1AE520014(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[88 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 88 * a2);
  }
  return __src;
}

char *sub_1AE5200A0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

char *sub_1AE52012C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

char *sub_1AE5201B4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[104 * a2] <= a3)
  {
    return (char *)sub_1AE524748(a3, 104 * a2);
  }
  return result;
}

char *sub_1AE520210(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

char *sub_1AE520274(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[296 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 296 * a2);
  }
  return __src;
}

char *sub_1AE5202FC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

char *sub_1AE52035C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_1AE5203E8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[80 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 80 * a2);
  }
  return __src;
}

char *sub_1AE520474(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[1128 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

char *sub_1AE5204D4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[80 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

char *sub_1AE520530(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[104 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 104 * a2);
  }
  return __src;
}

char *sub_1AE5205BC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[184 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 184 * a2);
  }
  return __src;
}

char *sub_1AE520644(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

char *sub_1AE52069C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[120 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 120 * a2);
  }
  return __src;
}

char *sub_1AE520728(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[232 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 232 * a2);
  }
  return __src;
}

char *sub_1AE5207B4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[64 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

char *sub_1AE52080C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

char *sub_1AE520868(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[56 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

char *sub_1AE5208CC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[2 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 2 * a2);
  }
  return __src;
}

char *sub_1AE520954(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

char *sub_1AE5209AC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[64 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, a2 << 6);
  }
  return __src;
}

char *sub_1AE520A30(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[400 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 400 * a2);
  }
  return __src;
}

char *sub_1AE520ABC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[96 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 96 * a2);
  }
  return __src;
}

char *sub_1AE520B48(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[192 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 192 * a2);
  }
  return __src;
}

char *sub_1AE520BD4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[224 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 224 * a2);
  }
  return __src;
}

char *sub_1AE520C60(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AE926B20();
    __break(1u);
  }
  else if (__dst != __src || &__src[184 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 184 * a2);
  }
  return __src;
}

void sub_1AE520CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  char v5;
  char v6;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE500900();
    __break(1u);
  }
  else
  {
    sub_1AE524890();
    if (v5 && (sub_1AE501548(v4), sub_1AE524968(), !v6 & v5))
    {
      if (v3 == v2)
      {
        sub_1AE4FCDE0();
      }
      else
      {
        sub_1AE4F7700();
        sub_1AE5246F4();
      }
    }
    else
    {
      sub_1AE501548(v4);
      sub_1AE4F7700();
      sub_1AE5246E4();
    }
  }
}

char *sub_1AE520D74(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    result = (char *)sub_1AE500900();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)sub_1AE4FE880(a3, result);
  }
  return result;
}

void sub_1AE520DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  char v5;
  char v6;

  if (a2 < 0)
  {
    sub_1AE4FCDB0();
    sub_1AE500900();
    __break(1u);
  }
  else
  {
    sub_1AE524890();
    if (v5 && (v4(0), sub_1AE524968(), !v6 & v5))
    {
      if (v3 == v2)
      {
        sub_1AE4FCDE0();
      }
      else
      {
        sub_1AE4F7700();
        sub_1AE5246F4();
      }
    }
    else
    {
      v4(0);
      sub_1AE4F7700();
      sub_1AE5246E4();
    }
  }
}

void sub_1AE520E58(void (*a1)(void))
{
  a1();
  sub_1AE4F6664();
}

#error "1AE520EA0: call analysis failed (funcsize=24)"

void sub_1AE520ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t ObjectType, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1AE524758();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  sub_1AE4F9070();
  v31 = sub_1AE520F88(v28, v29, v30, 1, v27, v25);
  if (v31)
  {
    v32 = v31;
    ObjectType = swift_getObjectType();
    a9 = v32;
    v33 = *v23;
    if (*v23)
    {
      sub_1AE524160((uint64_t)&a9, *v23);
      *v23 = v33 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    a9 = v27;
    a10 = v25;
    v34 = *v23;
    if (*v23)
    {
      sub_1AE524160((uint64_t)&a9, *v23);
      *v23 = v34 + 32;
    }
    sub_1AE4F66C4();
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&a9);
  sub_1AE508110();
}

uint64_t sub_1AE520F88(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1AE5210DC((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_1AE926778();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_1AE5211A0(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_1AE926994();
    if (!v8)
    {
      result = sub_1AE926AA8();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_1AE5210DC(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE5211A0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1AE521234(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_1AE5213A4(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_1AE5213A4((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1AE521234(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_1AE925FA4();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x1E0DEE9D8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_6:
  v3 = sub_1AE5BBFC0(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_1AE926928();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return (uint64_t)v4;
  }
  sub_1AE926B20();
  __break(1u);
LABEL_14:
  result = sub_1AE926AA8();
  __break(1u);
  return result;
}

char *sub_1AE5213A4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1AE501548(qword_1ED30FE20);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1AE51FB44(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AE521478(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1AE521478(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_1AE926B20();
  __break(1u);
  return result;
}

_BYTE **sub_1AE52153C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_1AE52154C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5229E8();
  *v0 = v1;
}

void sub_1AE521580()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5235D8();
  *v0 = v1;
}

void sub_1AE5215B4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523050();
  *v0 = v1;
}

void sub_1AE5215E8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522A88();
  *v0 = v1;
}

void sub_1AE52161C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522FA0();
  *v0 = v1;
}

void sub_1AE521648()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522944();
  *v0 = v1;
}

void sub_1AE521674()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522944();
  *v0 = v1;
}

void sub_1AE5216A0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5229E8();
  *v0 = v1;
}

void sub_1AE5216D4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522A88();
  *v0 = v1;
}

void sub_1AE521708()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5229E8();
  *v0 = v1;
}

uint64_t sub_1AE52173C(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1AE522B18(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_1AE521758(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1AE522C1C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_1AE521774()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522DD8();
  *v0 = v1;
}

uint64_t sub_1AE5217A8(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1AE522D04(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_1AE5217C4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE5217F8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE52321C();
  *v0 = v1;
}

void sub_1AE52182C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522DD8();
  *v0 = v1;
}

void sub_1AE521860()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522E68();
  *v0 = v1;
}

void sub_1AE52188C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523770();
  *v0 = v1;
}

void sub_1AE5218C0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523358();
  *v0 = v1;
}

void sub_1AE5218F4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE521928()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522FA0();
  *v0 = v1;
}

void sub_1AE521954()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE521988()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5229E8();
  *v0 = v1;
}

uint64_t sub_1AE5219BC(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1AE5230FC(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_1AE5219D8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE521A0C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE521A40()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE521A74()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE521AA8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523AD0();
  *v0 = v1;
}

void sub_1AE521ADC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE52321C();
  *v0 = v1;
}

void sub_1AE521B10()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523050();
  *v0 = v1;
}

void sub_1AE521B44()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5229E8();
  *v0 = v1;
}

void sub_1AE521B78()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523358();
  *v0 = v1;
}

void sub_1AE521BAC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523358();
  *v0 = v1;
}

void sub_1AE521BE0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523AD0();
  *v0 = v1;
}

void sub_1AE521C14()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5232BC();
  *v0 = v1;
}

void sub_1AE521C30()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523358();
  *v0 = v1;
}

void sub_1AE521C64()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522E68();
  *v0 = v1;
}

void sub_1AE521C90()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5233F8();
  *v0 = v1;
}

void sub_1AE521CC4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522E68();
  *v0 = v1;
}

void sub_1AE521CF0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE521D24()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5233F8();
  *v0 = v1;
}

void sub_1AE521D58()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5229E8();
  *v0 = v1;
}

void sub_1AE521D8C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5233F8();
  *v0 = v1;
}

void sub_1AE521DC0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523488();
  *v0 = v1;
}

void sub_1AE521DEC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523488();
  *v0 = v1;
}

void sub_1AE521E18()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5235D8();
  *v0 = v1;
}

void sub_1AE521E4C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5236A4();
  *v0 = v1;
}

void sub_1AE521E80()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE521EB4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE521EE8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE521F1C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE521F50()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE521F84()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5236A4();
  *v0 = v1;
}

void sub_1AE521FB8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE521FEC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE522020()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE522054()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE522088()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE5220BC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE5220F0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5236A4();
  *v0 = v1;
}

void sub_1AE522124()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE522158()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE52218C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE5221C0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE5221F4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE522228()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE52225C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5236A4();
  *v0 = v1;
}

void sub_1AE522290()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE5222C4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5236A4();
  *v0 = v1;
}

void sub_1AE5222F8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5229E8();
  *v0 = v1;
}

void sub_1AE52232C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5229E8();
  *v0 = v1;
}

void sub_1AE522360()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5235D8();
  *v0 = v1;
}

void sub_1AE522394()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523770();
  *v0 = v1;
}

void sub_1AE5223C8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522A88();
  *v0 = v1;
}

void sub_1AE5223FC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523050();
  *v0 = v1;
}

uint64_t sub_1AE522430(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1AE523800(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_1AE52244C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

uint64_t sub_1AE522480(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1AE5238E8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_1AE52249C(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1AE5239CC(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_1AE5224B8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE5224EC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE522520()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523050();
  *v0 = v1;
}

void sub_1AE522554()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5233F8();
  *v0 = v1;
}

void sub_1AE522588()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE5225BC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE5225F0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5233F8();
  *v0 = v1;
}

void sub_1AE522624()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5235D8();
  *v0 = v1;
}

void sub_1AE522658()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523050();
  *v0 = v1;
}

void sub_1AE52268C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE523AD0();
  *v0 = v1;
}

void sub_1AE5226C0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5235D8();
  *v0 = v1;
}

void sub_1AE5226F4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE522F00();
  *v0 = v1;
}

void sub_1AE522728()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5229E8();
  *v0 = v1;
}

void sub_1AE52275C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5229E8();
  *v0 = v1;
}

void sub_1AE522790()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5236A4();
  *v0 = v1;
}

void sub_1AE5227C4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5235D8();
  *v0 = v1;
}

void sub_1AE5227F8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5229E8();
  *v0 = v1;
}

void sub_1AE52282C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5233F8();
  *v0 = v1;
}

void sub_1AE522860()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5229E8();
  *v0 = v1;
}

void sub_1AE522894()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE5235D8();
  *v0 = v1;
}

void sub_1AE5228C8()
{
  sub_1AE5229E8();
}

void sub_1AE5228E4()
{
  sub_1AE5233F8();
}

void sub_1AE522900()
{
  sub_1AE522A88();
}

void sub_1AE52291C()
{
  sub_1AE522FA0();
}

void sub_1AE522930()
{
  sub_1AE522944();
}

void sub_1AE522944()
{
  uint64_t v0;
  void (*v1)(char *);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  size_t v13;
  char *v14;
  uint64_t v15;
  char *v16;

  sub_1AE506F78();
  if ((v4 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v5 != v6)
    {
      sub_1AE50A240();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE5245F4();
  if (v3)
  {
    sub_1AE524560(v7, v8, v9, v10, v11);
    v12 = (const void *)sub_1AE4F66BC();
    v13 = j__malloc_size(v12);
    sub_1AE5246D8((uint64_t)(v13 - 32) / 64);
  }
  v14 = (char *)sub_1AE524704();
  if ((v2 & 1) != 0)
  {
    sub_1AE5207B4(v14, v15, v16);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14);
  }
  sub_1AE4FB730();
  sub_1AE4FCDD0();
}

void sub_1AE5229E8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  sub_1AE524568();
  if ((v5 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v6 != v7)
    {
      sub_1AE50A240();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v4)
  {
    sub_1AE524560(v8, v9, v10, v11, v12);
    v13 = (const void *)sub_1AE4F66BC();
    v14 = j__malloc_size(v13);
    sub_1AE5097EC((uint64_t)(v14 - 32) / 16);
  }
  v15 = sub_1AE507D48();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_1AE4FB730();
  sub_1AE4FCDD0();
}

void sub_1AE522A88()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;

  sub_1AE508E48();
  sub_1AE524568();
  if ((v5 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v6 != v7)
    {
      sub_1AE50A240();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v4)
  {
    sub_1AE524560(v8, v9, v10, v11, v12);
    v13 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE4FB70C(v13);
  }
  v14 = sub_1AE507D48();
  if ((v3 & 1) != 0)
  {
    v2(v14);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14);
  }
  sub_1AE4FB730();
  sub_1AE4F66A8();
}

uint64_t sub_1AE522B18(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1AE501548(&qword_1EED9AAC8);
    v10 = swift_allocObject();
    v11 = j__malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 144);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    sub_1AE51FA54((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AE623E24();
  }
  swift_release();
  return v10;
}

void sub_1AE522C00()
{
  sub_1AE522DD8();
}

uint64_t sub_1AE522C1C(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1AE501548((uint64_t *)&unk_1ED30FFC0);
    v10 = swift_allocObject();
    v11 = j__malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 112);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    sub_1AE51FEB0((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AE624528();
  }
  swift_release();
  return v10;
}

uint64_t sub_1AE522D04(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1AE501548(&qword_1EED9A420);
    v10 = swift_allocObject();
    v11 = j__malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * v11 - 64;
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    sub_1AE51FB44((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AE6245BC();
  }
  swift_release();
  return v10;
}

void sub_1AE522DD8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;

  sub_1AE508E48();
  sub_1AE524568();
  if ((v5 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v6 != v7)
    {
      sub_1AE50A240();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v4)
  {
    sub_1AE524560(v8, v9, v10, v11, v12);
    v13 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE4FB70C(v13);
  }
  v14 = sub_1AE507D48();
  if ((v3 & 1) != 0)
  {
    v2(v14);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14);
  }
  sub_1AE4FB730();
  sub_1AE4F66A8();
}

void sub_1AE522E68()
{
  uint64_t v0;
  void (*v1)(char *);
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  char *v15;
  size_t v16;
  char *v17;

  sub_1AE506F78();
  if ((v5 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v6 != v7)
    {
      sub_1AE50A240();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE5245F4();
  if (v4)
  {
    sub_1AE524560(v8, v9, v10, v11, v12);
    v13 = (const void *)sub_1AE4F66BC();
    v14 = sub_1AE5248F8(v13);
    *(_QWORD *)(v4 + 16) = v3;
    *(_QWORD *)(v4 + 24) = 2 * v14 - 64;
  }
  v15 = (char *)sub_1AE524704();
  if ((v2 & 1) != 0)
  {
    sub_1AE51FB44(v15, v16, v17);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_1AE4FB730();
  sub_1AE4FCDD0();
}

void sub_1AE522F00()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  sub_1AE524568();
  if ((v5 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v6 != v7)
    {
      sub_1AE50A240();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v4)
  {
    sub_1AE524560(v8, v9, v10, v11, v12);
    v13 = (const void *)sub_1AE4F66BC();
    v14 = j__malloc_size(v13);
    sub_1AE5097EC((uint64_t)(v14 - 32) / 8);
  }
  v15 = sub_1AE507D48();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_1AE4FB730();
  sub_1AE4FCDD0();
}

void sub_1AE522FA0()
{
  uint64_t v0;
  void (*v1)(char *);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  char *v15;

  sub_1AE506F78();
  if ((v4 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v5 != v6)
    {
      sub_1AE50A240();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE5245F4();
  if (v3)
  {
    sub_1AE524560(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE524604(v12);
  }
  v13 = (char *)sub_1AE524704();
  if ((v2 & 1) != 0)
  {
    sub_1AE5201B4(v13, v14, v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v13);
  }
  sub_1AE4FB730();
  sub_1AE4FCDD0();
}

void sub_1AE523034()
{
  sub_1AE523050();
}

void sub_1AE523050()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;

  sub_1AE508E48();
  sub_1AE524568();
  if ((v5 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v6 != v7)
    {
      sub_1AE50A240();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v4)
  {
    sub_1AE524560(v8, v9, v10, v11, v12);
    v13 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE4FB70C(v13);
  }
  v14 = sub_1AE507D48();
  if ((v3 & 1) != 0)
  {
    v2(v14);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14);
  }
  sub_1AE4FB730();
  sub_1AE4F66A8();
}

void sub_1AE5230E0()
{
  sub_1AE5229E8();
}

uint64_t sub_1AE5230FC(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1AE501548((uint64_t *)&unk_1ED30FDC0);
    v10 = swift_allocObject();
    v11 = j__malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 296);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    sub_1AE520274((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AE6249D8();
  }
  swift_release();
  return v10;
}

void sub_1AE5231E4()
{
  sub_1AE5229E8();
}

void sub_1AE523200()
{
  sub_1AE523770();
}

void sub_1AE52321C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  sub_1AE524568();
  if ((v5 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v6 != v7)
    {
      sub_1AE50A240();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v4)
  {
    sub_1AE524560(v8, v9, v10, v11, v12);
    v13 = (const void *)sub_1AE4F66BC();
    v14 = j__malloc_size(v13);
    sub_1AE5097EC((uint64_t)(v14 - 32) / 4);
  }
  v15 = sub_1AE507D48();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_1AE4FB730();
  sub_1AE4FCDD0();
}

void sub_1AE5232BC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;

  sub_1AE5245DC();
  if ((v3 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v4 != v5)
    {
      sub_1AE50A240();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v2)
  {
    sub_1AE501548((uint64_t *)&unk_1ED30FD90);
    v6 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE509D44(v6);
  }
  v7 = (char *)sub_1AE5245E8();
  if ((v1 & 1) != 0)
  {
    sub_1AE520474(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_1AE624C38();
  }
  sub_1AE4FB730();
  sub_1AE4FCDD0();
}

void sub_1AE523358()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  sub_1AE524568();
  if ((v5 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v6 != v7)
    {
      sub_1AE50A240();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v4)
  {
    sub_1AE524560(v8, v9, v10, v11, v12);
    v13 = (const void *)sub_1AE4F66BC();
    v14 = j__malloc_size(v13);
    sub_1AE5097EC((uint64_t)(v14 - 32) / 32);
  }
  v15 = sub_1AE507D48();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  sub_1AE4FB730();
  sub_1AE4FCDD0();
}

void sub_1AE5233F8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;

  sub_1AE508E48();
  sub_1AE524568();
  if ((v5 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v6 != v7)
    {
      sub_1AE50A240();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v4)
  {
    sub_1AE524560(v8, v9, v10, v11, v12);
    v13 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE4FB70C(v13);
  }
  v14 = sub_1AE507D48();
  if ((v3 & 1) != 0)
  {
    v2(v14);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14);
  }
  sub_1AE4FB730();
  sub_1AE4F66A8();
}

void sub_1AE523488()
{
  uint64_t v0;
  void (*v1)(char *);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  char *v15;

  sub_1AE506F78();
  if ((v4 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v5 != v6)
    {
      sub_1AE50A240();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE5245F4();
  if (v3)
  {
    sub_1AE524560(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE524604(v12);
  }
  v13 = (char *)sub_1AE524704();
  if ((v2 & 1) != 0)
  {
    sub_1AE520868(v13, v14, v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v13);
  }
  sub_1AE4FB730();
  sub_1AE4FCDD0();
}

void sub_1AE52351C()
{
  sub_1AE5233F8();
}

void sub_1AE523538()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  const void *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;

  sub_1AE5245DC();
  if ((v3 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v4 != v5)
    {
      sub_1AE50A240();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v2)
  {
    sub_1AE501548((uint64_t *)&unk_1EED9A600);
    v6 = (const void *)sub_1AE4F66BC();
    sub_1AE5248A8(v6);
    sub_1AE524628(v7 / 32);
  }
  v8 = (char *)sub_1AE5245E8();
  if ((v1 & 1) != 0)
  {
    sub_1AE520954(v8, v9, v10);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_1AE62539C();
  }
  sub_1AE4FB730();
  sub_1AE4F6624();
}

void sub_1AE5235D8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(_QWORD);
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1AE4FC4D4();
  sub_1AE524568();
  if ((v7 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v11 != v12)
    {
      sub_1AE50A240();
      if (v11)
      {
LABEL_23:
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  else
  {
    v10 = v6;
  }
  if (v10 <= *(_QWORD *)(v0 + 16))
    v13 = *(_QWORD *)(v0 + 16);
  else
    v13 = v10;
  if (!v13)
    goto LABEL_17;
  sub_1AE524560(v5, v6, v7, v8, v9);
  v2(0);
  v14 = (const void *)sub_1AE5061A4();
  j__malloc_size(v14);
  if (!v4)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_1AE524948();
  v16 = v16 && v4 == -1;
  if (v16)
    goto LABEL_22;
  sub_1AE5097EC(v15 / v4);
LABEL_17:
  v17 = ((uint64_t (*)(_QWORD))v2)(0);
  v18 = sub_1AE524784(v17);
  if ((v3 & 1) != 0)
  {
    sub_1AE520DD0(v18, v19);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v18);
  }
  sub_1AE4FB730();
  sub_1AE4F8180();
}

void sub_1AE5236A4()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1AE4FC4D4();
  sub_1AE524568();
  if ((v7 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v11 != v12)
    {
      sub_1AE50A240();
      if (v11)
      {
LABEL_23:
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  else
  {
    v10 = v6;
  }
  if (v10 <= *(_QWORD *)(v0 + 16))
    v13 = *(_QWORD *)(v0 + 16);
  else
    v13 = v10;
  if (!v13)
    goto LABEL_17;
  sub_1AE524560(v5, v6, v7, v8, v9);
  sub_1AE501548(v2);
  v14 = (const void *)sub_1AE5061A4();
  j__malloc_size(v14);
  if (!v4)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_1AE524948();
  v16 = v16 && v4 == -1;
  if (v16)
    goto LABEL_22;
  sub_1AE5097EC(v15 / v4);
LABEL_17:
  v17 = sub_1AE501548(v2);
  v18 = sub_1AE524784(v17);
  if ((v3 & 1) != 0)
  {
    sub_1AE520CEC(v18, v19);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v18);
  }
  sub_1AE4FB730();
  sub_1AE4F8180();
}

void sub_1AE523770()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;

  sub_1AE508E48();
  sub_1AE524568();
  if ((v5 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v6 != v7)
    {
      sub_1AE50A240();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v4)
  {
    sub_1AE524560(v8, v9, v10, v11, v12);
    v13 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE4FB70C(v13);
  }
  v14 = sub_1AE507D48();
  if ((v3 & 1) != 0)
  {
    v2(v14);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14);
  }
  sub_1AE4FB730();
  sub_1AE4F66A8();
}

uint64_t sub_1AE523800(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1AE501548(&qword_1EED9A7D0);
    v10 = swift_allocObject();
    v11 = j__malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    sub_1AE520ABC((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AE6256A8();
  }
  swift_release();
  return v10;
}

uint64_t sub_1AE5238E8(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1AE501548(&qword_1EED9A7E0);
    v10 = swift_allocObject();
    v11 = j__malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 192);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    sub_1AE520B48((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AE625758();
  }
  swift_release();
  return v10;
}

uint64_t sub_1AE5239CC(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_1AE501548(&qword_1EED9A7B0);
    v10 = swift_allocObject();
    v11 = j__malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 224);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    sub_1AE520BD4((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AE6257F0();
  }
  swift_release();
  return v10;
}

void sub_1AE523AB4()
{
  sub_1AE5229E8();
}

void sub_1AE523AD0()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;

  sub_1AE508E48();
  sub_1AE524568();
  if ((v5 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v6 != v7)
    {
      sub_1AE50A240();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE50A8E0();
  if (v4)
  {
    sub_1AE524560(v8, v9, v10, v11, v12);
    v13 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE4FB70C(v13);
  }
  v14 = sub_1AE507D48();
  if ((v3 & 1) != 0)
  {
    v2(v14);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14);
  }
  sub_1AE4FB730();
  sub_1AE4F66A8();
}

void sub_1AE523B60()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;

  sub_1AE5245DC();
  if ((v3 & 1) != 0)
  {
    sub_1AE4FD930();
    if (v4 != v5)
    {
      sub_1AE50A240();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1AE503284();
    }
  }
  sub_1AE509320();
  if (v2)
  {
    sub_1AE501548(&qword_1EED9A480);
    v6 = (_QWORD *)sub_1AE4F66BC();
    sub_1AE509D44(v6);
  }
  v7 = (char *)sub_1AE5245E8();
  if ((v1 & 1) != 0)
  {
    sub_1AE51FCD8(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_1AE624258();
  }
  sub_1AE4FB730();
  sub_1AE4FCDD0();
}

void sub_1AE523BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)sub_1AE925E18();
  v7 = (void *)sub_1AE925E18();
  sub_1AE4F9038();
  v8 = objc_msgSend(a5, sel_URLForResource_withExtension_, v6, v7);

  sub_1AE4F6624();
}

unint64_t sub_1AE523C6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EED9A3F8;
  if (!qword_1EED9A3F8)
  {
    v1 = sub_1AE924780();
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1EED9A3F8);
  }
  return result;
}

unint64_t sub_1AE523CAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3100F8;
  if (!qword_1ED3100F8)
  {
    v1 = sub_1AE523CF0(qword_1ED310108);
    result = MEMORY[0x1AF454B70](&unk_1AE95F7B0, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3100F8);
  }
  return result;
}

uint64_t sub_1AE523CF0(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1AF454B64](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_1AE523D34()
{
  unint64_t result;

  result = qword_1EED9A400;
  if (!qword_1EED9A400)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ModelError, &type metadata for ModelError);
    atomic_store(result, (unint64_t *)&qword_1EED9A400);
  }
  return result;
}

uint64_t type metadata accessor for DictionaryTrie()
{
  return objc_opt_self();
}

void sub_1AE523D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE524758();
  v0 = sub_1AE925F20();
  if (v0)
  {
    v1 = v0;
    sub_1AE523EB4(v0, 0);
    sub_1AE4F66C4();
    sub_1AE523E10();
    v3 = v2;
    swift_bridgeObjectRelease();
    if (v3 != v1)
      __break(1u);
  }
  sub_1AE508110();
}

void sub_1AE523E10()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  sub_1AE524758();
  v5 = v4;
  v6 = HIBYTE(v3) & 0xF;
  v12 = v2;
  v13 = v3;
  if ((v3 & 0x2000000000000000) == 0)
    v6 = v2 & 0xFFFFFFFFFFFFLL;
  v14 = v6;
  if (!v0 || (v7 = v1) == 0)
  {
LABEL_14:
    *v5 = v2;
    v5[1] = v3;
    v5[2] = 0;
    v5[3] = v6;
    sub_1AE508110();
    return;
  }
  if ((v1 & 0x8000000000000000) == 0)
  {
    v8 = v0;
    v9 = 0;
    while (1)
    {
      v10 = sub_1AE925F98();
      if (!v11)
        break;
      ++v9;
      *v8 = v10;
      v8[1] = v11;
      v8 += 2;
      if (v7 == v9)
      {
        v2 = v12;
        v3 = v13;
        goto LABEL_13;
      }
    }
    v2 = v12;
    v3 = v13;
LABEL_13:
    v6 = v14;
    goto LABEL_14;
  }
  __break(1u);
}

void sub_1AE523EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (v2)
  {
    sub_1AE501548(&qword_1ED31AD40);
    v4 = (_QWORD *)sub_1AE4F66BC();
    j__malloc_size(v4);
    sub_1AE5249B8();
    v4[2] = a1;
    v4[3] = v5;
  }
  sub_1AE4F6664();
}

uint64_t sub_1AE523F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v13 = *a6;
  v14 = a6[1];
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_1AE52455C;
  return sub_1AE51936C(a1, a2, a3, a4, a5, v13, v14, a7);
}

uint64_t sub_1AE523FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  char v5;
  unint64_t v6;
  char v7;
  _BOOL4 v8;
  BOOL v9;
  char v10;
  BOOL v11;

  result = 0;
  v5 = 0;
  v6 = 0;
  v7 = 0;
  do
  {
    v8 = a1 <= a2;
    if (a3 > 0)
      v8 = a1 >= a2;
    if (v8)
    {
      if ((a1 != a2) | v5 & 1)
        return result;
      if ((v7 & 1) != 0)
      {
        v5 = 1;
        a1 = a2;
        v7 = 1;
      }
      else
      {
        if (v6 == 0x8000000000000000)
          return result;
        v7 = 0;
        v5 = 1;
        a1 = a2;
      }
    }
    else
    {
      v9 = __OFADD__(a1, a3);
      a1 += a3;
      v10 = v9;
      v11 = (v10 & 1) == 0;
      if ((v10 & 1) != 0)
      {
        a1 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
        v6 = 0x8000000000000000;
      }
      else
      {
        v6 = 0;
      }
      v7 = v11;
    }
    v9 = __OFADD__(result++, 1);
  }
  while (!v9);
  __break(1u);
  return result;
}

uint64_t sub_1AE524070()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AE92670C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for TrieNode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TrieNode);
}

uint64_t method lookup function for DictionaryTrie()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for AddressEmbedder()
{
  return objc_opt_self();
}

uint64_t method lookup function for AddressEmbedder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AddressEmbedder.__allocating_init(modelName:dictionaryPaths:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1AE524160(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1AE52419C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  sub_1AE4F6664();
}

uint64_t sub_1AE5241DC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for InferenceServiceInstanceEnum(a2, a1);
  return a2;
}

uint64_t sub_1AE524218(uint64_t a1, uint64_t a2)
{
  j__swift_weakCopyInit(a2, a1);
  return a2;
}

void sub_1AE524254(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  sub_1AE4F6664();
}

uint64_t sub_1AE524288(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for EntityRerankerHandler.EntityRerankerHandlerCache.CachedHandler(a2, a1);
  return a2;
}

uint64_t sub_1AE5242C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationEmbedderInferenceInterface.Output();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE524308()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1AE524354()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1AE52440C;
  __asm { BR              X9; sub_1AE523F10 }
}

uint64_t sub_1AE52440C()
{
  uint64_t *v0;
  uint64_t v2;

  sub_1AE4FB74C();
  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_1AE52444C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_1AE5052E4(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  sub_1AE4F6664();
}

void sub_1AE524480(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  sub_1AE5052E4(a1, a2, a3);
  v4 = sub_1AE524934();
  v5(v4, v3);
  sub_1AE4F6664();
}

uint64_t sub_1AE5244A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9AD60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE5244F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LocationEmbedderInferenceInterface.Output();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AE524534(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_1AE501548(a2);
  sub_1AE4FB738(v2);
  sub_1AE4F6664();
}

uint64_t sub_1AE524560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_1AE501548(a5);
}

uint64_t sub_1AE52457C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  return v4(0, v5, a3, v3);
}

uint64_t sub_1AE5245A0()
{
  return 0;
}

uint64_t sub_1AE5245B0()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_1AE5245C4()
{
  return sub_1AE9267CC();
}

uint64_t sub_1AE5245E8()
{
  uint64_t v0;

  return v0 + 32;
}

size_t sub_1AE524604(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

void sub_1AE524628(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * a1;
}

uint64_t sub_1AE524634()
{
  return 0;
}

uint64_t sub_1AE524678()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_1AE524688()
{
  return swift_allocObject();
}

void *sub_1AE5246AC@<X0>(void *__dst@<X2>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memcpy(__dst, a2, a3);
}

uint64_t sub_1AE5246B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v3 + *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72) * v2, a1);
}

void sub_1AE5246D8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * a1;
}

uint64_t sub_1AE5246E4()
{
  return swift_arrayInitWithTakeFrontToBack();
}

uint64_t sub_1AE5246F4()
{
  return swift_arrayInitWithTakeBackToFront();
}

uint64_t sub_1AE524704()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t sub_1AE524710()
{
  return sub_1AE5165D8(0x3E6461703CLL, 0xE500000000000000, 0xFFFFFFFFLL);
}

uint64_t sub_1AE52472C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE524738()
{
  return swift_retain();
}

void *sub_1AE524748@<X0>(void *__dst@<X2>, size_t a2@<X8>)
{
  const void *v2;

  return memmove(__dst, v2, a2);
}

uint64_t sub_1AE524784(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v1 + ((v2 + 32) & ~v2);
}

uint64_t sub_1AE5247C4()
{
  return sub_1AE926244();
}

uint64_t sub_1AE5247D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  return v4(0, v6, a3, v3, v5);
}

uint64_t sub_1AE52481C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE537024(v1, v0);
}

uint64_t sub_1AE524828(uint64_t a1, uint64_t a2)
{
  return sub_1AE524160(a1, a2);
}

uint64_t sub_1AE524830()
{
  uint64_t v0;
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 0, 1, v1);
}

void sub_1AE524844(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1AE52419C(*(_QWORD *)(v2 + 56) + 40 * a1, v1);
}

uint64_t sub_1AE524858()
{
  return sub_1AE926694();
}

uint64_t sub_1AE524868()
{
  return swift_arrayInitWithCopy();
}

size_t sub_1AE5248A8(const void *a1)
{
  return j__malloc_size(a1);
}

double sub_1AE5248C0()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  *v0 = 0u;
  v0[1] = 0u;
  return result;
}

double sub_1AE5248D8()
{
  return 0.0;
}

size_t sub_1AE5248F8(const void *ptr)
{
  return j__malloc_size(ptr);
}

uint64_t sub_1AE524900()
{
  return 0;
}

uint64_t sub_1AE524914()
{
  return sub_1AE926790();
}

uint64_t sub_1AE524920()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE524934()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE524954()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE52497C()
{
  return swift_release();
}

uint64_t sub_1AE524998()
{
  return swift_retain();
}

uint64_t sub_1AE5249A0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE5244A8(v1, v0);
}

void sub_1AE5249AC()
{
  sub_1AE523D90();
}

uint64_t sub_1AE5249EC()
{
  return sub_1AE926AA8();
}

void sub_1AE5249F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_1AE524480(v3, v4, a3);
}

uint64_t sub_1AE524A04()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE524A24()
{
  return swift_retain();
}

id sub_1AE524A30(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v1 + 56) + 8 * a1);
}

unint64_t sub_1AE524A3C()
{
  return sub_1AE536D68();
}

void sub_1AE524A44()
{
  uint64_t v0;

  sub_1AE501548(&qword_1EED9ADC0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1AE9337E0;
  *(_QWORD *)(v0 + 32) = swift_getKeyPath();
  static EntityPredicate.thoroughfare.getter();
  *(_QWORD *)(v0 + 80) = swift_getKeyPath();
  static EntityPredicate.locality.getter();
  *(_QWORD *)(v0 + 128) = swift_getKeyPath();
  static EntityPredicate.subLocality.getter();
  *(_QWORD *)(v0 + 176) = swift_getKeyPath();
  static EntityPredicate.administrativeArea.getter();
  *(_QWORD *)(v0 + 224) = swift_getKeyPath();
  static EntityPredicate.subAdministrativeArea.getter();
  *(_QWORD *)(v0 + 272) = swift_getKeyPath();
  static EntityPredicate.postalCode.getter();
  *(_QWORD *)(v0 + 320) = swift_getKeyPath();
  static EntityPredicate.country.getter();
  *(_QWORD *)(v0 + 368) = swift_getKeyPath();
  static EntityPredicate.isoCountryCode.getter();
  qword_1EEE11E28 = v0;
}

void sub_1AE524B6C(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = objc_msgSend(*a1, *a2);
  v5 = sub_1AE925E3C();
  v7 = v6;

  *a3 = v5;
  a3[1] = v7;
}

void sub_1AE524BBC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  void *v6;
  id v7;

  v6 = *a2;
  v7 = (id)sub_1AE925E18();
  objc_msgSend(v6, *a5, v7);

}

void sub_1AE524C0C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[40];
  _BYTE v67[40];
  _QWORD v68[4];
  __int16 v69;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(unsigned __int16 *)(a1 + 32);
  v60 = v5;
  v61 = v6;
  v7 = *(unsigned __int8 *)(a1 + 34);
  v58 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v65 = *(_QWORD *)(a1 + 80);
  v53 = *(_QWORD *)(a1 + 56);
  v54 = *(_QWORD *)(a1 + 88);
  HIDWORD(v52) = *(unsigned __int8 *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 104);
  sub_1AE4F6708();
  sub_1AE525B74(v2, v3, v4, v5, v6, v7);
  sub_1AE4FB75C();
  sub_1AE4F6708();
  swift_bridgeObjectRetain();
  sub_1AE4FB764();
  swift_bridgeObjectRetain();
  v11 = sub_1AE798DAC();
  sub_1AE4F76D8();
  v59 = v3;
  v63 = v4;
  sub_1AE525C94(v2, v3, v4, v60, v6, v7);
  v64 = v10;
  sub_1AE4F6710();
  swift_bridgeObjectRelease();
  v62 = v9;
  sub_1AE4F76D8();
  sub_1AE4F6648();
  swift_bridgeObjectRelease();
  v57 = sub_1AE5251DC(v11);
  sub_1AE4F6728();
  if (!_Records_GDEntityPredicate_records)
    goto LABEL_21;
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 4) >= 2674)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (*((uint64_t *)_Records_GDEntityPredicate_records + 5) >= 3558)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!_Records_GDEntityPredicate_predicateIds)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *((_WORD *)_Records_GDEntityPredicate_records + 12);
  sub_1AE525B74(v2, v3, v4, v60, v6, v7);
  swift_bridgeObjectRetain();
  sub_1AE4FB75C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1AE925F8C();
  if (_Records_GDEntityPredicate_labels)
  {
    v15 = v6 | (v7 << 16);
    v68[0] = v13;
    v68[1] = v14;
    v68[2] = sub_1AE925F8C();
    v68[3] = v16;
    v69 = v12;
    sub_1AE525F34((uint64_t)v68);
    v18 = v17;
    v20 = v19;
    sub_1AE4F81B8();
    sub_1AE4F6718();
    if (v20)
    {
      sub_1AE4F665C();
      sub_1AE4F6648();
      v21 = v8;
    }
    else
    {
      v22 = sub_1AE525020(v57);
      v21 = v8;
      if (!v23)
      {
        static EntityPredicate.latitude.getter();
        sub_1AE525F34((uint64_t)v67);
        v18 = v31;
        sub_1AE525EF8((uint64_t)v67);
        v25 = v60;
        if (v18)
        {
          static EntityPredicate.longitude.getter();
          sub_1AE525F34((uint64_t)v66);
          v51 = v32;
          v20 = v33;
          sub_1AE4F6648();
          sub_1AE525EF8((uint64_t)v66);
          if (v20)
          {
            sub_1AE925F74();
            sub_1AE4F6728();
            sub_1AE925F74();
            sub_1AE925F74();
            sub_1AE4F6710();
            sub_1AE925F74();
            v24 = v59;
            v18 = 40;
            v20 = 0xE100000000000000;
            sub_1AE4F665C();
            goto LABEL_11;
          }
          v42 = sub_1AE4F6728();
          sub_1AE50196C(v42, v43, v44, v45, v46, v47, v48, v49, v51, v52, v53, v54, v2, a2, v57, v58, v59, v60, v61,
            v9,
            v63);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1AE4F81B8();
          sub_1AE4F665C();
          sub_1AE5052F4();
          v18 = 0;
        }
        else
        {
          v34 = sub_1AE4F6648();
          sub_1AE50196C(v34, v35, v36, v37, v38, v39, v40, v41, v50, v52, v53, v54, v2, a2, v57, v58, v59, v60, v61,
            v9,
            v63);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1AE4F81B8();
          sub_1AE4F665C();
          sub_1AE5052F4();
          v20 = 0;
        }
        v15 = 0;
        v25 = 0;
        v63 = 0;
        v64 = 0;
        v24 = 0;
        v28 = 0;
        v29 = v56;
        goto LABEL_12;
      }
      v18 = v22;
      v20 = v23;
      sub_1AE4F665C();
      sub_1AE4F6648();
    }
    v24 = v59;
    v25 = v60;
LABEL_11:
    v27 = v53;
    v26 = v54;
    v28 = v2;
    v29 = (_QWORD *)a2;
    v30 = HIDWORD(v52);
LABEL_12:
    *v29 = v28;
    v29[1] = v24;
    v29[2] = v63;
    v29[3] = v25;
    v29[4] = v15;
    v29[5] = v18;
    v29[6] = v20;
    v29[7] = v27;
    v29[8] = v21;
    v29[9] = v62;
    v29[10] = v65;
    v29[11] = v26;
    v29[12] = v30;
    v29[13] = v64;
    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1AE525020(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v14;

  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97378]), sel_init);
  if (qword_1EED996B0 != -1)
    swift_once();
  v2 = qword_1EEE11E28;
  v3 = *(_QWORD *)(qword_1EEE11E28 + 16);
  if (v3)
  {
    sub_1AE4FB75C();
    v4 = v2 + 72;
    do
    {
      v5 = *(_QWORD *)(a1 + 16);
      swift_retain();
      if (v5)
      {
        sub_1AE4F6730();
        sub_1AE4F6708();
        sub_1AE536DB0();
        if ((v6 & 1) != 0)
          swift_bridgeObjectRetain();
        sub_1AE4F76D8();
        sub_1AE4F81B8();
      }
      v4 += 48;
      swift_setAtWritableKeyPath();
      swift_release();
      --v3;
    }
    while (v3);
    sub_1AE4F6648();
  }
  v7 = objc_msgSend((id)objc_opt_self(), sel_singleLineStringFromPostalAddress_addCountryName_, v14, 0);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1AE925E3C();
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0xE000000000000000;
  }

  v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v12 = v9 & 0xFFFFFFFFFFFFLL;
  if (!v12)
  {
    sub_1AE4F9038();
    return 0;
  }
  return v9;
}

uint64_t sub_1AE5251DC(uint64_t a1)
{
  uint64_t result;
  _QWORD __dst[32];
  __int16 v4;

  sub_1AE525A5C();
  result = sub_1AE925C98();
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1AE4FB75C();
    memcpy(__dst, (const void *)(a1 + 32), 0x90uLL);
    __dst[28] = __dst[7];
    __dst[29] = __dst[8];
    __dst[30] = __dst[9];
    __dst[31] = __dst[10];
    v4 = __dst[11];
    __asm { BR              X9 }
  }
  return result;
}

uint64_t sub_1AE525A0C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AddressRenderer()
{
  return objc_opt_self();
}

void sub_1AE525A3C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AE524C0C(a1, a2);
}

unint64_t sub_1AE525A5C()
{
  unint64_t result;

  result = qword_1EED9ADB0;
  if (!qword_1EED9ADB0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityPredicate, &type metadata for EntityPredicate);
    atomic_store(result, (unint64_t *)&qword_1EED9ADB0);
  }
  return result;
}

uint64_t sub_1AE525A98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 104);
  v14 = *(_QWORD *)(a1 + 96);
  v11 = *(_QWORD *)(a1 + 120);
  v12 = *(_QWORD *)(a1 + 112);
  v6 = *(_BYTE *)(a1 + 50);
  v7 = *(unsigned __int16 *)(a1 + 48);
  v10 = *(_BYTE *)(a1 + 130);
  v8 = *(unsigned __int16 *)(a1 + 128);
  swift_bridgeObjectRetain();
  sub_1AE525B74(v2, v3, v4, v5, v7, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE525B74(v14, v13, v12, v11, v8, v10);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE525B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t result;

  result = a2;
  if (a6 - 2 < 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  if (!a6)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1AE525BB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 104);
  v14 = *(_QWORD *)(a1 + 96);
  v12 = *(_QWORD *)(a1 + 112);
  v11 = *(_QWORD *)(a1 + 120);
  v6 = *(_BYTE *)(a1 + 50);
  v7 = *(unsigned __int16 *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 130);
  v9 = *(unsigned __int16 *)(a1 + 128);
  swift_bridgeObjectRelease();
  sub_1AE525C94(v2, v3, v4, v5, v7, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE525C94(v14, v13, v12, v11, v9, v8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE525C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  uint64_t result;

  result = a2;
  if (a6 - 2 < 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (!a6)
    return swift_bridgeObjectRelease();
  return result;
}

char *sub_1AE525CD8()
{
  return sel_street;
}

void sub_1AE525CE4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AE524B6C(a1, (SEL *)&selRef_street, a2);
}

void sub_1AE525D00(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1AE524BBC(a1, a2, a3, a4, (SEL *)&selRef_setStreet_);
}

char *sub_1AE525D1C()
{
  return sel_city;
}

void sub_1AE525D28(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AE524B6C(a1, (SEL *)&selRef_city, a2);
}

void sub_1AE525D44(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1AE524BBC(a1, a2, a3, a4, (SEL *)&selRef_setCity_);
}

char *sub_1AE525D60()
{
  return sel_subLocality;
}

void sub_1AE525D6C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AE524B6C(a1, (SEL *)&selRef_subLocality, a2);
}

void sub_1AE525D88(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1AE524BBC(a1, a2, a3, a4, (SEL *)&selRef_setSubLocality_);
}

char *sub_1AE525DA4()
{
  return sel_state;
}

void sub_1AE525DB0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AE524B6C(a1, (SEL *)&selRef_state, a2);
}

void sub_1AE525DCC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1AE524BBC(a1, a2, a3, a4, (SEL *)&selRef_setState_);
}

char *sub_1AE525DE8()
{
  return sel_subAdministrativeArea;
}

void sub_1AE525DF4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AE524B6C(a1, (SEL *)&selRef_subAdministrativeArea, a2);
}

void sub_1AE525E10(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1AE524BBC(a1, a2, a3, a4, (SEL *)&selRef_setSubAdministrativeArea_);
}

char *sub_1AE525E2C()
{
  return sel_postalCode;
}

void sub_1AE525E38(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AE524B6C(a1, (SEL *)&selRef_postalCode, a2);
}

void sub_1AE525E54(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1AE524BBC(a1, a2, a3, a4, (SEL *)&selRef_setPostalCode_);
}

char *sub_1AE525E70()
{
  return sel_country;
}

void sub_1AE525E7C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AE524B6C(a1, (SEL *)&selRef_country, a2);
}

void sub_1AE525E98(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1AE524BBC(a1, a2, a3, a4, (SEL *)&selRef_setCountry_);
}

char *sub_1AE525EB4()
{
  return sel_ISOCountryCode;
}

void sub_1AE525EC0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AE524B6C(a1, (SEL *)&selRef_ISOCountryCode, a2);
}

void sub_1AE525EDC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1AE524BBC(a1, a2, a3, a4, (SEL *)&selRef_setISOCountryCode_);
}

uint64_t sub_1AE525EF8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE525F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  return sub_1AE525A98((uint64_t)va);
}

void sub_1AE525F34(uint64_t a1)
{
  uint64_t v1;

  sub_1AE515B48(a1, v1);
}

IntelligencePlatform::AgeDifferenceCategory __swiftcall AgeDifferenceCategory.init(age:userAge:)(Swift::Int64 age, Swift::Int64 userAge)
{
  char *v2;
  Swift::Int64 v3;
  unint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;

  v3 = age - userAge;
  if (__OFSUB__(age, userAge))
  {
    __break(1u);
  }
  else
  {
    v4 = v3 + 1;
    if (v3 >= -1)
      v5 = 0;
    else
      v5 = 3;
    if (v3 >= -5)
      v6 = v5;
    else
      v6 = 2;
    if (v3 >= -15)
      v7 = v6;
    else
      v7 = 1;
    if (v3 <= 1)
      v8 = v7;
    else
      v8 = 5;
    if (v3 <= 5)
      v9 = v8;
    else
      v9 = 6;
    if (v3 <= 15)
      v10 = v9;
    else
      v10 = 7;
    if (v4 < 3)
      v10 = 4;
    *v2 = v10;
  }
  return (char)age;
}

IntelligencePlatform::AgeDifferenceCategory_optional __swiftcall AgeDifferenceCategory.init(rawValue:)(Swift::Int64 rawValue)
{
  char *v1;
  char v2;

  v2 = 8;
  if ((unint64_t)rawValue < 8)
    v2 = rawValue;
  *v1 = v2;
  return (IntelligencePlatform::AgeDifferenceCategory_optional)rawValue;
}

uint64_t AgeDifferenceCategory.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1AE525FC8()
{
  unint64_t result;

  result = qword_1EED9ADC8;
  if (!qword_1EED9ADC8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AgeDifferenceCategory, &type metadata for AgeDifferenceCategory);
    atomic_store(result, (unint64_t *)&qword_1EED9ADC8);
  }
  return result;
}

void sub_1AE526004()
{
  unsigned __int8 *v0;

  sub_1AE512A7C(*v0);
}

void sub_1AE52600C()
{
  sub_1AE5E8A0C();
}

void sub_1AE526014(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FB6C(a1, *v1);
}

IntelligencePlatform::AgeDifferenceCategory_optional sub_1AE52601C(Swift::Int64 *a1)
{
  return AgeDifferenceCategory.init(rawValue:)(*a1);
}

uint64_t sub_1AE526024@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = AgeDifferenceCategory.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for AgeDifferenceCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1AE526094 + 4 * byte_1AE9339C5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1AE5260C8 + 4 * byte_1AE9339C0[v4]))();
}

uint64_t sub_1AE5260C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5260D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE5260D8);
  return result;
}

uint64_t sub_1AE5260E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE5260ECLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1AE5260F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE5260F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AgeDifferenceCategory()
{
  return &type metadata for AgeDifferenceCategory;
}

uint64_t sub_1AE526114()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 16) = xmmword_1AE933AB0;
  *(_QWORD *)(v0 + 32) = &unk_1E5DAE8A8;
  *(_OWORD *)(v0 + 40) = xmmword_1AE933AC0;
  *(_OWORD *)(v0 + 56) = xmmword_1AE933AD0;
  *(_QWORD *)(v0 + 72) = 0x80000001AE97C710;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1AE5158B8(0, 0);
  return v0;
}

uint64_t sub_1AE5261AC(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if (sub_1AE4FFBDC() || sub_1AE85D040())
      return sub_1AE85D50C();
    else
      return sub_1AE85D078(a2);
  }
  return result;
}

double sub_1AE526204@<D0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  double result;
  uint64_t v29;
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _QWORD v36[13];
  unsigned __int8 v37;
  unsigned __int8 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  char v46;
  _OWORD v47[6];
  uint64_t v48;
  char v49;

  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  v9 = a1[3];
  v10 = a1[4];
  v11 = *((_QWORD *)a1 + 10);
  v12 = *(__int128 *)((char *)a1 + 88);
  v13 = *((_BYTE *)a1 + 104);
  v14 = *(_QWORD *)a2;
  v15 = *(_QWORD *)(a2 + 8);
  v16 = *(_QWORD *)(a2 + 16);
  v17 = *(_QWORD *)(a2 + 24);
  v18 = *(_QWORD *)(a2 + 32);
  v19 = *(_QWORD *)(a2 + 40);
  v20 = *(_QWORD *)(a2 + 48);
  v21 = *(_QWORD *)(a2 + 56);
  v22 = *(_QWORD *)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 72);
  v24 = *(_QWORD *)(a2 + 80);
  v25 = *(_QWORD *)(a2 + 88);
  v26 = *(_QWORD *)(a2 + 96);
  v27 = *(_BYTE *)(a2 + 104);
  if ((unint64_t)v12 >> 1 != 0xFFFFFFFF || (v13 & 0x1E) != 0)
  {
    v39 = v6;
    v40 = v7;
    v41 = v8;
    v42 = v9;
    v43 = v10;
    v44 = v11;
    v45 = v12;
    v46 = v13;
    v38 = 1;
    v36[0] = v14;
    v36[1] = v15;
    v36[2] = v16;
    v36[3] = v17;
    v36[4] = v18;
    v36[5] = v19;
    v36[6] = v20;
    v36[7] = v21;
    v36[8] = v22;
    v36[9] = v23;
    v36[10] = v24;
    v36[11] = v25;
    v36[12] = v26;
    v37 = v27;
    sub_1AE84CD68(&v38, (uint64_t)v36, (uint64_t)v47);
    if (!v3)
    {
      v29 = v48;
      v30 = v49;
      result = *(double *)v47;
      v31 = v47[1];
      v32 = v47[2];
      v33 = v47[3];
      v34 = v47[4];
      v35 = v47[5];
      *(_OWORD *)a3 = v47[0];
      *(_OWORD *)(a3 + 16) = v31;
      *(_OWORD *)(a3 + 32) = v32;
      *(_OWORD *)(a3 + 48) = v33;
      *(_OWORD *)(a3 + 64) = v34;
      *(_OWORD *)(a3 + 80) = v35;
      *(_QWORD *)(a3 + 96) = v29;
      *(_BYTE *)(a3 + 104) = v30;
    }
  }
  else
  {
    *(_QWORD *)a3 = v14;
    *(_QWORD *)(a3 + 8) = v15;
    *(_QWORD *)(a3 + 16) = v16;
    *(_QWORD *)(a3 + 24) = v17;
    *(_QWORD *)(a3 + 32) = v18;
    *(_QWORD *)(a3 + 40) = v19;
    *(_QWORD *)(a3 + 48) = v20;
    *(_QWORD *)(a3 + 56) = v21;
    *(_QWORD *)(a3 + 64) = v22;
    *(_QWORD *)(a3 + 72) = v23;
    *(_QWORD *)(a3 + 80) = v24;
    *(_QWORD *)(a3 + 88) = v25;
    *(_QWORD *)(a3 + 96) = v26;
    *(_BYTE *)(a3 + 104) = v27;
    sub_1AE5263DC(v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
  }
  return result;
}

BOOL sub_1AE526348(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a2 + 88);
  v3 = *(_BYTE *)(a2 + 104);
  if (a1 && !sub_1AE4FFBDC())
    return 1;
  return (v3 & 0x1E) != 0 || v2 >> 1 != 0xFFFFFFFF;
}

BOOL sub_1AE526398()
{
  return !sub_1AE4FFBDC();
}

uint64_t type metadata accessor for All()
{
  return objc_opt_self();
}

uint64_t sub_1AE5263DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  unsigned __int8 v14;

  v14 = a4;
  if ((a14 & 0x10) == 0)
    return sub_1AE526458(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  swift_bridgeObjectRetain();
  return sub_1AE526540(a2, a3, v14);
}

uint64_t sub_1AE526458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t result;

  switch(a14 >> 5)
  {
    case 0:
    case 3:
    case 5:
      goto LABEL_5;
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 2:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_4:
      swift_bridgeObjectRetain();
LABEL_5:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1AE526540(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t dispatch thunk of AllTripleEnumeratorProtocol.enumerateTriples(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AllTripleProviderProtocol.triples()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

void static Analytics.sendEventForProduction(eventName:prefix:eventPayload:)(int a1, int a2, uint64_t a3, void *a4, void *a5)
{
  void *v10;
  Swift::String_optional v11;

  v10 = (void *)MEMORY[0x1AF454348]();
  v11.value._countAndFlagsBits = a3;
  v11.value._object = a4;
  sub_1AE5265E4(a1, a2, v11, a5);
  sub_1AE4FFBE4(v10);
}

void sub_1AE5265E4(int a1, int a2, Swift::String_optional prefix, void *a4)
{
  void *v5;

  String.fullEventName(prefix:)(prefix);
  v5 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  if (a4)
  {
    sub_1AE4F99B0();
    a4 = (void *)sub_1AE925C44();
  }
  AnalyticsSendEvent();

}

Swift::String __swiftcall String.fullEventName(prefix:)(Swift::String_optional prefix)
{
  void *v1;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String result;
  Swift::String_optional v5;

  if (prefix.value._object)
  {
    v5 = prefix;
    sub_1AE925E3C();
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5.value._countAndFlagsBits = sub_1AE925E3C();
    v5.value._object = v1;
  }
  sub_1AE925F74();
  sub_1AE925F74();
  countAndFlagsBits = v5.value._countAndFlagsBits;
  object = v5.value._object;
  result._object = object;
  result._countAndFlagsBits = countAndFlagsBits;
  return result;
}

uint64_t sub_1AE526870(uint64_t a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = (id)(*(uint64_t (**)(void))(a1 + 16))();
  if (!v1)
    return 0;
  v2 = v1;
  sub_1AE4F99B0();
  v3 = sub_1AE925C5C();

  return v3;
}

id Analytics.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id Analytics.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id Analytics.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AE526980()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1AE5269A4()
{
  uint64_t v0;

  return sub_1AE526870(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1AE5269AC()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 16) = xmmword_1AE933BA0;
  *(_QWORD *)(v0 + 32) = &unk_1E5DAE8D8;
  *(_OWORD *)(v0 + 40) = xmmword_1AE933AC0;
  *(_OWORD *)(v0 + 56) = xmmword_1AE933BB0;
  *(_QWORD *)(v0 + 72) = 0x80000001AE97C7E0;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1AE5158B8(0, 0);
  return v0;
}

uint64_t sub_1AE526A44(uint64_t result, uint64_t a2)
{
  if (result)
    return sub_1AE85D598(a2);
  return result;
}

BOOL sub_1AE526A6C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a2 + 88);
  v3 = *(_BYTE *)(a2 + 104);
  if (a1 && !sub_1AE85D040())
    return 1;
  return (v3 & 0x1E) != 0 || v2 >> 1 != 0xFFFFFFFF;
}

BOOL sub_1AE526AC0()
{
  return !sub_1AE85D040();
}

uint64_t type metadata accessor for And()
{
  return objc_opt_self();
}

uint64_t sub_1AE526B08()
{
  return j__swift_bridgeObjectRetain();
}

uint64_t sub_1AE526B20()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_1AE501548(&qword_1EED9ADD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE933BD0;
  *(_BYTE *)(inited + 32) = 0;
  type metadata accessor for AddressRenderer();
  v2 = sub_1AE4FFBF8();
  *(_QWORD *)(inited + 64) = v0;
  *(_QWORD *)(inited + 72) = &off_1E5DB69E8;
  *(_QWORD *)(inited + 40) = v2;
  *(_BYTE *)(inited + 80) = 2;
  type metadata accessor for MusicEntityRenderer();
  v3 = sub_1AE4FFBF8();
  *(_QWORD *)(inited + 112) = v0;
  *(_QWORD *)(inited + 120) = &off_1E5DBAC08;
  *(_QWORD *)(inited + 88) = v3;
  sub_1AE501548(&qword_1EED9ADD8);
  sub_1AE526D04();
  result = sub_1AE925C98();
  qword_1EEE11E30 = result;
  return result;
}

uint64_t sub_1AE526BDC()
{
  unint64_t v0;

  v0 = sub_1AE926B44();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1AE526C24(char a1)
{
  if (!a1)
    return 0x73736572646461;
  if (a1 == 1)
    return 0x7463614670696B73;
  return 0xD000000000000013;
}

void sub_1AE526C8C(char *a1, char *a2)
{
  sub_1AE50FEEC(*a1, *a2);
}

void sub_1AE526C98()
{
  sub_1AE512A88();
}

uint64_t sub_1AE526CA0()
{
  return sub_1AE5E8010();
}

void sub_1AE526CA8()
{
  sub_1AE54F5D4();
}

uint64_t sub_1AE526CB0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE526BDC();
  *a1 = result;
  return result;
}

uint64_t sub_1AE526CDC@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1AE526C24(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1AE526D04()
{
  unint64_t result;

  result = qword_1EED9ADE0;
  if (!qword_1EED9ADE0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE933C74, &type metadata for RouteFlag);
    atomic_store(result, (unint64_t *)&qword_1EED9ADE0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RouteFlag(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE526D8C + 4 * byte_1AE933BE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE526DC0 + 4 * byte_1AE933BE0[v4]))();
}

uint64_t sub_1AE526DC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE526DC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE526DD0);
  return result;
}

uint64_t sub_1AE526DDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE526DE4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE526DE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE526DF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RouteFlag()
{
  return &type metadata for RouteFlag;
}

unint64_t sub_1AE526E10()
{
  unint64_t result;

  result = qword_1EED9ADE8;
  if (!qword_1EED9ADE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE933C4C, &type metadata for RouteFlag);
    atomic_store(result, (unint64_t *)&qword_1EED9ADE8);
  }
  return result;
}

uint64_t sub_1AE526E4C()
{
  return swift_retain();
}

uint64_t CustomAppleMusicEventContext.__allocating_init(context:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1AE4F6744();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, a1, v4);
  if (qword_1ED31C9B0 != -1)
    swift_once();
  v6 = CustomAppleMusicEventContext.__allocating_init(context:viewService:)(v2, (id)qword_1ED31C9A0);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v6;
}

uint64_t CustomAppleMusicEventContext.__allocating_init(context:viewService:)(uint64_t a1, void *a2)
{
  uint64_t v4;

  v4 = sub_1AE4F6738();
  CustomAppleMusicEventContext.init(context:viewService:)(a1, a2);
  return v4;
}

uint64_t CustomAppleMusicEventContext.init(context:viewService:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v5 = v2;
  v8 = *(_QWORD *)(*(_QWORD *)v5 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1AE4F6744();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v4, a1, v8);
  type metadata accessor for AppleMusicEventView();
  sub_1AE4F6738();
  AppleMusicEventView.init(viewService:)(a2);
  if (!v3)
  {
    sub_1AE512FA0(&qword_1EED9ADF0, (uint64_t (*)(uint64_t))type metadata accessor for AppleMusicEventView, (uint64_t)&unk_1AE9342D0);
    type metadata accessor for EventBaseContext();
  }
  v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(a1, v8);
  v10(v4, v8);
  sub_1AE4FD960();
  return v5;
}

void CustomAppleMusicEventContext.__allocating_init<>()()
{
  void *v0;

  if (qword_1ED31C9B0 != -1)
    swift_once();
  v0 = (void *)qword_1ED31C9A0;
  sub_1AE4F6738();
  CustomAppleMusicEventContext.init<>(viewService:)(v0);
  sub_1AE4FC4F8();
}

void CustomAppleMusicEventContext.__allocating_init<>(viewService:)(void *a1)
{
  sub_1AE4F6738();
  CustomAppleMusicEventContext.init<>(viewService:)(a1);
  sub_1AE4FC4F8();
}

uint64_t CustomAppleMusicEventContext.init<>(viewService:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v3 = v1;
  type metadata accessor for AppleMusicEventView();
  sub_1AE4F6738();
  v5 = a1;
  v6 = AppleMusicEventView.init(viewService:)(v5);
  if (v2)
  {

    sub_1AE4FD960();
  }
  else
  {
    v7 = v6;
    ViewService.subgraphView(name:tableName:batchSize:)(0xD000000000000017, 0x80000001AE97C810, 0xD000000000000018, (void *)0x80000001AE97C830, 10);
    sub_1AE501548((uint64_t *)&unk_1ED318930);
    swift_allocObject();
    swift_retain();
    v9 = sub_1AE527CCC();
    swift_release();

    sub_1AE501548(&qword_1EED9ADF8);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v7;
    *(_QWORD *)(v10 + 24) = v9;
    *(_QWORD *)(v3 + 16) = v10;
  }
  return v3;
}

uint64_t CustomAppleMusicEventContext.entryView.getter()
{
  return swift_retain();
}

void CustomAppleMusicEventContext.songEvents(order:)()
{
  sub_1AE500918();
  sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  sub_1AE655934();
  sub_1AE4FB76C();
}

uint64_t CustomAppleMusicEventContext.songEvents(whose:in:order:)(char *a1, uint64_t a2, char a3)
{
  return sub_1AE52733C(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE6559C0);
}

{
  return sub_1AE52733C(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE6559DC);
}

{
  return sub_1AE52733C(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE6559F8);
}

{
  return sub_1AE52733C(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655A14);
}

{
  return sub_1AE52733C(a1, a2, a3, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655A30);
}

uint64_t sub_1AE52733C(char *a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v6 = a3 & 1;
  v7 = *a1;
  v8 = sub_1AE500918();
  v11 = v7;
  v9 = sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  return a4(v8, &v11, a2, v6, v8, v9);
}

void CustomAppleMusicEventContext.songEvents(overlapping:order:)(uint64_t a1, char a2)
{
  sub_1AE527464(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655B18);
}

{
  sub_1AE527464(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655B34);
}

{
  sub_1AE527464(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655B50);
}

{
  sub_1AE527464(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655B6C);
}

{
  sub_1AE527464(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655B88);
}

void sub_1AE527464(uint64_t a1, char a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = a2 & 1;
  v6 = sub_1AE500918();
  v7 = sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  a3(v6, a1, v5, v6, v7);
  sub_1AE4FD94C();
}

uint64_t CustomAppleMusicEventContext.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t CustomAppleMusicEventContext.__deallocating_deinit()
{
  CustomAppleMusicEventContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE52756C()
{
  return sub_1AE526E4C();
}

void CustomAppleMusicEventContext.enumerateSongEvents<>(order:using:)()
{
  sub_1AE500918();
  sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  sub_1AE655EF4();
  sub_1AE4FD94C();
}

void CustomAppleMusicEventContext.enumerateSongEvents<>(order:block:)()
{
  CustomAppleMusicEventContext.enumerateSongEvents<>(order:using:)();
}

uint64_t CustomAppleMusicEventContext.enumerateSongEvents<>(whose:in:order:using:)(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1AE527694(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655FC4);
}

{
  return sub_1AE527694(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655FE8);
}

{
  return sub_1AE527694(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65600C);
}

{
  return sub_1AE527694(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE656030);
}

{
  return sub_1AE527694(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE656054);
}

uint64_t CustomAppleMusicEventContext.enumerateSongEvents<>(whose:in:order:block:)(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1AE527834(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1AE52814C, (uint64_t (*)(char *, uint64_t, _QWORD, uint64_t, _QWORD *))CustomAppleMusicEventContext.enumerateSongEvents<>(whose:in:order:using:));
}

{
  return sub_1AE527834(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1AE52814C, (uint64_t (*)(char *, uint64_t, _QWORD, uint64_t, _QWORD *))CustomAppleMusicEventContext.enumerateSongEvents<>(whose:in:order:using:));
}

{
  return sub_1AE527834(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1AE52814C, (uint64_t (*)(char *, uint64_t, _QWORD, uint64_t, _QWORD *))CustomAppleMusicEventContext.enumerateSongEvents<>(whose:in:order:using:));
}

{
  return sub_1AE527834(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1AE52814C, (uint64_t (*)(char *, uint64_t, _QWORD, uint64_t, _QWORD *))CustomAppleMusicEventContext.enumerateSongEvents<>(whose:in:order:using:));
}

{
  return sub_1AE527834(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1AE52814C, (uint64_t (*)(char *, uint64_t, _QWORD, uint64_t, _QWORD *))CustomAppleMusicEventContext.enumerateSongEvents<>(whose:in:order:using:));
}

uint64_t sub_1AE527694(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v17;

  v11 = *a1;
  v12 = a3 & 1;
  v13 = type metadata accessor for CustomGraphSongEvent(0);
  v17 = v11;
  v14 = sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  return a7(v13, &v17, a2, v12, a4, a5, v13, v14, a6);
}

uint64_t sub_1AE527834(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(char *, uint64_t, _QWORD, uint64_t, _QWORD *))
{
  _QWORD v9[5];
  char v10;

  v10 = *a1;
  v9[2] = a4;
  v9[3] = a5;
  return a8(&v10, a2, a3 & 1, a7, v9);
}

uint64_t CustomAppleMusicEventContext.enumerateSongEvents<>(overlapping:order:using:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1AE5278C8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE656148);
}

{
  return sub_1AE5278C8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE656168);
}

{
  return sub_1AE5278C8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE656188);
}

{
  return sub_1AE5278C8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE6561A8);
}

{
  return sub_1AE5278C8(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE6561C8);
}

uint64_t CustomAppleMusicEventContext.enumerateSongEvents<>(overlapping:order:block:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1AE527A54(a1, a2, a3, a4, a5, (uint64_t)sub_1AE52814C, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD *))CustomAppleMusicEventContext.enumerateSongEvents<>(overlapping:order:using:));
}

{
  return sub_1AE527A54(a1, a2, a3, a4, a5, (uint64_t)sub_1AE527D50, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD *))CustomAppleMusicEventContext.enumerateSongEvents<>(overlapping:order:using:));
}

{
  return sub_1AE527A54(a1, a2, a3, a4, a5, (uint64_t)sub_1AE52814C, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD *))CustomAppleMusicEventContext.enumerateSongEvents<>(overlapping:order:using:));
}

{
  return sub_1AE527A54(a1, a2, a3, a4, a5, (uint64_t)sub_1AE52814C, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD *))CustomAppleMusicEventContext.enumerateSongEvents<>(overlapping:order:using:));
}

{
  return sub_1AE527A54(a1, a2, a3, a4, a5, (uint64_t)sub_1AE52814C, (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD *))CustomAppleMusicEventContext.enumerateSongEvents<>(overlapping:order:using:));
}

uint64_t sub_1AE5278C8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = a2 & 1;
  v12 = type metadata accessor for CustomGraphSongEvent(0);
  v13 = sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  return a6(v12, a1, v11, a3, a4, v12, v13, a5);
}

uint64_t sub_1AE527A54(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, _QWORD, uint64_t, _QWORD *))
{
  _QWORD v8[4];

  v8[2] = a3;
  v8[3] = a4;
  return a7(a1, a2 & 1, a6, v8);
}

void sub_1AE527A80(uint64_t a1, BOOL *a2, uint64_t (*a3)(char *))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;

  v7 = sub_1AE501548(&qword_1EED9AE90);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE5280C8(a1, (uint64_t)v9);
  swift_storeEnumTagMultiPayload();
  v10 = a3(v9);
  sub_1AE52810C((uint64_t)v9);
  if (!v3)
    *a2 = (v10 & 1) == 0;
  sub_1AE4FD94C();
}

void CustomAppleMusicEventContext.latestSongEvent()()
{
  sub_1AE527B78((void (*)(uint64_t, uint64_t, uint64_t))sub_1AE6562E4);
}

void CustomAppleMusicEventContext.earliestSongEvent()()
{
  sub_1AE527B78((void (*)(uint64_t, uint64_t, uint64_t))sub_1AE656300);
}

void sub_1AE527B78(void (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1AE500918();
  v3 = sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  a1(v2, v2, v3);
  sub_1AE4FB76C();
}

uint64_t sub_1AE527BDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;

  type metadata accessor for InitializationResourcesManager();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1AE925C98();
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v1 + 56) = v3;
  return v1;
}

uint64_t sub_1AE527C58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  type metadata accessor for InitializationResourcesManager();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1AE925C98();
  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = v3;
  return v1;
}

uint64_t sub_1AE527CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_1AE4FC4EC();
  ObjectSynthesisDictionaryMapping.init()(&v3);
  *(_QWORD *)(v1 + 32) = v3;
  swift_release();
  return sub_1AE527C58(v0);
}

uint64_t sub_1AE527D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_1AE4FC4EC();
  ObjectSynthesisDictionaryMapping.init()(&v3);
  *(_QWORD *)(v1 + 64) = v3;
  swift_release();
  return sub_1AE527BDC(v0);
}

void sub_1AE527D50(uint64_t a1, BOOL *a2)
{
  uint64_t v2;

  sub_1AE527A80(a1, a2, *(uint64_t (**)(char *))(v2 + 16));
}

uint64_t sub_1AE527D68(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

uint64_t sub_1AE527D70()
{
  return sub_1AE512FA0(&qword_1EED9ADF0, (uint64_t (*)(uint64_t))type metadata accessor for AppleMusicEventView, (uint64_t)&unk_1AE9342D0);
}

uint64_t sub_1AE527D9C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1AE527DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(_QWORD *)(a3 - 8);
}

uint64_t sub_1AE527DC0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v5 = *a3;
  *(_QWORD *)(a1 + 8) = MEMORY[0x1AF454B70](&unk_1AE933CC0);
  v7 = v5;
  result = MEMORY[0x1AF454B70](&protocol conformance descriptor for <> CustomAppleMusicEventContext<A>, a2, &v7);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AE527E20()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1AE527E44(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1AF454B70](&protocol conformance descriptor for CustomAppleMusicEventContext<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE527E70()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CustomAppleMusicEventContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CustomAppleMusicEventContext);
}

uint64_t method lookup function for CustomAppleMusicEventContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CustomAppleMusicEventContext.__allocating_init(context:viewService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of CustomAppleMusicEventContext.__allocating_init<>(viewService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_1AE527EFC()
{
  type metadata accessor for AppleMusicEventEntryView();
  type metadata accessor for CustomGraphSongEvent(255);
  swift_getAssociatedTypeWitness();
  sub_1AE4FCE04();
  sub_1AE4FE8A0();
  sub_1AE4FE8A0();
  sub_1AE4FCE04();
  sub_1AE4FCE04();
  sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  sub_1AE4FE8A0();
  sub_1AE4FCE04();
  type metadata accessor for TypedGraphObjectSequence.Iterator();
}

void sub_1AE528048(uint64_t a1)
{
  sub_1AE512FA0(&qword_1EED9AE88, (uint64_t (*)(uint64_t))type metadata accessor for AppleMusicEventEntryView, (uint64_t)&unk_1AE934270);
  MEMORY[0x1AF454B70](&unk_1AE96DA70, a1);
  type metadata accessor for EventBaseView.EventViewSequence();
}

uint64_t sub_1AE528098(uint64_t a1)
{
  return MEMORY[0x1AF454B70](&unk_1AE948C04, a1);
}

uint64_t sub_1AE5280C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CustomGraphSongEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE52810C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1EED9AE90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AE52814C(uint64_t a1, BOOL *a2)
{
  sub_1AE527D50(a1, a2);
}

uint64_t AppleMusicEventEntry.startDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_1AE4F675C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t AppleMusicEventEntry.endDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1AE5281B4(v2 + *(int *)(a1 + 40), a2);
}

uint64_t sub_1AE5281B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1ED30EB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void AppleMusicEventEntry.entityClass.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  EntityClass.init(intValue:)(*(_BYTE *)(v2 + 7), (uint64_t)&v13);
  v5 = v14;
  if (v14)
  {
    v6 = v17;
    v8 = v15;
    v7 = v16;
    *(_QWORD *)a2 = v13;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v8;
    *(_QWORD *)(a2 + 24) = v7;
    *(_BYTE *)(a2 + 32) = v6;
  }
  else
  {
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v9 = sub_1AE925B6C();
    sub_1AE4FB608(v9, (uint64_t)qword_1ED31BC90);
    v10 = sub_1AE925B54();
    v11 = sub_1AE9265F8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1AE4F2000, v10, v11, "AppleMusicEventEntry: entityClass: id.untyped.entityClass is nil.", v12, 2u);
      MEMORY[0x1AF454C78](v12, -1, -1);
    }

    static GraphObjectBase.entityClass.getter(*(_QWORD *)(a1 + 16), *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8));
  }
}

void AppleMusicEventEntry.cast<A>(as:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1AE501548(&qword_1ED30EB60);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F666C();
  v11 = v10 - v9;
  v12 = sub_1AE4F675C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F666C();
  v16 = v15 - v14;
  v20 = *(_QWORD *)v4;
  type metadata accessor for TypedEntityIdentifier(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v17);
  TypedEntityIdentifier.cast<A>(as:)(a2, a3, &v21);
  if (!v19)
  {
    v20 = v21;
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v16, &v4[*(int *)(a1 + 36)], v12);
    sub_1AE5281B4((uint64_t)&v4[*(int *)(a1 + 40)], v11);
    sub_1AE528448(&v20, v16, v11, a2, a3, a4);
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE528448@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;

  *a6 = *a1;
  v9 = type metadata accessor for AppleMusicEventEntry(0, a4, a5, a4);
  v10 = (char *)a6 + *(int *)(v9 + 36);
  v11 = sub_1AE4F675C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
  return sub_1AE5298B4(a3, (uint64_t)a6 + *(int *)(v9 + 40));
}

uint64_t sub_1AE5284C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AE528608()
{
  return 3;
}

uint64_t sub_1AE528610(char a1)
{
  if (!a1)
    return 25705;
  if (a1 == 1)
    return 0x7461447472617473;
  return 0x65746144646E65;
}

BOOL sub_1AE528660(char *a1, char *a2)
{
  return sub_1AE50CBF4(*a1, *a2);
}

uint64_t sub_1AE528674()
{
  return sub_1AE50D5E0();
}

uint64_t sub_1AE528680()
{
  return sub_1AE50CC04();
}

uint64_t sub_1AE52868C()
{
  sub_1AE926EC8();
  sub_1AE50CC04();
  return sub_1AE926F10();
}

uint64_t sub_1AE5286D0()
{
  char *v0;

  return sub_1AE528610(*v0);
}

uint64_t sub_1AE5286DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5284C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE528708()
{
  return sub_1AE50D624();
}

uint64_t sub_1AE528728@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE528608();
  *a1 = result;
  return result;
}

uint64_t sub_1AE528754(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE9340F8, a1);
  return sub_1AE926F94();
}

uint64_t sub_1AE528788(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE9340F8, a1);
  return sub_1AE926FA0();
}

BOOL static AppleMusicEventEntry.== infix(_:_:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  void (*v44)(uint64_t, uint64_t);
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v8 = sub_1AE4F675C();
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F9024();
  v49 = v9;
  v10 = sub_1AE501548(&qword_1ED30EB10);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F666C();
  v14 = v13 - v12;
  sub_1AE501548(&qword_1ED30EB60);
  sub_1AE4F66F0();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v46 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v46 - v22;
  v24 = a1;
  v25 = *a1;
  v26 = a2;
  v52 = *a2;
  v53 = v25;
  v27 = a3;
  v28 = a4;
  if (!static TypedEntityIdentifier.== infix(_:_:)(&v53, &v52))
    return 0;
  v30 = v10;
  v47 = v21;
  v48 = v23;
  v46 = v18;
  v31 = v51;
  v32 = type metadata accessor for AppleMusicEventEntry(0, v27, v28, v29);
  if ((sub_1AE924894() & 1) == 0)
    return 0;
  v33 = (uint64_t)v48;
  sub_1AE5281B4((uint64_t)v24 + *(int *)(v32 + 40), (uint64_t)v48);
  v34 = (uint64_t)v47;
  sub_1AE5281B4((uint64_t)v26 + *(int *)(v32 + 40), (uint64_t)v47);
  v35 = *(int *)(v30 + 48);
  v36 = v14;
  v37 = v14 + v35;
  sub_1AE5281B4(v33, v14);
  sub_1AE5281B4(v34, v37);
  v38 = v31;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v14, 1, v31) == 1)
  {
    sub_1AE52982C(v34, &qword_1ED30EB60);
    sub_1AE52982C(v33, &qword_1ED30EB60);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v37, 1, v31) == 1)
    {
      sub_1AE52982C(v14, &qword_1ED30EB60);
      return 1;
    }
    goto LABEL_8;
  }
  v39 = v14;
  v40 = (uint64_t)v46;
  sub_1AE5281B4(v39, (uint64_t)v46);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v37, 1, v31) == 1)
  {
    sub_1AE52982C(v34, &qword_1ED30EB60);
    sub_1AE52982C(v33, &qword_1ED30EB60);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v40, v31);
LABEL_8:
    sub_1AE52982C(v36, &qword_1ED30EB10);
    return 0;
  }
  v41 = v49;
  v42 = v50;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v49, v37, v38);
  sub_1AE529874(&qword_1EED93EE8, MEMORY[0x1E0CB08B8]);
  v43 = sub_1AE925E00();
  v44 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v44(v41, v38);
  sub_1AE505310(v34);
  sub_1AE505310(v33);
  v44(v40, v38);
  sub_1AE505310(v36);
  return (v43 & 1) != 0;
}

void AppleMusicEventEntry.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = type metadata accessor for AppleMusicEventEntry.CodingKeys(255, v5, v6, a4);
  MEMORY[0x1AF454B70](&unk_1AE9340F8, v7);
  v8 = sub_1AE926CF4();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE926F4C();
  type metadata accessor for TypedEntityIdentifier(0, v5, v6, v9);
  sub_1AE5032DC();
}

void sub_1AE528BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 - 96);
  sub_1AE926CC4();
  if (v3)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v0, v1);
  }
  else
  {
    v4 = *(_QWORD *)(v2 - 112);
    *(_BYTE *)(v2 - 82) = 1;
    sub_1AE4F675C();
    sub_1AE529874((unint64_t *)&qword_1ED30EB50, MEMORY[0x1E0CB0890]);
    sub_1AE4FB77C();
    sub_1AE926CC4();
    *(_BYTE *)(v2 - 83) = 2;
    sub_1AE4FB77C();
    sub_1AE926C70();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v1);
  }
  sub_1AE4F667C();
}

void AppleMusicEventEntry.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1AE501548(&qword_1ED30EB60);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  v7 = sub_1AE4F675C();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  type metadata accessor for AppleMusicEventEntry.CodingKeys(255, a2, a3, v6);
  sub_1AE5032DC();
}

void sub_1AE528D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v13 = sub_1AE926C28();
  *(_QWORD *)(v12 - 104) = v13;
  *(_QWORD *)(v12 - 152) = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&a9 - v14;
  *(_QWORD *)(v12 - 128) = v10;
  *(_QWORD *)(v12 - 120) = v9;
  v17 = type metadata accessor for AppleMusicEventEntry(0, v10, v9, v16);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  sub_1AE4F9858(v11, v11[3]);
  *(_QWORD *)(v12 - 112) = v15;
  v19 = *(_QWORD *)(v12 - 96);
  sub_1AE926F34();
  if (!v19)
  {
    *(_QWORD *)(v12 - 184) = v18;
    *(_QWORD *)(v12 - 96) = v17;
    type metadata accessor for TypedEntityIdentifier(0, *(_QWORD *)(v12 - 128), *(_QWORD *)(v12 - 120), v20);
    *(_BYTE *)(v12 - 81) = 0;
    sub_1AE5032DC();
  }
  sub_1AE4F907C();
  sub_1AE4F667C();
}

uint64_t sub_1AE528F98@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;

  v6 = *a1;
  return sub_1AE528448(&v6, a2, a3, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), a5);
}

void sub_1AE528FC8(uint64_t a1, uint64_t a2)
{
  AppleMusicEventEntry.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

void sub_1AE528FE4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  AppleMusicEventEntry.encode(to:)(a1, a2, a3, a4);
}

BOOL sub_1AE528FF8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return static AppleMusicEventEntry.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1AE529004()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1AE926EF8();
  sub_1AE926EF8();
  if (v1 == 1)
    return sub_1AE926EE0();
  sub_1AE926EE0();
  return sub_1AE926EF8();
}

uint64_t sub_1AE529070(uint64_t a1, uint64_t a2)
{
  char v3;

  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
    return 0;
  v3 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
      v3 = 1;
    if ((v3 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t sub_1AE5290C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6D69747472617473 && a2 == 0xE900000000000065;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x656D6974646E65 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AE529218(char a1)
{
  if (!a1)
    return 0x7463656A627573;
  if (a1 == 1)
    return 0x6D69747472617473;
  return 0x656D6974646E65;
}

void sub_1AE529274(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1AE501548(&qword_1EED9AFF0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F666C();
  v7 = v6 - v5;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE52A41C();
  sub_1AE926F4C();
  sub_1AE52A494();
  sub_1AE926CC4();
  if (!v1)
  {
    sub_1AE926CA0();
    sub_1AE926C58();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  sub_1AE4FCE0C();
}

uint64_t sub_1AE5293D4()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1AE926EC8();
  sub_1AE926EF8();
  sub_1AE926EF8();
  sub_1AE926EE0();
  if (v1 != 1)
    sub_1AE926EF8();
  return sub_1AE926F10();
}

void sub_1AE529470(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;

  v5 = sub_1AE501548(&qword_1EED9AFE0);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE52A41C();
  sub_1AE926F34();
  if (!v2)
  {
    sub_1AE52A458();
    sub_1AE926BEC();
    sub_1AE926BC8();
    v7 = v6;
    v8 = sub_1AE926B80();
    v10 = v9;
    sub_1AE4FC504();
    *(_QWORD *)a2 = v11;
    *(_QWORD *)(a2 + 8) = v7;
    *(_QWORD *)(a2 + 16) = v8;
    *(_BYTE *)(a2 + 24) = v10 & 1;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  sub_1AE4FCE0C();
}

uint64_t sub_1AE5295E0()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  return sub_1AE926F10();
}

uint64_t sub_1AE529620()
{
  char *v0;

  return sub_1AE529218(*v0);
}

uint64_t sub_1AE529628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5290C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE52964C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE528608();
  *a1 = result;
  return result;
}

uint64_t sub_1AE529670()
{
  sub_1AE52A41C();
  return sub_1AE926F94();
}

uint64_t sub_1AE529698()
{
  sub_1AE52A41C();
  return sub_1AE926FA0();
}

uint64_t sub_1AE5296C0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

double sub_1AE5296CC()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void sub_1AE5296D4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AE529470(a1, a2);
}

void sub_1AE5296E8(_QWORD *a1)
{
  sub_1AE529274(a1);
}

uint64_t sub_1AE5296FC()
{
  sub_1AE52A324();
  return sub_1AE924DA4();
}

unint64_t sub_1AE52975C()
{
  return 0xD000000000000013;
}

uint64_t sub_1AE529784()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1AE926EC8();
  sub_1AE926EF8();
  sub_1AE926EF8();
  sub_1AE926EE0();
  if (v1 != 1)
    sub_1AE926EF8();
  return sub_1AE926F10();
}

uint64_t type metadata accessor for AppleMusicEventEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AppleMusicEventEntry);
}

uint64_t sub_1AE52982C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1AE501548(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for AppleMusicEventEntry.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AppleMusicEventEntry.CodingKeys);
}

uint64_t sub_1AE529874(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1AE9248DC();
    result = MEMORY[0x1AF454B70](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AE5298B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1ED30EB60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AE529900()
{
  unint64_t result;

  result = qword_1EED9AE98;
  if (!qword_1EED9AE98)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9340DC, &type metadata for AppleMusicEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED9AE98);
  }
  return result;
}

uint64_t sub_1AE52993C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1AF454B70](&unk_1AE933DB8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE52996C()
{
  unint64_t result;

  result = qword_1EED9AEA0[0];
  if (!qword_1EED9AEA0[0])
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9340C0, &type metadata for AppleMusicEventEntryRecord);
    atomic_store(result, qword_1EED9AEA0);
  }
  return result;
}

uint64_t sub_1AE5299A8(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_1AE5299B0(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1AF454B70](&protocol conformance descriptor for AppleMusicEventEntry<A>);
  a1[2] = MEMORY[0x1AF454B70](&protocol conformance descriptor for AppleMusicEventEntry<A>, a2);
  result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AppleMusicEventEntry<A>, a2);
  a1[3] = result;
  return result;
}

uint64_t sub_1AE529A08()
{
  return swift_allocateGenericValueMetadata();
}

void sub_1AE529A10()
{
  unint64_t v0;
  unint64_t v1;

  sub_1AE9248DC();
  if (v0 <= 0x3F)
  {
    sub_1AE52A140();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_1AE529AA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 36);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1AE9248DC();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = *(int *)(a3 + 40);
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v14, 1, v10))
    {
      v15 = sub_1AE501548(&qword_1ED30EB60);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v11(v13, v14, v10);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v13, 0, 1, v10);
    }
  }
  return v4;
}

uint64_t sub_1AE529BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_1AE9248DC();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v8(v4, v5);
  v6 = a1 + *(int *)(a2 + 40);
  result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v6, 1, v5);
  if (!(_DWORD)result)
    return v8(v6, v5);
  return result;
}

_QWORD *sub_1AE529C48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AE9248DC();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 40);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v9))
  {
    v14 = sub_1AE501548(&qword_1ED30EB60);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, v9);
  }
  return a1;
}

_QWORD *sub_1AE529D28(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AE9248DC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 40);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  LODWORD(v7) = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1 + v12, 1, v9);
  v15 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v14, 1, v9);
  if (!(_DWORD)v7)
  {
    if (!v15)
    {
      v11(v13, v14, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_1AE501548(&qword_1ED30EB60);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v13, 0, 1, v9);
  return a1;
}

_QWORD *sub_1AE529E4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AE9248DC();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 40);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v9))
  {
    v14 = sub_1AE501548(&qword_1ED30EB60);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, v9);
  }
  return a1;
}

_QWORD *sub_1AE529F2C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AE9248DC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 40);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  LODWORD(v7) = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1 + v12, 1, v9);
  v15 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v14, 1, v9);
  if (!(_DWORD)v7)
  {
    if (!v15)
    {
      v11(v13, v14, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_1AE501548(&qword_1ED30EB60);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v14, v9);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v13, 0, 1, v9);
  return a1;
}

uint64_t sub_1AE52A050()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE52A05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1AE4F675C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = *(int *)(a3 + 36);
  }
  else
  {
    v7 = sub_1AE501548(&qword_1ED30EB60);
    v8 = *(int *)(a3 + 40);
  }
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1 + v8, a2, v7);
}

uint64_t sub_1AE52A0C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE52A0D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = sub_1AE4F675C();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = *(int *)(a4 + 36);
  }
  else
  {
    v9 = sub_1AE501548(&qword_1ED30EB60);
    v10 = *(int *)(a4 + 40);
  }
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1 + v10, a2, a2, v9);
}

void sub_1AE52A140()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EED9AF28[0])
  {
    sub_1AE9248DC();
    v0 = sub_1AE92670C();
    if (!v1)
      atomic_store(v0, qword_1EED9AF28);
  }
}

__n128 initializeWithCopy for AppleMusicEventEntryRecord(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AppleMusicEventEntryRecord(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AppleMusicEventEntryRecord(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AppleMusicEventEntryRecord()
{
  return &type metadata for AppleMusicEventEntryRecord;
}

uint64_t sub_1AE52A208()
{
  return swift_allocateGenericValueMetadata();
}

void sub_1AE52A218()
{
  JUMPOUT(0x1AF454B70);
}

unint64_t sub_1AE52A22C()
{
  unint64_t result;

  result = qword_1EED9AFB0;
  if (!qword_1EED9AFB0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE933F90, &type metadata for AppleMusicEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED9AFB0);
  }
  return result;
}

unint64_t sub_1AE52A268(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1AE52A2AC();
  a1[2] = sub_1AE52A2E8();
  a1[3] = sub_1AE52A324();
  a1[4] = sub_1AE52A360();
  result = sub_1AE52A39C();
  a1[5] = result;
  return result;
}

unint64_t sub_1AE52A2AC()
{
  unint64_t result;

  result = qword_1EED9AFB8;
  if (!qword_1EED9AFB8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE934028, &type metadata for AppleMusicEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED9AFB8);
  }
  return result;
}

unint64_t sub_1AE52A2E8()
{
  unint64_t result;

  result = qword_1EED9AFC0;
  if (!qword_1EED9AFC0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE933FF8, &type metadata for AppleMusicEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED9AFC0);
  }
  return result;
}

unint64_t sub_1AE52A324()
{
  unint64_t result;

  result = qword_1EED9AFC8;
  if (!qword_1EED9AFC8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE934098, &type metadata for AppleMusicEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED9AFC8);
  }
  return result;
}

unint64_t sub_1AE52A360()
{
  unint64_t result;

  result = qword_1EED9AFD0;
  if (!qword_1EED9AFD0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE934070, &type metadata for AppleMusicEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED9AFD0);
  }
  return result;
}

unint64_t sub_1AE52A39C()
{
  unint64_t result;

  result = qword_1EED9AFD8;
  if (!qword_1EED9AFD8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE933FB8, &type metadata for AppleMusicEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED9AFD8);
  }
  return result;
}

unint64_t sub_1AE52A3D8(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE52996C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1AE52A3FC()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE52A40C()
{
  JUMPOUT(0x1AF454B70);
}

unint64_t sub_1AE52A41C()
{
  unint64_t result;

  result = qword_1EED9AFE8;
  if (!qword_1EED9AFE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE934200, &type metadata for AppleMusicEventEntryRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9AFE8);
  }
  return result;
}

unint64_t sub_1AE52A458()
{
  unint64_t result;

  result = qword_1EED93F48;
  if (!qword_1EED93F48)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityIdentifier, &type metadata for EntityIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EED93F48);
  }
  return result;
}

unint64_t sub_1AE52A494()
{
  unint64_t result;

  result = qword_1EED9AFF8;
  if (!qword_1EED9AFF8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityIdentifier, &type metadata for EntityIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EED9AFF8);
  }
  return result;
}

uint64_t _s20IntelligencePlatform26AppleMusicEventEntryRecordV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE52A51C + 4 * byte_1AE933D95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE52A550 + 4 * asc_1AE933D90[v4]))();
}

uint64_t sub_1AE52A550(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE52A558(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE52A560);
  return result;
}

uint64_t sub_1AE52A56C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE52A574);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE52A578(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE52A580(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppleMusicEventEntryRecord.CodingKeys()
{
  return &type metadata for AppleMusicEventEntryRecord.CodingKeys;
}

unint64_t sub_1AE52A5A0()
{
  unint64_t result;

  result = qword_1EED9B000;
  if (!qword_1EED9B000)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9341D8, &type metadata for AppleMusicEventEntryRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B000);
  }
  return result;
}

unint64_t sub_1AE52A5E0()
{
  unint64_t result;

  result = qword_1EED9B008;
  if (!qword_1EED9B008)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE934148, &type metadata for AppleMusicEventEntryRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B008);
  }
  return result;
}

unint64_t sub_1AE52A620()
{
  unint64_t result;

  result = qword_1EED9B010;
  if (!qword_1EED9B010)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE934170, &type metadata for AppleMusicEventEntryRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B010);
  }
  return result;
}

void ViewService.appleMusicEventEntryView()()
{
  void *v0;

  type metadata accessor for AppleMusicEventEntryView();
  sub_1AE4F66BC();
  AppleMusicEventEntryView.init(viewService:)(v0);
  sub_1AE4FC4F8();
}

void AppleMusicEventEntryView.__allocating_init(viewService:)(void *a1)
{
  sub_1AE4F66BC();
  AppleMusicEventEntryView.init(viewService:)(a1);
  sub_1AE4FC4F8();
}

uint64_t type metadata accessor for AppleMusicEventEntryView()
{
  return objc_opt_self();
}

uint64_t AppleMusicEventEntryView.init(viewService:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = sub_1AE52A828();

  if (v2)
    swift_deallocPartialClassInstance();
  else
    *(_QWORD *)(v1 + 16) = v4;
  return sub_1AE5032E4();
}

_QWORD *sub_1AE52A788()
{
  return sub_1AE52A828();
}

_QWORD *sub_1AE52A7D8()
{
  return sub_1AE52A828();
}

_QWORD *sub_1AE52A828()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(id, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *result;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = *(void **)(v0 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  v3 = (void *)sub_1AE925E18();
  v17[0] = 0;
  v4 = objc_msgSend(v2, sel_requestAssertionForViewName_error_, v3, v17);

  v5 = v17[0];
  if (v4)
  {
    v6 = *(_QWORD **)(v0 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    v7 = v6[5];
    v8 = v6[6];
    sub_1AE4F9858(v6 + 2, v7);
    v9 = *(uint64_t (**)(id, uint64_t, uint64_t))(v8 + 8);
    v10 = v5;
    v11 = v9(v4, v7, v8);
    if (v1)
    {
      return (_QWORD *)swift_unknownObjectRelease();
    }
    else
    {
      v15 = v11;
      v16 = v12;
      sub_1AE52FE10();
      result = (_QWORD *)sub_1AE4F66BC();
      result[2] = v4;
      result[3] = v15;
      result[4] = v16;
    }
  }
  else
  {
    v14 = v17[0];
    sub_1AE9246B4();

    return (_QWORD *)swift_willThrow();
  }
  return result;
}

void AppleMusicEventEntryView.songEventEntries(order:)(char a1)
{
  char v1;

  v1 = sub_1AE5032FC(a1);
  sub_1AE52A994(v1);
  sub_1AE4FD974();
}

uint64_t sub_1AE52A994(char a1)
{
  uint64_t v1;
  uint64_t v2;
  _OWORD v4[2];
  uint64_t v5;

  v5 = 0;
  memset(v4, 0, sizeof(v4));
  sub_1AE52C340((uint64_t)v4, a1 & 1);
  v2 = v1;
  sub_1AE52FBE8((uint64_t)v4, &qword_1EED949D0);
  return v2;
}

void sub_1AE52A9EC()
{
  sub_1AE52AA54();
}

void sub_1AE52AA20()
{
  sub_1AE52AA54();
}

void sub_1AE52AA54()
{
  uint64_t v0;
  char v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t (*v5)(BOOL, unint64_t, uint64_t, uint64_t *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1AE4FC514();
  sub_1AE52C948(v0, v1, v2, v3, v4, v5);
  sub_1AE4FD97C();
  sub_1AE52FE44(v6, &qword_1EED949D0, v7, v8, v9, v10, v11, v12, v13);
  sub_1AE5032E4();
  sub_1AE50533C();
}

void AppleMusicEventEntryView.songEventEntries(whose:in:order:)(unsigned __int8 *a1)
{
  sub_1AE52AB18(a1);
}

{
  sub_1AE52AB18(a1);
}

void sub_1AE52AAC0()
{
  sub_1AE52AC74();
}

void sub_1AE52AB18(unsigned __int8 *a1)
{
  sub_1AE4FB794(a1);
  sub_1AE52AB34();
  sub_1AE4FD974();
}

void sub_1AE52AB34()
{
  char v0;
  char v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[5];

  sub_1AE505318();
  sub_1AE52FE24();
  sub_1AE5078D4();
  if (v2 > v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  v26 = *(_QWORD *)&v2;
  v27 = *(_QWORD *)&v3;
  v4 = sub_1AE4F9084();
  v5 = (uint64_t)sub_1AE52FD14(v4, MEMORY[0x1E0D24668], v21, v22, v23, v24, v25);
  if ((v1 & 1) == 0)
  {
    if (qword_1ED30FFB0 == -1)
    {
LABEL_4:
      v6 = qword_1EEE11C58;
      goto LABEL_8;
    }
LABEL_10:
    v5 = swift_once();
    goto LABEL_4;
  }
  if (qword_1EED99808 != -1)
    v5 = swift_once();
  v6 = qword_1EEE11F90;
LABEL_8:
  sub_1AE4FE8B4(v5, (uint64_t)v6);
  v7 = sub_1AE4F6770();
  sub_1AE52FD08(v7, MEMORY[0x1E0D23DC0], v21, v22, v23, v24, v25, v26, v27, v28[0], v28[1], v28[2], v28[3], v28[4]);
  v8 = sub_1AE52FE04();
  sub_1AE52FDAC(v8, v8, MEMORY[0x1E0D249C8], v9, v10, v11, v12, v13, v21);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v21);
  sub_1AE52FD34((uint64_t)v28, v0);
  sub_1AE4FD97C();
  sub_1AE52FDF0(v14, &qword_1EED949D0, v15, v16, v17, v18, v19, v20, v21);
  sub_1AE5032E4();
  sub_1AE508A28();
}

void sub_1AE52AC48()
{
  sub_1AE52AC74();
}

void sub_1AE52AC74()
{
  char v0;
  char v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[5];

  sub_1AE505318();
  sub_1AE52FE24();
  sub_1AE5078D4();
  if (v2 > v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  v26 = *(_QWORD *)&v2;
  v27 = *(_QWORD *)&v3;
  v4 = sub_1AE4F9084();
  v5 = (uint64_t)sub_1AE52FD14(v4, MEMORY[0x1E0D24668], v21, v22, v23, v24, v25);
  if ((v1 & 1) == 0)
  {
    if (qword_1ED30FFB0 == -1)
    {
LABEL_4:
      v6 = qword_1EEE11C58;
      goto LABEL_8;
    }
LABEL_10:
    v5 = swift_once();
    goto LABEL_4;
  }
  if (qword_1EED99808 != -1)
    v5 = swift_once();
  v6 = qword_1EEE11F90;
LABEL_8:
  sub_1AE4FE8B4(v5, (uint64_t)v6);
  v7 = sub_1AE4F6770();
  sub_1AE52FD08(v7, MEMORY[0x1E0D23DC0], v21, v22, v23, v24, v25, v26, v27, v28[0], v28[1], v28[2], v28[3], v28[4]);
  v8 = sub_1AE52FE04();
  sub_1AE52FDAC(v8, v8, MEMORY[0x1E0D249C8], v9, v10, v11, v12, v13, v21);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v21);
  sub_1AE52FD40((uint64_t)v28, v0, &qword_1EED9A650, &qword_1EED9B040, (uint64_t)sub_1AE52F8B0, (uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t *))sub_1AE51BC60);
  sub_1AE4FD97C();
  sub_1AE52FDF0(v14, &qword_1EED949D0, v15, v16, v17, v18, v19, v20, v21);
  sub_1AE5032E4();
  sub_1AE508A28();
}

void AppleMusicEventEntryView.songEventEntries(whose:in:order:)()
{
  sub_1AE52ADC4();
}

{
  sub_1AE52ADC4();
}

{
  sub_1AE52ADC4();
}

void sub_1AE52ADC4()
{
  sub_1AE52AE58();
  sub_1AE4FD974();
}

void sub_1AE52ADE8()
{
  sub_1AE52AFA4();
}

void sub_1AE52AE20()
{
  sub_1AE52AFA4();
}

void sub_1AE52AE58()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[5];

  sub_1AE50933C();
  v2 = sub_1AE4F9084();
  v3 = sub_1AE52FC90(v2, MEMORY[0x1E0D24668], v15, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
  if ((v1 & 1) != 0)
  {
    if (qword_1EED99808 != -1)
      swift_once();
    v4 = qword_1EEE11F90;
  }
  else
  {
    if (qword_1ED30FFB0 != -1)
      swift_once();
    v4 = qword_1EEE11C58;
  }
  v5 = sub_1AE4FB608(v2, (uint64_t)v4);
  sub_1AE506F88((uint64_t)v3, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  v6 = sub_1AE5019A0();
  v7 = sub_1AE507D58(v6, MEMORY[0x1E0D23DC0], v16, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28[0], v28[1], v28[2], v28[3], v28[4]);
  sub_1AE506504((uint64_t)v7);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v18);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v23);
  sub_1AE52FD34((uint64_t)v28, v0 & 1);
  sub_1AE4FD97C();
  sub_1AE52FD54(v8, &qword_1EED949D0, v9, v10, v11, v12, v13, v14, v17, v18, v19, v20, v21);
  sub_1AE5032E4();
  sub_1AE52FC74();
}

void sub_1AE52AF88()
{
  sub_1AE52AFA4();
}

void sub_1AE52AFA4()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[5];

  sub_1AE50933C();
  v2 = sub_1AE4F9084();
  v3 = sub_1AE52FC90(v2, MEMORY[0x1E0D24668], v15, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
  if ((v1 & 1) != 0)
  {
    if (qword_1EED99808 != -1)
      swift_once();
    v4 = qword_1EEE11F90;
  }
  else
  {
    if (qword_1ED30FFB0 != -1)
      swift_once();
    v4 = qword_1EEE11C58;
  }
  v5 = sub_1AE4FB608(v2, (uint64_t)v4);
  sub_1AE506F88((uint64_t)v3, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  v6 = sub_1AE5019A0();
  v7 = sub_1AE507D58(v6, MEMORY[0x1E0D23DC0], v16, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28[0], v28[1], v28[2], v28[3], v28[4]);
  sub_1AE506504((uint64_t)v7);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v18);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v23);
  sub_1AE52FD40((uint64_t)v28, v0 & 1, &qword_1EED9A650, &qword_1EED9B040, (uint64_t)sub_1AE52F8B0, (uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t *))sub_1AE51BC60);
  sub_1AE4FD97C();
  sub_1AE52FD54(v8, &qword_1EED949D0, v9, v10, v11, v12, v13, v14, v17, v18, v19, v20, v21);
  sub_1AE5032E4();
  sub_1AE52FC74();
}

void AppleMusicEventEntryView.songEventEntries(overlapping:order:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4FE8E0();
  sub_1AE52B218(v0, v1, (_QWORD *(*)(uint64_t *__return_ptr))sub_1AE6589E8, v2);
  sub_1AE4FD974();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4FE8E0();
  sub_1AE52B218(v0, v1, (_QWORD *(*)(uint64_t *__return_ptr))sub_1AE6589FC, v2);
  sub_1AE4FD974();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4FE8E0();
  sub_1AE52B218(v0, v1, (_QWORD *(*)(uint64_t *__return_ptr))sub_1AE658C68, v2);
  sub_1AE4FD974();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4FE8E0();
  sub_1AE52B218(v0, v1, (_QWORD *(*)(uint64_t *__return_ptr))sub_1AE658DE4, v2);
  sub_1AE4FD974();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4FE8E0();
  sub_1AE52B218(v0, v1, (_QWORD *(*)(uint64_t *__return_ptr))sub_1AE658DF0, v2);
  sub_1AE4FD974();
}

void sub_1AE52B118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AE52B274(a1, a2, (_QWORD *(*)(uint64_t *__return_ptr))sub_1AE6589E8, a4);
}

void sub_1AE52B158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AE52B274(a1, a2, (_QWORD *(*)(uint64_t *__return_ptr))sub_1AE6589FC, a4);
}

void sub_1AE52B198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AE52B274(a1, a2, (_QWORD *(*)(uint64_t *__return_ptr))sub_1AE658C68, a4);
}

void sub_1AE52B1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AE52B274(a1, a2, (_QWORD *(*)(uint64_t *__return_ptr))sub_1AE658DE4, a4);
}

void sub_1AE52B218(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr), uint64_t a4)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[40];

  sub_1AE52FCC8(a1, a2, a3, a4);
  sub_1AE52FD34((uint64_t)v7, v4);
  sub_1AE4FD97C();
  sub_1AE52FD4C(v5, &qword_1EED949D0, v6);
  sub_1AE5032E4();
  sub_1AE506868();
}

void sub_1AE52B258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AE52B274(a1, a2, (_QWORD *(*)(uint64_t *__return_ptr))sub_1AE658DF0, a4);
}

void sub_1AE52B274(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr), uint64_t a4)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[40];

  sub_1AE52FCC8(a1, a2, a3, a4);
  sub_1AE52FD40((uint64_t)v7, v4, &qword_1EED9A650, &qword_1EED9B040, (uint64_t)sub_1AE52F8B0, (uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t *))sub_1AE51BC60);
  sub_1AE4FD97C();
  sub_1AE52FD4C(v5, &qword_1EED949D0, v6);
  sub_1AE5032E4();
  sub_1AE506868();
}

void AppleMusicEventEntryView.enumerateSongEventEntries(order:using:)(char a1)
{
  sub_1AE5032FC(a1);
  sub_1AE52ED94();
  sub_1AE4FD974();
}

void sub_1AE52B2F8()
{
  sub_1AE52ED94();
}

void sub_1AE52B314()
{
  sub_1AE52ED94();
}

void sub_1AE52B330()
{
  sub_1AE52ED94();
}

void AppleMusicEventEntryView.enumerateSongEventEntries(whose:in:order:using:)(unsigned __int8 *a1)
{
  sub_1AE52B3E0(a1);
}

{
  sub_1AE52B3E0(a1);
}

{
  sub_1AE52B4A8(a1);
}

{
  sub_1AE52B4A8(a1);
}

{
  sub_1AE52B4A8(a1);
}

void sub_1AE52B378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AE52E9FC(a1, a2, a3, a4, a5, (uint64_t)&unk_1ED30D890, (uint64_t *)&unk_1EED9EFB0, MEMORY[0x1E0D24A28]);
  sub_1AE4FC530();
}

void sub_1AE52B3E0(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  void (*v8)(uint64_t *, uint64_t, _QWORD);

  v1 = sub_1AE4FB794(a1);
  sub_1AE52E9FC(v1, v2, v3, v4, v5, v6, v7, v8);
}

void sub_1AE52B414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AE52E9FC(a1, a2, a3, a4, a5, (uint64_t)&qword_1EED99508, &qword_1EED99510, MEMORY[0x1E0D24958]);
  sub_1AE4FC530();
}

void sub_1AE52B450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AE52E9FC(a1, a2, a3, a4, a5, (uint64_t)&qword_1EED99508, &qword_1EED99510, MEMORY[0x1E0D24958]);
  sub_1AE4FC530();
}

void sub_1AE52B4A8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1AE4FB794(a1);
  sub_1AE52EB94(v1, v2, v3, v4, v5, v6);
  sub_1AE4FD974();
}

void sub_1AE52B4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AE52EB94(a1, a2, a3, a4, a5, (uint64_t)MEMORY[0x1E0D24498]);
}

void sub_1AE52B50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AE52EB94(a1, a2, a3, a4, a5, (uint64_t)MEMORY[0x1E0D244A8]);
}

void sub_1AE52B54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AE52EB94(a1, a2, a3, a4, a5, (uint64_t)MEMORY[0x1E0D241E0]);
}

void AppleMusicEventEntryView.enumerateSongEventEntries(overlapping:order:using:)()
{
  sub_1AE4FE8E0();
  sub_1AE52ED08();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52ED08();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52ED08();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52ED08();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52ED08();
  sub_1AE4FD974();
}

void sub_1AE52B59C()
{
  sub_1AE52ED08();
}

void sub_1AE52B5EC()
{
  sub_1AE52ED08();
}

void sub_1AE52B610()
{
  sub_1AE52ED08();
}

void sub_1AE52B660()
{
  sub_1AE52ED08();
}

void sub_1AE52B6B0()
{
  sub_1AE52ED08();
}

void sub_1AE52B700()
{
  sub_1AE52ED08();
}

void AppleMusicEventEntryView.latestSongEventEntry()(uint64_t a1@<X8>)
{
  sub_1AE52E170(&qword_1EED9AD38, &qword_1EED9B078, a1);
  sub_1AE4FD974();
}

void AppleMusicEventEntryView.earliestSongEventEntry()(uint64_t a1@<X8>)
{
  sub_1AE52E170(&qword_1EED9AD38, &qword_1EED9B078, a1);
  sub_1AE4FD974();
}

void AppleMusicEventEntryView.songEventIds(order:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1AE5032FC(a1);
  sub_1AE52E898();
  if (!v1)
  {
    sub_1AE52FD9C(v2);
    sub_1AE4FCE28();
  }
  sub_1AE4FC4F8();
}

void AppleMusicEventEntryView.songEventIds(whose:in:order:)(unsigned __int8 *a1)
{
  sub_1AE52B83C(a1);
}

{
  sub_1AE52B83C(a1);
}

void sub_1AE52B83C(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  void (*v7)(uint64_t *, uint64_t, _QWORD);
  uint64_t v8;

  v2 = sub_1AE4FB794(a1);
  v8 = sub_1AE52E2C0(v2, v3, v4, v5, v6, v7);
  if (!v1)
  {
    sub_1AE52FD9C(v8);
    sub_1AE4FCE28();
  }
  sub_1AE4FC4F8();
}

void AppleMusicEventEntryView.songEventIds(whose:in:order:)(unsigned __int8 *a1, uint64_t a2, char a3)
{
  sub_1AE52B8D0(a1, a2, a3, (void (*)(uint64_t *, uint64_t *))MEMORY[0x1E0D24498]);
}

{
  sub_1AE52B8D0(a1, a2, a3, (void (*)(uint64_t *, uint64_t *))MEMORY[0x1E0D244A8]);
}

{
  sub_1AE52B8D0(a1, a2, a3, (void (*)(uint64_t *, uint64_t *))MEMORY[0x1E0D241E0]);
}

void sub_1AE52B8D0(unsigned __int8 *a1, uint64_t a2, char a3, void (*a4)(uint64_t *, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;

  v5 = sub_1AE52E580(*a1, a2, a3 & 1, a4);
  if (!v4)
  {
    sub_1AE52FD9C(v5);
    sub_1AE4FCE28();
  }
  sub_1AE4FC4F8();
}

void AppleMusicEventEntryView.songEventIds(overlapping:order:)()
{
  sub_1AE52B9A4();
}

{
  sub_1AE52B9A4();
}

{
  sub_1AE52B9A4();
}

{
  sub_1AE52B9A4();
}

{
  sub_1AE52B9A4();
}

void sub_1AE52B9A4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE4FE8E0();
  v1 = sub_1AE52E73C();
  if (!v0)
  {
    sub_1AE52FD9C(v1);
    sub_1AE4FCE28();
  }
  sub_1AE4FC4F8();
}

void AppleMusicEventEntryView.enumerateSongEventIds(order:using:)(char a1)
{
  sub_1AE5032FC(a1);
  sub_1AE52BA34();
  sub_1AE4FD974();
}

void sub_1AE52BA10()
{
  sub_1AE52BA34();
}

void sub_1AE52BA34()
{
  sub_1AE52ED94();
  sub_1AE4FC538();
}

void sub_1AE52BA68()
{
  sub_1AE52BA34();
}

void AppleMusicEventEntryView.enumerateSongEventIds(whose:in:order:using:)(unsigned __int8 *a1)
{
  sub_1AE52BB2C(a1);
}

{
  sub_1AE52BB2C(a1);
}

{
  sub_1AE52BC5C(a1);
}

{
  sub_1AE52BC5C(a1);
}

{
  sub_1AE52BC5C(a1);
}

void sub_1AE52BAB0(char a1)
{
  sub_1AE52BAD4(a1);
}

void sub_1AE52BAD4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1AE507424(a1);
  sub_1AE52FE18(v1, v2, v3, (uint64_t)&unk_1ED30D890, (uint64_t *)&unk_1EED9EFB0, MEMORY[0x1E0D24A28], v4, v5, v6);
  sub_1AE52FDA4();
}

void sub_1AE52BB2C(unsigned __int8 *a1)
{
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = sub_1AE4FB794(a1);
  v2(v1);
  sub_1AE4FD974();
}

void sub_1AE52BB54(char a1)
{
  sub_1AE52BB78(a1);
}

void sub_1AE52BB78(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1AE507424(a1);
  sub_1AE52FE18(v1, v2, v3, (uint64_t)&qword_1EED99508, &qword_1EED99510, MEMORY[0x1E0D24958], v4, v5, v6);
  sub_1AE52FDA4();
}

void sub_1AE52BBD0(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v8;
  _QWORD v9[6];

  v8 = *v7;
  v9[2] = a4;
  v9[3] = a5;
  v9[4] = v8;
  sub_1AE52EB94(a1 & 1, a2, a3 & 1, a6, (uint64_t)v9, a7);
  sub_1AE4FC538();
}

void sub_1AE52BC0C(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_1AE52BBD0(a1, a2, a3, a4, a5, (uint64_t)sub_1AE52FC38, (uint64_t)MEMORY[0x1E0D24498]);
}

void sub_1AE52BC5C(unsigned __int8 *a1)
{
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = sub_1AE4FB794(a1);
  sub_1AE52BBD0(v1, v2, v3, v4, v5, v6, v7);
  sub_1AE4FD974();
}

void sub_1AE52BC80(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_1AE52BBD0(a1, a2, a3, a4, a5, (uint64_t)sub_1AE52FC38, (uint64_t)MEMORY[0x1E0D244A8]);
}

void sub_1AE52BCD0(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_1AE52BBD0(a1, a2, a3, a4, a5, (uint64_t)sub_1AE52FC38, (uint64_t)MEMORY[0x1E0D241E0]);
}

void AppleMusicEventEntryView.enumerateSongEventIds(overlapping:order:using:)()
{
  sub_1AE4FE8E0();
  sub_1AE52BD5C();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52BD5C();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52BD5C();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52BD5C();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52BD5C();
  sub_1AE4FD974();
}

void sub_1AE52BD30()
{
  sub_1AE52BD5C();
}

void sub_1AE52BD5C()
{
  sub_1AE52ED08();
  sub_1AE4FC538();
}

void sub_1AE52BDC8()
{
  sub_1AE52BD5C();
}

void sub_1AE52BE28()
{
  sub_1AE52BD5C();
}

void sub_1AE52BE88()
{
  sub_1AE52BD5C();
}

void sub_1AE52BEE8()
{
  sub_1AE52BD5C();
}

void AppleMusicEventEntryView.latestSongEventId()(uint64_t a1@<X8>)
{
  sub_1AE52F414(a1);
  sub_1AE4FD974();
}

void AppleMusicEventEntryView.earliestSongEventId()(uint64_t a1@<X8>)
{
  sub_1AE52F414(a1);
  sub_1AE4FD974();
}

uint64_t AppleMusicEventEntryView.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t AppleMusicEventEntryView.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1AE52BFB4()
{
  sub_1AE526E4C();
  sub_1AE4F6664();
}

void sub_1AE52BFD0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void (*a4)(uint64_t)@<X3>, unint64_t *a5@<X5>, uint64_t a6@<X8>)
{
  char v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v24;
  __int128 v27;
  uint64_t v28;
  _BYTE v29[40];

  v6 = a1;
  v8 = sub_1AE52FD5C(a1, a2, a3);
  v24 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F666C();
  v11 = v10 - v9;
  v12 = sub_1AE925374();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F666C();
  v16 = v15 - v14;
  sub_1AE501548((uint64_t *)&unk_1ED3191D0);
  v17 = sub_1AE5032F0();
  *(_OWORD *)(v17 + 16) = xmmword_1AE934250;
  v18 = sub_1AE924A80();
  v19 = MEMORY[0x1E0D239D8];
  *(_QWORD *)(v17 + 56) = v18;
  *(_QWORD *)(v17 + 64) = v19;
  sub_1AE52F6A8((uint64_t *)(v17 + 32));
  if (qword_1ED30FFB0 != -1)
    swift_once();
  v20 = sub_1AE4FB608(v12, (uint64_t)qword_1EEE11C58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v20, v12);
  if ((v6 & 1) != 0)
    sub_1AE9250BC();
  else
    sub_1AE9250B0();
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
  a4(v21);
  sub_1AE924ABC();
  swift_bridgeObjectRelease();
  sub_1AE52FB08(a2, (uint64_t)&v27, &qword_1EED949D0);
  if (v28)
  {
    sub_1AE50AF58(&v27, (uint64_t)v29);
    sub_1AE52FB78(a5, a3, MEMORY[0x1E0D242A0]);
    sub_1AE924DBC();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v29);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a6, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(a6, v11, v8);
  }
  else
  {
    sub_1AE52FBE8((uint64_t)&v27, &qword_1EED949D0);
  }
  sub_1AE4F8180();
}

void sub_1AE52C1EC(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t), uint64_t a5, unint64_t *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v10 = a1 & 1;
  v11 = sub_1AE52FD5C(a1, a2, a3);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F666C();
  v15 = v14 - v13;
  sub_1AE52BFD0(v10, a2, a3, a4, a6, v14 - v13);
  sub_1AE501548(&qword_1ED30FD70);
  v16 = sub_1AE5032F0();
  *(_OWORD *)(v16 + 16) = xmmword_1AE934250;
  if (qword_1EED99178 != -1)
    swift_once();
  v17 = sub_1AE925374();
  v18 = sub_1AE4FB608(v17, (uint64_t)qword_1EEE11F78);
  v19 = MEMORY[0x1E0D24650];
  *(_QWORD *)(v16 + 56) = v17;
  *(_QWORD *)(v16 + 64) = v19;
  v20 = sub_1AE52F6A8((uint64_t *)(v16 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v20, v18, v17);
  sub_1AE925068();
  sub_1AE4F81B8();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
  sub_1AE4F8180();
}

void sub_1AE52C340(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  int v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  __int128 *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;

  v66 = a1;
  v65 = *v2;
  LODWORD(v64) = a2 & 1;
  v3 = sub_1AE501548(&qword_1ED30EB60);
  MEMORY[0x1E0C80A78](v3);
  v61 = (uint64_t)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1AE501548(&qword_1EED9AD38);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v49 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v49 - v13;
  swift_getObjectType();
  v68 = v64;
  v69 = v66;
  v70 = v65;
  sub_1AE501548(&qword_1EED9B088);
  v15 = v67;
  sub_1AE924CC0();
  if (v15)
    return;
  v52 = 0;
  v53 = v14;
  v54 = v12;
  v55 = v9;
  v57 = v6;
  v56 = v5;
  v16 = v76;
  v17 = *(_QWORD *)(v76 + 16);
  if (!v17)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    return;
  }
  v60 = 162;
  v59 = 1336;
  v58 = 2889;
  swift_bridgeObjectRetain();
  v49 = v16;
  v18 = (_BYTE *)(v16 + 56);
  v19 = MEMORY[0x1E0DEE9D8];
  v51 = xmmword_1AE934260;
  v20 = v61;
  while (1)
  {
    v21 = *((_QWORD *)v18 - 3);
    if ((*v18 & 1) != 0)
    {
      v22 = 1;
    }
    else
    {
      sub_1AE924858();
      v22 = 0;
    }
    v23 = sub_1AE9248DC();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v20, v22, 1, v23);
    EntityClass.init(intValue:)(SHIBYTE(v21), (uint64_t)&v71);
    if (!v72)
    {
      sub_1AE52F844();
      v43 = (void *)swift_allocError();
      *v44 = v51;
      v44[1] = 0u;
      v44[2] = 0u;
      v44[3] = 0u;
      *(__int128 *)((char *)v44 + 57) = 0u;
      goto LABEL_26;
    }
    if (v60 < 38)
      break;
    if (!_Records_GDEntityClass_records)
      goto LABEL_35;
    if (*(_QWORD *)(_Records_GDEntityClass_records + 0x380) >= v59)
      goto LABEL_33;
    if (*(_QWORD *)(_Records_GDEntityClass_records + 0x388) >= v58)
      goto LABEL_34;
    if (!_Records_GDEntityClass_classIds[0])
      goto LABEL_36;
    v67 = v72;
    v62 = v21;
    v63 = v17;
    v64 = v19;
    v65 = v71;
    v25 = v73;
    v24 = v74;
    LODWORD(v66) = v75;
    v26 = *(unsigned __int8 *)(_Records_GDEntityClass_records + 0x378);
    v27 = sub_1AE925F8C();
    if (!_Records_GDEntityClass_labels)
      goto LABEL_37;
    v29 = v27;
    v30 = v28;
    v31 = sub_1AE925F8C();
    v33 = v32;
    v77 = v29;
    v78 = v30;
    v79 = v31;
    v80 = v32;
    v81 = v26;
    if (v31 == v25 && v24 == v32)
      goto LABEL_20;
    v35 = v31;
    if ((sub_1AE926D60() & 1) != 0)
      goto LABEL_20;
    v71 = v65;
    v72 = v67;
    v73 = v25;
    v74 = v24;
    v75 = v66;
    EntityClass.ancestorClassesSet.getter();
    sub_1AE5519D8();
    v50 = v36;
    swift_bridgeObjectRelease();
    if ((v50 & 1) != 0)
    {
LABEL_20:
      sub_1AE52F880(v65, v67);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = v56;
      v38 = v54;
      sub_1AE924858();
      v20 = v61;
      sub_1AE52FBB4(v61, (uint64_t)v38 + *(int *)(v37 + 40), &qword_1ED30EB60);
      *v38 = v62;
      v39 = (uint64_t)v53;
      sub_1AE52FBB4((uint64_t)v38, (uint64_t)v53, &qword_1EED9AD38);
      v40 = (uint64_t)v55;
      sub_1AE52FBB4(v39, (uint64_t)v55, &qword_1EED9AD38);
      v19 = v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE51A410();
        v19 = v47;
      }
      v17 = v63;
      v41 = *(_QWORD *)(v19 + 16);
      v42 = v57;
      if (v41 >= *(_QWORD *)(v19 + 24) >> 1)
      {
        sub_1AE51A410();
        v42 = v57;
        v19 = v48;
      }
      *(_QWORD *)(v19 + 16) = v41 + 1;
      sub_1AE52FBB4(v40, v19+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v41, &qword_1EED9AD38);
      goto LABEL_27;
    }
    sub_1AE52F844();
    v43 = (void *)swift_allocError();
    *(_QWORD *)v45 = v29;
    *(_QWORD *)(v45 + 8) = v30;
    *(_QWORD *)(v45 + 16) = v35;
    *(_QWORD *)(v45 + 24) = v33;
    v19 = v64;
    v46 = v65;
    *(_QWORD *)(v45 + 32) = v26;
    *(_QWORD *)(v45 + 40) = v46;
    *(_QWORD *)(v45 + 48) = v67;
    *(_QWORD *)(v45 + 56) = v25;
    *(_QWORD *)(v45 + 64) = v24;
    *(_BYTE *)(v45 + 72) = v66;
    v20 = v61;
    v17 = v63;
LABEL_26:
    swift_willThrow();
    sub_1AE52FBE8(v20, &qword_1ED30EB60);

    v52 = 0;
LABEL_27:
    v18 += 32;
    if (!--v17)
    {
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1AE52C948(uint64_t a1, char a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t (*a6)(BOOL, unint64_t, uint64_t, uint64_t *))
{
  uint64_t *v6;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  int v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(BOOL, unint64_t, uint64_t, uint64_t *);
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  __n128 v56;
  uint64_t v57;
  char *v58;
  _QWORD *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(BOOL, unint64_t, uint64_t, uint64_t *);
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned __int8 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;

  v64 = a6;
  v72 = a5;
  v69 = *v6;
  v70 = a4;
  v8 = a2 & 1;
  v66 = a3;
  v65 = sub_1AE501548(a3);
  v67 = *(_QWORD *)(v65 - 8);
  v9 = MEMORY[0x1E0C80A78](v65);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v53 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v53 - v15;
  swift_getObjectType();
  v73 = v8;
  v74 = a1;
  v75 = v69;
  sub_1AE501548(v70);
  v17 = v71;
  sub_1AE924CC0();
  if (v17)
    return;
  v58 = v16;
  v59 = v14;
  v60 = v11;
  v18 = v86;
  v19 = *(_QWORD *)(v86 + 16);
  if (!v19)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    return;
  }
  v57 = 0;
  v63 = 162;
  v62 = 1336;
  v61 = 2889;
  swift_bridgeObjectRetain();
  v20 = (uint64_t *)MEMORY[0x1E0DEE9D8];
  v53 = v18;
  v21 = v18 + 48;
  v56 = (__n128)xmmword_1AE934260;
  while (1)
  {
    v22 = *(_QWORD *)(v21 - 16);
    EntityClass.init(intValue:)(SHIBYTE(v22), (uint64_t)&v76);
    if (!v77)
    {
      sub_1AE52F844();
      v45 = (void *)sub_1AE4F6778();
      sub_1AE52FCB4(v47, v56, (uint64_t)v45, v46);
      goto LABEL_23;
    }
    if (v63 < 55)
      break;
    if (!_Records_GDEntityClass_records)
      goto LABEL_33;
    if (*(_QWORD *)(_Records_GDEntityClass_records + 0x518) >= v62)
      goto LABEL_31;
    if (*(_QWORD *)(_Records_GDEntityClass_records + 0x520) >= v61)
      goto LABEL_32;
    if (!_Records_GDEntityClass_classIds[0])
      goto LABEL_34;
    v72 = v77;
    v68 = v22;
    v69 = v19;
    v70 = v20;
    v71 = v76;
    v24 = v78;
    v23 = v79;
    v25 = v80;
    v26 = *(unsigned __int8 *)(_Records_GDEntityClass_records + 0x510);
    v27 = sub_1AE925F8C();
    if (!_Records_GDEntityClass_labels)
      goto LABEL_35;
    v29 = v27;
    v30 = v28;
    v31 = sub_1AE925F8C();
    v33 = v32;
    v81 = v29;
    v82 = v30;
    v83 = v31;
    v84 = v32;
    v85 = v26;
    if (v31 == v24 && v23 == v32)
      goto LABEL_17;
    v35 = v31;
    if ((sub_1AE926D60() & 1) != 0)
      goto LABEL_17;
    v76 = v71;
    v77 = v72;
    v78 = v24;
    v79 = v23;
    v80 = v25;
    v55 = v25;
    EntityClass.ancestorClassesSet.getter();
    sub_1AE5519D8();
    v54 = v36;
    v37 = v55;
    swift_bridgeObjectRelease();
    if ((v54 & 1) != 0)
    {
LABEL_17:
      sub_1AE52F880(v71, v72);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = v59;
      sub_1AE924858();
      sub_1AE924858();
      *v38 = v68;
      v39 = (uint64_t)v58;
      sub_1AE52FDC8((uint64_t)v38, (uint64_t)v58);
      v40 = (uint64_t)v60;
      sub_1AE52FDC8(v39, (uint64_t)v60);
      v20 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v41 = v64;
      }
      else
      {
        v41 = v64;
        v20 = (uint64_t *)v64(0, v20[2] + 1, 1, v20);
      }
      v19 = v69;
      v43 = v20[2];
      v42 = v20[3];
      v44 = v67;
      if (v43 >= v42 >> 1)
      {
        v52 = v41(v42 > 1, v43 + 1, 1, v20);
        v44 = v67;
        v20 = (uint64_t *)v52;
      }
      v20[2] = v43 + 1;
      sub_1AE52FDC8(v40, (uint64_t)v20+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(_QWORD *)(v44 + 72) * v43);
      goto LABEL_24;
    }
    sub_1AE52F844();
    v48 = sub_1AE4F6778();
    v49 = v37;
    v45 = (void *)v48;
    *(_QWORD *)v50 = v29;
    *(_QWORD *)(v50 + 8) = v30;
    *(_QWORD *)(v50 + 16) = v35;
    *(_QWORD *)(v50 + 24) = v33;
    v20 = v70;
    v51 = v71;
    *(_QWORD *)(v50 + 32) = v26;
    *(_QWORD *)(v50 + 40) = v51;
    *(_QWORD *)(v50 + 48) = v72;
    *(_QWORD *)(v50 + 56) = v24;
    *(_QWORD *)(v50 + 64) = v23;
    *(_BYTE *)(v50 + 72) = v49;
    v19 = v69;
LABEL_23:
    swift_willThrow();

    v57 = 0;
LABEL_24:
    v21 += 24;
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

uint64_t sub_1AE52CE78(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = a2 & 1;
  v5 = sub_1AE501548(&qword_1EED9B068);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE52BFD0(v4, a3, &qword_1EED9B068, (void (*)(uint64_t))sub_1AE52A2E8, &qword_1EED9B070, (uint64_t)v8);
  sub_1AE52FB78(&qword_1EED9B080, &qword_1EED9B068, MEMORY[0x1E0D24290]);
  sub_1AE52A2AC();
  v9 = sub_1AE924B28();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t sub_1AE52CF84(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = a2 & 1;
  v5 = sub_1AE501548(&qword_1EED949C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE52BFD0(v4, a3, &qword_1EED949C8, (void (*)(uint64_t))sub_1AE52F93C, &qword_1EED9B050, (uint64_t)v8);
  sub_1AE52FB78(&qword_1EED949C0, &qword_1EED949C8, MEMORY[0x1E0D24290]);
  sub_1AE52F9D4();
  v9 = sub_1AE924B28();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t sub_1AE52D090(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = a2 & 1;
  v5 = sub_1AE501548(&qword_1EED9B018);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE52BFD0(v4, a3, &qword_1EED9B018, (void (*)(uint64_t))sub_1AE52F6E4, &qword_1EED9B028, (uint64_t)v8);
  sub_1AE52FB78(&qword_1EED9B030, &qword_1EED9B018, MEMORY[0x1E0D24290]);
  sub_1AE52F808();
  v9 = sub_1AE924B28();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t sub_1AE52D19C()
{
  swift_getObjectType();
  return sub_1AE924CC0();
}

uint64_t sub_1AE52D234(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  _QWORD v20[10];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;

  v22 = a4;
  v23 = a5;
  v6 = a2 & 1;
  v7 = sub_1AE501548(&qword_1ED30EB60);
  MEMORY[0x1E0C80A78](v7);
  v25 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1AE501548(&qword_1EED9AD38);
  v9 = MEMORY[0x1E0C80A78](v21);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v20 - v12;
  v14 = sub_1AE501548(&qword_1EED9B068);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE52BFD0(v6, a3, &qword_1EED9B068, (void (*)(uint64_t))sub_1AE52A2E8, &qword_1EED9B070, (uint64_t)v17);
  sub_1AE52FB78(&qword_1EED9B080, &qword_1EED9B068, MEMORY[0x1E0D24290]);
  sub_1AE52A2AC();
  v18 = v24;
  sub_1AE924B1C();
  result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (!v18)
  {
    v20[8] = v13;
    v20[9] = v11;
    sub_1AE88E77C();
  }
  return result;
}

void sub_1AE52D704()
{
  uint64_t v0;

  if (v0)
    JUMPOUT(0x1AE52D3DCLL);
  JUMPOUT(0x1AE52D45CLL);
}

uint64_t sub_1AE52D780(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  _QWORD v17[11];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a4;
  v20 = a5;
  v7 = a2 & 1;
  v18 = sub_1AE501548(&qword_1EED94A70);
  v8 = MEMORY[0x1E0C80A78](v18);
  v17[10] = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v17 - v10;
  v12 = sub_1AE501548(&qword_1EED949C8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE52BFD0(v7, a3, &qword_1EED949C8, (void (*)(uint64_t))sub_1AE52F93C, &qword_1EED9B050, (uint64_t)v15);
  sub_1AE52FB78(&qword_1EED949C0, &qword_1EED949C8, MEMORY[0x1E0D24290]);
  sub_1AE52F9D4();
  sub_1AE924B1C();
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (!v5)
  {
    v17[8] = v11;
    sub_1AE88EA24();
  }
  return result;
}

void sub_1AE52DBB4()
{
  uint64_t v0;

  if (v0)
    JUMPOUT(0x1AE52D8F0);
  JUMPOUT(0x1AE52D968);
}

uint64_t sub_1AE52DC44(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  _QWORD v17[11];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a4;
  v20 = a5;
  v7 = a2 & 1;
  v18 = sub_1AE501548(&qword_1EED9A650);
  v8 = MEMORY[0x1E0C80A78](v18);
  v17[10] = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v17 - v10;
  v12 = sub_1AE501548(&qword_1EED9B018);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE52BFD0(v7, a3, &qword_1EED9B018, (void (*)(uint64_t))sub_1AE52F6E4, &qword_1EED9B028, (uint64_t)v15);
  sub_1AE52FB78(&qword_1EED9B030, &qword_1EED9B018, MEMORY[0x1E0D24290]);
  sub_1AE52F808();
  sub_1AE924B1C();
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (!v5)
  {
    v17[8] = v11;
    sub_1AE88ECAC();
  }
  return result;
}

void sub_1AE52E078()
{
  uint64_t v0;

  if (v0)
    JUMPOUT(0x1AE52DDB4);
  JUMPOUT(0x1AE52DE2CLL);
}

void sub_1AE52E108(uint64_t a1@<X8>)
{
  sub_1AE52E170(&qword_1EED9AD38, &qword_1EED9B078, a1);
}

void sub_1AE52E13C(uint64_t a1@<X8>)
{
  sub_1AE52E170(&qword_1EED94A70, &qword_1EED9B058, a1);
}

void sub_1AE52E170(uint64_t *a1@<X1>, uint64_t *a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = sub_1AE501548(a1);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a3, 1, 1, v6);
  sub_1AE52ED94();
  if (v3)
    sub_1AE52FBE8(a3, a2);
}

void sub_1AE52E210(uint64_t a1@<X8>)
{
  sub_1AE52E170(&qword_1EED9A650, &qword_1EED9B048, a1);
}

uint64_t sub_1AE52E244(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t result;

  sub_1AE52FBE8(a3, a4);
  sub_1AE52FB08(a1, a3, a5);
  v9 = sub_1AE52FE10();
  result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a3, 0, 1, v9);
  *a2 = 1;
  return result;
}

uint64_t sub_1AE52E2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, void (*a6)(uint64_t *, uint64_t, _QWORD))
{
  char v9;
  char v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_1AE52FDD0();
  v10 = v9;
  sub_1AE924864();
  v12 = v11;
  sub_1AE501548(a4);
  sub_1AE5078D4();
  if (v12 > v13)
  {
    __break(1u);
    goto LABEL_10;
  }
  v34 = *(_QWORD *)&v12;
  v35 = *(_QWORD *)&v13;
  v14 = sub_1AE4F9084();
  v15 = (uint64_t)sub_1AE52FD14(v14, MEMORY[0x1E0D24668], v29, v30, v31, v32, v33);
  a4 = (uint64_t *)v15;
  if ((v10 & 1) == 0)
  {
    if (qword_1ED30FFB0 == -1)
    {
LABEL_4:
      v16 = qword_1EEE11C58;
      goto LABEL_8;
    }
LABEL_10:
    v15 = swift_once();
    goto LABEL_4;
  }
  if (qword_1EED99808 != -1)
    v15 = swift_once();
  v16 = qword_1EEE11F90;
LABEL_8:
  sub_1AE4F6784(v15, (uint64_t)v16);
  sub_1AE506F88((uint64_t)a4, v17, v18);
  v19 = sub_1AE4F6770();
  sub_1AE52FD08(v19, MEMORY[0x1E0D23DC0], v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40);
  v20 = sub_1AE501548(a5);
  a6(&v29, v20, MEMORY[0x1E0D249C8]);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v29);
  sub_1AE5097F8();
  sub_1AE4FD97C();
  sub_1AE52FDF0(v21, &qword_1EED949D0, v22, v23, v24, v25, v26, v27, v29);
  return sub_1AE5032E4();
}

uint64_t sub_1AE52E43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE52E2C0(a1, a2, a3, (uint64_t *)&unk_1ED30D890, (uint64_t *)&unk_1EED9EFB0, MEMORY[0x1E0D24A28]);
}

uint64_t sub_1AE52E470()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  swift_getObjectType();
  sub_1AE501548(&qword_1EED99540);
  result = sub_1AE924CC0();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1AE52E518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE52E2C0(a1, a2, a3, &qword_1EED99508, &qword_1EED99510, MEMORY[0x1E0D24958]);
}

uint64_t sub_1AE52E54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE52E2C0(a1, a2, a3, &qword_1EED99508, &qword_1EED99510, MEMORY[0x1E0D24958]);
}

uint64_t sub_1AE52E580(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t *))
{
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_1AE52FDD0();
  v6 = v5;
  sub_1AE924864();
  v7 = sub_1AE4F9084();
  v8 = (uint64_t)sub_1AE52FC90(v7, MEMORY[0x1E0D24668], v19, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31);
  if ((v6 & 1) != 0)
  {
    if (qword_1EED99808 != -1)
      v8 = swift_once();
    v9 = qword_1EEE11F90;
  }
  else
  {
    if (qword_1ED30FFB0 != -1)
      v8 = swift_once();
    v9 = qword_1EEE11C58;
  }
  sub_1AE4FE8B4(v8, (uint64_t)v9);
  v10 = sub_1AE5019A0();
  sub_1AE507D58(v10, MEMORY[0x1E0D23DC0], v20, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36);
  a4(&v27, &v22);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v22);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v27);
  sub_1AE5097F8();
  sub_1AE4FD97C();
  sub_1AE52FD54(v11, &qword_1EED949D0, v12, v13, v14, v15, v16, v17, v21, v22, v23, v24, v25);
  return sub_1AE5032E4();
}

uint64_t sub_1AE52E6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE52E580(a1, a2, a3, (void (*)(uint64_t *, uint64_t *))MEMORY[0x1E0D24498]);
}

uint64_t sub_1AE52E6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE52E580(a1, a2, a3, (void (*)(uint64_t *, uint64_t *))MEMORY[0x1E0D244A8]);
}

uint64_t sub_1AE52E718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE52E580(a1, a2, a3, (void (*)(uint64_t *, uint64_t *))MEMORY[0x1E0D241E0]);
}

uint64_t sub_1AE52E73C()
{
  void (*v0)(_QWORD *__return_ptr);
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[5];

  sub_1AE52FDD0();
  v0(v4);
  sub_1AE5097F8();
  sub_1AE4FD97C();
  sub_1AE52FD4C(v1, &qword_1EED949D0, v2);
  return sub_1AE5032E4();
}

uint64_t sub_1AE52E7A4()
{
  return sub_1AE52E73C();
}

uint64_t sub_1AE52E7C8()
{
  return sub_1AE52E73C();
}

uint64_t sub_1AE52E7EC()
{
  return sub_1AE52E73C();
}

uint64_t sub_1AE52E810()
{
  return sub_1AE52E73C();
}

uint64_t sub_1AE52E834()
{
  return sub_1AE52E73C();
}

uint64_t sub_1AE52E858()
{
  return sub_1AE52E73C();
}

void sub_1AE52E87C()
{
  sub_1AE52E898();
}

void sub_1AE52E898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1AE4FC514();
  sub_1AE52E470();
  sub_1AE4FD97C();
  sub_1AE52FE44(v0, &qword_1EED949D0, v1, v2, v3, v4, v5, v6, v7);
  sub_1AE5032E4();
  sub_1AE50533C();
}

void sub_1AE52E8CC()
{
  sub_1AE52E898();
}

void sub_1AE52E8E8()
{
  sub_1AE52E898();
}

uint64_t sub_1AE52E904(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t), uint64_t a7, unint64_t *a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v12 = a2 & 1;
  v13 = sub_1AE501548((uint64_t *)&unk_1EED9EFA0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  sub_1AE52FCEC();
  sub_1AE52C1EC(v12, a3, a5, a6, a7, a8);
  sub_1AE52FB78((unint64_t *)&qword_1EEDA4FA0, (uint64_t *)&unk_1EED9EFA0, MEMORY[0x1E0D24290]);
  sub_1AE52F66C();
  sub_1AE924B58();
  sub_1AE4FD97C();
  sub_1AE52FDBC(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
  return sub_1AE5032E4();
}

void sub_1AE52E9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, void (*a8)(uint64_t *, uint64_t, _QWORD))
{
  char v10;
  char v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21[7];
  uint64_t v22[5];

  sub_1AE52FDDC();
  v11 = v10;
  sub_1AE924864();
  v13 = v12;
  sub_1AE52FE10();
  sub_1AE5078D4();
  if (v13 > v14)
  {
    __break(1u);
    goto LABEL_10;
  }
  *(double *)&v21[5] = v13;
  *(double *)&v21[6] = v14;
  v21[3] = sub_1AE4F9084();
  v21[4] = MEMORY[0x1E0D24668];
  v15 = (uint64_t)sub_1AE52F6A8(v21);
  a6 = v15;
  if ((v11 & 1) == 0)
  {
    if (qword_1ED30FFB0 == -1)
    {
LABEL_4:
      v16 = qword_1EEE11C58;
      goto LABEL_8;
    }
LABEL_10:
    v15 = swift_once();
    goto LABEL_4;
  }
  if (qword_1EED99808 != -1)
    v15 = swift_once();
  v16 = qword_1EEE11F90;
LABEL_8:
  sub_1AE4F6784(v15, (uint64_t)v16);
  sub_1AE506F88(a6, v17, v18);
  v22[3] = sub_1AE4F6770();
  v22[4] = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8(v22);
  v19 = sub_1AE501548(a7);
  a8(v21, v19, MEMORY[0x1E0D249C8]);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v21);
  sub_1AE505A60();
  sub_1AE52D19C();
  sub_1AE52FBE8((uint64_t)v22, &qword_1EED949D0);
}

void sub_1AE52EB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t *, uint64_t *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_1AE52FDDC();
  v8 = v7;
  sub_1AE924864();
  v9 = sub_1AE4F9084();
  v10 = (uint64_t)sub_1AE52FC90(v9, MEMORY[0x1E0D24668], a6, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34);
  v11 = v10;
  if ((v8 & 1) != 0)
  {
    if (qword_1EED99808 != -1)
      v10 = swift_once();
    v12 = qword_1EEE11F90;
  }
  else
  {
    if (qword_1ED30FFB0 != -1)
      v10 = swift_once();
    v12 = qword_1EEE11C58;
  }
  sub_1AE4F6784(v10, (uint64_t)v12);
  sub_1AE506F88(v11, v13, v14);
  v15 = sub_1AE5019A0();
  sub_1AE507D58(v15, MEMORY[0x1E0D23DC0], v23, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39);
  v24(&v30, &v25);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v25);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v30);
  sub_1AE505A60();
  v16 = sub_1AE52D19C();
  sub_1AE52FD54(v16, &qword_1EED949D0, v17, v18, v19, v20, v21, v22, (uint64_t)v24, v25, v26, v27, v28);
}

void sub_1AE52ED08()
{
  void (*v0)(_QWORD *__return_ptr);
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[5];

  sub_1AE52FDD0();
  v0(v3);
  v1 = sub_1AE52D19C();
  sub_1AE52FD4C(v1, &qword_1EED949D0, v2);
}

void sub_1AE52ED94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1AE4FC514();
  v0 = sub_1AE52D19C();
  sub_1AE52FE44(v0, &qword_1EED949D0, v1, v2, v3, v4, v5, v6, v7);
  sub_1AE52FDA4();
}

uint64_t sub_1AE52EDD4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, void (*a8)(uint64_t), uint64_t a9, unint64_t *a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v17;

  v12 = a2 & 1;
  v13 = sub_1AE501548((uint64_t *)&unk_1EED9EFA0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  sub_1AE52FCEC();
  sub_1AE52C1EC(v12, a3, a7, a8, a9, a10);
  sub_1AE52FB78((unint64_t *)&qword_1EEDA4FA0, (uint64_t *)&unk_1EED9EFA0, MEMORY[0x1E0D24290]);
  sub_1AE52F66C();
  sub_1AE924B4C();
  result = sub_1AE52FDBC(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
  if (!v17)
    sub_1AE88E874();
  return result;
}

void sub_1AE52EF2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v47 = *(_QWORD *)(a1 + 16);
  if (!v47)
  {
LABEL_26:
    sub_1AE508E5C();
    return;
  }
  v46 = 162;
  v45 = 1336;
  v44 = 2889;
  v3 = swift_bridgeObjectRetain();
  v11 = 0;
  v12 = MEMORY[0x1E0DEE9D8];
  v42 = (__n128)xmmword_1AE934260;
  v43 = v3;
  while (1)
  {
    sub_1AE52FD20(v3, v4, v5, v6, v7, v8, v9, v10, v40, v41, v42.n128_i64[0], v42.n128_i64[1], v43);
    if (!v48)
    {
      sub_1AE52F844();
      v1 = sub_1AE4F6778();
      sub_1AE52FCB4(v30, v42, v1, v29);
      goto LABEL_22;
    }
    if (v46 < 38)
      break;
    if (!_Records_GDEntityClass_records)
      goto LABEL_30;
    if (*(_QWORD *)(_Records_GDEntityClass_records + 0x380) >= v45)
      goto LABEL_28;
    v13 = *(_QWORD *)(_Records_GDEntityClass_records + 0x388);
    if (v13 >= v44)
      goto LABEL_29;
    if (!_Records_GDEntityClass_classIds[0])
      goto LABEL_31;
    sub_1AE52FE30();
    v15 = *(unsigned __int8 *)(v14 + 888);
    sub_1AE925F8C();
    if (!_Records_GDEntityClass_labels)
      goto LABEL_32;
    v16 = sub_1AE505F70();
    v18 = sub_1AE505CAC(v16, v17);
    v26 = v26 && v2 == v19;
    if (v26
      || (v18 = sub_1AE506B3C(), (v18 & 1) != 0)
      || (sub_1AE508124(), sub_1AE52FD8C(), v18 = sub_1AE52FD7C(), (v41 & 1) != 0))
    {
      sub_1AE52FC9C(v18, v19, v20, v21, v22, v23, v24, v25, v40, v41, v42.n128_i64[0], v42.n128_i64[1], v43, v44, v45, v46, v47, v1, v12,
        v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((sub_1AE52FDF8() & 1) == 0)
      {
        sub_1AE505F58();
        sub_1AE51A424();
        v12 = v39;
      }
      sub_1AE52FD64();
      if (v28)
      {
        sub_1AE4F7720(v27);
        sub_1AE51A424();
        v12 = v3;
      }
      *(_QWORD *)(v12 + 16) = v13;
      *(_QWORD *)(v12 + 8 * v1 + 32) = v15;
      goto LABEL_23;
    }
    sub_1AE52F844();
    v31 = sub_1AE4F6778();
    sub_1AE50A90C(v31, v32, v33, v34, v35, v36, v37, v38, v40, v41, v42.n128_i64[0], v42.n128_i64[1], v43, v44, v45, v46, v47, v1, v12,
      v48);
LABEL_22:
    swift_willThrow();

LABEL_23:
    if (v47 == ++v11)
    {
      sub_1AE4F81B8();
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

void sub_1AE52F13C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v47 = *(_QWORD *)(a1 + 16);
  if (!v47)
  {
LABEL_26:
    sub_1AE508E5C();
    return;
  }
  v46 = 162;
  v45 = 1336;
  v44 = 2889;
  v3 = swift_bridgeObjectRetain();
  v11 = 0;
  v12 = MEMORY[0x1E0DEE9D8];
  v42 = (__n128)xmmword_1AE934260;
  v43 = v3;
  while (1)
  {
    sub_1AE52FD20(v3, v4, v5, v6, v7, v8, v9, v10, v40, v41, v42.n128_i64[0], v42.n128_i64[1], v43);
    if (!v48)
    {
      sub_1AE52F844();
      v1 = sub_1AE4F6778();
      sub_1AE52FCB4(v30, v42, v1, v29);
      goto LABEL_22;
    }
    if (v46 < 55)
      break;
    if (!_Records_GDEntityClass_records)
      goto LABEL_30;
    if (*(_QWORD *)(_Records_GDEntityClass_records + 0x518) >= v45)
      goto LABEL_28;
    v13 = *(_QWORD *)(_Records_GDEntityClass_records + 0x520);
    if (v13 >= v44)
      goto LABEL_29;
    if (!_Records_GDEntityClass_classIds[0])
      goto LABEL_31;
    sub_1AE52FE30();
    v15 = *(unsigned __int8 *)(v14 + 1296);
    sub_1AE925F8C();
    if (!_Records_GDEntityClass_labels)
      goto LABEL_32;
    v16 = sub_1AE505F70();
    v18 = sub_1AE505CAC(v16, v17);
    v26 = v26 && v2 == v19;
    if (v26
      || (v18 = sub_1AE506B3C(), (v18 & 1) != 0)
      || (sub_1AE508124(), sub_1AE52FD8C(), v18 = sub_1AE52FD7C(), (v41 & 1) != 0))
    {
      sub_1AE52FC9C(v18, v19, v20, v21, v22, v23, v24, v25, v40, v41, v42.n128_i64[0], v42.n128_i64[1], v43, v44, v45, v46, v47, v1, v12,
        v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((sub_1AE52FDF8() & 1) == 0)
      {
        sub_1AE505F58();
        sub_1AE51B184();
        v12 = v39;
      }
      sub_1AE52FD64();
      if (v28)
      {
        sub_1AE4F7720(v27);
        sub_1AE51B184();
        v12 = v3;
      }
      *(_QWORD *)(v12 + 16) = v13;
      *(_QWORD *)(v12 + 8 * v1 + 32) = v15;
      goto LABEL_23;
    }
    sub_1AE52F844();
    v31 = sub_1AE4F6778();
    sub_1AE50A90C(v31, v32, v33, v34, v35, v36, v37, v38, v40, v41, v42.n128_i64[0], v42.n128_i64[1], v43, v44, v45, v46, v47, v1, v12,
      v48);
LABEL_22:
    swift_willThrow();

LABEL_23:
    if (v47 == ++v11)
    {
      sub_1AE4F81B8();
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

void sub_1AE52F34C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t), uint64_t a4, uint64_t a5, void (*a6)(uint64_t *__return_ptr))
{
  void *v6;
  uint64_t v9;

  a6(&v9);
  if (v6)

  else
    a3(&v9, a2);
}

void sub_1AE52F3A8(uint64_t a1@<X8>)
{
  sub_1AE52F414(a1);
}

uint64_t method lookup function for AppleMusicEventEntryView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppleMusicEventEntryView.__allocating_init(viewService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_1AE52F3F0(uint64_t a1@<X8>)
{
  sub_1AE52F414(a1);
}

void sub_1AE52F414(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AE52ED94();
  if (!v1)
  {
    *(_QWORD *)a1 = 0;
    *(_BYTE *)(a1 + 8) = 1;
  }
  sub_1AE52FDA4();
}

void sub_1AE52F46C(uint64_t a1@<X8>)
{
  sub_1AE52F414(a1);
}

void sub_1AE52F490(uint64_t a1, _BYTE *a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  void *v4;
  uint64_t v7;

  a4(&v7);
  if (v4)
  {

  }
  else
  {
    *(_QWORD *)a3 = v7;
    *(_BYTE *)(a3 + 8) = 0;
    *a2 = 1;
  }
}

uint64_t sub_1AE52F4E8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_1AE52CE78(a1, a2 & 1, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1AE52F514@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1AE52E904(a1, a2 & 1, a3, a4, &qword_1EED9B068, (void (*)(uint64_t))sub_1AE52A2E8, (uint64_t)&type metadata for AppleMusicEventEntryRecord, &qword_1EED9B070);
  if (!v5)
    *a5 = result;
  return result;
}

void sub_1AE52F560(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t), uint64_t a4, uint64_t a5)
{
  sub_1AE52F34C(*a1, a2, a3, a4, a5, (void (*)(uint64_t *__return_ptr))sub_1AE676E48);
}

void sub_1AE52F580(uint64_t *a1, _BYTE *a2, uint64_t a3)
{
  sub_1AE52F490(*a1, a2, a3, (void (*)(uint64_t *__return_ptr))sub_1AE676E48);
}

uint64_t sub_1AE52F5A0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_1AE52CF84(a1, a2 & 1, a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_1AE52F5CC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1AE52E904(a1, a2 & 1, a3, a4, &qword_1EED949C8, (void (*)(uint64_t))sub_1AE52F93C, (uint64_t)&type metadata for FutureLifeEventEntryRecord, &qword_1EED9B050);
  if (!v5)
    *a5 = result;
  return result;
}

void sub_1AE52F618(uint64_t *a1, _BYTE *a2, uint64_t a3)
{
  sub_1AE52F490(*a1, a2, a3, (void (*)(uint64_t *__return_ptr))sub_1AE676ED4);
}

void sub_1AE52F638(uint64_t a1)
{
  sub_1AE52FA74(a1, &qword_1EED9B018, (void (*)(uint64_t))sub_1AE52F6E4, (uint64_t)&type metadata for LifeEventEntryRecord, &qword_1EED9B028);
}

unint64_t sub_1AE52F66C()
{
  unint64_t result;

  result = qword_1ED319C20;
  if (!qword_1ED319C20)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for EntityIdentifier, &type metadata for EntityIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED319C20);
  }
  return result;
}

uint64_t *sub_1AE52F6A8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_1AE52F6E4()
{
  unint64_t result;

  result = qword_1EED9B020;
  if (!qword_1EED9B020)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E0C0, &type metadata for LifeEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED9B020);
  }
  return result;
}

uint64_t sub_1AE52F720@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1AE52E904(a1, a2 & 1, a3, a4, &qword_1EED9B018, (void (*)(uint64_t))sub_1AE52F6E4, (uint64_t)&type metadata for LifeEventEntryRecord, &qword_1EED9B028);
  if (!v5)
    *a5 = result;
  return result;
}

uint64_t sub_1AE52F76C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_1AE52D090(a1, a2 & 1, a3);
  if (!v4)
    *a4 = result;
  return result;
}

void sub_1AE52F798(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t), uint64_t a4, uint64_t a5)
{
  sub_1AE52F34C(*a1, a2, a3, a4, a5, (void (*)(uint64_t *__return_ptr))sub_1AE676ED4);
}

void sub_1AE52F7B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1AE52F798(a1, a2, *(void (**)(uint64_t *, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1AE52F7D4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  sub_1AE52FCE0();
  return sub_1AE52F720(v0, v1, v2, v3, v4);
}

uint64_t sub_1AE52F7EC()
{
  return sub_1AE52FB58();
}

unint64_t sub_1AE52F808()
{
  unint64_t result;

  result = qword_1EED9B038;
  if (!qword_1EED9B038)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E0F0, &type metadata for LifeEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED9B038);
  }
  return result;
}

unint64_t sub_1AE52F844()
{
  unint64_t result;

  result = qword_1EED99168;
  if (!qword_1EED99168)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TypedEntityIdentifierError, &type metadata for TypedEntityIdentifierError);
    atomic_store(result, (unint64_t *)&qword_1EED99168);
  }
  return result;
}

uint64_t sub_1AE52F880(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AE52F8B0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t *v3;

  sub_1AE52FCE0();
  return sub_1AE52F76C(v0, v1, v2, v3);
}

uint64_t sub_1AE52F8C8(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  return sub_1AE52E244(a1, a2, *(_QWORD *)(v2 + 16), &qword_1EED9B048, &qword_1EED9A650);
}

void sub_1AE52F8F0(uint64_t *a1, _BYTE *a2)
{
  uint64_t v2;

  sub_1AE52F618(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1AE52F908(uint64_t a1)
{
  sub_1AE52FA74(a1, &qword_1EED949C8, (void (*)(uint64_t))sub_1AE52F93C, (uint64_t)&type metadata for FutureLifeEventEntryRecord, &qword_1EED9B050);
}

unint64_t sub_1AE52F93C()
{
  unint64_t result;

  result = qword_1EED94A78;
  if (!qword_1EED94A78)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94AFD8, &type metadata for FutureLifeEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED94A78);
  }
  return result;
}

uint64_t sub_1AE52F978()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  sub_1AE52FCE0();
  return sub_1AE52F5CC(v0, v1, v2, v3, v4);
}

uint64_t sub_1AE52F990(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  return sub_1AE52E244(a1, a2, *(_QWORD *)(v2 + 16), &qword_1EED9B058, &qword_1EED94A70);
}

uint64_t sub_1AE52F9B8()
{
  return sub_1AE52FB58();
}

unint64_t sub_1AE52F9D4()
{
  unint64_t result;

  result = qword_1EED94A80;
  if (!qword_1EED94A80)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE94B008, &type metadata for FutureLifeEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED94A80);
  }
  return result;
}

uint64_t sub_1AE52FA10()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t *v3;

  sub_1AE52FCE0();
  return sub_1AE52F5A0(v0, v1, v2, v3);
}

void sub_1AE52FA28(uint64_t *a1, _BYTE *a2)
{
  uint64_t v2;

  sub_1AE52F580(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1AE52FA40(uint64_t a1)
{
  sub_1AE52FA74(a1, &qword_1EED9B068, (void (*)(uint64_t))sub_1AE52A2E8, (uint64_t)&type metadata for AppleMusicEventEntryRecord, &qword_1EED9B070);
}

void sub_1AE52FA74(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t), uint64_t a4, unint64_t *a5)
{
  uint64_t v5;

  sub_1AE52EDD4(a1, *(_BYTE *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), a2, a3, a4, a5);
  sub_1AE4FC530();
}

void sub_1AE52FAAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1AE52F560(a1, a2, *(void (**)(uint64_t *, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1AE52FAC8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  sub_1AE52FCE0();
  return sub_1AE52F514(v0, v1, v2, v3, v4);
}

uint64_t sub_1AE52FAE0(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  return sub_1AE52E244(a1, a2, *(_QWORD *)(v2 + 16), &qword_1EED9B078, &qword_1EED9AD38);
}

void sub_1AE52FB08(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1AE52FD5C(a1, a2, a3);
  sub_1AE4FE8EC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_1AE4F6664();
}

uint64_t sub_1AE52FB3C()
{
  return sub_1AE52FB58();
}

uint64_t sub_1AE52FB58()
{
  uint64_t (*v0)(void);

  sub_1AE52FCE0();
  return v0();
}

void sub_1AE52FB78(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = sub_1AE523CF0(a2);
    atomic_store(MEMORY[0x1AF454B70](a3, v5), a1);
  }
  sub_1AE4F6664();
}

void sub_1AE52FBB4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1AE52FD5C(a1, a2, a3);
  sub_1AE4FE8EC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_1AE4F6664();
}

void sub_1AE52FBE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1AE501548(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_1AE4F6664();
}

uint64_t sub_1AE52FC20()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t *v3;

  sub_1AE52FCE0();
  return sub_1AE52F4E8(v0, v1, v2, v3);
}

void sub_1AE52FC38(uint64_t *a1, uint64_t a2)
{
  sub_1AE52F7B8(a1, a2);
}

void sub_1AE52FC4C(uint64_t *a1, uint64_t a2)
{
  sub_1AE52FAAC(a1, a2);
}

void sub_1AE52FC60(uint64_t *a1, _BYTE *a2)
{
  sub_1AE52F8F0(a1, a2);
}

uint64_t *sub_1AE52FC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  a12 = a1;
  a13 = a2;
  return sub_1AE52F6A8(&a9);
}

uint64_t sub_1AE52FC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  return sub_1AE52F880(v20, a20);
}

double sub_1AE52FCB4(double a1, __n128 a2, uint64_t a3, uint64_t a4)
{
  double result;

  result = 0.0;
  *(__n128 *)a4 = a2;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 57) = 0u;
  return result;
}

_QWORD *sub_1AE52FCC8(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr), uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return a3((uint64_t *)va);
}

uint64_t *sub_1AE52FD08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  a13 = a1;
  a14 = a2;
  return sub_1AE52F6A8(&a10);
}

uint64_t *sub_1AE52FD14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a6 = a1;
  a7 = a2;
  return sub_1AE52F6A8(&a3);
}

void sub_1AE52FD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  uint64_t v14;
  va_list va;

  va_start(va, a13);
  EntityClass.init(intValue:)(HIBYTE(*(_QWORD *)(v13 + 8 * v14 + 32)), (uint64_t)va);
}

void sub_1AE52FD34(uint64_t a1, char a2)
{
  sub_1AE52C340(a1, a2);
}

void sub_1AE52FD40(uint64_t a1, char a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t (*a6)(BOOL, unint64_t, uint64_t, uint64_t *))
{
  sub_1AE52C948(a1, a2, a3, a4, a5, a6);
}

void sub_1AE52FD4C(uint64_t a1, uint64_t *a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1AE52FBE8((uint64_t)va, a2);
}

void sub_1AE52FD54(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_1AE52FBE8((uint64_t)va, a2);
}

uint64_t sub_1AE52FD5C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1AE501548(a3);
}

uint64_t sub_1AE52FD7C()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE52FD8C()
{
  sub_1AE5519D8();
}

void sub_1AE52FD9C(uint64_t a1)
{
  sub_1AE52EF2C(a1);
}

uint64_t sub_1AE52FDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t (*v9)(uint64_t *);

  return v9(&a9);
}

uint64_t sub_1AE52FDBC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void sub_1AE52FDC8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1AE52FBB4(a1, a2, v2);
}

void sub_1AE52FDF0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_1AE52FBE8((uint64_t)va, a2);
}

uint64_t sub_1AE52FDF8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE52FE04()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

uint64_t sub_1AE52FE10()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

void sub_1AE52FE18(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t *a5@<X6>, void (*a6)(uint64_t *, uint64_t, _QWORD)@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_1AE52E9FC(a1, a2, a3, a7, (uint64_t)va, a4, a5, a6);
}

uint64_t sub_1AE52FE24()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

uint64_t sub_1AE52FE30()
{
  uint64_t v0;
  uint64_t v1;

  return v1 + v0;
}

void sub_1AE52FE44(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1AE52FBE8((uint64_t)&a9, a2);
}

void ViewService.appleMusicEventView()()
{
  void *v0;

  type metadata accessor for AppleMusicEventView();
  sub_1AE4F6738();
  AppleMusicEventView.init(viewService:)(v0);
  sub_1AE4FC4F8();
}

uint64_t AppleMusicEventView.entryView.getter()
{
  return swift_retain();
}

void AppleMusicEventView.__allocating_init(viewService:)(void *a1)
{
  sub_1AE4F6738();
  AppleMusicEventView.init(viewService:)(a1);
  sub_1AE4FC4F8();
}

uint64_t type metadata accessor for AppleMusicEventView()
{
  return objc_opt_self();
}

uint64_t AppleMusicEventView.init(viewService:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1;
  type metadata accessor for AppleMusicEventEntryView();
  sub_1AE4F6738();
  v5 = AppleMusicEventEntryView.init(viewService:)(a1);
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v6 = v5;
    sub_1AE501548(&qword_1EED9B098);
    v7 = sub_1AE4F6738();
    *(_QWORD *)(v7 + 16) = v6;
    *(_QWORD *)(v3 + 16) = v7;
  }
  return v3;
}

void AppleMusicEventView.songEvents<A>(from:order:)()
{
  sub_1AE503308();
  sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  sub_1AE4FC540();
  sub_1AE65A9DC();
  sub_1AE4FCE34();
}

uint64_t AppleMusicEventView.songEvents<A>(whose:in:from:order:)(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return sub_1AE530040(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AA80);
}

{
  return sub_1AE530040(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AAA4);
}

{
  return sub_1AE530040(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AAC8);
}

{
  return sub_1AE530040(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AAEC);
}

{
  return sub_1AE530040(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AB10);
}

uint64_t sub_1AE530040(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v17;

  v11 = *a1;
  v12 = a4 & 1;
  v13 = sub_1AE503308();
  v17 = v11;
  v14 = sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  return a7(v13, &v17, a2, a3, v12, v13, a5, v14, a6);
}

uint64_t AppleMusicEventView.songEvents<A>(overlapping:from:order:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_1AE530188(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65ABF4);
}

{
  return sub_1AE530188(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AC14);
}

{
  return sub_1AE530188(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AC34);
}

{
  return sub_1AE530188(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AC54);
}

{
  return sub_1AE530188(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AC74);
}

uint64_t sub_1AE530188(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = a3 & 1;
  v11 = sub_1AE503308();
  v12 = sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  return a6(v11, a1, a2, v10, v11, a4, v12, a5);
}

void AppleMusicEventView.enumerateSongEvents<A>(from:order:using:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2 & 1;
  v14 = sub_1AE503308();
  v15 = sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  sub_1AE65AD48(v14, a1, v13, a3, a4, v14, a5, v15, a6, a7);
}

void AppleMusicEventView.enumerateSongEvents<A>(whose:in:from:order:using:)(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1AE5019B0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

{
  sub_1AE5019B0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

{
  sub_1AE5019B0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

{
  sub_1AE5019B0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

{
  sub_1AE5019B0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

uint64_t sub_1AE530384(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v21;

  v14 = *a1;
  v15 = a4 & 1;
  v16 = sub_1AE503308();
  v21 = v14;
  v17 = sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  return a10(v16, &v21, a2, a3, v15, a5, a6, v16, a7, v17, a8, a9);
}

void AppleMusicEventView.enumerateSongEvents<A>(overlapping:from:order:using:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1AE4FCE48(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AF80);
  sub_1AE4FC530();
}

{
  sub_1AE4FCE48(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AFA4);
  sub_1AE4FC530();
}

{
  sub_1AE4FCE48(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AFC8);
  sub_1AE4FC530();
}

{
  sub_1AE4FCE48(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AFEC);
  sub_1AE4FC530();
}

{
  sub_1AE4FCE48(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65B010);
  sub_1AE4FC530();
}

uint64_t sub_1AE5304F4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = a3 & 1;
  v16 = sub_1AE503308();
  v17 = sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  return a9(v16, a1, a2, v15, a4, a5, v16, a6, v17, a7, a8);
}

void AppleMusicEventView.latestSongEvent<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AE53064C(a1, a2, a3, sub_1AE65B0F0);
}

void AppleMusicEventView.earliestSongEvent<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AE53064C(a1, a2, a3, sub_1AE65B10C);
}

void sub_1AE53064C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_1AE503308();
  v9 = sub_1AE512FA0(qword_1EED9AE00, type metadata accessor for CustomGraphSongEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSongEvent);
  a4(v8, a1, v8, a2, v9, a3);
  sub_1AE4FCE34();
}

uint64_t AppleMusicEventView.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t AppleMusicEventView.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE530710()
{
  return sub_1AE512FA0(&qword_1EED9AE88, (uint64_t (*)(uint64_t))type metadata accessor for AppleMusicEventEntryView, (uint64_t)&unk_1AE934270);
}

uint64_t method lookup function for AppleMusicEventView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppleMusicEventView.__allocating_init(viewService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1AE530760(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  uint64_t v33;
  __n128 *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  BOOL v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  __n128 *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t result;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;
  int64_t v86;
  _QWORD v87[5];

  v1 = *(_QWORD *)(a1 + 16);
  type metadata accessor for KnosisQueryParam();
  v2 = sub_1AE925C98();
  v84 = v1 + 56;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v85 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  v83 = v1;
  while (v5)
  {
    v7 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v86 = v6;
    v8 = v7 | (v6 << 6);
LABEL_20:
    v13 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 32 * v8);
    v15 = *v13;
    v14 = v13[1];
    v16 = v13[2];
    v17 = v13[3];
    v87[0] = *v13;
    v87[1] = v14;
    v87[3] = 95;
    v87[4] = 0xE100000000000000;
    sub_1AE4F7630();
    sub_1AE4F67A4();
    sub_1AE4FB764();
    v18 = (uint64_t)v87;
    v19 = (_QWORD *)sub_1AE926790();
    v20 = v19;
    if (v19[2] < 2uLL)
    {
      sub_1AE4F67AC();
      sub_1AE501548(&qword_1ED31BCD0);
      v34 = (__n128 *)sub_1AE4F66BC();
      sub_1AE4FCE50(v34, v35, v36, v37, v38, v39, v40, v41, v42);
      sub_1AE4F66BC();
      sub_1AE4F67A4();
      sub_1AE4FB764();
      sub_1AE885910((uint64_t)v87);
      v44 = v43;
      swift_isUniquelyReferenced_nonNull_native();
      v87[0] = v2;
      sub_1AE4FE8F8(v15, v14);
      sub_1AE4FD988();
      if (v47)
        goto LABEL_56;
      v48 = v45;
      v49 = v46;
      sub_1AE501548(&qword_1ED30FD18);
      v1 = v83;
      if ((sub_1AE926A54() & 1) != 0)
      {
        v50 = sub_1AE536EDC(v15, v14);
        if ((v49 & 1) != (v51 & 1))
          goto LABEL_59;
        v48 = v50;
      }
      v2 = v87[0];
      if ((v49 & 1) != 0)
      {
        v52 = *(_QWORD *)(v87[0] + 56);
        swift_release();
        *(_QWORD *)(v52 + 8 * v48) = v44;
      }
      else
      {
        sub_1AE503310(v87[0] + 8 * (v48 >> 6));
        v77 = (uint64_t *)(v76 + 16 * v48);
        *v77 = v15;
        v77[1] = v14;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v48) = v44;
        v78 = *(_QWORD *)(v2 + 16);
        v47 = __OFADD__(v78, 1);
        v79 = v78 + 1;
        if (v47)
          goto LABEL_58;
        *(_QWORD *)(v2 + 16) = v79;
        sub_1AE4F67A4();
      }
      sub_1AE4F6710();
      swift_bridgeObjectRelease_n();
LABEL_32:
      swift_bridgeObjectRelease();
      v6 = v86;
    }
    else
    {
      v21 = v19[5];
      if (*(_QWORD *)(v2 + 16))
      {
        v22 = v19[4];
        sub_1AE4F81B0();
        sub_1AE4FE8F8(v22, v21);
        v18 = v23;
        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
        {
          v24 = v20[4];
          v25 = v20[5];
          swift_bridgeObjectRetain();
          sub_1AE4F67AC();
          if (*(_QWORD *)(v2 + 16) && (v26 = sub_1AE4FE8F8(v24, v25), (v27 & 1) != 0))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v26);
            swift_retain();
            swift_bridgeObjectRelease();
            v29 = (_QWORD *)(v28 + 16);
            swift_beginAccess();
            v30 = *(_QWORD *)(v28 + 16);
            sub_1AE4FB764();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)(v28 + 16) = v30;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1AE4FB7A4();
              v30 = v80;
              *v29 = v80;
            }
            v32 = *(_QWORD *)(v30 + 16);
            if (v32 >= *(_QWORD *)(v30 + 24) >> 1)
            {
              sub_1AE4FB7A4();
              v30 = v81;
              *v29 = v81;
            }
            v1 = v83;
            *(_QWORD *)(v30 + 16) = v32 + 1;
            v33 = v30 + 16 * v32;
            *(_QWORD *)(v33 + 32) = v16;
            *(_QWORD *)(v33 + 40) = v17;
            swift_endAccess();
            swift_release();
          }
          else
          {
            sub_1AE4F6710();
          }
          sub_1AE4F6710();
          goto LABEL_32;
        }
        v21 = v20[5];
      }
      v53 = v20[4];
      sub_1AE4F81B0();
      sub_1AE4F67AC();
      sub_1AE501548(&qword_1ED31BCD0);
      v54 = (__n128 *)sub_1AE4F66BC();
      sub_1AE4FCE50(v54, v55, v56, v57, v58, v59, v60, v61, v62);
      swift_bridgeObjectRelease();
      sub_1AE4F66BC();
      sub_1AE885910(v18);
      v64 = v63;
      swift_isUniquelyReferenced_nonNull_native();
      v87[0] = v2;
      sub_1AE4FE8F8(v53, v21);
      sub_1AE4FD988();
      if (v47)
        goto LABEL_55;
      v67 = v65;
      v68 = v66;
      sub_1AE501548(&qword_1ED30FD18);
      if ((sub_1AE926A54() & 1) != 0)
      {
        v69 = sub_1AE536EDC(v53, v21);
        if ((v68 & 1) != (v70 & 1))
          goto LABEL_59;
        v67 = v69;
      }
      v2 = v87[0];
      if ((v68 & 1) != 0)
      {
        v71 = *(_QWORD *)(v87[0] + 56);
        swift_release();
        *(_QWORD *)(v71 + 8 * v67) = v64;
      }
      else
      {
        sub_1AE503310(v87[0] + 8 * (v67 >> 6));
        v73 = (uint64_t *)(v72 + 16 * v67);
        *v73 = v53;
        v73[1] = v21;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v67) = v64;
        v74 = *(_QWORD *)(v2 + 16);
        v47 = __OFADD__(v74, 1);
        v75 = v74 + 1;
        if (v47)
          goto LABEL_57;
        *(_QWORD *)(v2 + 16) = v75;
        sub_1AE4F81B0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v1 = v83;
      v6 = v86;
    }
  }
  v9 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_54;
  }
  if (v9 >= v85)
    goto LABEL_52;
  v10 = *(_QWORD *)(v84 + 8 * v9);
  v11 = v6 + 1;
  if (v10)
    goto LABEL_19;
  v11 = v6 + 2;
  if (v6 + 2 >= v85)
    goto LABEL_52;
  v10 = *(_QWORD *)(v84 + 8 * v11);
  if (v10)
    goto LABEL_19;
  v11 = v6 + 3;
  if (v6 + 3 >= v85)
    goto LABEL_52;
  v10 = *(_QWORD *)(v84 + 8 * v11);
  if (v10)
  {
LABEL_19:
    v5 = (v10 - 1) & v10;
    v86 = v11;
    v8 = __clz(__rbit64(v10)) + (v11 << 6);
    goto LABEL_20;
  }
  v12 = v6 + 4;
  if (v6 + 4 >= v85)
  {
LABEL_52:
    swift_release();
    return v2;
  }
  v10 = *(_QWORD *)(v84 + 8 * v12);
  if (v10)
  {
    v11 = v6 + 4;
    goto LABEL_19;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v85)
      goto LABEL_52;
    v10 = *(_QWORD *)(v84 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_19;
  }
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for NamedArgGenerator()
{
  return &type metadata for NamedArgGenerator;
}

void sub_1AE530D34(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1AE530D40(uint64_t a1)
{
  *(_QWORD *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 88) = xmmword_1AE934380;
  *(_BYTE *)(a1 + 104) = 0;
  return 0;
}

uint64_t sub_1AE530D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  _BYTE *v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  char v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v134 = MEMORY[0x1E0DEE9D8];
  v135 = MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  if (*(_QWORD *)(a2 + 32))
  {
    v5 = swift_bridgeObjectRetain();
    v6 = sub_1AE58FBA4(v5);
    swift_bridgeObjectRelease();
    v134 = v6;
  }
  sub_1AE531990(&v134);
  v7 = v134;
  v8 = *(_QWORD *)(v134 + 16);
  v111 = v2;
  v114 = v3;
  if (v8 < 2)
  {
    isUniquelyReferenced_nonNull_native = sub_1AE4F908C();
    v45 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
    if (!v45)
    {
LABEL_82:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AE60F5C8();
      goto LABEL_84;
    }
    v46 = (uint64_t *)(isUniquelyReferenced_nonNull_native + 40);
    v47 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v48 = *(v46 - 1);
      v49 = *v46;
      v133 = 0;
      MEMORY[0x1E0C80A78](isUniquelyReferenced_nonNull_native);
      if ((v49 & 0x1000000000000000) != 0 || !(v49 & 0x2000000000000000 | v48 & 0x1000000000000000))
      {
        sub_1AE4FB764();
        sub_1AE9268F8();
      }
      else
      {
        if ((v49 & 0x2000000000000000) != 0)
        {
          v121 = v48;
          v122 = v49 & 0xFFFFFFFFFFFFFFLL;
          switch((char)v48)
          {
            case 0:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
              goto LABEL_59;
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
              goto LABEL_74;
            default:
              if (v48 == 32)
              {
LABEL_59:
                sub_1AE4FB764();
LABEL_60:
                v52 = 0;
                goto LABEL_61;
              }
LABEL_74:
              sub_1AE4FB764();
              if (!sub_1AE4F67B4())
                goto LABEL_60;
              sub_1AE503324();
LABEL_61:
              v132 = v52;
              isUniquelyReferenced_nonNull_native = sub_1AE4F6710();
              break;
          }
          goto LABEL_62;
        }
        if ((v48 & 0x1000000000000000) != 0)
          v50 = (_BYTE *)((v49 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v50 = (_BYTE *)sub_1AE926994();
        switch(*v50)
        {
          case 0:
          case 9:
          case 0xA:
          case 0xB:
          case 0xC:
          case 0xD:
            goto LABEL_54;
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
            goto LABEL_71;
          default:
            if (*v50 == 32)
            {
LABEL_54:
              sub_1AE4FB764();
LABEL_55:
              v51 = 0;
              goto LABEL_56;
            }
LABEL_71:
            sub_1AE4FB764();
            if (!sub_1AE532330())
              goto LABEL_55;
            sub_1AE503324();
LABEL_56:
            v132 = v51;
            break;
        }
      }
      isUniquelyReferenced_nonNull_native = sub_1AE4F6710();
LABEL_62:
      if ((v132 & 1) != 0)
      {
        v53 = v133;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1AE51A298();
          v47 = isUniquelyReferenced_nonNull_native;
        }
        v55 = *(_QWORD *)(v47 + 16);
        v54 = *(_QWORD *)(v47 + 24);
        if (v55 >= v54 >> 1)
        {
          sub_1AE50A938(v54);
          sub_1AE51A298();
          v47 = isUniquelyReferenced_nonNull_native;
        }
        *(_QWORD *)(v47 + 16) = v55 + 1;
        *(_QWORD *)(v47 + 8 * v55 + 32) = v53;
      }
      v46 += 2;
      if (!--v45)
        goto LABEL_82;
    }
  }
  swift_bridgeObjectRetain_n();
  v9 = v7 + 40;
  do
  {
    swift_bridgeObjectRetain();
    v10 = *(_QWORD *)(sub_1AE4F908C() + 16);
    swift_bridgeObjectRelease();
    sub_1AE4F9038();
    v11 = MEMORY[0x1E0DEE9B8];
    if (v10 > 1)
    {
      swift_bridgeObjectRelease_n();
      if (qword_1ED3193F0 != -1)
        swift_once();
      v56 = sub_1AE925B6C();
      sub_1AE4FB608(v56, (uint64_t)qword_1ED3193D8);
      v57 = v2;
      swift_retain_n();
      swift_retain_n();
      v58 = sub_1AE925B54();
      v59 = sub_1AE9265EC();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = sub_1AE4F66A0();
        v115 = sub_1AE4F66A0();
        v121 = v115;
        *(_DWORD *)v60 = 136315394;
        v61 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 224))();
        sub_1AE50A268(v61, v62, v63, v64, v65, v66, v67, v68, v97, v101, v105, v109, v2, v115, v117, v121, v122, v123, v124,
          v125);
        sub_1AE92676C();
        sub_1AE4FC54C();
        sub_1AE4F9038();
        *(_WORD *)(v60 + 12) = 2080;
        sub_1AE8816DC();
        sub_1AE50A268(v69, v70, v71, v72, v73, v74, v75, v76, v99, v103, v107, v110, v112, v116, v119, v121, v122, v123, v124,
          v125);
        v133 = v77;
        sub_1AE92676C();
        sub_1AE4FC54C();
        sub_1AE4F9038();
        _os_log_impl(&dword_1AE4F2000, v58, v59, "multiple array arguments are provided to %s: %s.", (uint8_t *)v60, 0x16u);
        swift_arrayDestroy();
        sub_1AE4F9064();
      }

      sub_1AE4FC54C();
      sub_1AE4FC54C();
      sub_1AE5322E0();
      swift_allocError();
      *(_QWORD *)v94 = 0xD00000000000003DLL;
      *(_QWORD *)(v94 + 8) = 0x80000001AE97C990;
      *(_BYTE *)(v94 + 16) = 4;
      swift_willThrow();
      return v57;
    }
    v9 += 16;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease_n();
  v13 = v7;
  v14 = *(_QWORD *)(v7 + 16);
  if (v14)
  {
    v98 = v13;
    v15 = v13 + 40;
    *(_QWORD *)&v12 = 136315138;
    v106 = v12;
    v102 = v11 + 8;
    v118 = a2;
    while (1)
    {
      swift_bridgeObjectRetain();
      v16 = sub_1AE4F908C();
      v17 = swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(v16 + 16);
      if (v18)
        break;
      sub_1AE4F6710();
LABEL_36:
      v15 += 16;
      if (!--v14)
        goto LABEL_83;
    }
    v19 = v16 + 16 * v18;
    v21 = *(_QWORD *)(v19 + 16);
    v20 = *(_QWORD *)(v19 + 24);
    v22 = (uint64_t *)(v19 + 16);
    v133 = 0;
    MEMORY[0x1E0C80A78](v17);
    if ((v20 & 0x1000000000000000) == 0 && v20 & 0x2000000000000000 | v21 & 0x1000000000000000)
    {
      if ((v20 & 0x2000000000000000) != 0)
      {
        v121 = v21;
        v122 = v20 & 0xFFFFFFFFFFFFFFLL;
        switch((char)v21)
        {
          case 0:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
            goto LABEL_22;
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
            goto LABEL_42;
          default:
            if (v21 == 32)
            {
LABEL_22:
              sub_1AE4F66CC();
LABEL_23:
              v25 = 0;
              goto LABEL_24;
            }
LABEL_42:
            sub_1AE4F66CC();
            if (!sub_1AE4F67B4())
              goto LABEL_23;
            sub_1AE503324();
LABEL_24:
            v132 = v25;
            sub_1AE4F9038();
            break;
        }
      }
      else
      {
        if ((v21 & 0x1000000000000000) != 0)
          v23 = (_BYTE *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v23 = (_BYTE *)sub_1AE926994();
        switch(*v23)
        {
          case 0:
          case 9:
          case 0xA:
          case 0xB:
          case 0xC:
          case 0xD:
            goto LABEL_16;
          case 1:
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
            goto LABEL_39;
          default:
            if (*v23 == 32)
            {
LABEL_16:
              sub_1AE4F66CC();
LABEL_17:
              v24 = 0;
              goto LABEL_18;
            }
LABEL_39:
            sub_1AE4F66CC();
            if (!sub_1AE532330())
              goto LABEL_17;
            sub_1AE503324();
LABEL_18:
            v132 = v24;
            break;
        }
LABEL_19:
        sub_1AE4F9038();
      }
      if ((v132 & 1) != 0)
      {
        sub_1AE4F6710();
        v26 = v133;
        v27 = v135;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE51A298();
          v27 = v42;
        }
        v29 = *(_QWORD *)(v27 + 16);
        v28 = *(_QWORD *)(v27 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1AE50A938(v28);
          sub_1AE51A298();
          v27 = v43;
        }
        *(_QWORD *)(v27 + 16) = v29 + 1;
        *(_QWORD *)(v27 + 8 * v29 + 32) = v26;
        v135 = v27;
      }
      else
      {
        if (qword_1ED3193F0 != -1)
          swift_once();
        v30 = sub_1AE925B6C();
        sub_1AE4FB608(v30, (uint64_t)qword_1ED3193D8);
        sub_1AE4FB764();
        v31 = sub_1AE925B54();
        v32 = sub_1AE9265EC();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = sub_1AE4F66A0();
          v121 = sub_1AE4F66A0();
          *(_DWORD *)v33 = v106;
          v34 = *v22;
          v35 = v22[1];
          swift_bridgeObjectRetain();
          sub_1AE520ED4(v34, v35, (uint64_t)&v121, v36, v37, v38, v39, v40, v98, v102, v106, *((uint64_t *)&v106 + 1), v111, v114, v118, v121, v122, v123, v124,
            v125);
          *(_QWORD *)(v33 + 4) = v41;
          sub_1AE505348();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1AE4F2000, v31, v32, "can't convert %s to Double during usage of arithmetic operator", (uint8_t *)v33, 0xCu);
          swift_arrayDestroy();
          sub_1AE4F9064();
        }

        sub_1AE505348();
      }
      goto LABEL_36;
    }
    sub_1AE4F66CC();
    sub_1AE9268F8();
    goto LABEL_19;
  }
LABEL_83:
  swift_bridgeObjectRelease();
LABEL_84:
  v57 = MEMORY[0x1E0DEE9D8];
  type metadata accessor for ResultGraph();
  v78 = swift_allocObject();
  *(_QWORD *)(v78 + 16) = sub_1AE925C98();
  *(_QWORD *)(v78 + 24) = v57;
  if (*(_QWORD *)(v135 + 16))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v111 + 240))(v135);
    swift_bridgeObjectRelease();
    v79 = sub_1AE926388();
    v81 = v80;
    v82 = sub_1AE926388();
    KnosisInternalFact.init(sid:pid:oid:)(v79, v81, 0, 0xE000000000000000, v82, v83, &v121);
    v84 = v122;
    v120 = v121;
    v85 = v123;
    v86 = v124;
    v87 = v125;
    v88 = v126;
    v89 = v127;
    v113 = v128;
    v108 = v129;
    v104 = v130;
    v100 = v131;
    sub_1AE519F94();
    v57 = v90;
    v91 = *(_QWORD *)(v90 + 16);
    if (v91 >= *(_QWORD *)(v90 + 24) >> 1)
    {
      sub_1AE519F94();
      v57 = v96;
    }
    *(_QWORD *)(v57 + 16) = v91 + 1;
    v92 = (_QWORD *)(v57 + 88 * v91);
    v92[4] = v120;
    v92[5] = v84;
    v92[6] = v85;
    v92[7] = v86;
    v92[8] = v87;
    v92[9] = v88;
    v92[10] = v89;
    v92[11] = v113;
    v92[12] = v108;
    v92[13] = v104;
    v92[14] = v100;
    LOBYTE(v121) = 0;
    v93 = swift_bridgeObjectRetain();
    sub_1AE85DA40(v93, &v121);
  }
  swift_bridgeObjectRelease();
  return v57;
}

void sub_1AE5317B8()
{
  sub_1AE4FFC08();
  __break(1u);
}

void sub_1AE5317F8()
{
  sub_1AE4FFC08();
  __break(1u);
}

void sub_1AE531838()
{
  sub_1AE4FFC08();
  __break(1u);
}

uint64_t sub_1AE531878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
  v3 = v2;
  (*(void (**)(void))(*(_QWORD *)v0 + 232))();
  sub_1AE5078E0();
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v0 + 32) = &unk_1E5DA7E18;
  *(_OWORD *)(v0 + 40) = xmmword_1AE934390;
  *(_QWORD *)(v0 + 56) = 1;
  *(_QWORD *)(v0 + 64) = v4;
  *(_QWORD *)(v0 + 72) = v5;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  sub_1AE5158B8(v6, v7);
  return v0;
}

uint64_t sub_1AE531934()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE5078E0();
  sub_1AE5158B8(v0, v1);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ArithmeticOperator()
{
  return objc_opt_self();
}

void sub_1AE531990(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AE7AA52C();
    v2 = v4;
  }
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  sub_1AE5319FC(v5);
  *a1 = v2;
}

void sub_1AE5319FC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  BOOL v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;

  v3 = a1[1];
  v4 = sub_1AE926D0C();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1AE532060(0, v3, 1, a1);
      return;
    }
    goto LABEL_144;
  }
  v5 = v4;
  sub_1AE51960C(v3 / 2);
  v101 = v6;
  v102 = v3;
  v103 = v7;
  v99 = a1;
  if (v3 <= 0)
  {
    v104 = MEMORY[0x1E0DEE9D8];
    v33 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_110:
    if (v33 < 2)
    {
LABEL_121:
      swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(_QWORD *)(v101 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_149;
    }
    v90 = *v99;
    while (1)
    {
      v91 = v33 - 2;
      if (v33 < 2)
        break;
      if (!v90)
        goto LABEL_153;
      v92 = v104;
      v93 = *(_QWORD *)(v104 + 32 + 16 * v91);
      v94 = *(_QWORD *)(v104 + 32 + 16 * (v33 - 1) + 8);
      sub_1AE532124((char *)(v90 + 16 * v93), (char *)(v90 + 16 * *(_QWORD *)(v104 + 32 + 16 * (v33 - 1))), v90 + 16 * v94, v103);
      if (v1)
        goto LABEL_106;
      if (v94 < v93)
        goto LABEL_139;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE8893F4();
        v92 = v97;
      }
      if (v91 >= *(_QWORD *)(v92 + 16))
        goto LABEL_140;
      v95 = (_QWORD *)(v92 + 32 + 16 * v91);
      *v95 = v93;
      v95[1] = v94;
      v96 = *(_QWORD *)(v92 + 16);
      if (v33 > v96)
        goto LABEL_141;
      memmove((void *)(v92 + 32 + 16 * (v33 - 1)), (const void *)(v92 + 32 + 16 * v33), 16 * (v96 - v33));
      v104 = v92;
      *(_QWORD *)(v92 + 16) = v96 - 1;
      v33 = v96 - 1;
      v3 = v102;
      if (v96 <= 2)
        goto LABEL_121;
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  v100 = v5;
  v8 = 0;
  v9 = *a1;
  v98 = *a1 + 8;
  v104 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v10 = v8++;
    if (v8 >= v3)
      goto LABEL_32;
    v11 = (uint64_t *)(v9 + 16 * v8);
    v12 = *v11;
    v13 = v11[1];
    v14 = (_QWORD *)(v9 + 16 * v10);
    if (v12 == *v14 && v13 == v14[1])
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v3)
        goto LABEL_31;
      v16 = 0;
LABEL_13:
      v18 = (_QWORD *)(v98 + 16 * v17);
      do
      {
        v19 = (_QWORD *)(v9 + 16 * v8);
        if (*(v18 - 1) == *v19 && *v18 == v19[1])
        {
          if ((v16 & 1) != 0)
            goto LABEL_24;
        }
        else if (((v16 ^ sub_1AE926D60()) & 1) != 0)
        {
          goto LABEL_23;
        }
        v18 += 2;
        v21 = v17 + 1;
        v8 = v17;
        v17 = v21;
      }
      while (v21 < v3);
      v17 = v21;
      goto LABEL_23;
    }
    v16 = sub_1AE926D60();
    v17 = v10 + 2;
    if (v10 + 2 < v3)
      goto LABEL_13;
LABEL_23:
    v8 = v17;
    if ((v16 & 1) == 0)
      goto LABEL_32;
LABEL_24:
    if (v17 < v10)
      goto LABEL_148;
    if (v10 < v17)
    {
      v22 = 16 * v17;
      v23 = 16 * v10;
      v24 = v17;
      v25 = v10;
      do
      {
        if (v25 != --v24)
        {
          if (!v9)
            goto LABEL_152;
          v26 = v9 + v22;
          v27 = *(_QWORD *)(v9 + v23);
          v28 = *(_QWORD *)(v9 + v23 + 8);
          *(_OWORD *)(v9 + v23) = *(_OWORD *)(v9 + v22 - 16);
          *(_QWORD *)(v26 - 16) = v27;
          *(_QWORD *)(v26 - 8) = v28;
        }
        ++v25;
        v22 -= 16;
        v23 += 16;
      }
      while (v25 < v24);
    }
LABEL_31:
    v8 = v17;
LABEL_32:
    if (v8 >= v3)
      goto LABEL_41;
    if (__OFSUB__(v8, v10))
      goto LABEL_143;
    if (v8 - v10 >= v100)
      goto LABEL_41;
    if (__OFADD__(v10, v100))
      goto LABEL_146;
    if (v10 + v100 >= v3)
      v29 = v3;
    else
      v29 = v10 + v100;
    if (v29 < v10)
      goto LABEL_147;
    if (v8 == v29)
    {
LABEL_41:
      v30 = v104;
    }
    else
    {
      v81 = (_QWORD *)(v9 + 16 * v8);
      v30 = v104;
      do
      {
        v82 = (uint64_t *)(v9 + 16 * v8);
        v83 = *v82;
        v84 = v82[1];
        v85 = v10;
        v86 = v81;
        do
        {
          v87 = v83 == *(v86 - 2) && v84 == *(v86 - 1);
          if (v87 || (sub_1AE926D60() & 1) == 0)
            break;
          if (!v9)
            goto LABEL_150;
          v83 = *v86;
          v84 = v86[1];
          *(_OWORD *)v86 = *((_OWORD *)v86 - 1);
          *(v86 - 1) = v84;
          *(v86 - 2) = v83;
          v86 -= 2;
          ++v85;
        }
        while (v8 != v85);
        ++v8;
        v81 += 2;
      }
      while (v8 != v29);
      v8 = v29;
    }
    if (v8 < v10)
      goto LABEL_142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE889310(0, *(_QWORD *)(v30 + 16) + 1, 1, (char *)v30);
      v30 = v88;
    }
    v32 = *(_QWORD *)(v30 + 16);
    v31 = *(_QWORD *)(v30 + 24);
    v33 = v32 + 1;
    if (v32 >= v31 >> 1)
    {
      sub_1AE889310(v31 > 1, v32 + 1, 1, (char *)v30);
      v30 = v89;
    }
    *(_QWORD *)(v30 + 16) = v33;
    v34 = v30 + 32;
    v35 = (uint64_t *)(v30 + 32 + 16 * v32);
    *v35 = v10;
    v35[1] = v8;
    v104 = v30;
    if (v32)
      break;
    v33 = 1;
LABEL_90:
    v3 = v102;
    if (v8 >= v102)
      goto LABEL_110;
  }
  while (1)
  {
    v36 = v33 - 1;
    if (v33 >= 4)
    {
      v41 = v34 + 16 * v33;
      v42 = *(_QWORD *)(v41 - 64);
      v43 = *(_QWORD *)(v41 - 56);
      v47 = __OFSUB__(v43, v42);
      v44 = v43 - v42;
      if (v47)
        goto LABEL_127;
      v46 = *(_QWORD *)(v41 - 48);
      v45 = *(_QWORD *)(v41 - 40);
      v47 = __OFSUB__(v45, v46);
      v39 = v45 - v46;
      v40 = v47;
      if (v47)
        goto LABEL_128;
      v48 = v33 - 2;
      v49 = (uint64_t *)(v34 + 16 * (v33 - 2));
      v51 = *v49;
      v50 = v49[1];
      v47 = __OFSUB__(v50, v51);
      v52 = v50 - v51;
      if (v47)
        goto LABEL_129;
      v47 = __OFADD__(v39, v52);
      v53 = v39 + v52;
      if (v47)
        goto LABEL_131;
      if (v53 >= v44)
      {
        v71 = (uint64_t *)(v34 + 16 * v36);
        v73 = *v71;
        v72 = v71[1];
        v47 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v47)
          goto LABEL_137;
        v64 = v39 < v74;
        goto LABEL_79;
      }
    }
    else
    {
      if (v33 != 3)
      {
        v65 = *(_QWORD *)(v30 + 32);
        v66 = *(_QWORD *)(v30 + 40);
        v47 = __OFSUB__(v66, v65);
        v58 = v66 - v65;
        v59 = v47;
        goto LABEL_73;
      }
      v38 = *(_QWORD *)(v30 + 32);
      v37 = *(_QWORD *)(v30 + 40);
      v47 = __OFSUB__(v37, v38);
      v39 = v37 - v38;
      v40 = v47;
    }
    if ((v40 & 1) != 0)
      goto LABEL_130;
    v48 = v33 - 2;
    v54 = (uint64_t *)(v34 + 16 * (v33 - 2));
    v56 = *v54;
    v55 = v54[1];
    v57 = __OFSUB__(v55, v56);
    v58 = v55 - v56;
    v59 = v57;
    if (v57)
      goto LABEL_132;
    v60 = (uint64_t *)(v34 + 16 * v36);
    v62 = *v60;
    v61 = v60[1];
    v47 = __OFSUB__(v61, v62);
    v63 = v61 - v62;
    if (v47)
      goto LABEL_134;
    if (__OFADD__(v58, v63))
      goto LABEL_136;
    if (v58 + v63 >= v39)
    {
      v64 = v39 < v63;
LABEL_79:
      if (v64)
        v36 = v48;
      goto LABEL_81;
    }
LABEL_73:
    if ((v59 & 1) != 0)
      goto LABEL_133;
    v67 = (uint64_t *)(v34 + 16 * v36);
    v69 = *v67;
    v68 = v67[1];
    v47 = __OFSUB__(v68, v69);
    v70 = v68 - v69;
    if (v47)
      goto LABEL_135;
    if (v70 < v58)
      goto LABEL_90;
LABEL_81:
    v75 = v36 - 1;
    if (v36 - 1 >= v33)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v9)
      goto LABEL_151;
    v76 = (uint64_t *)(v34 + 16 * v75);
    v77 = *v76;
    v78 = (_QWORD *)(v34 + 16 * v36);
    v79 = v78[1];
    sub_1AE532124((char *)(v9 + 16 * *v76), (char *)(v9 + 16 * *v78), v9 + 16 * v79, v103);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_124;
    if (v36 > *(_QWORD *)(v104 + 16))
      goto LABEL_125;
    *v76 = v77;
    *(_QWORD *)(v34 + 16 * v75 + 8) = v79;
    v80 = *(_QWORD *)(v104 + 16);
    if (v36 >= v80)
      goto LABEL_126;
    v30 = v104;
    v33 = v80 - 1;
    memmove((void *)(v34 + 16 * v36), v78 + 2, 16 * (v80 - 1 - v36));
    *(_QWORD *)(v104 + 16) = v80 - 1;
    if (v80 <= 2)
      goto LABEL_90;
  }
LABEL_106:
  swift_bridgeObjectRelease();
  if (v102 < -1)
    goto LABEL_145;
  *(_QWORD *)(v101 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1AE532060(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 16 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1))
          break;
        result = sub_1AE926D60();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        result = *v12;
        v10 = v12[1];
        *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1AE532124(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  char *v15;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_1AE51F99C(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_47;
    v18 = (char *)(a3 - 16);
    while (1)
    {
      v19 = v18 + 16;
      v20 = (char *)(v12 - 16);
      v21 = *(_QWORD *)(v12 - 16) == *((_QWORD *)v6 - 2) && *(_QWORD *)(v12 - 8) == *((_QWORD *)v6 - 1);
      if (v21 || (sub_1AE926D60() & 1) == 0)
      {
        v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23)
          goto LABEL_43;
      }
      else
      {
        v22 = v19 != v6 || v18 >= v6;
        v20 = v6 - 16;
        v6 -= 16;
        if (!v22)
          goto LABEL_43;
      }
      *(_OWORD *)v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_47;
    }
  }
  sub_1AE51F99C(a1, (a2 - a1) / 16, a4);
  v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v14 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (!v14 && (sub_1AE926D60() & 1) != 0)
        break;
      v15 = v4;
      v14 = v7 == v4;
      v4 += 16;
      if (!v14)
        goto LABEL_15;
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_21;
    }
    v15 = v6;
    v14 = v7 == v6;
    v6 += 16;
    if (v14)
      goto LABEL_16;
LABEL_15:
    *(_OWORD *)v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  v6 = v7;
LABEL_47:
  sub_1AE51F99C(v4, (uint64_t)(v12 - (_QWORD)v4) / 16, v6);
  return 1;
}

void sub_1AE5322C8(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1AE7717F0(a1, a2);
}

unint64_t sub_1AE5322E0()
{
  unint64_t result;

  result = qword_1EED9B0A0;
  if (!qword_1EED9B0A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9614CC, &type metadata for OperatorError);
    atomic_store(result, (unint64_t *)&qword_1EED9B0A0);
  }
  return result;
}

void sub_1AE53231C(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1AE5322C8(a1, a2);
}

uint64_t sub_1AE532330()
{
  return _swift_stdlib_strtod_clocale();
}

void sub_1AE53233C()
{
  os_unfair_lock_s *v0;
  _QWORD *v1;
  void (*v2)(char *__return_ptr);

  if (qword_1ED31B428 != -1)
    swift_once();
  v1 = off_1ED31B418;
  sub_1AE4FB7B0();
  sub_1AE4F9094();
  v2 = *(void (**)(char *__return_ptr))(v1[2] + 16);
  swift_retain();
  os_unfair_lock_unlock(v0);
  v2(&byte_1ED31B3E8);
  swift_release();
  sub_1AE4FCDE0();
}

uint64_t static AssetRegistry.createCreateBackend.getter()
{
  os_unfair_lock_s *v0;
  _QWORD *v1;
  uint64_t v2;

  if (qword_1ED31B428 != -1)
    swift_once();
  v1 = off_1ED31B418;
  sub_1AE4FB7B0();
  sub_1AE4F9094();
  v2 = *(_QWORD *)(v1[2] + 16);
  swift_retain();
  os_unfair_lock_unlock(v0);
  return v2;
}

uint64_t static AssetRegistry.createBackend.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1ED319ED0 != -1)
    swift_once();
  v3 = qword_1ED31B3F0;
  v2 = unk_1ED31B3F8;
  v4 = byte_1ED31B400;
  v5 = qword_1ED31B408;
  v6 = unk_1ED31B410;
  *(_BYTE *)a1 = byte_1ED31B3E8;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v2;
  *(_BYTE *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_retain();
  return swift_retain();
}

uint64_t sub_1AE5324C0()
{
  swift_release();
  return swift_deallocClassInstance();
}

void *sub_1AE5324E4()
{
  uint64_t v0;
  void *result;

  _s20_CreateCreateBackendCMa();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1AE53254C;
  *(_QWORD *)(v0 + 24) = 0;
  sub_1AE501548(&qword_1ED31B430);
  swift_allocObject();
  result = (void *)sub_1AE50B7A4(v0);
  off_1ED31B418 = result;
  return result;
}

void sub_1AE53254C(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 1;
  *(_QWORD *)(a1 + 8) = sub_1AE5362F0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  *(_QWORD *)(a1 + 32) = sub_1AE536380;
  *(_QWORD *)(a1 + 40) = 0;
}

void static AssetRegistry.createCreateBackend.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  if (qword_1ED31B428 != -1)
    swift_once();
  v4 = off_1ED31B418;
  v5 = (os_unfair_lock_s *)*((_QWORD *)off_1ED31B418 + 3);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1AE4F9094();
  v6 = v4[2];
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_retain();
  swift_release();
  os_unfair_lock_unlock(v5);
  swift_release_n();
  sub_1AE4FCDE0();
}

void (*static AssetRegistry.createCreateBackend.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  if (qword_1ED31B428 != -1)
    swift_once();
  v4 = off_1ED31B418;
  v5 = (os_unfair_lock_s *)*((_QWORD *)off_1ED31B418 + 3);
  os_unfair_lock_lock(v5);
  sub_1AE4F9094();
  v6 = v4[2];
  v8 = *(_QWORD *)(v6 + 16);
  v7 = *(_QWORD *)(v6 + 24);
  swift_retain();
  os_unfair_lock_unlock(v5);
  v3[3] = v8;
  v3[4] = v7;
  return sub_1AE5326CC;
}

void sub_1AE5326CC(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AE4FD99C();
    swift_release();
  }
  else
  {
    sub_1AE4FD99C();
  }
  free(v2);
}

void AssetRegistry.CreateBackend.remoteBackendType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void AssetRegistry.CreateBackend.remoteWritableBackendType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

_QWORD *AssetRegistry.CreateBackend.init<A, B>(createRemoteBackend:createRemoteWritableBackend:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v16;
  _QWORD *v17;
  char v18;
  _QWORD *result;
  uint64_t v22;

  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(a7 + 16))((char *)&v22 + 1, a5, a7);
  v16 = BYTE1(v22);
  v17 = (_QWORD *)sub_1AE503334();
  v17[2] = a5;
  v17[3] = a6;
  v17[4] = a7;
  v17[5] = a8;
  v17[6] = a1;
  v17[7] = a2;
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(a8 + 8) + 16))(&v22, a6);
  v18 = v22;
  result = (_QWORD *)sub_1AE503334();
  result[2] = a5;
  result[3] = a6;
  result[4] = a7;
  result[5] = a8;
  result[6] = a3;
  result[7] = a4;
  *(_BYTE *)a9 = v16;
  *(_QWORD *)(a9 + 8) = sub_1AE53299C;
  *(_QWORD *)(a9 + 16) = v17;
  *(_BYTE *)(a9 + 24) = v18;
  *(_QWORD *)(a9 + 32) = sub_1AE5329BC;
  *(_QWORD *)(a9 + 40) = result;
  return result;
}

uint64_t sub_1AE53282C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X6>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t result;
  uint64_t *v14;
  uint64_t v15;

  v8 = *(_QWORD *)(a2 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v12(v9);
  if (!v4)
  {
    a4[3] = a2;
    a4[4] = a3;
    v14 = sub_1AE52F6A8(a4);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v8 + 32))(v14, v11, a2);
  }
  return result;
}

uint64_t sub_1AE5328C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t *v13;
  uint64_t v14;

  v8 = *(_QWORD *)(a2 - 8);
  v9 = (uint64_t (*)(void))MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v9();
  if (!v4)
  {
    a4[3] = a2;
    a4[4] = a3;
    v13 = sub_1AE52F6A8(a4);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v8 + 32))(v13, v11, a2);
  }
  return result;
}

_BYTE *AssetRegistry.CreateBackend.init(remoteBackendType:createRemoteBackend:remoteWritableBackendType:createRemoteWritableBackend:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7;

  v7 = *a4;
  *(_BYTE *)a7 = *result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_BYTE *)(a7 + 24) = v7;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  return result;
}

uint64_t sub_1AE532978()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AE53299C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1AE53282C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1AE5329BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_1AE5328C4(v1[6], v1[3], v1[5], a1);
}

uint64_t _s20_CreateCreateBackendCMa()
{
  return objc_opt_self();
}

uint64_t _s13CreateBackendVwxx()
{
  swift_release();
  return swift_release();
}

uint64_t _s13CreateBackendVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s13CreateBackendVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 _s13CreateBackendVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s13CreateBackendVwta(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t _s13CreateBackendVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13CreateBackendVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistry.CreateBackend()
{
  return &type metadata for AssetRegistry.CreateBackend;
}

void sub_1AE532BE4()
{
  uint64_t v0;

  type metadata accessor for TrialAssetManager();
  v0 = 0;
  TrialAssetManager.__allocating_init(refreshPolicy:)(&v0);
}

uint64_t AssetRegistry.TrialAssetManagerPolicy.PersistentInfo.refreshPolicy.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

_QWORD *sub_1AE532C30(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[2] = *a1;
  v3[3] = a2;
  v3[4] = a3;
  v3[5] = 0;
  return v3;
}

uint64_t sub_1AE532C44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  if (v0[5])
  {
    v1 = v0[5];
  }
  else
  {
    v2 = (uint64_t (*)(uint64_t *))v0[3];
    v4 = v0[2];
    swift_retain();
    v1 = v2(&v4);
    swift_release();
    v0[5] = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1AE532CCC()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1AE532CF8()
{
  sub_1AE532CCC();
  return swift_deallocClassInstance();
}

void sub_1AE532D14(uint64_t *a1)
{
  uint64_t v2;

  type metadata accessor for TrialAssetManager();
  v2 = *a1;
  swift_retain();
  TrialAssetManager.__allocating_init(refreshPolicy:)(&v2);
}

void AssetRegistry.TrialAssetManagerPolicy.PersistentInfo.init(refreshPolicy:createTrialAssetManager:)(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v7 = *a1;
  type metadata accessor for AssetRegistry.TrialAssetManagerPolicy.PersistentInfo.PersistentContent();
  v8 = (_QWORD *)sub_1AE4F66BC();
  v8[2] = v7;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = 0;
  sub_1AE501548((uint64_t *)&unk_1ED319F08);
  sub_1AE4F66BC();
  swift_retain();
  sub_1AE4F5B4C((uint64_t)v8);
  *a4 = v7;
  a4[1] = v9;
}

uint64_t type metadata accessor for AssetRegistry.TrialAssetManagerPolicy.PersistentInfo.PersistentContent()
{
  return objc_opt_self();
}

uint64_t AssetRegistry.TrialAssetManagerPolicy.PersistentInfo.trialAssetManager.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 8) + 24);
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  v2 = sub_1AE532C44();
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t AssetRegistry.trialAssetManagerPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 72);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1AE536A94(v2, v3, v4);
}

uint64_t (*sub_1AE532E68())(uint64_t)
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  if (*(_BYTE *)(v0 + 72))
  {
    if (*(_BYTE *)(v0 + 72) != 1)
    {
      swift_retain();
      return v1;
    }
    v3 = *(os_unfair_lock_s **)(v2 + 24);
    sub_1AE536A94(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), 1);
    os_unfair_lock_lock(v3);
    swift_beginAccess();
    v4 = sub_1AE532C44();
    os_unfair_lock_unlock(v3);
    v5 = (uint64_t)v1;
    v6 = v2;
    v7 = 1;
  }
  else
  {
    v8 = swift_retain();
    v4 = v1(v8);
    v5 = (uint64_t)v1;
    v6 = v2;
    v7 = 0;
  }
  sub_1AE53C698(v5, v6, v7);
  return (uint64_t (*)(uint64_t))v4;
}

uint64_t AssetRegistry.__allocating_init(parameters:trialAssetManagerPolicy:)(__int16 *a1, __int128 *a2)
{
  uint64_t v2;
  __int128 v3;
  char v4;
  __int128 v6;
  __int128 v7;
  char v8;
  __int16 v9;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 16);
  v9 = *a1;
  if (qword_1ED319ED0 != -1)
  {
    v6 = v3;
    swift_once();
    v3 = v6;
  }
  v7 = v3;
  v8 = v4;
  return sub_1AE532FD4(&v9, (void (*)(__int128 *__return_ptr, uint64_t *, uint64_t *))qword_1ED31B3F0, unk_1ED31B3F8, (uint64_t)&v7, v2);
}

uint64_t sub_1AE532FD4(__int16 *a1, void (*a2)(__int128 *__return_ptr, uint64_t *, uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t *v18;
  uint64_t (*v19)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24[2];
  char v25;
  uint64_t v26[5];
  __int128 v27;
  uint64_t v28;
  _UNKNOWN **v29;
  void *v30;

  v7 = *a1;
  v9 = *(_QWORD *)a4;
  v8 = *(_QWORD *)(a4 + 8);
  v10 = *(_BYTE *)(a4 + 16);
  if (v7 < 0)
  {
    LOBYTE(v26[0]) = v7 & 1;
    LOBYTE(v24[0]) = BYTE1(v7) & 1;
    v13 = a3;
    a2(&v27, v26, v24);
    if (!v5)
    {
      v16 = v28;
      v17 = v29;
      v23 = sub_1AE4F9858(&v27, v28);
      v26[3] = v16;
      v30 = v17[1];
      v26[4] = (uint64_t)v30;
      v18 = sub_1AE52F6A8(v26);
      v19 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v20 = v19(v18, v23, v16);
      v23 = (uint64_t *)&v23;
      v24[0] = v9;
      v24[1] = v8;
      v25 = v10;
      MEMORY[0x1E0C80A78](v20);
      v22 = (char *)&v24[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      v19((uint64_t *)v22, v18, v16);
      v13 = sub_1AE53F3A8((uint64_t)v22, v24, a5, v16, (uint64_t)v30);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v26);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v27);
      return v13;
    }
    goto LABEL_5;
  }
  v11 = type metadata accessor for AssetRegistryLocalBackendBasic();
  sub_1AE9243C0();
  swift_allocObject();
  v12 = sub_1AE9243B4();
  v13 = v11;
  v14 = sub_1AE54A974(v12, v12);
  if (v5)
  {
LABEL_5:
    sub_1AE53C698(v9, v8, v10);
    return v13;
  }
  v28 = v11;
  v29 = &off_1E5DC1E90;
  *(_QWORD *)&v27 = v14;
  v13 = swift_allocObject();
  sub_1AE50AF58(&v27, v13 + 16);
  *(_QWORD *)(v13 + 56) = v9;
  *(_QWORD *)(v13 + 64) = v8;
  *(_BYTE *)(v13 + 72) = v10;
  return v13;
}

void AssetRegistry.assetEntry(for:in:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = v0[5];
  v10 = v0[6];
  sub_1AE4F9858(v0 + 2, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v8, v6, v4, v2, v9, v10);
  sub_1AE4F667C();
}

uint64_t AssetRegistry.asset(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[10] = a5;
  v6[11] = v5;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v6[12] = type metadata accessor for TrialAssetManager.Asset(0);
  v6[13] = sub_1AE4F67C0();
  v6[14] = sub_1AE4F7738();
  v7 = sub_1AE9246E4();
  v6[15] = v7;
  v6[16] = *(_QWORD *)(v7 - 8);
  v6[17] = sub_1AE4FC554();
  sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  v6[18] = sub_1AE4FC554();
  v8 = sub_1AE4FD9B0();
  v6[19] = v8;
  v6[20] = *(_QWORD *)(v8 - 8);
  v6[21] = sub_1AE4FC554();
  v6[22] = sub_1AE53F798();
  v6[23] = sub_1AE4FC554();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

uint64_t sub_1AE5332DC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  _QWORD *v15;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int16 v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;

  sub_1AE4F9858((_QWORD *)(*(_QWORD *)(v0 + 88) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 88) + 40));
  v1 = sub_1AE509808();
  v2(v1);
  *(_QWORD *)(v0 + 192) = v18;
  *(_QWORD *)(v0 + 200) = v19;
  v3 = v21 | (v22 << 16);
  *(_BYTE *)(v0 + 258) = v22;
  *(_WORD *)(v0 + 256) = v21;
  v4 = v23;
  *(_QWORD *)(v0 + 208) = v20;
  *(_QWORD *)(v0 + 216) = v23;
  *(_QWORD *)(v0 + 224) = v24;
  if ((v21 & 0x80) != 0)
  {
    sub_1AE4FB75C();
    *(_QWORD *)(v0 + 232) = sub_1AE532E68();
    *(_BYTE *)(v0 + 262) = v18;
    *(_BYTE *)(v0 + 263) = v21 & 1;
    *(_WORD *)(v0 + 260) = v3 >> 8;
    sub_1AE4FB75C();
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v15;
    *v15 = v0;
    v15[1] = sub_1AE533624;
    return TrialAssetManager.asset(for:in:assetType:downloadOptions:)(*(_QWORD *)(v0 + 112), v19, v20, (_BYTE *)(v0 + 262), (_BYTE *)(v0 + 263), (_WORD *)(v0 + 260));
  }
  if ((v21 & 1) != 0)
  {
    sub_1AE53F7B4();
    sub_1AE4F6804();
    AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.localURL.getter();
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v18;
    *(_QWORD *)(v0 + 24) = v19;
    *(_QWORD *)(v0 + 32) = 47;
    *(_QWORD *)(v0 + 40) = 0xE100000000000000;
    sub_1AE53F7B4();
    sub_1AE536B60();
    sub_1AE536B9C();
    sub_1AE4F6804();
    if ((sub_1AE925DB8() & 1) == 0)
    {
      sub_1AE536BD8();
      sub_1AE4F6778();
      *v17 = 0;
      swift_willThrow();
      sub_1AE508A44();
      sub_1AE508A44();
      swift_task_dealloc();
      sub_1AE4F90C0();
      sub_1AE4F90A0();
      sub_1AE4F67E4();
      sub_1AE4F67DC();
      sub_1AE4FCE7C();
      v14 = *(uint64_t (**)(void))(v0 + 8);
      return v14();
    }
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(_QWORD *)(v0 + 136);
    v9 = *(_QWORD *)(v0 + 120);
    sub_1AE508140(*(_QWORD *)(v0 + 144), v5, v6, *(_QWORD *)(v0 + 152));
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v8, *MEMORY[0x1E0CAFD78], v9);
    sub_1AE4F6708();
    sub_1AE924768();
    v4 = v23;
  }
  v11 = *(_QWORD *)(v0 + 176);
  v10 = *(_QWORD *)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 32))(v10, *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
  v13 = v10 + *(int *)(v11 + 20);
  *(_QWORD *)v13 = v18;
  *(_QWORD *)(v13 + 8) = v19;
  *(_QWORD *)(v13 + 16) = v20;
  *(_BYTE *)(v13 + 26) = BYTE2(v3);
  *(_WORD *)(v13 + 24) = v21;
  *(_QWORD *)(v13 + 32) = v4;
  *(_QWORD *)(v13 + 40) = v24;
  sub_1AE53F988((_OWORD *)(v10 + *(int *)(v11 + 24)));
  sub_1AE536B40(v10, v12, type metadata accessor for AssetRegistryAsset);
  sub_1AE508A44();
  sub_1AE53F6AC();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1AE533624()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1AE536AF8(*(_QWORD *)(v2 + 192), *(_QWORD *)(v2 + 200), *(_QWORD *)(v2 + 208), *(_WORD *)(v2 + 256));
  }
  else
  {
    sub_1AE53F810();
    sub_1AE53F810();
  }
  sub_1AE4F9070();
  return swift_task_switch();
}

uint64_t sub_1AE5336C0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;

  v15 = *(_QWORD *)(v0 + 224);
  v14 = *(_WORD *)(v0 + 256);
  v1 = *(_BYTE *)(v0 + 258);
  v2 = *(_QWORD *)(v0 + 208);
  v13 = *(_QWORD *)(v0 + 216);
  v12 = *(_OWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 96);
  v9 = *(_QWORD *)(v0 + 48);
  swift_release();
  sub_1AE536B40(v6, v7, type metadata accessor for TrialAssetManager.Asset);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v9, v7, v4);
  v10 = v9 + *(int *)(v3 + 20);
  *(_OWORD *)v10 = v12;
  *(_QWORD *)(v10 + 16) = v2;
  *(_BYTE *)(v10 + 26) = v1;
  *(_WORD *)(v10 + 24) = v14;
  *(_QWORD *)(v10 + 32) = v13;
  *(_QWORD *)(v10 + 40) = v15;
  sub_1AE53F8A8(*(_QWORD *)(v7 + *(int *)(v8 + 20)));
  sub_1AE53F6AC();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AE5337D0()
{
  uint64_t v0;

  swift_release();
  sub_1AE53F7A0();
  sub_1AE53F7A0();
  sub_1AE4F9038();
  swift_task_dealloc();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void AssetRegistry.locallyAvailableAsset(for:in:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[2];
  _QWORD v87[3];
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  sub_1AE4F67EC();
  v84 = v3;
  v85 = v4;
  v82 = v5;
  v83 = v6;
  v78 = v7;
  v75 = type metadata accessor for TrialAssetManager.Asset(0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F9024();
  v73 = v9;
  type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo(0);
  sub_1AE4F66F0();
  v11 = MEMORY[0x1E0C80A78](v10);
  v74 = (uint64_t)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v80 = (uint64_t)&v69 - v13;
  v14 = sub_1AE9246E4();
  v76 = *(_QWORD *)(v14 - 8);
  v77 = v14;
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F9024();
  v79 = v15;
  sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1AE924780();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  sub_1AE4F90C8();
  v21 = type metadata accessor for AssetRegistryAsset(0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v0[5];
  v26 = v0[6];
  v81 = v0;
  sub_1AE4F9858(v0 + 2, v25);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8))(v87, v82, v83, v84, v85, v25, v26);
  if (!v1)
  {
    v70 = v18;
    v27 = v80;
    v28 = v79;
    v85 = v2;
    v71 = v24;
    v82 = v20;
    v83 = v19;
    v84 = v21;
    v30 = v87[0];
    v29 = v87[1];
    v31 = v87[2];
    v32 = v88;
    v33 = v90;
    v72 = v89;
    if (v88 < 0)
    {
      v92 = v90;
      sub_1AE4FB75C();
      sub_1AE532E68();
      LOBYTE(v87[0]) = v30;
      LOBYTE(v86[0]) = v32 & 1;
      sub_1AE4FB75C();
      TrialAssetManager.locallyAvailableAsset(for:in:assetType:)(v29, v31, (uint64_t)v87, (uint64_t)v86, v36, v37, v38, v39, v69, (int)v70, SWORD2(v70), SBYTE6(v70), HIBYTE(v70), (uint64_t)v71, v72, v73, v74, v75, v76,
        v77,
        v78,
        v79,
        v80);
      swift_release();
      sub_1AE536AF8(v30, v29, v31, v32);
      sub_1AE53F600();
      v53 = v74;
      sub_1AE536B40(v27, v74, type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
      v54 = v75;
      v55 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v53, 1, v75);
      v56 = v31;
      v50 = v78;
      v45 = v84;
      if (v55 == 1)
      {
        v57 = sub_1AE5061E4();
        sub_1AE536AF8(v57, v58, v59, v32);
        swift_bridgeObjectRelease();
        v51 = 1;
      }
      else
      {
        v81 = (_QWORD *)v56;
        v60 = v73;
        sub_1AE536B40(v53, v73, type metadata accessor for TrialAssetManager.Asset);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 32))(v50, v60, v83);
        v61 = (uint64_t *)(v50 + *(int *)(v45 + 20));
        *v61 = v30;
        v61[1] = v29;
        v61[2] = (uint64_t)v81;
        sub_1AE53FAAC((uint64_t)v61);
        *(_QWORD *)(v63 + 32) = *(_QWORD *)(v62 - 256);
        *(_QWORD *)(v63 + 40) = v92;
        v64 = *(int *)(v54 + 20);
        v65 = v60 + *(int *)(v54 + 24);
        v66 = v50 + *(int *)(v45 + 24);
        v67 = *(_OWORD *)(v65 + 16);
        *(_OWORD *)(v66 + 8) = *(_OWORD *)v65;
        v68 = *(_QWORD *)(v65 + 32);
        *(_QWORD *)v66 = *(_QWORD *)(v60 + v64);
        *(_OWORD *)(v66 + 24) = v67;
        *(_QWORD *)(v66 + 40) = v68;
      }
      goto LABEL_10;
    }
    if ((v88 & 1) != 0)
    {
      LOBYTE(v87[0]) &= 1u;
      sub_1AE4F81C0();
      sub_1AE4F6730();
      v40 = v85;
      AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.localURL.getter();
      v91 = v33;
      v34 = v83;
      v35 = v40;
      goto LABEL_9;
    }
    v86[0] = 47;
    v86[1] = 0xE100000000000000;
    sub_1AE4F81C0();
    sub_1AE536B60();
    v81 = (_QWORD *)v31;
    sub_1AE536B9C();
    sub_1AE4F6730();
    if ((sub_1AE925DB8() & 1) != 0)
    {
      v91 = v33;
      v34 = v83;
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v70, 1, 1, v83);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v76 + 104))(v28, *MEMORY[0x1E0CAFD78], v77);
      sub_1AE4F6708();
      v35 = v85;
      sub_1AE5061E4();
      sub_1AE924768();
      v31 = (uint64_t)v81;
LABEL_9:
      v44 = (uint64_t)v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v82 + 32))(v71, v35, v34);
      v45 = v84;
      v46 = (uint64_t *)(v44 + *(int *)(v84 + 20));
      *v46 = v30;
      v46[1] = v29;
      v46[2] = v31;
      sub_1AE53FAAC((uint64_t)v46);
      *(_QWORD *)(v48 + 32) = *(_QWORD *)(v47 - 256);
      *(_QWORD *)(v48 + 40) = v91;
      sub_1AE53F988((_OWORD *)(v44 + *(int *)(v45 + 24)));
      v49 = v31;
      v50 = v78;
      sub_1AE536B40(v44, v78, type metadata accessor for AssetRegistryAsset);
      sub_1AE536AF8(v30, v29, v49, v32);
      swift_bridgeObjectRelease();
      v51 = 0;
LABEL_10:
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v50, v51, 1, v45);
      v52 = type metadata accessor for AssetRegistryAssetLocalAvailabilityInfo(0);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v50, 0, 1, v52);
      goto LABEL_11;
    }
    sub_1AE536BD8();
    swift_allocError();
    *v41 = 0;
    swift_willThrow();
    v42 = sub_1AE5061E4();
    sub_1AE536AF8(v42, v43, (uint64_t)v81, v32);
    swift_bridgeObjectRelease();
    sub_1AE53F600();
    swift_bridgeObjectRelease();
  }
LABEL_11:
  sub_1AE4F667C();
}

uint64_t AssetRegistry.assets(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2[29] = a1;
  v2[30] = v1;
  v2[31] = type metadata accessor for TrialAssetManager.Asset(0);
  v2[32] = sub_1AE4F67C0();
  v2[33] = sub_1AE4F7738();
  v3 = sub_1AE501548(&qword_1EED9B0C0);
  v2[34] = v3;
  v2[35] = *(_QWORD *)(v3 - 8);
  v2[36] = sub_1AE4F67C0();
  v2[37] = sub_1AE4F7738();
  sub_1AE501548(&qword_1EED9B0C8);
  v2[38] = sub_1AE4F67C0();
  v2[39] = sub_1AE4F7738();
  v4 = sub_1AE9246E4();
  v2[40] = v4;
  v2[41] = *(_QWORD *)(v4 - 8);
  v2[42] = sub_1AE4FC554();
  sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  v2[43] = sub_1AE4FC554();
  v5 = sub_1AE4FD9B0();
  v2[44] = v5;
  v2[45] = *(_QWORD *)(v5 - 8);
  v2[46] = sub_1AE4FC554();
  v2[47] = sub_1AE53F798();
  v2[48] = sub_1AE4FC554();
  v6 = sub_1AE501548(&qword_1EED9B0D0);
  v2[49] = v6;
  v2[50] = *(_QWORD *)(v6 - 8);
  v2[51] = sub_1AE4F67C0();
  v2[52] = sub_1AE4F7738();
  v2[53] = sub_1AE4F7738();
  v2[54] = sub_1AE4F7738();
  sub_1AE4F9070();
  return sub_1AE4F90B4();
}

_QWORD *sub_1AE533F08()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *result;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)();
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  char v64;
  char v65;
  _QWORD *v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  char v73;
  char v74;
  void (*v75)(uint64_t *);
  uint64_t *v76;
  void (*v77)(uint64_t *);
  uint64_t *v78;
  char v79;
  unint64_t v80;
  char v81;
  char v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  char v95;
  uint64_t v96;
  _QWORD *v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t *);
  void (*v108)(uint64_t *);
  _QWORD *v109;
  void (*v110)(uint64_t *);
  uint64_t *v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  char v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __int16 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  int64_t v133;
  _BYTE *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  int64_t v150;
  unint64_t v151;
  _QWORD *v152;
  int64_t v153;
  uint64_t v154;
  int64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  char v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  _BYTE *v170;
  _WORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  int64_t v175;
  uint64_t v176;
  uint64_t v177;
  unsigned int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t (*v183)();
  void (*v184)(uint64_t *);
  uint64_t v185;
  int64_t v186;
  _QWORD *v187;
  _QWORD *v188;
  _QWORD *v189;
  uint64_t v190;
  _QWORD *v191;
  void (*v192)(uint64_t *);
  void (*v193)(uint64_t *);
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unsigned __int16 v212;
  unsigned __int8 v213;
  uint64_t v214;
  uint64_t v215;

  v1 = v0;
  v181 = v0[47];
  v180 = v0[45];
  v179 = v0[41];
  v2 = v0[30];
  v3 = v1[29];
  sub_1AE501548(&qword_1EED9B0D8);
  v1[26] = sub_1AE925C98();
  LOWORD(v4) = sub_1AE501548(&qword_1EED9B0E0);
  sub_1AE501548(&qword_1EED9B0E8);
  sub_1AE536C58();
  v1[27] = sub_1AE925C98();
  v5 = (unint64_t)(v1 + 2);
  v188 = v1 + 10;
  v6 = v1 + 14;
  v182 = v1 + 18;
  v201 = v1 + 27;
  v174 = v3 + 64;
  sub_1AE53F728();
  v9 = v8 & v7;
  v189 = (_QWORD *)(v2 + 16);
  v190 = v2;
  v175 = (unint64_t)(63 - v10) >> 6;
  v178 = *MEMORY[0x1E0CAFD78];
  v176 = v3;
  result = (_QWORD *)sub_1AE4FB75C();
  v13 = 0;
  v187 = v1;
  v196 = v1 + 14;
  v194 = (uint64_t)(v1 + 2);
  if (!v9)
    goto LABEL_3;
  do
  {
    v172 = (v9 - 1) & v9;
    v173 = v13;
    v14 = __clz(__rbit64(v9)) | (v13 << 6);
LABEL_13:
    v21 = (uint64_t *)(*(_QWORD *)(v176 + 48) + 16 * v14);
    v4 = *v21;
    v22 = v21[1];
    v23 = *(_QWORD *)(*(_QWORD *)(v176 + 56) + 8 * v14);
    swift_bridgeObjectRetain_n();
    sub_1AE4FB75C();
    v24 = sub_1AE925C98();
    v25 = v1[26];
    swift_isUniquelyReferenced_nonNull_native();
    v209 = v25;
    v199 = v4;
    sub_1AE53A0D4(v24, v4, v22);
    v1[26] = v209;
    swift_bridgeObjectRelease();
    sub_1AE4F665C();
    v26 = 0;
    v185 = v23 + 56;
    v195 = v23;
    sub_1AE53F728();
    v29 = v28 & v27;
    v186 = (unint64_t)(63 - v30) >> 6;
    v198 = v22;
    if ((v28 & v27) != 0)
    {
LABEL_14:
      v202 = (v29 - 1) & v29;
      v203 = v26;
      v31 = __clz(__rbit64(v29)) | (v26 << 6);
      goto LABEL_28;
    }
    while (1)
    {
      v32 = v26 + 1;
      if (__OFADD__(v26, 1))
      {
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        v142 = 0;
        v163 = __clz(__rbit64(v5));
        v164 = (v5 - 1) & v5;
LABEL_156:
        v1[60] = v142;
        v1[61] = v164;
        v166 = *(_BYTE *)(result[6] + v163);
        v167 = *(_QWORD *)(result[7] + 8 * v163);
        v1[62] = v167;
        v1[63] = sub_1AE53C430(v167);
        *((_BYTE *)v1 + 540) = v166;
        *((_WORD *)v1 + 268) = v4;
        sub_1AE4F6730();
        v168 = (_QWORD *)swift_task_alloc();
        v1[64] = v168;
        *v168 = v1;
        v168[1] = sub_1AE53520C;
        sub_1AE53F6DC();
        return (_QWORD *)TrialAssetManager.assets(for:in:downloadOptions:)(v169, v170, v171);
      }
      if (v32 >= v186)
        break;
      if (*(_QWORD *)(v185 + 8 * v32))
        goto LABEL_27;
      if (v26 + 2 >= v186)
        break;
      if (*(_QWORD *)(v185 + 8 * (v26 + 2)))
        goto LABEL_27;
      if (v26 + 3 >= v186)
        break;
      if (*(_QWORD *)(v185 + 8 * (v26 + 3)))
        goto LABEL_27;
      v33 = v26 + 4;
      if (v26 + 4 >= v186)
        break;
      if (!*(_QWORD *)(v185 + 8 * v33))
      {
        while (1)
        {
          v34 = v33 + 1;
          if (__OFADD__(v33, 1))
            break;
          if (v34 >= v186)
            goto LABEL_91;
          ++v33;
          if (*(_QWORD *)(v185 + 8 * v34))
            goto LABEL_27;
        }
LABEL_146:
        __break(1u);
LABEL_149:
        swift_release();
        sub_1AE4FC564();
LABEL_150:
        swift_bridgeObjectRelease();
        sub_1AE4F90A0();
        sub_1AE4F67E4();
        sub_1AE4F67DC();
        sub_1AE4FCE7C();
        sub_1AE4FD9A8();
        sub_1AE53F870();
        sub_1AE53F9C0();
        sub_1AE53F998();
        sub_1AE4F90C0();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        sub_1AE53F6DC();
        __asm { BR              X1 }
      }
LABEL_27:
      sub_1AE53F9D8();
      v202 = v35;
      v203 = v36;
      v31 = v37 + (v36 << 6);
LABEL_28:
      v38 = (uint64_t *)(*(_QWORD *)(v195 + 48) + 16 * v31);
      v39 = *v38;
      v40 = v38[1];
      v42 = *(_QWORD *)(v190 + 40);
      v41 = *(_QWORD *)(v190 + 48);
      sub_1AE4F9858(v189, v42);
      v43 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8);
      sub_1AE4FB764();
      v200 = v39;
      v204 = v40;
      v43(&v209, v39, v40, v199, v22, v42, v41);
      v45 = v209;
      v44 = v210;
      v46 = v211;
      v4 = v212 | (v213 << 16);
      v197 = v214;
      v207 = v215;
      v208 = v211;
      v205 = v209;
      v206 = v210;
      if ((v212 & 0x80) == 0)
      {
        v22 = v198;
        sub_1AE4F66C4();
        sub_1AE53F7C8(v45, v44);
        v47 = sub_1AE535FE8(v6, v199, v198);
        v191 = v48;
        if (*v48)
        {
          v183 = v47;
          if ((v4 & 1) != 0)
          {
            v49 = v1;
            LOBYTE(v209) = v45 & 1;
            v210 = v206;
            v211 = v208;
            sub_1AE53F85C();
            sub_1AE53F85C();
            swift_bridgeObjectRetain();
            v56 = v208;
            AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.localURL.getter();
            sub_1AE536AF8(v45, v206, v208, v4);
            sub_1AE53F6A4(v45, v206, v208);
            v45 = v205;
            v50 = v206;
          }
          else
          {
            v1[22] = v45;
            v49 = v1;
            v50 = v206;
            v49[23] = v206;
            v49[24] = 47;
            v49[25] = 0xE100000000000000;
            sub_1AE536B1C(v45, v206, v46, v4);
            sub_1AE53F7C8(v45, v206);
            sub_1AE536B60();
            sub_1AE536B9C();
            swift_bridgeObjectRetain();
            if ((sub_1AE925DB8() & 1) == 0)
            {
              sub_1AE536BD8();
              sub_1AE4F6778();
              *v134 = 0;
              swift_willThrow();
              sub_1AE536AF8(v45, v206, v46, v4);
              sub_1AE536AF8(v45, v206, v46, v4);
              v135 = sub_1AE53FB14();
              sub_1AE53FA98(v135, v136, v46);
              sub_1AE4F6648();
              sub_1AE4F81B8();
              sub_1AE4F7774();
              ((void (*)(_QWORD *, uint64_t))v183)(v196, 1);
              v137 = sub_1AE53FB14();
              sub_1AE53F6A4(v137, v138, v46);
              sub_1AE4F6648();
              sub_1AE4F81B8();
              sub_1AE53FAE0();
              sub_1AE4FC564();
              swift_bridgeObjectRelease();
              sub_1AE4F9038();
              sub_1AE53F9C0();
              sub_1AE4F90A0();
              sub_1AE4F67E4();
              sub_1AE4F67DC();
              sub_1AE4FCE7C();
              sub_1AE4FD9A8();
              sub_1AE53F870();
              swift_task_dealloc();
              sub_1AE53F998();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              swift_task_dealloc();
              sub_1AE53F6DC();
              __asm { BR              X0 }
            }
            v53 = v49[42];
            v54 = v49[40];
            sub_1AE508140(v49[43], v51, v52, v49[44]);
            (*(void (**)(uint64_t, _QWORD, uint64_t))(v179 + 104))(v53, v178, v54);
            sub_1AE53FB14();
            sub_1AE924768();
            v55 = sub_1AE53FB14();
            v56 = v46;
            sub_1AE53FA98(v55, v57, v46);
          }
          v85 = v49[53];
          v86 = v49[54];
          v87 = v49[48];
          v88 = v49[47];
          (*(void (**)(uint64_t, _QWORD, _QWORD))(v180 + 32))(v87, v49[46], v49[44]);
          v89 = v87 + *(int *)(v181 + 20);
          *(_QWORD *)v89 = v45;
          *(_QWORD *)(v89 + 8) = v50;
          *(_QWORD *)(v89 + 16) = v56;
          *(_BYTE *)(v89 + 26) = BYTE2(v4);
          v1 = (_QWORD *)v4;
          *(_WORD *)(v89 + 24) = v4;
          *(_QWORD *)(v89 + 32) = v197;
          *(_QWORD *)(v89 + 40) = v207;
          sub_1AE53F988((_OWORD *)(v87 + *(int *)(v181 + 24)));
          sub_1AE536B40(v87, v86, type metadata accessor for AssetRegistryAsset);
          v90 = sub_1AE53F9B0();
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v90, v91, v92, v88);
          swift_storeEnumTagMultiPayload();
          sub_1AE53C62C(v86, v85, &qword_1EED9B0D0);
          v5 = sub_1AE508E78();
          sub_1AE53FA14();
          sub_1AE537038(v200, v204, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
          sub_1AE53FA84();
          if (v15)
            goto LABEL_139;
          v94 = v93;
          sub_1AE501548(&qword_1EED9B128);
          v95 = sub_1AE926A54();
          v96 = v209;
          v5 = v194;
          v6 = v196;
          v97 = v187;
          if ((v95 & 1) != 0)
          {
            sub_1AE537038(v200, v204, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
            if ((v94 & 1) != (v98 & 1))
              goto LABEL_99;
            v97 = v187;
          }
          v1 = v97;
          if ((v94 & 1) != 0)
          {
            sub_1AE53FA34();
            sub_1AE53B340(v99, v100);
          }
          else
          {
            sub_1AE53F664();
            *v101 = v200;
            v101[1] = v204;
            sub_1AE53FA34();
            sub_1AE53C62C(v102, v103, &qword_1EED9B0D0);
            sub_1AE53F908();
            if (v15)
              goto LABEL_144;
            *(_QWORD *)(v96 + 16) = v104;
            sub_1AE4F6730();
          }
          sub_1AE53F9F4(v191);
          sub_1AE4F81B8();
          sub_1AE53FB08();
          sub_1AE536AF8(v205, v206, v208, v4);
          v22 = v198;
        }
        else
        {
          sub_1AE4F7774();
          sub_1AE53F614(v45, v44);
          sub_1AE53FB08();
          sub_1AE53F614(v45, v44);
        }
        sub_1AE4F665C();
        goto LABEL_83;
      }
      v58 = *v201;
      v59 = *(_QWORD *)(*v201 + 16);
      sub_1AE4FB75C();
      if (!v59 || (sub_1AE53F91C(), (v60 & 1) == 0))
      {
        sub_1AE501548(&qword_1EED9B100);
        sub_1AE53A208();
        v61 = sub_1AE925C98();
        swift_isUniquelyReferenced_nonNull_native();
        v209 = v58;
        result = (_QWORD *)sub_1AE53F91C();
        if (__OFADD__(*(_QWORD *)(v58 + 16), (v62 & 1) == 0))
          goto LABEL_138;
        v63 = (unint64_t)result;
        v64 = v62;
        sub_1AE501548(&qword_1EED9B108);
        v65 = sub_1AE926A54();
        v58 = v209;
        v6 = v196;
        v45 = v205;
        if ((v65 & 1) != 0)
        {
          sub_1AE53F91C();
          sub_1AE500924();
          if (!v67)
            goto LABEL_99;
          v63 = (unint64_t)v66;
        }
        if ((v64 & 1) != 0)
        {
          v68 = *(_QWORD *)(v58 + 56);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v68 + 8 * v63) = v61;
        }
        else
        {
          sub_1AE4FFC58(v58 + 8 * (v63 >> 6));
          *(_WORD *)(v69 + 2 * v63) = v4 >> 8;
          *(_QWORD *)(*(_QWORD *)(v58 + 56) + 8 * v63) = v61;
          sub_1AE53F908();
          if (v15)
            goto LABEL_143;
          *(_QWORD *)(v58 + 16) = v70;
        }
        *v201 = v58;
        swift_bridgeObjectRelease();
        v5 = v194;
        v46 = v208;
      }
      if (!*(_QWORD *)(v58 + 16)
        || (v71 = sub_1AE53F91C(), (v72 & 1) == 0)
        || (v58 = *(_QWORD *)(*(_QWORD *)(v58 + 56) + 8 * v71), !*(_QWORD *)(v58 + 16))
        || (sub_1AE4F66CC(),
            sub_1AE5370E0(v45, (void (*)(_BYTE *, uint64_t))sub_1AE5E90B4, sub_1AE538380),
            v74 = v73,
            sub_1AE4F9038(),
            (v74 & 1) == 0))
      {
        v75 = sub_1AE53FA28(v188);
        v77 = v75;
        if (*v76)
        {
          v78 = v76;
          v192 = v75;
          sub_1AE501548(&qword_1EED9B110);
          v5 = sub_1AE925C98();
          sub_1AE508E78();
          sub_1AE53FA14();
          result = (_QWORD *)sub_1AE5370E0(v45, (void (*)(_BYTE *, uint64_t))sub_1AE5E90B4, sub_1AE538380);
          if (__OFADD__(*(_QWORD *)(v58 + 16), (v79 & 1) == 0))
            goto LABEL_140;
          v80 = (unint64_t)result;
          v81 = v79;
          sub_1AE501548(&qword_1EED9B118);
          v82 = sub_1AE926A54();
          v58 = v209;
          if ((v82 & 1) != 0)
          {
            sub_1AE5370E0(v205, (void (*)(_BYTE *, uint64_t))sub_1AE5E90B4, sub_1AE538380);
            sub_1AE53F8F8();
            if (!v67)
              goto LABEL_99;
            v80 = (unint64_t)v83;
          }
          if ((v81 & 1) != 0)
          {
            v84 = *(_QWORD *)(v58 + 56);
            swift_bridgeObjectRelease();
            *(_QWORD *)(v84 + 8 * v80) = v5;
          }
          else
          {
            sub_1AE4FFC58(v58 + 8 * (v80 >> 6));
            *(_BYTE *)(v105 + v80) = v205;
            *(_QWORD *)(*(_QWORD *)(v58 + 56) + 8 * v80) = v5;
            sub_1AE53F908();
            if (v15)
              goto LABEL_145;
            *(_QWORD *)(v58 + 16) = v106;
          }
          *v78 = v58;
          swift_bridgeObjectRelease();
          v6 = v196;
          v77 = v192;
          v5 = v194;
          v45 = v205;
          v1 = v187;
        }
        ((void (*)(_QWORD *, _QWORD))v77)(v188, 0);
        v46 = v208;
      }
      v107 = sub_1AE53FA28((_QWORD *)v5);
      v108 = v107;
      if (!*v109)
      {
        sub_1AE4F7774();
        v128 = sub_1AE53F830();
        v108((uint64_t *)v128);
        sub_1AE53F614(v45, v58);
        v22 = v198;
LABEL_83:
        v26 = v203;
        goto LABEL_89;
      }
      v193 = v107;
      v110 = sub_1AE5360D0(v182, v45);
      v112 = (uint64_t)v110;
      if (*v111)
      {
        v113 = v111;
        v184 = v110;
        swift_bridgeObjectRetain();
        sub_1AE536B1C(v45, v206, v46, v4);
        sub_1AE53F7C8(v45, v206);
        sub_1AE4F6730();
        swift_isUniquelyReferenced_nonNull_native();
        v209 = *v113;
        *v113 = 0x8000000000000000;
        sub_1AE537038(v206, v46, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
        sub_1AE53FA84();
        if (v15)
        {
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
          goto LABEL_146;
        }
        v116 = v114;
        v117 = v115;
        sub_1AE501548(&qword_1EED9B120);
        v118 = sub_1AE926A54();
        v119 = v209;
        if ((v118 & 1) != 0)
        {
          sub_1AE537038(v206, v208, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
          sub_1AE500924();
          if (!v67)
          {
LABEL_99:
            sub_1AE53F6DC();
            return (_QWORD *)sub_1AE926DE4();
          }
          v116 = v120;
        }
        v121 = v4 & 1;
        if ((v117 & 1) != 0)
        {
          v122 = *(_QWORD *)(v119 + 56) + 88 * v116;
          v123 = *(_QWORD *)(v122 + 48);
          v124 = *(_QWORD *)(v122 + 56);
          v125 = *(_WORD *)(v122 + 64);
          v177 = *(_QWORD *)(v122 + 40);
          swift_bridgeObjectRelease();
          sub_1AE4F6648();
          sub_1AE536AF8(v177, v123, v124, v125);
          swift_bridgeObjectRelease();
          *(_QWORD *)v122 = v199;
          *(_QWORD *)(v122 + 8) = v198;
          v126 = v205;
          *(_QWORD *)(v122 + 16) = v200;
          *(_QWORD *)(v122 + 24) = v204;
          *(_BYTE *)(v122 + 32) = v121;
          v127 = v206;
          *(_QWORD *)(v122 + 40) = v205;
          *(_QWORD *)(v122 + 48) = v206;
          *(_QWORD *)(v122 + 56) = v208;
          *(_BYTE *)(v122 + 66) = BYTE2(v4);
          *(_WORD *)(v122 + 64) = v4;
          *(_QWORD *)(v122 + 72) = v197;
          *(_QWORD *)(v122 + 80) = v207;
        }
        else
        {
          sub_1AE53F664();
          v126 = v205;
          *v130 = v206;
          v130[1] = v208;
          v131 = *(_QWORD *)(v119 + 56) + 88 * v116;
          *(_QWORD *)v131 = v199;
          *(_QWORD *)(v131 + 8) = v198;
          *(_QWORD *)(v131 + 16) = v39;
          *(_QWORD *)(v131 + 24) = v204;
          *(_BYTE *)(v131 + 32) = v121;
          *(_QWORD *)(v131 + 40) = v205;
          *(_QWORD *)(v131 + 48) = v206;
          *(_QWORD *)(v131 + 56) = v208;
          *(_BYTE *)(v131 + 66) = BYTE2(v4);
          *(_WORD *)(v131 + 64) = v4;
          *(_QWORD *)(v131 + 72) = v197;
          *(_QWORD *)(v131 + 80) = v207;
          sub_1AE53F908();
          if (v15)
          {
            __break(1u);
            goto LABEL_149;
          }
          *(_QWORD *)(v119 + 16) = v132;
          swift_bridgeObjectRetain();
          v127 = v206;
        }
        *v113 = v119;
        swift_bridgeObjectRelease();
        sub_1AE53F614(v126, v127);
        ((void (*)(_QWORD *, _QWORD))v184)(v182, 0);
        v5 = v194;
        sub_1AE53F808(v194, (uint64_t (*)(uint64_t, _QWORD))v193);
        sub_1AE53F614(v126, v127);
        sub_1AE53F614(v126, v127);
        v1 = v187;
        v6 = v196;
      }
      else
      {
        sub_1AE4F7774();
        sub_1AE53FAF4((uint64_t)v182);
        v129 = sub_1AE53F830();
        v193((uint64_t *)v129);
        sub_1AE53F614(v45, v112);
      }
      v22 = v198;
      v26 = v203;
LABEL_89:
      v29 = v202;
      result = (_QWORD *)sub_1AE4F81B8();
      if (v202)
        goto LABEL_14;
    }
LABEL_91:
    sub_1AE53FAE0();
    result = (_QWORD *)sub_1AE4F665C();
    v9 = v172;
    v13 = v173;
  }
  while (v172);
LABEL_3:
  v15 = __OFADD__(v13, 1);
  v16 = v13 + 1;
  if (v15)
  {
    __break(1u);
LABEL_153:
    v142 = 3;
LABEL_155:
    v164 = (v12 - 1) & v12;
    v163 = __clz(__rbit64(v12)) + (v142 << 6);
    goto LABEL_156;
  }
  if (v16 >= v175)
    goto LABEL_100;
  if (*(_QWORD *)(v174 + 8 * v16))
  {
LABEL_12:
    sub_1AE53F9D8();
    v172 = v18;
    v173 = v19;
    v14 = v20 + (v19 << 6);
    goto LABEL_13;
  }
  if (v16 + 1 >= v175)
  {
LABEL_100:
    swift_release();
    v140 = v1[27];
    v1[55] = v140;
    if (!*(_QWORD *)(v140 + 16))
      goto LABEL_150;
    v1[56] = sub_1AE532E68();
    v141 = *(_BYTE *)(v140 + 32);
    *((_BYTE *)v1 + 541) = v141;
    v142 = 1;
    v143 = 1 << v141;
    if (v143 < 64)
      v144 = ~(-1 << v143);
    else
      v144 = -1;
    v145 = v144 & *(_QWORD *)(v140 + 64);
    result = (_QWORD *)sub_1AE4F6730();
    v146 = 0;
    if (!v145)
      goto LABEL_106;
LABEL_105:
    v147 = (v145 - 1) & v145;
    v148 = __clz(__rbit64(v145)) | (v146 << 6);
    v149 = v1[55];
    while (1)
    {
      v1[57] = v146;
      v1[58] = v147;
      LOWORD(v4) = *(_WORD *)(*(_QWORD *)(v149 + 48) + 2 * v148);
      *((_WORD *)v1 + 269) = v4;
      v156 = *(_QWORD *)(*(_QWORD *)(v149 + 56) + 8 * v148);
      v1[59] = v156;
      v157 = *(_BYTE *)(v156 + 32);
      *((_BYTE *)v1 + 542) = v157;
      v158 = -1 << v157;
      v159 = -(-1 << v157) < 64 ? ~(-1 << -(char)v158) : -1;
      v5 = v159 & *(_QWORD *)(v156 + 64);
      result = (_QWORD *)swift_bridgeObjectRetain();
      if (v5)
        goto LABEL_141;
      v160 = 63 - v158;
      if ((unint64_t)(63 - v158) > 0x7F)
      {
        v12 = result[9];
        if (v12)
          goto LABEL_155;
        if (v160 >= 0xC0)
        {
          v12 = result[10];
          if (v12)
          {
            v142 = 2;
            goto LABEL_155;
          }
          if (v160 >= 0x100)
          {
            v12 = result[11];
            if (v12)
              goto LABEL_153;
            if (v160 >= 0x140)
            {
              v12 = result[12];
              if (v12)
              {
                v142 = 4;
              }
              else
              {
                v161 = v160 >> 6;
                v162 = 13;
                do
                {
                  if (v162 - 8 >= v161)
                    goto LABEL_135;
                  v12 = result[v162++];
                }
                while (!v12);
                v142 = v162 - 9;
              }
              goto LABEL_155;
            }
          }
        }
      }
LABEL_135:
      result = (_QWORD *)swift_release();
      v146 = v1[57];
      v145 = v1[58];
      if (v145)
        goto LABEL_105;
LABEL_106:
      v150 = v146 + 1;
      if (__OFADD__(v146, 1))
        goto LABEL_158;
      v151 = (1 << *((_BYTE *)v1 + 541)) + 63;
      if (v150 >= (uint64_t)(v151 >> 6))
        goto LABEL_149;
      result = (_QWORD *)v1[55];
      v152 = result + 8;
      if (!result[v150 + 8])
      {
        v153 = v151 >> 6;
        if (v146 + 2 >= v153)
          goto LABEL_149;
        if (!v152[v146 + 2])
        {
          if (v146 + 3 >= v153)
            goto LABEL_149;
          if (!v152[v146 + 3])
          {
            v154 = v146 + 4;
            if (v146 + 4 >= v153)
              goto LABEL_149;
            if (!v152[v154])
            {
              do
              {
                v155 = v154 + 1;
                if (__OFADD__(v154, 1))
                  goto LABEL_159;
                if (v155 >= v153)
                  goto LABEL_149;
                ++v154;
              }
              while (!v152[v155]);
            }
          }
        }
      }
      sub_1AE53F8C0();
    }
  }
  if (*(_QWORD *)(v174 + 8 * (v16 + 1)))
    goto LABEL_12;
  if (v16 + 2 >= v175)
    goto LABEL_100;
  if (*(_QWORD *)(v174 + 8 * (v16 + 2)))
    goto LABEL_12;
  v17 = v16 + 3;
  if (v16 + 3 >= v175)
    goto LABEL_100;
  if (*(_QWORD *)(v174 + 8 * v17))
    goto LABEL_12;
  while (1)
  {
    v133 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v133 >= v175)
      goto LABEL_100;
    ++v17;
    if (*(_QWORD *)(v174 + 8 * v133))
      goto LABEL_12;
  }
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_1AE53520C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 520) = a1;
  *(_QWORD *)(v3 + 528) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    sub_1AE4F6648();
    sub_1AE4FC564();
  }
  else
  {
    swift_release();
  }
  sub_1AE4F9070();
  return swift_task_switch();
}

void sub_1AE53529C()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  _QWORD *v51;
  int EnumCaseMultiPayload;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  BOOL v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  char v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  int64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  int64_t v94;
  int64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  int64_t v101;
  unint64_t v102;
  uint64_t v103;
  int64_t v104;
  uint64_t v105;
  int64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  __int16 v111;
  char v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  _BYTE *v116;
  _WORD *v117;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  int64_t v135;
  uint64_t v136;
  int64_t v137;

  v1 = 0;
  v126 = (_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 520);
  v3 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v2 + 64);
  v130 = v2 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(v2 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & v4;
  v135 = (unint64_t)(63 - v6) >> 6;
  v120 = v2 + 104;
  v133 = *(_QWORD *)(v0 + 520);
  v134 = *(_QWORD *)(v0 + 496);
  if ((v5 & v4) == 0)
    goto LABEL_6;
LABEL_4:
  v8 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v9 = v8 | (v1 << 6);
LABEL_5:
  v10 = *(_QWORD **)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 280);
  v12 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v9);
  v13 = v12[1];
  *v10 = *v12;
  v10[1] = v13;
  v14 = *(_QWORD *)(v2 + 56) + *(_QWORD *)(v11 + 72) * v9;
  v15 = sub_1AE53FA00();
  sub_1AE53C5E4(v14, (uint64_t)v10 + *(int *)(v15 + 48));
  v16 = sub_1AE53F9B0();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v16, v17, v18, v15);
  sub_1AE4FB75C();
  while (1)
  {
    v26 = *(_QWORD *)(v0 + 312);
    sub_1AE53C62C(*(_QWORD *)(v0 + 304), v26, &qword_1EED9B0C8);
    v27 = sub_1AE53FA00();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v26, 1, v27) == 1)
      break;
    v137 = v1;
    v28 = *(uint64_t **)(v0 + 312);
    v30 = *v28;
    v29 = v28[1];
    sub_1AE53C62C((uint64_t)v28 + *(int *)(v27 + 48), *(_QWORD *)(v0 + 296), &qword_1EED9B0C0);
    if (!*(_QWORD *)(v3 + 16))
    {
      v1 = v137;
      goto LABEL_33;
    }
    sub_1AE4F66C4();
    sub_1AE537038(v30, v29, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
    if ((v31 & 1) == 0)
      goto LABEL_31;
    sub_1AE53F924();
    v131 = *(_QWORD *)v32;
    v33 = *(_QWORD *)(v32 + 40);
    v34 = *(_QWORD *)(v32 + 48);
    v35 = *(_QWORD *)(v32 + 56);
    v36 = *(_WORD *)(v32 + 64);
    v136 = *(_QWORD *)(v32 + 8);
    swift_bridgeObjectRetain();
    sub_1AE4F66CC();
    sub_1AE536B1C(v33, v34, v35, v36);
    sub_1AE4FB75C();
    sub_1AE4F665C();
    v37 = v35;
    v3 = v134;
    sub_1AE536AF8(v33, v34, v37, v36);
    sub_1AE4F6648();
    sub_1AE4F9038();
    if (!*(_QWORD *)(v134 + 16))
    {
      v2 = v133;
      v1 = v137;
      goto LABEL_32;
    }
    sub_1AE4F66C4();
    sub_1AE537038(v30, v29, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
    if ((v38 & 1) == 0)
    {
      v2 = v133;
      goto LABEL_30;
    }
    sub_1AE53F924();
    v127 = *(_QWORD *)(v39 + 16);
    v40 = *(_QWORD *)(v39 + 24);
    v41 = *(_QWORD *)(v39 + 40);
    v42 = *(_QWORD *)(v39 + 48);
    v43 = *(_QWORD *)(v39 + 56);
    v44 = *(_WORD *)(v39 + 64);
    swift_bridgeObjectRetain();
    v129 = v40;
    sub_1AE4F66CC();
    sub_1AE536B1C(v41, v42, v43, v44);
    sub_1AE4F6708();
    sub_1AE4F665C();
    v45 = v43;
    v3 = v134;
    sub_1AE53FA98(v41, v42, v45);
    sub_1AE4F76D8();
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v134 + 16))
    {
      v2 = v133;
LABEL_30:
      swift_bridgeObjectRelease();
LABEL_31:
      v1 = v137;
LABEL_32:
      swift_bridgeObjectRelease();
LABEL_33:
      sub_1AE4F665C();
      if (qword_1ED31BCB0 != -1)
        swift_once();
      v56 = sub_1AE925B6C();
      sub_1AE4FB608(v56, (uint64_t)qword_1ED31BC90);
      v57 = sub_1AE925B54();
      v58 = sub_1AE9265F8();
      if (os_log_type_enabled(v57, v58))
      {
        v59 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v59 = 0;
        _os_log_impl(&dword_1AE4F2000, v57, v58, "domainId or assetId not found in trialAssetsToGet", v59, 2u);
        MEMORY[0x1AF454C78](v59, -1, -1);
      }

      goto LABEL_38;
    }
    sub_1AE537038(v30, v29, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
    v2 = v133;
    if ((v46 & 1) == 0)
      goto LABEL_30;
    sub_1AE53F924();
    v125 = *(_QWORD *)(v47 + 40);
    v48 = *(_QWORD *)(v47 + 56);
    v128 = *(_QWORD *)(v47 + 48);
    v49 = *(unsigned __int16 *)(v47 + 64) | (*(unsigned __int8 *)(v47 + 66) << 16);
    v50 = *(_QWORD *)(v47 + 80);
    v121 = *(_QWORD *)(v47 + 72);
    swift_bridgeObjectRetain();
    sub_1AE4FB764();
    v123 = v48;
    v124 = v49;
    sub_1AE536B1C(v125, v128, v48, v49);
    v122 = v50;
    sub_1AE4F6708();
    sub_1AE4F665C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE535FE8(v126, v131, v136);
    v132 = v51;
    if (*v51)
    {
      sub_1AE53C5E4(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 288));
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v53 = *(_QWORD **)(v0 + 416);
      if (EnumCaseMultiPayload == 1)
      {
        *v53 = **(_QWORD **)(v0 + 288);
        swift_storeEnumTagMultiPayload();
        v54 = v123;
        v55 = v125;
      }
      else
      {
        v60 = *(_QWORD *)(v0 + 376);
        v61 = *(_QWORD *)(v0 + 360);
        v63 = *(_QWORD *)(v0 + 256);
        v62 = *(_QWORD *)(v0 + 264);
        v64 = *(_QWORD *)(v0 + 248);
        v119 = *(_QWORD *)(v0 + 352);
        sub_1AE536B40(*(_QWORD *)(v0 + 288), v62, type metadata accessor for TrialAssetManager.Asset);
        sub_1AE53F194(v62, v63, type metadata accessor for TrialAssetManager.Asset);
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v61 + 32))(v53, v63, v119);
        v65 = (char *)v53 + *(int *)(v60 + 20);
        *(_QWORD *)v65 = v125;
        *((_QWORD *)v65 + 1) = v128;
        *((_QWORD *)v65 + 2) = v123;
        v65[26] = BYTE2(v124);
        *((_WORD *)v65 + 12) = v124;
        *((_QWORD *)v65 + 4) = v121;
        *((_QWORD *)v65 + 5) = v122;
        v66 = *(_QWORD *)(v63 + *(int *)(v64 + 20));
        v2 = v133;
        v3 = v134;
        sub_1AE53F8A8(v66);
        v67 = sub_1AE53F9B0();
        v55 = v68;
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v67, v69, v70, v71);
        sub_1AE536B1C(v55, v128, v123, v124);
        sub_1AE4FB75C();
        sub_1AE53D160(v62, type metadata accessor for TrialAssetManager.Asset);
        swift_storeEnumTagMultiPayload();
        v54 = v123;
      }
      v72 = *(_QWORD *)(v0 + 408);
      v73 = *(_QWORD *)(v0 + 416);
      sub_1AE536AF8(v55, v128, v54, v124);
      sub_1AE4F76D8();
      sub_1AE53C62C(v73, v72, &qword_1EED9B0D0);
      sub_1AE508E78();
      *(_QWORD *)(v0 + 224) = *v132;
      *v132 = 0x8000000000000000;
      sub_1AE537038(v127, v129, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
      sub_1AE4FFC24();
      if (v76)
        goto LABEL_106;
      v77 = v74;
      v78 = v75;
      sub_1AE501548(&qword_1EED9B128);
      if ((sub_1AE926A54() & 1) != 0)
      {
        v79 = sub_1AE537038(v127, v129, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
        if ((v78 & 1) != (v80 & 1))
        {
          sub_1AE53F94C();
          sub_1AE926DE4();
          return;
        }
        v77 = v79;
      }
      v81 = *(_QWORD **)(v0 + 224);
      v83 = *(_QWORD *)(v0 + 400);
      v82 = *(_QWORD *)(v0 + 408);
      if ((v78 & 1) != 0)
      {
        sub_1AE53B340(v82, v81[7] + *(_QWORD *)(v83 + 72) * v77);
      }
      else
      {
        v81[(v77 >> 6) + 8] |= 1 << v77;
        v84 = (uint64_t *)(v81[6] + 16 * v77);
        *v84 = v127;
        v84[1] = v129;
        sub_1AE53C62C(v82, v81[7] + *(_QWORD *)(v83 + 72) * v77, &qword_1EED9B0D0);
        sub_1AE53F908();
        if (v76)
          goto LABEL_108;
        v81[2] = v85;
        sub_1AE4F66C4();
      }
      sub_1AE53F9F4(v132);
      sub_1AE4F665C();
      v1 = v137;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1AE536AF8(v125, v128, v48, v49);
      swift_bridgeObjectRelease();
      v1 = v137;
    }
    sub_1AE53FAF4((uint64_t)v126);
    swift_bridgeObjectRelease();
LABEL_38:
    sub_1AE53C658(*(_QWORD *)(v0 + 296));
    if (v7)
      goto LABEL_4;
LABEL_6:
    v19 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_103:
      __break(1u);
      goto LABEL_104;
    }
    if (v19 >= v135)
    {
      v21 = v1;
    }
    else
    {
      v20 = *(_QWORD *)(v130 + 8 * v19);
      if (v20)
        goto LABEL_9;
      v21 = v1 + 1;
      if (v1 + 2 < v135)
      {
        v20 = *(_QWORD *)(v130 + 8 * (v1 + 2));
        if (v20)
        {
          v19 = v1 + 2;
LABEL_9:
          v7 = (v20 - 1) & v20;
          v9 = __clz(__rbit64(v20)) + (v19 << 6);
          v1 = v19;
          goto LABEL_5;
        }
        v21 = v1 + 2;
        if (v1 + 3 < v135)
        {
          v20 = *(_QWORD *)(v130 + 8 * (v1 + 3));
          if (v20)
          {
            v19 = v1 + 3;
            goto LABEL_9;
          }
          v19 = v1 + 4;
          v21 = v1 + 3;
          if (v1 + 4 < v135)
          {
            v20 = *(_QWORD *)(v130 + 8 * v19);
            if (v20)
              goto LABEL_9;
            while (v1 + 5 < v135)
            {
              v20 = *(_QWORD *)(v120 + 8 * v1++);
              if (v20)
              {
                v19 = v1 + 4;
                goto LABEL_9;
              }
            }
            v21 = v135 - 1;
          }
        }
      }
    }
    v22 = *(_QWORD *)(v0 + 304);
    v23 = sub_1AE53FA00();
    sub_1AE508140(v22, v24, v25, v23);
    v7 = 0;
    v1 = v21;
  }
  swift_release();
  sub_1AE4F9038();
  v86 = *(_QWORD *)(v0 + 480);
  v87 = *(_QWORD *)(v0 + 488);
  if (v87)
  {
    v88 = *(_QWORD *)(v0 + 472);
LABEL_63:
    v89 = (v87 - 1) & v87;
    v90 = __clz(__rbit64(v87)) | (v86 << 6);
LABEL_99:
    *(_QWORD *)(v0 + 480) = v86;
    *(_QWORD *)(v0 + 488) = v89;
    v111 = *(_WORD *)(v0 + 538);
    v112 = *(_BYTE *)(*(_QWORD *)(v88 + 48) + v90);
    v113 = *(_QWORD *)(*(_QWORD *)(v88 + 56) + 8 * v90);
    *(_QWORD *)(v0 + 496) = v113;
    *(_QWORD *)(v0 + 504) = sub_1AE53C430(v113);
    *(_BYTE *)(v0 + 540) = v112;
    *(_WORD *)(v0 + 536) = v111;
    sub_1AE4F6708();
    v114 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 512) = v114;
    *v114 = v0;
    v114[1] = sub_1AE53520C;
    sub_1AE53F94C();
    TrialAssetManager.assets(for:in:downloadOptions:)(v115, v116, v117);
    return;
  }
  while (2)
  {
    v76 = __OFADD__(v86++, 1);
    if (v76)
      goto LABEL_103;
    v91 = (1 << *(_BYTE *)(v0 + 542)) + 63;
    v88 = *(_QWORD *)(v0 + 472);
    if (v86 < (uint64_t)(v91 >> 6))
    {
      v92 = v88 + 64;
      v93 = *(_QWORD *)(v88 + 64 + 8 * v86);
      if (v93)
        goto LABEL_98;
      v94 = v91 >> 6;
      v95 = v86 + 1;
      if (v86 + 1 < v94)
      {
        v93 = *(_QWORD *)(v92 + 8 * v95);
        if (v93)
          goto LABEL_97;
        v95 = v86 + 2;
        if (v86 + 2 < v94)
        {
          v93 = *(_QWORD *)(v92 + 8 * v95);
          if (v93)
          {
LABEL_97:
            v86 = v95;
            goto LABEL_98;
          }
          v86 += 3;
          if (v86 < v94)
          {
            v93 = *(_QWORD *)(v92 + 8 * v86);
            if (!v93)
            {
              while (1)
              {
                v95 = v86 + 1;
                if (__OFADD__(v86, 1))
                  break;
                if (v95 >= v94)
                  goto LABEL_77;
                v93 = *(_QWORD *)(v92 + 8 * v95);
                ++v86;
                if (v93)
                  goto LABEL_97;
              }
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
              goto LABEL_107;
            }
LABEL_98:
            v89 = (v93 - 1) & v93;
            v90 = __clz(__rbit64(v93)) + (v86 << 6);
            goto LABEL_99;
          }
        }
      }
    }
LABEL_77:
    swift_release();
    v96 = *(_QWORD *)(v0 + 456);
    v97 = *(_QWORD *)(v0 + 464);
    if (v97)
    {
      v98 = (v97 - 1) & v97;
      v99 = __clz(__rbit64(v97)) | (v96 << 6);
      v100 = *(_QWORD *)(v0 + 440);
      goto LABEL_92;
    }
    v101 = v96 + 1;
    if (__OFADD__(v96, 1))
      goto LABEL_105;
    v102 = (1 << *(_BYTE *)(v0 + 541)) + 63;
    if (v101 >= (uint64_t)(v102 >> 6))
    {
LABEL_100:
      swift_release();
      sub_1AE4FC564();
      swift_bridgeObjectRelease();
      sub_1AE4F67E4();
      sub_1AE4F67DC();
      sub_1AE4FCE7C();
      sub_1AE4FD9A8();
      sub_1AE53F870();
      sub_1AE53F9C0();
      sub_1AE53F998();
      sub_1AE4F90C0();
      sub_1AE4F90A0();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_1AE53F94C();
      __asm { BR              X1 }
    }
    v103 = *(_QWORD *)(v0 + 440) + 64;
    if (*(_QWORD *)(v103 + 8 * v101))
      goto LABEL_91;
    v104 = v102 >> 6;
    if (v96 + 2 >= v104)
      goto LABEL_100;
    if (*(_QWORD *)(v103 + 8 * (v96 + 2)))
      goto LABEL_91;
    if (v96 + 3 >= v104)
      goto LABEL_100;
    if (*(_QWORD *)(v103 + 8 * (v96 + 3)))
      goto LABEL_91;
    v105 = v96 + 4;
    if (v96 + 4 >= v104)
      goto LABEL_100;
    if (*(_QWORD *)(v103 + 8 * v105))
    {
LABEL_91:
      sub_1AE53F8C0();
LABEL_92:
      *(_QWORD *)(v0 + 456) = v96;
      *(_QWORD *)(v0 + 464) = v98;
      *(_WORD *)(v0 + 538) = *(_WORD *)(*(_QWORD *)(v100 + 48) + 2 * v99);
      v107 = *(_QWORD *)(*(_QWORD *)(v100 + 56) + 8 * v99);
      *(_QWORD *)(v0 + 472) = v107;
      v108 = *(_BYTE *)(v107 + 32);
      *(_BYTE *)(v0 + 542) = v108;
      v109 = 1 << v108;
      if (v109 < 64)
        v110 = ~(-1 << v109);
      else
        v110 = -1;
      v87 = v110 & *(_QWORD *)(v107 + 64);
      v88 = swift_bridgeObjectRetain();
      v86 = 0;
      if (v87)
        goto LABEL_63;
      continue;
    }
    break;
  }
  while (1)
  {
    v106 = v105 + 1;
    if (__OFADD__(v105, 1))
      break;
    if (v106 >= v104)
      goto LABEL_100;
    ++v105;
    if (*(_QWORD *)(v103 + 8 * v106))
      goto LABEL_91;
  }
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
}

uint64_t sub_1AE535E94()
{
  uint64_t v0;

  swift_release();
  sub_1AE4FC564();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  sub_1AE53F870();
  sub_1AE53F9C0();
  sub_1AE53F998();
  sub_1AE4F90C0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t (*sub_1AE535F84(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  v5[4] = a3;
  sub_1AE4FB75C();
  v6 = (_QWORD *)sub_1AE509808();
  v5[5] = sub_1AE53B7E4(v6, v7, v8);
  return sub_1AE535FE4;
}

uint64_t (*sub_1AE535FE8(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1AE53B9A4(v6, a2, a3);
  return sub_1AE535FE4;
}

void sub_1AE536054(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_1AE53F808(*a1, *(uint64_t (**)(uint64_t, _QWORD))(*a1 + 40));
  sub_1AE4F9038();
  sub_1AE53F5F8(v1);
}

void (*sub_1AE536080(_QWORD *a1, __int16 a2))(uint64_t *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1AE53B8F8(v4, a2);
  return sub_1AE5360CC;
}

void (*sub_1AE5360D0(_QWORD *a1, uint64_t a2))(uint64_t *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_1AE53B878(v4, a2);
  return sub_1AE5360CC;
}

void sub_1AE53611C(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_1AE53F808(*a1, *(uint64_t (**)(uint64_t, _QWORD))(*a1 + 32));
  sub_1AE53F5F8(v1);
}

uint64_t AssetRegistry.deinit()
{
  uint64_t v0;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  sub_1AE53FAC0();
  return v0;
}

uint64_t AssetRegistry.__deallocating_deinit()
{
  uint64_t v0;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  sub_1AE53FAC0();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE53618C@<X0>(uint64_t a1@<X8>)
{
  return AssetRegistry.trialAssetManagerPolicy.getter(a1);
}

uint64_t sub_1AE5361AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1AE4FC490;
  return AssetRegistry.asset(for:in:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1AE536230(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1AE536280;
  return AssetRegistry.assets(for:)(a1);
}

uint64_t sub_1AE536280(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1AE4FFC38();
  if (!v1)
    v4 = a1;
  return sub_1AE4FE914(v4, *(uint64_t (**)(void))(v2 + 8));
}

void sub_1AE5362B0()
{
  AssetRegistry.locallyAvailableAsset(for:in:)();
}

void sub_1AE5362D0()
{
  AssetRegistry.assetEntry(for:in:)();
}

uint64_t sub_1AE5362F0@<X0>(_BYTE *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t result;
  _UNKNOWN **v7;
  unsigned __int8 v8;
  unsigned __int8 v9;

  v4 = *a2;
  if ((*a1 & 1) != 0)
  {
    v5 = type metadata accessor for InferenceSupportRemoteBackendXPC();
    v9 = v4;
    result = sub_1AE766B28(v5, &v9);
    v7 = &off_1E5DC41F8;
  }
  else
  {
    v5 = sub_1AE501548(&qword_1EED9B228);
    v8 = v4;
    result = sub_1AE54BDBC((char *)&v8);
    v7 = &off_1E5DACD98;
  }
  a3[3] = v5;
  a3[4] = (uint64_t)v7;
  *a3 = result;
  return result;
}

void sub_1AE536380(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = objc_msgSend(objc_allocWithZone((Class)GDXPCAssetRegistryService), sel_init);
  sub_1AE924408();
  sub_1AE4FCE84();
  v3 = sub_1AE9243FC();
  sub_1AE9243C0();
  sub_1AE4FCE84();
  v4 = sub_1AE9243B4();
  v5 = sub_1AE501548(&qword_1EED9B220);
  v6 = swift_allocObject();
  sub_1AE501548(&qword_1EED9B228);
  swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1AE54BEF8(1, v2, v3, v4);
  a1[3] = v5;
  a1[4] = (uint64_t)&protocol witness table for AssetRegistryRemoteWritableBackendXPC<A>;
  *a1 = v6;
  sub_1AE4FD94C();
}

uint64_t AssetRegistryParameters.LocalOptions.loadOverriddenAssetEntries.getter()
{
  return 0;
}

uint64_t sub_1AE53646C()
{
  sub_1AE53C6EC();
  return sub_1AE926F94();
}

uint64_t sub_1AE536494()
{
  sub_1AE53C6EC();
  return sub_1AE926FA0();
}

void AssetRegistryParameters.LocalOptions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1AE501548(&qword_1EED9B138);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F90C8();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE53C6EC();
  sub_1AE926F4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  sub_1AE4FD94C();
}

uint64_t AssetRegistryParameters.LocalOptions.init(from:)(uint64_t a1)
{
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
}

uint64_t sub_1AE536584()
{
  return 0;
}

uint64_t sub_1AE53658C(uint64_t a1)
{
  return AssetRegistryParameters.LocalOptions.init(from:)(a1);
}

void sub_1AE5365A0(_QWORD *a1)
{
  AssetRegistryParameters.LocalOptions.encode(to:)(a1);
}

void AssetRegistryParameters.RemoteEndpointType.hash(into:)()
{
  sub_1AE926ED4();
  sub_1AE4F6664();
}

BOOL static AssetRegistryParameters.RemoteEndpointType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AssetRegistryParameters.RemoteEndpointType.hashValue.getter()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  return sub_1AE4F905C();
}

uint64_t AssetRegistryParameters.RemoteOptions.loadOverriddenAssetEntries.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

IntelligencePlatform::AssetRegistryParameters::RemoteOptions __swiftcall AssetRegistryParameters.RemoteOptions.init(loadOverriddenAssetEntries:)(IntelligencePlatform::AssetRegistryParameters::RemoteOptions loadOverriddenAssetEntries)
{
  IntelligencePlatform::AssetRegistryParameters::RemoteOptions *v1;

  v1->loadOverriddenAssetEntries = loadOverriddenAssetEntries.loadOverriddenAssetEntries;
  return loadOverriddenAssetEntries;
}

uint64_t sub_1AE53664C()
{
  return sub_1AE926ED4();
}

uint64_t sub_1AE536670(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AE97CB80)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1AE5366F4()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  return sub_1AE926F10();
}

unint64_t sub_1AE536734()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1AE536758()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  return sub_1AE926F10();
}

uint64_t sub_1AE536798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE536670(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE5367C0()
{
  sub_1AE53C728();
  return sub_1AE926F94();
}

uint64_t sub_1AE5367E8()
{
  sub_1AE53C728();
  return sub_1AE926FA0();
}

void AssetRegistryParameters.RemoteOptions.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  sub_1AE4F67EC();
  v1 = v0;
  sub_1AE501548(&qword_1EED9B148);
  sub_1AE509818();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F6744();
  sub_1AE4F9858(v1, v1[3]);
  sub_1AE53C728();
  sub_1AE926F4C();
  sub_1AE926C94();
  sub_1AE4FD9B8();
  sub_1AE4F667C();
}

void AssetRegistryParameters.RemoteOptions.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  char v6;

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  sub_1AE501548(&qword_1EED9B158);
  sub_1AE509818();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F6744();
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE53C728();
  sub_1AE926F34();
  if (!v0)
  {
    v6 = sub_1AE926BBC();
    sub_1AE4FD9B8();
    *v4 = v6 & 1;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  sub_1AE4F667C();
}

void sub_1AE53697C()
{
  AssetRegistryParameters.RemoteOptions.init(from:)();
}

void sub_1AE536990()
{
  AssetRegistryParameters.RemoteOptions.encode(to:)();
}

uint64_t AssetRegistryAsset.url.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  sub_1AE4FD9B0();
  v0 = sub_1AE4F7714();
  return v1(v0);
}

uint64_t AssetRegistryAsset.assetEntry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v1 + *(int *)(sub_1AE53F798() + 20);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_BYTE *)(v3 + 26);
  v8 = *(_WORD *)(v3 + 24);
  v9 = *(_QWORD *)(v3 + 32);
  v10 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 26) = v7;
  *(_WORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  sub_1AE536B1C(v4, v5, v6, v8);
  return swift_bridgeObjectRetain();
}

uint64_t AssetRegistryAsset.metadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(sub_1AE53F798() + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  return sub_1AE53C764(v4, v5, v6);
}

uint64_t AssetRegistryAsset.Metadata.TrialMetadata.metadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AssetRegistryAsset.Metadata.TrialMetadata.experimentIdentifiers.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return sub_1AE53C7C0(v2, v3);
}

uint64_t sub_1AE536A94(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 && a3 != 2)
  {
    if (a3 != 1)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t type metadata accessor for AssetRegistryAsset(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1ED318D08);
}

uint64_t sub_1AE536AF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 < 0)
    return swift_bridgeObjectRelease();
  else
    return sub_1AE536B10();
}

uint64_t sub_1AE536B10()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE536B1C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 < 0)
    return swift_bridgeObjectRetain();
  else
    return sub_1AE536B34();
}

uint64_t sub_1AE536B34()
{
  return swift_bridgeObjectRetain();
}

void sub_1AE536B40(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_1AE53F8D8(a1, a2, a3);
  sub_1AE4F775C(v3);
  sub_1AE4F6664();
}

unint64_t sub_1AE536B60()
{
  unint64_t result;

  result = qword_1ED30EC88;
  if (!qword_1ED30EC88)
  {
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED30EC88);
  }
  return result;
}

unint64_t sub_1AE536B9C()
{
  unint64_t result;

  result = qword_1ED30EE40;
  if (!qword_1ED30EE40)
  {
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEFF48], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED30EE40);
  }
  return result;
}

unint64_t sub_1AE536BD8()
{
  unint64_t result;

  result = qword_1EED9B0B0;
  if (!qword_1EED9B0B0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.ValidityError, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.ValidityError);
    atomic_store(result, (unint64_t *)&qword_1EED9B0B0);
  }
  return result;
}

uint64_t type metadata accessor for AssetRegistryAssetLocalAvailabilityInfo(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1ED30EE68);
}

uint64_t sub_1AE536C28(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1AE536C58()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EED9B0F0;
  if (!qword_1EED9B0F0)
  {
    v1 = sub_1AE523CF0(&qword_1EED9B0E0);
    v2 = sub_1AE536CBC();
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEE990], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EED9B0F0);
  }
  return result;
}

unint64_t sub_1AE536CBC()
{
  unint64_t result;

  result = qword_1EED9B0F8;
  if (!qword_1EED9B0F8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialAssetManager.DownloadOptions, &type metadata for TrialAssetManager.DownloadOptions);
    atomic_store(result, (unint64_t *)&qword_1EED9B0F8);
  }
  return result;
}

uint64_t sub_1AE536CFC()
{
  uint64_t v0;

  sub_1AE925E3C();
  sub_1AE926EC8();
  sub_1AE925F14();
  v0 = sub_1AE4F905C();
  sub_1AE4F665C();
  return v0;
}

unint64_t sub_1AE536D68()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE5019B8();
  sub_1AE926EF8();
  sub_1AE4F905C();
  v0 = sub_1AE53F7FC();
  return sub_1AE537730(v0, v1);
}

unint64_t sub_1AE536DB0()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1AE5019B8();
  sub_1AE4F6730();
  sub_1AE506B54();
  sub_1AE4F81B8();
  sub_1AE4F905C();
  v0 = (uint64_t *)sub_1AE53F7FC();
  return sub_1AE5377CC(v0, v1);
}

unint64_t sub_1AE536DFC()
{
  char v0;
  uint64_t v1;

  sub_1AE53F968();
  sub_1AE54F5D4();
  v0 = sub_1AE53F934();
  return sub_1AE5378D0(v0, v1);
}

unint64_t sub_1AE536E20(uint64_t a1, char a2)
{
  char v4;
  uint64_t v5;

  v4 = a2 & 1;
  sub_1AE926EC8();
  if ((a2 & 1) != 0)
  {
    sub_1AE4F90E0();
  }
  else
  {
    sub_1AE53FA08();
    sub_1AE926EF8();
  }
  v5 = sub_1AE4F905C();
  return sub_1AE537A6C(a1, v4, v5);
}

unint64_t sub_1AE536E90()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE5019B8();
  sub_1AE4F6730();
  sub_1AE506B54();
  sub_1AE4F81B8();
  sub_1AE4F905C();
  v0 = sub_1AE53F7FC();
  return sub_1AE537AF0(v0, v1);
}

uint64_t sub_1AE536EDC(uint64_t a1, uint64_t a2)
{
  return sub_1AE537038(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
}

uint64_t sub_1AE536EF0(uint64_t a1)
{
  return sub_1AE5370E0(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E80C4, sub_1AE537CD4);
}

unint64_t sub_1AE536F04()
{
  double *v0;
  uint64_t v1;

  sub_1AE5019B8();
  CodableLocation.hash(into:)();
  sub_1AE4F905C();
  v0 = (double *)sub_1AE53F7FC();
  return sub_1AE537FCC(v0, v1);
}

uint64_t sub_1AE536F50(uint64_t a1)
{
  uint64_t v2;

  sub_1AE5019B8();
  sub_1AE926EEC();
  v2 = sub_1AE4F905C();
  return sub_1AE53976C(a1, v2);
}

unint64_t sub_1AE536FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1AE5019B8();
  sub_1AE4F6730();
  sub_1AE925F14();
  sub_1AE4F81B8();
  sub_1AE5E8240();
  v6 = sub_1AE4F905C();
  return sub_1AE538160(a1, a2, a3, v6);
}

uint64_t sub_1AE537024(uint64_t a1, uint64_t a2)
{
  return sub_1AE537038(a1, a2, MEMORY[0x1E0DEA2A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
}

uint64_t sub_1AE537038(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  _BYTE v10[72];

  sub_1AE5019B8();
  a3(v10, a1, a2);
  v7 = sub_1AE4F905C();
  return a4(a1, a2, v7);
}

void sub_1AE5370A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1AE53F9A0();
  sub_1AE539B10(v0, v1);
  sub_1AE4F6664();
}

uint64_t sub_1AE5370CC(uint64_t a1)
{
  return sub_1AE5370E0(a1, (void (*)(_BYTE *, uint64_t))sub_1AE5E90B4, sub_1AE538380);
}

uint64_t sub_1AE5370E0(uint64_t a1, void (*a2)(_BYTE *, uint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  _BYTE v8[72];

  sub_1AE5019B8();
  a2(v8, a1);
  v5 = sub_1AE4F905C();
  return a3(a1, v5);
}

unint64_t sub_1AE537138(__int16 a1)
{
  uint64_t v2;
  _BYTE v4[72];

  sub_1AE926EC8();
  sub_1AE53F304((uint64_t)v4, a1);
  v2 = sub_1AE926F10();
  return sub_1AE538610(a1, v2);
}

unint64_t sub_1AE537190(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1AE5019B8();
  sub_1AE926EE0();
  if (a2)
  {
    sub_1AE4F66C4();
    sub_1AE53F9C8();
    sub_1AE4F665C();
  }
  v4 = sub_1AE4F905C();
  return sub_1AE5387B0(a1, a2, v4);
}

unint64_t sub_1AE537200(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE5019B8();
  v2 = *(unsigned __int8 *)(a1 + 33);
  sub_1AE4F6730();
  sub_1AE53FB2C();
  sub_1AE506B54();
  sub_1AE4F81B8();
  sub_1AE525EF8(a1);
  if (v2 == 2)
  {
    sub_1AE4F90E0();
  }
  else
  {
    sub_1AE53FA08();
    sub_1AE926ED4();
  }
  sub_1AE4F905C();
  v3 = sub_1AE53F7FC();
  return sub_1AE538878(v3, v4);
}

unint64_t sub_1AE537288()
{
  char v0;
  uint64_t v1;

  sub_1AE54FB90();
  v0 = sub_1AE53F934();
  return sub_1AE538968(v0, v1);
}

unint64_t sub_1AE5372B8(uint64_t a1)
{
  uint64_t v2;

  sub_1AE925E3C();
  sub_1AE926EC8();
  sub_1AE925F14();
  v2 = sub_1AE4F905C();
  sub_1AE4F76D8();
  return sub_1AE538AA8(a1, v2);
}

unint64_t sub_1AE537330(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE92688C();
  return sub_1AE538C1C(a1, v2);
}

uint64_t sub_1AE537360(uint64_t a1)
{
  uint64_t v2;

  sub_1AE5019B8();
  sub_1AE5E1F5C(a1);
  sub_1AE925F14();
  sub_1AE4F9038();
  v2 = sub_1AE4F905C();
  return sub_1AE538CE0(a1, v2);
}

unint64_t sub_1AE5373C8(unsigned int a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  MEMORY[0x1AF4540CC](*(_QWORD *)(v1 + 40), a1, 4);
  v2 = sub_1AE53F934();
  return sub_1AE538F1C(v2, v3);
}

uint64_t sub_1AE5373F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_1AE53F968();
  sub_1AE54FBF4(v0, v1);
  v2 = sub_1AE53F934();
  return sub_1AE538FB8(v2, v3);
}

void sub_1AE53741C()
{
  sub_1AE505CC4();
  sub_1AE53F824();
  sub_1AE4F6664();
}

unint64_t sub_1AE537450(double a1)
{
  uint64_t v2;

  v2 = sub_1AE926EBC();
  return sub_1AE539594(v2, a1);
}

unint64_t sub_1AE537484()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1AE5019B8();
  sub_1AE4F6730();
  sub_1AE506B54();
  sub_1AE4F81B8();
  sub_1AE4F6804();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  sub_1AE4F905C();
  v0 = (uint64_t *)sub_1AE53F7FC();
  return sub_1AE53962C(v0, v1);
}

void sub_1AE537530()
{
  sub_1AE505CC4();
  sub_1AE53F824();
  sub_1AE4F6664();
}

unint64_t sub_1AE537564()
{
  char v0;
  uint64_t v1;

  sub_1AE53F968();
  sub_1AE54FF58();
  v0 = sub_1AE53F934();
  return sub_1AE5398B0(v0, v1);
}

unint64_t sub_1AE537588()
{
  sub_1AE5019B8();
  sub_1AE4F6708();
  sub_1AE925F14();
  sub_1AE4F76D8();
  sub_1AE4F66C4();
  sub_1AE53F9C8();
  sub_1AE4F665C();
  sub_1AE4F905C();
  return sub_1AE539A28();
}

unint64_t sub_1AE537618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_1AE926EC8();
  sub_1AE926EE0();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1AE925F14();
    swift_bridgeObjectRelease();
  }
  sub_1AE926EE0();
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_1AE925F14();
    swift_bridgeObjectRelease();
  }
  v8 = sub_1AE926F10();
  return sub_1AE539B7C(a1, a2, a3, a4, v8);
}

void sub_1AE5376FC()
{
  sub_1AE505CC4();
  sub_1AE53F824();
  sub_1AE4F6664();
}

unint64_t sub_1AE537730(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1AE5377CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  _QWORD *v12;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v7 = *a1;
    v6 = a1[1];
    v8 = *(_QWORD *)(v2 + 48);
    v9 = (_QWORD *)(v8 + 40 * i);
    if ((*v9 != *a1 || v9[1] != v6) && (sub_1AE926D60() & 1) == 0)
    {
      v11 = ~v4;
      for (i = (i + 1) & v11; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v11)
      {
        v12 = (_QWORD *)(v8 + 40 * i);
        if (*v12 == v7 && v12[1] == v6)
          break;
        if ((sub_1AE926D60() & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1AE5378D0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0x7463614670696B73;
          v8 = 0xEF7265646E655273;
        }
        else
        {
          v8 = 0x80000001AE974AB0;
          v7 = 0xD000000000000013;
        }
      }
      else
      {
        v8 = 0xE700000000000000;
        v7 = 0x73736572646461;
      }
      if (a1)
      {
        v9 = a1 == 1 ? 0x7463614670696B73 : 0xD000000000000013;
        v10 = a1 == 1 ? 0xEF7265646E655273 : 0x80000001AE974AB0;
      }
      else
      {
        v10 = 0xE700000000000000;
        v9 = 0x73736572646461;
      }
      if (v7 == v9 && v8 == v10)
        break;
      v12 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1AE537A6C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      v8 = *(_QWORD *)(v3 + 48) + 16 * result;
      if ((*(_BYTE *)(v8 + 8) & 1) != 0)
      {
        if ((a2 & 1) != 0)
          return result;
      }
      else if ((a2 & 1) == 0 && *(_QWORD *)v8 == a1)
      {
        return result;
      }
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1AE537AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v7 = *(_QWORD *)(a1 + 16);
    v6 = *(_QWORD *)(a1 + 24);
    v8 = *(_QWORD *)(v2 + 48);
    v9 = v8 + 40 * i;
    if ((*(_QWORD *)(v9 + 16) != v7 || *(_QWORD *)(v9 + 24) != v6) && (sub_1AE926D60() & 1) == 0)
    {
      v11 = ~v4;
      for (i = (i + 1) & v11; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v11)
      {
        v12 = v8 + 40 * i;
        if (*(_QWORD *)(v12 + 16) == v7 && *(_QWORD *)(v12 + 24) == v6)
          break;
        if ((sub_1AE926D60() & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1AE537BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1AE926D60() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1AE926D60() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1AE537CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1AE537FCC(double *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = type metadata accessor for CodableLocation();
  MEMORY[0x1E0C80A78](v5);
  v8 = (double *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_1AE53F194(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for CodableLocation);
      if (*v8 == *a1
        && v8[1] == a1[1]
        && v8[2] == a1[2]
        && v8[3] == a1[3]
        && v8[4] == a1[4]
        && v8[5] == a1[5]
        && v8[6] == a1[6]
        && (sub_1AE924894() & 1) != 0)
      {
        break;
      }
      sub_1AE53D160((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for CodableLocation);
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        return v10;
    }
    sub_1AE53D160((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for CodableLocation);
  }
  return v10;
}

unint64_t sub_1AE538160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;

  v5 = -1 << *(_BYTE *)(v4 + 32);
  v6 = a4 & ~v5;
  if (((*(_QWORD *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = ~v5;
    do
    {
      v10 = *(_QWORD *)(v4 + 48) + 24 * v6;
      v11 = *(unsigned __int8 *)(v10 + 16);
      v12 = *(_QWORD *)v10 == a1 && *(_QWORD *)(v10 + 8) == a2;
      if (v12 || (sub_1AE926D60() & 1) != 0)
        __asm { BR              X8 }
      v6 = (v6 + 1) & v9;
    }
    while (((*(_QWORD *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

uint64_t sub_1AE538380(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1AE538610(__int16 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  char v14;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = a1;
    v6 = ~v3;
    v7 = a1;
    if ((a1 & 0x100) != 0)
      v8 = 0x6974657263736964;
    else
      v8 = 0xD000000000000010;
    if ((a1 & 0x100) != 0)
      v9 = 0xED00007972616E6FLL;
    else
      v9 = 0x80000001AE97BEE0;
    do
    {
      v10 = *(unsigned __int16 *)(*(_QWORD *)(v2 + 48) + 2 * v4);
      if (*(_WORD *)(*(_QWORD *)(v2 + 48) + 2 * v4) == 2)
      {
        if (v7 == 2)
          return v4;
      }
      else if (v7 != 2 && ((((v5 & 1) == 0) ^ v10) & 1) != 0)
      {
        if ((v10 & 0x100) != 0)
          v11 = 0x6974657263736964;
        else
          v11 = 0xD000000000000010;
        if ((v10 & 0x100) != 0)
          v12 = 0xED00007972616E6FLL;
        else
          v12 = 0x80000001AE97BEE0;
        if (v11 == v8 && v12 == v9)
        {
          swift_bridgeObjectRelease_n();
          return v4;
        }
        v14 = sub_1AE926D60();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v14 & 1) != 0)
          return v4;
      }
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1AE5387B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = ~v5;
    v10 = *(_QWORD *)(v3 + 48);
    do
    {
      v11 = (_QWORD *)(v10 + 16 * v6);
      v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          v13 = *v11 == a1 && v12 == a2;
          if (v13 || (sub_1AE926D60() & 1) != 0)
            return v6;
        }
      }
      else if (!a2)
      {
        return v6;
      }
      v6 = (v6 + 1) & v9;
    }
    while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_1AE538878(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  BOOL v13;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    v7 = *(_QWORD *)(v2 + 48);
    v8 = *(_QWORD *)(a1 + 16);
    v9 = *(_QWORD *)(a1 + 24);
    v10 = *(unsigned __int8 *)(a1 + 33);
    do
    {
      v11 = v7 + 40 * v5;
      v12 = *(unsigned __int8 *)(v11 + 33);
      v13 = *(_QWORD *)(v11 + 16) == v8 && *(_QWORD *)(v11 + 24) == v9;
      if (v13 || (sub_1AE926D60() & 1) != 0)
      {
        if (v12 == 2)
        {
          if (v10 == 2)
            return v5;
        }
        else if (v10 != 2 && ((v12 ^ v10) & 1) == 0)
        {
          return v5;
        }
      }
      v5 = (v5 + 1) & v6;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_1AE538968(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v11;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    if ((a1 & 1) != 0)
      v6 = 0x7241746E65746E69;
    else
      v6 = 0x79676F6C6F746E6FLL;
    if ((a1 & 1) != 0)
      v7 = 0xE900000000000067;
    else
      v7 = 0xE800000000000000;
    while (1)
    {
      v8 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0x7241746E65746E69 : 0x79676F6C6F746E6FLL;
      v9 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) ? 0xE900000000000067 : 0xE800000000000000;
      if (v8 == v6 && v9 == v7)
        break;
      v11 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        v4 = (v4 + 1) & v5;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1AE538AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1AE925E3C();
    v8 = v7;
    if (v6 == sub_1AE925E3C() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1AE925E3C();
          v15 = v14;
          if (v13 == sub_1AE925E3C() && v15 == v16)
            break;
          v18 = sub_1AE926D60();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1AE538C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1AE53F088(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1AF453AB4](v9, a1);
      sub_1AE53F0C4((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1AE538CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1AE538F1C(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1AE538FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1AE539594(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      v7 = ~v4;
      for (result = (result + 1) & v7;
            ((*(_QWORD *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1AE53962C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  v21 = v2 + 64;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v19 = ~v3;
    v20 = *(_QWORD *)(v2 + 48);
    v5 = *a1;
    v6 = a1[1];
    v7 = a1[3];
    v22 = a1[2];
    v8 = a1[4];
    v9 = a1[5];
    do
    {
      v10 = (_QWORD *)(v20 + 48 * v4);
      v12 = v10[2];
      v11 = v10[3];
      v13 = v10[4];
      v14 = v10[5];
      v15 = *v10 == v5 && v10[1] == v6;
      if (v15 || (sub_1AE4FB6F0() & 1) != 0)
      {
        v16 = v12 == v22 && v11 == v7;
        if (v16 || (sub_1AE4FB6F0() & 1) != 0)
        {
          v17 = v13 == v8 && v14 == v9;
          if (v17 || (sub_1AE4FB6F0() & 1) != 0)
            break;
        }
      }
      v4 = (v4 + 1) & v19;
    }
    while (((*(_QWORD *)(v21 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1AE53976C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 v4;
  char v5;
  int v6;
  uint64_t v7;
  char v8;
  char v9;

  result = sub_1AE53F880(a1, a2);
  if ((v5 & 1) != 0 && *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + result) != v4)
  {
    result = sub_1AE5061C8(result);
    if ((v8 & 1) != 0)
    {
      do
      {
        if (*(unsigned __int8 *)(v7 + result) == v6)
          break;
        result = sub_1AE5061C8(result);
      }
      while ((v9 & 1) != 0);
    }
  }
  return result;
}

void sub_1AE5397DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  char v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  char v12;
  char v13;

  sub_1AE508E48();
  v1 = -1 << *(_BYTE *)(v0 + 32);
  v3 = v2 & ~v1;
  sub_1AE53F748();
  if ((v5 & 1) != 0)
  {
    sub_1AE53F468(0, v4);
    v6 = sub_1AE53FB20();
    v7 = sub_1AE9266E8();

    if ((v7 & 1) == 0)
    {
      v8 = ~v1;
      v9 = (v3 + 1) & v8;
      sub_1AE53F748();
      if ((v10 & 1) != 0)
      {
        do
        {
          v11 = sub_1AE53FB20();
          v12 = sub_1AE9266E8();

          if ((v12 & 1) != 0)
            break;
          v9 = (v9 + 1) & v8;
          sub_1AE53F748();
        }
        while ((v13 & 1) != 0);
      }
    }
  }
  sub_1AE4F66A8();
}

unint64_t sub_1AE5398B0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v12;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    while (1)
    {
      if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4))
      {
        if (*(_BYTE *)(*(_QWORD *)(v2 + 48) + v4) == 1)
        {
          v7 = 0xE700000000000000;
          v8 = 0x796C68746E6F6DLL;
        }
        else
        {
          v7 = 0xE600000000000000;
          v8 = 0x6C61756E6E61;
        }
      }
      else
      {
        v7 = 0xE600000000000000;
        v8 = 0x796C6B656577;
      }
      if (a1)
      {
        v9 = a1 == 1 ? 0x796C68746E6F6DLL : 0x6C61756E6E61;
        v10 = a1 == 1 ? 0xE700000000000000 : 0xE600000000000000;
      }
      else
      {
        v10 = 0xE600000000000000;
        v9 = 0x796C6B656577;
      }
      if (v8 == v9 && v7 == v10)
        break;
      v12 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        v4 = (v4 + 1) & v6;
        if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
          continue;
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_1AE539A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;

  sub_1AE4FC4D4();
  v5 = v0 + 64;
  v6 = -1 << *(_BYTE *)(v0 + 32);
  v8 = v7 & ~v6;
  if (((*(_QWORD *)(v0 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = v4;
    v10 = v3;
    v11 = v2;
    v12 = v1;
    v13 = ~v6;
    v14 = *(_QWORD *)(v0 + 48);
    do
    {
      v15 = (_QWORD *)(v14 + 32 * v8);
      v16 = v15[2];
      v17 = v15[3];
      v18 = *v15 == v12 && v15[1] == v11;
      if (v18 || (sub_1AE4FB6F0() & 1) != 0)
      {
        v19 = v16 == v10 && v17 == v9;
        if (v19 || (sub_1AE4FB6F0() & 1) != 0)
          break;
      }
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v5 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

uint64_t sub_1AE539B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  result = sub_1AE53F880(a1, a2);
  if ((v5 & 1) != 0 && *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * result) != v4)
  {
    result = sub_1AE5061C8(result);
    if ((v8 & 1) != 0)
    {
      do
      {
        if (*(_QWORD *)(v7 + 8 * result) == v6)
          break;
        result = sub_1AE5061C8(result);
      }
      while ((v9 & 1) != 0);
    }
  }
  return result;
}

unint64_t sub_1AE539B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  BOOL v20;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v13 = ~v7;
    v14 = *(_QWORD *)(v5 + 48);
    do
    {
      v15 = (_QWORD *)(v14 + 32 * v8);
      v16 = v15[1];
      v17 = v15[2];
      v18 = v15[3];
      if (v16)
      {
        if (!a2)
          goto LABEL_21;
        v19 = *v15 == a1 && v16 == a2;
        if (!v19 && (sub_1AE926D60() & 1) == 0)
          goto LABEL_21;
      }
      else if (a2)
      {
        goto LABEL_21;
      }
      if (v18)
      {
        if (a4)
        {
          v20 = v17 == a3 && v18 == a4;
          if (v20 || (sub_1AE926D60() & 1) != 0)
            return v8;
        }
      }
      else if (!a4)
      {
        return v8;
      }
LABEL_21:
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

void sub_1AE539C98(uint64_t *a1, uint64_t a2)
{
  _QWORD **v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *a1;
  v4 = a1[1];
  v7 = a1[2];
  v6 = a1[3];
  v17 = a1[4];
  v18 = a1[5];
  sub_1AE536E90();
  sub_1AE4FFC24();
  if (v10)
  {
    __break(1u);
LABEL_10:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  v11 = v8;
  v12 = v9;
  sub_1AE501548(&qword_1ED30F9E8);
  if ((sub_1AE53F63C() & 1) != 0)
  {
    sub_1AE536E90();
    sub_1AE53F770();
    if (!v14)
      goto LABEL_10;
    v11 = v13;
  }
  v15 = *v2;
  if ((v12 & 1) != 0)
  {
    v16 = (_QWORD *)(v15[7] + 48 * v11);
    *v16 = v5;
    v16[1] = v4;
    v16[2] = v7;
    v16[3] = v6;
    v16[4] = v17;
    v16[5] = v18;
    swift_release();
    swift_release();
  }
  else
  {
    *(_QWORD *)&v19 = v5;
    *((_QWORD *)&v19 + 1) = v4;
    v20 = v7;
    v21 = v6;
    v22 = v17;
    v23 = v18;
    sub_1AE53B0D0(v11, a2, &v19, v15);
    sub_1AE53F554();
  }
}

void sub_1AE539DD8()
{
  sub_1AE53A608();
}

uint64_t sub_1AE539DE4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1AE508E48();
  sub_1AE506F90();
  sub_1AE505F80(v2, v2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  sub_1AE4FFC24();
  if (v3)
  {
    __break(1u);
LABEL_9:
    result = sub_1AE926DE4();
    __break(1u);
    return result;
  }
  sub_1AE53FA78();
  sub_1AE501548(&qword_1EED9B1D0);
  if ((sub_1AE50A94C() & 1) != 0)
  {
    sub_1AE505F80(v0, v4, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
    sub_1AE500924();
    if (!v5)
      goto LABEL_9;
  }
  if ((v1 & 1) != 0)
  {
    sub_1AE4F66A8();
    return sub_1AE53F0F8(v6, v7);
  }
  else
  {
    v9 = sub_1AE53F75C();
    sub_1AE53B1D0(v9, v10, v11, v12, v13);
    return sub_1AE4FB7BC();
  }
}

void sub_1AE539EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD **v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;

  sub_1AE508E48();
  sub_1AE53F620();
  sub_1AE53F65C(v7, v7, MEMORY[0x1E0DEA2A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  sub_1AE4FFC24();
  if (v8)
  {
    __break(1u);
LABEL_10:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  sub_1AE53FA78();
  sub_1AE501548(qword_1ED3101A8);
  v9 = sub_1AE50A94C();
  if ((v9 & 1) != 0)
  {
    v1 = (uint64_t)*v4;
    sub_1AE53F650(v9, v10, MEMORY[0x1E0DEA2A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
    sub_1AE500924();
    if (!v12)
      goto LABEL_10;
    v6 = v11;
  }
  if ((v5 & 1) != 0)
  {
    sub_1AE53FAE8();
    *(_QWORD *)(v1 + 8 * v6) = v0;
    sub_1AE4F66A8();
  }
  else
  {
    sub_1AE53B20C(v6, v3, v2, v0, *v4);
    sub_1AE4FB7BC();
  }
}

_OWORD *sub_1AE539F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *result;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _QWORD *v16;

  sub_1AE508E48();
  sub_1AE50A274(v1, v2);
  sub_1AE5370A4();
  sub_1AE4FFC24();
  if (v5)
  {
    __break(1u);
LABEL_10:
    result = (_OWORD *)sub_1AE926DE4();
    __break(1u);
    return result;
  }
  v6 = v3;
  v7 = v4;
  sub_1AE501548((uint64_t *)&unk_1EED94760);
  if ((sub_1AE4FE900() & 1) != 0)
  {
    sub_1AE53F940();
    sub_1AE5370A4();
    sub_1AE53F770();
    if (!v9)
      goto LABEL_10;
    v6 = v8;
  }
  if ((v7 & 1) != 0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(*(_QWORD *)(*(_QWORD *)v0 + 56) + 32 * v6);
    sub_1AE4F7714();
    sub_1AE4F66A8();
    return sub_1AE53F2F4(v10, v11);
  }
  else
  {
    sub_1AE4F66A8();
    return sub_1AE53B254(v13, v14, v15, v16);
  }
}

void sub_1AE53A028()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  sub_1AE508E48();
  sub_1AE53F68C();
  sub_1AE53F914(v4, (void (*)(_BYTE *, uint64_t))sub_1AE5E90B4, sub_1AE538380);
  sub_1AE4FFC24();
  if (v5)
  {
    __break(1u);
LABEL_11:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  sub_1AE53F780();
  sub_1AE501548(&qword_1EED9B218);
  v6 = sub_1AE4FE900();
  if ((v6 & 1) != 0)
  {
    sub_1AE53F914(v6, (void (*)(_BYTE *, uint64_t))sub_1AE5E90B4, sub_1AE538380);
    sub_1AE500924();
    if (!v9)
      goto LABEL_11;
    v2 = v6;
  }
  v10 = *v1;
  if ((v3 & 1) != 0)
  {
    v11 = *(_QWORD *)(v10 + 56);
    swift_release();
    *(_QWORD *)(v11 + 8 * v2) = v0;
  }
  else
  {
    sub_1AE53F978(v6, v7, v8, v10);
  }
  sub_1AE4F66A8();
}

uint64_t sub_1AE53A0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_1AE537038(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_1AE501548(&qword_1EED9B210);
  if ((sub_1AE926A54() & 1) == 0)
    goto LABEL_5;
  v13 = sub_1AE537038(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_1AE926DE4();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7];
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_1AE53B20C(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1AE53A208()
{
  unint64_t result;

  result = qword_1ED319EE0;
  if (!qword_1ED319EE0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialNamespace, &type metadata for TrialNamespace);
    atomic_store(result, (unint64_t *)&qword_1ED319EE0);
  }
  return result;
}

void sub_1AE53A244()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;

  sub_1AE4FC4D4();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_1AE53FAFC(v7, v5, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  sub_1AE4FFC24();
  if (v11)
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = v9;
  v13 = v10;
  sub_1AE501548(&qword_1ED30FD00);
  v14 = sub_1AE53F7E8();
  if ((v14 & 1) == 0)
    goto LABEL_5;
  v16 = sub_1AE53FAFC(v14, v15, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  if ((v13 & 1) != (v17 & 1))
  {
LABEL_9:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  v12 = v16;
LABEL_5:
  v18 = *v0;
  if ((v13 & 1) != 0)
  {
    v19 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 16 * v12);
    swift_bridgeObjectRelease();
    *v19 = v8;
    v19[1] = v6;
    sub_1AE4F8180();
  }
  else
  {
    sub_1AE53B388(v12, v4, v2, v8, v6, v18);
    sub_1AE4FCE64();
  }
}

void *sub_1AE53A334()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;

  sub_1AE508E48();
  sub_1AE50A274(v1, v2);
  sub_1AE5370A4();
  sub_1AE4FFC24();
  if (v3)
  {
    __break(1u);
LABEL_9:
    result = (void *)sub_1AE926DE4();
    __break(1u);
    return result;
  }
  sub_1AE53F780();
  sub_1AE501548(&qword_1EED94988);
  if ((sub_1AE4FE900() & 1) != 0)
  {
    sub_1AE53F940();
    sub_1AE5370A4();
    sub_1AE500924();
    if (!v4)
      goto LABEL_9;
  }
  if ((v0 & 1) != 0)
  {
    sub_1AE4F66A8();
    return (void *)sub_1AE53F518(v5, v6);
  }
  else
  {
    sub_1AE509808();
    sub_1AE4F66A8();
    return sub_1AE53B3B0(v8, v9, v10, v11);
  }
}

void sub_1AE53A3DC(uint64_t a1, float a2)
{
  _QWORD **v2;
  unint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;

  sub_1AE537360(a1);
  sub_1AE4FFC24();
  if (v7)
  {
    __break(1u);
LABEL_10:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  v8 = v5;
  v9 = v6;
  sub_1AE501548(&qword_1EED9B200);
  if ((sub_1AE53F63C() & 1) != 0)
  {
    sub_1AE537360(a1);
    sub_1AE53F8F8();
    if (!v11)
      goto LABEL_10;
    v8 = v10;
  }
  v12 = *v2;
  if ((v9 & 1) != 0)
  {
    *(float *)(v12[7] + 4 * v8) = a2;
    sub_1AE53F7D4();
  }
  else
  {
    sub_1AE53B41C(v8, a1, v12, a2);
  }
}

void sub_1AE53A498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1AE508E48();
  sub_1AE50A274(v5, v6);
  sub_1AE537484();
  sub_1AE4FFC24();
  if (v7)
  {
    __break(1u);
LABEL_11:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  sub_1AE53F780();
  sub_1AE501548(&qword_1EED99600);
  v8 = sub_1AE4FE900();
  if ((v8 & 1) != 0)
  {
    sub_1AE53F940();
    sub_1AE537484();
    sub_1AE500924();
    if (!v11)
      goto LABEL_11;
    v3 = v8;
  }
  if ((v4 & 1) != 0)
  {
    sub_1AE53FAA0(v8, v9, v10, *v2);
    *(_QWORD *)(v1 + 8 * v3) = v0;
  }
  else
  {
    v12 = sub_1AE509808();
    sub_1AE53B460(v12, v13, v14, v15);
    sub_1AE53F430();
  }
  sub_1AE4F66A8();
}

uint64_t sub_1AE53A528()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  sub_1AE508E48();
  sub_1AE506F90();
  sub_1AE505F80(v2, v2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  sub_1AE4FFC24();
  if (v3)
  {
    __break(1u);
LABEL_9:
    result = sub_1AE926DE4();
    __break(1u);
    return result;
  }
  sub_1AE53FA78();
  sub_1AE501548(&qword_1EED99608);
  if ((sub_1AE50A94C() & 1) != 0)
  {
    sub_1AE505F80(v0, v4, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
    sub_1AE500924();
    if (!v5)
      goto LABEL_9;
  }
  if ((v1 & 1) != 0)
  {
    sub_1AE4F66A8();
    return sub_1AE53F4A0(v6, v7);
  }
  else
  {
    v9 = sub_1AE53F75C();
    sub_1AE53B4A0(v9, v10, v11, v12, v13);
    return sub_1AE4FB7BC();
  }
}

void sub_1AE53A5F0()
{
  sub_1AE53A6B8();
}

void sub_1AE53A5FC()
{
  sub_1AE53A608();
}

void sub_1AE53A608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  sub_1AE4FC4D4();
  sub_1AE53F620();
  sub_1AE53F65C(v5, v5, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  sub_1AE4FFC24();
  if (v6)
  {
    __break(1u);
LABEL_10:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  sub_1AE53F8E8();
  v7 = sub_1AE50A94C();
  if ((v7 & 1) != 0)
  {
    v1 = *v2;
    sub_1AE53F650(v7, v8, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
    sub_1AE500924();
    if (!v11)
      goto LABEL_10;
    v4 = v7;
  }
  if ((v3 & 1) != 0)
  {
    sub_1AE53FAE8();
    *(_QWORD *)(v1 + 8 * v4) = v0;
    sub_1AE4F8180();
  }
  else
  {
    sub_1AE53FA54(v7, v8, v9, v10, *v2);
    sub_1AE4FCE64();
  }
}

void sub_1AE53A6AC()
{
  sub_1AE53A6B8();
}

void sub_1AE53A6B8()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  sub_1AE4FC4D4();
  sub_1AE53F620();
  sub_1AE53F65C(v4, v4, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  sub_1AE4FFC24();
  if (v5)
  {
    __break(1u);
LABEL_10:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  sub_1AE53F8E8();
  v6 = sub_1AE50A94C();
  if ((v6 & 1) != 0)
  {
    sub_1AE53F650(v6, v7, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
    sub_1AE500924();
    if (!v10)
      goto LABEL_10;
    v3 = v6;
  }
  v11 = *v1;
  if ((v2 & 1) != 0)
  {
    v12 = *(_QWORD *)(v11 + 56);

    *(_QWORD *)(v12 + 8 * v3) = v0;
    sub_1AE4F8180();
  }
  else
  {
    sub_1AE53FA54(v6, v7, v8, v9, v11);
    sub_1AE4FCE64();
  }
}

void sub_1AE53A764()
{
  sub_1AE53A608();
}

void sub_1AE53A770()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  _OWORD *v9;
  __int128 v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _QWORD *v14;

  sub_1AE508E48();
  sub_1AE50A274(v4, v5);
  sub_1AE536E90();
  sub_1AE4FFC24();
  if (v6)
  {
    __break(1u);
LABEL_11:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  sub_1AE53F780();
  sub_1AE501548(&qword_1ED30FCF0);
  if ((sub_1AE4FE900() & 1) != 0)
  {
    sub_1AE53F940();
    sub_1AE536E90();
    sub_1AE500924();
    if (!v8)
      goto LABEL_11;
    v2 = v7;
  }
  if ((v3 & 1) != 0)
  {
    v9 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 56) + 48 * v2);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_1AE4F9038();
    v10 = v0[1];
    *v9 = *v0;
    v9[1] = v10;
    v9[2] = v0[2];
  }
  else
  {
    v11 = sub_1AE509808();
    sub_1AE53B0D0(v11, v12, v13, v14);
    sub_1AE53FB2C();
  }
  sub_1AE4F66A8();
}

uint64_t sub_1AE53A828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  char v14;
  __int128 *v15;
  _QWORD *v16;

  sub_1AE508E48();
  sub_1AE53F68C();
  sub_1AE53F914(v1, (void (*)(_BYTE *, uint64_t))sub_1AE5E80C4, sub_1AE537CD4);
  sub_1AE4FFC24();
  if (v4)
  {
    __break(1u);
LABEL_10:
    result = sub_1AE926DE4();
    __break(1u);
    return result;
  }
  v5 = v2;
  v6 = v3;
  sub_1AE501548(&qword_1ED30FCF8);
  v7 = sub_1AE4FE900();
  if ((v7 & 1) != 0)
  {
    sub_1AE53F914(v7, (void (*)(_BYTE *, uint64_t))sub_1AE5E80C4, sub_1AE537CD4);
    sub_1AE53F770();
    if (!v9)
      goto LABEL_10;
    v5 = v8;
  }
  if ((v6 & 1) != 0)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(*(_QWORD *)(*(_QWORD *)v0 + 56) + 40 * v5);
    sub_1AE4F7714();
    sub_1AE4F66A8();
    return sub_1AE50AF58(v10, v11);
  }
  else
  {
    sub_1AE4F66A8();
    return sub_1AE53B508(v13, v14, v15, v16);
  }
}

uint64_t sub_1AE53A904()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1AE508E48();
  sub_1AE506F90();
  sub_1AE505F80(v2, v2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  sub_1AE4FFC24();
  if (v3)
  {
    __break(1u);
LABEL_9:
    result = sub_1AE926DE4();
    __break(1u);
    return result;
  }
  sub_1AE53FA78();
  sub_1AE501548(&qword_1ED30FD28);
  if ((sub_1AE50A94C() & 1) != 0)
  {
    sub_1AE505F80(v0, v4, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
    sub_1AE500924();
    if (!v5)
      goto LABEL_9;
  }
  if ((v1 & 1) != 0)
  {
    sub_1AE4F66A8();
    return sub_1AE53F2B8(v6, v7);
  }
  else
  {
    v9 = sub_1AE53F75C();
    sub_1AE53B570(v9, v10, v11, v12, v13);
    return sub_1AE4FB7BC();
  }
}

void sub_1AE53A9D0()
{
  sub_1AE53A6B8();
}

void sub_1AE53A9DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  sub_1AE508E48();
  sub_1AE53F68C();
  sub_1AE5373F8();
  sub_1AE4FFC24();
  if (v5)
  {
    __break(1u);
LABEL_11:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  sub_1AE53F780();
  sub_1AE501548(&qword_1EED9B1E8);
  v6 = sub_1AE4FE900();
  if ((v6 & 1) != 0)
  {
    v1 = *v2;
    sub_1AE5373F8();
    sub_1AE500924();
    if (!v9)
      goto LABEL_11;
    v3 = v6;
  }
  v10 = *v2;
  if ((v4 & 1) != 0)
  {
    sub_1AE53FAA0(v6, v7, v8, v10);
    *(_QWORD *)(v1 + 8 * v3) = v0;
  }
  else
  {
    sub_1AE53F978(v6, v7, v8, v10);
  }
  sub_1AE4F66A8();
}

void sub_1AE53AA68(char a1)
{
  _QWORD **v1;
  double v2;
  unint64_t v4;
  char v5;
  char v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  _QWORD *v11;

  sub_1AE53FA48();
  sub_1AE5373F8();
  sub_1AE4FFC24();
  if (v6)
  {
    __break(1u);
LABEL_10:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  v7 = v4;
  v8 = v5;
  sub_1AE501548(&qword_1EED94750);
  if ((sub_1AE53F63C() & 1) != 0)
  {
    sub_1AE5373F8();
    sub_1AE53F8F8();
    if (!v10)
      goto LABEL_10;
    v7 = v9;
  }
  v11 = *v1;
  if ((v8 & 1) != 0)
  {
    *(double *)(v11[7] + 8 * v7) = v2;
    sub_1AE53F7D4();
  }
  else
  {
    sub_1AE53B5E0(v7, a1, v11, v2);
  }
}

void sub_1AE53AB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;

  sub_1AE53FACC();
  sub_1AE53FA48();
  sub_1AE537038(v4, v5, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  sub_1AE4FFC24();
  if (v8)
  {
    __break(1u);
LABEL_10:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  v9 = v6;
  v10 = v7;
  sub_1AE501548((uint64_t *)&unk_1EED9EDC0);
  if ((sub_1AE4FE900() & 1) != 0)
  {
    sub_1AE505F80(v1, v11, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
    sub_1AE53F770();
    if (!v13)
      goto LABEL_10;
    v9 = v12;
  }
  v14 = *v2;
  if ((v10 & 1) != 0)
  {
    *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v9) = v3;
  }
  else
  {
    sub_1AE53B624(v9, v1, v0, v14);
    swift_bridgeObjectRetain();
  }
}

void sub_1AE53AC18(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1AE53FA48();
  sub_1AE53F650(v10, v11, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  sub_1AE4FFC24();
  if (v14)
  {
    __break(1u);
    goto LABEL_9;
  }
  v15 = v12;
  v16 = v13;
  sub_1AE501548(&qword_1EED9B1F0);
  v17 = sub_1AE926A54();
  if ((v17 & 1) == 0)
    goto LABEL_5;
  v19 = sub_1AE53F650(v17, v18, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  if ((v16 & 1) != (v20 & 1))
  {
LABEL_9:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  v15 = v19;
LABEL_5:
  v21 = a2 & 1;
  v22 = *v4;
  if ((v16 & 1) != 0)
  {
    v23 = *(_QWORD *)(v22 + 56) + 24 * v15;
    *(_QWORD *)v23 = v5;
    *(_QWORD *)(v23 + 8) = a1;
    *(_BYTE *)(v23 + 16) = (_DWORD)v21 != 0;
    sub_1AE4F7740();
  }
  else
  {
    sub_1AE53B654(v15, a3, a4, a1, v21, v22);
    sub_1AE507444();
  }
}

void sub_1AE53AD34()
{
  sub_1AE53A6B8();
}

void sub_1AE53AD40()
{
  _OWORD *v0;
  uint64_t v1;
  _QWORD **v2;
  unint64_t v3;
  char v4;
  char v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  sub_1AE508E48();
  sub_1AE53FACC();
  sub_1AE537484();
  sub_1AE4FFC24();
  if (v5)
  {
    __break(1u);
LABEL_10:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  sub_1AE53F780();
  sub_1AE501548(&qword_1EED94758);
  if ((sub_1AE4FE900() & 1) != 0)
  {
    sub_1AE537484();
    sub_1AE500924();
    if (!v7)
      goto LABEL_10;
    v3 = v6;
  }
  if ((v4 & 1) != 0)
  {
    sub_1AE4F66A8();
    sub_1AE53F1C8(v8, v9);
  }
  else
  {
    sub_1AE53B6B4(v3, v0, v1, *v2);
    sub_1AE53F430();
    sub_1AE4F66A8();
  }
}

void sub_1AE53ADFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1AE508E48();
  sub_1AE50A274(v4, v5);
  sub_1AE536DB0();
  sub_1AE4FFC24();
  if (v6)
  {
    __break(1u);
LABEL_11:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  sub_1AE53F780();
  sub_1AE501548(&qword_1EED9B1E0);
  if ((sub_1AE4FE900() & 1) != 0)
  {
    sub_1AE53F940();
    sub_1AE536DB0();
    sub_1AE500924();
    if (!v8)
      goto LABEL_11;
    v2 = v7;
  }
  if ((v3 & 1) != 0)
  {
    v9 = *(_QWORD *)(*(_QWORD *)v1 + 56);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v9 + 8 * v2) = v0;
  }
  else
  {
    v10 = sub_1AE509808();
    sub_1AE53B090(v10, v11, v12, v13);
    sub_1AE53FB2C();
  }
  sub_1AE4F66A8();
}

uint64_t sub_1AE53AE90()
{
  _QWORD **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t result;

  sub_1AE4FC4D4();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  sub_1AE537588();
  sub_1AE4FFC24();
  if (v13)
  {
    __break(1u);
    goto LABEL_9;
  }
  v14 = v11;
  v15 = v12;
  sub_1AE501548(&qword_1EED9B1D8);
  if ((sub_1AE926A54() & 1) == 0)
    goto LABEL_5;
  v16 = sub_1AE537588();
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    result = sub_1AE926DE4();
    __break(1u);
    return result;
  }
  v14 = v16;
LABEL_5:
  v18 = *v0;
  if ((v15 & 1) != 0)
    return sub_1AE53F240(v10, v18[7] + 8 * v14);
  sub_1AE53B72C(v14, v8, v6, v4, v2, v10, v18);
  sub_1AE4F66C4();
  return sub_1AE4FCE64();
}

void sub_1AE53AFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD **v4;
  double v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  _QWORD *v21;

  sub_1AE53FA48();
  sub_1AE537618(v10, v11, v12, v13);
  sub_1AE4FFC24();
  if (v16)
  {
    __break(1u);
    goto LABEL_9;
  }
  v17 = v14;
  v18 = v15;
  sub_1AE501548(&qword_1ED310000);
  if ((sub_1AE53F7E8() & 1) == 0)
    goto LABEL_5;
  v19 = sub_1AE537618(a1, a2, a3, a4);
  if ((v18 & 1) != (v20 & 1))
  {
LABEL_9:
    sub_1AE926DE4();
    __break(1u);
    return;
  }
  v17 = v19;
LABEL_5:
  v21 = *v4;
  if ((v18 & 1) != 0)
  {
    *(double *)(v21[7] + 8 * v17) = v5;
    sub_1AE4F7740();
  }
  else
  {
    sub_1AE53B798(v17, a1, a2, a3, a4, v21, v5);
    sub_1AE4F66C4();
    sub_1AE507444();
  }
}

void sub_1AE53B090(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v4 = sub_1AE509D74(a1, a2, a3, a4);
  v7 = v6 + 40 * v4;
  v9 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v9;
  *(_WORD *)(v7 + 32) = *(_WORD *)(v8 + 32);
  *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v4) = v10;
  v11 = *(_QWORD *)(v5 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    sub_1AE53F878(v5, v13);
}

unint64_t sub_1AE53B0D0(unint64_t result, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v4;
  __int128 v5;
  _OWORD *v6;
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = a4[6] + 40 * result;
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(_BYTE *)(v4 + 32) = *(_BYTE *)(a2 + 32);
  v6 = (_OWORD *)(a4[7] + 48 * result);
  v7 = a3[1];
  *v6 = *a3;
  v6[1] = v7;
  v6[2] = a3[2];
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

void sub_1AE53B13C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  const void *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v6 = sub_1AE503340(a1, a2, a3, a4, a5);
  memcpy((void *)(v7 + 88 * v6), v8, 0x58uLL);
  v9 = *(_QWORD *)(a5 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a5 + 16) = v11;
    sub_1AE4F6664();
  }
}

void sub_1AE53B184(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a6[(a1 >> 6) + 8] |= 1 << a1;
  v6 = a6[6] + 24 * a1;
  *(_QWORD *)v6 = a2;
  *(_QWORD *)(v6 + 8) = a3;
  *(_BYTE *)(v6 + 16) = a4;
  *(_QWORD *)(a6[7] + 8 * a1) = a5;
  v7 = a6[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    sub_1AE53F9EC((uint64_t)a6, v9);
}

unint64_t sub_1AE53B1D0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  result = sub_1AE503340(a1, a2, a3, a4, a5);
  v8 = v7 + 40 * result;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v11 = *(_QWORD *)(v6 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    *(_QWORD *)(v6 + 16) = v13;
  return result;
}

unint64_t sub_1AE53B20C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

_OWORD *sub_1AE53B254(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1AE53F2F4(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_1AE53B2B8(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_1AE53B2FC(unint64_t result, __int16 a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_WORD *)(a4[6] + 2 * result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

uint64_t sub_1AE53B340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9B0D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1AE53B388(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v6 = sub_1AE53F6F8(a1, a2, a3, a4, a5, a6);
  v9 = (_QWORD *)(v8 + 16 * v6);
  *v9 = v10;
  v9[1] = v11;
  v12 = *(_QWORD *)(v7 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    sub_1AE53F9EC(v7, v14);
}

void *sub_1AE53B3B0(unint64_t a1, uint64_t a2, void *__src, _QWORD *a4)
{
  void *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = memcpy((void *)(a4[7] + 104 * a1), __src, 0x61uLL);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_1AE53B41C(unint64_t result, char a2, _QWORD *a3, float a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a3[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a3[6] + result) = a2;
  *(float *)(a3[7] + 4 * result) = a4;
  v4 = a3[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a3[2] = v6;
  return result;
}

void sub_1AE53B460(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v4 = sub_1AE509D74(a1, a2, a3, a4);
  v7 = (_OWORD *)(v6 + 48 * v4);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v7[2] = v8[2];
  *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v4) = v10;
  v11 = *(_QWORD *)(v5 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    sub_1AE53F878(v5, v13);
}

uint64_t sub_1AE53B4A0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1AE53F4DC(a4, a5[7] + 8 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1AE53B508(unint64_t a1, char a2, __int128 *a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  result = sub_1AE50AF58(a3, a4[7] + 40 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

void sub_1AE53B570(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  const void *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v6 = sub_1AE503340(a1, a2, a3, a4, a5);
  memcpy((void *)(v7 + 112 * v6), v8, 0x70uLL);
  v9 = *(_QWORD *)(a5 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a5 + 16) = v11;
    sub_1AE4F6664();
  }
}

void sub_1AE53B5B4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v4 = sub_1AE509D74(a1, a2, a3, a4);
  *(_BYTE *)(v7 + v4) = v6;
  *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v4) = v8;
  v9 = *(_QWORD *)(v5 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    sub_1AE53F878(v5, v11);
}

unint64_t sub_1AE53B5E0(unint64_t result, char a2, _QWORD *a3, double a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a3[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a3[6] + result) = a2;
  *(double *)(a3[7] + 8 * result) = a4;
  v4 = a3[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a3[2] = v6;
  return result;
}

void sub_1AE53B624(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v4 = sub_1AE509D74(a1, a2, a3, a4);
  v7 = (_QWORD *)(v6 + 16 * v4);
  *v7 = v8;
  v7[1] = v9;
  *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v4) = v10;
  v11 = *(_QWORD *)(v5 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    sub_1AE53F878(v5, v13);
}

void sub_1AE53B654(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v6 = sub_1AE53F6F8(a1, a2, a3, a4, a5, a6);
  v9 = v8 + 24 * v6;
  *(_QWORD *)v9 = v10;
  *(_QWORD *)(v9 + 8) = v11;
  *(_BYTE *)(v9 + 16) = v12 & 1;
  v13 = *(_QWORD *)(v7 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    sub_1AE53F9EC(v7, v15);
}

unint64_t sub_1AE53B68C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  result = sub_1AE503340(a1, a2, a3, a4, a5);
  *(_QWORD *)(v8 + 8 * result) = v7;
  v9 = *(_QWORD *)(v6 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    *(_QWORD *)(v6 + 16) = v11;
  return result;
}

uint64_t sub_1AE53B6B4(unint64_t a1, _OWORD *a2, uint64_t a3, _QWORD *a4)
{
  _OWORD *v5;
  __int128 v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = (_OWORD *)(a4[6] + 48 * a1);
  v6 = a2[1];
  *v5 = *a2;
  v5[1] = v6;
  v5[2] = a2[2];
  result = sub_1AE53F204(a3, a4[7] + 48 * a1);
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

uint64_t sub_1AE53B72C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a7[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a7[6] + 32 * a1);
  *v8 = a2;
  v8[1] = a3;
  v8[2] = a4;
  v8[3] = a5;
  result = sub_1AE53F27C(a6, a7[7] + 8 * a1);
  v10 = a7[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a7[2] = v12;
  return result;
}

unint64_t sub_1AE53B798(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, double a7)
{
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a6[6] + 32 * result);
  *v7 = a2;
  v7[1] = a3;
  v7[2] = a4;
  v7[3] = a5;
  *(double *)(a6[7] + 8 * result) = a7;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

uint64_t (*sub_1AE53B7E4(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1AE53C0D8(v6);
  v6[10] = sub_1AE53BA7C(v6 + 4, a2, a3);
  return sub_1AE53B874;
}

uint64_t (*sub_1AE53B878(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1AE53C0F8(v4);
  v4[9] = sub_1AE53BC20((uint64_t)(v4 + 4), a2);
  return sub_1AE53B8F4;
}

uint64_t (*sub_1AE53B8F8(_QWORD *a1, __int16 a2))()
{
  _QWORD *v4;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_1AE53C0D8(v4);
  v4[9] = sub_1AE53BDCC((uint64_t)(v4 + 4), a2);
  return sub_1AE53B8F4;
}

void sub_1AE53B974(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  sub_1AE53F808(*(_QWORD *)a1 + 32, *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72));
  sub_1AE53FAF4((uint64_t)v1);
  sub_1AE53F5F8(v1);
}

uint64_t (*sub_1AE53B9A4(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1AE53C0D8(v6);
  v6[10] = sub_1AE53BF68(v6 + 4, a2, a3);
  return sub_1AE53B874;
}

void sub_1AE53BA34(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  sub_1AE53F808(*(_QWORD *)a1 + 32, *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80));
  sub_1AE4F9038();
  v2(v1, 0);
  free(v1);
}

void (*sub_1AE53BA7C(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *a1)
{
  uint64_t *v3;
  uint64_t *v4;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  void (*result)(uint64_t *);

  v4 = v3;
  v8 = (char *)malloc(0x48uLL);
  *a1 = v8;
  *((_QWORD *)v8 + 6) = a3;
  *((_QWORD *)v8 + 7) = v4;
  *((_QWORD *)v8 + 5) = a2;
  v9 = *v4;
  v10 = sub_1AE537038(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  v8[33] = v11 & 1;
  if (__OFADD__(*(_QWORD *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v12 = v10;
  v13 = v11;
  sub_1AE501548(&qword_1EED9B1D0);
  if ((sub_1AE926A54() & 1) != 0)
  {
    v14 = sub_1AE537038(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
    if ((v13 & 1) == (v15 & 1))
    {
      v12 = v14;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t *))sub_1AE926DE4();
    __break(1u);
    return result;
  }
LABEL_5:
  *((_QWORD *)v8 + 8) = v12;
  if ((v13 & 1) != 0)
  {
    v16 = *(_QWORD *)(*v4 + 56) + 40 * v12;
    v17 = *(_QWORD *)v16;
    v18 = *(_OWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 24);
    v20 = *(_BYTE *)(v16 + 32);
  }
  else
  {
    v17 = 0;
    v19 = 0;
    v20 = 0;
    v18 = 0uLL;
  }
  *(_QWORD *)v8 = v17;
  *(_OWORD *)(v8 + 8) = v18;
  *((_QWORD *)v8 + 3) = v19;
  v8[32] = v20;
  return sub_1AE53BBE0;
}

void sub_1AE53BBE0(uint64_t *a1)
{
  uint64_t *v1;

  v1 = (uint64_t *)*a1;
  sub_1AE53C268(*a1, *(_BYTE *)(*a1 + 33), *(uint64_t **)(*a1 + 56), *(_QWORD *)(*a1 + 64), *(_QWORD *)(*a1 + 40), *(_QWORD *)(*a1 + 48));
  sub_1AE53F134(*v1, v1[1]);
  sub_1AE53F5F8(v1);
}

void (*sub_1AE53BC20(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void (*result)(uint64_t);

  v3 = v2;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 24) = a2;
  v6 = *v2;
  v7 = sub_1AE5370E0(a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E90B4, sub_1AE538380);
  *(_BYTE *)(a1 + 25) = v8 & 1;
  if (__OFADD__(*(_QWORD *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v9 = v7;
  v10 = v8;
  sub_1AE501548(&qword_1EED9B118);
  if ((sub_1AE926A54() & 1) != 0)
  {
    v11 = sub_1AE5370E0(a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E90B4, sub_1AE538380);
    if ((v10 & 1) == (v12 & 1))
    {
      v9 = v11;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t))sub_1AE926DE4();
    __break(1u);
    return result;
  }
LABEL_5:
  *(_QWORD *)(a1 + 16) = v9;
  if ((v10 & 1) != 0)
    v13 = *(_QWORD *)(*(_QWORD *)(*v3 + 56) + 8 * v9);
  else
    v13 = 0;
  *(_QWORD *)a1 = v13;
  return sub_1AE53BD3C;
}

void sub_1AE53BD3C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)a1;
  if (!*(_QWORD *)a1)
  {
    if ((*(_BYTE *)(a1 + 25) & 1) != 0)
    {
      sub_1AE501548(&qword_1EED9B100);
      sub_1AE53A208();
      sub_1AE4F7714();
      sub_1AE53F78C();
      return;
    }
    goto LABEL_6;
  }
  v2 = **(_QWORD ***)(a1 + 8);
  if ((*(_BYTE *)(a1 + 25) & 1) != 0)
  {
    *(_QWORD *)(v2[7] + 8 * *(_QWORD *)(a1 + 16)) = v1;
LABEL_6:
    sub_1AE4F6624();
    return;
  }
  sub_1AE53B2B8(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), v1, v2);
}

void (*sub_1AE53BDCC(uint64_t a1, __int16 a2))(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  void (*result)(uint64_t);

  v3 = v2;
  *(_QWORD *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 24) = a2;
  v6 = *v2;
  v7 = sub_1AE537138(a2);
  *(_BYTE *)(a1 + 26) = v8 & 1;
  if (__OFADD__(*(_QWORD *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v9 = v7;
  v10 = v8;
  sub_1AE501548(&qword_1EED9B108);
  if ((sub_1AE926A54() & 1) != 0)
  {
    v11 = sub_1AE537138(a2);
    if ((v10 & 1) == (v12 & 1))
    {
      v9 = v11;
      goto LABEL_5;
    }
LABEL_10:
    sub_1AE501548(&qword_1EED9B0E0);
    result = (void (*)(uint64_t))sub_1AE926DE4();
    __break(1u);
    return result;
  }
LABEL_5:
  *(_QWORD *)(a1 + 16) = v9;
  if ((v10 & 1) != 0)
    v13 = *(_QWORD *)(*(_QWORD *)(*v3 + 56) + 8 * v9);
  else
    v13 = 0;
  *(_QWORD *)a1 = v13;
  return sub_1AE53BECC;
}

void sub_1AE53BECC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)a1;
  if (!*(_QWORD *)a1)
  {
    if ((*(_BYTE *)(a1 + 26) & 1) != 0)
    {
      sub_1AE501548(&qword_1EED9B0E0);
      sub_1AE501548(&qword_1EED9B0E8);
      sub_1AE536C58();
      sub_1AE4F7714();
      sub_1AE53F78C();
      return;
    }
    goto LABEL_6;
  }
  v2 = **(_QWORD ***)(a1 + 8);
  if ((*(_BYTE *)(a1 + 26) & 1) != 0)
  {
    *(_QWORD *)(v2[7] + 8 * *(_QWORD *)(a1 + 16)) = v1;
LABEL_6:
    sub_1AE4F6624();
    return;
  }
  sub_1AE53B2FC(*(_QWORD *)(a1 + 16), *(_WORD *)(a1 + 24), v1, v2);
}

void (*sub_1AE53BF68(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[2] = a3;
  v8[3] = v4;
  v8[1] = a2;
  v9 = *v4;
  v10 = sub_1AE537038(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
  *((_BYTE *)v8 + 40) = v11 & 1;
  if (__OFADD__(*(_QWORD *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v12 = v10;
  v13 = v11;
  sub_1AE501548(&qword_1EED9B210);
  if ((sub_1AE926A54() & 1) != 0)
  {
    v14 = sub_1AE537038(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE537BF4);
    if ((v13 & 1) == (v15 & 1))
    {
      v12 = v14;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t **))sub_1AE926DE4();
    __break(1u);
    return result;
  }
LABEL_5:
  v8[4] = v12;
  if ((v13 & 1) != 0)
    v16 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v12);
  else
    v16 = 0;
  *v8 = v16;
  return sub_1AE53C0A0;
}

void sub_1AE53C0A0(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_1AE53C370(*a1, *((_BYTE *)*a1 + 40), (_QWORD **)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  sub_1AE53F5F8(v1);
}

uint64_t (*sub_1AE53C0D8(_QWORD *a1))()
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1AE53F5EC;
}

uint64_t (*sub_1AE53C0F8(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1AE53C118;
}

uint64_t sub_1AE53C118(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_1AE53C124(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD __src[11];

  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = a1[3];
  v11 = a1[4];
  v12 = a1[5];
  v13 = a1[6];
  v14 = a1[7];
  v16 = a1[8];
  v15 = a1[9];
  v17 = a1[10];
  if (v8)
  {
    v19 = *a1;
    __src[0] = *a1;
    __src[1] = v8;
    __src[2] = v9;
    __src[3] = v10;
    __src[4] = v11;
    __src[5] = v12;
    __src[6] = v13;
    __src[7] = v14;
    __src[8] = v16;
    __src[9] = v15;
    __src[10] = v17;
    if ((a2 & 1) != 0)
    {
      memcpy((void *)(*(_QWORD *)(*a3 + 56) + 88 * a4), __src, 0x58uLL);
    }
    else
    {
      sub_1AE53B13C(a4, a5, a6, (uint64_t)__src, *a3);
      sub_1AE4FB764();
    }
    goto LABEL_7;
  }
  if ((a2 & 1) != 0)
  {
    v19 = *a1;
    swift_arrayDestroy();
    sub_1AE926A6C();
LABEL_7:
    v7 = v19;
  }
  return sub_1AE53F580(v7, v8);
}

uint64_t sub_1AE53C268(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  __int128 v14;
  __int128 v15;
  char v16;

  v7 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_BYTE *)(a1 + 32);
  if (v6)
  {
    *(_QWORD *)&v14 = *(_QWORD *)a1;
    *((_QWORD *)&v14 + 1) = v6;
    *(_QWORD *)&v15 = v8;
    *((_QWORD *)&v15 + 1) = v9;
    v16 = v10;
    if ((a2 & 1) != 0)
    {
      v11 = *(_QWORD *)(*a3 + 56) + 40 * a4;
      v12 = v15;
      *(_OWORD *)v11 = v14;
      *(_OWORD *)(v11 + 16) = v12;
      *(_BYTE *)(v11 + 32) = v16;
    }
    else
    {
      sub_1AE53B1D0(a4, a5, a6, (uint64_t)&v14, *a3);
      swift_bridgeObjectRetain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_1AE926A6C();
  }
  return sub_1AE53F164(v7, v6);
}

uint64_t sub_1AE53C370(uint64_t *a1, char a2, _QWORD **a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  v6 = *a1;
  if (*a1)
  {
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)((*a3)[7] + 8 * a4) = v6;
    }
    else
    {
      sub_1AE53B20C(a4, a5, a6, v6, *a3);
      swift_bridgeObjectRetain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_1AE501548(&qword_1EED9B0D8);
    sub_1AE926A6C();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE53C430(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  sub_1AE501548(&qword_1EED9B208);
  result = sub_1AE926AF0();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *v16;
    result = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(a1 + 56) + 88 * i + 32);
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v18 = (_QWORD *)(v3[6] + 16 * i);
    *v18 = v17;
    v18[1] = result;
    *(_BYTE *)(v3[7] + i) = (_BYTE)v16;
    v19 = v3[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v21;
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1AE53C5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9B0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1AE53C62C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1AE501548(a3);
  sub_1AE4F775C(v3);
  sub_1AE4F6664();
}

uint64_t sub_1AE53C658(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1EED9B0C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AE53C698(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 && a3 != 2)
  {
    if (a3 != 1)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_1AE53C6EC()
{
  unint64_t result;

  result = qword_1EED9B140;
  if (!qword_1EED9B140)
  {
    result = MEMORY[0x1AF454B70]("-nI7", &type metadata for AssetRegistryParameters.LocalOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B140);
  }
  return result;
}

unint64_t sub_1AE53C728()
{
  unint64_t result;

  result = qword_1EED9B150;
  if (!qword_1EED9B150)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE934944, &type metadata for AssetRegistryParameters.RemoteOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B150);
  }
  return result;
}

uint64_t sub_1AE53C764(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return sub_1AE53C7C0(a2, a3);
  }
  return result;
}

uint64_t sub_1AE53C7C0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1AE53C7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AE53C8D0(a1, a2, a3, (uint64_t (*)(void))sub_1AE53C804, (uint64_t (*)(void))sub_1AE53C840);
}

unint64_t sub_1AE53C804()
{
  unint64_t result;

  result = qword_1EED9B170;
  if (!qword_1EED9B170)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryParameters.LocalOptions, &type metadata for AssetRegistryParameters.LocalOptions);
    atomic_store(result, (unint64_t *)&qword_1EED9B170);
  }
  return result;
}

unint64_t sub_1AE53C840()
{
  unint64_t result;

  result = qword_1EED9B178;
  if (!qword_1EED9B178)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryParameters.LocalOptions, &type metadata for AssetRegistryParameters.LocalOptions);
    atomic_store(result, (unint64_t *)&qword_1EED9B178);
  }
  return result;
}

unint64_t sub_1AE53C880()
{
  unint64_t result;

  result = qword_1EED9B180;
  if (!qword_1EED9B180)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryParameters.RemoteEndpointType, &type metadata for AssetRegistryParameters.RemoteEndpointType);
    atomic_store(result, (unint64_t *)&qword_1EED9B180);
  }
  return result;
}

void sub_1AE53C8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AE53C8D0(a1, a2, a3, (uint64_t (*)(void))sub_1AE53C8FC, (uint64_t (*)(void))sub_1AE53C938);
}

void sub_1AE53C8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(_QWORD *)(a1 + 8) = a4();
  *(_QWORD *)(a1 + 16) = a5();
  sub_1AE4F6664();
}

unint64_t sub_1AE53C8FC()
{
  unint64_t result;

  result = qword_1EED9B188;
  if (!qword_1EED9B188)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryParameters.RemoteOptions, &type metadata for AssetRegistryParameters.RemoteOptions);
    atomic_store(result, (unint64_t *)&qword_1EED9B188);
  }
  return result;
}

unint64_t sub_1AE53C938()
{
  unint64_t result;

  result = qword_1EED9B190;
  if (!qword_1EED9B190)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryParameters.RemoteOptions, &type metadata for AssetRegistryParameters.RemoteOptions);
    atomic_store(result, (unint64_t *)&qword_1EED9B190);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AssetRegistryAssetLocalAvailabilityInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for AssetRegistryAsset(0);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_1AE924780();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = *(int *)(v7 + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = *(uint64_t *)((char *)a2 + v10);
      v14 = *(uint64_t *)((char *)a2 + v10 + 8);
      v15 = *(uint64_t *)((char *)a2 + v10 + 16);
      v16 = *((_BYTE *)a2 + v10 + 26);
      v17 = *(_WORD *)((char *)a2 + v10 + 24);
      sub_1AE536B1C(v13, v14, v15, v17);
      *(_QWORD *)v11 = v13;
      *((_QWORD *)v11 + 1) = v14;
      *((_QWORD *)v11 + 2) = v15;
      v11[26] = v16;
      *((_WORD *)v11 + 12) = v17;
      v18 = *((_QWORD *)v12 + 5);
      *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
      *((_QWORD *)v11 + 5) = v18;
      v19 = *(int *)(v7 + 24);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = *(uint64_t *)((char *)a2 + v19);
      swift_bridgeObjectRetain();
      if (v22)
      {
        *(_QWORD *)v20 = v22;
        v23 = *((_QWORD *)v21 + 2);
        swift_bridgeObjectRetain();
        if (v23)
        {
          *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
          *((_QWORD *)v20 + 2) = v23;
          *((_DWORD *)v20 + 6) = *((_DWORD *)v21 + 6);
          v24 = *((_QWORD *)v21 + 5);
          *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
          *((_QWORD *)v20 + 5) = v24;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v26 = *(_OWORD *)(v21 + 24);
          *(_OWORD *)(v20 + 8) = *(_OWORD *)(v21 + 8);
          *(_OWORD *)(v20 + 24) = v26;
          *((_QWORD *)v20 + 5) = *((_QWORD *)v21 + 5);
        }
      }
      else
      {
        v25 = *((_OWORD *)v21 + 1);
        *(_OWORD *)v20 = *(_OWORD *)v21;
        *((_OWORD *)v20 + 1) = v25;
        *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
      }
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for AssetRegistryAssetLocalAvailabilityInfo(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t *v5;

  v2 = type metadata accessor for AssetRegistryAsset(0);
  result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1AE924780();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    sub_1AE536AF8(*(_QWORD *)(a1 + *(int *)(v2 + 20)), *(_QWORD *)(a1 + *(int *)(v2 + 20) + 8), *(_QWORD *)(a1 + *(int *)(v2 + 20) + 16), *(_WORD *)(a1 + *(int *)(v2 + 20) + 24));
    swift_bridgeObjectRelease();
    v5 = (uint64_t *)(a1 + *(int *)(v2 + 24));
    result = *v5;
    if (*v5)
    {
      swift_bridgeObjectRelease();
      result = v5[2];
      if (result)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

char *initializeWithCopy for AssetRegistryAssetLocalAvailabilityInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;

  v6 = type metadata accessor for AssetRegistryAsset(0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1AE924780();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v6 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *(_QWORD *)&a2[v8];
    v12 = *(_QWORD *)&a2[v8 + 8];
    v13 = *(_QWORD *)&a2[v8 + 16];
    v14 = a2[v8 + 26];
    v15 = *(_WORD *)&a2[v8 + 24];
    sub_1AE536B1C(v11, v12, v13, v15);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    *((_QWORD *)v9 + 2) = v13;
    v9[26] = v14;
    *((_WORD *)v9 + 12) = v15;
    v16 = *((_QWORD *)v10 + 5);
    *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    *((_QWORD *)v9 + 5) = v16;
    v17 = *(int *)(v6 + 24);
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = *(_QWORD *)&a2[v17];
    swift_bridgeObjectRetain();
    if (v20)
    {
      *(_QWORD *)v18 = v20;
      v21 = *((_QWORD *)v19 + 2);
      swift_bridgeObjectRetain();
      if (v21)
      {
        *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
        *((_QWORD *)v18 + 2) = v21;
        *((_DWORD *)v18 + 6) = *((_DWORD *)v19 + 6);
        v22 = *((_QWORD *)v19 + 5);
        *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
        *((_QWORD *)v18 + 5) = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v24 = *(_OWORD *)(v19 + 24);
        *(_OWORD *)(v18 + 8) = *(_OWORD *)(v19 + 8);
        *(_OWORD *)(v18 + 24) = v24;
        *((_QWORD *)v18 + 5) = *((_QWORD *)v19 + 5);
      }
    }
    else
    {
      v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v23;
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    }
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for AssetRegistryAssetLocalAvailabilityInfo(char *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int16 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __int16 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  _OWORD *v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;

  v6 = type metadata accessor for AssetRegistryAsset(0);
  v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (v8)
    {
      sub_1AE53D160((uint64_t)a1, type metadata accessor for AssetRegistryAsset);
      goto LABEL_8;
    }
    v23 = sub_1AE924780();
    (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(a1, a2, v23);
    v24 = *(int *)(v6 + 20);
    v25 = &a1[v24];
    v26 = &a2[v24];
    v27 = *(_QWORD *)&a2[v24];
    v28 = *(_QWORD *)&a2[v24 + 8];
    v29 = *(_QWORD *)&a2[v24 + 16];
    v30 = a2[v24 + 26];
    v31 = *(_WORD *)&a2[v24 + 24];
    sub_1AE536B1C(v27, v28, v29, v31);
    v32 = *(_QWORD *)v25;
    v33 = *((_QWORD *)v25 + 1);
    v34 = *((_QWORD *)v25 + 2);
    v35 = *((_WORD *)v25 + 12);
    *(_QWORD *)v25 = v27;
    *((_QWORD *)v25 + 1) = v28;
    *((_QWORD *)v25 + 2) = v29;
    *((_WORD *)v25 + 12) = v31;
    v25[26] = v30;
    sub_1AE536AF8(v32, v33, v34, v35);
    *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
    *((_QWORD *)v25 + 5) = *((_QWORD *)v26 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v36 = *(int *)(v6 + 24);
    v37 = &a1[v36];
    v38 = &a2[v36];
    v39 = *(_QWORD *)&a2[v36];
    if (*(_QWORD *)&a1[v36])
    {
      if (!v39)
      {
        sub_1AE53D134((uint64_t)&a1[v36]);
        v53 = *((_OWORD *)v38 + 1);
        v52 = *((_OWORD *)v38 + 2);
        *(_OWORD *)v37 = *(_OWORD *)v38;
        *((_OWORD *)v37 + 1) = v53;
        *((_OWORD *)v37 + 2) = v52;
        return a1;
      }
      *(_QWORD *)v37 = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v40 = v37 + 8;
      v41 = v38 + 8;
      v42 = *((_QWORD *)v38 + 2);
      if (*((_QWORD *)v37 + 2))
      {
        if (v42)
        {
          *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
          *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *((_DWORD *)v37 + 6) = *((_DWORD *)v38 + 6);
          *((_QWORD *)v37 + 4) = *((_QWORD *)v38 + 4);
          *((_QWORD *)v37 + 5) = *((_QWORD *)v38 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1AE53D100((uint64_t)(v37 + 8));
          v56 = *((_QWORD *)v38 + 5);
          v57 = *(_OWORD *)(v38 + 24);
          *(_OWORD *)v40 = *v41;
          *(_OWORD *)(v37 + 24) = v57;
          *((_QWORD *)v37 + 5) = v56;
        }
        return a1;
      }
      if (v42)
      {
LABEL_23:
        *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
        *((_QWORD *)v37 + 2) = *((_QWORD *)v38 + 2);
        *((_DWORD *)v37 + 6) = *((_DWORD *)v38 + 6);
        *((_QWORD *)v37 + 4) = *((_QWORD *)v38 + 4);
        *((_QWORD *)v37 + 5) = *((_QWORD *)v38 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return a1;
      }
      v49 = *v41;
      v50 = *(_OWORD *)(v38 + 24);
      v51 = *((_QWORD *)v38 + 5);
    }
    else
    {
      if (!v39)
      {
        v54 = *(_OWORD *)v38;
        v55 = *((_OWORD *)v38 + 2);
        *((_OWORD *)v37 + 1) = *((_OWORD *)v38 + 1);
        *((_OWORD *)v37 + 2) = v55;
        *(_OWORD *)v37 = v54;
        return a1;
      }
      *(_QWORD *)v37 = v39;
      v40 = v37 + 8;
      v48 = *((_QWORD *)v38 + 2);
      swift_bridgeObjectRetain();
      if (v48)
        goto LABEL_23;
      v49 = *(_OWORD *)(v38 + 8);
      v50 = *(_OWORD *)(v38 + 24);
      v51 = *((_QWORD *)v38 + 5);
    }
    *((_QWORD *)v40 + 4) = v51;
    *(_OWORD *)v40 = v49;
    *((_OWORD *)v40 + 1) = v50;
    return a1;
  }
  if (v8)
  {
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1AE924780();
  (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  v10 = *(int *)(v6 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)&a2[v10];
  v14 = *(_QWORD *)&a2[v10 + 8];
  v15 = *(_QWORD *)&a2[v10 + 16];
  v16 = a2[v10 + 26];
  v17 = *(_WORD *)&a2[v10 + 24];
  sub_1AE536B1C(v13, v14, v15, v17);
  *(_QWORD *)v11 = v13;
  *((_QWORD *)v11 + 1) = v14;
  *((_QWORD *)v11 + 2) = v15;
  v11[26] = v16;
  *((_WORD *)v11 + 12) = v17;
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  *((_QWORD *)v11 + 5) = *((_QWORD *)v12 + 5);
  v18 = *(int *)(v6 + 24);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *(_QWORD *)&a2[v18];
  swift_bridgeObjectRetain();
  if (v21)
  {
    *(_QWORD *)v19 = v21;
    v22 = *((_QWORD *)v20 + 2);
    swift_bridgeObjectRetain();
    if (v22)
    {
      *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
      *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
      *((_DWORD *)v19 + 6) = *((_DWORD *)v20 + 6);
      *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
      *((_QWORD *)v19 + 5) = *((_QWORD *)v20 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v45 = *(_OWORD *)(v20 + 8);
      v46 = *(_OWORD *)(v20 + 24);
      *((_QWORD *)v19 + 5) = *((_QWORD *)v20 + 5);
      *(_OWORD *)(v19 + 8) = v45;
      *(_OWORD *)(v19 + 24) = v46;
    }
  }
  else
  {
    v43 = *(_OWORD *)v20;
    v44 = *((_OWORD *)v20 + 2);
    *((_OWORD *)v19 + 1) = *((_OWORD *)v20 + 1);
    *((_OWORD *)v19 + 2) = v44;
    *(_OWORD *)v19 = v43;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1AE53D100(uint64_t a1)
{
  destroy for TrialAssetManager.ExperimentIdentifiers();
  return a1;
}

uint64_t sub_1AE53D134(uint64_t a1)
{
  destroy for AssetRegistryAsset.Metadata.TrialMetadata(a1);
  return a1;
}

void sub_1AE53D160(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_1AE4F6664();
}

char *initializeWithTake for AssetRegistryAssetLocalAvailabilityInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  v6 = type metadata accessor for AssetRegistryAsset(0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1AE924780();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = *(int *)(v6 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    v12 = *(int *)(v6 + 24);
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = *((_OWORD *)v14 + 1);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v15;
    *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for AssetRegistryAssetLocalAvailabilityInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;

  v6 = type metadata accessor for AssetRegistryAsset(0);
  v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v19 = sub_1AE924780();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(a1, a2, v19);
      v20 = *(int *)(v6 + 20);
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = *(_QWORD *)&a2[v20 + 16];
      v24 = v22[26];
      v25 = *((_WORD *)v22 + 12);
      v26 = *(_QWORD *)v21;
      v27 = *((_QWORD *)v21 + 1);
      v28 = *((_QWORD *)v21 + 2);
      v29 = *((_WORD *)v21 + 12);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *((_QWORD *)v21 + 2) = v23;
      *((_WORD *)v21 + 12) = v25;
      v21[26] = v24;
      sub_1AE536AF8(v26, v27, v28, v29);
      v30 = *((_QWORD *)v22 + 5);
      *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
      *((_QWORD *)v21 + 5) = v30;
      swift_bridgeObjectRelease();
      v31 = *(int *)(v6 + 24);
      v32 = (uint64_t)&a1[v31];
      v33 = &a2[v31];
      if (*(_QWORD *)&a1[v31])
      {
        if (*(_QWORD *)v33)
        {
          *(_QWORD *)v32 = *(_QWORD *)v33;
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v32 + 16))
          {
            v34 = *((_QWORD *)v33 + 2);
            if (v34)
            {
              *(_QWORD *)(v32 + 8) = *((_QWORD *)v33 + 1);
              *(_QWORD *)(v32 + 16) = v34;
              swift_bridgeObjectRelease();
              *(_DWORD *)(v32 + 24) = *((_DWORD *)v33 + 6);
              v35 = *((_QWORD *)v33 + 5);
              *(_QWORD *)(v32 + 32) = *((_QWORD *)v33 + 4);
              *(_QWORD *)(v32 + 40) = v35;
              swift_bridgeObjectRelease();
              return a1;
            }
            sub_1AE53D100(v32 + 8);
          }
          v37 = *(_OWORD *)(v33 + 24);
          *(_OWORD *)(v32 + 8) = *(_OWORD *)(v33 + 8);
          *(_OWORD *)(v32 + 24) = v37;
          *(_QWORD *)(v32 + 40) = *((_QWORD *)v33 + 5);
          return a1;
        }
        sub_1AE53D134(v32);
      }
      v36 = *((_OWORD *)v33 + 1);
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *(_OWORD *)(v32 + 16) = v36;
      *(_OWORD *)(v32 + 32) = *((_OWORD *)v33 + 2);
      return a1;
    }
    sub_1AE53D160((uint64_t)a1, type metadata accessor for AssetRegistryAsset);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1AE924780();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  v10 = *(int *)(v6 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  v14 = *(int *)(v6 + 24);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocalAvailabilityInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE53D494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1AE53F798();
  v5 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocalAvailabilityInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE53D4E0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1AE53F798();
  return sub_1AE4F66D4(a1, v5, a3, v6);
}

uint64_t sub_1AE53D51C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AssetRegistryAsset(0);
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v2);
}

uint64_t sub_1AE53D54C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AssetRegistryAsset(0);
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v4);
}

uint64_t sub_1AE53D584()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AssetRegistryAsset(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of AssetRegistryProtocol.trialAssetManagerPolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AssetRegistryProtocol.asset(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_1AE4FC490;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of AssetRegistryProtocol.assets(for:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v1 = (_QWORD *)sub_1AE4FC56C();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1AE53D6DC;
  v2 = sub_1AE509808();
  return v4(v2);
}

uint64_t sub_1AE53D6DC(uint64_t a1)
{
  uint64_t v1;

  sub_1AE4FFC38();
  return sub_1AE4FE914(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t dispatch thunk of AssetRegistryProtocol.locallyAvailableAsset(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of AssetRegistryProtocol.assetEntry(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t type metadata accessor for AssetRegistry()
{
  return objc_opt_self();
}

uint64_t method lookup function for AssetRegistry()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for AssetRegistry.TrialAssetManagerPolicy(uint64_t a1)
{
  return sub_1AE53C698(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void _s20IntelligencePlatform13AssetRegistryC23TrialAssetManagerPolicyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1AE536A94(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1AE4F6624();
}

uint64_t assignWithCopy for AssetRegistry.TrialAssetManagerPolicy(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1AE536A94(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1AE53C698(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for AssetRegistry.TrialAssetManagerPolicy(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AssetRegistry.TrialAssetManagerPolicy(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1AE53C698(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistry.TrialAssetManagerPolicy(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistry.TrialAssetManagerPolicy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AE53D8E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1AE53D8F0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void type metadata accessor for AssetRegistry.TrialAssetManagerPolicy()
{
  sub_1AE4F67D4();
}

uint64_t destroy for AssetRegistry.TrialAssetManagerPolicy.PersistentInfo()
{
  swift_release();
  return swift_release();
}

void _s20IntelligencePlatform13AssetRegistryC23TrialAssetManagerPolicyO14PersistentInfoVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_retain();
  swift_retain();
  sub_1AE4F6664();
}

_QWORD *assignWithCopy for AssetRegistry.TrialAssetManagerPolicy.PersistentInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for AssetRegistry.TrialAssetManagerPolicy.PersistentInfo(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AssetRegistry.TrialAssetManagerPolicy.PersistentInfo()
{
  sub_1AE4F67D4();
}

uint64_t dispatch thunk of AssetRegistryParametersOptionsProtocol.loadOverriddenAssetEntries.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

_WORD *initializeBufferWithCopyOfBuffer for AssetRegistryParameters(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AssetRegistryParameters(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;

  if (!a2)
  {
    v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x3FFF)
  {
    if (a2 + 49153 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 49153 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 49154;
    return v5 + 1;
  }
LABEL_17:
  v5 = (*a1 & 0xFE | (*a1 >> 15) | (*a1 >> 1) & 0x3F00) ^ 0x3FFF;
  if (v5 >= 0x3FFE)
    v5 = -1;
  return v5 + 1;
}

uint64_t storeEnumTagSinglePayload for AssetRegistryParameters(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  if (a3 + 49153 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 49153 < 0xFF0000)
    v4 = 1;
  else
    v4 = v3;
  if (a3 >= 0x3FFF)
    v5 = v4;
  else
    v5 = 0;
  if (a2 <= 0x3FFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE53DBA0 + 4 * byte_1AE9344BD[v5]))();
  *a1 = a2 - 0x3FFF;
  return ((uint64_t (*)(void))((char *)sub_1AE53DBD8 + 4 * byte_1AE9344B8[v5]))();
}

uint64_t sub_1AE53DBD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AE53DBE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1AE53DBE8);
  return result;
}

uint64_t sub_1AE53DC08(uint64_t result, int a2)
{
  unsigned int v2;

  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1AE53DC10);
  v2 = ((-a2 >> 1) & 0x1FFF) - (a2 << 13);
  *(_WORD *)result = (4 * v2) & 0xFE00 | (2 * (v2 & 0x7F));
  return result;
}

uint64_t sub_1AE53DC14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AE53DC1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AE53DC28(unsigned __int16 *a1)
{
  return *a1 >> 15;
}

_WORD *sub_1AE53DC34(_WORD *result)
{
  *result &= ~0x8000u;
  return result;
}

_WORD *sub_1AE53DC44(_WORD *result, __int16 a2)
{
  *result = *result & 0x101 | (a2 << 15);
  return result;
}

void type metadata accessor for AssetRegistryParameters()
{
  sub_1AE4F67D4();
}

void type metadata accessor for AssetRegistryParameters.LocalOptions()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for AssetRegistryParameters.RemoteEndpointType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE53DCBC + 4 * byte_1AE9344C7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE53DCF0 + 4 * byte_1AE9344C2[v4]))();
}

uint64_t sub_1AE53DCF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE53DCF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE53DD00);
  return result;
}

uint64_t sub_1AE53DD0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE53DD14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE53DD18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE53DD20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1AE53DD2C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

void type metadata accessor for AssetRegistryParameters.RemoteEndpointType()
{
  sub_1AE4F67D4();
}

uint64_t getEnumTagSinglePayload for AssetRegistryParameters.RemoteOptions(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryParameters.RemoteOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE53DE28 + 4 * byte_1AE9344D1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE53DE5C + 4 * byte_1AE9344CC[v4]))();
}

uint64_t sub_1AE53DE5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE53DE64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE53DE6CLL);
  return result;
}

uint64_t sub_1AE53DE78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE53DE80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE53DE84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE53DE8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for AssetRegistryParameters.RemoteOptions()
{
  sub_1AE4F67D4();
}

_QWORD *initializeBufferWithCopyOfBuffer for AssetRegistryAsset(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int16 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AE924780();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)((char *)a2 + v8);
    v12 = *(_QWORD *)((char *)a2 + v8 + 8);
    v13 = *(_QWORD *)((char *)a2 + v8 + 16);
    v14 = *((_BYTE *)a2 + v8 + 26);
    v15 = *(_WORD *)((char *)a2 + v8 + 24);
    sub_1AE536B1C(v11, v12, v13, v15);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    *((_QWORD *)v9 + 2) = v13;
    v9[26] = v14;
    *((_WORD *)v9 + 12) = v15;
    v16 = *((_QWORD *)v10 + 5);
    *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    *((_QWORD *)v9 + 5) = v16;
    v17 = *(int *)(a3 + 24);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *(_QWORD *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
    if (v20)
    {
      *(_QWORD *)v18 = v20;
      v21 = *((_QWORD *)v19 + 2);
      swift_bridgeObjectRetain();
      if (v21)
      {
        *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
        *((_QWORD *)v18 + 2) = v21;
        *((_DWORD *)v18 + 6) = *((_DWORD *)v19 + 6);
        v22 = *((_QWORD *)v19 + 5);
        *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
        *((_QWORD *)v18 + 5) = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v25 = *(_OWORD *)(v19 + 24);
        *(_OWORD *)(v18 + 8) = *(_OWORD *)(v19 + 8);
        *(_OWORD *)(v18 + 24) = v25;
        *((_QWORD *)v18 + 5) = *((_QWORD *)v19 + 5);
      }
    }
    else
    {
      v24 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v24;
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    }
  }
  return a1;
}

uint64_t destroy for AssetRegistryAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;

  v4 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_1AE536AF8(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 16), *(_WORD *)(a1 + *(int *)(a2 + 20) + 24));
  swift_bridgeObjectRelease();
  v5 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  result = *v5;
  if (*v5)
  {
    swift_bridgeObjectRelease();
    result = v5[2];
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for AssetRegistryAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;

  v6 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  v12 = *(_QWORD *)(a2 + v7 + 16);
  v13 = *(_BYTE *)(a2 + v7 + 26);
  v14 = *(_WORD *)(a2 + v7 + 24);
  sub_1AE536B1C(v10, v11, v12, v14);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v12;
  *(_BYTE *)(v8 + 26) = v13;
  *(_WORD *)(v8 + 24) = v14;
  v15 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v15;
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16);
  swift_bridgeObjectRetain();
  if (v19)
  {
    *(_QWORD *)v17 = v19;
    v20 = *(_QWORD *)(v18 + 16);
    swift_bridgeObjectRetain();
    if (v20)
    {
      *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
      *(_QWORD *)(v17 + 16) = v20;
      *(_DWORD *)(v17 + 24) = *(_DWORD *)(v18 + 24);
      v21 = *(_QWORD *)(v18 + 40);
      *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
      *(_QWORD *)(v17 + 40) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v23 = *(_OWORD *)(v18 + 24);
      *(_OWORD *)(v17 + 8) = *(_OWORD *)(v18 + 8);
      *(_OWORD *)(v17 + 24) = v23;
      *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
    }
  }
  else
  {
    v22 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v22;
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;

  v6 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  v12 = *(_QWORD *)(a2 + v7 + 16);
  v13 = *(_BYTE *)(a2 + v7 + 26);
  v14 = *(_WORD *)(a2 + v7 + 24);
  sub_1AE536B1C(v10, v11, v12, v14);
  v15 = *(_QWORD *)v8;
  v16 = *(_QWORD *)(v8 + 8);
  v17 = *(_QWORD *)(v8 + 16);
  v18 = *(_WORD *)(v8 + 24);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_QWORD *)(v8 + 16) = v12;
  *(_WORD *)(v8 + 24) = v14;
  *(_BYTE *)(v8 + 26) = v13;
  sub_1AE536AF8(v15, v16, v17, v18);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = *(int *)(a3 + 24);
  v20 = a1 + v19;
  v21 = (__int128 *)(a2 + v19);
  v22 = *(_QWORD *)(a2 + v19);
  if (!*(_QWORD *)(a1 + v19))
  {
    if (!v22)
    {
      v32 = *v21;
      v33 = v21[2];
      *(_OWORD *)(v20 + 16) = v21[1];
      *(_OWORD *)(v20 + 32) = v33;
      *(_OWORD *)v20 = v32;
      return a1;
    }
    *(_QWORD *)v20 = v22;
    v23 = v20 + 8;
    v26 = *((_QWORD *)v21 + 2);
    swift_bridgeObjectRetain();
    if (v26)
      goto LABEL_11;
    v27 = *(__int128 *)((char *)v21 + 8);
    v28 = *(__int128 *)((char *)v21 + 24);
    v29 = *((_QWORD *)v21 + 5);
    goto LABEL_15;
  }
  if (!v22)
  {
    sub_1AE53D134(a1 + v19);
    v31 = v21[1];
    v30 = v21[2];
    *(_OWORD *)v20 = *v21;
    *(_OWORD *)(v20 + 16) = v31;
    *(_OWORD *)(v20 + 32) = v30;
    return a1;
  }
  *(_QWORD *)v20 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = v20 + 8;
  v24 = (__int128 *)((char *)v21 + 8);
  v25 = *((_QWORD *)v21 + 2);
  if (!*(_QWORD *)(v20 + 16))
  {
    if (v25)
    {
LABEL_11:
      *(_QWORD *)(v20 + 8) = *((_QWORD *)v21 + 1);
      *(_QWORD *)(v20 + 16) = *((_QWORD *)v21 + 2);
      *(_DWORD *)(v20 + 24) = *((_DWORD *)v21 + 6);
      *(_QWORD *)(v20 + 32) = *((_QWORD *)v21 + 4);
      *(_QWORD *)(v20 + 40) = *((_QWORD *)v21 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
    v27 = *v24;
    v28 = *(__int128 *)((char *)v21 + 24);
    v29 = *((_QWORD *)v21 + 5);
LABEL_15:
    *(_QWORD *)(v23 + 32) = v29;
    *(_OWORD *)v23 = v27;
    *(_OWORD *)(v23 + 16) = v28;
    return a1;
  }
  if (v25)
  {
    *(_QWORD *)(v20 + 8) = *((_QWORD *)v21 + 1);
    *(_QWORD *)(v20 + 16) = *((_QWORD *)v21 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_DWORD *)(v20 + 24) = *((_DWORD *)v21 + 6);
    *(_QWORD *)(v20 + 32) = *((_QWORD *)v21 + 4);
    *(_QWORD *)(v20 + 40) = *((_QWORD *)v21 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE53D100(v20 + 8);
    v34 = *((_QWORD *)v21 + 5);
    v35 = *(__int128 *)((char *)v21 + 24);
    *(_OWORD *)v23 = *v24;
    *(_OWORD *)(v20 + 24) = v35;
    *(_QWORD *)(v20 + 40) = v34;
  }
  return a1;
}

uint64_t initializeWithTake for AssetRegistryAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;

  v6 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v9[2] = v10[2];
  v12 = (_OWORD *)(a1 + v8);
  v13 = (_OWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v12[2] = v13[2];
  return a1;
}

uint64_t assignWithTake for AssetRegistryAsset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;

  v6 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 16);
  v11 = *(_BYTE *)(v9 + 26);
  v12 = *(_WORD *)(v9 + 24);
  v13 = *(_QWORD *)v8;
  v14 = *(_QWORD *)(v8 + 8);
  v15 = *(_QWORD *)(v8 + 16);
  v16 = *(_WORD *)(v8 + 24);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_QWORD *)(v8 + 16) = v10;
  *(_WORD *)(v8 + 24) = v12;
  *(_BYTE *)(v8 + 26) = v11;
  sub_1AE536AF8(v13, v14, v15, v16);
  v17 = *(_QWORD *)(v9 + 40);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 40) = v17;
  swift_bridgeObjectRelease();
  v18 = *(int *)(a3 + 24);
  v19 = a1 + v18;
  v20 = a2 + v18;
  if (!*(_QWORD *)(a1 + v18))
    goto LABEL_7;
  if (!*(_QWORD *)v20)
  {
    sub_1AE53D134(v19);
LABEL_7:
    v23 = *(_OWORD *)(v20 + 16);
    *(_OWORD *)v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 16) = v23;
    *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
    return a1;
  }
  *(_QWORD *)v19 = *(_QWORD *)v20;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v19 + 16))
  {
LABEL_9:
    v24 = *(_OWORD *)(v20 + 24);
    *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
    *(_OWORD *)(v19 + 24) = v24;
    *(_QWORD *)(v19 + 40) = *(_QWORD *)(v20 + 40);
    return a1;
  }
  v21 = *(_QWORD *)(v20 + 16);
  if (!v21)
  {
    sub_1AE53D100(v19 + 8);
    goto LABEL_9;
  }
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v19 + 24) = *(_DWORD *)(v20 + 24);
  v22 = *(_QWORD *)(v20 + 40);
  *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
  *(_QWORD *)(v19 + 40) = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAsset()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE53E5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = sub_1AE4FD9B0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 40);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAsset()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AE53E670(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1AE4FD9B0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_1AE4F66D4(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 40) = a2;
    sub_1AE4F6624();
  }
}

uint64_t sub_1AE53E6D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AE924780();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t destroy for AssetRegistryAsset.Metadata(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    result = a1[2];
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for AssetRegistryAsset.Metadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v4 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    if (v4)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v4;
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
      v5 = *(_QWORD *)(a2 + 32);
      v6 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v5;
      *(_QWORD *)(a1 + 40) = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v8 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    }
  }
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAsset.Metadata(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      v6 = a1 + 8;
      v9 = *((_QWORD *)a2 + 2);
      swift_bridgeObjectRetain();
      if (v9)
      {
LABEL_13:
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
        *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return a1;
      }
      v10 = *(__int128 *)((char *)a2 + 8);
      v11 = *(__int128 *)((char *)a2 + 24);
      v12 = *((_QWORD *)a2 + 5);
LABEL_16:
      *(_QWORD *)(v6 + 32) = v12;
      *(_OWORD *)v6 = v10;
      *(_OWORD *)(v6 + 16) = v11;
      return a1;
    }
LABEL_11:
    v13 = *a2;
    v14 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v14;
    *(_OWORD *)a1 = v13;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_11;
  }
  *(_QWORD *)a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a1 + 8;
  v7 = (__int128 *)((char *)a2 + 8);
  v8 = *((_QWORD *)a2 + 2);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v8)
      goto LABEL_13;
    v10 = *v7;
    v11 = *(__int128 *)((char *)a2 + 24);
    v12 = *((_QWORD *)a2 + 5);
    goto LABEL_16;
  }
  if (v8)
  {
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE53D100(a1 + 8);
    v15 = *((_QWORD *)a2 + 5);
    v16 = *(__int128 *)((char *)a2 + 24);
    *(_OWORD *)v6 = *v7;
    *(_OWORD *)(a1 + 24) = v16;
    *(_QWORD *)(a1 + 40) = v15;
  }
  return a1;
}

uint64_t assignWithTake for AssetRegistryAsset.Metadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v8;

  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
  {
LABEL_8:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_8;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_11:
    v8 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    return a1;
  }
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    sub_1AE53D100(a1 + 8);
    goto LABEL_11;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAsset.Metadata(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAsset.Metadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_1AE53EB48(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1AE53EB60(uint64_t result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *(_QWORD *)result = v2;
  return result;
}

void type metadata accessor for AssetRegistryAsset.Metadata()
{
  sub_1AE4F67D4();
}

uint64_t destroy for AssetRegistryAsset.Metadata.TrialMetadata(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for AssetRegistryAsset.Metadata.TrialMetadata(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v5;
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
    v6 = *(_QWORD *)(a2 + 32);
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 24);
    *v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  }
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAsset.Metadata.TrialMetadata(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AE53D100(a1 + 8);
      v7 = *(_QWORD *)(a2 + 40);
      v8 = *(_OWORD *)(a2 + 24);
      *v4 = *v5;
      *(_OWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 40) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *v5;
    v10 = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *v4 = v9;
    *(_OWORD *)(a1 + 24) = v10;
  }
  return a1;
}

uint64_t assignWithTake for AssetRegistryAsset.Metadata.TrialMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
  {
    sub_1AE53D100(a1 + 8);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    return a1;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAsset.Metadata.TrialMetadata(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAsset.Metadata.TrialMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AssetRegistryAsset.Metadata.TrialMetadata()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for AssetRegistryParameters.RemoteOptions.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE53EEDC + 4 * byte_1AE9344D6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE53EEFC + 4 * byte_1AE9344DB[v4]))();
}

_BYTE *sub_1AE53EEDC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE53EEFC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE53EF04(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE53EF0C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE53EF14(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE53EF1C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryParameters.RemoteOptions.CodingKeys()
{
  return &type metadata for AssetRegistryParameters.RemoteOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryParameters.LocalOptions.CodingKeys()
{
  return &type metadata for AssetRegistryParameters.LocalOptions.CodingKeys;
}

unint64_t sub_1AE53EF4C()
{
  unint64_t result;

  result = qword_1EED9B1A8;
  if (!qword_1EED9B1A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93491C, &type metadata for AssetRegistryParameters.RemoteOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B1A8);
  }
  return result;
}

unint64_t sub_1AE53EF8C()
{
  unint64_t result;

  result = qword_1EED9B1B0;
  if (!qword_1EED9B1B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93488C, &type metadata for AssetRegistryParameters.RemoteOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B1B0);
  }
  return result;
}

unint64_t sub_1AE53EFCC()
{
  unint64_t result;

  result = qword_1EED9B1B8;
  if (!qword_1EED9B1B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9348B4, &type metadata for AssetRegistryParameters.RemoteOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B1B8);
  }
  return result;
}

unint64_t sub_1AE53F00C()
{
  unint64_t result;

  result = qword_1EED9B1C0;
  if (!qword_1EED9B1C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93483C, &type metadata for AssetRegistryParameters.LocalOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B1C0);
  }
  return result;
}

unint64_t sub_1AE53F04C()
{
  unint64_t result;

  result = qword_1EED9B1C8;
  if (!qword_1EED9B1C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE934864, &type metadata for AssetRegistryParameters.LocalOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B1C8);
  }
  return result;
}

uint64_t sub_1AE53F088(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1AE53F0C4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1AE53F0F8(uint64_t a1, uint64_t a2)
{
  sub_1AE88B238(a2, a1);
  return a2;
}

uint64_t sub_1AE53F134(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AE53F164(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1AE53F194(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_1AE53F8D8(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  sub_1AE4F6664();
}

uint64_t sub_1AE53F1C8(uint64_t a1, uint64_t a2)
{
  assignWithTake for InferenceServiceInstanceEnum(a2, a1);
  return a2;
}

uint64_t sub_1AE53F204(uint64_t a1, uint64_t a2)
{
  initializeWithTake for InferenceServiceInstanceEnum(a2, a1);
  return a2;
}

uint64_t sub_1AE53F240(uint64_t a1, uint64_t a2)
{
  j__swift_weakTakeAssign(a2, a1);
  return a2;
}

uint64_t sub_1AE53F27C(uint64_t a1, uint64_t a2)
{
  j__swift_weakTakeInit(a2, a1);
  return a2;
}

uint64_t sub_1AE53F2B8(uint64_t a1, uint64_t a2)
{
  sub_1AE88B858(a2, a1);
  return a2;
}

_OWORD *sub_1AE53F2F4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1AE53F304(uint64_t a1, char a2)
{
  if (a2 == 2)
    return sub_1AE926EE0();
  sub_1AE926EE0();
  sub_1AE926EE0();
  sub_1AE925F14();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE53F3A8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v14 = a4;
  v15 = a5;
  v8 = sub_1AE52F6A8((uint64_t *)&v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v8, a1, a4);
  v9 = sub_1AE4F66BC();
  v10 = *a2;
  v11 = a2[1];
  LOBYTE(a2) = *((_BYTE *)a2 + 16);
  sub_1AE50AF58(&v13, v9 + 16);
  *(_QWORD *)(v9 + 56) = v10;
  *(_QWORD *)(v9 + 64) = v11;
  *(_BYTE *)(v9 + 72) = (_BYTE)a2;
  return v9;
}

void sub_1AE53F430()
{
  swift_bridgeObjectRetain();
  sub_1AE4F66CC();
  sub_1AE4F66C4();
  sub_1AE4F6624();
}

uint64_t sub_1AE53F468(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1AE53F4A0(uint64_t a1, uint64_t a2)
{
  assignWithTake for EntityRerankerHandler.EntityRerankerHandlerCache.CachedHandler(a2, a1);
  return a2;
}

uint64_t sub_1AE53F4DC(uint64_t a1, uint64_t a2)
{
  initializeWithTake for EntityRerankerHandler.EntityRerankerHandlerCache.CachedHandler(a2, a1);
  return a2;
}

uint64_t sub_1AE53F518(uint64_t a1, uint64_t a2)
{
  assignWithTake for RetrievedCandidate(a2, a1);
  return a2;
}

void sub_1AE53F554()
{
  swift_bridgeObjectRetain();
  sub_1AE4F66CC();
  sub_1AE4F6664();
}

uint64_t sub_1AE53F580(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1AE53F5F8(void *a1)
{
  free(a1);
}

uint64_t sub_1AE53F600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  return sub_1AE536AF8(v2, v1, v0, v3);
}

uint64_t sub_1AE53F614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  return sub_1AE536AF8(a1, a2, v2, v3);
}

uint64_t sub_1AE53F63C()
{
  return sub_1AE926A54();
}

uint64_t sub_1AE53F650(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  return sub_1AE537038(v5, v4, a3, a4);
}

uint64_t sub_1AE53F65C(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;

  return sub_1AE537038(a1, v4, a3, a4);
}

void sub_1AE53F664()
{
  unint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 8 * (v0 >> 6) + 64) |= 1 << v0;
}

uint64_t sub_1AE53F6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  return sub_1AE536AF8(a1, a2, a3, v3);
}

uint64_t sub_1AE53F6AC()
{
  uint64_t v0;

  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(*(_QWORD *)(v0 + 48), 0, 1, *(_QWORD *)(v0 + 176));
  return swift_task_dealloc();
}

unint64_t sub_1AE53F6F8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  *(_QWORD *)(a6 + 8 * (result >> 6) + 64) |= 1 << result;
  v6 = (_QWORD *)(*(_QWORD *)(a6 + 48) + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  return result;
}

uint64_t sub_1AE53F75C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE53F78C()
{
  return sub_1AE926A6C();
}

uint64_t sub_1AE53F798()
{
  return type metadata accessor for AssetRegistryAsset(0);
}

uint64_t sub_1AE53F7A0()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1AE536AF8(v3, v2, v1, v0);
}

uint64_t sub_1AE53F7B4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  return sub_1AE536B1C(v3, v1, v0, v2);
}

uint64_t sub_1AE53F7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  return sub_1AE536B1C(a1, a2, v2, v3);
}

uint64_t sub_1AE53F7E8()
{
  return sub_1AE926A54();
}

uint64_t sub_1AE53F7FC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE53F808@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  return a2(a1, 0);
}

uint64_t sub_1AE53F810()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1AE536AF8(v3, v2, v0, v1);
}

void sub_1AE53F824()
{
  sub_1AE5397DC();
}

uint64_t sub_1AE53F830()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE536AF8(v3, *(_QWORD *)(v4 - 160), v0, v1);
  return v2;
}

uint64_t sub_1AE53F85C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1AE536B1C(v2, v1, *(_QWORD *)(v3 - 144), v0);
}

uint64_t sub_1AE53F870()
{
  return swift_task_dealloc();
}

void sub_1AE53F878(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 16) = a2;
}

uint64_t sub_1AE53F880(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

__n128 sub_1AE53F8A8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  result = *(__n128 *)v1;
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)v3 = a1;
  *(__n128 *)(v3 + 8) = result;
  *(_OWORD *)(v3 + 24) = v5;
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

uint64_t sub_1AE53F8D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t sub_1AE53F8E8()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

uint64_t sub_1AE53F914(uint64_t a1, void (*a2)(_BYTE *, uint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;

  return sub_1AE5370E0(v3, a2, a3);
}

unint64_t sub_1AE53F91C()
{
  __int16 v0;

  return sub_1AE537138(v0);
}

uint64_t sub_1AE53F934()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE53F940()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE53F968()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

void sub_1AE53F978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  sub_1AE53B5B4(v6, v5, v4, a4);
}

double sub_1AE53F988@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1AE53F998()
{
  return swift_task_dealloc();
}

uint64_t sub_1AE53F9A0()
{
  return sub_1AE926EBC();
}

uint64_t sub_1AE53F9B0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE53F9C0()
{
  return swift_task_dealloc();
}

uint64_t sub_1AE53F9C8()
{
  return sub_1AE925F14();
}

void sub_1AE53F9EC(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 16) = a2;
}

uint64_t sub_1AE53F9F4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE53FA00()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

uint64_t sub_1AE53FA08()
{
  return sub_1AE926EE0();
}

void sub_1AE53FA14()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = *v0;
  *v0 = 0x8000000000000000;
}

void (*sub_1AE53FA28(_QWORD *a1))(uint64_t *)
{
  __int16 v1;

  return sub_1AE536080(a1, v1);
}

uint64_t sub_1AE53FA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  sub_1AE53B68C(v8, v7, v6, v5, a5);
  return v6;
}

uint64_t sub_1AE53FA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  return sub_1AE536AF8(a1, a2, a3, v3);
}

void sub_1AE53FAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

}

void sub_1AE53FAAC(uint64_t a1@<X8>)
{
  int v1;

  *(_BYTE *)(a1 + 26) = BYTE2(v1);
  *(_WORD *)(a1 + 24) = v1;
}

uint64_t sub_1AE53FAC0()
{
  uint64_t v0;

  return sub_1AE53C698(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
}

uint64_t sub_1AE53FAE0()
{
  return swift_release();
}

uint64_t sub_1AE53FAE8()
{
  return swift_release();
}

uint64_t sub_1AE53FAF4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);

  return v1(a1, 0);
}

uint64_t sub_1AE53FAFC(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  return sub_1AE537038(v5, v4, a3, a4);
}

uint64_t sub_1AE53FB08()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1, 0);
}

uint64_t sub_1AE53FB14()
{
  uint64_t v0;

  return v0;
}

id sub_1AE53FB20()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v1 + 48) + 8 * v0);
}

void sub_1AE53FB2C()
{
  sub_1AE53F554();
}

uint64_t AssetRegistryAssetEntry.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int16 v6;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 26);
  v6 = *(_WORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 26) = v5;
  *(_WORD *)(a1 + 24) = v6;
  return sub_1AE536B1C(v2, v3, v4, v6);
}

uint64_t AssetRegistryAssetEntry.ratchetNumber.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t AssetRegistryAssetEntry.userInfo.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 AssetRegistryAssetEntry.init(location:ratchetNumber:userInfo:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  unint64_t v4;
  unsigned __int16 v5;
  unsigned __int8 v6;
  __n128 result;

  v4 = a1[1].n128_u64[0];
  v5 = a1[1].n128_u16[4];
  v6 = a1[1].n128_u8[10];
  result = *a1;
  *a4 = *a1;
  a4[1].n128_u64[0] = v4;
  a4[1].n128_u8[10] = v6;
  a4[1].n128_u16[4] = v5;
  a4[2].n128_u64[0] = a2;
  a4[2].n128_u64[1] = a3;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetEntry.verifyValidity()()
{
  uint64_t v0;

  if ((*(_WORD *)(v0 + 24) & 0x80) == 0)
    AssetRegistryAssetLocation.LocalAsset.verifyValidity()();
}

uint64_t sub_1AE53FBE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x4E74656863746172 && a2 == 0xED00007265626D75;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6F666E4972657375 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AE53FD54(char a1)
{
  if (!a1)
    return 0x6E6F697461636F6CLL;
  if (a1 == 1)
    return 0x4E74656863746172;
  return 0x6F666E4972657375;
}

uint64_t sub_1AE53FDB8()
{
  char *v0;

  return sub_1AE53FD54(*v0);
}

uint64_t sub_1AE53FDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE53FBE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE53FDE4()
{
  sub_1AE54029C();
  return sub_1AE926F94();
}

uint64_t sub_1AE53FE0C()
{
  sub_1AE54029C();
  return sub_1AE926FA0();
}

void AssetRegistryAssetEntry.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int16 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int16 v19;
  char v20;
  char v21;

  v3 = sub_1AE501548(&qword_1EED9B230);
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  v6 = *((_QWORD *)v1 + 2);
  v7 = *((_WORD *)v1 + 12);
  v8 = *((_BYTE *)v1 + 26);
  v9 = *((_QWORD *)v1 + 4);
  v13[0] = *((_QWORD *)v1 + 5);
  v13[1] = v9;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE54029C();
  sub_1AE926F4C();
  v17 = v14;
  v18 = v6;
  v20 = v8;
  v19 = v7;
  v21 = 0;
  sub_1AE5402D8();
  v10 = v16;
  sub_1AE926CC4();
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
  }
  else
  {
    v11 = v13[0];
    v12 = v15;
    LOBYTE(v17) = 1;
    sub_1AE926CB8();
    *(_QWORD *)&v17 = v11;
    v21 = 2;
    sub_1AE501548(&qword_1ED30F918);
    sub_1AE540350((unint64_t *)&qword_1EED9B248, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1AE926C70();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v5, v3);
  }
  sub_1AE4F667C();
}

void AssetRegistryAssetEntry.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  char v13;

  v5 = sub_1AE501548(&qword_1EED9B250);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE54029C();
  sub_1AE926F34();
  if (v2)
  {
    sub_1AE4F90EC();
  }
  else
  {
    sub_1AE540314();
    sub_1AE926BEC();
    v6 = v9;
    LOBYTE(v9) = 1;
    v8 = v6;
    sub_1AE536B1C(v6, v10, v11, v12);
    v7 = sub_1AE926BE0();
    sub_1AE501548(&qword_1ED30F918);
    sub_1AE540350((unint64_t *)&qword_1ED30F920, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    sub_1AE926B98();
    sub_1AE4F777C();
    sub_1AE536B1C(v8, v10, v11, v12);
    swift_bridgeObjectRetain();
    sub_1AE500934();
    *(_QWORD *)a2 = v8;
    *(_QWORD *)(a2 + 8) = v10;
    *(_QWORD *)(a2 + 16) = v11;
    *(_BYTE *)(a2 + 26) = v13;
    *(_WORD *)(a2 + 24) = v12;
    *(_QWORD *)(a2 + 32) = v7;
    *(_QWORD *)(a2 + 40) = v9;
    sub_1AE4F90EC();
    sub_1AE500934();
    swift_bridgeObjectRelease();
  }
  sub_1AE4F667C();
}

void sub_1AE540260()
{
  AssetRegistryAssetEntry.verifyValidity()();
}

void sub_1AE540274(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  AssetRegistryAssetEntry.init(from:)(a1, a2);
}

void sub_1AE540288(_QWORD *a1)
{
  AssetRegistryAssetEntry.encode(to:)(a1);
}

unint64_t sub_1AE54029C()
{
  unint64_t result;

  result = qword_1EED9B238;
  if (!qword_1EED9B238)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE934B5C, &type metadata for AssetRegistryAssetEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B238);
  }
  return result;
}

unint64_t sub_1AE5402D8()
{
  unint64_t result;

  result = qword_1EED9B240;
  if (!qword_1EED9B240)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation, &type metadata for AssetRegistryAssetLocation);
    atomic_store(result, (unint64_t *)&qword_1EED9B240);
  }
  return result;
}

unint64_t sub_1AE540314()
{
  unint64_t result;

  result = qword_1EED9B258;
  if (!qword_1EED9B258)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation, &type metadata for AssetRegistryAssetLocation);
    atomic_store(result, (unint64_t *)&qword_1EED9B258);
  }
  return result;
}

uint64_t sub_1AE540350(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = sub_1AE523CF0(&qword_1ED30F918);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x1AF454B70](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AE5403B0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AE5403DC();
  result = sub_1AE540418();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AE5403DC()
{
  unint64_t result;

  result = qword_1EED9B260;
  if (!qword_1EED9B260)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetEntry, &type metadata for AssetRegistryAssetEntry);
    atomic_store(result, (unint64_t *)&qword_1EED9B260);
  }
  return result;
}

unint64_t sub_1AE540418()
{
  unint64_t result;

  result = qword_1EED9B268;
  if (!qword_1EED9B268)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetEntry, &type metadata for AssetRegistryAssetEntry);
    atomic_store(result, (unint64_t *)&qword_1EED9B268);
  }
  return result;
}

uint64_t destroy for AssetRegistryAssetEntry(uint64_t a1)
{
  sub_1AE536AF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_WORD *)(a1 + 24));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AssetRegistryAssetEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int16 v8;
  uint64_t v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 26);
  v8 = *(_WORD *)(a2 + 24);
  sub_1AE536B1C(*(_QWORD *)a2, v5, v6, v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 26) = v7;
  *(_WORD *)(a1 + 24) = v8;
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v9;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAssetEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 26);
  v8 = *(_WORD *)(a2 + 24);
  sub_1AE536B1C(*(_QWORD *)a2, v5, v6, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_WORD *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 26) = v7;
  sub_1AE536AF8(v9, v10, v11, v12);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AssetRegistryAssetEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 26);
  v6 = *(_WORD *)(a2 + 24);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_WORD *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 26) = v5;
  sub_1AE536AF8(v7, v8, v9, v10);
  v11 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetEntry(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 40);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetEntry()
{
  return &type metadata for AssetRegistryAssetEntry;
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetEntry.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE540734 + 4 * byte_1AE9349F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE540768 + 4 * byte_1AE9349F0[v4]))();
}

uint64_t sub_1AE540768(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE540770(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE540778);
  return result;
}

uint64_t sub_1AE540784(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE54078CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE540790(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE540798(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetEntry.CodingKeys()
{
  return &type metadata for AssetRegistryAssetEntry.CodingKeys;
}

unint64_t sub_1AE5407B8()
{
  unint64_t result;

  result = qword_1EED9B270;
  if (!qword_1EED9B270)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE934B34, &type metadata for AssetRegistryAssetEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B270);
  }
  return result;
}

unint64_t sub_1AE5407F8()
{
  unint64_t result;

  result = qword_1EED9B278;
  if (!qword_1EED9B278)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE934AA4, &type metadata for AssetRegistryAssetEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B278);
  }
  return result;
}

unint64_t sub_1AE540838()
{
  unint64_t result;

  result = qword_1EED9B280;
  if (!qword_1EED9B280)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE934ACC, &type metadata for AssetRegistryAssetEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B280);
  }
  return result;
}

void AssetRegistryAssetLocation.LocalAsset.localURL.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE4F67EC();
  sub_1AE9246E4();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4F90C8();
  sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0[1];
  if ((v0[3] & 1) != 0)
  {
    v6 = v0[2];
    LOBYTE(v14) = *v0 & 1;
    v15 = v5;
    v16 = v6;
    AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.localURL.getter();
  }
  else
  {
    v14 = *v0;
    v15 = v5;
    v13[1] = 47;
    v13[2] = 0xE100000000000000;
    sub_1AE536B60();
    sub_1AE536B9C();
    if ((sub_1AE925DB8() & 1) != 0)
    {
      v7 = sub_1AE4FD9B0();
      v10 = sub_1AE508140((uint64_t)v4, v8, v9, v7);
      sub_1AE545400(v10, *MEMORY[0x1E0CAFD78]);
      swift_bridgeObjectRetain();
      sub_1AE924768();
    }
    else
    {
      sub_1AE536BD8();
      v11 = sub_1AE4F6778();
      sub_1AE503370(v11, v12);
    }
  }
  sub_1AE506FAC();
  sub_1AE4F667C();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.verifyValidity()()
{
  uint64_t v0;

  if ((*(_WORD *)(v0 + 24) & 0x80) == 0)
    AssetRegistryAssetLocation.LocalAsset.verifyValidity()();
}

IntelligencePlatform::AssetRegistryAcceptableBundleName_optional __swiftcall AssetRegistryAcceptableBundleName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  IntelligencePlatform::AssetRegistryAcceptableBundleName_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1AE926B44();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

unint64_t AssetRegistryAcceptableBundleName.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000018;
  else
    return 0xD000000000000014;
}

void sub_1AE540AB8()
{
  sub_1AE512A94();
}

uint64_t sub_1AE540AC0()
{
  return sub_1AE5E85C4();
}

void sub_1AE540AC8()
{
  sub_1AE54F7C4();
}

IntelligencePlatform::AssetRegistryAcceptableBundleName_optional sub_1AE540AD0(Swift::String *a1)
{
  return AssetRegistryAcceptableBundleName.init(rawValue:)(*a1);
}

void sub_1AE540ADC(unint64_t *a1@<X8>)
{
  unint64_t v2;

  *a1 = AssetRegistryAcceptableBundleName.rawValue.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

uint64_t sub_1AE540AFC()
{
  sub_1AE5452B4();
  return sub_1AE926190();
}

uint64_t sub_1AE540B58()
{
  sub_1AE5452B4();
  return sub_1AE926148();
}

void sub_1AE540BA4(char *a1)
{
  sub_1AE510878(*a1);
}

void AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.localURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  sub_1AE4F67EC();
  sub_1AE5453F0(v1);
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F90C8();
  sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F90F4();
  sub_1AE508E80();
  sub_1AE536B9C();
  sub_1AE5453E0();
  if ((sub_1AE925DB8() & 1) != 0)
  {
    v4 = sub_1AE4FD9B0();
    v7 = sub_1AE508140(v0, v5, v6, v4);
    sub_1AE545400(v7, *MEMORY[0x1E0CAFD78]);
    swift_bridgeObjectRetain();
    sub_1AE924768();
  }
  else
  {
    sub_1AE536BD8();
    v8 = sub_1AE4F6778();
    sub_1AE503370(v8, v9);
  }
  sub_1AE506FAC();
  sub_1AE4F667C();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.verifyValidity()()
{
  uint64_t v0;
  _BYTE *v1;

  sub_1AE545344();
  sub_1AE5453D8();
  if ((sub_1AE4FCE90() & 1) == 0)
  {
    sub_1AE536BD8();
    v0 = sub_1AE4F6778();
    sub_1AE503370(v0, v1);
  }
  sub_1AE50982C();
}

IntelligencePlatform::AssetRegistryAssetLocation::LocalAsset::LocalAbsoluteAsset __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.init(absoluteFilePath:)(Swift::String absoluteFilePath)
{
  uint64_t *v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _BYTE *v8;
  IntelligencePlatform::AssetRegistryAssetLocation::LocalAsset::LocalAbsoluteAsset result;

  object = absoluteFilePath._object;
  countAndFlagsBits = absoluteFilePath._countAndFlagsBits;
  v4 = v1;
  sub_1AE509360();
  sub_1AE4F81D4();
  sub_1AE545444();
  if ((sub_1AE507D64() & 1) != 0)
  {
    v5 = swift_bridgeObjectRelease();
    *v4 = countAndFlagsBits;
    v4[1] = (uint64_t)object;
  }
  else
  {
    sub_1AE536BD8();
    v7 = sub_1AE4F6778();
    sub_1AE4FD9C8(v7, v8);
    v5 = sub_1AE4F6824();
  }
  result.absoluteFilePath._object = v6;
  result.absoluteFilePath._countAndFlagsBits = v5;
  return result;
}

void AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.init(filePathURL:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;

  sub_1AE4F67EC();
  v4 = v3;
  v6 = v5;
  sub_1AE4FD9B0();
  sub_1AE509818();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F910C();
  if ((sub_1AE9246CC() & 1) != 0)
  {
    sub_1AE9246D8();
    v8 = sub_1AE924750();
    v10 = v9;
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
    sub_1AE508E80();
    sub_1AE536B9C();
    swift_bridgeObjectRetain();
    sub_1AE5453E0();
    if ((sub_1AE925DB8() & 1) != 0)
    {
      sub_1AE545438();
      swift_bridgeObjectRelease();
      *v6 = v8;
      v6[1] = v10;
    }
    else
    {
      sub_1AE536BD8();
      v12 = sub_1AE4F6778();
      sub_1AE503370(v12, v13);
      sub_1AE545438();
      sub_1AE4F6824();
    }
  }
  else
  {
    sub_1AE536BD8();
    sub_1AE4F6778();
    *v11 = 1;
    swift_willThrow();
    sub_1AE4FB7D0(v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  sub_1AE506FAC();
  sub_1AE4F667C();
}

BOOL static AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.ValidityError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.ValidityError.hash(into:)()
{
  sub_1AE926ED4();
  sub_1AE4F6664();
}

uint64_t sub_1AE540F18(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001AE974EC0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1AE540F9C()
{
  return 0xD000000000000010;
}

void sub_1AE540FB8()
{
  _s20IntelligencePlatform34LocationEmbedderInferenceInterfaceO6ErrorsO9InitErrorO9hashValueSivg_0();
}

uint64_t sub_1AE540FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE540F18(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE540FFC()
{
  sub_1AE5423C8();
  return sub_1AE926F94();
}

uint64_t sub_1AE541024()
{
  sub_1AE5423C8();
  return sub_1AE926FA0();
}

void AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE4F67EC();
  v1 = v0;
  v2 = sub_1AE501548(&qword_1EED9B288);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F6744();
  sub_1AE4F9858(v1, v1[3]);
  sub_1AE5423C8();
  sub_1AE5085CC();
  sub_1AE926C88();
  sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1AE506FAC();
  sub_1AE4F667C();
}

void AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1AE4F67EC();
  v3 = v2;
  v5 = v4;
  sub_1AE501548(&qword_1EED9B298);
  sub_1AE509818();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE505354();
  sub_1AE5423C8();
  sub_1AE4F680C();
  if (!v0)
  {
    v7 = sub_1AE5061F0();
    v9 = v8;
    sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *v5 = v7;
    v5[1] = v9;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v3);
  sub_1AE4F667C();
}

void sub_1AE5411B4()
{
  AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.localURL.getter();
}

void sub_1AE5411C8()
{
  AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.verifyValidity()();
}

void sub_1AE5411DC()
{
  AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.init(from:)();
}

void sub_1AE5411F0()
{
  AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.encode(to:)();
}

void AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.localURL.getter()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t *v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28[2];
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1AE4F67EC();
  v3 = sub_1AE5453F0(v2);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE507460(v5, v28[0]);
  sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  sub_1AE4F6630();
  v7 = MEMORY[0x1E0C80A78](v6);
  v29 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v28 - v9;
  v11 = sub_1AE4FD9B0();
  sub_1AE4FC580();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v28 - v16;
  v18 = *v0;
  v19 = *((_QWORD *)v0 + 1);
  v28[0] = *((_QWORD *)v0 + 2);
  v28[1] = v19;
  v33 = v19;
  v34 = v28[0];
  sub_1AE508E80();
  sub_1AE4F81D4();
  sub_1AE5453E0();
  if ((sub_1AE925DB8() & 1) != 0)
  {
    sub_1AE54349C();
    sub_1AE4F6778();
    *v20 = 0;
LABEL_15:
    swift_willThrow();
    goto LABEL_16;
  }
  if ((v18 & 1) != 0)
  {
    if (qword_1ED31B5C8 != -1)
      swift_once();
    v21 = &qword_1ED31B5B8;
  }
  else
  {
    if (qword_1ED31C450 != -1)
      swift_once();
    v21 = &qword_1ED31C4B0;
  }
  v22 = objc_msgSend((id)*v21, sel_resourceURL);
  if (!v22)
  {
    sub_1AE50A290((uint64_t)v10, 1);
    goto LABEL_14;
  }
  v23 = v22;
  sub_1AE924744();

  v24 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
  v24(v10, v15, v11);
  sub_1AE50A290((uint64_t)v10, 0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, v11) == 1)
  {
LABEL_14:
    sub_1AE543420((uint64_t)v10);
    sub_1AE543460();
    sub_1AE4F6778();
    goto LABEL_15;
  }
  v24(v17, v10, v11);
  v25 = (uint64_t)v29;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v29, v17, v11);
  sub_1AE50A290(v25, 0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v30 + 104))(v32, *MEMORY[0x1E0CAFD78], v31);
  swift_bridgeObjectRetain();
  sub_1AE924768();
  v26 = sub_1AE545450();
  v27(v26);
LABEL_16:
  sub_1AE506FAC();
  sub_1AE4F667C();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.verifyValidity()()
{
  uint64_t v0;
  _BYTE *v1;

  sub_1AE545344();
  sub_1AE5453D8();
  if ((sub_1AE4FCE90() & 1) != 0)
  {
    sub_1AE54349C();
    v0 = sub_1AE4F6778();
    sub_1AE503370(v0, v1);
  }
  sub_1AE50982C();
}

IntelligencePlatform::AssetRegistryAssetLocation::LocalAsset::LocalRelativeAsset __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.init(bundleName:relativeFilePath:)(IntelligencePlatform::AssetRegistryAcceptableBundleName bundleName, Swift::String relativeFilePath)
{
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _BYTE *v8;
  IntelligencePlatform::AssetRegistryAcceptableBundleName v9;
  uint64_t v10;
  void *v11;
  IntelligencePlatform::AssetRegistryAssetLocation::LocalAsset::LocalRelativeAsset result;

  object = relativeFilePath._object;
  countAndFlagsBits = relativeFilePath._countAndFlagsBits;
  v5 = v2;
  v6 = *(_BYTE *)bundleName;
  sub_1AE536B60();
  sub_1AE4F81D4();
  sub_1AE545444();
  if ((sub_1AE507D64() & 1) != 0)
  {
    sub_1AE54349C();
    v7 = sub_1AE4F6778();
    sub_1AE4FD9C8(v7, v8);
    v9 = sub_1AE4F6824();
  }
  else
  {
    v9 = swift_bridgeObjectRelease();
    *(_BYTE *)v5 = v6;
    *(_QWORD *)(v5 + 8) = countAndFlagsBits;
    *(_QWORD *)(v5 + 16) = object;
  }
  result.relativeFilePath._object = v11;
  result.relativeFilePath._countAndFlagsBits = v10;
  result.bundleName = v9;
  return result;
}

void _s20IntelligencePlatform013AssetRegistryC8LocationO05LocalC0O0f8AbsoluteC0V13ValidityErrorO9hashValueSivg_0()
{
  sub_1AE4F76E0();
  sub_1AE4F6694();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

uint64_t static AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError.== infix(_:_:)()
{
  return 1;
}

void AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError.hash(into:)()
{
  sub_1AE926ED4();
  sub_1AE4F6664();
}

void AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE4F6818();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

uint64_t sub_1AE541644()
{
  return sub_1AE926ED4();
}

uint64_t sub_1AE541668(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x614E656C646E7562 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AE97CBA0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE541760()
{
  return 2;
}

uint64_t sub_1AE541768(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0x614E656C646E7562;
}

void sub_1AE5417A8()
{
  AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError.hashValue.getter();
}

void sub_1AE5417BC()
{
  AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError.hash(into:)();
}

BOOL sub_1AE5417D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AE512960(*a1, *a2);
}

void sub_1AE5417DC()
{
  sub_1AE512DD0();
}

uint64_t sub_1AE5417F4()
{
  return sub_1AE541644();
}

uint64_t sub_1AE5417FC()
{
  char *v0;

  return sub_1AE541768(*v0);
}

uint64_t sub_1AE541804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE541668(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE541828@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE541760();
  *a1 = result;
  return result;
}

uint64_t sub_1AE54184C()
{
  sub_1AE5434D8();
  return sub_1AE926F94();
}

uint64_t sub_1AE541874()
{
  sub_1AE5434D8();
  return sub_1AE926FA0();
}

void AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE4F67EC();
  v3 = v2;
  v4 = sub_1AE501548(&qword_1EED9B2B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE54531C();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE5434D8();
  sub_1AE5085CC();
  sub_1AE543514();
  sub_1AE4FD9D4();
  if (!v0)
  {
    sub_1AE54547C();
    sub_1AE4FD9E0();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  sub_1AE4F667C();
}

void AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1AE4F67EC();
  v16 = v15;
  v18 = v17;
  sub_1AE501548(&qword_1EED9B2C8);
  sub_1AE509818();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE505354();
  sub_1AE5434D8();
  sub_1AE4F680C();
  if (!v13)
  {
    sub_1AE543550();
    sub_1AE545468();
    sub_1AE926BEC();
    v20 = sub_1AE5061F0();
    v22 = v21;
    sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    *(_BYTE *)v18 = a13;
    *(_QWORD *)(v18 + 8) = v20;
    *(_QWORD *)(v18 + 16) = v22;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v16);
  sub_1AE4F667C();
}

void sub_1AE541A74()
{
  AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.localURL.getter();
}

void sub_1AE541A88()
{
  AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.verifyValidity()();
}

void sub_1AE541A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1AE541AB0()
{
  AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.encode(to:)();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.LocalAsset.verifyValidity()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;

  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    sub_1AE509360();
    sub_1AE5453D8();
    if ((sub_1AE4FCE90() & 1) != 0)
    {
      sub_1AE54349C();
LABEL_6:
      v1 = sub_1AE4F6778();
      sub_1AE503370(v1, v2);
    }
  }
  else
  {
    sub_1AE509360();
    sub_1AE5453D8();
    if ((sub_1AE4FCE90() & 1) == 0)
    {
      sub_1AE536BD8();
      goto LABEL_6;
    }
  }
  sub_1AE50982C();
}

uint64_t sub_1AE541B68()
{
  return 12383;
}

uint64_t sub_1AE541B74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6574756C6F736261 && a2 == 0xE800000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AE974EE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE541C60(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0x6574756C6F736261;
}

uint64_t sub_1AE541CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE542CC8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE541CC8()
{
  sub_1AE543640();
  return sub_1AE926F94();
}

uint64_t sub_1AE541CF0()
{
  sub_1AE543640();
  return sub_1AE926FA0();
}

uint64_t sub_1AE541D18()
{
  char *v0;

  return sub_1AE541C60(*v0);
}

uint64_t sub_1AE541D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE541B74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE541D44()
{
  sub_1AE54358C();
  return sub_1AE926F94();
}

uint64_t sub_1AE541D6C()
{
  sub_1AE54358C();
  return sub_1AE926FA0();
}

uint64_t sub_1AE541D94()
{
  sub_1AE5435C8();
  return sub_1AE926F94();
}

uint64_t sub_1AE541DBC()
{
  sub_1AE5435C8();
  return sub_1AE926FA0();
}

void AssetRegistryAssetLocation.LocalAsset.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE4F67EC();
  sub_1AE505A74();
  v3 = sub_1AE501548(&qword_1EED9B2D0);
  v14 = *(_QWORD *)(v3 - 8);
  v15 = v3;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F90F4();
  sub_1AE501548(&qword_1EED9B2D8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F910C();
  v16 = sub_1AE501548(&qword_1EED9B2E0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE506FB8();
  v7 = *(_BYTE *)(v0 + 24);
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE54358C();
  sub_1AE54535C();
  if ((v7 & 1) != 0)
  {
    sub_1AE545490();
    v8 = v16;
    sub_1AE503380();
    sub_1AE543604();
    sub_1AE54542C();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v15);
  }
  else
  {
    sub_1AE543640();
    v8 = v16;
    sub_1AE503380();
    sub_1AE54367C();
    sub_1AE5453C8();
    v9 = sub_1AE545450();
    v11(v9, v10);
  }
  v12 = sub_1AE545420();
  v13(v12, v8);
  sub_1AE506FAC();
  sub_1AE4F667C();
}

void AssetRegistryAssetLocation.LocalAsset.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  _QWORD v37[2];
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_1AE4F67EC();
  sub_1AE505A74();
  v40 = v14;
  v15 = sub_1AE501548(&qword_1EED9B310);
  v16 = *(_QWORD *)(v15 - 8);
  v42 = v15;
  v43 = v16;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v17);
  v44 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1AE501548(&qword_1EED9B318);
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE4F6744();
  v20 = sub_1AE501548(&qword_1EED9B320);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v21);
  v22 = sub_1AE4F9858(v13, v13[3]);
  sub_1AE54358C();
  sub_1AE4F680C();
  if (a10)
    goto LABEL_9;
  v37[0] = v11;
  v37[1] = v12;
  v39 = v13;
  v23 = sub_1AE54545C();
  v24 = *(_QWORD *)(v23 + 16);
  if (!v24)
  {
LABEL_8:
    sub_1AE926988();
    sub_1AE4F6778();
    v28 = v27;
    sub_1AE501548(&qword_1EED99C38);
    *v28 = &type metadata for AssetRegistryAssetLocation.LocalAsset;
    sub_1AE926B5C();
    v29 = sub_1AE5078F4();
    sub_1AE506878(v29, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_1AE545370((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v13 = v39;
LABEL_9:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v13);
    goto LABEL_10;
  }
  v38 = v22;
  v25 = *(_BYTE *)(v23 + 32);
  sub_1AE50AF34(1, v24, v23, v23 + 32, 0, (2 * v24) | 1);
  sub_1AE5453A0();
  if (v20)
  {
    v22 = v38;
    goto LABEL_8;
  }
  if ((v25 & 1) != 0)
  {
    sub_1AE545490();
    sub_1AE5454A8();
    v26 = (uint64_t)v38;
    sub_1AE926B50();
    sub_1AE5436B8();
    sub_1AE926BEC();
    sub_1AE54538C();
    sub_1AE4FE92C();
    sub_1AE545370(v26, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v30 = v45;
    v32 = v46;
    v31 = v47;
  }
  else
  {
    LOBYTE(v45) = 0;
    sub_1AE543640();
    sub_1AE5454A8();
    sub_1AE926B50();
    sub_1AE5436F4();
    sub_1AE926BEC();
    sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v37[0] + 8));
    sub_1AE4FE92C();
    v33 = sub_1AE505F88();
    sub_1AE545370(v33, v34);
    v31 = 0;
    v30 = v45;
    v32 = v46;
  }
  v35 = (uint64_t)v39;
  v36 = v40;
  *v40 = v30;
  v36[1] = v32;
  v36[2] = v31;
  *((_BYTE *)v36 + 24) = v25;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v35);
LABEL_10:
  sub_1AE4F667C();
}

void sub_1AE542354()
{
  AssetRegistryAssetLocation.LocalAsset.localURL.getter();
}

void sub_1AE542368()
{
  AssetRegistryAssetLocation.LocalAsset.verifyValidity()();
}

void sub_1AE54237C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  AssetRegistryAssetLocation.LocalAsset.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1AE542390()
{
  AssetRegistryAssetLocation.LocalAsset.encode(to:)();
}

IntelligencePlatform::AssetRegistryAssetLocation::TrialAsset __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.TrialAsset.init(namespace:factor:assetType:downloadOptions:)(IntelligencePlatform::TrialNamespace a1, Swift::String factor, IntelligencePlatform::TrialAssetManager::AssetType assetType, IntelligencePlatform::TrialAssetManager::DownloadOptions_optional downloadOptions)
{
  uint64_t v4;
  char v5;
  __int16 v6;
  IntelligencePlatform::AssetRegistryAssetLocation::TrialAsset result;

  v5 = *(_BYTE *)assetType;
  v6 = **(_WORD **)&downloadOptions.value.allowsCellularAccess;
  *(_BYTE *)v4 = *(_BYTE *)a1;
  *(Swift::String *)(v4 + 8) = factor;
  *(_BYTE *)(v4 + 24) = v5;
  *(_WORD *)(v4 + 25) = v6;
  result.factor = factor;
  result.assetType = assetType;
  result.namespace = a1;
  return result;
}

unint64_t sub_1AE5423C8()
{
  unint64_t result;

  result = qword_1EED9B290;
  if (!qword_1EED9B290)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935CC4, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B290);
  }
  return result;
}

IntelligencePlatform::AssetRegistryAssetLocation::TrialAsset __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryAssetLocation.TrialAsset.init(namespaceName:factor:assetTypeRawString:downloadOptions:)(Swift::String namespaceName, Swift::String factor, Swift::String assetTypeRawString, IntelligencePlatform::TrialAssetManager::DownloadOptions_optional downloadOptions)
{
  uint64_t v4;
  void *object;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  Swift::String v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int v19;
  uint64_t countAndFlagsBits;
  char v21;
  IntelligencePlatform::AssetRegistryAssetLocation::TrialAsset result;

  countAndFlagsBits = factor._countAndFlagsBits;
  object = assetTypeRawString._object;
  v6 = assetTypeRawString._countAndFlagsBits;
  v7 = factor._object;
  v8 = namespaceName._object;
  v9 = namespaceName._countAndFlagsBits;
  v10 = v4;
  v11 = **(_WORD **)&downloadOptions.value.allowsCellularAccess;
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = sub_1AE545450();
  TrialNamespace.init(rawValue:)(v12);
  if (v21 == 9)
  {
    swift_bridgeObjectRelease();
    sub_1AE4F9038();
    sub_1AE543730();
    sub_1AE4F6778();
    *(_QWORD *)v15 = v9;
LABEL_9:
    *(_QWORD *)(v15 + 8) = v8;
    *(_BYTE *)(v15 + 16) = v21 != 9;
    v16 = swift_willThrow();
    goto LABEL_10;
  }
  sub_1AE4F6728();
  swift_bridgeObjectRetain();
  v13 = sub_1AE926B44();
  sub_1AE4F9038();
  if (!v13)
  {
    v14 = 0;
    goto LABEL_7;
  }
  if (v13 != 1)
  {
    swift_bridgeObjectRelease();
    sub_1AE543730();
    sub_1AE4F6778();
    *(_QWORD *)v15 = v6;
    v8 = object;
    goto LABEL_9;
  }
  v14 = 1;
LABEL_7:
  v16 = sub_1AE4F9038();
  *(_BYTE *)v10 = v21;
  *(_QWORD *)(v10 + 8) = countAndFlagsBits;
  *(_QWORD *)(v10 + 16) = v7;
  *(_BYTE *)(v10 + 24) = v14;
  *(_WORD *)(v10 + 25) = v11;
LABEL_10:
  result.factor._object = v18;
  result.factor._countAndFlagsBits = v17;
  result.namespace = v16;
  *(_DWORD *)result.gap1 = *(_DWORD *)((char *)&v16 + 1);
  *(_WORD *)&result.gap1[4] = *(_WORD *)((char *)&v16 + 5);
  result.gap1[6] = HIBYTE(v16);
  result.assetType = v19;
  result.downloadOptions = *(IntelligencePlatform::TrialAssetManager::DownloadOptions_optional *)((char *)&v19 + 1);
  return result;
}

uint64_t sub_1AE542550(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x63617073656D616ELL && a2 == 0xE900000000000065;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x726F74636166 && a2 == 0xE600000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7079547465737361 && a2 == 0xE900000000000065;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEF736E6F6974704FLL)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1AE926D60();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1AE542730()
{
  return 4;
}

uint64_t sub_1AE542738(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE542770 + 4 * byte_1AE934BB0[a1]))(0x63617073656D616ELL, 0xE900000000000065);
}

uint64_t sub_1AE542770()
{
  return 0x726F74636166;
}

uint64_t sub_1AE542784()
{
  return 0x7079547465737361;
}

uint64_t sub_1AE542798()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_1AE5427BC()
{
  unsigned __int8 *v0;

  return sub_1AE542738(*v0);
}

uint64_t sub_1AE5427C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE542550(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5427E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE542730();
  *a1 = result;
  return result;
}

uint64_t sub_1AE54280C()
{
  sub_1AE54376C();
  return sub_1AE926F94();
}

uint64_t sub_1AE542834()
{
  sub_1AE54376C();
  return sub_1AE926FA0();
}

void AssetRegistryAssetLocation.TrialAsset.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE4F67EC();
  v4 = v3;
  v5 = sub_1AE501548(&qword_1EED9B340);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE54531C();
  sub_1AE4F9858(v4, v4[3]);
  sub_1AE54376C();
  sub_1AE5085CC();
  sub_1AE5437A8();
  sub_1AE4FD9D4();
  if (!v1)
  {
    sub_1AE54547C();
    sub_1AE4FD9E0();
    sub_1AE5437E4();
    sub_1AE4FD9D4();
    sub_1AE543820();
    sub_1AE926C70();
  }
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v5);
  sub_1AE4F667C();
}

void AssetRegistryAssetLocation.TrialAsset.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, __int16 a11, char a12, char a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  sub_1AE4F67EC();
  v19 = v18;
  v21 = v20;
  sub_1AE501548(&qword_1EED9B368);
  sub_1AE509818();
  MEMORY[0x1E0C80A78](v22);
  sub_1AE4F90F4();
  sub_1AE505354();
  sub_1AE54376C();
  sub_1AE4F680C();
  if (v15)
  {
    v24 = 0;
  }
  else
  {
    sub_1AE54385C();
    sub_1AE545468();
    sub_1AE505F98();
    v23 = sub_1AE926BB0();
    v26 = v25;
    v28 = v23;
    v27 = sub_1AE543898();
    swift_bridgeObjectRetain();
    sub_1AE505F98();
    if (!v27)
    {
      sub_1AE5438D4();
      sub_1AE926B98();
      sub_1AE4FB7D0(v16, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
      *(_BYTE *)v21 = a15;
      *(_QWORD *)(v21 + 8) = v28;
      *(_QWORD *)(v21 + 16) = v26;
      *(_BYTE *)(v21 + 24) = a12;
      *(_WORD *)(v21 + 25) = a10;
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v19);
      goto LABEL_5;
    }
    sub_1AE4FB7D0(v16, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    sub_1AE4F6728();
    v24 = 1;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v19);
  if (v24)
LABEL_5:
    sub_1AE4F6728();
  sub_1AE4F667C();
}

uint64_t sub_1AE542B90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7373416C61636F6CLL && a2 == 0xEA00000000007465;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373416C61697274 && a2 == 0xEA00000000007465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE542C94(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7373416C61697274;
  else
    return 0x7373416C61636F6CLL;
}

uint64_t sub_1AE542CC8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void _s20IntelligencePlatform34LocationEmbedderInferenceInterfaceO6ErrorsO9InitErrorO9hashValueSivg_0()
{
  sub_1AE4F76E0();
  sub_1AE4F6818();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE542D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  AssetRegistryAssetLocation.TrialAsset.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD1(vars8), SBYTE4(vars8), SBYTE5(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1AE542D6C()
{
  AssetRegistryAssetLocation.TrialAsset.encode(to:)();
}

uint64_t sub_1AE542D80()
{
  char *v0;

  return sub_1AE542C94(*v0);
}

uint64_t sub_1AE542D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE542B90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE542DAC()
{
  sub_1AE543910();
  return sub_1AE926F94();
}

uint64_t sub_1AE542DD4()
{
  sub_1AE543910();
  return sub_1AE926FA0();
}

uint64_t sub_1AE542DFC()
{
  sub_1AE5439C4();
  return sub_1AE926F94();
}

uint64_t sub_1AE542E24()
{
  sub_1AE5439C4();
  return sub_1AE926FA0();
}

void sub_1AE542E4C()
{
  sub_1AE926EC8();
  sub_1AE4F6818();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

uint64_t sub_1AE542E74()
{
  sub_1AE54394C();
  return sub_1AE926F94();
}

uint64_t sub_1AE542E9C()
{
  sub_1AE54394C();
  return sub_1AE926FA0();
}

void AssetRegistryAssetLocation.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE4F67EC();
  sub_1AE505A74();
  v3 = sub_1AE501548(&qword_1EED9B380);
  v14 = *(_QWORD *)(v3 - 8);
  v15 = v3;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F90F4();
  sub_1AE501548(&qword_1EED9B388);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F910C();
  v16 = sub_1AE501548(&qword_1EED9B390);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE506FB8();
  v7 = *(_WORD *)(v0 + 24);
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE543910();
  sub_1AE54535C();
  if ((v7 & 0x80) != 0)
  {
    sub_1AE54549C();
    v8 = v16;
    sub_1AE503380();
    sub_1AE543988();
    sub_1AE54542C();
    v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v9 = v1;
    v10 = v15;
  }
  else
  {
    sub_1AE5439C4();
    v8 = v16;
    sub_1AE503380();
    sub_1AE543A00();
    sub_1AE5453C8();
    v9 = sub_1AE545450();
  }
  v11(v9, v10);
  v12 = sub_1AE545420();
  v13(v12, v8);
  sub_1AE506FAC();
  sub_1AE4F667C();
}

void AssetRegistryAssetLocation.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  unsigned __int16 v39;

  sub_1AE4F67EC();
  sub_1AE505A74();
  v34 = v12;
  sub_1AE501548(&qword_1EED9B3C0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE507460(v14, v32);
  sub_1AE501548(&qword_1EED9B3C8);
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F6744();
  sub_1AE501548(&qword_1EED9B3D0);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v16);
  v17 = v11[3];
  v18 = sub_1AE4F9858(v11, v17);
  sub_1AE543910();
  sub_1AE4F680C();
  if (a10)
    goto LABEL_8;
  v19 = sub_1AE54545C();
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20
    || (v33 = *(_BYTE *)(v19 + 32), sub_1AE50AF34(1, v20, v19, v19 + 32, 0, (2 * v20) | 1),
                                    sub_1AE5453A0(),
                                    v17 >> 1))
  {
    sub_1AE926988();
    sub_1AE4F6778();
    v22 = v21;
    sub_1AE501548(&qword_1EED99C38);
    *v22 = &type metadata for AssetRegistryAssetLocation;
    sub_1AE926B5C();
    v23 = sub_1AE5078F4();
    sub_1AE506878(v23, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_1AE506514((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
LABEL_8:
    v24 = (uint64_t)v11;
    goto LABEL_9;
  }
  if ((v33 & 1) != 0)
  {
    sub_1AE54549C();
    sub_1AE506B64();
    sub_1AE543A3C();
    sub_1AE545410();
    sub_1AE5453B4();
    sub_1AE4FE92C();
    sub_1AE506514((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v28 = v35;
    v29 = v36;
    v30 = v37;
    if (v38)
      v25 = 129;
    else
      v25 = 128;
    v31 = v25 | (v39 << 8);
  }
  else
  {
    LOBYTE(v35) = 0;
    sub_1AE5439C4();
    sub_1AE506B64();
    sub_1AE543A78();
    sub_1AE545410();
    sub_1AE545378();
    sub_1AE4FE92C();
    v26 = sub_1AE545420();
    sub_1AE506514(v26, v27);
    v28 = v35;
    v29 = v36;
    v30 = v37;
    v31 = v38;
  }
  v24 = (uint64_t)v11;
  *(_QWORD *)v34 = v28;
  *(_QWORD *)(v34 + 8) = v29;
  *(_QWORD *)(v34 + 16) = v30;
  *(_WORD *)(v34 + 24) = v31;
  *(_BYTE *)(v34 + 26) = BYTE2(v31);
LABEL_9:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v24);
  sub_1AE4F667C();
}

void sub_1AE5433E4()
{
  AssetRegistryAssetLocation.verifyValidity()();
}

void sub_1AE5433F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  AssetRegistryAssetLocation.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1AE54340C()
{
  AssetRegistryAssetLocation.encode(to:)();
}

uint64_t sub_1AE543420(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1AE543460()
{
  unint64_t result;

  result = qword_1EED9B2A0;
  if (!qword_1EED9B2A0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError);
    atomic_store(result, (unint64_t *)&qword_1EED9B2A0);
  }
  return result;
}

unint64_t sub_1AE54349C()
{
  unint64_t result;

  result = qword_1EED9B2A8;
  if (!qword_1EED9B2A8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ValidityError, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ValidityError);
    atomic_store(result, (unint64_t *)&qword_1EED9B2A8);
  }
  return result;
}

unint64_t sub_1AE5434D8()
{
  unint64_t result;

  result = qword_1EED9B2B8;
  if (!qword_1EED9B2B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935C74, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B2B8);
  }
  return result;
}

unint64_t sub_1AE543514()
{
  unint64_t result;

  result = qword_1EED9B2C0;
  if (!qword_1EED9B2C0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAcceptableBundleName, &type metadata for AssetRegistryAcceptableBundleName);
    atomic_store(result, (unint64_t *)&qword_1EED9B2C0);
  }
  return result;
}

unint64_t sub_1AE543550()
{
  unint64_t result;

  result = qword_1ED30F608;
  if (!qword_1ED30F608)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAcceptableBundleName, &type metadata for AssetRegistryAcceptableBundleName);
    atomic_store(result, (unint64_t *)&qword_1ED30F608);
  }
  return result;
}

unint64_t sub_1AE54358C()
{
  unint64_t result;

  result = qword_1EED9B2E8;
  if (!qword_1EED9B2E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935C24, &type metadata for AssetRegistryAssetLocation.LocalAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B2E8);
  }
  return result;
}

unint64_t sub_1AE5435C8()
{
  unint64_t result;

  result = qword_1EED9B2F0;
  if (!qword_1EED9B2F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935BD4, &type metadata for AssetRegistryAssetLocation.LocalAsset.RelativeToBundleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B2F0);
  }
  return result;
}

unint64_t sub_1AE543604()
{
  unint64_t result;

  result = qword_1EED9B2F8;
  if (!qword_1EED9B2F8)
  {
    result = MEMORY[0x1AF454B70]("-iI7", &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B2F8);
  }
  return result;
}

unint64_t sub_1AE543640()
{
  unint64_t result;

  result = qword_1EED9B300;
  if (!qword_1EED9B300)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935B84, &type metadata for AssetRegistryAssetLocation.LocalAsset.AbsoluteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B300);
  }
  return result;
}

unint64_t sub_1AE54367C()
{
  unint64_t result;

  result = qword_1EED9B308;
  if (!qword_1EED9B308)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B308);
  }
  return result;
}

unint64_t sub_1AE5436B8()
{
  unint64_t result;

  result = qword_1EED9B328;
  if (!qword_1EED9B328)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B328);
  }
  return result;
}

unint64_t sub_1AE5436F4()
{
  unint64_t result;

  result = qword_1EED9B330;
  if (!qword_1EED9B330)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B330);
  }
  return result;
}

unint64_t sub_1AE543730()
{
  unint64_t result;

  result = qword_1EED9B338;
  if (!qword_1EED9B338)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.TrialAsset.ValidityError, &type metadata for AssetRegistryAssetLocation.TrialAsset.ValidityError);
    atomic_store(result, (unint64_t *)&qword_1EED9B338);
  }
  return result;
}

unint64_t sub_1AE54376C()
{
  unint64_t result;

  result = qword_1EED9B348;
  if (!qword_1EED9B348)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935B34, &type metadata for AssetRegistryAssetLocation.TrialAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B348);
  }
  return result;
}

unint64_t sub_1AE5437A8()
{
  unint64_t result;

  result = qword_1EED9B350;
  if (!qword_1EED9B350)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialNamespace, &type metadata for TrialNamespace);
    atomic_store(result, (unint64_t *)&qword_1EED9B350);
  }
  return result;
}

unint64_t sub_1AE5437E4()
{
  unint64_t result;

  result = qword_1EED9B358;
  if (!qword_1EED9B358)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialAssetManager.AssetType, &type metadata for TrialAssetManager.AssetType);
    atomic_store(result, (unint64_t *)&qword_1EED9B358);
  }
  return result;
}

unint64_t sub_1AE543820()
{
  unint64_t result;

  result = qword_1EED9B360;
  if (!qword_1EED9B360)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialAssetManager.DownloadOptions, &type metadata for TrialAssetManager.DownloadOptions);
    atomic_store(result, (unint64_t *)&qword_1EED9B360);
  }
  return result;
}

unint64_t sub_1AE54385C()
{
  unint64_t result;

  result = qword_1EED9B370;
  if (!qword_1EED9B370)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialNamespace, &type metadata for TrialNamespace);
    atomic_store(result, (unint64_t *)&qword_1EED9B370);
  }
  return result;
}

unint64_t sub_1AE543898()
{
  unint64_t result;

  result = qword_1EED9B378;
  if (!qword_1EED9B378)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialAssetManager.AssetType, &type metadata for TrialAssetManager.AssetType);
    atomic_store(result, (unint64_t *)&qword_1EED9B378);
  }
  return result;
}

unint64_t sub_1AE5438D4()
{
  unint64_t result;

  result = qword_1ED3100B0;
  if (!qword_1ED3100B0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialAssetManager.DownloadOptions, &type metadata for TrialAssetManager.DownloadOptions);
    atomic_store(result, (unint64_t *)&qword_1ED3100B0);
  }
  return result;
}

unint64_t sub_1AE543910()
{
  unint64_t result;

  result = qword_1EED9B398;
  if (!qword_1EED9B398)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935AE4, &type metadata for AssetRegistryAssetLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B398);
  }
  return result;
}

unint64_t sub_1AE54394C()
{
  unint64_t result;

  result = qword_1EED9B3A0;
  if (!qword_1EED9B3A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935A94, &type metadata for AssetRegistryAssetLocation.TrialAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B3A0);
  }
  return result;
}

unint64_t sub_1AE543988()
{
  unint64_t result;

  result = qword_1EED9B3A8;
  if (!qword_1EED9B3A8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.TrialAsset, &type metadata for AssetRegistryAssetLocation.TrialAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B3A8);
  }
  return result;
}

unint64_t sub_1AE5439C4()
{
  unint64_t result;

  result = qword_1EED9B3B0;
  if (!qword_1EED9B3B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935A44, &type metadata for AssetRegistryAssetLocation.LocalAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B3B0);
  }
  return result;
}

unint64_t sub_1AE543A00()
{
  unint64_t result;

  result = qword_1EED9B3B8;
  if (!qword_1EED9B3B8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset, &type metadata for AssetRegistryAssetLocation.LocalAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B3B8);
  }
  return result;
}

unint64_t sub_1AE543A3C()
{
  unint64_t result;

  result = qword_1EED9B3D8;
  if (!qword_1EED9B3D8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.TrialAsset, &type metadata for AssetRegistryAssetLocation.TrialAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B3D8);
  }
  return result;
}

unint64_t sub_1AE543A78()
{
  unint64_t result;

  result = qword_1EED9B3E0;
  if (!qword_1EED9B3E0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset, &type metadata for AssetRegistryAssetLocation.LocalAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B3E0);
  }
  return result;
}

unint64_t sub_1AE543AB8()
{
  unint64_t result;

  result = qword_1EED9B3E8;
  if (!qword_1EED9B3E8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAcceptableBundleName, &type metadata for AssetRegistryAcceptableBundleName);
    atomic_store(result, (unint64_t *)&qword_1EED9B3E8);
  }
  return result;
}

unint64_t sub_1AE543AF8()
{
  unint64_t result;

  result = qword_1EED9B3F0;
  if (!qword_1EED9B3F0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.ValidityError, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.ValidityError);
    atomic_store(result, (unint64_t *)&qword_1EED9B3F0);
  }
  return result;
}

unint64_t sub_1AE543B34(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE543B58();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE543B58()
{
  unint64_t result;

  result = qword_1EED9B3F8;
  if (!qword_1EED9B3F8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B3F8);
  }
  return result;
}

unint64_t sub_1AE543B94(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE543BB8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE543BB8()
{
  unint64_t result;

  result = qword_1EED9B400;
  if (!qword_1EED9B400)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B400);
  }
  return result;
}

void sub_1AE543BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AE53C8D0(a1, a2, a3, (uint64_t (*)(void))sub_1AE5436F4, (uint64_t (*)(void))sub_1AE54367C);
}

unint64_t sub_1AE543C0C()
{
  unint64_t result;

  result = qword_1EED9B408;
  if (!qword_1EED9B408)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ValidityError, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ValidityError);
    atomic_store(result, (unint64_t *)&qword_1EED9B408);
  }
  return result;
}

unint64_t sub_1AE543C4C()
{
  unint64_t result;

  result = qword_1EED9B410;
  if (!qword_1EED9B410)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError);
    atomic_store(result, (unint64_t *)&qword_1EED9B410);
  }
  return result;
}

unint64_t sub_1AE543C88(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE543CAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE543CAC()
{
  unint64_t result;

  result = qword_1EED9B418;
  if (!qword_1EED9B418)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B418);
  }
  return result;
}

unint64_t sub_1AE543CE8(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE543D0C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE543D0C()
{
  unint64_t result;

  result = qword_1EED9B420;
  if (!qword_1EED9B420)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B420);
  }
  return result;
}

void sub_1AE543D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AE53C8D0(a1, a2, a3, (uint64_t (*)(void))sub_1AE5436B8, (uint64_t (*)(void))sub_1AE543604);
}

unint64_t sub_1AE543D5C(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE543D80();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE543D80()
{
  unint64_t result;

  result = qword_1EED9B428;
  if (!qword_1EED9B428)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset, &type metadata for AssetRegistryAssetLocation.LocalAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B428);
  }
  return result;
}

unint64_t sub_1AE543DBC(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE543DE0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE543DE0()
{
  unint64_t result;

  result = qword_1EED9B430;
  if (!qword_1EED9B430)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.LocalAsset, &type metadata for AssetRegistryAssetLocation.LocalAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B430);
  }
  return result;
}

void sub_1AE543E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AE53C8D0(a1, a2, a3, (uint64_t (*)(void))sub_1AE543A78, (uint64_t (*)(void))sub_1AE543A00);
}

unint64_t sub_1AE543E30(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE543E54();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE543E54()
{
  unint64_t result;

  result = qword_1EED9B438;
  if (!qword_1EED9B438)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation.TrialAsset, &type metadata for AssetRegistryAssetLocation.TrialAsset);
    atomic_store(result, (unint64_t *)&qword_1EED9B438);
  }
  return result;
}

void sub_1AE543E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AE53C8D0(a1, a2, a3, (uint64_t (*)(void))sub_1AE543A3C, (uint64_t (*)(void))sub_1AE543988);
}

unint64_t sub_1AE543EA4(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE543EC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE543EC8()
{
  unint64_t result;

  result = qword_1EED9B440;
  if (!qword_1EED9B440)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAssetLocation, &type metadata for AssetRegistryAssetLocation);
    atomic_store(result, (unint64_t *)&qword_1EED9B440);
  }
  return result;
}

void sub_1AE543F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AE53C8D0(a1, a2, a3, (uint64_t (*)(void))sub_1AE540314, (uint64_t (*)(void))sub_1AE5402D8);
}

void type metadata accessor for AssetRegistryAcceptableBundleName()
{
  sub_1AE4F67D4();
}

uint64_t dispatch thunk of AssetRegistryAssetLocalLocationProtocol.localURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t destroy for AssetRegistryAssetLocation(uint64_t a1)
{
  return sub_1AE536AF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_WORD *)(a1 + 24));
}

uint64_t initializeWithCopy for AssetRegistryAssetLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int16 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 26);
  v7 = *(_WORD *)(a2 + 24);
  sub_1AE536B1C(*(_QWORD *)a2, v4, v5, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 26) = v6;
  *(_WORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAssetLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 26);
  v7 = *(_WORD *)(a2 + 24);
  sub_1AE536B1C(*(_QWORD *)a2, v4, v5, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_WORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 26) = v6;
  sub_1AE536AF8(v8, v9, v10, v11);
  return a1;
}

__n128 initializeWithTake for AssetRegistryAssetLocation.TrialAsset(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AssetRegistryAssetLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 26);
  v5 = *(_WORD *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(_WORD *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 26) = v4;
  sub_1AE536AF8(v6, v8, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocation(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7F && *(_BYTE *)(a1 + 27))
    {
      v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      v2 = (*(_WORD *)(a1 + 24) & 0x7E | (*(unsigned __int16 *)(a1 + 24) >> 7) & 1) ^ 0x7F;
      if (v2 >= 0x7E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 27) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 27) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_BYTE *)(result + 26) = 0;
      *(_WORD *)(result + 24) = 2 * ((((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6)) & 0x7F);
    }
  }
  return result;
}

uint64_t sub_1AE544164(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 24) >> 7) & 1;
}

uint64_t sub_1AE544170(uint64_t a1)
{
  uint64_t result;
  int v2;
  int v3;

  v2 = *(unsigned __int16 *)(a1 + 24);
  result = a1 + 24;
  v3 = *(unsigned __int8 *)(result + 2);
  *(_WORD *)result = v2 & 0xFF7F;
  *(_BYTE *)(result + 2) = (v2 & 0xFFFFFF7F | (v3 << 16)) >> 16;
  return result;
}

uint64_t sub_1AE544190(uint64_t a1, char a2)
{
  uint64_t result;
  int v3;
  unsigned int v4;

  v3 = *(unsigned __int16 *)(a1 + 24);
  result = a1 + 24;
  v4 = v3 & 0xFFFFFF01 | (*(unsigned __int8 *)(result + 2) << 16);
  *(_WORD *)result = v3 & 0xFF01 | ((a2 & 1) << 7);
  *(_BYTE *)(result + 2) = BYTE2(v4);
  return result;
}

void type metadata accessor for AssetRegistryAssetLocation()
{
  sub_1AE4F67D4();
}

uint64_t destroy for AssetRegistryAssetLocation.LocalAsset()
{
  return sub_1AE536B10();
}

uint64_t initializeWithCopy for AssetRegistryAssetLocation.LocalAsset(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = *((_BYTE *)a2 + 24);
  sub_1AE536B34();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAssetLocation.LocalAsset(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = *((_BYTE *)a2 + 24);
  sub_1AE536B34();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1AE536B10();
  return a1;
}

uint64_t assignWithTake for AssetRegistryAssetLocation.LocalAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1AE536B10();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocation.LocalAsset(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocation.LocalAsset(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AE544374(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1AE54437C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

void type metadata accessor for AssetRegistryAssetLocation.LocalAsset()
{
  sub_1AE4F67D4();
}

_QWORD *initializeBufferWithCopyOfBuffer for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset()
{
  sub_1AE4F67D4();
}

void type metadata accessor for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.ValidityError()
{
  sub_1AE4F67D4();
}

uint64_t destroy for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s20IntelligencePlatform26AssetRegistryAssetLocationO10LocalAssetO18LocalRelativeAssetVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset()
{
  sub_1AE4F67D4();
}

void type metadata accessor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ValidityError()
{
  sub_1AE4F67D4();
}

void type metadata accessor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.ResourceError()
{
  sub_1AE4F67D4();
}

uint64_t initializeWithCopy for AssetRegistryAssetLocation.TrialAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAssetLocation.TrialAsset(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  return a1;
}

uint64_t assignWithTake for AssetRegistryAssetLocation.TrialAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocation.TrialAsset(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 27))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocation.TrialAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 27) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 27) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AssetRegistryAssetLocation.TrialAsset()
{
  sub_1AE4F67D4();
}

uint64_t destroy for AssetRegistryAssetLocation.TrialAsset.ValidityError()
{
  return sub_1AE544754();
}

uint64_t sub_1AE544754()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s20IntelligencePlatform26AssetRegistryAssetLocationO10TrialAssetV13ValidityErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1AE509358();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AssetRegistryAssetLocation.TrialAsset.ValidityError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1AE509358();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1AE544754();
  return a1;
}

uint64_t assignWithTake for AssetRegistryAssetLocation.TrialAsset.ValidityError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1AE544754();
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocation.TrialAsset.ValidityError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocation.TrialAsset.ValidityError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AE5448C0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

void type metadata accessor for AssetRegistryAssetLocation.TrialAsset.ValidityError()
{
  sub_1AE4F67D4();
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.CodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.LocalAssetCodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.LocalAssetCodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.TrialAssetCodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.TrialAssetCodingKeys;
}

uint64_t getEnumTagSinglePayload for AssetRegistryAssetLocation.TrialAsset.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryAssetLocation.TrialAsset.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AE5449DC + 4 * byte_1AE934BB9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AE544A10 + 4 * byte_1AE934BB4[v4]))();
}

uint64_t sub_1AE544A10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE544A18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE544A20);
  return result;
}

uint64_t sub_1AE544A2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE544A34);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AE544A38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE544A40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.TrialAsset.CodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.TrialAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.LocalAsset.CodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.LocalAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.LocalAsset.AbsoluteCodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.LocalAsset.AbsoluteCodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.LocalAsset.RelativeToBundleCodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.LocalAsset.RelativeToBundleCodingKeys;
}

uint64_t _s20IntelligencePlatform33AssetRegistryAcceptableBundleNameOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE544AD8 + 4 * byte_1AE934BC3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE544B0C + 4 * byte_1AE934BBE[v4]))();
}

uint64_t sub_1AE544B0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE544B14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE544B1CLL);
  return result;
}

uint64_t sub_1AE544B28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE544B30);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE544B34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE544B3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.CodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.CodingKeys;
}

uint64_t _s20IntelligencePlatform26AssetRegistryAssetLocationO10LocalAssetO18LocalRelativeAssetV13ResourceErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE544B98 + 4 * byte_1AE934BC8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE544BB8 + 4 * byte_1AE934BCD[v4]))();
}

_BYTE *sub_1AE544B98(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE544BB8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE544BC0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE544BC8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE544BD0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE544BD8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.CodingKeys()
{
  return &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.CodingKeys;
}

unint64_t sub_1AE544BF8()
{
  unint64_t result;

  result = qword_1EED9B448;
  if (!qword_1EED9B448)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93545C, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B448);
  }
  return result;
}

unint64_t sub_1AE544C38()
{
  unint64_t result;

  result = qword_1EED9B450;
  if (!qword_1EED9B450)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935514, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B450);
  }
  return result;
}

unint64_t sub_1AE544C78()
{
  unint64_t result;

  result = qword_1EED9B458;
  if (!qword_1EED9B458)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9355CC, &type metadata for AssetRegistryAssetLocation.LocalAsset.RelativeToBundleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B458);
  }
  return result;
}

unint64_t sub_1AE544CB8()
{
  unint64_t result;

  result = qword_1EED9B460;
  if (!qword_1EED9B460)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935684, &type metadata for AssetRegistryAssetLocation.LocalAsset.AbsoluteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B460);
  }
  return result;
}

unint64_t sub_1AE544CF8()
{
  unint64_t result;

  result = qword_1EED9B468;
  if (!qword_1EED9B468)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93573C, &type metadata for AssetRegistryAssetLocation.LocalAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B468);
  }
  return result;
}

unint64_t sub_1AE544D38()
{
  unint64_t result;

  result = qword_1EED9B470;
  if (!qword_1EED9B470)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9357F4, &type metadata for AssetRegistryAssetLocation.TrialAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B470);
  }
  return result;
}

unint64_t sub_1AE544D78()
{
  unint64_t result;

  result = qword_1EED9B478;
  if (!qword_1EED9B478)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9358AC, &type metadata for AssetRegistryAssetLocation.TrialAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B478);
  }
  return result;
}

unint64_t sub_1AE544DB8()
{
  unint64_t result;

  result = qword_1EED9B480;
  if (!qword_1EED9B480)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935964, &type metadata for AssetRegistryAssetLocation.LocalAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B480);
  }
  return result;
}

unint64_t sub_1AE544DF8()
{
  unint64_t result;

  result = qword_1EED9B488;
  if (!qword_1EED9B488)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935A1C, &type metadata for AssetRegistryAssetLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B488);
  }
  return result;
}

unint64_t sub_1AE544E38()
{
  unint64_t result;

  result = qword_1EED9B490;
  if (!qword_1EED9B490)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9358D4, &type metadata for AssetRegistryAssetLocation.LocalAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B490);
  }
  return result;
}

unint64_t sub_1AE544E78()
{
  unint64_t result;

  result = qword_1EED9B498;
  if (!qword_1EED9B498)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9358FC, &type metadata for AssetRegistryAssetLocation.LocalAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B498);
  }
  return result;
}

unint64_t sub_1AE544EB8()
{
  unint64_t result;

  result = qword_1EED9B4A0;
  if (!qword_1EED9B4A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93581C, &type metadata for AssetRegistryAssetLocation.TrialAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B4A0);
  }
  return result;
}

unint64_t sub_1AE544EF8()
{
  unint64_t result;

  result = qword_1EED9B4A8;
  if (!qword_1EED9B4A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935844, &type metadata for AssetRegistryAssetLocation.TrialAssetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B4A8);
  }
  return result;
}

unint64_t sub_1AE544F38()
{
  unint64_t result;

  result = qword_1EED9B4B0;
  if (!qword_1EED9B4B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93598C, &type metadata for AssetRegistryAssetLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B4B0);
  }
  return result;
}

unint64_t sub_1AE544F78()
{
  unint64_t result;

  result = qword_1EED9B4B8;
  if (!qword_1EED9B4B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9359B4, &type metadata for AssetRegistryAssetLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B4B8);
  }
  return result;
}

unint64_t sub_1AE544FB8()
{
  unint64_t result;

  result = qword_1EED9B4C0;
  if (!qword_1EED9B4C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935764, &type metadata for AssetRegistryAssetLocation.TrialAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B4C0);
  }
  return result;
}

unint64_t sub_1AE544FF8()
{
  unint64_t result;

  result = qword_1EED9B4C8;
  if (!qword_1EED9B4C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93578C, &type metadata for AssetRegistryAssetLocation.TrialAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B4C8);
  }
  return result;
}

unint64_t sub_1AE545038()
{
  unint64_t result;

  result = qword_1EED9B4D0;
  if (!qword_1EED9B4D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9355F4, &type metadata for AssetRegistryAssetLocation.LocalAsset.AbsoluteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B4D0);
  }
  return result;
}

unint64_t sub_1AE545078()
{
  unint64_t result;

  result = qword_1EED9B4D8;
  if (!qword_1EED9B4D8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93561C, &type metadata for AssetRegistryAssetLocation.LocalAsset.AbsoluteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B4D8);
  }
  return result;
}

unint64_t sub_1AE5450B8()
{
  unint64_t result;

  result = qword_1EED9B4E0;
  if (!qword_1EED9B4E0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93553C, &type metadata for AssetRegistryAssetLocation.LocalAsset.RelativeToBundleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B4E0);
  }
  return result;
}

unint64_t sub_1AE5450F8()
{
  unint64_t result;

  result = qword_1EED9B4E8;
  if (!qword_1EED9B4E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935564, &type metadata for AssetRegistryAssetLocation.LocalAsset.RelativeToBundleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B4E8);
  }
  return result;
}

unint64_t sub_1AE545138()
{
  unint64_t result;

  result = qword_1EED9B4F0;
  if (!qword_1EED9B4F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9356AC, &type metadata for AssetRegistryAssetLocation.LocalAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B4F0);
  }
  return result;
}

unint64_t sub_1AE545178()
{
  unint64_t result;

  result = qword_1EED9B4F8;
  if (!qword_1EED9B4F8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9356D4, &type metadata for AssetRegistryAssetLocation.LocalAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B4F8);
  }
  return result;
}

unint64_t sub_1AE5451B8()
{
  unint64_t result;

  result = qword_1EED9B500;
  if (!qword_1EED9B500)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE935484, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B500);
  }
  return result;
}

unint64_t sub_1AE5451F8()
{
  unint64_t result;

  result = qword_1EED9B508;
  if (!qword_1EED9B508)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9354AC, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalRelativeAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B508);
  }
  return result;
}

unint64_t sub_1AE545238()
{
  unint64_t result;

  result = qword_1EED9B510;
  if (!qword_1EED9B510)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9353CC, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B510);
  }
  return result;
}

unint64_t sub_1AE545278()
{
  unint64_t result;

  result = qword_1EED9B518;
  if (!qword_1EED9B518)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9353F4, &type metadata for AssetRegistryAssetLocation.LocalAsset.LocalAbsoluteAsset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B518);
  }
  return result;
}

unint64_t sub_1AE5452B4()
{
  unint64_t result;

  result = qword_1ED30F600;
  if (!qword_1ED30F600)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryAcceptableBundleName, &type metadata for AssetRegistryAcceptableBundleName);
    atomic_store(result, (unint64_t *)&qword_1ED30F600);
  }
  return result;
}

void sub_1AE54531C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 8);
  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v1 - 88) = v2;
}

unint64_t sub_1AE545344()
{
  return sub_1AE536B60();
}

uint64_t sub_1AE54535C()
{
  return sub_1AE926F4C();
}

uint64_t sub_1AE545370@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_1AE545378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 8))(v1, v0);
}

uint64_t sub_1AE54538C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v0, v1);
}

uint64_t sub_1AE5453A0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5453B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v0, v1);
}

uint64_t sub_1AE5453C8()
{
  return sub_1AE926CC4();
}

unint64_t sub_1AE5453D8()
{
  return sub_1AE536B9C();
}

uint64_t sub_1AE5453E0()
{
  uint64_t v0;

  return v0 - 112;
}

uint64_t sub_1AE5453F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return sub_1AE9246E4();
}

uint64_t sub_1AE545400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104))(v3, a2, v4);
}

uint64_t sub_1AE545410()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE545420()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE54542C()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE545438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_1AE545444()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE545450()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE54545C()
{
  return sub_1AE926C1C();
}

uint64_t sub_1AE54547C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return *(_QWORD *)(v0 - 88);
}

unint64_t sub_1AE545490()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 104) = 1;
  return sub_1AE5435C8();
}

unint64_t sub_1AE54549C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 112) = 1;
  return sub_1AE54394C();
}

uint64_t AssetRegistryRemoteBackendType.hash(into:)()
{
  return sub_1AE926ED4();
}

BOOL static AssetRegistryRemoteBackendType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AssetRegistryRemoteBackendType.hashValue.getter()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  return sub_1AE926F10();
}

unint64_t sub_1AE54554C()
{
  unint64_t result;

  result = qword_1EED9B520;
  if (!qword_1EED9B520)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryRemoteBackendType, &type metadata for AssetRegistryRemoteBackendType);
    atomic_store(result, (unint64_t *)&qword_1EED9B520);
  }
  return result;
}

uint64_t dispatch thunk of AssetRegistryBackend.assetEntry(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t storeEnumTagSinglePayload for AssetRegistryRemoteBackendType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE5455F0 + 4 * byte_1AE935D25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE545624 + 4 * byte_1AE935D20[v4]))();
}

uint64_t sub_1AE545624(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE54562C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE545634);
  return result;
}

uint64_t sub_1AE545640(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE545648);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE54564C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE545654(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryRemoteBackendType()
{
  return &type metadata for AssetRegistryRemoteBackendType;
}

uint64_t dispatch thunk of static AssetRegistryRemoteBackend.assetRegistryRemoteBackendType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AssetRegistryRemoteWritableBackend.overrideAssetEntry(for:in:overrideAssetEntryParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t AssetRegistryBasicServer.__allocating_init(jsonDecoder:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  type metadata accessor for AssetRegistryServerConfigLoader();
  v3 = sub_1AE54EF24();
  if (v1)
    return swift_release();
  v5 = v3;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v5;
  *(_QWORD *)(result + 24) = a1;
  return result;
}

uint64_t AssetRegistryBasicServer.assetEntryResult(for:in:localOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;

  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1AE54C9E4(v5, a3, a4, a1, a2, a5);
}

uint64_t sub_1AE54576C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;

  result = sub_1AE54EF94(a2, a3, *(_QWORD *)(a1 + 24));
  if (!v6)
  {
    v15 = v13;
    if (v13)
    {
      v16 = result;
      sub_1AE548098(a4, a5, v14, (uint64_t)&v23);
      result = sub_1AE53F134(v16, v15);
      v17 = v27;
      if (v27 != 1)
      {
        v20 = v26;
        v21 = v25;
        v22 = v24;
        *(_OWORD *)a6 = v23;
        *(_QWORD *)(a6 + 16) = v22;
        *(_BYTE *)(a6 + 26) = BYTE2(v21);
        *(_WORD *)(a6 + 24) = v21;
        *(_QWORD *)(a6 + 32) = v20;
        *(_QWORD *)(a6 + 40) = v17;
        return result;
      }
      sub_1AE545928();
      sub_1AE4F6778();
      *(_QWORD *)v18 = a4;
      *(_QWORD *)(v18 + 8) = a5;
      *(_BYTE *)(v18 + 16) = 1;
    }
    else
    {
      sub_1AE545928();
      sub_1AE4F6778();
      *(_QWORD *)v19 = a2;
      *(_QWORD *)(v19 + 8) = a3;
      *(_BYTE *)(v19 + 16) = 0;
    }
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  return result;
}

uint64_t AssetRegistryBasicServer.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t AssetRegistryBasicServer.__deallocating_deinit()
{
  AssetRegistryBasicServer.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetRegistryBasicServer()
{
  return objc_opt_self();
}

uint64_t method lookup function for AssetRegistryBasicServer()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1AE545928()
{
  unint64_t result;

  result = qword_1EED94198[0];
  if (!qword_1EED94198[0])
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryLookupError, &type metadata for AssetRegistryLookupError);
    atomic_store(result, qword_1EED94198);
  }
  return result;
}

uint64_t sub_1AE545964(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v6;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001AE97CC10 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x4E64497465737361 && a2 == 0xEF646E756F46746FLL;
    if (v5 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000001AE97CC30)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v6 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v6 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AE545AD0(char a1)
{
  uint64_t result;

  result = 0xD000000000000010;
  if (a1)
  {
    if (a1 == 1)
      return 0x4E64497465737361;
    else
      return 0xD000000000000013;
  }
  return result;
}

uint64_t sub_1AE545B3C()
{
  sub_1AE545F54();
  return sub_1AE926F94();
}

uint64_t sub_1AE545B64()
{
  sub_1AE545F54();
  return sub_1AE926FA0();
}

void sub_1AE545B8C()
{
  sub_1AE5465F4();
}

uint64_t sub_1AE545BA8()
{
  char *v0;

  return sub_1AE545AD0(*v0);
}

uint64_t sub_1AE545BB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE545964(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE545BD4()
{
  sub_1AE545EDC();
  return sub_1AE926F94();
}

uint64_t sub_1AE545BFC()
{
  sub_1AE545EDC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE545C24()
{
  sub_1AE545F90();
  return sub_1AE926F94();
}

uint64_t sub_1AE545C4C()
{
  sub_1AE545F90();
  return sub_1AE926FA0();
}

uint64_t sub_1AE545C74()
{
  sub_1AE545F18();
  return sub_1AE926F94();
}

uint64_t sub_1AE545C9C()
{
  sub_1AE545F18();
  return sub_1AE926FA0();
}

void AssetRegistryLookupError.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_1AE4F67EC();
  v3 = v2;
  v4 = sub_1AE501548(&qword_1EED9B528);
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE515438(v6, v18);
  v7 = sub_1AE501548(&qword_1EED9B530);
  v20 = *(_QWORD *)(v7 - 8);
  v21 = v7;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F666C();
  v11 = v10 - v9;
  v12 = sub_1AE501548(&qword_1EED9B538);
  v19 = *(_QWORD *)(v12 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4FB7E8();
  sub_1AE501548(&qword_1EED9B540);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4FC590();
  v15 = *(unsigned __int8 *)(v1 + 16);
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE545EDC();
  sub_1AE926F4C();
  if (v15)
  {
    if (v15 == 1)
    {
      sub_1AE548074();
      sub_1AE4FFC6C();
      sub_1AE50A960();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v11, v21);
    }
    else
    {
      sub_1AE548048();
      sub_1AE4FFC6C();
      sub_1AE50A960();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
    v16 = sub_1AE548054();
  }
  else
  {
    sub_1AE545F90();
    sub_1AE503380();
    sub_1AE50A960();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v0, v12);
    v16 = sub_1AE548008();
  }
  v17(v16);
  sub_1AE4F667C();
}

unint64_t sub_1AE545EDC()
{
  unint64_t result;

  result = qword_1EED9B548;
  if (!qword_1EED9B548)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936A88, &type metadata for AssetRegistryLookupError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B548);
  }
  return result;
}

unint64_t sub_1AE545F18()
{
  unint64_t result;

  result = qword_1EED9B550;
  if (!qword_1EED9B550)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936A38, &type metadata for AssetRegistryLookupError.InternalServerErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B550);
  }
  return result;
}

unint64_t sub_1AE545F54()
{
  unint64_t result;

  result = qword_1EED9B558;
  if (!qword_1EED9B558)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9369E8, &type metadata for AssetRegistryLookupError.AssetIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B558);
  }
  return result;
}

unint64_t sub_1AE545F90()
{
  unint64_t result;

  result = qword_1EED9B560;
  if (!qword_1EED9B560)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936998, &type metadata for AssetRegistryLookupError.DomainIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B560);
  }
  return result;
}

void AssetRegistryLookupError.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char v50;

  sub_1AE4F67EC();
  v2 = v1;
  v45 = v3;
  v4 = sub_1AE501548(&qword_1EED9B568);
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  v48 = v6;
  v44 = sub_1AE501548(&qword_1EED9B570);
  v41 = *(_QWORD *)(v44 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE548018(v8, v39);
  v9 = sub_1AE501548(&qword_1EED9B578);
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F666C();
  v12 = v11 - v10;
  v13 = sub_1AE501548(&qword_1EED9B580);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F666C();
  v17 = v16 - v15;
  v49 = v2;
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE545EDC();
  sub_1AE926F34();
  if (v0)
  {
    v18 = (uint64_t)v2;
LABEL_11:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v18);
    goto LABEL_12;
  }
  v40 = v14;
  v19 = sub_1AE926C1C();
  v20 = *(_QWORD *)(v19 + 16);
  v21 = v13;
  if (!v20)
  {
    v18 = (uint64_t)v2;
LABEL_10:
    sub_1AE926988();
    sub_1AE4F6778();
    v31 = v30;
    sub_1AE501548(&qword_1EED99C38);
    *v31 = &type metadata for AssetRegistryLookupError;
    sub_1AE926B5C();
    v32 = sub_1AE5078F4();
    sub_1AE509370(v32, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v17, v21);
    goto LABEL_11;
  }
  v22 = *(unsigned __int8 *)(v19 + 32);
  sub_1AE50AF34(1, v20, v19, v19 + 32, 0, (2 * v20) | 1);
  v24 = v23;
  v26 = v25;
  swift_bridgeObjectRelease();
  if (v24 != v26 >> 1)
  {
    v18 = (uint64_t)v2;
    v21 = v13;
    goto LABEL_10;
  }
  v50 = v22;
  if (v22)
  {
    if (v22 == 1)
    {
      sub_1AE548074();
      sub_1AE4FD9EC();
      v27 = sub_1AE506FD8();
      v28 = (uint64_t)v2;
      v29 = v14;
      v35 = v34;
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v46, v44);
    }
    else
    {
      sub_1AE548048();
      sub_1AE4FD9EC();
      v33 = sub_1AE926BB0();
      v28 = (uint64_t)v2;
      v29 = v14;
      v38 = v37;
      v47 = v33;
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v48, v43);
      v27 = v47;
      v35 = v38;
    }
  }
  else
  {
    sub_1AE545F90();
    sub_1AE4FD9EC();
    v27 = sub_1AE506FD8();
    v29 = v14;
    v35 = v36;
    sub_1AE508E90(v12);
    v28 = (uint64_t)v49;
  }
  sub_1AE509D98();
  sub_1AE505374(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
  *(_QWORD *)v45 = v27;
  *(_QWORD *)(v45 + 8) = v35;
  *(_BYTE *)(v45 + 16) = v50;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v28);
LABEL_12:
  sub_1AE4F667C();
}

uint64_t sub_1AE546430(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v6;

  if (a1 == 0xD000000000000023 && a2 == 0x80000001AE97CC50 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AE97CC10 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = a1 == 0x4E64497465737361 && a2 == 0xEF646E756F46746FLL;
    if (v5 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000001AE97CC30)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v6 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v6 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

void sub_1AE5465F4()
{
  sub_1AE4F76E0();
  sub_1AE926ED4();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

uint64_t sub_1AE546624(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AE546660 + 4 * byte_1AE935E80[a1]))(0xD000000000000023, 0x80000001AE97CC50);
}

unint64_t sub_1AE546660()
{
  return 0xD000000000000010;
}

uint64_t sub_1AE54667C()
{
  return 0x4E64497465737361;
}

uint64_t sub_1AE5466A0()
{
  uint64_t v0;

  return v0 + 3;
}

uint64_t sub_1AE5466B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 2;
  return swift_bridgeObjectRetain();
}

void sub_1AE5466CC()
{
  AssetRegistryLookupError.init(from:)();
}

void sub_1AE5466E0()
{
  AssetRegistryLookupError.encode(to:)();
}

uint64_t sub_1AE5466F4()
{
  sub_1AE5470A0();
  return sub_1AE926F94();
}

uint64_t sub_1AE54671C()
{
  sub_1AE5470A0();
  return sub_1AE926FA0();
}

void sub_1AE546744()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

uint64_t sub_1AE546778()
{
  unsigned __int8 *v0;

  return sub_1AE546624(*v0);
}

uint64_t sub_1AE546780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE546430(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5467A4()
{
  sub_1AE547028();
  return sub_1AE926F94();
}

uint64_t sub_1AE5467CC()
{
  sub_1AE547028();
  return sub_1AE926FA0();
}

uint64_t sub_1AE5467F4()
{
  sub_1AE5470DC();
  return sub_1AE926F94();
}

uint64_t sub_1AE54681C()
{
  sub_1AE5470DC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE546844()
{
  sub_1AE547064();
  return sub_1AE926F94();
}

uint64_t sub_1AE54686C()
{
  sub_1AE547064();
  return sub_1AE926FA0();
}

uint64_t sub_1AE546894()
{
  sub_1AE547118();
  return sub_1AE926F94();
}

uint64_t sub_1AE5468BC()
{
  sub_1AE547118();
  return sub_1AE926FA0();
}

void AssetRegistryOverrideError.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1AE4F67EC();
  v2 = v1;
  sub_1AE501548(&qword_1EED9B588);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE515438(v4, v10);
  sub_1AE501548(&qword_1EED9B590);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9B598);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4FB7E8();
  sub_1AE501548(&qword_1EED9B5A0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F666C();
  sub_1AE501548(&qword_1EED9B5A8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4FC590();
  v9 = *(unsigned __int8 *)(v0 + 16);
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE547028();
  sub_1AE926F4C();
  __asm { BR              X9 }
}

void sub_1AE546A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  *(_BYTE *)(v2 - 68) = 0;
  sub_1AE547118();
  sub_1AE4FFC6C();
  sub_1AE50A960();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v0, v1);
  v3 = sub_1AE548054();
  v4(v3);
  sub_1AE4F667C();
}

void AssetRegistryOverrideError.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32[5];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  sub_1AE4F67EC();
  v44 = v1;
  v3 = v2;
  v42 = v4;
  v36 = sub_1AE501548(&qword_1EED9B5D8);
  v39 = *(_QWORD *)(v36 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE548018(v6, v32[0]);
  v7 = sub_1AE501548(&qword_1EED9B5E0);
  v37 = *(_QWORD *)(v7 - 8);
  v38 = v7;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F9024();
  v41 = v9;
  v10 = sub_1AE501548(&qword_1EED9B5E8);
  v34 = *(_QWORD *)(v10 - 8);
  v35 = v10;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F9024();
  v40 = v12;
  v13 = sub_1AE501548(&qword_1EED9B5F0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1AE501548(&qword_1EED9B5F8);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  sub_1AE4FB7E8();
  v19 = v3[3];
  v43 = v3;
  sub_1AE4F9858(v3, v19);
  sub_1AE547028();
  v20 = v44;
  sub_1AE926F34();
  if (!v20)
  {
    v32[2] = v13;
    v32[3] = (uint64_t)v16;
    v32[1] = v14;
    v44 = v18;
    v21 = v0;
    v22 = sub_1AE926C1C();
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v32[4] = 0;
      v33 = v0;
      v24 = *(unsigned __int8 *)(v22 + 32);
      sub_1AE50AF34(1, v23, v22, v22 + 32, 0, (2 * v23) | 1);
      v26 = v25;
      v28 = v27;
      swift_bridgeObjectRelease();
      if (v26 == v28 >> 1)
        __asm { BR              X9 }
      v21 = v33;
    }
    sub_1AE926988();
    sub_1AE4F6778();
    v30 = v29;
    sub_1AE501548(&qword_1EED99C38);
    *v30 = &type metadata for AssetRegistryOverrideError;
    sub_1AE926B5C();
    v31 = sub_1AE5078F4();
    sub_1AE509370(v31, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v21, v17);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v43);
  sub_1AE4F667C();
}

uint64_t sub_1AE546FEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 3;
  return swift_bridgeObjectRetain();
}

void sub_1AE547000()
{
  AssetRegistryOverrideError.init(from:)();
}

void sub_1AE547014()
{
  AssetRegistryOverrideError.encode(to:)();
}

unint64_t sub_1AE547028()
{
  unint64_t result;

  result = qword_1EED9B5B0;
  if (!qword_1EED9B5B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936948, &type metadata for AssetRegistryOverrideError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B5B0);
  }
  return result;
}

unint64_t sub_1AE547064()
{
  unint64_t result;

  result = qword_1EED9B5B8;
  if (!qword_1EED9B5B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9368F8, &type metadata for AssetRegistryOverrideError.InternalServerErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B5B8);
  }
  return result;
}

unint64_t sub_1AE5470A0()
{
  unint64_t result;

  result = qword_1EED9B5C0;
  if (!qword_1EED9B5C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9368A8, &type metadata for AssetRegistryOverrideError.AssetIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B5C0);
  }
  return result;
}

unint64_t sub_1AE5470DC()
{
  unint64_t result;

  result = qword_1EED9B5C8;
  if (!qword_1EED9B5C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936858, &type metadata for AssetRegistryOverrideError.DomainIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B5C8);
  }
  return result;
}

unint64_t sub_1AE547118()
{
  unint64_t result;

  result = qword_1EED9B5D0;
  if (!qword_1EED9B5D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936808, &type metadata for AssetRegistryOverrideError.LackingOverrideEntitlementForDomainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B5D0);
  }
  return result;
}

uint64_t sub_1AE547154(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE547204(a1, a2, a3, (uint64_t (*)(void))sub_1AE547170, (uint64_t (*)(void))sub_1AE5471AC, (uint64_t (*)(void))sub_1AE545928);
}

unint64_t sub_1AE547170()
{
  unint64_t result;

  result = qword_1EED94190;
  if (!qword_1EED94190)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryLookupError, &type metadata for AssetRegistryLookupError);
    atomic_store(result, (unint64_t *)&qword_1EED94190);
  }
  return result;
}

unint64_t sub_1AE5471AC()
{
  unint64_t result;

  result = qword_1EED94188;
  if (!qword_1EED94188)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryLookupError, &type metadata for AssetRegistryLookupError);
    atomic_store(result, (unint64_t *)&qword_1EED94188);
  }
  return result;
}

uint64_t sub_1AE5471E8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE547204(a1, a2, a3, (uint64_t (*)(void))sub_1AE547248, (uint64_t (*)(void))sub_1AE547284, (uint64_t (*)(void))sub_1AE5472C0);
}

uint64_t sub_1AE547204(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t result;

  a1[1] = a4();
  a1[2] = a5();
  result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1AE547248()
{
  unint64_t result;

  result = qword_1EED9B600;
  if (!qword_1EED9B600)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryOverrideError, &type metadata for AssetRegistryOverrideError);
    atomic_store(result, (unint64_t *)&qword_1EED9B600);
  }
  return result;
}

unint64_t sub_1AE547284()
{
  unint64_t result;

  result = qword_1EED9B608;
  if (!qword_1EED9B608)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryOverrideError, &type metadata for AssetRegistryOverrideError);
    atomic_store(result, (unint64_t *)&qword_1EED9B608);
  }
  return result;
}

unint64_t sub_1AE5472C0()
{
  unint64_t result;

  result = qword_1EED9B610;
  if (!qword_1EED9B610)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryOverrideError, &type metadata for AssetRegistryOverrideError);
    atomic_store(result, (unint64_t *)&qword_1EED9B610);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AssetRegistryXPCError(_QWORD *a1, id *a2)
{
  id v3;
  id v4;

  v3 = *a2;
  v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for AssetRegistryXPCError(id *a1)
{

}

void **assignWithCopy for AssetRegistryXPCError(void **a1, id *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = *a2;
  v4 = *a2;
  v5 = *a1;
  *a1 = v3;

  return a1;
}

_QWORD *initializeWithTake for TrialAssetManager.RefreshPolicy(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for AssetRegistryXPCError(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryXPCError(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 8))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryXPCError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AssetRegistryXPCError()
{
  sub_1AE4F67D4();
}

uint64_t dispatch thunk of static AssetRegistryServiceError.internalServerError(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t initializeBufferWithCopyOfBuffer for AssetRegistryLookupError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1AE5474FC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1AE547444);
}

uint64_t sub_1AE547444(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for AssetRegistryLookupError(uint64_t a1)
{
  return sub_1AE54746C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1AE54746C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t *assignWithCopy for AssetRegistryLookupError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1AE547558(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1AE547444, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AE54746C);
}

uint64_t *assignWithTake for AssetRegistryLookupError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE5475C4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AE54746C);
}

void type metadata accessor for AssetRegistryLookupError()
{
  sub_1AE4F67D4();
}

uint64_t initializeBufferWithCopyOfBuffer for AssetRegistryOverrideError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1AE5474FC(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1AE5474BC);
}

uint64_t sub_1AE5474BC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for AssetRegistryOverrideError(uint64_t a1)
{
  return sub_1AE5474E4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1AE5474E4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 3u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1AE5474FC(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for AssetRegistryOverrideError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1AE547558(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_1AE5474BC, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AE5474E4);
}

uint64_t *sub_1AE547558(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  v10 = *a1;
  v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  v12 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for AssetRegistryOverrideError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE5475C4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1AE5474E4);
}

uint64_t *sub_1AE5475C4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryOverrideError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AssetRegistryOverrideError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

void type metadata accessor for AssetRegistryOverrideError()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for AssetRegistryOverrideError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AE5476E4 + 4 * byte_1AE935E91[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AE547718 + 4 * byte_1AE935E8C[v4]))();
}

uint64_t sub_1AE547718(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE547720(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE547728);
  return result;
}

uint64_t sub_1AE547734(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE54773CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AE547740(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE547748(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideError.CodingKeys()
{
  return &type metadata for AssetRegistryOverrideError.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideError.LackingOverrideEntitlementForDomainCodingKeys()
{
  return &type metadata for AssetRegistryOverrideError.LackingOverrideEntitlementForDomainCodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideError.DomainIdNotFoundCodingKeys()
{
  return &type metadata for AssetRegistryOverrideError.DomainIdNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideError.AssetIdNotFoundCodingKeys()
{
  return &type metadata for AssetRegistryOverrideError.AssetIdNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideError.InternalServerErrorCodingKeys()
{
  return &type metadata for AssetRegistryOverrideError.InternalServerErrorCodingKeys;
}

uint64_t storeEnumTagSinglePayload for AssetRegistryLookupError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE5477F4 + 4 * byte_1AE935E9B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE547828 + 4 * byte_1AE935E96[v4]))();
}

uint64_t sub_1AE547828(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE547830(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE547838);
  return result;
}

uint64_t sub_1AE547844(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE54784CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE547850(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE547858(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryLookupError.CodingKeys()
{
  return &type metadata for AssetRegistryLookupError.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryLookupError.DomainIdNotFoundCodingKeys()
{
  return &type metadata for AssetRegistryLookupError.DomainIdNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryLookupError.AssetIdNotFoundCodingKeys()
{
  return &type metadata for AssetRegistryLookupError.AssetIdNotFoundCodingKeys;
}

uint64_t _s20IntelligencePlatform26AssetRegistryOverrideErrorO45LackingOverrideEntitlementForDomainCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE5478D4 + 4 * byte_1AE935EA0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE5478F4 + 4 * byte_1AE935EA5[v4]))();
}

_BYTE *sub_1AE5478D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE5478F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE5478FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE547904(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE54790C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE547914(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryLookupError.InternalServerErrorCodingKeys()
{
  return &type metadata for AssetRegistryLookupError.InternalServerErrorCodingKeys;
}

unint64_t sub_1AE547934()
{
  unint64_t result;

  result = qword_1EED9B618;
  if (!qword_1EED9B618)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936220, &type metadata for AssetRegistryLookupError.InternalServerErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B618);
  }
  return result;
}

unint64_t sub_1AE547974()
{
  unint64_t result;

  result = qword_1EED9B620;
  if (!qword_1EED9B620)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9362D8, &type metadata for AssetRegistryLookupError.AssetIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B620);
  }
  return result;
}

unint64_t sub_1AE5479B4()
{
  unint64_t result;

  result = qword_1EED9B628;
  if (!qword_1EED9B628)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936390, &type metadata for AssetRegistryLookupError.DomainIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B628);
  }
  return result;
}

unint64_t sub_1AE5479F4()
{
  unint64_t result;

  result = qword_1EED9B630;
  if (!qword_1EED9B630)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936448, &type metadata for AssetRegistryLookupError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B630);
  }
  return result;
}

unint64_t sub_1AE547A34()
{
  unint64_t result;

  result = qword_1EED9B638;
  if (!qword_1EED9B638)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936500, &type metadata for AssetRegistryOverrideError.InternalServerErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B638);
  }
  return result;
}

unint64_t sub_1AE547A74()
{
  unint64_t result;

  result = qword_1EED9B640;
  if (!qword_1EED9B640)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9365B8, &type metadata for AssetRegistryOverrideError.AssetIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B640);
  }
  return result;
}

unint64_t sub_1AE547AB4()
{
  unint64_t result;

  result = qword_1EED9B648;
  if (!qword_1EED9B648)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936670, &type metadata for AssetRegistryOverrideError.DomainIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B648);
  }
  return result;
}

unint64_t sub_1AE547AF4()
{
  unint64_t result;

  result = qword_1EED9B650;
  if (!qword_1EED9B650)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936728, &type metadata for AssetRegistryOverrideError.LackingOverrideEntitlementForDomainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B650);
  }
  return result;
}

unint64_t sub_1AE547B34()
{
  unint64_t result;

  result = qword_1EED9B658;
  if (!qword_1EED9B658)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9367E0, &type metadata for AssetRegistryOverrideError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B658);
  }
  return result;
}

unint64_t sub_1AE547B74()
{
  unint64_t result;

  result = qword_1EED9B660;
  if (!qword_1EED9B660)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936698, &type metadata for AssetRegistryOverrideError.LackingOverrideEntitlementForDomainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B660);
  }
  return result;
}

unint64_t sub_1AE547BB4()
{
  unint64_t result;

  result = qword_1EED9B668;
  if (!qword_1EED9B668)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9366C0, &type metadata for AssetRegistryOverrideError.LackingOverrideEntitlementForDomainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B668);
  }
  return result;
}

unint64_t sub_1AE547BF4()
{
  unint64_t result;

  result = qword_1EED9B670;
  if (!qword_1EED9B670)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9365E0, &type metadata for AssetRegistryOverrideError.DomainIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B670);
  }
  return result;
}

unint64_t sub_1AE547C34()
{
  unint64_t result;

  result = qword_1EED9B678;
  if (!qword_1EED9B678)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936608, &type metadata for AssetRegistryOverrideError.DomainIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B678);
  }
  return result;
}

unint64_t sub_1AE547C74()
{
  unint64_t result;

  result = qword_1EED9B680;
  if (!qword_1EED9B680)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936528, &type metadata for AssetRegistryOverrideError.AssetIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B680);
  }
  return result;
}

unint64_t sub_1AE547CB4()
{
  unint64_t result;

  result = qword_1EED9B688;
  if (!qword_1EED9B688)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936550, &type metadata for AssetRegistryOverrideError.AssetIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B688);
  }
  return result;
}

unint64_t sub_1AE547CF4()
{
  unint64_t result;

  result = qword_1EED9B690;
  if (!qword_1EED9B690)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936470, &type metadata for AssetRegistryOverrideError.InternalServerErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B690);
  }
  return result;
}

unint64_t sub_1AE547D34()
{
  unint64_t result;

  result = qword_1EED9B698;
  if (!qword_1EED9B698)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936498, &type metadata for AssetRegistryOverrideError.InternalServerErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B698);
  }
  return result;
}

unint64_t sub_1AE547D74()
{
  unint64_t result;

  result = qword_1EED9B6A0;
  if (!qword_1EED9B6A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936750, &type metadata for AssetRegistryOverrideError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B6A0);
  }
  return result;
}

unint64_t sub_1AE547DB4()
{
  unint64_t result;

  result = qword_1EED9B6A8;
  if (!qword_1EED9B6A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936778, &type metadata for AssetRegistryOverrideError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B6A8);
  }
  return result;
}

unint64_t sub_1AE547DF4()
{
  unint64_t result;

  result = qword_1EED9B6B0;
  if (!qword_1EED9B6B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936300, &type metadata for AssetRegistryLookupError.DomainIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B6B0);
  }
  return result;
}

unint64_t sub_1AE547E34()
{
  unint64_t result;

  result = qword_1EED9B6B8;
  if (!qword_1EED9B6B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936328, &type metadata for AssetRegistryLookupError.DomainIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B6B8);
  }
  return result;
}

unint64_t sub_1AE547E74()
{
  unint64_t result;

  result = qword_1EED9B6C0;
  if (!qword_1EED9B6C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936248, &type metadata for AssetRegistryLookupError.AssetIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B6C0);
  }
  return result;
}

unint64_t sub_1AE547EB4()
{
  unint64_t result;

  result = qword_1EED9B6C8;
  if (!qword_1EED9B6C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936270, &type metadata for AssetRegistryLookupError.AssetIdNotFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B6C8);
  }
  return result;
}

unint64_t sub_1AE547EF4()
{
  unint64_t result;

  result = qword_1EED9B6D0;
  if (!qword_1EED9B6D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936190, &type metadata for AssetRegistryLookupError.InternalServerErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B6D0);
  }
  return result;
}

unint64_t sub_1AE547F34()
{
  unint64_t result;

  result = qword_1EED9B6D8;
  if (!qword_1EED9B6D8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9361B8, &type metadata for AssetRegistryLookupError.InternalServerErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B6D8);
  }
  return result;
}

unint64_t sub_1AE547F74()
{
  unint64_t result;

  result = qword_1EED9B6E0;
  if (!qword_1EED9B6E0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9363B8, &type metadata for AssetRegistryLookupError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B6E0);
  }
  return result;
}

unint64_t sub_1AE547FB4()
{
  unint64_t result;

  result = qword_1EED9B6E8;
  if (!qword_1EED9B6E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9363E0, &type metadata for AssetRegistryLookupError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B6E8);
  }
  return result;
}

uint64_t sub_1AE548008()
{
  uint64_t v0;

  return v0;
}

void sub_1AE548018(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1AE548034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 216) + 8))(v1, v0);
}

unint64_t sub_1AE548048()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_1AE545F18();
}

uint64_t sub_1AE548054()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_1AE548068()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_1AE5470DC();
}

unint64_t sub_1AE548074()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_1AE545F54();
}

unint64_t sub_1AE548080()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_1AE547064();
}

uint64_t sub_1AE54808C@<X0>(uint64_t (*a1)(_QWORD, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(*(_QWORD *)(v2 - 184), v1);
}

void sub_1AE548098(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **p_object;
  Swift::String v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  Swift::String namespaceName;
  uint64_t countAndFlagsBits;
  uint64_t v92;
  uint64_t v93;
  char v94;
  unsigned __int16 v95;
  uint64_t v96;

  if (!*(_QWORD *)(a3 + 16))
    goto LABEL_7;
  sub_1AE509358();
  v8 = sub_1AE536EDC(a1, a2);
  if ((v9 & 1) == 0)
  {
    sub_1AE4F6718();
LABEL_7:
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_QWORD *)(a4 + 32) = 0;
    *(_QWORD *)(a4 + 40) = 1;
    return;
  }
  v10 = *(_QWORD *)(a3 + 56) + 72 * v8;
  v11 = *(_QWORD *)(v10 + 24);
  v13 = *(_QWORD *)(v10 + 32);
  v12 = *(void **)(v10 + 40);
  v14 = *(unsigned __int16 *)(v10 + 48);
  v15 = *(_BYTE *)(v10 + 50);
  v88 = *(_QWORD *)(v10 + 56);
  v16 = *(_QWORD *)(v10 + 64);
  namespaceName._countAndFlagsBits = *(_QWORD *)v10;
  v17 = *(void **)(v10 + 8);
  v96 = *(_QWORD *)(v10 + 16);
  sub_1AE50814C();
  sub_1AE54959C(v18, v19, v20, v21, v22, v23, v24, v15);
  swift_bridgeObjectRetain();
  sub_1AE4F6718();
  if ((v15 & 1) == 0)
  {
    v87 = (uint64_t)v12;
    v39 = v11;
    if ((v11 & 1) != 0)
    {
      v40 = (uint64_t)v17;
      countAndFlagsBits = (uint64_t)v17;
      v92 = v96;
      v41 = v96;
      sub_1AE508EA0();
      sub_1AE536B34();
      sub_1AE536B60();
      sub_1AE536B9C();
      swift_bridgeObjectRetain();
      v47 = v14;
      if ((sub_1AE50A29C() & 1) != 0)
      {
        sub_1AE54349C();
        v48 = sub_1AE4F6778();
        sub_1AE4F9134(v48, v49);
        sub_1AE500948(namespaceName._countAndFlagsBits, v40, v14, v50, v51, v52, v53, v54, v76, v79, v83, v87);
        swift_bridgeObjectRelease();
LABEL_21:
        v31 = sub_1AE508A68();
        v35 = v13;
        v36 = v39;
        v37 = v47;
        v38 = 0;
        goto LABEL_22;
      }
      v77 = namespaceName._countAndFlagsBits & 1;
      v80 = 1;
      v84 = v96;
    }
    else
    {
      countAndFlagsBits = namespaceName._countAndFlagsBits;
      v92 = (uint64_t)v17;
      v40 = (uint64_t)v17;
      sub_1AE508EA0();
      v41 = v55;
      sub_1AE536B34();
      sub_1AE536B60();
      sub_1AE536B9C();
      swift_bridgeObjectRetain();
      v47 = v14;
      if ((sub_1AE50A29C() & 1) == 0)
      {
        sub_1AE536BD8();
        v65 = sub_1AE4F6778();
        sub_1AE4F9134(v65, v66);
        sub_1AE500948(namespaceName._countAndFlagsBits, v40, v14, v67, v68, v69, v70, v71, v76, v79, v83, v87);
        v72 = sub_1AE508A68();
        sub_1AE50338C(v72, v73, v74, v75, v13);
        goto LABEL_21;
      }
      v80 = 0;
      v84 = 0;
      v77 = namespaceName._countAndFlagsBits;
    }
    v58 = v16;
    v63 = v39;
    sub_1AE500948(namespaceName._countAndFlagsBits, v40, v41, v42, v43, v44, v45, v46, v77, v80, v84, v87);
    swift_bridgeObjectRetain();
    sub_1AE50338C(namespaceName._countAndFlagsBits, v40, v41, v39, v13);
    sub_1AE4F6718();
    v56 = v78;
    countAndFlagsBits = v78;
    v92 = v40;
    v60 = v86;
    v93 = v86;
    v94 = v63 & 1;
    AssetRegistryAssetLocation.LocalAsset.verifyValidity()();
    if (v64)
    {
      sub_1AE536AF8(v78, v40, v86, v82);
LABEL_23:
      swift_bridgeObjectRelease();
      return;
    }
    v62 = v88;
    v61 = v82;
    goto LABEL_25;
  }
  LOWORD(namespaceName._object) = v14;
  v25 = (uint64_t)v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  p_object = &namespaceName._object;
  v27._countAndFlagsBits = namespaceName._countAndFlagsBits;
  v27._object = v17;
  v28._countAndFlagsBits = v96;
  v28._object = (void *)v11;
  v29._countAndFlagsBits = v13;
  v29._object = v12;
  AssetRegistryAssetLocation.TrialAsset.init(namespaceName:factor:assetTypeRawString:downloadOptions:)(v27, v28, v29, (IntelligencePlatform::TrialAssetManager::DownloadOptions_optional)p_object);
  if (v30)
  {
    sub_1AE50814C();
    v38 = 1;
LABEL_22:
    sub_1AE5495E4(v31, v32, v33, v34, v35, v36, v37, v38);
    goto LABEL_23;
  }
  v56 = countAndFlagsBits;
  v89 = v92;
  if (v94)
    v57 = 129;
  else
    v57 = 128;
  v81 = v57 | (v95 << 8);
  v85 = v93;
  v58 = v16;
  swift_bridgeObjectRetain();
  v59 = (uint64_t)v12;
  v60 = v85;
  sub_1AE5495E4(namespaceName._countAndFlagsBits, v25, v96, v11, v13, v59, v14, 1);
  sub_1AE4F6718();
  v61 = v81;
  v62 = v88;
  v40 = v89;
LABEL_25:
  *(_QWORD *)a4 = v56;
  *(_QWORD *)(a4 + 8) = v40;
  *(_QWORD *)(a4 + 16) = v60;
  *(_QWORD *)(a4 + 24) = *(_QWORD *)&v61 & 0xFFFFFFLL;
  *(_QWORD *)(a4 + 32) = v62;
  *(_QWORD *)(a4 + 40) = v58;
}

uint64_t sub_1AE54845C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C646E7562 && a2 == 0xE600000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AE97CBA0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE548540(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0x656C646E7562;
}

void sub_1AE548578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1AE4F67EC();
  v16 = v15;
  v18 = v17;
  sub_1AE501548(&qword_1ED30FA10);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE505354();
  sub_1AE54A790();
  sub_1AE4FCEB4();
  if (!v13)
  {
    sub_1AE543550();
    sub_1AE926BEC();
    v20 = sub_1AE926BB0();
    v22 = v21;
    sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    *(_BYTE *)v18 = a13;
    *(_QWORD *)(v18 + 8) = v20;
    *(_QWORD *)(v18 + 16) = v22;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v16);
  sub_1AE4F667C();
}

uint64_t sub_1AE54868C()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1AE926B44();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

unint64_t sub_1AE5486E0()
{
  return 0xD000000000000010;
}

uint64_t sub_1AE548714()
{
  char *v0;

  return sub_1AE548540(*v0);
}

uint64_t sub_1AE54871C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE54845C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE548740()
{
  sub_1AE54A790();
  return sub_1AE926F94();
}

uint64_t sub_1AE548768()
{
  sub_1AE54A790();
  return sub_1AE926FA0();
}

void sub_1AE548790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_1AE548578(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1AE5487A4(char *a1, char *a2)
{
  sub_1AE511364(*a1, *a2);
}

void sub_1AE5487B0()
{
  sub_1AE512AA0();
}

uint64_t sub_1AE5487B8()
{
  return sub_1AE5E89C0();
}

void sub_1AE5487C0()
{
  sub_1AE54FB0C();
}

uint64_t sub_1AE5487C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE54868C();
  *a1 = result;
  return result;
}

void sub_1AE5487F4(unint64_t *a1@<X8>)
{
  unint64_t v2;

  *a1 = sub_1AE5486E0();
  a1[1] = v2;
  sub_1AE4F6664();
}

unint64_t sub_1AE548818()
{
  return sub_1AE5486E0();
}

uint64_t sub_1AE548820@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE5486DC();
  *a1 = result;
  return result;
}

uint64_t sub_1AE548844()
{
  sub_1AE54A474();
  return sub_1AE926F94();
}

uint64_t sub_1AE54886C()
{
  sub_1AE54A474();
  return sub_1AE926FA0();
}

void sub_1AE548894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  sub_1AE501548(&qword_1ED30FA18);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE505354();
  sub_1AE54A474();
  sub_1AE4FCEB4();
  if (!v0)
  {
    v6 = sub_1AE926BB0();
    v8 = v7;
    sub_1AE505380();
    *(_QWORD *)v4 = v6;
    *(_QWORD *)(v4 + 8) = v8;
    *(_QWORD *)(v4 + 16) = 0;
    *(_BYTE *)(v4 + 24) = 0;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v2);
  sub_1AE4F667C();
}

uint64_t sub_1AE5489F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE548A2C + 4 * byte_1AE936AE0[a1]))(0x63617073656D616ELL, 0xE900000000000065);
}

uint64_t sub_1AE548A2C()
{
  return 0x726F74636166;
}

uint64_t sub_1AE548A40()
{
  return 0x7079547465737361;
}

uint64_t sub_1AE548A54()
{
  return 0x64616F6C6E776F64;
}

void sub_1AE548A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, __int16 a11)
{
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1AE4F67EC();
  v13 = v12;
  v15 = v14;
  sub_1AE501548((uint64_t *)&unk_1ED3100E0);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F9858(v13, v13[3]);
  sub_1AE54A4EC();
  sub_1AE926F34();
  if (v11)
  {
    sub_1AE4F90EC();
  }
  else
  {
    v17 = sub_1AE50983C();
    v19 = v18;
    v26 = v17;
    sub_1AE509358();
    v20 = sub_1AE50983C();
    v27 = v21;
    v25 = v20;
    sub_1AE509358();
    v24 = sub_1AE926BB0();
    v23 = v22;
    sub_1AE5438D4();
    sub_1AE4F66CC();
    sub_1AE926B98();
    sub_1AE4FDA08();
    *(_QWORD *)v15 = v26;
    *(_QWORD *)(v15 + 8) = v19;
    *(_QWORD *)(v15 + 16) = v25;
    *(_QWORD *)(v15 + 24) = v27;
    *(_QWORD *)(v15 + 32) = v24;
    *(_QWORD *)(v15 + 40) = v23;
    *(_WORD *)(v15 + 48) = a11;
    sub_1AE4F90EC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE548C88()
{
  unint64_t v0;

  v0 = sub_1AE926B44();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1AE548CD4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE548D04 + 4 * byte_1AE936AE4[a1]))(0x6C61636F6CLL, 0xE500000000000000);
}

uint64_t sub_1AE548D04()
{
  return 0x6C61697274;
}

uint64_t sub_1AE548D14()
{
  return 0x4E74656863746172;
}

uint64_t sub_1AE548D38()
{
  return 0x6F666E4972657375;
}

uint64_t sub_1AE548D50(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE548D80 + 4 * byte_1AE936AE8[a1]))(0x6C61636F6CLL, 0xE500000000000000);
}

uint64_t sub_1AE548D80()
{
  return 0x6C61697274;
}

uint64_t sub_1AE548D90()
{
  return 0x4E74656863746172;
}

uint64_t sub_1AE548DB4()
{
  return 0x6F666E4972657375;
}

void sub_1AE548DCC()
{
  sub_1AE548894();
}

uint64_t sub_1AE548DE0()
{
  unsigned __int8 *v0;

  return sub_1AE5489F4(*v0);
}

uint64_t sub_1AE548DE8()
{
  sub_1AE54A4EC();
  return sub_1AE926F94();
}

uint64_t sub_1AE548E10()
{
  sub_1AE54A4EC();
  return sub_1AE926FA0();
}

void sub_1AE548E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  int vars8;

  sub_1AE548A78(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SHIWORD(vars8));
}

void sub_1AE548E4C()
{
  sub_1AE51123C();
}

void sub_1AE548E58()
{
  unsigned __int8 *v0;

  sub_1AE512AAC(*v0);
}

void sub_1AE548E60()
{
  sub_1AE5E8934();
}

void sub_1AE548E68(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FB00(a1, *v1);
}

uint64_t sub_1AE548E70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE548C88();
  *a1 = result;
  return result;
}

void sub_1AE548E9C(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_1AE548CD4(*v1);
  a1[1] = v3;
  sub_1AE4F6664();
}

uint64_t sub_1AE548EC0()
{
  unsigned __int8 *v0;

  return sub_1AE548D50(*v0);
}

uint64_t sub_1AE548EC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE548CD0();
  *a1 = result;
  return result;
}

uint64_t sub_1AE548EEC()
{
  sub_1AE549C58();
  return sub_1AE926F94();
}

uint64_t sub_1AE548F14()
{
  sub_1AE549C58();
  return sub_1AE926FA0();
}

void sub_1AE548F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548((uint64_t *)&unk_1ED30FA20);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE505354();
  sub_1AE549C58();
  sub_1AE4FCEB4();
  if (!v0)
  {
    sub_1AE549C94();
    sub_1AE54A95C();
    sub_1AE926BEC();
    v6 = v7;
    LOBYTE(v7) = 2;
    v5 = sub_1AE926BE0();
    sub_1AE501548(&qword_1ED30F918);
    sub_1AE549D48();
    sub_1AE926BEC();
    sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *(_QWORD *)v3 = v6;
    *(_QWORD *)(v3 + 8) = v8;
    *(_QWORD *)(v3 + 16) = v9;
    *(_QWORD *)(v3 + 24) = v10;
    *(_QWORD *)(v3 + 32) = 0;
    *(_QWORD *)(v3 + 40) = 0;
    *(_WORD *)(v3 + 48) = 0;
    *(_BYTE *)(v3 + 50) = 0;
    *(_QWORD *)(v3 + 56) = v5;
    *(_QWORD *)(v3 + 64) = v7;
  }
  sub_1AE4F90EC();
  sub_1AE4F667C();
}

uint64_t sub_1AE549184(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656972746E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE549268(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73656972746E65;
  else
    return 0x6E69616D6F64;
}

uint64_t sub_1AE54929C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1AE501548(&qword_1ED30FA08);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = a1[4];
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE5497C4();
  sub_1AE926F34();
  if (v1)
  {
    sub_1AE4F90EC();
  }
  else
  {
    v5 = sub_1AE926BB0();
    sub_1AE501548(&qword_1ED30F928);
    sub_1AE549800();
    swift_bridgeObjectRetain();
    sub_1AE926BEC();
    sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_1AE4F66CC();
    sub_1AE4F90EC();
    swift_bridgeObjectRelease();
    sub_1AE4F66E8();
  }
  return v5;
}

void sub_1AE549430()
{
  sub_1AE926ED4();
  sub_1AE4F6664();
}

void sub_1AE549450()
{
  sub_1AE4F76E0();
  sub_1AE926ED4();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54947C()
{
  sub_1AE548F3C();
}

uint64_t sub_1AE549490()
{
  char *v0;

  return sub_1AE549268(*v0);
}

uint64_t sub_1AE549498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE549184(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE5494BC()
{
  sub_1AE5497C4();
  return sub_1AE926F94();
}

uint64_t sub_1AE5494E4()
{
  sub_1AE5497C4();
  return sub_1AE926FA0();
}

uint64_t sub_1AE54950C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1AE54929C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1AE549540()
{
  sub_1AE54A378();
  return sub_1AE926E14();
}

uint64_t sub_1AE549568()
{
  sub_1AE54A378();
  return sub_1AE926E08();
}

uint64_t sub_1AE54959C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a8 & 1) == 0)
    return sub_1AE536B34();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE5495E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a8 & 1) == 0)
    return sub_1AE536B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t destroy for IntentRequest()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s20IntelligencePlatform15DictionaryEventVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  sub_1AE4F66CC();
  return a1;
}

_QWORD *assignWithCopy for Debug(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Debug(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Debug(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Debug(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AssetRegistryJSONFile()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE5497C4()
{
  unint64_t result;

  result = qword_1ED30F128;
  if (!qword_1ED30F128)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936C44, &type metadata for AssetRegistryJSONFile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30F128);
  }
  return result;
}

unint64_t sub_1AE549800()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1ED30F930;
  if (!qword_1ED30F930)
  {
    v1 = sub_1AE523CF0(&qword_1ED30F928);
    v2 = sub_1AE54986C();
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED30F930);
  }
  return result;
}

unint64_t sub_1AE54986C()
{
  unint64_t result;

  result = qword_1ED30F198;
  if (!qword_1ED30F198)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936C1C, &unk_1E5DBC0A0);
    atomic_store(result, (unint64_t *)&qword_1ED30F198);
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryJSONFile.CodingKeys()
{
  return &type metadata for AssetRegistryJSONFile.CodingKeys;
}

uint64_t sub_1AE5498BC(uint64_t a1)
{
  sub_1AE5495E4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int16 *)(a1 + 48), *(_BYTE *)(a1 + 50));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5498F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 50);
  v11 = *(unsigned __int16 *)(a2 + 48);
  sub_1AE54959C(*(_QWORD *)a2, v5, v6, v7, v8, v9, v11, v10);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_WORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 50) = v10;
  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v12;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE549994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 50);
  v11 = *(unsigned __int16 *)(a2 + 48);
  sub_1AE54959C(*(_QWORD *)a2, v5, v6, v7, v8, v9, v11, v10);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_BYTE *)(a1 + 50);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v19 = *(unsigned __int16 *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 50) = v10;
  sub_1AE5495E4(v12, v13, v14, v15, v16, v17, v19, v18);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for IntentHandler(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t sub_1AE549A64(uint64_t a1, uint64_t a2)
{
  __int16 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_WORD *)(a2 + 48);
  v5 = *(_BYTE *)(a2 + 50);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_BYTE *)(a1 + 50);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v14 = *(unsigned __int16 *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 50) = v5;
  sub_1AE5495E4(v6, v7, v8, v9, v10, v11, v14, v12);
  v15 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE549AD4(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 72))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 64);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1AE549B28(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 64) = a2;
  }
  return result;
}

void type metadata accessor for AssetRegistryJSONFile.Entry()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE549B9C()
{
  unint64_t result;

  result = qword_1EED9B6F0;
  if (!qword_1EED9B6F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936BF4, &type metadata for AssetRegistryJSONFile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B6F0);
  }
  return result;
}

unint64_t sub_1AE549BDC()
{
  unint64_t result;

  result = qword_1ED30F138;
  if (!qword_1ED30F138)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936B64, &type metadata for AssetRegistryJSONFile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30F138);
  }
  return result;
}

unint64_t sub_1AE549C1C()
{
  unint64_t result;

  result = qword_1ED30F130;
  if (!qword_1ED30F130)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936B8C, &type metadata for AssetRegistryJSONFile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30F130);
  }
  return result;
}

unint64_t sub_1AE549C58()
{
  unint64_t result;

  result = qword_1ED30F180;
  if (!qword_1ED30F180)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936F20, &type metadata for AssetRegistryJSONFile.Entry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30F180);
  }
  return result;
}

unint64_t sub_1AE549C94()
{
  unint64_t result;

  result = qword_1ED30F178;
  if (!qword_1ED30F178)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936EF8, &unk_1E5DBBDD8);
    atomic_store(result, (unint64_t *)&qword_1ED30F178);
  }
  return result;
}

unint64_t sub_1AE549CD0()
{
  unint64_t result;

  result = qword_1ED3100D0;
  if (!qword_1ED3100D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936ED0, &unk_1E5DBBEF8);
    atomic_store(result, (unint64_t *)&qword_1ED3100D0);
  }
  return result;
}

unint64_t sub_1AE549D0C()
{
  unint64_t result;

  result = qword_1EED9B6F8;
  if (!qword_1EED9B6F8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936E90, &unk_1E5DBF328);
    atomic_store(result, (unint64_t *)&qword_1EED9B6F8);
  }
  return result;
}

unint64_t sub_1AE549D48()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED30F920;
  if (!qword_1ED30F920)
  {
    v1 = sub_1AE523CF0(&qword_1ED30F918);
    v2[0] = MEMORY[0x1E0DEA9A0];
    v2[1] = MEMORY[0x1E0DEA9A0];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED30F920);
  }
  return result;
}

uint64_t sub_1AE549DA4(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE549DE4 + 4 * byte_1AE936AEC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE549E04 + 4 * byte_1AE936AF1[v4]))();
}

_BYTE *sub_1AE549DE4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE549E04(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE549E0C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE549E14(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE549E1C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE549E24(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for AssetRegistryJSONFileError()
{
  sub_1AE4F67D4();
}

uint64_t destroy for Entity()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE549E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE549EC8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for BaseEntityConstructionError(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1AE549F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  return a1;
}

uint64_t sub_1AE549FD4(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 50))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1AE54A014(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 50) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 50) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AssetRegistryJSONFile.Entry.TrialEntry()
{
  sub_1AE4F67D4();
}

void type metadata accessor for AssetRegistryJSONFile.Entry.LocalEntry()
{
  sub_1AE4F67D4();
}

ValueMetadata *type metadata accessor for AssetRegistryJSONFile.Entry.CodingKeys()
{
  return &type metadata for AssetRegistryJSONFile.Entry.CodingKeys;
}

uint64_t sub_1AE54A090(uint64_t a1)
{
  return sub_1AE5495E4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int16 *)(a1 + 48), *(_BYTE *)(a1 + 50));
}

uint64_t sub_1AE54A0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 50);
  v10 = *(unsigned __int16 *)(a2 + 48);
  sub_1AE54959C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v10, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_WORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 50) = v9;
  return a1;
}

uint64_t sub_1AE54A138(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 50);
  v10 = *(unsigned __int16 *)(a2 + 48);
  sub_1AE54959C(*(_QWORD *)a2, v4, v5, v6, v7, v8, v10, v9);
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_BYTE *)(a1 + 50);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v18 = *(unsigned __int16 *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 50) = v9;
  sub_1AE5495E4(v11, v12, v13, v14, v15, v16, v18, v17);
  return a1;
}

__n128 sub_1AE54A1DC(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1AE54A1F8(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;

  v3 = *(_WORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 50);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_BYTE *)(a1 + 50);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v13 = *(unsigned __int16 *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v3;
  *(_BYTE *)(a1 + 50) = v4;
  sub_1AE5495E4(v5, v7, v6, v8, v9, v10, v13, v11);
  return a1;
}

uint64_t sub_1AE54A258(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 51))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 50);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1AE54A298(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 51) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 51) = 0;
    if (a2)
      *(_BYTE *)(result + 50) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AE54A2F0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 50);
}

uint64_t sub_1AE54A2F8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 50) = a2 & 1;
  return result;
}

void type metadata accessor for AssetRegistryJSONFile.Entry.Location()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE54A314()
{
  unint64_t result;

  result = qword_1EED9B700;
  if (!qword_1EED9B700)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936DA4, &type metadata for AssetRegistryJSONFile.Entry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B700);
  }
  return result;
}

unint64_t sub_1AE54A354(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE54A378();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE54A378()
{
  unint64_t result;

  result = qword_1EED9B708;
  if (!qword_1EED9B708)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936DCC, &unk_1E5DBF328);
    atomic_store(result, (unint64_t *)&qword_1EED9B708);
  }
  return result;
}

unint64_t sub_1AE54A3B8()
{
  unint64_t result;

  result = qword_1EED9B710;
  if (!qword_1EED9B710)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936E68, &unk_1E5DBF328);
    atomic_store(result, (unint64_t *)&qword_1EED9B710);
  }
  return result;
}

unint64_t sub_1AE54A3F8()
{
  unint64_t result;

  result = qword_1ED30F190;
  if (!qword_1ED30F190)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936CDC, &type metadata for AssetRegistryJSONFile.Entry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30F190);
  }
  return result;
}

unint64_t sub_1AE54A438()
{
  unint64_t result;

  result = qword_1ED30F188;
  if (!qword_1ED30F188)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936D04, &type metadata for AssetRegistryJSONFile.Entry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30F188);
  }
  return result;
}

unint64_t sub_1AE54A474()
{
  unint64_t result;

  result = qword_1ED30F160;
  if (!qword_1ED30F160)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9371A4, &type metadata for AssetRegistryJSONFile.Entry.LocalEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30F160);
  }
  return result;
}

unint64_t sub_1AE54A4B0()
{
  unint64_t result;

  result = qword_1ED30F158;
  if (!qword_1ED30F158)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93717C, &unk_1E5DBBCC8);
    atomic_store(result, (unint64_t *)&qword_1ED30F158);
  }
  return result;
}

unint64_t sub_1AE54A4EC()
{
  unint64_t result;

  result = qword_1ED3100B8;
  if (!qword_1ED3100B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93712C, &type metadata for AssetRegistryJSONFile.Entry.TrialEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3100B8);
  }
  return result;
}

uint64_t _s20IntelligencePlatform21AssetRegistryJSONFileV5EntryV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AE54A574 + 4 * byte_1AE936AFB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AE54A5A8 + 4 * byte_1AE936AF6[v4]))();
}

uint64_t sub_1AE54A5A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE54A5B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE54A5B8);
  return result;
}

uint64_t sub_1AE54A5C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE54A5CCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AE54A5D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE54A5D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryJSONFile.Entry.TrialEntry.CodingKeys()
{
  return &type metadata for AssetRegistryJSONFile.Entry.TrialEntry.CodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryJSONFile.Entry.LocalEntry.CodingKeys()
{
  return &type metadata for AssetRegistryJSONFile.Entry.LocalEntry.CodingKeys;
}

void type metadata accessor for AssetRegistryJSONFile.Entry.LocalEntry.LocalRelativeEntry()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE54A614()
{
  unint64_t result;

  result = qword_1EED9B718;
  if (!qword_1EED9B718)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93704C, &type metadata for AssetRegistryJSONFile.Entry.LocalEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B718);
  }
  return result;
}

unint64_t sub_1AE54A654()
{
  unint64_t result;

  result = qword_1EED9B720;
  if (!qword_1EED9B720)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937104, &type metadata for AssetRegistryJSONFile.Entry.TrialEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B720);
  }
  return result;
}

unint64_t sub_1AE54A694()
{
  unint64_t result;

  result = qword_1ED3100C8;
  if (!qword_1ED3100C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937074, &type metadata for AssetRegistryJSONFile.Entry.TrialEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3100C8);
  }
  return result;
}

unint64_t sub_1AE54A6D4()
{
  unint64_t result;

  result = qword_1ED3100C0;
  if (!qword_1ED3100C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93709C, &type metadata for AssetRegistryJSONFile.Entry.TrialEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3100C0);
  }
  return result;
}

unint64_t sub_1AE54A714()
{
  unint64_t result;

  result = qword_1ED30F170;
  if (!qword_1ED30F170)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936F84, &type metadata for AssetRegistryJSONFile.Entry.LocalEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30F170);
  }
  return result;
}

unint64_t sub_1AE54A754()
{
  unint64_t result;

  result = qword_1ED30F168;
  if (!qword_1ED30F168)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936FAC, &type metadata for AssetRegistryJSONFile.Entry.LocalEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30F168);
  }
  return result;
}

unint64_t sub_1AE54A790()
{
  unint64_t result;

  result = qword_1ED30F140;
  if (!qword_1ED30F140)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9372AC, &type metadata for AssetRegistryJSONFile.Entry.LocalEntry.LocalRelativeEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30F140);
  }
  return result;
}

uint64_t _s20IntelligencePlatform21AssetRegistryJSONFileV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE54A818 + 4 * byte_1AE936B05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE54A84C + 4 * byte_1AE936B00[v4]))();
}

uint64_t sub_1AE54A84C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE54A854(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE54A85CLL);
  return result;
}

uint64_t sub_1AE54A868(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE54A870);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE54A874(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE54A87C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryJSONFile.Entry.LocalEntry.LocalRelativeEntry.CodingKeys()
{
  return &type metadata for AssetRegistryJSONFile.Entry.LocalEntry.LocalRelativeEntry.CodingKeys;
}

unint64_t sub_1AE54A89C()
{
  unint64_t result;

  result = qword_1EED9B728;
  if (!qword_1EED9B728)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937284, &type metadata for AssetRegistryJSONFile.Entry.LocalEntry.LocalRelativeEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B728);
  }
  return result;
}

unint64_t sub_1AE54A8DC()
{
  unint64_t result;

  result = qword_1ED30F150;
  if (!qword_1ED30F150)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9371F4, &type metadata for AssetRegistryJSONFile.Entry.LocalEntry.LocalRelativeEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30F150);
  }
  return result;
}

unint64_t sub_1AE54A91C()
{
  unint64_t result;

  result = qword_1ED30F148;
  if (!qword_1ED30F148)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE93721C, &type metadata for AssetRegistryJSONFile.Entry.LocalEntry.LocalRelativeEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30F148);
  }
  return result;
}

uint64_t sub_1AE54A974(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for AssetRegistryServerConfigLoader();
  swift_retain();
  v4 = sub_1AE54EF24();
  if (v2)
    return swift_release_n();
  v6 = v4;
  type metadata accessor for AssetRegistryBasicServer();
  v7 = sub_1AE4F9148();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = a2;
  result = sub_1AE4F9148();
  *(_QWORD *)(result + 16) = v7;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_1AE54AA04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v11 = *(_QWORD *)(v5 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1AE54C9E4(v11, a3, a4, a1, a2, (uint64_t)&v21);
  v13 = *((_QWORD *)&v21 + 1);
  v15 = v22;
  v14 = v23;
  v17 = v24;
  v16 = v25;
  if ((v26 & 1) != 0)
  {
    v19 = v21;
    v20 = v22;
    sub_1AE4FE934();
    sub_1AE4FE934();
    sub_1AE545928();
    if (sub_1AE926D30())
    {
      sub_1AE4FFC80();
    }
    else
    {
      swift_allocError();
      *(_OWORD *)v18 = v19;
      *(_BYTE *)(v18 + 16) = v20;
    }
    swift_willThrow();
    sub_1AE4FFC80();
    return sub_1AE4FFC80();
  }
  else
  {
    *(_QWORD *)a5 = v21;
    *(_QWORD *)(a5 + 8) = v13;
    *(_QWORD *)(a5 + 16) = v15;
    *(_WORD *)(a5 + 24) = v14;
    *(_BYTE *)(a5 + 26) = BYTE2(v14);
    *(_QWORD *)(a5 + 32) = v17;
    *(_QWORD *)(a5 + 40) = v16;
  }
  return result;
}

uint64_t sub_1AE54AB38()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1AE54AB5C()
{
  sub_1AE54AB38();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetRegistryLocalBackendBasic()
{
  return objc_opt_self();
}

uint64_t sub_1AE54AB9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1AE54AA04(a1, a2, a3, a4, a5);
}

uint64_t sub_1AE54ABBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
    return sub_1AE54746C(a1, a2, a3);
  sub_1AE536AF8(a1, a2, a3, a4);
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AssetRegistryOverrideAssetEntryParameters.verifyValidity()()
{
  uint64_t v0;

  if ((*(_WORD *)(v0 + 24) & 0x80) == 0)
    AssetRegistryAssetLocation.LocalAsset.verifyValidity()();
}

uint64_t sub_1AE54AC38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x656469727265766FLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65764F7261656C63 && a2 == 0xED00006564697272)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE54AD48()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  return sub_1AE926F10();
}

uint64_t sub_1AE54AD8C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65764F7261656C63;
  else
    return 0x656469727265766FLL;
}

uint64_t sub_1AE54ADD0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001AE97CCD0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1AE54AE54()
{
  return 0xD000000000000010;
}

uint64_t sub_1AE54AE70()
{
  sub_1AE54B1EC();
  return sub_1AE926F94();
}

uint64_t sub_1AE54AE98()
{
  sub_1AE54B1EC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE54AEC0()
{
  return sub_1AE54AD48();
}

uint64_t sub_1AE54AEC8()
{
  char *v0;

  return sub_1AE54AD8C(*v0);
}

uint64_t sub_1AE54AED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE54AC38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE54AEF4()
{
  sub_1AE54B1B0();
  return sub_1AE926F94();
}

uint64_t sub_1AE54AF1C()
{
  sub_1AE54B1B0();
  return sub_1AE926FA0();
}

uint64_t sub_1AE54AF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE54ADD0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE54AF70()
{
  sub_1AE54B228();
  return sub_1AE926F94();
}

uint64_t sub_1AE54AF98()
{
  sub_1AE54B228();
  return sub_1AE926FA0();
}

void AssetRegistryOverrideAssetEntryParameters.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  char v30;

  v3 = sub_1AE501548(&qword_1EED9B730);
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F9024();
  v20 = v5;
  v6 = sub_1AE501548(&qword_1EED9B738);
  v23 = *(_QWORD *)(v6 - 8);
  v24 = v6;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(sub_1AE501548(&qword_1EED9B740) - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F90C8();
  v11 = *v1;
  v18 = v1[1];
  v19 = v11;
  v17 = v1[2];
  v12 = *((unsigned __int8 *)v1 + 26);
  v13 = *((unsigned __int16 *)v1 + 12);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE54B1B0();
  sub_1AE926F4C();
  if ((~v13 & 0xFE) != 0)
  {
    LOBYTE(v26) = 0;
    sub_1AE54B228();
    sub_1AE4FCEC8();
    v26 = v19;
    v27 = v18;
    v28 = v17;
    v30 = (v13 | (v12 << 16)) >> 16;
    v29 = v13;
    sub_1AE5402D8();
    v15 = v24;
    sub_1AE926CC4();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v15);
  }
  else
  {
    sub_1AE4FC5BC();
    v14 = v20;
    sub_1AE4FCEC8();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v14, v22);
  }
  sub_1AE4FE944();
  sub_1AE4F667C();
}

unint64_t sub_1AE54B1B0()
{
  unint64_t result;

  result = qword_1EED9B748;
  if (!qword_1EED9B748)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9376A8, &type metadata for AssetRegistryOverrideAssetEntryParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B748);
  }
  return result;
}

unint64_t sub_1AE54B1EC()
{
  unint64_t result;

  result = qword_1EED9B750;
  if (!qword_1EED9B750)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937658, &type metadata for AssetRegistryOverrideAssetEntryParameters.ClearOverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B750);
  }
  return result;
}

unint64_t sub_1AE54B228()
{
  unint64_t result;

  result = qword_1EED9B758;
  if (!qword_1EED9B758)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937608, &type metadata for AssetRegistryOverrideAssetEntryParameters.OverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B758);
  }
  return result;
}

void AssetRegistryOverrideAssetEntryParameters.init(from:)(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int16 v41;
  unsigned __int8 v42;
  _QWORD *v43;

  v36 = a2;
  v4 = sub_1AE501548(&qword_1EED9B760);
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  v37 = v6;
  v38 = sub_1AE501548(&qword_1EED9B768);
  v7 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  sub_1AE4F90C8();
  v8 = sub_1AE501548(&qword_1EED9B770);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE54B1B0();
  v12 = v43;
  sub_1AE926F34();
  if (v12)
    goto LABEL_9;
  v32[0] = v7;
  v32[1] = v2;
  v43 = a1;
  v33 = v9;
  v13 = sub_1AE926C1C();
  v14 = *(_QWORD *)(v13 + 16);
  v15 = v8;
  if (!v14)
  {
LABEL_7:
    v25 = v33;
    v26 = sub_1AE926988();
    swift_allocError();
    v28 = v27;
    sub_1AE501548(&qword_1EED99C38);
    *v28 = &type metadata for AssetRegistryOverrideAssetEntryParameters;
    sub_1AE926B5C();
    sub_1AE92697C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x1E0DEC450], v26);
    swift_willThrow();
    sub_1AE50327C();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v15);
    a1 = v43;
LABEL_9:
    v29 = (uint64_t)a1;
    goto LABEL_10;
  }
  v16 = *(_BYTE *)(v13 + 32);
  sub_1AE50AF34(1, v14, v13, v13 + 32, 0, (2 * v14) | 1);
  v18 = v17;
  v20 = v19;
  swift_bridgeObjectRelease();
  if (v18 != v20 >> 1)
  {
    v15 = v8;
    goto LABEL_7;
  }
  if ((v16 & 1) != 0)
  {
    sub_1AE4FC5BC();
    v21 = v37;
    sub_1AE50339C();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v21, v35);
    sub_1AE50327C();
    sub_1AE4FB810(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    v22 = 0;
    v23 = 0uLL;
    v24 = 254;
  }
  else
  {
    LOBYTE(v39) = 0;
    sub_1AE54B228();
    sub_1AE50339C();
    sub_1AE540314();
    sub_1AE926BEC();
    v30 = v33;
    sub_1AE500964();
    swift_unknownObjectRelease();
    sub_1AE4FB810(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    v23 = v39;
    v22 = v40;
    v24 = v41 | (v42 << 16);
  }
  v31 = v36;
  *v36 = v23;
  *((_QWORD *)v31 + 2) = v22;
  *((_WORD *)v31 + 12) = v24;
  *((_BYTE *)v31 + 26) = BYTE2(v24);
  v29 = (uint64_t)v43;
LABEL_10:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v29);
  sub_1AE4F667C();
}

void sub_1AE54B5F0()
{
  AssetRegistryOverrideAssetEntryParameters.verifyValidity()();
}

void sub_1AE54B604(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  AssetRegistryOverrideAssetEntryParameters.init(from:)(a1, a2);
}

void sub_1AE54B618(_QWORD *a1)
{
  AssetRegistryOverrideAssetEntryParameters.encode(to:)(a1);
}

unint64_t sub_1AE54B62C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AE54B658();
  result = sub_1AE54B694();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AE54B658()
{
  unint64_t result;

  result = qword_1EED9B778;
  if (!qword_1EED9B778)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryOverrideAssetEntryParameters, &type metadata for AssetRegistryOverrideAssetEntryParameters);
    atomic_store(result, (unint64_t *)&qword_1EED9B778);
  }
  return result;
}

unint64_t sub_1AE54B694()
{
  unint64_t result;

  result = qword_1EED9B780;
  if (!qword_1EED9B780)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryOverrideAssetEntryParameters, &type metadata for AssetRegistryOverrideAssetEntryParameters);
    atomic_store(result, (unint64_t *)&qword_1EED9B780);
  }
  return result;
}

uint64_t destroy for AssetRegistryOverrideAssetEntryParameters(uint64_t result)
{
  if ((*(_WORD *)(result + 24) & 0x7E) == 0)
    return sub_1AE536AF8(*(_QWORD *)result, *(_QWORD *)(result + 8), *(_QWORD *)(result + 16), *(_WORD *)(result + 24));
  return result;
}

uint64_t initializeWithCopy for AssetRegistryOverrideAssetEntryParameters(uint64_t a1, uint64_t *a2)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *((unsigned __int16 *)a2 + 12);
  v4 = v3 | (*((unsigned __int8 *)a2 + 26) << 16);
  if ((v3 & 0x7E) != 0)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 11) = *(_OWORD *)((char *)a2 + 11);
  }
  else
  {
    v5 = *a2;
    v6 = a2[1];
    v7 = a2[2];
    sub_1AE536B1C(*a2, v6, v7, v3);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 26) = BYTE2(v4);
    *(_WORD *)(a1 + 24) = v4;
  }
  return a1;
}

uint64_t assignWithCopy for AssetRegistryOverrideAssetEntryParameters(uint64_t a1, __int128 *a2)
{
  __int16 v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;

  v4 = *(_WORD *)(a1 + 24);
  v5 = *((unsigned __int16 *)a2 + 12);
  v6 = v5 | (*((unsigned __int8 *)a2 + 26) << 16);
  if ((v4 & 0x7E) == 0)
  {
    if ((v5 & 0x7E) == 0)
    {
      v12 = *(_QWORD *)a2;
      v13 = *((_QWORD *)a2 + 1);
      v14 = *((_QWORD *)a2 + 2);
      sub_1AE536B1C(*(_QWORD *)a2, v13, v14, v5);
      v15 = *(_QWORD *)a1;
      v16 = *(_QWORD *)(a1 + 8);
      v17 = *(_QWORD *)(a1 + 16);
      v18 = *(_WORD *)(a1 + 24);
      *(_QWORD *)a1 = v12;
      *(_QWORD *)(a1 + 8) = v13;
      *(_QWORD *)(a1 + 16) = v14;
      *(_WORD *)(a1 + 24) = v6;
      *(_BYTE *)(a1 + 26) = BYTE2(v6);
      sub_1AE536AF8(v15, v16, v17, v18);
      return a1;
    }
    sub_1AE536AF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), v4);
    goto LABEL_6;
  }
  if ((v5 & 0x7E) != 0)
  {
LABEL_6:
    v10 = *a2;
    *(_OWORD *)(a1 + 11) = *(__int128 *)((char *)a2 + 11);
    *(_OWORD *)a1 = v10;
    return a1;
  }
  v7 = *(_QWORD *)a2;
  v8 = *((_QWORD *)a2 + 1);
  v9 = *((_QWORD *)a2 + 2);
  sub_1AE536B1C(*(_QWORD *)a2, v8, v9, v5);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 26) = BYTE2(v6);
  *(_WORD *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithTake for AssetRegistryOverrideAssetEntryParameters(uint64_t a1, uint64_t a2)
{
  char v4;
  int v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_WORD *)(a1 + 24);
  if ((*(_WORD *)(a1 + 24) & 0x7E) == 0)
  {
    v5 = *(unsigned __int16 *)(a2 + 24);
    v6 = v5 | (*(unsigned __int8 *)(a2 + 26) << 16);
    if ((v5 & 0x7E) == 0)
    {
      v8 = *(_QWORD *)(a2 + 16);
      v9 = *(_QWORD *)a1;
      v10 = *(_QWORD *)(a1 + 8);
      v11 = *(_QWORD *)(a1 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = v8;
      *(_WORD *)(a1 + 24) = v6;
      *(_BYTE *)(a1 + 26) = BYTE2(v6);
      sub_1AE536AF8(v9, v10, v11, v4);
      return a1;
    }
    sub_1AE536AF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), v4);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetRegistryOverrideAssetEntryParameters(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 27))
    return (*(_DWORD *)a1 + 126);
  v3 = (*(_WORD *)(a1 + 24) & 0x7E | (*(unsigned __int16 *)(a1 + 24) >> 7) & 1) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  if (v3 + 1 >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AssetRegistryOverrideAssetEntryParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)(result + 23) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 27) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 27) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_BYTE *)(result + 26) = 0;
      *(_WORD *)(result + 24) = (a2 ^ 0x7F) & 0xFE | ((a2 ^ 0x7F) << 7);
    }
  }
  return result;
}

uint64_t sub_1AE54B9C4(uint64_t a1)
{
  if ((*(_WORD *)(a1 + 24) & 0x7E) != 0)
    return (*(unsigned __int16 *)(a1 + 24) << 24 >> 31) - (*(_WORD *)(a1 + 24) & 0x7Eu) + 128;
  else
    return 0;
}

uint64_t sub_1AE54B9EC(uint64_t result, unsigned int a2)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 127;
  }
  else if (a2)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 2 * ((((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6)) & 0x7F);
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideAssetEntryParameters()
{
  return &type metadata for AssetRegistryOverrideAssetEntryParameters;
}

uint64_t storeEnumTagSinglePayload for AssetRegistryOverrideAssetEntryParameters.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE54BA90 + 4 * byte_1AE937355[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE54BAC4 + 4 * byte_1AE937350[v4]))();
}

uint64_t sub_1AE54BAC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE54BACC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE54BAD4);
  return result;
}

uint64_t sub_1AE54BAE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE54BAE8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE54BAEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE54BAF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideAssetEntryParameters.CodingKeys()
{
  return &type metadata for AssetRegistryOverrideAssetEntryParameters.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for AssetRegistryOverrideAssetEntryParameters.OverrideCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE54BB50 + 4 * byte_1AE93735A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE54BB70 + 4 * byte_1AE93735F[v4]))();
}

_BYTE *sub_1AE54BB50(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE54BB70(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE54BB78(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE54BB80(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE54BB88(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE54BB90(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideAssetEntryParameters.OverrideCodingKeys()
{
  return &type metadata for AssetRegistryOverrideAssetEntryParameters.OverrideCodingKeys;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideAssetEntryParameters.ClearOverrideCodingKeys()
{
  return &type metadata for AssetRegistryOverrideAssetEntryParameters.ClearOverrideCodingKeys;
}

unint64_t sub_1AE54BBC0()
{
  unint64_t result;

  result = qword_1EED9B788;
  if (!qword_1EED9B788)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937528, &type metadata for AssetRegistryOverrideAssetEntryParameters.OverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B788);
  }
  return result;
}

unint64_t sub_1AE54BC00()
{
  unint64_t result;

  result = qword_1EED9B790;
  if (!qword_1EED9B790)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9375E0, &type metadata for AssetRegistryOverrideAssetEntryParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B790);
  }
  return result;
}

unint64_t sub_1AE54BC40()
{
  unint64_t result;

  result = qword_1EED9B798;
  if (!qword_1EED9B798)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937498, &type metadata for AssetRegistryOverrideAssetEntryParameters.OverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B798);
  }
  return result;
}

unint64_t sub_1AE54BC80()
{
  unint64_t result;

  result = qword_1EED9B7A0;
  if (!qword_1EED9B7A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9374C0, &type metadata for AssetRegistryOverrideAssetEntryParameters.OverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B7A0);
  }
  return result;
}

unint64_t sub_1AE54BCC0()
{
  unint64_t result;

  result = qword_1EED9B7A8;
  if (!qword_1EED9B7A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937448, &type metadata for AssetRegistryOverrideAssetEntryParameters.ClearOverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B7A8);
  }
  return result;
}

unint64_t sub_1AE54BD00()
{
  unint64_t result;

  result = qword_1EED9B7B0;
  if (!qword_1EED9B7B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937470, &type metadata for AssetRegistryOverrideAssetEntryParameters.ClearOverrideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B7B0);
  }
  return result;
}

unint64_t sub_1AE54BD40()
{
  unint64_t result;

  result = qword_1EED9B7B8;
  if (!qword_1EED9B7B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937550, &type metadata for AssetRegistryOverrideAssetEntryParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B7B8);
  }
  return result;
}

unint64_t sub_1AE54BD80()
{
  unint64_t result;

  result = qword_1EED9B7C0;
  if (!qword_1EED9B7C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937578, &type metadata for AssetRegistryOverrideAssetEntryParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B7C0);
  }
  return result;
}

uint64_t sub_1AE54BDBC(char *a1)
{
  uint64_t v1;
  char v2;
  id v3;
  uint64_t v4;
  uint64_t result;

  v2 = *a1;
  v3 = objc_msgSend(objc_allocWithZone((Class)GDXPCAssetRegistryService), sel_init);
  sub_1AE924408();
  sub_1AE4FCE84();
  sub_1AE9243FC();
  sub_1AE50A968();
  sub_1AE4FCE84();
  v4 = sub_1AE9243B4();
  result = sub_1AE4F66BC();
  *(_BYTE *)(result + 24) = v2;
  *(_QWORD *)(result + 16) = v3;
  *(_QWORD *)(result + 32) = v1;
  *(_QWORD *)(result + 40) = v4;
  return result;
}

uint64_t AssetRegistryRemoteWritableBackendXPC.__allocating_init<>()()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = objc_msgSend(objc_allocWithZone((Class)GDXPCAssetRegistryService), sel_init);
  sub_1AE924408();
  sub_1AE4FCE84();
  sub_1AE9243FC();
  sub_1AE50A968();
  sub_1AE4FCE84();
  v2 = sub_1AE9243B4();
  v3 = sub_1AE4F66BC();
  sub_1AE501548(&qword_1EED9B228);
  v4 = sub_1AE4F66BC();
  *(_BYTE *)(v4 + 24) = 1;
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v2;
  *(_QWORD *)(v3 + 16) = v4;
  return v3;
}

void _s20IntelligencePlatform37AssetRegistryRemoteWritableBackendXPCC05assetdeG4TypeAA0cdegJ0OvgZ_0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1AE54BEFC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 24) = a1;
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 40) = a4;
  return v4;
}

void sub_1AE54BF10(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  __int128 v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;

  v67 = *MEMORY[0x1E0C80C00];
  v4 = (void *)MEMORY[0x1AF454348]();
  sub_1AE54C308((uint64_t *)&v61);
  if (v2)
  {
    objc_autoreleasePoolPop(v4);
    return;
  }
  objc_autoreleasePoolPop(v4);
  v5 = v61;
  v6 = *(void **)(v1 + 16);
  v7 = (void *)sub_1AE925E18();
  v8 = (void *)sub_1AE925E18();
  v9 = (void *)sub_1AE92481C();
  *(_QWORD *)&v61 = 0;
  v10 = objc_msgSend(v6, sel_assetEntryResultDataForAssetId_inDomainId_remoteOptionsData_error_, v7, v8, v9, &v61);

  v11 = (id)v61;
  if (!v10)
  {
    v14 = v11;
    v15 = (void *)sub_1AE9246B4();

    swift_willThrow();
    sub_1AE54C7D8();
    sub_1AE4F6778();
    *v16 = v15;
    v17 = v15;
    sub_1AE4FB81C();
    sub_1AE50BDB4(v5, *((unint64_t *)&v5 + 1));

    return;
  }
  sub_1AE924834();

  sub_1AE4F9154();
  v12 = swift_retain();
  v13 = (void *)MEMORY[0x1AF454348](v12);
  sub_1AE501548(&qword_1EED9B8A0);
  sub_1AE54C9A0((unint64_t *)&qword_1EED9B8A8, &qword_1EED9B8A0);
  sub_1AE9243A8();
  objc_autoreleasePoolPop(v13);
  v18 = v61;
  v20 = v62;
  v19 = v63;
  v59 = v65;
  v60 = v64;
  if ((v66 & 1) != 0)
  {
    sub_1AE4FFCA0();
    sub_1AE4FE958();
    v61 = v18;
    LOBYTE(v62) = v20;
    sub_1AE5019C4();
    sub_1AE5019C4();
    sub_1AE545928();
    if (sub_1AE926D30())
    {
      sub_1AE54ABBC(v18, *((uint64_t *)&v18 + 1), v20, v19, v60, v59, 1);
    }
    else
    {
      sub_1AE4F6778();
      v23 = v62;
      *(_OWORD *)v24 = v61;
      *(_BYTE *)(v24 + 16) = v23;
    }
    sub_1AE4FB81C();
    v25 = sub_1AE4FDA18();
    sub_1AE54ABBC(v25, v26, v27, v28, v29, v30, v31);
    v32 = sub_1AE4FE958();
    sub_1AE50A2B4(v32, v33, v34, v35, v36, v37, v38, v39, v58, *((unint64_t *)&v5 + 1), v59, v60, a1, v5);
    v40 = sub_1AE4FDA18();
  }
  else
  {
    if ((v63 & 0x80) != 0)
    {
      sub_1AE4FFCA0();
      sub_1AE4FE958();
      v21 = a1;
    }
    else
    {
      LOBYTE(v63) = v63 & 1;
      v58 = v19;
      v19 = v62;
      AssetRegistryAssetLocation.LocalAsset.verifyValidity()();
      sub_1AE4FFCA0();
      sub_1AE4FE958();
      v21 = a1;
      if (v22)
      {
        sub_1AE54ABBC(v18, v5, v19, v58, v60, v59, 0);
        sub_1AE4FE958();
        sub_1AE50BDB4(v5, *((unint64_t *)&v5 + 1));
        return;
      }
      v20 = v19;
      LODWORD(v19) = v58;
    }
    *(_OWORD *)v21 = v18;
    v47 = v20;
    *(_QWORD *)(v21 + 16) = v20;
    *(_WORD *)(v21 + 24) = v19;
    *(_BYTE *)(v21 + 26) = BYTE2(v19);
    v48 = v59;
    v49 = v60;
    *(_QWORD *)(v21 + 32) = v60;
    *(_QWORD *)(v21 + 40) = v59;
    sub_1AE536B1C(v18, *((uint64_t *)&v18 + 1), v47, v19);
    swift_bridgeObjectRetain();
    v50 = sub_1AE4FE958();
    sub_1AE50A2B4(v50, v51, v52, v53, v54, v55, v56, v57, v58, *((unint64_t *)&v5 + 1), v59, v60, a1, v5);
    v41 = *((_QWORD *)&v18 + 1);
    v40 = v18;
    v42 = v47;
    v43 = v19;
    v44 = v49;
    v45 = v48;
    v46 = 0;
  }
  sub_1AE54ABBC(v40, v41, v42, v43, v44, v45, v46);
}

uint64_t sub_1AE54C308@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  sub_1AE53C938();
  result = sub_1AE9243F0();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_1AE54C360()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1AE54C38C()
{
  sub_1AE54C360();
  return swift_deallocClassInstance();
}

void sub_1AE54C3AC(_BYTE *a1@<X8>)
{
  _s20IntelligencePlatform37AssetRegistryRemoteWritableBackendXPCC05assetdeG4TypeAA0cdegJ0OvgZ_0(a1);
}

void sub_1AE54C3C0(uint64_t a1@<X8>)
{
  sub_1AE54BF10(a1);
}

uint64_t sub_1AE54C3E0()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1AE54C3EC()
{
  return swift_retain();
}

uint64_t sub_1AE54C3F8()
{
  return swift_retain();
}

void AssetRegistryRemoteWritableBackendXPC.assetEntry(for:in:)(uint64_t a1@<X8>)
{
  sub_1AE54BF10(a1);
}

void AssetRegistryRemoteWritableBackendXPC.overrideAssetEntry(for:in:overrideAssetEntryParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  _QWORD *v21;
  id v22;
  char v23;
  uint64_t v24;
  __int128 v25;
  char v26;
  char v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v6 = *(_QWORD *)a5;
  v7 = *(_QWORD *)(a5 + 8);
  v8 = *(_QWORD *)(a5 + 16);
  v9 = *(unsigned __int16 *)(a5 + 24) | (*(unsigned __int8 *)(a5 + 26) << 16);
  v10 = (uint64_t *)sub_1AE54C3EC();
  sub_1AE54C6F0(v10, v6, v7, v8, v9);
  swift_release();
  if (!v5)
  {
    v11 = (void *)sub_1AE54C3E0();
    v12 = (void *)sub_1AE925E18();
    v13 = (void *)sub_1AE925E18();
    v14 = (void *)sub_1AE92481C();
    *(_QWORD *)&v25 = 0;
    v15 = objc_msgSend(v11, sel_overrideAssetEntryForAssetId_inDomainId_overrideAssetEntryParametersData_error_, v12, v13, v14, &v25);
    swift_unknownObjectRelease();

    v16 = (id)v25;
    if (v15)
    {
      sub_1AE924834();

      sub_1AE54C3F8();
      v17 = sub_1AE4F9154();
      v18 = (void *)MEMORY[0x1AF454348](v17);
      sub_1AE501548(&qword_1EED9B7D0);
      sub_1AE54C9A0(&qword_1EED9B7D8, &qword_1EED9B7D0);
      sub_1AE9243A8();
      objc_autoreleasePoolPop(v18);
      swift_release();
      sub_1AE4FE958();
      if ((v27 & 1) != 0)
      {
        sub_1AE4FC5C8();
        sub_1AE4FC5C8();
        sub_1AE5472C0();
        if (sub_1AE926D30())
        {
          sub_1AE4FE964();
        }
        else
        {
          sub_1AE4F6778();
          v23 = v26;
          *(_OWORD *)v24 = v25;
          *(_BYTE *)(v24 + 16) = v23;
        }
        sub_1AE4FB81C();
        sub_1AE4FE964();
        sub_1AE4FE958();
        sub_1AE4FCED8();
        sub_1AE4FE964();
      }
      else
      {
        sub_1AE4FE958();
        sub_1AE4FCED8();
      }
    }
    else
    {
      v19 = v16;
      v20 = (void *)sub_1AE9246B4();

      swift_willThrow();
      sub_1AE54C7D8();
      sub_1AE4F6778();
      *v21 = v20;
      v22 = v20;
      sub_1AE4FB81C();
      sub_1AE4FCED8();

    }
  }
}

uint64_t *sub_1AE54C6F0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v12;
  uint64_t v13;
  int v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  char v22;

  v6 = v5;
  if ((a5 & 0x80) != 0
    || (v18 = a2,
        v19 = a3,
        v20 = a4,
        LOBYTE(v21) = a5 & 1,
        v12 = &v18,
        AssetRegistryAssetLocation.LocalAsset.verifyValidity()(),
        (v6 = v13) == 0))
  {
    v14 = a5 & 0xFFFFFF;
    v15 = (void *)MEMORY[0x1AF454348]();
    v18 = a2;
    v19 = a3;
    v20 = a4;
    v22 = BYTE2(v14);
    v21 = v14;
    sub_1AE54B694();
    v12 = a1;
    v16 = sub_1AE9243F0();
    if (v6)
    {
      objc_autoreleasePoolPop(v15);
    }
    else
    {
      v12 = (uint64_t *)v16;
      objc_autoreleasePoolPop(v15);
    }
  }
  return v12;
}

unint64_t sub_1AE54C7D8()
{
  unint64_t result;

  result = qword_1EED9B7C8;
  if (!qword_1EED9B7C8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryXPCError, &type metadata for AssetRegistryXPCError);
    atomic_store(result, (unint64_t *)&qword_1EED9B7C8);
  }
  return result;
}

uint64_t sub_1AE54C814(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1AE54C858(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_1AE5474E4(a1, a2, a3);
  return a1;
}

uint64_t AssetRegistryRemoteWritableBackendXPC.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t AssetRegistryRemoteWritableBackendXPC.__deallocating_deinit()
{
  AssetRegistryRemoteWritableBackendXPC.deinit();
  return swift_deallocClassInstance();
}

void sub_1AE54C8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  AssetRegistryRemoteWritableBackendXPC.overrideAssetEntry(for:in:overrideAssetEntryParameters:)(a1, a2, a3, a4, a5);
}

void sub_1AE54C8C0(uint64_t a1@<X8>)
{
  AssetRegistryRemoteWritableBackendXPC.assetEntry(for:in:)(a1);
}

uint64_t sub_1AE54C8E0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AssetRegistryRemoteBackendXPC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AssetRegistryRemoteBackendXPC);
}

uint64_t sub_1AE54C944()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AssetRegistryRemoteWritableBackendXPC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AssetRegistryRemoteWritableBackendXPC);
}

uint64_t method lookup function for AssetRegistryRemoteWritableBackendXPC()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AE54C9A0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1AE523CF0(a2);
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryResult<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AE54C9E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  _QWORD v11[2];
  __int128 v12;
  __int128 v13;

  sub_1AE54576C(a1, a2, a3, a4, a5, (uint64_t)v11);
  sub_1AE4F682C();
  v7 = v11[1];
  v8 = v12;
  v9 = v13;
  *(_QWORD *)a6 = v11[0];
  *(_QWORD *)(a6 + 8) = v7;
  *(_OWORD *)(a6 + 16) = v8;
  *(_OWORD *)(a6 + 32) = v9;
  *(_BYTE *)(a6 + 48) = 0;
  swift_bridgeObjectRelease();
  return sub_1AE4F6648();
}

void AssetRegistryResult.init(_:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE92670C();
  sub_1AE4FE978();
  v1 = MEMORY[0x1E0C80A78](v0);
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4F666C();
  type metadata accessor for AssetRegistryResult();
}

uint64_t sub_1AE54CBA4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v9 - v6;
  v1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(_QWORD, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v2 - 136), v7, a1);
}

void type metadata accessor for AssetRegistryResult()
{
  JUMPOUT(0x1AF454AECLL);
}

void AssetRegistryResult.get()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v18 - v10;
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F666C();
  v14 = v13 - v12;
  (*(void (**)(uint64_t))(v15 + 16))(v13 - v12);
  sub_1AE5085E4();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    v16(v11, v14, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v11, v4);
    if (sub_1AE926D30())
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    else
    {
      sub_1AE4F6778();
      v16(v17, (uint64_t)v8, v4);
    }
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 32))(a2, v14);
  }
  sub_1AE4FCE34();
}

uint64_t sub_1AE54CE78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE54CF6C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6572756C696166;
  else
    return 0x73736563637573;
}

uint64_t sub_1AE54CF9C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    sub_1AE4F6648();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1AE54D004()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  sub_1AE926F10();
  sub_1AE4F6650();
}

BOOL sub_1AE54D03C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AE512960(*a1, *a2);
}

uint64_t sub_1AE54D058()
{
  return sub_1AE54AD48();
}

uint64_t sub_1AE54D070()
{
  return sub_1AE541644();
}

uint64_t sub_1AE54D088()
{
  sub_1AE926EC8();
  sub_1AE541644();
  return sub_1AE926F10();
}

uint64_t sub_1AE54D0D4()
{
  char *v0;

  return sub_1AE54CF6C(*v0);
}

uint64_t sub_1AE54D0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE54CE78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE54D120()
{
  return sub_1AE50D624();
}

uint64_t sub_1AE54D14C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE541760();
  *a1 = result;
  return result;
}

uint64_t sub_1AE54D180(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE937D20, a1);
  return sub_1AE926F94();
}

uint64_t sub_1AE54D1B4(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE937D20, a1);
  return sub_1AE926FA0();
}

uint64_t sub_1AE54D1E8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  return sub_1AE54D2AC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))_sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0);
}

uint64_t sub_1AE54D1F8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1AE54D2F4(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AE53664C);
}

void sub_1AE54D204(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  sub_1AE54D318(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AE53664C);
}

uint64_t sub_1AE54D210(_QWORD *a1, uint64_t a2)
{
  return sub_1AE54D368(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AE541B68);
}

uint64_t sub_1AE54D220(_QWORD *a1, uint64_t a2)
{
  return sub_1AE54D3C4(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AE50D624);
}

uint64_t sub_1AE54D22C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1AE54D3FC(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))_sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0, a3);
}

uint64_t sub_1AE54D238(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE937DC0, a1);
  return sub_1AE926F94();
}

uint64_t sub_1AE54D26C(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE937DC0, a1);
  return sub_1AE926FA0();
}

uint64_t sub_1AE54D2A0(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  return sub_1AE54D2AC(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0);
}

uint64_t sub_1AE54D2AC(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(a3[2], a3[3], a3[4], a3[5], a3[6]);
}

void sub_1AE54D2C4()
{
  sub_1AE54D004();
}

uint64_t sub_1AE54D2E8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1AE54D2F4(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AE536754);
}

uint64_t sub_1AE54D2F4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a4(a1, a2[2], a2[3], a2[4], a2[5], a2[6]);
}

void sub_1AE54D30C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  sub_1AE54D318(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AE536754);
}

void sub_1AE54D318(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _BYTE v6[72];

  sub_1AE926EC8();
  a4(v6, a2[2], a2[3], a2[4], a2[5], a2[6]);
  sub_1AE926F10();
  sub_1AE4F6650();
}

uint64_t sub_1AE54D35C(_QWORD *a1, uint64_t a2)
{
  return sub_1AE54D368(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AE541C9C);
}

uint64_t sub_1AE54D368(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a3(a1[2], a1[3], a1[4], a1[5], a1[6]);
}

uint64_t sub_1AE54D380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE54CF9C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE54D3B8(_QWORD *a1, uint64_t a2)
{
  return sub_1AE54D3C4(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AE54EF20);
}

uint64_t sub_1AE54D3C4(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a3(a1[2], a1[3], a1[4], a1[5], a1[6]);
}

uint64_t sub_1AE54D3F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1AE54D3FC(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0, a3);
}

uint64_t sub_1AE54D3FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = a3(a1, a2[2], a2[3], a2[4], a2[5], a2[6]);
  *a4 = result & 1;
  return result;
}

uint64_t sub_1AE54D438(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE937D70, a1);
  return sub_1AE926F94();
}

uint64_t sub_1AE54D46C(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE937D70, a1);
  return sub_1AE926FA0();
}

void AssetRegistryResult.encode(to:)()
{
  sub_1AE4FC5D8();
  type metadata accessor for AssetRegistryResult.FailureCodingKeys();
}

void sub_1AE54D4EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  MEMORY[0x1AF454B70](&unk_1AE937DC0, a1);
  sub_1AE4F9160();
  *(_QWORD *)(v5 - 240) = v7;
  *(_QWORD *)(v5 - 232) = a1;
  v8 = sub_1AE926CF4();
  *(_QWORD *)(v5 - 184) = v8;
  *(_QWORD *)(v5 - 208) = *(_QWORD *)(v8 - 8);
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4FCEE4();
  *(_QWORD *)(v5 - 224) = v10;
  *(_QWORD *)(v5 - 200) = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F9024();
  *(_QWORD *)(v5 - 216) = v12;
  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 120) = v2;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v4;
  sub_1AE4FC5D8();
  type metadata accessor for AssetRegistryResult.SuccessCodingKeys();
}

void sub_1AE54D570(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  MEMORY[0x1AF454B70](&unk_1AE937D70, a1);
  sub_1AE4F9160();
  *(_QWORD *)(v6 - 288) = a1;
  *(_QWORD *)(v6 - 296) = v8;
  v9 = sub_1AE926CF4();
  *(_QWORD *)(v6 - 248) = v9;
  *(_QWORD *)(v6 - 264) = *(_QWORD *)(v9 - 8);
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4FCEE4();
  *(_QWORD *)(v6 - 280) = v11;
  *(_QWORD *)(v6 - 256) = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F9024();
  *(_QWORD *)(v6 - 272) = v13;
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F666C();
  *(_QWORD *)(v6 - 168) = v4;
  *(_QWORD *)(v6 - 160) = v3;
  *(_QWORD *)(v6 - 128) = v3;
  *(_QWORD *)(v6 - 120) = v2;
  *(_QWORD *)(v6 - 192) = v2;
  *(_QWORD *)(v6 - 112) = v1;
  *(_QWORD *)(v6 - 104) = v4;
  *(_QWORD *)(v6 - 176) = v5;
  sub_1AE4FC5D8();
  type metadata accessor for AssetRegistryResult.CodingKeys();
}

void sub_1AE54D63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;

  MEMORY[0x1AF454B70](&unk_1AE937D20, a1);
  v14 = sub_1AE926CF4();
  *(_QWORD *)(v13 - 152) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v13 - 144) = v14;
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&a9 - v16;
  sub_1AE4F9858(v9, v9[3]);
  sub_1AE926F4C();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 16))(v11, *(_QWORD *)(v13 - 136), v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_1AE5085E4();
    v19(v18);
    *(_BYTE *)(v13 - 128) = 1;
    v20 = *(_QWORD *)(v13 - 224);
    v21 = *(_QWORD *)(v13 - 144);
    sub_1AE508A7C();
    sub_1AE926C34();
    v22 = *(_QWORD *)(v13 - 184);
    sub_1AE509384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 208) + 8))(v20, v22);
    v23 = sub_1AE5085E4();
  }
  else
  {
    v26 = *(_QWORD *)(v13 - 256);
    v27 = *(_QWORD *)(v13 - 272);
    v28 = sub_1AE5085E4();
    v29 = *(_QWORD *)(v13 - 160);
    v30(v28);
    *(_BYTE *)(v13 - 128) = 0;
    v31 = *(_QWORD *)(v13 - 280);
    v21 = *(_QWORD *)(v13 - 144);
    sub_1AE508A7C();
    sub_1AE926C34();
    v32 = *(_QWORD *)(v13 - 248);
    sub_1AE509384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 264) + 8))(v31, v32);
    v25 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v23 = v27;
    v24 = v29;
  }
  v25(v23, v24);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 152) + 8))(v17, v21);
  sub_1AE4F667C();
}

void type metadata accessor for AssetRegistryResult.FailureCodingKeys()
{
  JUMPOUT(0x1AF454AECLL);
}

void type metadata accessor for AssetRegistryResult.SuccessCodingKeys()
{
  JUMPOUT(0x1AF454AECLL);
}

void type metadata accessor for AssetRegistryResult.CodingKeys()
{
  JUMPOUT(0x1AF454AECLL);
}

void AssetRegistryResult.init(from:)()
{
  type metadata accessor for AssetRegistryResult.FailureCodingKeys();
}

void sub_1AE54D89C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1AF454B70](&unk_1AE937DC0, a1);
  sub_1AE4F9160();
  *(_QWORD *)(v1 - 232) = v3;
  *(_QWORD *)(v1 - 224) = a1;
  v4 = sub_1AE926C28();
  *(_QWORD *)(v1 - 304) = v4;
  *(_QWORD *)(v1 - 264) = *(_QWORD *)(v4 - 8);
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4FCEE4();
  *(_QWORD *)(v1 - 192) = v6;
  sub_1AE5019D4();
  type metadata accessor for AssetRegistryResult.SuccessCodingKeys();
}

void sub_1AE54D8F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1AF454B70](&unk_1AE937D70, a1);
  sub_1AE4F9160();
  *(_QWORD *)(v1 - 256) = v3;
  *(_QWORD *)(v1 - 248) = a1;
  v4 = sub_1AE926C28();
  *(_QWORD *)(v1 - 320) = v4;
  *(_QWORD *)(v1 - 272) = *(_QWORD *)(v4 - 8);
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4FCEE4();
  *(_QWORD *)(v1 - 240) = v6;
  sub_1AE5019D4();
  type metadata accessor for AssetRegistryResult.CodingKeys();
}

void sub_1AE54D94C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v6 - 176) = MEMORY[0x1AF454B70](&unk_1AE937D20, a1);
  v7 = sub_1AE926C28();
  *(_QWORD *)(v6 - 184) = v7;
  *(_QWORD *)(v6 - 200) = *(_QWORD *)(v7 - 8);
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v8);
  *(_QWORD *)(v6 - 312) = v4;
  *(_QWORD *)(v6 - 128) = v4;
  *(_QWORD *)(v6 - 120) = v5;
  *(_QWORD *)(v6 - 288) = v5;
  *(_QWORD *)(v6 - 280) = v3;
  *(_QWORD *)(v6 - 112) = v3;
  *(_QWORD *)(v6 - 104) = v2;
  *(_QWORD *)(v6 - 296) = v1;
  *(_QWORD *)(v6 - 96) = v1;
  type metadata accessor for AssetRegistryResult();
}

void sub_1AE54D9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;

  *(_QWORD *)(v9 - 216) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v9 - 208) = a1;
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&a9 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&a9 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&a9 - v16;
  v18 = *(_QWORD **)(v9 - 72);
  sub_1AE4F9858(v18, v18[3]);
  v19 = *(_QWORD *)(v9 - 168);
  sub_1AE926F34();
  v20 = (uint64_t)v18;
  if (!v19)
  {
    *(_QWORD *)(v9 - 176) = v15;
    *(_QWORD *)(v9 - 168) = v12;
    *(_QWORD *)(v9 - 336) = v17;
    *(_QWORD *)(v9 - 160) = sub_1AE926C1C();
    v21 = sub_1AE9262B0();
    MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF38], v21);
    *(_QWORD *)(v9 - 128) = sub_1AE9267FC();
    *(_QWORD *)(v9 - 120) = v22;
    *(_QWORD *)(v9 - 112) = v23;
    *(_QWORD *)(v9 - 104) = v24;
    v25 = sub_1AE9267F0();
    MEMORY[0x1AF454B70](MEMORY[0x1E0DEBF88], v25);
    sub_1AE505390();
    sub_1AE9264C0();
    v26 = *(unsigned __int8 *)(v9 - 160);
    if (v26 == 2
      || (v28 = *(_OWORD *)(v9 - 128),
          v27 = *(_OWORD *)(v9 - 112),
          *(_OWORD *)(v9 - 352) = v28,
          *(_OWORD *)(v9 - 160) = v28,
          *(_OWORD *)(v9 - 144) = v27,
          sub_1AE505390(),
          (sub_1AE926544() & 1) == 0))
    {
      v31 = sub_1AE926988();
      sub_1AE4F6778();
      v33 = v32;
      sub_1AE501548(&qword_1EED99C38);
      *v33 = *(_QWORD *)(v9 - 208);
      sub_1AE926B5C();
      sub_1AE92697C();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x1E0DEC450], v31);
      swift_willThrow();
      swift_unknownObjectRelease();
      sub_1AE4FB838(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 200) + 8));
    }
    else
    {
      if ((v26 & 1) != 0)
      {
        *(_BYTE *)(v9 - 160) = 1;
        sub_1AE508A7C();
        sub_1AE50984C();
        v34 = *(_QWORD *)(v9 - 168);
        sub_1AE5033C4();
        v35 = *(_QWORD *)(v9 - 200);
        sub_1AE4FB824(v9 - 8);
        sub_1AE4FB844();
        sub_1AE4FB838(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
        v36 = *(_QWORD *)(v9 - 208);
        swift_storeEnumTagMultiPayload();
        v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 216) + 32);
        v38 = *(_QWORD *)(v9 - 336);
        v37(v38, v34, v36);
      }
      else
      {
        *(_BYTE *)(v9 - 160) = 0;
        sub_1AE508A7C();
        sub_1AE50984C();
        v29 = *(_QWORD *)(v9 - 216);
        v30 = *(_QWORD *)(v9 - 176);
        sub_1AE5033C4();
        sub_1AE5033B0(v9 - 16);
        sub_1AE4FB844();
        sub_1AE4FB838(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 200) + 8));
        v36 = *(_QWORD *)(v9 - 208);
        swift_storeEnumTagMultiPayload();
        v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
        v38 = *(_QWORD *)(v9 - 336);
        v37(v38, v30, v36);
      }
      v37(*(_QWORD *)(v9 - 328), v38, v36);
    }
    v20 = *(_QWORD *)(v9 - 72);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v20);
  sub_1AE4F667C();
}

void sub_1AE54DD94()
{
  AssetRegistryResult.init(from:)();
}

void sub_1AE54DDB8()
{
  AssetRegistryResult.encode(to:)();
}

void AssetRegistryResult<>.verifyValidity()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, a1);
  sub_1AE505390();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_1AE505390();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v11, v4);
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(v4, a2);
    v15 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v13 = (uint64_t)v8;
    v14 = v4;
  }
  v15(v13, v14);
  sub_1AE4FCE34();
}

void sub_1AE54DECC(uint64_t a1, uint64_t a2)
{
  AssetRegistryResult<>.verifyValidity()(a1, *(_QWORD *)(a2 - 8));
}

uint64_t sub_1AE54DEEC()
{
  sub_1AE54DFF8();
  return sub_1AE926F94();
}

uint64_t sub_1AE54DF14()
{
  sub_1AE54DFF8();
  return sub_1AE926FA0();
}

uint64_t AssetRegistryOverrideAssetEntrySuccess.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1AE501548(&qword_1EED9B8B0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F666C();
  v6 = v5 - v4;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE54DFF8();
  sub_1AE926F4C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_1AE54DFF8()
{
  unint64_t result;

  result = qword_1EED9B8B8;
  if (!qword_1EED9B8B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937CD0, &type metadata for AssetRegistryOverrideAssetEntrySuccess.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9B8B8);
  }
  return result;
}

uint64_t AssetRegistryOverrideAssetEntrySuccess.init(from:)(uint64_t a1)
{
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
}

uint64_t sub_1AE54E058(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryResult<A, B>);
  result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryResult<A, B>, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AE54E09C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AE54E0C8();
  result = sub_1AE54E104();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AE54E0C8()
{
  unint64_t result;

  result = qword_1EED9B8C0;
  if (!qword_1EED9B8C0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryOverrideAssetEntrySuccess, &type metadata for AssetRegistryOverrideAssetEntrySuccess);
    atomic_store(result, (unint64_t *)&qword_1EED9B8C0);
  }
  return result;
}

unint64_t sub_1AE54E104()
{
  unint64_t result;

  result = qword_1EED9B8C8[0];
  if (!qword_1EED9B8C8[0])
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for AssetRegistryOverrideAssetEntrySuccess, &type metadata for AssetRegistryOverrideAssetEntrySuccess);
    atomic_store(result, qword_1EED9B8C8);
  }
  return result;
}

uint64_t sub_1AE54E140(uint64_t a1)
{
  return AssetRegistryOverrideAssetEntrySuccess.init(from:)(a1);
}

uint64_t sub_1AE54E154(_QWORD *a1)
{
  return AssetRegistryOverrideAssetEntrySuccess.encode(to:)(a1);
}

uint64_t sub_1AE54E168()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1AE54E170()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1AE54E1F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v5 + 64) <= *(_QWORD *)(v4 + 64))
    v6 = *(_QWORD *)(v4 + 64);
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = (*(_BYTE *)(v5 + 80) | *(_BYTE *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    v11 = *((unsigned __int8 *)a2 + v6);
    if (v11 >= 2)
    {
      if (v6 <= 3)
        v12 = v6;
      else
        v12 = 4;
      __asm { BR              X15 }
    }
    if (v11 == 1)
    {
      (*(void (**)(uint64_t *))(v5 + 16))(a1);
      *((_BYTE *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v6) = 0;
    }
  }
  else
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1AE54E324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(v2 - 8);
  if (*(_QWORD *)(v5 + 64) > v4)
    v4 = *(_QWORD *)(v5 + 64);
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (v6 < 2)
  {
    if (v6 == 1)
      v3 = *(_QWORD *)(v2 - 8);
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    if (v4 <= 3)
      v7 = v4;
    else
      v7 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1AE54E370 + 4 * byte_1AE937845[v7]))();
  }
}

uint64_t sub_1AE54E3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v6 + 64) <= *(_QWORD *)(v5 + 64))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X16 }
  }
  v10 = v8 == 1;
  if (v8 == 1)
    v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(_BYTE *)(a1 + v7) = v10;
  return a1;
}

uint64_t sub_1AE54E498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v8 + 64) <= *(_QWORD *)(v7 + 64))
      v9 = *(_QWORD *)(v7 + 64);
    else
      v9 = *(_QWORD *)(v8 + 64);
    v10 = *(unsigned __int8 *)(a1 + v9);
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
      v12 = *(_QWORD *)(v6 - 8);
    else
      v12 = *(_QWORD *)(v5 - 8);
    if (v10 == 1)
      v13 = *(_QWORD *)(a3 + 24);
    else
      v13 = *(_QWORD *)(a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v13);
    v14 = *(unsigned __int8 *)(a2 + v9);
    if (v14 >= 2)
    {
      if (v9 <= 3)
        v15 = v9;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    v16 = v14 == 1;
    if (v14 == 1)
      v17 = v8;
    else
      v17 = v7;
    if (v14 == 1)
      v18 = v6;
    else
      v18 = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a1, a2, v18);
    *(_BYTE *)(a1 + v9) = v16;
  }
  return a1;
}

uint64_t sub_1AE54E614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;

  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v4 - 8);
  if (*(_QWORD *)(v6 + 64) <= *(_QWORD *)(v5 + 64))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(a2 + v7);
  if (v8 >= 2)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X16 }
  }
  v10 = v8 == 1;
  if (v8 == 1)
    v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(_BYTE *)(a1 + v7) = v10;
  return a1;
}

uint64_t sub_1AE54E6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(a3 + 24);
    v7 = *(_QWORD *)(v5 - 8);
    v8 = *(_QWORD *)(v6 - 8);
    if (*(_QWORD *)(v8 + 64) <= *(_QWORD *)(v7 + 64))
      v9 = *(_QWORD *)(v7 + 64);
    else
      v9 = *(_QWORD *)(v8 + 64);
    v10 = *(unsigned __int8 *)(a1 + v9);
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
      v12 = *(_QWORD *)(v6 - 8);
    else
      v12 = *(_QWORD *)(v5 - 8);
    if (v10 == 1)
      v13 = *(_QWORD *)(a3 + 24);
    else
      v13 = *(_QWORD *)(a3 + 16);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v13);
    v14 = *(unsigned __int8 *)(a2 + v9);
    if (v14 >= 2)
    {
      if (v9 <= 3)
        v15 = v9;
      else
        v15 = 4;
      __asm { BR              X12 }
    }
    v16 = v14 == 1;
    if (v14 == 1)
      v17 = v8;
    else
      v17 = v7;
    if (v14 == 1)
      v18 = v6;
    else
      v18 = v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(a1, a2, v18);
    *(_BYTE *)(a1 + v9) = v16;
  }
  return a1;
}

uint64_t sub_1AE54E864(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (v3 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64))
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1AE54E92C + 4 * byte_1AE937868[(v4 - 1)]))();
}

void sub_1AE54E978(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64) > v5)
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_1AE54EB20(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  if (v2 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64))
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1AE54EB6C + 4 * byte_1AE937876[v3]))();
}

void sub_1AE54EBB4(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  if (a2 > 1)
  {
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16)
                                                                                              - 8)
                                                                                  + 64))
      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    else
      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
    v6 = a2 - 2;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
    if (v4 <= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64))
      v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
    a1[v4] = a2;
  }
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideAssetEntrySuccess()
{
  return &type metadata for AssetRegistryOverrideAssetEntrySuccess;
}

ValueMetadata *type metadata accessor for AssetRegistryOverrideAssetEntrySuccess.CodingKeys()
{
  return &type metadata for AssetRegistryOverrideAssetEntrySuccess.CodingKeys;
}

uint64_t sub_1AE54ECBC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1AE54ECC4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE54ED10 + 4 * byte_1AE937880[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE54ED44 + 4 * byte_1AE93787B[v4]))();
}

uint64_t sub_1AE54ED44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE54ED4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE54ED54);
  return result;
}

uint64_t sub_1AE54ED60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE54ED68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE54ED6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE54ED74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE54ED84(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE54EDC4 + 4 * byte_1AE937885[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE54EDE4 + 4 * byte_1AE93788A[v4]))();
}

_BYTE *sub_1AE54EDC4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE54EDE4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE54EDEC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE54EDF4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE54EDFC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE54EE04(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1AE54EE10()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE54EE20()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE54EE30()
{
  JUMPOUT(0x1AF454B70);
}

unint64_t sub_1AE54EE44()
{
  unint64_t result;

  result = qword_1EED9BA50;
  if (!qword_1EED9BA50)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937C80, &type metadata for AssetRegistryOverrideAssetEntrySuccess.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9BA50);
  }
  return result;
}

unint64_t sub_1AE54EE84()
{
  unint64_t result;

  result = qword_1EED9BA58;
  if (!qword_1EED9BA58)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937CA8, &type metadata for AssetRegistryOverrideAssetEntrySuccess.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9BA58);
  }
  return result;
}

void sub_1AE54EEC0()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE54EED0()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE54EEE0()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE54EEF0()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE54EF00()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE54EF10()
{
  JUMPOUT(0x1AF454B70);
}

uint64_t sub_1AE54EF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for FileLoader();
  sub_1AE54F0D8();
  v2 = static FileLoader.inIntelligencePlatform(searchPaths:)(v1);
  result = swift_bridgeObjectRelease();
  if (!v0)
  {
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v2;
  }
  return result;
}

uint64_t sub_1AE54EF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v7;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;

  FileLoader.data(forFile:withExtension:)(a1, a2, 1852797802, 0xE400000000000000);
  if (!v3)
  {
    if (v7 >> 60 == 15)
    {
      return 0;
    }
    else
    {
      sub_1AE54F15C();
      sub_1AE9243A8();
      a3 = v10;
      v9 = v10 == a1 && v11 == a2;
      if (!v9 && (sub_1AE926D60() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AE54F198();
        swift_allocError();
        swift_willThrow();
      }
      sub_1AE4FFCA8();
    }
  }
  return a3;
}

double sub_1AE54F0D8()
{
  uint64_t v0;
  double result;

  sub_1AE501548(&qword_1ED31AD38);
  v0 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v0 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v0 + 32) = &unk_1E5DAD528;
  return result;
}

uint64_t sub_1AE54F118()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetRegistryServerConfigLoader()
{
  return objc_opt_self();
}

unint64_t sub_1AE54F15C()
{
  unint64_t result;

  result = qword_1ED30F1A0;
  if (!qword_1ED30F1A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE936B28, &unk_1E5DBC128);
    atomic_store(result, (unint64_t *)&qword_1ED30F1A0);
  }
  return result;
}

unint64_t sub_1AE54F198()
{
  unint64_t result;

  result = qword_1EED9BA60;
  if (!qword_1EED9BA60)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937F3C, &type metadata for AssetRegistryServerConfigLoaderError);
    atomic_store(result, (unint64_t *)&qword_1EED9BA60);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AssetRegistryServerConfigLoaderError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE54F214 + 4 * byte_1AE937E10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE54F234 + 4 * byte_1AE937E15[v4]))();
}

_BYTE *sub_1AE54F214(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE54F234(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE54F23C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE54F244(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE54F24C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE54F254(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AssetRegistryServerConfigLoaderError()
{
  return &type metadata for AssetRegistryServerConfigLoaderError;
}

uint64_t sub_1AE54F274()
{
  sub_1AE54F2E8();
  return sub_1AE926E14();
}

uint64_t sub_1AE54F29C()
{
  sub_1AE54F2E8();
  return sub_1AE926E08();
}

unint64_t sub_1AE54F2C4(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE54F2E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE54F2E8()
{
  unint64_t result;

  result = qword_1EED9BA68;
  if (!qword_1EED9BA68)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937E78, &type metadata for AssetRegistryServerConfigLoaderError);
    atomic_store(result, (unint64_t *)&qword_1EED9BA68);
  }
  return result;
}

unint64_t sub_1AE54F328()
{
  unint64_t result;

  result = qword_1EED9BA70;
  if (!qword_1EED9BA70)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE937F14, &type metadata for AssetRegistryServerConfigLoaderError);
    atomic_store(result, (unint64_t *)&qword_1EED9BA70);
  }
  return result;
}

uint64_t AssetRegistryShouldVerifyValidity.init(from:jsonDecoder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;

  v14 = a4;
  v7 = *(_QWORD *)(a2 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)MEMORY[0x1AF454348](v8);
  sub_1AE54F528();
  objc_autoreleasePoolPop(v11);
  if (!v4)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v14, v10, a2);
    (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  }
  swift_release();
  return sub_1AE4FFCB4();
}

void AssetRegistryShouldVerifyValidity.encodeToJsonData(jsonEncoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  if (!v3)
  {
    v5 = (void *)MEMORY[0x1AF454348](v4);
    sub_1AE54F550(&v6);
    objc_autoreleasePoolPop(v5);
  }
}

uint64_t sub_1AE54F528()
{
  return sub_1AE9243A8();
}

uint64_t sub_1AE54F550@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1AE9243F0();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t dispatch thunk of AssetRegistryShouldVerifyValidity.verifyValidity()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

void sub_1AE54F5A4()
{
  sub_1AE500978();
  sub_1AE4F66CC();
  sub_1AE515588();
  sub_1AE4F9038();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54F5D4()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54F664()
{
  sub_1AE500978();
  sub_1AE4F66CC();
  sub_1AE515588();
  sub_1AE4F9038();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54F694(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E80C4);
}

void sub_1AE54F6A8()
{
  sub_1AE500978();
  sub_1AE4F6694();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54F6D0(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E8300);
}

void sub_1AE54F6DC(uint64_t a1, unsigned __int8 a2)
{
  sub_1AE550118(a1, a2, (void (*)(_QWORD))MEMORY[0x1E0DEDF10]);
}

void sub_1AE54F6E8()
{
  sub_1AE500978();
  Features.FeatureFlag.feature.getter();
  sub_1AE926940();
  sub_1AE500980();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54F734()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54F788(uint64_t a1, uint64_t a2)
{
  sub_1AE54FCA8(a1, a2, (void (*)(uint64_t))PersonalKnowledgeToolResultAttributeSemanticType.rawValue.getter);
}

void sub_1AE54F794(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E8460);
}

void sub_1AE54F7A0(uint64_t a1, uint64_t a2)
{
  sub_1AE54FCA8(a1, a2, (void (*)(uint64_t))KGQ.Keyword.rawValue.getter);
}

void sub_1AE54F7AC(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E84F4);
}

void sub_1AE54F7B8(uint64_t a1, uint64_t a2)
{
  sub_1AE54FFF4(a1, a2, (void (*)(uint64_t))sub_1AE7911F0);
}

void sub_1AE54F7C4()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54F828(uint64_t a1, uint64_t a2)
{
  sub_1AE54FFF4(a1, a2, (void (*)(uint64_t))sub_1AE7C2EC8);
}

void sub_1AE54F834(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E8624);
}

void sub_1AE54F844()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54F8BC()
{
  sub_1AE500978();
  sub_1AE926ED4();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54F8EC()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54F96C()
{
  sub_1AE926EC8();
  sub_1AE514FC0();
  sub_1AE925D34();
  sub_1AE926F10();
  sub_1AE4F6650();
}

void sub_1AE54F9B4()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54FA18()
{
  sub_1AE500978();
  sub_1AE925F14();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54FA4C()
{
  sub_1AE500978();
  sub_1AE4FB75C();
  sub_1AE500980();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54FA88()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54FAF4(uint64_t a1, uint64_t a2)
{
  sub_1AE54FFF4(a1, a2, (void (*)(uint64_t))sub_1AE800E1C);
}

void sub_1AE54FB00(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E8934);
}

void sub_1AE54FB0C()
{
  sub_1AE500978();
  sub_1AE500980();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54FB6C(uint64_t a1, unsigned __int8 a2)
{
  sub_1AE550118(a1, a2, (void (*)(_QWORD))MEMORY[0x1E0DEDF30]);
}

void sub_1AE54FB78(uint64_t a1, uint64_t a2)
{
  sub_1AE54FFF4(a1, a2, (void (*)(uint64_t))sub_1AE66803C);
}

void sub_1AE54FB84(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E8A30);
}

void sub_1AE54FB90()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54FBF4(uint64_t a1, uint64_t a2)
{
  sub_1AE54FCA8(a1, a2, (void (*)(uint64_t))PersonEntityTagType.rawValue.getter);
}

void sub_1AE54FC00()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54FC84(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E8240);
}

void sub_1AE54FC90(uint64_t a1, uint64_t a2)
{
  sub_1AE54FFF4(a1, a2, (void (*)(uint64_t))sub_1AE618890);
}

void sub_1AE54FC9C(uint64_t a1, uint64_t a2)
{
  sub_1AE54FCA8(a1, a2, (void (*)(uint64_t))UserInterestsType.rawValue.getter);
}

void sub_1AE54FCA8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = sub_1AE500978();
  a3(v4);
  sub_1AE500980();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54FCF4()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54FD64()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54FDC0(uint64_t a1, uint64_t a2)
{
  sub_1AE54FFF4(a1, a2, (void (*)(uint64_t))sub_1AE5D1C78);
}

void sub_1AE54FDCC()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54FE28(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E8D9C);
}

void sub_1AE54FE34(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E8E98);
}

void sub_1AE54FE44(uint64_t a1, uint64_t a2)
{
  sub_1AE54FFF4(a1, a2, (void (*)(uint64_t))sub_1AE7FEA68);
}

void sub_1AE54FE50(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E8FE4);
}

void sub_1AE54FE5C()
{
  sub_1AE500978();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54FEB4(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E90B4);
}

void sub_1AE54FEC0(uint64_t a1, uint64_t a2)
{
  sub_1AE54FFF4(a1, a2, (void (*)(uint64_t))sub_1AE83D6B0);
}

void sub_1AE54FECC()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54FF4C(uint64_t a1, uint64_t a2)
{
  sub_1AE54FFF4(a1, a2, (void (*)(uint64_t))sub_1AE7FF408);
}

void sub_1AE54FF58()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE54FFD0(uint64_t a1, uint64_t a2)
{
  sub_1AE54FFF4(a1, a2, (void (*)(uint64_t))sub_1AE5E2020);
}

void sub_1AE54FFDC(uint64_t a1, uint64_t a2)
{
  sub_1AE54FFF4(a1, a2, (void (*)(uint64_t))sub_1AE5E1F5C);
}

void sub_1AE54FFE8(uint64_t a1, uint64_t a2)
{
  sub_1AE54FFF4(a1, a2, (void (*)(uint64_t))sub_1AE575500);
}

void sub_1AE54FFF4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_1AE500978();
  a3(a2);
  sub_1AE500980();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE55003C()
{
  sub_1AE500978();
  sub_1AE5019F0();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE5500CC(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E9488);
}

void sub_1AE5500D8(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E954C);
}

void sub_1AE5500E4(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E95C8);
}

void sub_1AE5500F0()
{
  sub_1AE500978();
  sub_1AE563D58();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE550118(uint64_t a1, unsigned __int8 a2, void (*a3)(_QWORD))
{
  sub_1AE500978();
  a3(a2);
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE55014C(uint64_t a1, uint64_t a2)
{
  sub_1AE550158(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1AE5E9698);
}

void sub_1AE550158(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t))
{
  _BYTE v5[72];

  sub_1AE500978();
  a3(v5, a2);
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE55018C()
{
  sub_1AE500978();
  sub_1AE926EEC();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

uint64_t sub_1AE5501BC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE550230()
{
  return 1701667182;
}

void sub_1AE550240()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  sub_1AE4F67EC();
  v1 = v0;
  sub_1AE501548(&qword_1EED9BCC8);
  sub_1AE5635D8();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F90F4();
  sub_1AE4F9858(v1, v1[3]);
  sub_1AE562E3C();
  sub_1AE563CF8();
  sub_1AE926F4C();
  sub_1AE926C88();
  sub_1AE4F777C();
  sub_1AE506FAC();
  sub_1AE4F667C();
}

uint64_t sub_1AE5502E4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1AE501548(&qword_1EED9BCD8);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F6744();
  v4 = (uint64_t)sub_1AE4F9858(a1, a1[3]);
  sub_1AE562E3C();
  sub_1AE926F34();
  if (!v1)
  {
    v4 = sub_1AE926BB0();
    sub_1AE509858();
  }
  sub_1AE4F90EC();
  return v4;
}

uint64_t sub_1AE5503CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5501BC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE5503F4()
{
  sub_1AE562E3C();
  return sub_1AE926F94();
}

uint64_t sub_1AE55041C()
{
  sub_1AE562E3C();
  return sub_1AE926FA0();
}

uint64_t sub_1AE550448@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1AE5502E4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_1AE550470()
{
  sub_1AE550240();
}

id sub_1AE550488()
{
  objc_class *v0;
  char *v1;
  char *v2;
  id result;
  objc_super v4;

  v0 = (objc_class *)type metadata accessor for AutonamingViewIdentifierType();
  v1 = (char *)objc_allocWithZone(v0);
  v2 = &v1[OBJC_IVAR___GDAutonamingViewIdentifierTypeInner_data];
  *(_QWORD *)v2 = 0x6E6F737265504850;
  *((_QWORD *)v2 + 1) = 0xE800000000000000;
  v4.receiver = v1;
  v4.super_class = v0;
  result = objc_msgSendSuper2(&v4, sel_init);
  qword_1EED9BA78 = (uint64_t)result;
  return result;
}

id static AutonamingViewIdentifierType.phPerson.getter()
{
  if (qword_1EED996C0 != -1)
    swift_once();
  return (id)qword_1EED9BA78;
}

void AutonamingViewIdentifierType.init()()
{
  sub_1AE4FE99C();
  __break(1u);
}

uint64_t sub_1AE550578(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE5505EC()
{
  return 1635017060;
}

uint64_t sub_1AE550600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE550578(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE550628()
{
  sub_1AE550780();
  return sub_1AE926F94();
}

uint64_t sub_1AE550650()
{
  sub_1AE550780();
  return sub_1AE926FA0();
}

id AutonamingViewIdentifierType.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for AutonamingViewIdentifierType);
}

uint64_t type metadata accessor for AutonamingViewIdentifierType()
{
  return objc_opt_self();
}

void sub_1AE5506B8(_QWORD *a1)
{
  uint64_t v2;

  sub_1AE501548(&qword_1EED9BA80);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE550780();
  sub_1AE5638F8();
  sub_1AE5507BC();
  sub_1AE563BD0();
  sub_1AE509858();
  sub_1AE4FCE34();
}

unint64_t sub_1AE550780()
{
  unint64_t result;

  result = qword_1EED9BA88;
  if (!qword_1EED9BA88)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE938BFC, &type metadata for AutonamingViewIdentifierType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED9BA88);
  }
  return result;
}

unint64_t sub_1AE5507BC()
{
  unint64_t result;

  result = qword_1EED9BA98;
  if (!qword_1EED9BA98)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE938BD4, &unk_1E5DC09C0);
    atomic_store(result, (unint64_t *)&qword_1EED9BA98);
  }
  return result;
}

void AutonamingViewIdentifierType.__allocating_init(from:)()
{
  sub_1AE508160();
  AutonamingViewIdentifierType.init(from:)();
  sub_1AE4FC4F8();
}

void AutonamingViewIdentifierType.init(from:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  objc_super v8;
  uint64_t v9;
  uint64_t v10;

  sub_1AE4F67EC();
  v7 = sub_1AE501548(&qword_1EED9BAA0);
  v3 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F6744();
  sub_1AE563B98();
  sub_1AE550780();
  v4 = v0;
  sub_1AE4F680C();
  if (v1)
  {

    sub_1AE4F90EC();
    type metadata accessor for AutonamingViewIdentifierType();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1AE55097C();
    sub_1AE926BEC();
    v5 = v10;
    v6 = &v4[OBJC_IVAR___GDAutonamingViewIdentifierTypeInner_data];
    *(_QWORD *)v6 = v9;
    *((_QWORD *)v6 + 1) = v5;

    v8.receiver = v4;
    v8.super_class = (Class)type metadata accessor for AutonamingViewIdentifierType();
    objc_msgSendSuper2(&v8, sel_init);
    sub_1AE4FB7D0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_1AE4F90EC();
  }
  sub_1AE4F667C();
}

unint64_t sub_1AE55097C()
{
  unint64_t result;

  result = qword_1EED9BAA8;
  if (!qword_1EED9BAA8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE938BAC, &unk_1E5DC09C0);
    atomic_store(result, (unint64_t *)&qword_1EED9BAA8);
  }
  return result;
}

uint64_t sub_1AE5509B8()
{
  swift_bridgeObjectRetain();
  sub_1AE500980();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE5509FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return _sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  else
    return sub_1AE926D60();
}

void sub_1AE550A14()
{
  sub_1AE4F76E0();
  sub_1AE4FB75C();
  sub_1AE500980();
  sub_1AE4F6648();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void sub_1AE550A50(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  AutonamingViewIdentifierType.__allocating_init(from:)();
  if (!v1)
    *a1 = v3;
}

void sub_1AE550A78(_QWORD *a1)
{
  sub_1AE5506B8(a1);
}

void sub_1AE550A98()
{
  sub_1AE550A14();
}

uint64_t sub_1AE550AB0()
{
  return sub_1AE5509B8();
}

void sub_1AE550AC8()
{
  sub_1AE500978();
  sub_1AE4F66CC();
  sub_1AE515588();
  sub_1AE4F9038();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

uint64_t sub_1AE550AF8(uint64_t *a1, uint64_t *a2)
{
  return sub_1AE5509FC(*a1, a1[1], *a2, a2[1]) & 1;
}

id AutonamingView.__allocating_init(subgraph:isForLiveServing:)(uint64_t a1, char a2)
{
  sub_1AE508160();
  return AutonamingView.init(subgraph:isForLiveServing:)(a1, a2);
}

id AutonamingView.init(subgraph:isForLiveServing:)(uint64_t a1, char a2)
{
  char *v2;
  char *v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v2[OBJC_IVAR___GDAutonamingViewInner_subgraph] = a1;
  sub_1AE501548((uint64_t *)&unk_1ED318930);
  swift_allocObject();
  swift_retain_n();
  v5 = v2;
  *(_QWORD *)&v5[OBJC_IVAR___GDAutonamingViewInner_context] = sub_1AE527CC8(a1);
  *(_QWORD *)&v5[OBJC_IVAR___GDAutonamingViewInner_feedbackService] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedbackService()), sel_init);
  *(_QWORD *)&v5[OBJC_IVAR___GDAutonamingViewInner_rejectedIdentifiers] = MEMORY[0x1E0DEE9E8];
  v5[OBJC_IVAR___GDAutonamingViewInner_isForLiveServing] = a2;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for AutonamingView();
  v6 = objc_msgSendSuper2(&v8, sel_init);
  swift_release();
  return v6;
}

void sub_1AE550C64()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_signpost_type_t v31;
  uint8_t *v32;
  os_signpost_id_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;

  sub_1AE4F67EC();
  v55 = v7;
  v56 = v0;
  v54 = v8;
  v45 = v9;
  v10 = sub_1AE925AE8();
  v52 = *(_QWORD *)(v10 - 8);
  v53 = v10;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE507918();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v44 - v13;
  v15 = sub_1AE4F6854();
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F90F4();
  v17 = sub_1AE925B0C();
  v50 = *(_QWORD *)(v17 - 8);
  v51 = v17;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F683C();
  v49 = type metadata accessor for LogSignpost();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE50688C();
  v20 = sub_1AE9248DC();
  v47 = *(_QWORD *)(v20 - 8);
  v48 = v20;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v21);
  sub_1AE4F666C();
  v24 = (char *)(v23 - v22);
  sub_1AE501548(&qword_1EED9BAD8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v25);
  sub_1AE4F666C();
  v28 = v27 - v26;
  v44 = type metadata accessor for CustomGraphPerson(0);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v28, 1, 1, v44);
  v46 = v24;
  sub_1AE9248D0();
  if (qword_1ED31C728 != -1)
    swift_once();
  v29 = sub_1AE4FB608(v15, (uint64_t)qword_1ED31C710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v29, v15);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v30 = sub_1AE925B00();
  v31 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v32 = 0;
    v33 = sub_1AE925AD0();
    _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v30, v31, v33, "ViewEngine.Serving.AutonamingView.PersonLookup", "", v32, 2u);
    sub_1AE4F9064();
  }

  v35 = v52;
  v34 = v53;
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v3, v14, v53);
  sub_1AE925B3C();
  swift_allocObject();
  v36 = sub_1AE925B30();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v34);
  *(_QWORD *)v5 = "ViewEngine.Serving.AutonamingView.PersonLookup";
  *(_QWORD *)(v5 + 8) = 46;
  *(_BYTE *)(v5 + 16) = 2;
  *(_QWORD *)(v5 + 24) = v36;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v5 + *(int *)(v49 + 24), v2, v51);
  v37 = v56;
  v38 = (uint64_t *)(v56 + OBJC_IVAR___GDAutonamingViewInner_rejectedIdentifiers);
  swift_beginAccess();
  v39 = *v38;
  sub_1AE4FB75C();
  v40 = v55;
  sub_1AE4FB764();
  v41 = v54;
  LOBYTE(v36) = sub_1AE551AC8(v54, v40, v39);
  swift_bridgeObjectRelease();
  sub_1AE4F6648();
  if ((v36 & 1) != 0)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v45, 1, 1, v44);
  }
  else
  {
    ObjectType = swift_getObjectType();
    MEMORY[0x1E0C80A78](ObjectType);
    *(&v44 - 4) = v37;
    *(&v44 - 3) = v41;
    *(&v44 - 2) = v40;
    *(&v44 - 1) = v28;
    swift_unknownObjectRetain();
    sub_1AE924CC0();
    swift_unknownObjectRelease();
    if (!v1)
      sub_1AE555BD8(v28, v45);
  }
  v43 = v46;
  sub_1AE55107C(v28, v46, v37, v5);
  sub_1AE555C64(v5, (uint64_t (*)(_QWORD))type metadata accessor for LogSignpost);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v48);
  sub_1AE524534(v28, &qword_1EED9BAD8);
  sub_1AE506FAC();
  sub_1AE4F667C();
}

uint64_t sub_1AE55107C(uint64_t a1, char *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  GDGraphPerson *v28;
  void *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char v47;
  NSObject *v48;
  char *v49;
  uint64_t result;
  char *v51;
  char *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  uint8_t *v57;
  os_signpost_id_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char v74;

  v67 = a3;
  v68 = a4;
  v70 = a2;
  v5 = sub_1AE925B18();
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  MEMORY[0x1E0C80A78](v5);
  v62 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1AE925AE8();
  v64 = *(_QWORD *)(v7 - 8);
  v65 = v7;
  MEMORY[0x1E0C80A78](v7);
  v69 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE925B0C();
  v72 = *(_QWORD *)(v9 - 8);
  v73 = v9;
  MEMORY[0x1E0C80A78](v9);
  v71 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1AE9248DC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v59 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v59 - v19;
  v21 = type metadata accessor for CustomGraphPerson(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1AE501548(&qword_1EED9BAD8);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE555BD8(a1, (uint64_t)v26);
  v27 = 0;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v26, 1, v21) != 1)
  {
    sub_1AE555C20((uint64_t)v26, (uint64_t)v23);
    CustomGraphPerson.toObjectiveCGraphObject()(v28);
    v27 = v29;
    sub_1AE555C64((uint64_t)v23, type metadata accessor for CustomGraphPerson);
  }
  sub_1AE9248D0();
  v66 = type metadata accessor for Analytics();
  v30 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v30(v18, v70, v11);
  v30(v15, v20, v11);
  v31 = *(unsigned __int8 *)(v12 + 80);
  v32 = (v31 + 16) & ~v31;
  v70 = v20;
  v33 = v12;
  v34 = (v13 + v31 + v32) & ~v31;
  v35 = (v13 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = swift_allocObject();
  v37 = v36 + v32;
  v63 = v33;
  v38 = *(void (**)(uint64_t, char *, uint64_t))(v33 + 32);
  v38(v37, v18, v11);
  v38(v36 + v34, v15, v11);
  *(_QWORD *)(v36 + v35) = v27;
  v39 = (void *)v67;
  *(_QWORD *)(v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8)) = v67;
  v40 = v27;
  v41 = v39;
  static Analytics.sendEventForProductionLazy(eventName:eventPayloadBuilder:)(0xD00000000000002ELL, 0x80000001AE97CDA0, (uint64_t)sub_1AE5630C8, v36);
  swift_release();
  v42 = type metadata accessor for LogSignpost();
  v43 = v68;
  v45 = v71;
  v44 = v72;
  v46 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v71, v68 + *(int *)(v42 + 24), v73);
  v67 = *(_QWORD *)v43;
  v47 = *(_BYTE *)(v43 + 16);
  swift_retain();
  v48 = sub_1AE925B00();
  v49 = v69;
  sub_1AE925B24();
  LODWORD(v68) = sub_1AE926664();
  result = sub_1AE926700();
  v51 = v70;
  if ((result & 1) == 0)
    goto LABEL_15;
  v66 = v11;
  if ((v47 & 1) == 0)
  {
    v52 = v62;
    v53 = (const char *)v67;
    if (v67)
    {
      v54 = v60;
      v55 = v61;
LABEL_11:
      swift_retain();
      sub_1AE925B48();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v54 + 88))(v52, v55) == *MEMORY[0x1E0DF2190])
      {
        v56 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v55);
        v56 = "";
      }
      v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v57 = 0;
      v58 = sub_1AE925AD0();
      _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v48, (os_signpost_type_t)v68, v58, v53, v56, v57, 2u);
      MEMORY[0x1AF454C78](v57, -1, -1);
      v44 = v72;
      v46 = v73;
      v51 = v70;
      v45 = v71;
      v11 = v66;
LABEL_15:
      swift_release();

      (*(void (**)(char *, uint64_t))(v64 + 8))(v49, v65);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v51, v11);
    }
    __break(1u);
    goto LABEL_17;
  }
  v52 = v62;
  if (HIDWORD(v67))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v67 >> 11 != 27)
  {
    v54 = v60;
    v55 = v61;
    if (WORD1(v67) <= 0x10u)
    {
      v53 = &v74;
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

void sub_1AE551588(uint64_t a1, uint64_t a2)
{
  sub_1AE5521AC(a1, a2, (void (*)(uint64_t))MEMORY[0x1E0DEDF30]);
}

void sub_1AE551594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  char v18;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1AE500978();
    sub_1AE500980();
    v6 = sub_1AE4F905C();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    sub_1AE4FDA44();
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (sub_1AE4FB6F0() & 1) == 0)
      {
        v13 = ~v7;
        v14 = (v8 + 1) & v13;
        sub_1AE4FDA44();
        if ((v15 & 1) != 0)
        {
          do
          {
            v16 = (_QWORD *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2)
              break;
            if ((sub_1AE4FB6F0() & 1) != 0)
              break;
            v14 = (v14 + 1) & v13;
            sub_1AE4FDA44();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
  sub_1AE4FE988();
}

void sub_1AE551680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;

  sub_1AE505CD4();
  a31 = v32;
  a32 = v35;
  if (*(_QWORD *)(v34 + 16)
    && (v36 = v34,
        v37 = v33,
        sub_1AE563880(),
        sub_1AE5E80C4((uint64_t)&a12, v37),
        v38 = sub_1AE563878() & ~(-1 << *(_BYTE *)(v36 + 32)),
        ((*(_QWORD *)(v36 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) != 0))
  {
    ((void (*)(uint64_t))((char *)&loc_1AE55174C
                                  + 4 * byte_1AE937FD0[*(unsigned __int8 *)(*(_QWORD *)(v36 + 48) + v38)]))(1701736302);
  }
  else
  {
    sub_1AE4F778C();
  }
}

void sub_1AE5518E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  char v18;

  sub_1AE5635C0();
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = v1;
    v3 = v0;
    sub_1AE500978();
    v4 = *v3;
    v5 = v3[1];
    sub_1AE4F66C4();
    sub_1AE4FC630();
    sub_1AE4F665C();
    v6 = sub_1AE4F905C();
    v7 = -1 << *(_BYTE *)(v2 + 32);
    v8 = v6 & ~v7;
    sub_1AE4FDA44();
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(v2 + 48);
      v11 = (_QWORD *)(v10 + 40 * v8);
      if ((*v11 != v4 || v11[1] != v5) && (sub_1AE4FB6F0() & 1) == 0)
      {
        v13 = ~v7;
        v14 = (v8 + 1) & v13;
        sub_1AE4FDA44();
        if ((v15 & 1) != 0)
        {
          do
          {
            v16 = (_QWORD *)(v10 + 40 * v14);
            if (*v16 == v4 && v16[1] == v5)
              break;
            if ((sub_1AE4FB6F0() & 1) != 0)
              break;
            v14 = (v14 + 1) & v13;
            sub_1AE4FDA44();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
  sub_1AE505FA4();
}

void sub_1AE5519D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v18;

  sub_1AE5635C0();
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = v1;
    v3 = v0;
    sub_1AE500978();
    v4 = *(_QWORD *)(v3 + 16);
    v5 = *(_QWORD *)(v3 + 24);
    sub_1AE4F66C4();
    sub_1AE4FC630();
    sub_1AE4F665C();
    v6 = sub_1AE4F905C();
    v7 = -1 << *(_BYTE *)(v2 + 32);
    v8 = v6 & ~v7;
    sub_1AE4FDA44();
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(v2 + 48);
      v11 = v10 + 40 * v8;
      if ((*(_QWORD *)(v11 + 16) != v4 || *(_QWORD *)(v11 + 24) != v5) && (sub_1AE4FB6F0() & 1) == 0)
      {
        v13 = ~v7;
        v14 = (v8 + 1) & v13;
        sub_1AE4FDA44();
        if ((v15 & 1) != 0)
        {
          do
          {
            v16 = v10 + 40 * v14;
            if (*(_QWORD *)(v16 + 16) == v4 && *(_QWORD *)(v16 + 24) == v5)
              break;
            if ((sub_1AE4FB6F0() & 1) != 0)
              break;
            v14 = (v14 + 1) & v13;
            sub_1AE4FDA44();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
  sub_1AE505FA4();
}

uint64_t sub_1AE551AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1AE926EC8();
    swift_bridgeObjectRetain();
    sub_1AE925F14();
    swift_bridgeObjectRelease();
    v6 = sub_1AE926F10();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1AE926D60() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1AE926D60() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

void sub_1AE551C0C(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  if (*(_QWORD *)(a2 + 16))
  {
    v3 = a1;
    sub_1AE500978();
    sub_1AE4F6694();
    sub_1AE4F905C();
    sub_1AE56342C();
    if ((v5 & 1) != 0 && *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v4) != v3)
    {
      sub_1AE4FC5E8();
      if ((v8 & 1) != 0)
      {
        do
        {
          if (*(unsigned __int8 *)(v6 + v7) == v3)
            break;
          sub_1AE4FC5E8();
        }
        while ((v9 & 1) != 0);
      }
    }
  }
  sub_1AE4F685C();
}

void sub_1AE551C94(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  char v5;
  char v6;

  if (*(_QWORD *)(a2 + 16))
  {
    v3 = sub_1AE926EBC() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    {
      sub_1AE563EBC();
      if (!v4)
      {
        sub_1AE4FC5E8();
        if ((v5 & 1) != 0)
        {
          do
          {
            sub_1AE563EBC();
            if (v4)
              break;
            sub_1AE4FC5E8();
          }
          while ((v6 & 1) != 0);
        }
      }
    }
  }
}

uint64_t sub_1AE551D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1AE54FCA8(*(_QWORD *)(a2 + 40), a1, (void (*)(uint64_t))PersonEntityTagType.rawValue.getter);
    sub_1AE563C70();
    if (((*(_QWORD *)(a2 + 56 + (((v3 & (unint64_t)~v4) >> 3) & 0xFFFFFFFFFFFFF8)) >> (v3 & ~(_BYTE)v4)) & 1) != 0)
    {
      sub_1AE563C8C();
      __asm { BR              X9 }
    }
  }
  return 0;
}

void sub_1AE5521A0(uint64_t a1, uint64_t a2)
{
  sub_1AE5521AC(a1, a2, (void (*)(uint64_t))MEMORY[0x1E0DEDF10]);
}

void sub_1AE5521AC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  char v5;
  char v6;
  char v7;
  char v8;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1AE500978();
    a3(a1);
    sub_1AE4F905C();
    sub_1AE56342C();
    if ((v5 & 1) != 0)
    {
      sub_1AE563EBC();
      if (!v6)
      {
        sub_1AE4FC5E8();
        if ((v7 & 1) != 0)
        {
          do
          {
            sub_1AE563EBC();
            if (v6)
              break;
            sub_1AE4FC5E8();
          }
          while ((v8 & 1) != 0);
        }
      }
    }
  }
  sub_1AE4F685C();
}

void sub_1AE552238(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[3];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  __int128 v47;
  void (*v48)(char *, uint64_t);
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;

  v48 = a3;
  v9 = sub_1AE501548(&qword_1EED9BAD8);
  MEMORY[0x1E0C80A78](v9);
  v41 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for CustomGraphPerson(0);
  MEMORY[0x1E0C80A78](v45);
  v49 = (_QWORD *)((char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v50 = sub_1AE924FCC();
  v12 = *(_QWORD *)(v50 - 8);
  v13 = MEMORY[0x1E0C80A78](v50);
  v43 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v39 - v15;
  *(_QWORD *)&v47 = sub_1AE92526C();
  *(_QWORD *)&v52 = 0;
  *((_QWORD *)&v52 + 1) = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  v44 = a2;
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  v42 = sub_1AE501548((uint64_t *)&unk_1ED30FD78);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1AE933BD0;
  v18 = v17;
  v46 = v12;
  v40 = a5;
  sub_1AE5C6870(0xC9uLL, (uint64_t)&v52);
  v19 = v52;
  swift_bridgeObjectRelease();
  v20 = MEMORY[0x1E0DEA968];
  v21 = MEMORY[0x1E0D24968];
  *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v18 + 64) = v21;
  *(_OWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 96) = v20;
  *(_QWORD *)(v18 + 104) = v21;
  *(_QWORD *)(v18 + 72) = v48;
  *(_QWORD *)(v18 + 80) = a4;
  swift_bridgeObjectRetain();
  sub_1AE924FB4();
  v54 = 0;
  v52 = 0u;
  v53 = 0u;
  v22 = sub_1AE925224();
  if (v5)
  {
    swift_bridgeObjectRelease();
    sub_1AE524534((uint64_t)&v52, &qword_1EED94840);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v50);
  }
  else
  {
    v23 = v22;
    swift_bridgeObjectRelease();
    sub_1AE524534((uint64_t)&v52, &qword_1EED94840);
    v24 = *(void (**)(char *, uint64_t))(v46 + 8);
    v24(v16, v50);
    v25 = OBJC_IVAR___GDAutonamingViewInner_context;
    v26 = v23;
    v27 = sub_1AE88E954();
    v47 = xmmword_1AE934250;
    v46 = 0xD000000000000030;
    v39[2] = 0x80000001AE97D1F0;
    v28 = (uint64_t)v41;
    v48 = v24;
    v39[1] = v25;
    v29 = MEMORY[0x1E0D24968];
    while (1)
    {
      if (!v27)
        goto LABEL_4;
      sub_1AE848938((uint64_t)&v52);
      if ((BYTE8(v52) & 1) != 0)
      {
        swift_release();
LABEL_4:
        swift_release();
        return;
      }
      sub_1AE676E64(v52, &v52);
      swift_retain();
      sub_1AE8678D4();
      swift_release();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v28, 1, v45) == 1)
      {
        swift_release();
        swift_release();
        sub_1AE524534(v28, &qword_1EED9BAD8);
        return;
      }
      v30 = v26;
      v31 = v49;
      sub_1AE555C20(v28, (uint64_t)v49);
      v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v47;
      v33 = *v31;
      v34 = (*v31 & 0x80000000000000) != 0 ? 3826797 : 3828069;
      *(_QWORD *)&v52 = v34;
      *((_QWORD *)&v52 + 1) = 0xE300000000000000;
      v55 = v33;
      sub_1AE926D18();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      v35 = v52;
      *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v32 + 64) = v29;
      *(_OWORD *)(v32 + 32) = v35;
      v36 = v43;
      sub_1AE924FB4();
      v54 = 0;
      v52 = 0u;
      v53 = 0u;
      sub_1AE925110();
      swift_release();
      sub_1AE524534((uint64_t)&v52, &qword_1EED94840);
      v48(v36, v50);
      v37 = v51;
      swift_bridgeObjectRelease();
      if (!v37)
        break;
      sub_1AE555C64((uint64_t)v49, type metadata accessor for CustomGraphPerson);
      v26 = v30;
      v27 = sub_1AE88E954();
    }
    swift_release();
    v38 = v40;
    sub_1AE524534(v40, &qword_1EED9BAD8);
    sub_1AE555C20((uint64_t)v49, v38);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v38, 0, 1, v45);
  }
}

uint64_t sub_1AE5528C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  GDGraphPerson *v11;
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for CustomGraphPerson(0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F666C();
  v5 = v4 - v3;
  sub_1AE501548(&qword_1EED9BAD8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE507918();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  sub_1AE550C64();
  sub_1AE555BD8((uint64_t)v9, v0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v0, 1, v1) == 1)
  {
    v10 = 0;
  }
  else
  {
    sub_1AE555C20(v0, v5);
    CustomGraphPerson.toObjectiveCGraphObject()(v11);
    v10 = v12;
    sub_1AE555C64(v5, type metadata accessor for CustomGraphPerson);
  }
  sub_1AE524534((uint64_t)v9, &qword_1EED9BAD8);
  return v10;
}

uint64_t sub_1AE552B98()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for AutonamingViewFeedback();
  v1 = sub_1AE563378();
  *(_QWORD *)(v1 + 16) = 1;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_QWORD *)(v1 + 56) = 0;
  *(_BYTE *)(v1 + 64) = 2;
  sub_1AE5085F0((void *)v1);
  if (v0)
    sub_1AE4F6834();
  return swift_release();
}

void AutonamingViewFeedback.__allocating_init(feedback:)(uint64_t a1)
{
  uint64_t v2;
  char v3;
  __int128 v4;

  v2 = sub_1AE563378();
  v3 = *(_BYTE *)(a1 + 48);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v2 + 64) = v3;
  sub_1AE4F6664();
}

void sub_1AE552C40(void *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  unsigned __int8 v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35[2];

  LODWORD(v34) = a3;
  v35[1] = *(id *)MEMORY[0x1E0C80C00];
  v7 = sub_1AE9248DC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35[0] = a1;
  type metadata accessor for AutonamingViewFeedback();
  sub_1AE562F54(&qword_1EED94AB8, v11, (uint64_t (*)(uint64_t))type metadata accessor for AutonamingViewFeedback, (uint64_t)&protocol conformance descriptor for AutonamingViewFeedback);
  v12 = sub_1AE924618();
  if (v4)
  {
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v14 = sub_1AE925B6C();
    sub_1AE4FB608(v14, (uint64_t)qword_1ED31BC90);
    v15 = v4;
    v16 = v4;
    v17 = sub_1AE925B54();
    v18 = sub_1AE9265EC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v19 = 138412290;
      v21 = v4;
      v22 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v35[0] = v22;
      sub_1AE92676C();
      *v20 = v22;

      _os_log_impl(&dword_1AE4F2000, v17, v18, "Failed to encode Feedback: %@", v19, 0xCu);
      sub_1AE501548(&qword_1ED319410);
      swift_arrayDestroy();
      MEMORY[0x1AF454C78](v20, -1, -1);
      MEMORY[0x1AF454C78](v19, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v23 = v12;
    v24 = v13;
    v33 = *(id *)(v3 + OBJC_IVAR___GDFeedbackServiceInner_server);
    sub_1AE54C814(v12, v13);
    v25 = (void *)sub_1AE92481C();
    sub_1AE50BDB4(v23, v24);
    v26 = sub_1AE925E18();
    v27 = a2;
    v28 = (void *)v26;
    if ((v34 & 1) != 0)
      v27 = 0;
    v34 = v27;
    sub_1AE9248AC();
    v29 = (void *)sub_1AE92487C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v35[0] = 0;
    v30 = objc_msgSend(v33, sel_logWithFeedbackData_type_variant_eventId_withTimestamp_shouldProcessImmediately_error_, v25, v28, 0, v34, v29, 1, v35);

    v31 = v35[0];
    if ((v30 & 1) == 0)
    {
      v32 = v31;
      sub_1AE9246B4();

      swift_willThrow();
    }
    sub_1AE50BDB4(v23, v24);
  }
}

void sub_1AE552FD8()
{
  void *v0;
  uint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  os_log_type_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  sub_1AE4F67EC();
  sub_1AE50651C(v5, v6, v7);
  sub_1AE56355C(*MEMORY[0x1E0C80C00]);
  sub_1AE5633E4();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F910C();
  sub_1AE56371C();
  type metadata accessor for EntityResolutionRankingStatefulFeedback();
  sub_1AE563B48(&qword_1EED9BD30, v9, (uint64_t (*)(uint64_t))type metadata accessor for EntityResolutionRankingStatefulFeedback, (uint64_t)&protocol conformance descriptor for EntityResolutionRankingStatefulFeedback);
  sub_1AE563384();
  if (v1)
  {
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v10 = sub_1AE4F6854();
    v11 = (void *)sub_1AE4FB608(v10, (uint64_t)qword_1ED31BC90);
    sub_1AE4FCEFC();
    sub_1AE4FCEFC();
    sub_1AE925B54();
    v12 = sub_1AE4FCF04();
    if (sub_1AE4FB89C(v12))
    {
      sub_1AE5633A8();
      v13 = (_QWORD *)sub_1AE5633D4();
      sub_1AE563358(5.7779e-34);
      v14 = sub_1AE563C28();
      sub_1AE563314(v14);
      *v13 = v4;
      sub_1AE4F916C();
      sub_1AE4F916C();
      sub_1AE563344(&dword_1AE4F2000, v15, v16, "Failed to encode Feedback: %@");
      sub_1AE501548(&qword_1ED319410);
      sub_1AE50A974();
      sub_1AE4F9064();
    }
    sub_1AE4F916C();
    sub_1AE4F916C();
    sub_1AE4F916C();

  }
  else
  {
    sub_1AE563E00();
    sub_1AE563530(v17, v18, OBJC_IVAR___GDFeedbackServiceInner_server);
    sub_1AE56350C();
    sub_1AE4FCEF0();
    sub_1AE4FDA58();
    sub_1AE563B08();
    sub_1AE5632F4();
    sub_1AE563AB8();
    v19 = sub_1AE506B88();
    sub_1AE50539C(v19, sel_logWithFeedbackData_type_variant_eventId_withTimestamp_shouldProcessImmediately_error_);
    sub_1AE563524();

    sub_1AE563A40();
    if ((v2 & 1) == 0)
    {
      sub_1AE5639D0();
      sub_1AE563950();
      sub_1AE506FEC();
    }
    sub_1AE4FCEF0();
  }
  sub_1AE506FAC();
  sub_1AE4F667C();
}

void sub_1AE5531CC()
{
  void *v0;
  uint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  os_log_type_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  sub_1AE4F67EC();
  sub_1AE50651C(v5, v6, v7);
  sub_1AE56355C(*MEMORY[0x1E0C80C00]);
  sub_1AE5633E4();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F910C();
  sub_1AE56371C();
  type metadata accessor for EntityResolutionRankingDirectFeedback();
  sub_1AE563B48(&qword_1EED9BD28, v9, (uint64_t (*)(uint64_t))type metadata accessor for EntityResolutionRankingDirectFeedback, (uint64_t)&protocol conformance descriptor for EntityResolutionRankingDirectFeedback);
  sub_1AE563384();
  if (v1)
  {
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v10 = sub_1AE4F6854();
    v11 = (void *)sub_1AE4FB608(v10, (uint64_t)qword_1ED31BC90);
    sub_1AE4FCEFC();
    sub_1AE4FCEFC();
    sub_1AE925B54();
    v12 = sub_1AE4FCF04();
    if (sub_1AE4FB89C(v12))
    {
      sub_1AE5633A8();
      v13 = (_QWORD *)sub_1AE5633D4();
      sub_1AE563358(5.7779e-34);
      v14 = sub_1AE563C28();
      sub_1AE563314(v14);
      *v13 = v4;
      sub_1AE4F916C();
      sub_1AE4F916C();
      sub_1AE563344(&dword_1AE4F2000, v15, v16, "Failed to encode Feedback: %@");
      sub_1AE501548(&qword_1ED319410);
      sub_1AE50A974();
      sub_1AE4F9064();
    }
    sub_1AE4F916C();
    sub_1AE4F916C();
    sub_1AE4F916C();

  }
  else
  {
    sub_1AE563E00();
    sub_1AE563530(v17, v18, OBJC_IVAR___GDFeedbackServiceInner_server);
    sub_1AE56350C();
    sub_1AE4FCEF0();
    sub_1AE4FDA58();
    sub_1AE563B08();
    sub_1AE5632F4();
    sub_1AE563AB8();
    v19 = sub_1AE506B88();
    sub_1AE50539C(v19, sel_logWithFeedbackData_type_variant_eventId_withTimestamp_shouldProcessImmediately_error_);
    sub_1AE563524();

    sub_1AE563A40();
    if ((v2 & 1) == 0)
    {
      sub_1AE5639D0();
      sub_1AE563950();
      sub_1AE506FEC();
    }
    sub_1AE4FCEF0();
  }
  sub_1AE506FAC();
  sub_1AE4F667C();
}

void sub_1AE5533C0()
{
  void *v0;
  uint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  os_log_type_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  sub_1AE4F67EC();
  sub_1AE50651C(v5, v6, v7);
  sub_1AE56355C(*MEMORY[0x1E0C80C00]);
  sub_1AE5633E4();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F910C();
  sub_1AE56371C();
  type metadata accessor for EntityTaggingDirectFeedback();
  sub_1AE563B48(&qword_1EED9BCE8, v9, (uint64_t (*)(uint64_t))type metadata accessor for EntityTaggingDirectFeedback, (uint64_t)&protocol conformance descriptor for EntityTaggingDirectFeedback);
  sub_1AE563384();
  if (v1)
  {
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v10 = sub_1AE4F6854();
    v11 = (void *)sub_1AE4FB608(v10, (uint64_t)qword_1ED31BC90);
    sub_1AE4FCEFC();
    sub_1AE4FCEFC();
    sub_1AE925B54();
    v12 = sub_1AE4FCF04();
    if (sub_1AE4FB89C(v12))
    {
      sub_1AE5633A8();
      v13 = (_QWORD *)sub_1AE5633D4();
      sub_1AE563358(5.7779e-34);
      v14 = sub_1AE563C28();
      sub_1AE563314(v14);
      *v13 = v4;
      sub_1AE4F916C();
      sub_1AE4F916C();
      sub_1AE563344(&dword_1AE4F2000, v15, v16, "Failed to encode Feedback: %@");
      sub_1AE501548(&qword_1ED319410);
      sub_1AE50A974();
      sub_1AE4F9064();
    }
    sub_1AE4F916C();
    sub_1AE4F916C();
    sub_1AE4F916C();

  }
  else
  {
    sub_1AE563E00();
    sub_1AE563530(v17, v18, OBJC_IVAR___GDFeedbackServiceInner_server);
    sub_1AE56350C();
    sub_1AE4FCEF0();
    sub_1AE4FDA58();
    sub_1AE563B08();
    sub_1AE5632F4();
    sub_1AE563AB8();
    v19 = sub_1AE506B88();
    sub_1AE50539C(v19, sel_logWithFeedbackData_type_variant_eventId_withTimestamp_shouldProcessImmediately_error_);
    sub_1AE563524();

    sub_1AE563A40();
    if ((v2 & 1) == 0)
    {
      sub_1AE5639D0();
      sub_1AE563950();
      sub_1AE506FEC();
    }
    sub_1AE4FCEF0();
  }
  sub_1AE506FAC();
  sub_1AE4F667C();
}

void sub_1AE5535B4()
{
  void *v0;
  uint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  os_log_type_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  sub_1AE4F67EC();
  sub_1AE50651C(v5, v6, v7);
  sub_1AE56355C(*MEMORY[0x1E0C80C00]);
  sub_1AE5633E4();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F910C();
  sub_1AE56371C();
  type metadata accessor for EntityTaggingStatefulFeedback();
  sub_1AE563B48(&qword_1EED9BD10, v9, (uint64_t (*)(uint64_t))type metadata accessor for EntityTaggingStatefulFeedback, (uint64_t)&protocol conformance descriptor for EntityTaggingStatefulFeedback);
  sub_1AE563384();
  if (v1)
  {
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v10 = sub_1AE4F6854();
    v11 = (void *)sub_1AE4FB608(v10, (uint64_t)qword_1ED31BC90);
    sub_1AE4FCEFC();
    sub_1AE4FCEFC();
    sub_1AE925B54();
    v12 = sub_1AE4FCF04();
    if (sub_1AE4FB89C(v12))
    {
      sub_1AE5633A8();
      v13 = (_QWORD *)sub_1AE5633D4();
      sub_1AE563358(5.7779e-34);
      v14 = sub_1AE563C28();
      sub_1AE563314(v14);
      *v13 = v4;
      sub_1AE4F916C();
      sub_1AE4F916C();
      sub_1AE563344(&dword_1AE4F2000, v15, v16, "Failed to encode Feedback: %@");
      sub_1AE501548(&qword_1ED319410);
      sub_1AE50A974();
      sub_1AE4F9064();
    }
    sub_1AE4F916C();
    sub_1AE4F916C();
    sub_1AE4F916C();

  }
  else
  {
    sub_1AE563E00();
    sub_1AE563530(v17, v18, OBJC_IVAR___GDFeedbackServiceInner_server);
    sub_1AE56350C();
    sub_1AE4FCEF0();
    sub_1AE4FDA58();
    sub_1AE563B08();
    sub_1AE5632F4();
    sub_1AE563AB8();
    v19 = sub_1AE506B88();
    sub_1AE50539C(v19, sel_logWithFeedbackData_type_variant_eventId_withTimestamp_shouldProcessImmediately_error_);
    sub_1AE563524();

    sub_1AE563A40();
    if ((v2 & 1) == 0)
    {
      sub_1AE5639D0();
      sub_1AE563950();
      sub_1AE506FEC();
    }
    sub_1AE4FCEF0();
  }
  sub_1AE506FAC();
  sub_1AE4F667C();
}

void sub_1AE5537DC()
{
  uint64_t v0;
  void *v1;
  GDGraphPerson *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  void *v16;

  sub_1AE5633F8();
  sub_1AE508EB4();
  sub_1AE4F66C4();
  sub_1AE563E2C();
  sub_1AE563A10();
  sub_1AE4F665C();
  sub_1AE4F9038();
  sub_1AE4F66C4();
  CustomGraphPerson.toObjectiveCGraphObject()(v2);
  sub_1AE563D04(v3, v4, v5, v6);

  sub_1AE563398();
  v7 = (__n128 *)sub_1AE563378();
  sub_1AE563888(v7, v8, v9, v10, v11, v12, v13, v14, v15);
  sub_1AE5085F0(v16);
  if (v0)
    sub_1AE4F6834();
  sub_1AE4F682C();
  sub_1AE563928();
}

void sub_1AE553860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  void *v14;

  sub_1AE5633F8();
  sub_1AE508EB4();
  sub_1AE4F66C4();
  sub_1AE563E2C();
  sub_1AE563A10();
  sub_1AE4F665C();
  sub_1AE4F9038();
  v1 = sub_1AE4F66C4();
  sub_1AE563D4C(v1, v2, v3, v4);
  sub_1AE563398();
  v5 = (__n128 *)sub_1AE563378();
  sub_1AE563888(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  sub_1AE5085F0(v14);
  if (v0)
    sub_1AE4F6834();
  sub_1AE4F682C();
  sub_1AE563928();
}

uint64_t sub_1AE5538D8@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  void (*v19)(char *, char *, uint64_t);
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = sub_1AE501548(&qword_1EED9BD60);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1AE92469C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v26 - v12;
  v14 = sub_1AE561DEC(v2, (SEL *)&selRef_suggestedNameStringInner);
  v16 = v15;
  v17 = objc_msgSend(v2, sel_suggestedNameComponentsInner);
  if (!v17)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v6, 1, 1, v7);
    goto LABEL_5;
  }
  v18 = v17;
  sub_1AE924684();

  v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v19(v6, v11, v7);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v6, 0, 1, v7);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, v7) == 1)
  {
LABEL_5:
    sub_1AE524534((uint64_t)v6, &qword_1EED9BD60);
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  v19(v13, v6, v7);
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3858]), sel_init);
  objc_msgSend(v20, sel_setStyle_, 3);
  v21 = (void *)sub_1AE924678();
  v22 = objc_msgSend(v20, sel_stringFromPersonNameComponents_, v21);

  v14 = sub_1AE925E3C();
  v16 = v23;

  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
LABEL_6:
  result = sub_1AE561DEC(v2, (SEL *)&selRef_suggestedContactIdentifierInner);
  *a1 = result;
  a1[1] = v25;
  a1[2] = v14;
  a1[3] = v16;
  return result;
}

void sub_1AE553B10()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  GDGraphPerson *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  void *v24;

  sub_1AE5633F8();
  sub_1AE508EB4();
  v2 = sub_1AE4F66C4();
  sub_1AE5639C0(v2, v3, v4, v5, v6, v7, v8, v9);
  sub_1AE563A10();
  sub_1AE4F9038();
  sub_1AE4F66C4();
  CustomGraphPerson.toObjectiveCGraphObject()(v10);
  sub_1AE563D04(v11, v12, v13, v14);

  sub_1AE563398();
  v15 = (__n128 *)sub_1AE563378();
  sub_1AE5636D4(v15, v16, v17, v18, v19, v20, v21, v22, v23);
  sub_1AE5085F0(v24);
  if (v0)
    sub_1AE4F6834();
  sub_1AE4F682C();
  sub_1AE4FE988();
}

void sub_1AE553B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  void *v22;

  sub_1AE5633F8();
  sub_1AE508EB4();
  v1 = sub_1AE4F66C4();
  sub_1AE5639C0(v1, v2, v3, v4, v5, v6, v7, v8);
  sub_1AE563A10();
  sub_1AE4F9038();
  v9 = sub_1AE4F66C4();
  sub_1AE563D4C(v9, v10, v11, v12);
  sub_1AE563398();
  v13 = (__n128 *)sub_1AE563378();
  sub_1AE5636D4(v13, v14, v15, v16, v17, v18, v19, v20, v21);
  sub_1AE5085F0(v22);
  if (v0)
    sub_1AE4F6834();
  sub_1AE4F682C();
  sub_1AE4FE988();
}

uint64_t sub_1AE553C10(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, id))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;

  v9 = sub_1AE925E3C();
  v11 = v10;
  v12 = a4;
  v13 = a1;
  a6(v9, v11, v12);

  return swift_bridgeObjectRelease();
}

id AutonamingView.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AutonamingView.init()()
{
  sub_1AE4FE99C();
  __break(1u);
}

id AutonamingView.__deallocating_deinit()
{
  return sub_1AE553CDC(type metadata accessor for AutonamingView);
}

id sub_1AE553CDC(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id AutonamingView.__allocating_init(viewName:)()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1AE508160();
  v1 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initWithViewName_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1AE9246B4();

    sub_1AE506FEC();
  }
  return v2;
}

void *AutonamingView.init(viewName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;

  if (qword_1ED31C9B0 != -1)
    swift_once();
  v5 = ViewService.subgraphView(name:tableName:batchSize:)(a1, a2, 0x6870617267627573, (void *)0xE800000000000000, 10);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    objc_allocWithZone((Class)type metadata accessor for AutonamingView());
    v5 = AutonamingView.init(subgraph:isForLiveServing:)((uint64_t)v5, 1);
  }
  swift_getObjectType();
  sub_1AE563784();
  return v5;
}

void AutonamingView.personFor(_:ofType:)()
{
  sub_1AE550C64();
}

Swift::Void __swiftcall AutonamingView.reset()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)(v0 + OBJC_IVAR___GDAutonamingViewInner_rejectedIdentifiers);
  swift_beginAccess();
  *v2 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  type metadata accessor for AutonamingViewFeedback();
  v3 = sub_1AE563378();
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_BYTE *)(v3 + 64) = 2;
  sub_1AE5085F0((void *)v3);
  if (v1)
    sub_1AE4F6834();
  swift_release();
}

uint64_t AutonamingViewFeedback.MatchingInfo.cnContact.getter()
{
  sub_1AE4F66CC();
  return sub_1AE4F7714();
}

uint64_t AutonamingViewFeedback.MatchingInfo.name.getter()
{
  sub_1AE4F66CC();
  return sub_1AE4F7714();
}

uint64_t sub_1AE5540EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6361746E6F436E63 && a2 == 0xE900000000000074;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE5541D4(char a1)
{
  if ((a1 & 1) != 0)
    return 1701667182;
  else
    return 0x6361746E6F436E63;
}

uint64_t sub_1AE55420C()
{
  char *v0;

  return sub_1AE5541D4(*v0);
}

uint64_t sub_1AE554214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE5540EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE554238()
{
  sub_1AE56105C();
  return sub_1AE926F94();
}

uint64_t sub_1AE554260()
{
  sub_1AE56105C();
  return sub_1AE926FA0();
}

void AutonamingViewFeedback.MatchingInfo.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE4F67EC();
  v3 = v2;
  v4 = sub_1AE501548(&qword_1EED9BAE0);
  v6 = *(_QWORD *)(v4 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F683C();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE56105C();
  sub_1AE926F4C();
  sub_1AE5009A4();
  if (!v0)
    sub_1AE5009A4();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_1AE4F667C();
}

void AutonamingViewFeedback.MatchingInfo.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  sub_1AE4F67EC();
  v5 = v4;
  sub_1AE501548(&qword_1EED9BAF0);
  sub_1AE5635D8();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F90F4();
  sub_1AE563B98();
  sub_1AE56105C();
  sub_1AE563CF8();
  sub_1AE4F680C();
  if (v0)
  {
    sub_1AE4F90EC();
  }
  else
  {
    v7 = sub_1AE563968();
    v9 = v8;
    swift_bridgeObjectRetain();
    v10 = sub_1AE563968();
    v12 = v11;
    v13 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v14 = v10;
    v13(v2, v1);
    *v5 = v7;
    v5[1] = v9;
    v5[2] = v14;
    v5[3] = v12;
    sub_1AE4F66CC();
    sub_1AE4F90EC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE554484(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x6D7269666E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7463656A6572 && a2 == 0xE600000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7465736572 && a2 == 0xE500000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x80000001AE97CF80)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = sub_1AE926D60();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1AE554620(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE554654 + 4 * byte_1AE93801E[a1]))(0x6D7269666E6F63, 0xE700000000000000);
}

uint64_t sub_1AE554654()
{
  return 0x7463656A6572;
}

uint64_t sub_1AE554668()
{
  return 0x7465736572;
}

unint64_t sub_1AE55467C()
{
  return 0xD000000000000015;
}

uint64_t sub_1AE554698(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001AE97CFA0
    || (sub_1AE4FDA58(), sub_1AE515554(), (sub_1AE4FB6F0() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1868983913 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AE4FB6F0();
    sub_1AE4F6648();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1AE55475C()
{
  sub_1AE4F76E0();
  sub_1AE563D58();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

uint64_t sub_1AE554784(char a1)
{
  if ((a1 & 1) != 0)
    return 1868983913;
  else
    return 0xD000000000000010;
}

void sub_1AE5547B8()
{
  AutonamingViewFeedback.MatchingInfo.init(from:)();
}

void sub_1AE5547CC()
{
  AutonamingViewFeedback.MatchingInfo.encode(to:)();
}

uint64_t sub_1AE5547E0()
{
  unsigned __int8 *v0;

  return sub_1AE554620(*v0);
}

uint64_t sub_1AE5547E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE554484(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE55480C()
{
  sub_1AE561098();
  return sub_1AE926F94();
}

uint64_t sub_1AE554834()
{
  sub_1AE561098();
  return sub_1AE926FA0();
}

uint64_t sub_1AE55485C()
{
  sub_1AE5611C4();
  return sub_1AE926F94();
}

uint64_t sub_1AE554884()
{
  sub_1AE5611C4();
  return sub_1AE926FA0();
}

uint64_t sub_1AE5548AC()
{
  sub_1AE5610D4();
  return sub_1AE926F94();
}

uint64_t sub_1AE5548D4()
{
  sub_1AE5610D4();
  return sub_1AE926FA0();
}

void sub_1AE5548FC()
{
  sub_1AE55475C();
}

void sub_1AE554914()
{
  sub_1AE500978();
  sub_1AE4F6694();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

uint64_t sub_1AE55493C()
{
  char *v0;

  return sub_1AE554784(*v0);
}

uint64_t sub_1AE554944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE554698(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE554968()
{
  sub_1AE56114C();
  return sub_1AE926F94();
}

uint64_t sub_1AE554990()
{
  sub_1AE56114C();
  return sub_1AE926FA0();
}

uint64_t sub_1AE5549B8()
{
  sub_1AE561110();
  return sub_1AE926F94();
}

uint64_t sub_1AE5549E0()
{
  sub_1AE561110();
  return sub_1AE926FA0();
}

void AutonamingViewFeedback.FeedbackType.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_1AE4F67EC();
  v3 = v2;
  v4 = sub_1AE501548(&qword_1EED9BAF8);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  v29 = v6;
  v7 = sub_1AE501548(&qword_1EED9BB00);
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F9024();
  v26 = v9;
  v35 = *(_QWORD *)(sub_1AE501548(&qword_1EED9BB08) - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F9024();
  v33 = v11;
  v34 = sub_1AE501548(&qword_1EED9BB10);
  v12 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  sub_1AE4F9024();
  v32 = v13;
  v14 = sub_1AE501548(&qword_1EED9BB18);
  v40 = *(_QWORD *)(v14 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F9024();
  v17 = *v0;
  v16 = v0[1];
  v36 = v0[2];
  v37 = v0[3];
  v38 = v0[5];
  v39 = v0[4];
  v18 = *((unsigned __int8 *)v0 + 48);
  v19 = v3[3];
  v20 = v3;
  v22 = v21;
  sub_1AE4F9858(v20, v19);
  sub_1AE561098();
  sub_1AE563CF8();
  sub_1AE926F4C();
  if (!v18)
  {
    sub_1AE5611C4();
    sub_1AE505FBC();
    sub_1AE926C88();
    if (!v1)
    {
      sub_1AE56385C();
      sub_1AE561188();
      sub_1AE563DC8();
    }
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v32, v34);
    goto LABEL_13;
  }
  if (v18 != 1)
  {
    if (v36 | v16 | v17 | v37 | v39 | v38)
    {
      sub_1AE5610D4();
      v23 = v29;
      sub_1AE505FBC();
      v25 = v30;
      v24 = v31;
    }
    else
    {
      sub_1AE561110();
      v23 = v26;
      sub_1AE505FBC();
      v25 = v27;
      v24 = v28;
    }
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
LABEL_13:
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v22, v14);
    goto LABEL_14;
  }
  sub_1AE56114C();
  sub_1AE505FBC();
  sub_1AE926C88();
  if (!v1)
  {
    sub_1AE56385C();
    sub_1AE561188();
    sub_1AE563DC8();
  }
  sub_1AE4FB7D0(v33, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v22, v14);
LABEL_14:
  sub_1AE4F667C();
}

void AutonamingViewFeedback.FeedbackType.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EED9BB50);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9BB58);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9BB60);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  v7 = sub_1AE501548(&qword_1EED9BB68);
  MEMORY[0x1E0C80A78](v7);
  sub_1AE50688C();
  v8 = sub_1AE501548(&qword_1EED9BB70);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F683C();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE561098();
  sub_1AE926F34();
  if (!v0)
  {
    v22 = v9;
    v10 = sub_1AE926C1C();
    v11 = *(_QWORD *)(v10 + 16);
    v12 = v1;
    if (v11)
    {
      v13 = v8;
      v14 = *(unsigned __int8 *)(v10 + 32);
      sub_1AE50AF34(1, v11, v10, v10 + 32, 0, (2 * v11) | 1);
      v16 = v15;
      v18 = v17;
      sub_1AE4F6648();
      if (v16 == v18 >> 1)
        __asm { BR              X9 }
      v8 = v13;
    }
    v19 = sub_1AE926988();
    swift_allocError();
    v21 = v20;
    sub_1AE501548(&qword_1EED99C38);
    *v21 = &type metadata for AutonamingViewFeedback.FeedbackType;
    sub_1AE926B5C();
    sub_1AE92697C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v12, v8);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
  sub_1AE4F667C();
}

void sub_1AE55507C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  *(_BYTE *)(v5 - 128) = 1;
  sub_1AE56114C();
  sub_1AE505A80();
  if (!v1)
  {
    *(_QWORD *)(v5 - 152) = v0;
    *(_BYTE *)(v5 - 128) = 0;
    sub_1AE563958();
    sub_1AE56393C();
    sub_1AE5634F0();
    v7 = *(_QWORD *)(v5 - 136);
    sub_1AE545370(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 192) + 8));
    swift_unknownObjectRelease();
    sub_1AE4FB7D0(v4, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    v8 = *(_OWORD *)(v5 - 128);
    v9 = *(_OWORD *)(v5 - 112);
    v6 = *(_QWORD *)(v5 - 184);
    *(_QWORD *)v6 = v2;
    *(_QWORD *)(v6 + 8) = v0;
    *(_OWORD *)(v6 + 16) = v8;
    *(_OWORD *)(v6 + 32) = v9;
    *(_BYTE *)(v6 + 48) = 1;
    JUMPOUT(0x1AE555068);
  }
  swift_unknownObjectRelease();
  JUMPOUT(0x1AE555060);
}

void sub_1AE5550B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 - 128) = 2;
  sub_1AE561110();
  v2 = *(_QWORD *)(v1 - 176);
  sub_1AE505A80();
  if (v0)
  {
    swift_unknownObjectRelease();
    JUMPOUT(0x1AE555060);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 224) + 8))(v2, *(_QWORD *)(v1 - 216));
  swift_unknownObjectRelease();
  sub_1AE563848();
  JUMPOUT(0x1AE555218);
}

void sub_1AE555308()
{
  AutonamingViewFeedback.FeedbackType.init(from:)();
}

void sub_1AE55531C()
{
  AutonamingViewFeedback.FeedbackType.encode(to:)();
}

uint64_t AutonamingViewFeedback.init(feedback:)(uint64_t a1)
{
  uint64_t v1;
  char v2;
  __int128 v3;

  v2 = *(_BYTE *)(a1 + 48);
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v3;
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v1 + 64) = v2;
  return v1;
}

unint64_t static AutonamingViewFeedback.type.getter()
{
  sub_1AE4FDA58();
  return 0xD00000000000002BLL;
}

uint64_t AutonamingViewFeedback.feedback.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 64);
  *(_BYTE *)(a1 + 48) = v8;
  return sub_1AE561E80(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1AE555394(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6B63616264656566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE555418()
{
  return 0x6B63616264656566;
}

void sub_1AE555430()
{
  sub_1AE500978();
  sub_1AE4F6818();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

uint64_t sub_1AE555458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE555394(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE555480()
{
  sub_1AE561F08();
  return sub_1AE926F94();
}

uint64_t sub_1AE5554A8()
{
  sub_1AE561F08();
  return sub_1AE926FA0();
}

uint64_t AutonamingViewFeedback.deinit()
{
  uint64_t v0;

  sub_1AE563754();
  return v0;
}

uint64_t AutonamingViewFeedback.__deallocating_deinit()
{
  sub_1AE563754();
  return swift_deallocClassInstance();
}

void sub_1AE555508(_QWORD *a1)
{
  uint64_t v2;

  sub_1AE501548(&qword_1EED9BB80);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE561F08();
  sub_1AE5638F8();
  sub_1AE561F44();
  sub_1AE563BD0();
  sub_1AE509858();
  sub_1AE4FCE34();
}

void AutonamingViewFeedback.__allocating_init(from:)()
{
  swift_allocObject();
  AutonamingViewFeedback.init(from:)();
  sub_1AE4FC4F8();
}

void AutonamingViewFeedback.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  char v8;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EED9BB98);
  sub_1AE5635D8();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F90F4();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE561F08();
  sub_1AE563CF8();
  sub_1AE4F680C();
  if (v1)
  {
    type metadata accessor for AutonamingViewFeedback();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1AE561F80();
    sub_1AE926BEC();
    sub_1AE4F777C();
    *(_OWORD *)(v0 + 16) = v5;
    *(_OWORD *)(v0 + 32) = v6;
    *(_OWORD *)(v0 + 48) = v7;
    *(_BYTE *)(v0 + 64) = v8;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
  sub_1AE4F667C();
}

unint64_t sub_1AE55571C()
{
  static AutonamingViewFeedback.type.getter();
  return 0xD00000000000002BLL;
}

void sub_1AE555738(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  AutonamingViewFeedback.__allocating_init(from:)();
  if (!v1)
    *a1 = v3;
}

void sub_1AE555760(_QWORD *a1)
{
  sub_1AE555508(a1);
}

uint64_t type metadata accessor for AutonamingView()
{
  return objc_opt_self();
}

uint64_t sub_1AE5557A0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t inited;
  double v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v27;

  v6 = sub_1AE501548(&qword_1EED9BD60);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v27 - v10;
  sub_1AE501548(&qword_1EED9BD68);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE938D60;
  *(_QWORD *)(inited + 32) = 0x6E6F697461727544;
  *(_QWORD *)(inited + 40) = 0xEF73646E6F636553;
  sub_1AE9248B8();
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v13);
  *(_QWORD *)(inited + 56) = 0x6C75736552646148;
  *(_QWORD *)(inited + 64) = 0xE900000000000074;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, a3 != 0);
  *(_QWORD *)(inited + 80) = 0xD000000000000015;
  *(_QWORD *)(inited + 88) = 0x80000001AE97D0E0;
  if (a3)
  {
    sub_1AE561DEC(a3, (SEL *)&selRef_suggestedContactIdentifier);
    v15 = v14;
    if (v14)
      swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, v15 != 0);
    *(_QWORD *)(inited + 104) = 0xD00000000000001ALL;
    *(_QWORD *)(inited + 112) = 0x80000001AE97D100;
    v16 = objc_msgSend(a3, sel_suggestedNameComponents);
    if (v16)
    {
      v17 = v16;
      sub_1AE924684();

      v18 = sub_1AE92469C();
      v19 = (uint64_t)v9;
      v20 = 0;
    }
    else
    {
      v18 = sub_1AE92469C();
      v19 = (uint64_t)v9;
      v20 = 1;
    }
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v19, v20, 1, v18);
    sub_1AE563118((uint64_t)v9, (uint64_t)v11);
    sub_1AE92469C();
    v22 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v11, 1, v18) != 1;
  }
  else
  {
    *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, 0);
    *(_QWORD *)(inited + 104) = 0xD00000000000001ALL;
    *(_QWORD *)(inited + 112) = 0x80000001AE97D100;
    v21 = sub_1AE92469C();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 1, 1, v21);
    v22 = 0;
  }
  sub_1AE524534((uint64_t)v11, &qword_1EED9BD60);
  *(_QWORD *)(inited + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, v22);
  *(_QWORD *)(inited + 128) = 0xD000000000000016;
  *(_QWORD *)(inited + 136) = 0x80000001AE97D120;
  if (a3)
  {
    sub_1AE561DEC(a3, (SEL *)&selRef_suggestedNameString);
    v24 = v23;
    if (v23)
      swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, v24 != 0);
    *(_QWORD *)(inited + 152) = 0xD000000000000010;
    *(_QWORD *)(inited + 160) = 0x80000001AE97D140;
    v25 = objc_msgSend(a3, sel_autonamingSuggestionReason);
  }
  else
  {
    v25 = 0;
    *(_QWORD *)(inited + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, 0);
    *(_QWORD *)(inited + 152) = 0xD000000000000010;
    *(_QWORD *)(inited + 160) = 0x80000001AE97D140;
  }
  *(_QWORD *)(inited + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v25);
  *(_QWORD *)(inited + 176) = 0xD000000000000010;
  *(_QWORD *)(inited + 184) = 0x80000001AE97D160;
  *(_QWORD *)(inited + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, *(unsigned __int8 *)(a4 + OBJC_IVAR___GDAutonamingViewInner_isForLiveServing));
  sub_1AE4F99B0();
  return sub_1AE925C98();
}

void sub_1AE555BBC(uint64_t a1)
{
  uint64_t v1;

  sub_1AE552238(a1, *(_QWORD *)(v1 + 16), *(void (**)(char *, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1AE555BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9BAD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE555C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CustomGraphPerson(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AE555C64(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_1AE4FB738(v2);
  sub_1AE4F6664();
}

uint64_t type metadata accessor for AutonamingViewFeedback()
{
  return objc_opt_self();
}

uint64_t sub_1AE555CAC(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_1AE555CC8(uint64_t a1, uint64_t a2)
{
  return sub_1AE555CF0(a1, a2, &unk_1EED94748, &type metadata for RelationshipIdentifier);
}

uint64_t sub_1AE555CDC(uint64_t a1, uint64_t a2)
{
  return sub_1AE555CF0(a1, a2, &qword_1EED9BD18, &type metadata for EntityIdentifier);
}

#error "1AE555DA0: call analysis failed (funcsize=49)"

#error "1AE555ED0: call analysis failed (funcsize=82)"

void sub_1AE555EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  BOOL v30;
  char v31;

  sub_1AE5633B8();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = *v10;
  sub_1AE500978();
  swift_bridgeObjectRetain();
  sub_1AE563DE8();
  v18 = sub_1AE4F905C();
  v19 = -1 << *(_BYTE *)(v17 + 32);
  v20 = v18 & ~v19;
  sub_1AE4FDA44();
  if ((v21 & 1) == 0)
  {
LABEL_16:
    sub_1AE4F66E8();
    v31 = sub_1AE505A94();
    sub_1AE563DA0();
    sub_1AE4F6730();
    sub_1AE55ABC8(v14, v12, v20, v31);
    sub_1AE5637E8(a10);
    *v16 = v14;
    v16[1] = v12;
    goto LABEL_17;
  }
  v22 = *(_QWORD *)(v17 + 48);
  v23 = (_QWORD *)(v22 + 16 * v20);
  v24 = *v23 == v14 && v23[1] == v12;
  if (!v24 && (sub_1AE4FB6F0() & 1) == 0)
  {
    v27 = ~v19;
    do
    {
      v20 = (v20 + 1) & v27;
      sub_1AE4FDA44();
      if ((v28 & 1) == 0)
        goto LABEL_16;
      v29 = (_QWORD *)(v22 + 16 * v20);
      v30 = *v29 == v14 && v29[1] == v12;
    }
    while (!v30 && (sub_1AE4FB6F0() & 1) == 0);
  }
  sub_1AE4F81B8();
  sub_1AE4F66E8();
  v25 = (uint64_t *)(*(_QWORD *)(*v10 + 48) + 16 * v20);
  v26 = v25[1];
  *v16 = *v25;
  v16[1] = v26;
  swift_bridgeObjectRetain();
LABEL_17:
  sub_1AE500988();
}

void sub_1AE55602C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  char v46;
  _BYTE *v47;

  sub_1AE505CD4();
  a31 = v33;
  a32 = v34;
  v36 = v35;
  v47 = v37;
  v38 = *v32;
  sub_1AE563880();
  sub_1AE4F6708();
  sub_1AE575CBC((uint64_t)&a12, v36);
  v39 = sub_1AE563878();
  v40 = -1 << *(_BYTE *)(v38 + 32);
  v41 = v39 & ~v40;
  if (((*(_QWORD *)(v38 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) != 0)
  {
    v42 = ~v40;
    do
    {
      v43 = *(unsigned __int8 *)(*(_QWORD *)(v38 + 48) + v41);
      if (v43 >> 6)
      {
        if (v43 >> 6 == 1)
        {
          if ((v36 & 0xC0) == 0x40)
            goto LABEL_6;
        }
        else if (v43 == 128)
        {
          if (v36 == 128)
            goto LABEL_18;
        }
        else if (v43 == 129)
        {
          if (v36 == 129)
            goto LABEL_18;
        }
        else if (v36 == 130)
        {
LABEL_18:
          sub_1AE4F76D8();
          LOBYTE(v36) = *(_BYTE *)(*(_QWORD *)(*v32 + 48) + v41);
          goto LABEL_19;
        }
      }
      else if (v36 < 0x40u)
      {
LABEL_6:
        v44 = sub_1AE505A4C();
        v45(v44);
        return;
      }
      v41 = (v41 + 1) & v42;
    }
    while (((*(_QWORD *)(v38 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) != 0);
  }
  sub_1AE4F76D8();
  v46 = sub_1AE505A94();
  a12 = *v32;
  *v32 = 0x8000000000000000;
  sub_1AE55AD60(v36, v41, v46);
  sub_1AE5637E8(a12);
LABEL_19:
  *v47 = v36;
  sub_1AE4F778C();
}

uint64_t sub_1AE55631C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1AE926EC8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  v8 = sub_1AE926F10();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1AE926D60() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1AE926D60() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1AE55B200(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

void sub_1AE5564D8(char *a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t *v8;
  uint64_t v10[9];

  v5 = *v2;
  sub_1AE926EC8();
  sub_1AE4F6804();
  sub_1AE5E80C4((uint64_t)v10, a2);
  sub_1AE926F10();
  sub_1AE563C7C();
  sub_1AE563E74();
  if ((v6 & 1) != 0)
    __asm { BR              X9 }
  sub_1AE4F67AC();
  v7 = sub_1AE508E78();
  v10[0] = *v8;
  *v8 = 0x8000000000000000;
  sub_1AE55B3A8(a2, v3, v7);
  sub_1AE563420(v10[0]);
  *a1 = a2;
  sub_1AE563570();
}

uint64_t sub_1AE556784(uint64_t *a1, uint64_t a2)
{
  return sub_1AE55783C(a1, a2);
}

#error "1AE5568B4: call analysis failed (funcsize=82)"

uint64_t sub_1AE5568E0()
{
  char *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  const void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  _BYTE v26[72];
  uint64_t __dst[11];

  sub_1AE563BB8();
  memcpy(__dst, v4, sizeof(__dst));
  sub_1AE926EC8();
  sub_1AE4F6804();
  KnosisInternalFact.hash(into:)((uint64_t)v26);
  v5 = sub_1AE4F905C();
  v6 = -1 << *(_BYTE *)(v3 + 32);
  v7 = v5 & ~v6;
  sub_1AE56340C();
  if ((v8 & 1) != 0)
  {
    v9 = v1[1];
    sub_1AE5636A4(88);
    v11 = v11 && v10 == v9;
    if (v11 || (sub_1AE4FB6F0() & 1) != 0)
    {
LABEL_7:
      sub_1AE4F67AC();
      sub_1AE562EE8((uint64_t)v1);
      sub_1AE563DF4();
      v13 = v12 + 88 * v7;
      v14 = *(_QWORD *)(v13 + 8);
      v15 = *(_QWORD *)(v13 + 16);
      v16 = *(_QWORD *)(v13 + 24);
      v17 = *(_QWORD *)(v13 + 32);
      v18 = *(_QWORD *)(v13 + 72);
      v19 = *(_QWORD *)(v13 + 80);
      *(_QWORD *)v0 = *(_QWORD *)v13;
      *((_QWORD *)v0 + 1) = v14;
      *((_QWORD *)v0 + 2) = v15;
      *((_QWORD *)v0 + 3) = v16;
      *((_QWORD *)v0 + 4) = v17;
      *(_OWORD *)(v0 + 40) = *(_OWORD *)(v13 + 40);
      *(_OWORD *)(v0 + 56) = *(_OWORD *)(v13 + 56);
      *((_QWORD *)v0 + 9) = v18;
      *((_QWORD *)v0 + 10) = v19;
      swift_bridgeObjectRetain();
      sub_1AE4F6730();
      sub_1AE4F66CC();
      sub_1AE4F66C4();
      sub_1AE4FB75C();
      sub_1AE4F6708();
      return 0;
    }
    v21 = ~v6;
    while (1)
    {
      v7 = (v7 + 1) & v21;
      sub_1AE56340C();
      if ((v22 & 1) == 0)
        break;
      sub_1AE5636A4(88);
      v24 = v11 && v23 == v9;
      if (v24 || (sub_1AE4FB6F0() & 1) != 0)
        goto LABEL_7;
    }
  }
  sub_1AE4F67AC();
  v25 = sub_1AE563568();
  __dst[0] = *v2;
  *v2 = 0x8000000000000000;
  sub_1AE562E78((uint64_t)v1);
  sub_1AE55B978(v1, v7, v25);
  sub_1AE56336C(__dst[0]);
  memcpy(v0, v1, 0x58uLL);
  return 1;
}

void sub_1AE556A90(_BYTE *a1, char a2)
{
  uint64_t *v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v18;

  v3 = a2 & 1;
  v4 = *v2;
  v5 = *(_QWORD *)(v4 + 40);
  sub_1AE4F66CC();
  sub_1AE54FB90();
  sub_1AE563C7C();
  if (((*(_QWORD *)(v4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = ~v6;
    if (v3)
      v8 = 0x7241746E65746E69;
    else
      v8 = 0x79676F6C6F746E6FLL;
    if (v3)
      v9 = 0xE900000000000067;
    else
      v9 = 0xE800000000000000;
    while (1)
    {
      v10 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v5) ? 0x7241746E65746E69 : 0x79676F6C6F746E6FLL;
      v11 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v5) ? 0xE900000000000067 : 0xE800000000000000;
      if (v10 == v8 && v11 == v9)
        break;
      v13 = sub_1AE4FB6F0();
      sub_1AE4F6728();
      sub_1AE4F67AC();
      if ((v13 & 1) != 0)
        goto LABEL_22;
      v5 = (v5 + 1) & v7;
      if (((*(_QWORD *)(v4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_20;
    }
    sub_1AE4F9038();
    sub_1AE4F67AC();
LABEL_22:
    sub_1AE4F67AC();
    sub_1AE563E20();
    LOBYTE(v3) = *(_BYTE *)(v15 + v5);
  }
  else
  {
LABEL_20:
    sub_1AE4F9038();
    v14 = sub_1AE508E78();
    v18 = *v16;
    *v16 = 0x8000000000000000;
    sub_1AE55BB58(v3, v5, v14);
    sub_1AE563420(v18);
  }
  *a1 = v3;
}

void sub_1AE556C34(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  BOOL v25;
  BOOL v26;
  char isUniquelyReferenced_nonNull_native;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = *v2;
  sub_1AE926EC8();
  v6 = *a2;
  v7 = *((unsigned __int8 *)a2 + 8);
  v38 = a1;
  v36 = v2;
  sub_1AE926EE0();
  if (v7 != 1)
    sub_1AE926EF8();
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[4];
  v11 = a2[5];
  v37 = a2;
  sub_1AE4F6730();
  sub_1AE4F67A4();
  v40 = v8;
  sub_1AE925F14();
  sub_1AE4F6728();
  swift_bridgeObjectRetain();
  v12 = v10;
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  sub_1AE926F10();
  sub_1AE563C70();
  v15 = v14 & ~v13;
  v16 = v5 + 56;
  if (((*(_QWORD *)(v5 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v39 = v6;
    v17 = ~v13;
    v18 = *(_QWORD *)(v5 + 48);
    do
    {
      v19 = v18 + 48 * v15;
      v20 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      v22 = *(_QWORD *)(v19 + 32);
      v23 = *(_QWORD *)(v19 + 40);
      if ((*(_BYTE *)(v19 + 8) & 1) != 0)
      {
        if (!v7)
          goto LABEL_22;
      }
      else
      {
        if (*(_QWORD *)v19 == v39)
          v24 = v7;
        else
          v24 = 1;
        if ((v24 & 1) != 0)
          goto LABEL_22;
      }
      v25 = v20 == v40 && v21 == v9;
      if (v25 || (sub_1AE4FB6F0() & 1) != 0)
      {
        v26 = v22 == v12 && v23 == v11;
        if (v26 || (sub_1AE4FB6F0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_1AE562FF0((uint64_t)v37);
          sub_1AE563E20();
          v30 = v29 + 48 * v15;
          v31 = *(_BYTE *)(v30 + 8);
          v33 = *(_QWORD *)(v30 + 16);
          v32 = *(_QWORD *)(v30 + 24);
          v34 = *(_QWORD *)(v30 + 32);
          v35 = *(_QWORD *)(v30 + 40);
          *(_QWORD *)v38 = *(_QWORD *)v30;
          *(_BYTE *)(v38 + 8) = v31;
          *(_QWORD *)(v38 + 16) = v33;
          *(_QWORD *)(v38 + 24) = v32;
          *(_QWORD *)(v38 + 32) = v34;
          *(_QWORD *)(v38 + 40) = v35;
          swift_bridgeObjectRetain();
          sub_1AE4FB75C();
          goto LABEL_25;
        }
      }
LABEL_22:
      v15 = (v15 + 1) & v17;
    }
    while (((*(_QWORD *)(v16 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v41 = *v36;
  *v36 = 0x8000000000000000;
  sub_1AE562FBC((uint64_t)v37);
  sub_1AE55BD44((uint64_t)v37, v15, isUniquelyReferenced_nonNull_native);
  *v36 = v41;
  swift_bridgeObjectRelease();
  v28 = v37[1];
  *(_OWORD *)v38 = *v37;
  *(_OWORD *)(v38 + 16) = v28;
  *(_OWORD *)(v38 + 32) = v37[2];
LABEL_25:
  sub_1AE563570();
}

uint64_t sub_1AE556E94(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1AE557424(a1, a2, a3, a4, a5);
}

void sub_1AE556EA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;

  sub_1AE5635C0();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = *v0;
  sub_1AE500978();
  sub_1AE926EEC();
  sub_1AE926EF8();
  sub_1AE563EB0();
  v10 = sub_1AE4F905C();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ~v11;
    while (1)
    {
      v14 = (unsigned __int8 *)(*(_QWORD *)(v9 + 48) + 24 * v12);
      v15 = *v14;
      v17 = *((_QWORD *)v14 + 1);
      v16 = *((_QWORD *)v14 + 2);
      v18 = v15 == v6 && v17 == v4;
      if (v18 && v16 == v2)
        break;
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_11;
    }
    v21 = *(_QWORD *)(*v0 + 48) + 24 * v12;
    LOBYTE(v6) = *(_BYTE *)v21;
    v4 = *(_QWORD *)(v21 + 8);
    v2 = *(_QWORD *)(v21 + 16);
  }
  else
  {
LABEL_11:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v0;
    *v0 = 0x8000000000000000;
    sub_1AE55BF98(v6, v4, v2, v12, isUniquelyReferenced_nonNull_native);
    *v0 = v22;
    swift_bridgeObjectRelease();
  }
  *(_BYTE *)v8 = v6;
  *(_QWORD *)(v8 + 8) = v4;
  *(_QWORD *)(v8 + 16) = v2;
  sub_1AE505FA4();
}

uint64_t sub_1AE556FE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  unint64_t v4;
  char v5;
  char v7;
  uint64_t result;
  _BYTE *v9;
  uint64_t v10;

  sub_1AE563CB4();
  v2 = v1;
  v9 = v3;
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  sub_1AE4F66CC();
  sub_1AE54FCA8(v4, v2, (void (*)(uint64_t))PersonEntityTagType.rawValue.getter);
  sub_1AE563C7C();
  sub_1AE563E74();
  if ((v5 & 1) != 0)
  {
    sub_1AE563C8C();
    __asm { BR              X9 }
  }
  sub_1AE4F9038();
  sub_1AE505A94();
  sub_1AE563DA0();
  sub_1AE55C124(v2, v4, v7);
  sub_1AE5637E8(v10);
  result = 1;
  *v9 = v2;
  return result;
}

uint64_t sub_1AE557410(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1AE557424(a1, a2, a3, a4, a5);
}

uint64_t sub_1AE557424(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  BOOL v21;
  uint64_t result;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v30;

  v10 = *v5;
  sub_1AE926EC8();
  sub_1AE4FB764();
  sub_1AE4F6708();
  sub_1AE925F14();
  sub_1AE4F76D8();
  sub_1AE4F6730();
  sub_1AE925F14();
  sub_1AE4F81B8();
  v11 = sub_1AE926F10();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v15 = ~v12;
    v16 = *(_QWORD *)(v10 + 48);
    while (1)
    {
      v17 = (_QWORD *)(v16 + 32 * v13);
      v18 = v17[2];
      v19 = v17[3];
      v20 = *v17 == a2 && v17[1] == a3;
      if (v20 || (sub_1AE4FB6F0() & 1) != 0)
      {
        v21 = v18 == a4 && v19 == a5;
        if (v21 || (sub_1AE4FB6F0() & 1) != 0)
          break;
      }
      v13 = (v13 + 1) & v15;
      if (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_14;
    }
    sub_1AE4F81B8();
    sub_1AE4F76D8();
    swift_bridgeObjectRelease();
    sub_1AE563E20();
    v24 = (_QWORD *)(v23 + 32 * v13);
    v25 = v24[1];
    v26 = v24[2];
    v27 = v24[3];
    *a1 = *v24;
    a1[1] = v25;
    a1[2] = v26;
    a1[3] = v27;
    swift_bridgeObjectRetain();
    sub_1AE4F66CC();
    return 0;
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    sub_1AE508E78();
    v30 = *v28;
    *v28 = 0x8000000000000000;
    sub_1AE4F6708();
    sub_1AE4F6730();
    sub_1AE55C88C();
    sub_1AE563420(v30);
    *a1 = a2;
    a1[1] = a3;
    result = 1;
    a1[2] = a4;
    a1[3] = a5;
  }
  return result;
}

void sub_1AE55760C(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = *v2;
  sub_1AE500978();
  sub_1AE926ED4();
  sub_1AE4F905C();
  sub_1AE5634AC();
  if ((v7 & 1) == 0)
  {
LABEL_6:
    sub_1AE563568();
    v11 = sub_1AE5636B4();
    sub_1AE55CA18(v11, v3, v12);
    sub_1AE563334(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
    goto LABEL_7;
  }
  if (*(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v3) != a2)
  {
    do
    {
      sub_1AE5637F4();
      if ((v9 & 1) == 0)
        goto LABEL_6;
    }
    while (*(_QWORD *)(v8 + 8 * v3) != a2);
  }
  sub_1AE563DF4();
  a2 = *(_QWORD *)(v10 + 8 * v3);
LABEL_7:
  *a1 = a2;
  sub_1AE4FE988();
}

uint64_t sub_1AE5576B0()
{
  void *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  const void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v21[19];

  sub_1AE563BB8();
  sub_1AE4FFCC0(v21, v4);
  sub_1AE926EC8();
  sub_1AE4F6804();
  KnosisFact.hash(into:)();
  v5 = sub_1AE926F10();
  v6 = -1 << *(_BYTE *)(v3 + 32);
  v7 = v5 & ~v6;
  sub_1AE56340C();
  if ((v8 & 1) != 0)
  {
    v9 = v1[1];
    sub_1AE5636A4(144);
    v11 = v11 && v10 == v9;
    if (v11 || (sub_1AE4FB6F0() & 1) != 0)
    {
LABEL_7:
      sub_1AE4F67AC();
      sub_1AE525BB8((uint64_t)v1);
      sub_1AE563DF4();
      sub_1AE4FFCC0(v21, (const void *)(v12 + 144 * v7));
      v13 = (void *)sub_1AE4F7714();
      sub_1AE4FFCC0(v13, v14);
      sub_1AE525A98((uint64_t)v21);
      return 0;
    }
    v16 = ~v6;
    while (1)
    {
      v7 = (v7 + 1) & v16;
      sub_1AE56340C();
      if ((v17 & 1) == 0)
        break;
      sub_1AE5636A4(144);
      v19 = v11 && v18 == v9;
      if (v19 || (sub_1AE4FB6F0() & 1) != 0)
        goto LABEL_7;
    }
  }
  sub_1AE4F67AC();
  v20 = sub_1AE563568();
  v21[0] = *v2;
  *v2 = 0x8000000000000000;
  sub_1AE525A98((uint64_t)v1);
  sub_1AE55CB74(v1, v7, v20);
  sub_1AE56336C(v21[0]);
  sub_1AE4FFCC0(v0, v1);
  return 1;
}

uint64_t sub_1AE557828(uint64_t *a1, uint64_t a2)
{
  return sub_1AE55783C(a1, a2);
}

uint64_t sub_1AE55783C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1AE926EBC() & ~(-1 << *(_BYTE *)(v6 + 32));
  sub_1AE563E88();
  if ((v8 & 1) == 0)
  {
LABEL_6:
    sub_1AE563568();
    v21 = *v3;
    *v3 = 0x8000000000000000;
    sub_1AE55CD54(a2, v7);
    sub_1AE563334(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
    result = 1;
    goto LABEL_7;
  }
  if (*(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v7) != a2)
  {
    do
    {
      sub_1AE5638A4();
      if ((v10 & 1) == 0)
        goto LABEL_6;
    }
    while (*(_QWORD *)(v9 + 8 * v7) != a2);
  }
  result = 0;
LABEL_7:
  *a1 = a2;
  return result;
}

void sub_1AE55791C()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1AE5633B8();
  v4 = v0;
  v5 = *v0;
  sub_1AE508A88(v6, v7);
  v8 = sub_1AE56353C();
  if (*(_QWORD *)(v5 + 16))
  {
    sub_1AE563D78();
    sub_1AE56346C();
    if (!v2)
      goto LABEL_4;
LABEL_3:
    sub_1AE5639E8();
    while (1)
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v9);
      sub_1AE500978();
      sub_1AE926EF8();
      sub_1AE4F905C();
      sub_1AE563798();
      if (v13)
      {
        sub_1AE5053C0();
        while (1)
        {
          sub_1AE5637B4();
          if (v13)
          {
            if ((v15 & 1) != 0)
              break;
          }
          if (v16 == v17)
            v16 = 0;
          if (*(_QWORD *)(v8 + 56 + 8 * v16) != -1)
          {
            sub_1AE4FB888();
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        return;
      }
      sub_1AE4FC604();
LABEL_26:
      sub_1AE56358C(v14);
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v18) = v12;
      ++*(_QWORD *)(v8 + 16);
      if (v2)
        goto LABEL_3;
LABEL_4:
      v10 = (uint64_t)v4 + 1;
      if (__OFADD__(v4, 1))
        goto LABEL_34;
      if (v10 >= v3)
        goto LABEL_28;
      v4 = (uint64_t *)((char *)v4 + 1);
      if (!v1[v10])
      {
        v4 = (uint64_t *)(v10 + 1);
        if (v10 + 1 >= v3)
          goto LABEL_28;
        if (!v1[(_QWORD)v4])
        {
          v11 = (uint64_t *)(v10 + 2);
          if ((uint64_t)v11 >= v3)
          {
LABEL_28:
            v19 = 1 << *(_BYTE *)(v5 + 32);
            if (v19 > 63)
            {
              sub_1AE555CAC(0, (unint64_t)(v19 + 63) >> 6, v1);
            }
            else
            {
              sub_1AE563C70();
              *v1 = v20;
            }
            v4 = v0;
            *(_QWORD *)(v5 + 16) = 0;
            break;
          }
          if (!v1[(_QWORD)v11])
          {
            while (1)
            {
              v4 = (uint64_t *)((char *)v11 + 1);
              if (__OFADD__(v11, 1))
                goto LABEL_35;
              if ((uint64_t)v4 >= v3)
                goto LABEL_28;
              v11 = (uint64_t *)((char *)v11 + 1);
              if (v1[(_QWORD)v4])
                goto LABEL_15;
            }
          }
          v4 = v11;
        }
      }
LABEL_15:
      sub_1AE563998();
    }
  }
  sub_1AE50A24C();
  *v4 = v8;
  sub_1AE500988();
}

uint64_t sub_1AE557ABC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  int64_t v36;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548((uint64_t *)&unk_1ED3195F8);
  v3 = sub_1AE9268E0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v35 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v34 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v36 = v10;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v15 << 6))
    {
      v17 = v2;
      v18 = *(_QWORD *)(v2 + 48) + 40 * i;
      v19 = *(_QWORD *)v18;
      v20 = *(_QWORD *)(v18 + 8);
      v21 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v18 + 24);
      v23 = *(_WORD *)(v18 + 32);
      sub_1AE926EC8();
      swift_bridgeObjectRetain();
      sub_1AE925F14();
      swift_bridgeObjectRelease();
      result = sub_1AE926F10();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) == 0)
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v24) >> 6;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          v30 = v26 == v29;
          if (v26 == v29)
            v26 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v8 + 8 * v26);
          if (v31 != -1)
          {
            v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v8 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      v32 = *(_QWORD *)(v4 + 48) + 40 * v27;
      *(_QWORD *)v32 = v19;
      *(_QWORD *)(v32 + 8) = v20;
      *(_QWORD *)(v32 + 16) = v21;
      *(_QWORD *)(v32 + 24) = v22;
      *(_WORD *)(v32 + 32) = v23;
      ++*(_QWORD *)(v4 + 16);
      v2 = v17;
      v10 = v36;
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v13 >= v34)
        goto LABEL_32;
      v14 = v35[v13];
      v15 = v10 + 1;
      if (!v14)
      {
        v15 = v10 + 2;
        if (v10 + 2 >= v34)
          goto LABEL_32;
        v14 = v35[v15];
        if (!v14)
        {
          v15 = v10 + 3;
          if (v10 + 3 >= v34)
            goto LABEL_32;
          v14 = v35[v15];
          if (!v14)
          {
            v16 = v10 + 4;
            if (v10 + 4 >= v34)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v33 = 1 << *(_BYTE *)(v2 + 32);
              if (v33 > 63)
                sub_1AE555CAC(0, (unint64_t)(v33 + 63) >> 6, v35);
              else
                *v35 = -1 << v33;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v35[v16];
            if (!v14)
            {
              while (1)
              {
                v15 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v15 >= v34)
                  goto LABEL_32;
                v14 = v35[v15];
                ++v16;
                if (v14)
                  goto LABEL_20;
              }
            }
            v15 = v10 + 4;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
      v36 = v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1AE557DEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548(&qword_1ED31AD70);
  v3 = sub_1AE9268E0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_1AE926EC8();
      sub_1AE925F14();
      result = sub_1AE926F10();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_1AE555CAC(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1AE5580C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  int64_t v28;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548(&qword_1EED9BD38);
  v3 = sub_1AE9268E0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v28 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    swift_retain();
    v10 = 0;
    if (!v8)
      goto LABEL_7;
    while (2)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
LABEL_21:
      v16 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v12);
      sub_1AE926EC8();
      if (!(v16 >> 6))
      {
        sub_1AE926ED4();
        __asm { BR              X8 }
      }
      if (v16 >> 6 == 1)
      {
        sub_1AE926ED4();
        __asm { BR              X8 }
      }
      sub_1AE926ED4();
      v17 = sub_1AE926F10();
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v19 = v17 & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v9 + 8 * (v19 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v9 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_34;
      }
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v9 + 8 * v20);
      }
      while (v25 == -1);
      v21 = __clz(__rbit64(~v25)) + (v20 << 6);
LABEL_34:
      *(_QWORD *)(v9 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v21) = v16;
      ++*(_QWORD *)(v4 + 16);
      if (v8)
        continue;
      break;
    }
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_42;
    if (v13 < v28)
    {
      v14 = v6[v13];
      ++v10;
      if (v14)
        goto LABEL_20;
      v10 = v13 + 1;
      if (v13 + 1 < v28)
      {
        v14 = v6[v10];
        if (v14)
          goto LABEL_20;
        v10 = v13 + 2;
        if (v13 + 2 < v28)
        {
          v14 = v6[v10];
          if (v14)
            goto LABEL_20;
          v15 = v13 + 3;
          if (v15 < v28)
          {
            v14 = v6[v15];
            if (v14)
            {
              v10 = v15;
LABEL_20:
              v8 = (v14 - 1) & v14;
              v12 = __clz(__rbit64(v14)) + (v10 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              v10 = v15 + 1;
              if (__OFADD__(v15, 1))
                break;
              if (v10 >= v28)
                goto LABEL_36;
              v14 = v6[v10];
              ++v15;
              if (v14)
                goto LABEL_20;
            }
LABEL_43:
            __break(1u);
            JUMPOUT(0x1AE55856CLL);
          }
        }
      }
    }
LABEL_36:
    swift_release();
    v1 = v0;
    v26 = 1 << *(_BYTE *)(v2 + 32);
    if (v26 > 63)
      sub_1AE555CAC(0, (unint64_t)(v26 + 63) >> 6, (_QWORD *)(v2 + 56));
    else
      *v6 = -1 << v26;
    *(_QWORD *)(v2 + 16) = 0;
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1AE55859C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548(&qword_1EED9BD58);
  v3 = sub_1AE9268E0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_1AE926EC8();
      swift_bridgeObjectRetain();
      sub_1AE925F14();
      swift_bridgeObjectRelease();
      result = sub_1AE926F10();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_1AE555CAC(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1AE558884()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548(&qword_1ED30FCD0);
  v3 = sub_1AE9268E0();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_25;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v7)
  {
    v9 = __clz(__rbit64(v7));
    goto LABEL_20;
  }
  if (v8 > 1)
  {
    v10 = *(_QWORD *)(v2 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_19;
    v11 = 2;
    if (v8 > 2)
    {
      v10 = *(_QWORD *)(v2 + 72);
      if (v10)
        goto LABEL_19;
      v11 = 3;
      if (v8 > 3)
      {
        v10 = *(_QWORD *)(v2 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v8 > 4)
          {
            v10 = *(_QWORD *)(v2 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x1AE558C5CLL);
              }
              if (v11 >= v8)
                break;
              v10 = v5[v11];
              ++v12;
              if (v10)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_20:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v9);
        sub_1AE926EC8();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v1 = v0;
  v14 = 1 << *(_BYTE *)(v2 + 32);
  if (v14 > 63)
    sub_1AE555CAC(0, (unint64_t)(v14 + 63) >> 6, (_QWORD *)(v2 + 56));
  else
    *v5 = -1 << v14;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_1AE558C80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  int64_t v36;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548((uint64_t *)&unk_1ED31B880);
  v3 = sub_1AE9268E0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v35 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v34 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v36 = v10;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v15 << 6))
    {
      v17 = v2;
      v18 = *(_QWORD *)(v2 + 48) + 40 * i;
      v19 = *(_QWORD *)v18;
      v20 = *(_QWORD *)(v18 + 8);
      v21 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v18 + 24);
      v23 = *(_BYTE *)(v18 + 32);
      sub_1AE926EC8();
      swift_bridgeObjectRetain();
      sub_1AE925F14();
      swift_bridgeObjectRelease();
      result = sub_1AE926F10();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) == 0)
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v24) >> 6;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          v30 = v26 == v29;
          if (v26 == v29)
            v26 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v8 + 8 * v26);
          if (v31 != -1)
          {
            v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v8 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      v32 = *(_QWORD *)(v4 + 48) + 40 * v27;
      *(_QWORD *)v32 = v19;
      *(_QWORD *)(v32 + 8) = v20;
      *(_QWORD *)(v32 + 16) = v21;
      *(_QWORD *)(v32 + 24) = v22;
      *(_BYTE *)(v32 + 32) = v23;
      ++*(_QWORD *)(v4 + 16);
      v2 = v17;
      v10 = v36;
      if (v7)
        goto LABEL_6;
LABEL_7:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v13 >= v34)
        goto LABEL_32;
      v14 = v35[v13];
      v15 = v10 + 1;
      if (!v14)
      {
        v15 = v10 + 2;
        if (v10 + 2 >= v34)
          goto LABEL_32;
        v14 = v35[v15];
        if (!v14)
        {
          v15 = v10 + 3;
          if (v10 + 3 >= v34)
            goto LABEL_32;
          v14 = v35[v15];
          if (!v14)
          {
            v16 = v10 + 4;
            if (v10 + 4 >= v34)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v33 = 1 << *(_BYTE *)(v2 + 32);
              if (v33 > 63)
                sub_1AE555CAC(0, (unint64_t)(v33 + 63) >> 6, v35);
              else
                *v35 = -1 << v33;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v35[v16];
            if (!v14)
            {
              while (1)
              {
                v15 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v15 >= v34)
                  goto LABEL_32;
                v14 = v35[v15];
                ++v16;
                if (v14)
                  goto LABEL_20;
              }
            }
            v15 = v10 + 4;
          }
        }
      }
LABEL_20:
      v7 = (v14 - 1) & v14;
      v36 = v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_1AE558FB0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t *v27;
  _QWORD *v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  char v36[72];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = *v0;
  sub_1AE501548(&qword_1EED9BD00);
  v2 = sub_1AE9268E0();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v28 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v29 = (unint64_t)(v4 + 63) >> 6;
    v30 = v2 + 56;
    v31 = v1;
    result = swift_retain();
    v8 = 0;
    if (!v6)
      goto LABEL_7;
LABEL_6:
    v34 = (v6 - 1) & v6;
    v35 = v8;
    v9 = __clz(__rbit64(v6)) | (v8 << 6);
    v10 = v31;
    while (1)
    {
      v15 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 88 * v9);
      v16 = v15[1];
      v18 = v15[2];
      v20 = v15[3];
      v19 = v15[4];
      v22 = v15[5];
      v21 = v15[6];
      v23 = v15[8];
      v24 = v15[9];
      v32 = v15[10];
      v33 = v15[7];
      v37 = *v15;
      v17 = v37;
      v38 = v16;
      v39 = v18;
      v40 = v20;
      v41 = v19;
      v42 = v22;
      v43 = v21;
      v44 = v33;
      v45 = v23;
      v46 = v24;
      v47 = v32;
      sub_1AE926EC8();
      KnosisInternalFact.hash(into:)((uint64_t)v36);
      sub_1AE926F10();
      result = sub_1AE92685C();
      *(_QWORD *)(v30 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v25 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 88 * result);
      *v25 = v17;
      v25[1] = v16;
      v25[2] = v18;
      v25[3] = v20;
      v25[4] = v19;
      v25[5] = v22;
      v25[6] = v21;
      v6 = v34;
      v25[7] = v33;
      v25[8] = v23;
      v25[9] = v24;
      v25[10] = v32;
      ++*(_QWORD *)(v3 + 16);
      v8 = v35;
      if (v34)
        goto LABEL_6;
LABEL_7:
      v11 = v8 + 1;
      v10 = v31;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        return result;
      }
      if (v11 >= v29)
        goto LABEL_23;
      v12 = v28[v11];
      v13 = v8 + 1;
      if (!v12)
      {
        v13 = v8 + 2;
        if (v8 + 2 >= v29)
          goto LABEL_23;
        v12 = v28[v13];
        if (!v12)
        {
          v13 = v8 + 3;
          if (v8 + 3 >= v29)
            goto LABEL_23;
          v12 = v28[v13];
          if (!v12)
          {
            v14 = v8 + 4;
            if (v8 + 4 >= v29)
            {
LABEL_23:
              swift_release();
              v26 = 1 << *(_BYTE *)(v31 + 32);
              if (v26 > 63)
                sub_1AE555CAC(0, (unint64_t)(v26 + 63) >> 6, v28);
              else
                *v28 = -1 << v26;
              *(_QWORD *)(v31 + 16) = 0;
              break;
            }
            v12 = v28[v14];
            if (!v12)
            {
              while (1)
              {
                v13 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_29;
                if (v13 >= v29)
                  goto LABEL_23;
                v12 = v28[v13];
                ++v14;
                if (v12)
                  goto LABEL_20;
              }
            }
            v13 = v8 + 4;
          }
        }
      }
LABEL_20:
      v34 = (v12 - 1) & v12;
      v35 = v13;
      v9 = __clz(__rbit64(v12)) + (v13 << 6);
    }
  }
  result = swift_release();
  *v27 = v3;
  return result;
}

uint64_t sub_1AE5592B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548(&qword_1ED30FCD8);
  v3 = sub_1AE9268E0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    if (!v8)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + i);
      sub_1AE926EC8();
      sub_1AE925F14();
      swift_bridgeObjectRelease();
      result = sub_1AE926F10();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v22) = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v8)
        goto LABEL_6;
LABEL_7:
      v15 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_38;
      if (v15 >= v9)
        goto LABEL_32;
      v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        v12 = v15 + 1;
        if (v15 + 1 >= v9)
          goto LABEL_32;
        v16 = v6[v12];
        if (!v16)
        {
          v12 = v15 + 2;
          if (v15 + 2 >= v9)
            goto LABEL_32;
          v16 = v6[v12];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v27 = 1 << *(_BYTE *)(v2 + 32);
              if (v27 > 63)
                sub_1AE555CAC(0, (unint64_t)(v27 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v6 = -1 << v27;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v12 >= v9)
                  goto LABEL_32;
                v16 = v6[v12];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v12 = v17;
          }
        }
      }
LABEL_20:
      v8 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_1AE5595A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  _OWORD *v15;
  __int128 v16;
  uint64_t v17;
  _OWORD v18[3];

  v1 = v0;
  v2 = *v0;
  sub_1AE501548(&qword_1EED9BD48);
  v3 = sub_1AE9268E0();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    v9 = 0;
    if (!v7)
      goto LABEL_6;
LABEL_5:
    v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
    {
      v15 = (_OWORD *)(*(_QWORD *)(v2 + 48) + 48 * i);
      v16 = v15[1];
      v18[0] = *v15;
      v18[1] = v16;
      v18[2] = v15[2];
      sub_1AE55A7BC((uint64_t)v18, v3);
      if (v7)
        goto LABEL_5;
LABEL_6:
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return;
      }
      if (v12 >= v8)
        goto LABEL_22;
      v13 = v5[v12];
      ++v9;
      if (!v13)
      {
        v9 = v12 + 1;
        if (v12 + 1 >= v8)
          goto LABEL_22;
        v13 = v5[v9];
        if (!v13)
        {
          v9 = v12 + 2;
          if (v12 + 2 >= v8)
            goto LABEL_22;
          v13 = v5[v9];
          if (!v13)
          {
            v14 = v12 + 3;
            if (v14 >= v8)
            {
LABEL_22:
              swift_release();
              v17 = 1 << *(_BYTE *)(v2 + 32);
              if (v17 > 63)
                sub_1AE555CAC(0, (unint64_t)(v17 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v5 = -1 << v17;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v13 = v5[v14];
            if (!v13)
            {
              while (1)
              {
                v9 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_28;
                if (v9 >= v8)
                  goto LABEL_22;
                v13 = v5[v9];
                ++v14;
                if (v13)
                  goto LABEL_19;
              }
            }
            v9 = v14;
          }
        }
      }
LABEL_19:
      v7 = (v13 - 1) & v13;
    }
  }
  swift_release();
  *v1 = v3;
}

uint64_t sub_1AE559794()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548(&qword_1EED9BD20);
  result = sub_1AE9268E0();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = *(_QWORD *)(v2 + 56);
    v31 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & v6;
    v30 = (unint64_t)(v7 + 63) >> 6;
    v10 = result + 56;
    if ((v8 & v6) == 0)
      goto LABEL_7;
LABEL_6:
    v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v11 | (v5 << 6); ; i = __clz(__rbit64(v14)) + (v5 << 6))
    {
      v16 = *(_QWORD *)(v2 + 48) + 24 * i;
      v17 = *(_BYTE *)v16;
      v18 = *(_QWORD *)(v16 + 8);
      v19 = *(_QWORD *)(v16 + 16);
      sub_1AE926EC8();
      sub_1AE926EEC();
      sub_1AE926EF8();
      sub_1AE926EF8();
      result = sub_1AE926F10();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v10 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = *(_QWORD *)(v4 + 48) + 24 * v23;
      *(_BYTE *)v28 = v17;
      *(_QWORD *)(v28 + 8) = v18;
      *(_QWORD *)(v28 + 16) = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v9)
        goto LABEL_6;
LABEL_7:
      v13 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v13 >= v30)
        goto LABEL_32;
      v14 = v31[v13];
      ++v5;
      if (!v14)
      {
        v5 = v13 + 1;
        if (v13 + 1 >= v30)
          goto LABEL_32;
        v14 = v31[v5];
        if (!v14)
        {
          v5 = v13 + 2;
          if (v13 + 2 >= v30)
            goto LABEL_32;
          v14 = v31[v5];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v30)
            {
LABEL_32:
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_1AE555CAC(0, (unint64_t)(v29 + 63) >> 6, v31);
              else
                *v31 = -1 << v29;
              v1 = v0;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v31[v15];
            if (!v14)
            {
              while (1)
              {
                v5 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_39;
                if (v5 >= v30)
                  goto LABEL_32;
                v14 = v31[v5];
                ++v15;
                if (v14)
                  goto LABEL_20;
              }
            }
            v5 = v15;
          }
        }
      }
LABEL_20:
      v9 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1AE559A9C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548(&qword_1EED9BCE0);
  v3 = sub_1AE9268E0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    if (!v8)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + i);
      sub_1AE926EC8();
      PersonEntityTagType.rawValue.getter();
      sub_1AE925F14();
      swift_bridgeObjectRelease();
      result = sub_1AE926F10();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v22) = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v8)
        goto LABEL_6;
LABEL_7:
      v15 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_38;
      if (v15 >= v9)
        goto LABEL_32;
      v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        v12 = v15 + 1;
        if (v15 + 1 >= v9)
          goto LABEL_32;
        v16 = v6[v12];
        if (!v16)
        {
          v12 = v15 + 2;
          if (v15 + 2 >= v9)
            goto LABEL_32;
          v16 = v6[v12];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v27 = 1 << *(_BYTE *)(v2 + 32);
              if (v27 > 63)
                sub_1AE555CAC(0, (unint64_t)(v27 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v6 = -1 << v27;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v12 >= v9)
                  goto LABEL_32;
                v16 = v6[v12];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v12 = v17;
          }
        }
      }
LABEL_20:
      v8 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_1AE559D70()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  _QWORD *v39;

  sub_1AE505CD4();
  v1 = v0;
  v2 = *v0;
  sub_1AE508A88(v3, v4);
  v5 = sub_1AE56353C();
  if (*(_QWORD *)(v2 + 16))
  {
    v39 = (_QWORD *)(v2 + 56);
    sub_1AE563EC8();
    v8 = v7 & v6;
    v38 = (unint64_t)(v9 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain();
    v11 = 0;
    if (!v8)
      goto LABEL_4;
LABEL_3:
    v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (i = v12 | (v11 << 6); ; i = v18 + (v11 << 6))
    {
      v19 = v2;
      v20 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * i);
      v21 = *v20;
      v22 = v20[1];
      v23 = v20[2];
      v24 = v20[3];
      sub_1AE563880();
      swift_bridgeObjectRetain();
      sub_1AE925F14();
      sub_1AE4F66E8();
      sub_1AE4FB764();
      sub_1AE925F14();
      swift_bridgeObjectRelease();
      sub_1AE563878();
      sub_1AE563E38();
      if (((v27 << v26) & ~*(_QWORD *)(v10 + 8 * v25)) == 0)
      {
        sub_1AE5053C0();
        while (1)
        {
          sub_1AE5637B4();
          if (v31)
          {
            if ((v28 & 1) != 0)
              break;
          }
          if (v29 == v30)
            v29 = 0;
          if (*(_QWORD *)(v10 + 8 * v29) != -1)
          {
            sub_1AE4FB888();
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      sub_1AE4FC604();
LABEL_28:
      sub_1AE563CD0();
      *(_QWORD *)(v10 + v32) |= v33;
      v35 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 32 * v34);
      *v35 = v21;
      v35[1] = v22;
      v35[2] = v23;
      v35[3] = v24;
      ++*(_QWORD *)(v5 + 16);
      v2 = v19;
      if (v8)
        goto LABEL_3;
LABEL_4:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_36;
      if (v14 >= v38)
        goto LABEL_30;
      ++v11;
      if (!v39[v14])
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v38)
          goto LABEL_30;
        if (!v39[v11])
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v38)
            goto LABEL_30;
          if (!v39[v11])
          {
            v15 = v14 + 3;
            if (v15 >= v38)
            {
LABEL_30:
              swift_release();
              v1 = v0;
              v36 = 1 << *(_BYTE *)(v2 + 32);
              if (v36 > 63)
              {
                sub_1AE555CAC(0, (unint64_t)(v36 + 63) >> 6, v39);
              }
              else
              {
                sub_1AE563C70();
                *v39 = v37;
              }
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            if (!v39[v15])
            {
              while (1)
              {
                v11 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_37;
                if (v11 >= v38)
                  goto LABEL_30;
                ++v15;
                if (v39[v11])
                  goto LABEL_17;
              }
            }
            v11 = v15;
          }
        }
      }
LABEL_17:
      sub_1AE50747C();
      v8 = v17 & v16;
    }
  }
  swift_release();
  *v1 = v5;
  sub_1AE4F778C();
}

uint64_t sub_1AE559FFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548(&qword_1EED9BCF8);
  result = sub_1AE9268E0();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    if (!v9)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      sub_1AE926EC8();
      sub_1AE926ED4();
      result = sub_1AE926F10();
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v19 = result & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          v24 = v20 == v23;
          if (v20 == v23)
            v20 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v20);
          if (v25 != -1)
          {
            v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
      ++*(_QWORD *)(v4 + 16);
      if (v9)
        goto LABEL_6;
LABEL_7:
      v14 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v14 >= v10)
        goto LABEL_32;
      v15 = v6[v14];
      ++v5;
      if (!v15)
      {
        v5 = v14 + 1;
        if (v14 + 1 >= v10)
          goto LABEL_32;
        v15 = v6[v5];
        if (!v15)
        {
          v5 = v14 + 2;
          if (v14 + 2 >= v10)
            goto LABEL_32;
          v15 = v6[v5];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v10)
            {
LABEL_32:
              v26 = 1 << *(_BYTE *)(v2 + 32);
              if (v26 > 63)
                sub_1AE555CAC(0, (unint64_t)(v26 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v6 = -1 << v26;
              v1 = v0;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v6[v16];
            if (!v15)
            {
              while (1)
              {
                v5 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v5 >= v10)
                  goto LABEL_32;
                v15 = v6[v5];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v5 = v16;
          }
        }
      }
LABEL_20:
      v9 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1AE55A2A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  const void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _BYTE v28[144];
  _BYTE __dst[144];

  v1 = v0;
  v2 = *v0;
  sub_1AE501548(&qword_1EED9BD50);
  v3 = sub_1AE9268E0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v27 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (const void *)(*(_QWORD *)(v2 + 48) + 144 * i);
      memcpy(__dst, v17, sizeof(__dst));
      memcpy(v28, v17, sizeof(v28));
      sub_1AE926EC8();
      KnosisFact.hash(into:)();
      result = sub_1AE926F10();
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v19 = result & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v9 + 8 * (v19 >> 6))) == 0)
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          v24 = v20 == v23;
          if (v20 == v23)
            v20 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v9 + 8 * v20);
          if (v25 != -1)
          {
            v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v9 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = (uint64_t)memcpy((void *)(*(_QWORD *)(v4 + 48) + 144 * v21), __dst, 0x90uLL);
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v27[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v27[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v27[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v26 = 1 << *(_BYTE *)(v2 + 32);
              if (v26 > 63)
                sub_1AE555CAC(0, (unint64_t)(v26 + 63) >> 6, v27);
              else
                *v27 = -1 << v26;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v27[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v27[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_1AE55A5A0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  int64_t i;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v4 = *v2;
  sub_1AE508A88(a1, a2);
  sub_1AE56353C();
  sub_1AE5637C0();
  if (v5)
  {
    v6 = 0;
    v8 = (uint64_t *)(v4 + 56);
    v7 = *(_QWORD *)(v4 + 56);
    v9 = 1 << *(_BYTE *)(v4 + 32);
    v26 = -1 << v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & v7;
    v27 = 1 << *(_BYTE *)(v4 + 32);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v2 + 7;
    if ((v10 & v7) == 0)
      goto LABEL_7;
LABEL_6:
    sub_1AE563E0C();
    for (i = v14 | (v6 << 6); ; i = v18 + (v6 << 6))
    {
      v19 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i);
      v20 = sub_1AE926EBC() & ~(-1 << *((_BYTE *)v2 + 32));
      if (((-1 << v20) & ~v13[v20 >> 6]) == 0)
      {
        sub_1AE5053C0();
        while (1)
        {
          sub_1AE5637B4();
          if (v25)
          {
            if ((v22 & 1) != 0)
              break;
          }
          if (v23 == v24)
            v23 = 0;
          if (v13[v23] != -1)
          {
            sub_1AE4FB888();
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return;
      }
      sub_1AE4FC604();
LABEL_31:
      *(uint64_t *)((char *)v13 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_QWORD *)(v2[6] + 8 * v21) = v19;
      ++v2[2];
      if (v11)
        goto LABEL_6;
LABEL_7:
      v16 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_39;
      if (v16 >= v12)
        goto LABEL_33;
      ++v6;
      if (!v8[v16])
      {
        v6 = v16 + 1;
        if (v16 + 1 >= v12)
          goto LABEL_33;
        if (!v8[v6])
        {
          v6 = v16 + 2;
          if (v16 + 2 >= v12)
            goto LABEL_33;
          if (!v8[v6])
          {
            v17 = v16 + 3;
            if (v17 >= v12)
            {
LABEL_33:
              if (v27 > 63)
                sub_1AE555CAC(0, v12, (_QWORD *)(v4 + 56));
              else
                *v8 = v26;
              v3 = v2;
              *(_QWORD *)(v4 + 16) = 0;
              break;
            }
            if (!v8[v17])
            {
              while (1)
              {
                v6 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_40;
                if (v6 >= v12)
                  goto LABEL_33;
                ++v17;
                if (v8[v6])
                  goto LABEL_20;
              }
            }
            v6 = v17;
          }
        }
      }
LABEL_20:
      sub_1AE563E4C();
    }
  }
  sub_1AE50A24C();
  *v3 = v2;
}

__n128 sub_1AE55A7BC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __n128 result;

  sub_1AE926EC8();
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    sub_1AE926EE0();
  }
  else
  {
    sub_1AE926EE0();
    sub_1AE926EF8();
  }
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  sub_1AE926F10();
  v4 = sub_1AE92685C();
  *(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v4;
  v5 = *(_QWORD *)(a2 + 48) + 48 * v4;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 16) = v6;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v5 + 32) = result;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_1AE55A8EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char v5;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  sub_1AE563B60();
  if (!v10 & v9 && (v5 & 1) != 0)
    goto LABEL_14;
  if ((v5 & 1) != 0)
  {
    sub_1AE55791C();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1AE55E0AC(v6);
      goto LABEL_14;
    }
    sub_1AE55E36C();
  }
  v11 = *v2;
  sub_1AE500978();
  sub_1AE926EF8();
  sub_1AE4F905C();
  sub_1AE5634AC();
  if ((v12 & 1) != 0)
  {
    if (*(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) == a1)
    {
LABEL_13:
      sub_1AE926DD8();
      __break(1u);
    }
    else
    {
      while (1)
      {
        sub_1AE5637F4();
        if ((v14 & 1) == 0)
          break;
        if (*(_QWORD *)(v13 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  sub_1AE563690();
  *(_QWORD *)(v16 + 8 * a2) = a1;
  v17 = *(_QWORD *)(v15 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v15 + 16) = v19;
    sub_1AE4FE988();
  }
}

uint64_t sub_1AE55A9E4(uint64_t result, unint64_t i, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_21;
  if ((a3 & 1) != 0)
  {
    sub_1AE557ABC();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1AE55CE74();
      goto LABEL_21;
    }
    sub_1AE55E4E0();
  }
  v9 = *v3;
  sub_1AE926EC8();
  v10 = *(_QWORD *)v6;
  v11 = *(_QWORD *)(v6 + 8);
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  result = sub_1AE926F10();
  v12 = -1 << *(_BYTE *)(v9 + 32);
  i = result & ~v12;
  v13 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v14 = *(_QWORD *)(v9 + 48);
    v15 = (_QWORD *)(v14 + 40 * i);
    if (*v15 == v10 && v15[1] == v11)
      goto LABEL_24;
    result = sub_1AE926D60();
    if ((result & 1) != 0)
      goto LABEL_24;
    v17 = ~v12;
    for (i = (i + 1) & v17; ((*(_QWORD *)(v13 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v17)
    {
      v18 = (_QWORD *)(v14 + 40 * i);
      if (*v18 == v10 && v18[1] == v11)
        goto LABEL_24;
      result = sub_1AE926D60();
      if ((result & 1) != 0)
        goto LABEL_24;
    }
  }
LABEL_21:
  v20 = *v4;
  *(_QWORD *)(*v4 + 8 * (i >> 6) + 56) |= 1 << i;
  v21 = *(_QWORD *)(v20 + 48) + 40 * i;
  v22 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v6;
  *(_OWORD *)(v21 + 16) = v22;
  *(_WORD *)(v21 + 32) = *(_WORD *)(v6 + 32);
  v23 = *(_QWORD *)(v20 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v20 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_24:
  result = sub_1AE926DD8();
  __break(1u);
  return result;
}

uint64_t sub_1AE55ABC8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1AE557DEC();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1AE55D040();
      goto LABEL_22;
    }
    sub_1AE55E7D8();
  }
  v11 = *v4;
  sub_1AE926EC8();
  sub_1AE925F14();
  result = sub_1AE926F10();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1AE926D60(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1AE926DD8();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1AE926D60();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1AE55AD60(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unsigned __int8 v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _BYTE v16[72];

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1AE5580C4();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_1AE55D1F0();
        goto LABEL_24;
      }
      sub_1AE55EA80();
    }
    v8 = *v3;
    sub_1AE926EC8();
    sub_1AE575CBC((uint64_t)v16, v5);
    result = sub_1AE926F10();
    v9 = -1 << *(_BYTE *)(v8 + 32);
    a2 = result & ~v9;
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v10 = ~v9;
      do
      {
        v11 = *(unsigned __int8 *)(*(_QWORD *)(v8 + 48) + a2);
        if (v11 >> 6)
        {
          if (v11 >> 6 == 1)
          {
            if ((v5 & 0xC0) == 0x40)
              __asm { BR              X9 }
          }
          else if ((_DWORD)v11 == 128)
          {
            if (v5 == 128)
              goto LABEL_27;
          }
          else if ((_DWORD)v11 == 129)
          {
            if (v5 == 129)
              goto LABEL_27;
          }
          else if (v5 == 130)
          {
LABEL_27:
            sub_1AE926DD8();
            __break(1u);
            JUMPOUT(0x1AE55B1A0);
          }
        }
        else if (v5 < 0x40u)
        {
          __asm { BR              X9 }
        }
        a2 = (a2 + 1) & v10;
      }
      while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_24:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
    JUMPOUT(0x1AE55B184);
  }
  *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1AE55B200(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1AE55859C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1AE55D384();
      goto LABEL_22;
    }
    sub_1AE55EF1C();
  }
  v11 = *v4;
  sub_1AE926EC8();
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  result = sub_1AE926F10();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1AE926D60(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1AE926DD8();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1AE926D60();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_1AE55B3A8(char a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  _BYTE v15[72];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1AE558884();
    }
    else
    {
      if (v7 > v6)
      {
        sub_1AE55DE50(&qword_1ED30FCD0);
        goto LABEL_10;
      }
      sub_1AE55F1D0();
    }
    v8 = *v3;
    sub_1AE926EC8();
    sub_1AE5E80C4((uint64_t)v15, a1);
    a2 = sub_1AE926F10() & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v14;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1AE55B730);
  }
  *(_QWORD *)(v9 + 16) = v12;
}

uint64_t sub_1AE55B794(uint64_t result, unint64_t i, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_21;
  if ((a3 & 1) != 0)
  {
    sub_1AE558C80();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1AE55D534();
      goto LABEL_21;
    }
    sub_1AE55F598();
  }
  v9 = *v3;
  sub_1AE926EC8();
  v10 = *(_QWORD *)(v6 + 16);
  v11 = *(_QWORD *)(v6 + 24);
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  result = sub_1AE926F10();
  v12 = -1 << *(_BYTE *)(v9 + 32);
  i = result & ~v12;
  v13 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v14 = *(_QWORD *)(v9 + 48);
    v15 = v14 + 40 * i;
    if (*(_QWORD *)(v15 + 16) == v10 && *(_QWORD *)(v15 + 24) == v11)
      goto LABEL_24;
    result = sub_1AE926D60();
    if ((result & 1) != 0)
      goto LABEL_24;
    v17 = ~v12;
    for (i = (i + 1) & v17; ((*(_QWORD *)(v13 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v17)
    {
      v18 = v14 + 40 * i;
      if (*(_QWORD *)(v18 + 16) == v10 && *(_QWORD *)(v18 + 24) == v11)
        goto LABEL_24;
      result = sub_1AE926D60();
      if ((result & 1) != 0)
        goto LABEL_24;
    }
  }
LABEL_21:
  v20 = *v4;
  *(_QWORD *)(*v4 + 8 * (i >> 6) + 56) |= 1 << i;
  v21 = *(_QWORD *)(v20 + 48) + 40 * i;
  v22 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v6;
  *(_OWORD *)(v21 + 16) = v22;
  *(_BYTE *)(v21 + 32) = *(_BYTE *)(v6 + 32);
  v23 = *(_QWORD *)(v20 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v20 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_24:
  result = sub_1AE926DD8();
  __break(1u);
  return result;
}

uint64_t sub_1AE55B978(uint64_t *__src, unint64_t i, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE __dst[88];

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_21;
  if ((a3 & 1) != 0)
  {
    sub_1AE558FB0();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1AE55D700();
      goto LABEL_21;
    }
    sub_1AE55F890();
  }
  v9 = *v3;
  memcpy(__dst, __src, sizeof(__dst));
  sub_1AE926EC8();
  KnosisInternalFact.hash(into:)((uint64_t)&v26);
  v10 = sub_1AE926F10();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  i = v10 & ~v11;
  v12 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v13 = *__src;
    v14 = __src[1];
    v15 = *(_QWORD *)(v9 + 48);
    v16 = (_QWORD *)(v15 + 88 * i);
    v17 = *v16 == *__src && v16[1] == v14;
    if (v17 || (sub_1AE926D60() & 1) != 0)
      goto LABEL_24;
    v18 = ~v11;
    for (i = (i + 1) & v18; ((*(_QWORD *)(v12 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v18)
    {
      v19 = (_QWORD *)(v15 + 88 * i);
      v20 = *v19 == v13 && v19[1] == v14;
      if (v20 || (sub_1AE926D60() & 1) != 0)
        goto LABEL_24;
    }
  }
LABEL_21:
  v21 = *v4;
  *(_QWORD *)(*v4 + 8 * (i >> 6) + 56) |= 1 << i;
  result = (uint64_t)memcpy((void *)(*(_QWORD *)(v21 + 48) + 88 * i), __src, 0x58uLL);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_24:
  result = sub_1AE926DD8();
  __break(1u);
  return result;
}

void sub_1AE55BB58(char a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t *v22;
  char v23;

  v5 = a1 & 1;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v23 = a1 & 1;
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_27;
  if ((a3 & 1) != 0)
  {
    sub_1AE5592B4();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1AE55D940();
      goto LABEL_27;
    }
    sub_1AE55FB80();
  }
  v8 = *v3;
  sub_1AE54FB90();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v10 & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = ~v9;
    if (v5)
      v12 = 0x7241746E65746E69;
    else
      v12 = 0x79676F6C6F746E6FLL;
    if (v5)
      v13 = 0xE900000000000067;
    else
      v13 = 0xE800000000000000;
    do
    {
      v14 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + a2) ? 0x7241746E65746E69 : 0x79676F6C6F746E6FLL;
      v15 = *(_BYTE *)(*(_QWORD *)(v8 + 48) + a2) ? 0xE900000000000067 : 0xE800000000000000;
      if (v14 == v12 && v15 == v13)
        goto LABEL_30;
      v17 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
        goto LABEL_31;
      a2 = (a2 + 1) & v11;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_27:
  v18 = *v22;
  *(_QWORD *)(*v22 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v18 + 48) + a2) = v23;
  v19 = *(_QWORD *)(v18 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (!v20)
  {
    *(_QWORD *)(v18 + 16) = v21;
    return;
  }
  __break(1u);
LABEL_30:
  swift_bridgeObjectRelease_n();
LABEL_31:
  sub_1AE926DD8();
  __break(1u);
}

uint64_t sub_1AE55BD44(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  BOOL v24;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v33 = (_OWORD *)result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1AE5595A8();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_1AE55DAD4();
        goto LABEL_30;
      }
      sub_1AE55FE40();
    }
    v8 = *v3;
    sub_1AE926EC8();
    v9 = *(_QWORD *)v5;
    v10 = *(unsigned __int8 *)(v5 + 8);
    sub_1AE926EE0();
    if (v10 != 1)
      sub_1AE926EF8();
    v11 = *(_QWORD *)(v5 + 16);
    v12 = *(_QWORD *)(v5 + 24);
    v13 = *(_QWORD *)(v5 + 32);
    v14 = *(_QWORD *)(v5 + 40);
    swift_bridgeObjectRetain();
    v35 = v11;
    sub_1AE925F14();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1AE925F14();
    swift_bridgeObjectRelease();
    result = sub_1AE926F10();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    a2 = result & ~v15;
    v16 = v8 + 56;
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v34 = v9;
      v17 = ~v15;
      v18 = *(_QWORD *)(v8 + 48);
      do
      {
        v19 = v18 + 48 * a2;
        result = *(_QWORD *)(v19 + 16);
        v20 = *(_QWORD *)(v19 + 24);
        v21 = *(_QWORD *)(v19 + 32);
        v22 = *(_QWORD *)(v19 + 40);
        if ((*(_BYTE *)(v19 + 8) & 1) != 0)
        {
          if (!v10)
            goto LABEL_29;
        }
        else
        {
          if (*(_QWORD *)v19 == v34)
            v23 = v10;
          else
            v23 = 1;
          if ((v23 & 1) != 0)
            goto LABEL_29;
        }
        v24 = result == v35 && v20 == v12;
        if (v24 || (result = sub_1AE926D60(), (result & 1) != 0))
        {
          if (v21 == v13 && v22 == v14)
            goto LABEL_33;
          result = sub_1AE926D60();
          if ((result & 1) != 0)
            goto LABEL_33;
        }
LABEL_29:
        a2 = (a2 + 1) & v17;
      }
      while (((*(_QWORD *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_30:
  v26 = *v32;
  *(_QWORD *)(*v32 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v27 = (_OWORD *)(*(_QWORD *)(v26 + 48) + 48 * a2);
  v28 = v33[1];
  *v27 = *v33;
  v27[1] = v28;
  v27[2] = v33[2];
  v29 = *(_QWORD *)(v26 + 16);
  v30 = __OFADD__(v29, 1);
  v31 = v29 + 1;
  if (v30)
  {
    __break(1u);
LABEL_33:
    result = sub_1AE926DD8();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v26 + 16) = v31;
  }
  return result;
}

uint64_t sub_1AE55BF98(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v9 = result;
  v10 = *(_QWORD *)(*v5 + 16);
  v11 = *(_QWORD *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0)
    goto LABEL_18;
  if ((a5 & 1) != 0)
  {
    sub_1AE559794();
  }
  else
  {
    if (v11 > v10)
    {
      result = (uint64_t)sub_1AE55DCA8();
      goto LABEL_18;
    }
    sub_1AE560000();
  }
  v12 = *v5;
  sub_1AE926EC8();
  sub_1AE926EEC();
  sub_1AE926EF8();
  sub_1AE926EF8();
  result = sub_1AE926F10();
  v13 = -1 << *(_BYTE *)(v12 + 32);
  a4 = result & ~v13;
  if (((*(_QWORD *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v14 = ~v13;
    do
    {
      v15 = (unsigned __int8 *)(*(_QWORD *)(v12 + 48) + 24 * a4);
      v16 = *v15;
      v18 = *((_QWORD *)v15 + 1);
      v17 = *((_QWORD *)v15 + 2);
      v19 = v16 == v9 && v18 == a2;
      if (v19 && v17 == a3)
        goto LABEL_21;
      a4 = (a4 + 1) & v14;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_18:
  v21 = *v5;
  *(_QWORD *)(*v5 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v22 = *(_QWORD *)(v21 + 48) + 24 * a4;
  *(_BYTE *)v22 = v9;
  *(_QWORD *)(v22 + 8) = a2;
  *(_QWORD *)(v22 + 16) = a3;
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_21:
  result = sub_1AE926DD8();
  __break(1u);
  return result;
}

void sub_1AE55C124(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1AE559A9C();
    }
    else
    {
      if (v7 > v6)
      {
        sub_1AE55DE50(&qword_1EED9BCE0);
        goto LABEL_10;
      }
      sub_1AE5602D0();
    }
    v8 = *v3;
    sub_1AE54FCA8(*(_QWORD *)(*v3 + 40), a1, (void (*)(uint64_t))PersonEntityTagType.rawValue.getter);
    a2 = v9 & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v10 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v10 + 48) + a2) = a1;
  v11 = *(_QWORD *)(v10 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
    JUMPOUT(0x1AE55C780);
  }
  *(_QWORD *)(v10 + 16) = v13;
}

void sub_1AE55C88C()
{
  uint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  sub_1AE505CD4();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  sub_1AE563B60();
  if (!v25 & v15 && (v11 & 1) != 0)
    goto LABEL_22;
  if ((v11 & 1) != 0)
  {
    sub_1AE559D70();
  }
  else
  {
    if (v14 > v13)
    {
      sub_1AE55DF40(v12);
      goto LABEL_22;
    }
    sub_1AE560570();
  }
  v16 = *v0;
  sub_1AE563880();
  sub_1AE4F6730();
  sub_1AE563DE8();
  sub_1AE4F81B8();
  sub_1AE4FB75C();
  sub_1AE500980();
  sub_1AE4F6648();
  v17 = sub_1AE563878();
  v18 = -1 << *(_BYTE *)(v16 + 32);
  v2 = v17 & ~v18;
  v19 = v16 + 56;
  if (((*(_QWORD *)(v16 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
  {
    v20 = ~v18;
    v21 = *(_QWORD *)(v16 + 48);
    do
    {
      v22 = (_QWORD *)(v21 + 32 * v2);
      v23 = v22[2];
      v24 = v22[3];
      v25 = *v22 == v10 && v22[1] == v8;
      if (v25 || (sub_1AE4FB6F0() & 1) != 0)
      {
        v26 = v23 == v6 && v24 == v4;
        if (v26 || (sub_1AE4FB6F0() & 1) != 0)
          goto LABEL_25;
      }
      v2 = (v2 + 1) & v20;
    }
    while (((*(_QWORD *)(v19 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0);
  }
LABEL_22:
  sub_1AE563690();
  v29 = (_QWORD *)(v28 + 32 * v2);
  *v29 = v10;
  v29[1] = v8;
  v29[2] = v6;
  v29[3] = v4;
  v30 = *(_QWORD *)(v27 + 16);
  v31 = __OFADD__(v30, 1);
  v32 = v30 + 1;
  if (!v31)
  {
    *(_QWORD *)(v27 + 16) = v32;
    sub_1AE4F778C();
    return;
  }
  __break(1u);
LABEL_25:
  sub_1AE926DD8();
  __break(1u);
}

void sub_1AE55CA18(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1AE559FFC();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1AE55E0AC(&qword_1EED9BCF8);
      goto LABEL_14;
    }
    sub_1AE5607A8();
  }
  v8 = *v3;
  sub_1AE926EC8();
  sub_1AE926ED4();
  v9 = sub_1AE926F10();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v11 + 8 * a2) == a1)
    {
LABEL_13:
      sub_1AE926DD8();
      __break(1u);
    }
    else
    {
      v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v11 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v13 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * a2) = a1;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    *(_QWORD *)(v13 + 16) = v16;
}

uint64_t sub_1AE55CB74(uint64_t *__src, unint64_t i, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _BYTE __dst[144];

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_21;
  if ((a3 & 1) != 0)
  {
    sub_1AE55A2A0();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1AE55E190();
      goto LABEL_21;
    }
    sub_1AE560A1C();
  }
  v9 = *v3;
  memcpy(__dst, __src, sizeof(__dst));
  sub_1AE926EC8();
  KnosisFact.hash(into:)();
  v10 = sub_1AE926F10();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  i = v10 & ~v11;
  v12 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v13 = *__src;
    v14 = __src[1];
    v15 = *(_QWORD *)(v9 + 48);
    v16 = (_QWORD *)(v15 + 144 * i);
    v17 = *v16 == *__src && v16[1] == v14;
    if (v17 || (sub_1AE926D60() & 1) != 0)
      goto LABEL_24;
    v18 = ~v11;
    for (i = (i + 1) & v18; ((*(_QWORD *)(v12 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v18)
    {
      v19 = (_QWORD *)(v15 + 144 * i);
      v20 = *v19 == v13 && v19[1] == v14;
      if (v20 || (sub_1AE926D60() & 1) != 0)
        goto LABEL_24;
    }
  }
LABEL_21:
  v21 = *v4;
  *(_QWORD *)(*v4 + 8 * (i >> 6) + 56) |= 1 << i;
  result = (uint64_t)memcpy((void *)(*(_QWORD *)(v21 + 48) + 144 * i), __src, 0x90uLL);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_24:
  result = sub_1AE926DD8();
  __break(1u);
  return result;
}

void sub_1AE55CD54(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  char v5;
  uint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  sub_1AE563B60();
  if (!v10 & v9 && (v5 & 1) != 0)
    goto LABEL_15;
  if ((v5 & 1) != 0)
  {
    sub_1AE55A5A0(v7 + 1, v6);
  }
  else
  {
    if (v8 > v7)
    {
      sub_1AE55E0AC(v6);
      goto LABEL_15;
    }
    sub_1AE560CEC();
  }
  v11 = *v2;
  v12 = sub_1AE926EBC();
  v13 = -1 << *(_BYTE *)(v11 + 32);
  a2 = v12 & ~v13;
  if (((*(_QWORD *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    if (*(_QWORD *)(v14 + 8 * a2) == a1)
    {
LABEL_14:
      sub_1AE926DD8();
      __break(1u);
    }
    else
    {
      v15 = ~v13;
      while (1)
      {
        a2 = (a2 + 1) & v15;
        if (((*(_QWORD *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v14 + 8 * a2) == a1)
          goto LABEL_14;
      }
    }
  }
LABEL_15:
  sub_1AE563690();
  *(_QWORD *)(v17 + 8 * a2) = a1;
  v18 = *(_QWORD *)(v16 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v20;
}

void *sub_1AE55CE74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  sub_1AE501548((uint64_t *)&unk_1ED3195F8);
  v2 = *v0;
  v3 = sub_1AE9268D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 5 * i;
    v21 = *(_QWORD *)(v2 + 48) + 8 * v20;
    v23 = *(_QWORD *)v21;
    v22 = *(_QWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    LOWORD(v21) = *(_WORD *)(v21 + 32);
    v26 = *(_QWORD *)(v4 + 48) + 8 * v20;
    *(_QWORD *)v26 = v23;
    *(_QWORD *)(v26 + 8) = v22;
    *(_QWORD *)(v26 + 16) = v24;
    *(_QWORD *)(v26 + 24) = v25;
    *(_WORD *)(v26 + 32) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AE55D040()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  sub_1AE501548(&qword_1ED31AD70);
  v2 = *v0;
  v3 = sub_1AE9268D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AE55D1F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1AE501548(&qword_1EED9BD38);
  v2 = *v0;
  v3 = sub_1AE9268D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + i) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AE55D384()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  sub_1AE501548(&qword_1EED9BD58);
  v2 = *v0;
  v3 = sub_1AE9268D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AE55D534()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  sub_1AE501548((uint64_t *)&unk_1ED31B880);
  v2 = *v0;
  v3 = sub_1AE9268D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 5 * i;
    v21 = *(_QWORD *)(v2 + 48) + 8 * v20;
    v23 = *(_QWORD *)v21;
    v22 = *(_QWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    LOBYTE(v21) = *(_BYTE *)(v21 + 32);
    v26 = *(_QWORD *)(v4 + 48) + 8 * v20;
    *(_QWORD *)v26 = v23;
    *(_QWORD *)(v26 + 8) = v22;
    *(_QWORD *)(v26 + 16) = v24;
    *(_QWORD *)(v26 + 24) = v25;
    *(_BYTE *)(v26 + 32) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AE55D700()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t *v28;
  void *__src;

  sub_1AE501548(&qword_1EED9BD00);
  v28 = v0;
  v1 = *v0;
  v2 = sub_1AE9268D4();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v28 = v3;
    return result;
  }
  result = (void *)(v2 + 56);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 56);
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v5)
    result = memmove(result, __src, 8 * v5);
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  if (!v10)
    goto LABEL_12;
LABEL_11:
  v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v12 | (v7 << 6); ; i = __clz(__rbit64(v15)) + (v7 << 6))
  {
    v17 = 88 * i;
    v18 = *(_QWORD *)(v1 + 48) + v17;
    v19 = *(_QWORD *)(v18 + 8);
    v20 = *(_QWORD *)(v18 + 16);
    v21 = *(_QWORD *)(v18 + 24);
    v22 = *(_QWORD *)(v18 + 32);
    v23 = *(_QWORD *)(v18 + 72);
    v24 = *(_QWORD *)(v18 + 80);
    v25 = *(_QWORD *)(v3 + 48) + v17;
    v26 = *(_OWORD *)(v18 + 40);
    v27 = *(_OWORD *)(v18 + 56);
    *(_QWORD *)v25 = *(_QWORD *)v18;
    *(_QWORD *)(v25 + 8) = v19;
    *(_QWORD *)(v25 + 16) = v20;
    *(_QWORD *)(v25 + 24) = v21;
    *(_QWORD *)(v25 + 32) = v22;
    *(_OWORD *)(v25 + 40) = v26;
    *(_OWORD *)(v25 + 56) = v27;
    *(_QWORD *)(v25 + 72) = v23;
    *(_QWORD *)(v25 + 80) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_11;
LABEL_12:
    v14 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v14 >= v11)
      goto LABEL_28;
    v15 = *((_QWORD *)__src + v14);
    ++v7;
    if (!v15)
    {
      v7 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_28;
      v15 = *((_QWORD *)__src + v7);
      if (!v15)
      {
        v7 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_28;
        v15 = *((_QWORD *)__src + v7);
        if (!v15)
          break;
      }
    }
LABEL_25:
    v10 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    goto LABEL_28;
  v15 = *((_QWORD *)__src + v16);
  if (v15)
  {
    v7 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v7 >= v11)
      goto LABEL_28;
    v15 = *((_QWORD *)__src + v7);
    ++v16;
    if (v15)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AE55D940()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1AE501548(&qword_1ED30FCD8);
  v2 = *v0;
  v3 = sub_1AE9268D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + i) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AE55DAD4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  sub_1AE501548(&qword_1EED9BD48);
  v2 = *v0;
  v3 = sub_1AE9268D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 3 * i;
    v21 = *(_QWORD *)(v2 + 48) + 16 * v20;
    v22 = *(_BYTE *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v23 = *(_QWORD *)(v21 + 24);
    v25 = *(_QWORD *)(v21 + 32);
    v26 = *(_QWORD *)(v21 + 40);
    v27 = *(_QWORD *)(v4 + 48) + 16 * v20;
    *(_QWORD *)v27 = *(_QWORD *)v21;
    *(_BYTE *)(v27 + 8) = v22;
    *(_QWORD *)(v27 + 16) = v24;
    *(_QWORD *)(v27 + 24) = v23;
    *(_QWORD *)(v27 + 32) = v25;
    *(_QWORD *)(v27 + 40) = v26;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1AE55DCA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v1 = v0;
  sub_1AE501548(&qword_1EED9BD20);
  v2 = *v0;
  v3 = sub_1AE9268D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    v19 = 3 * i;
    v20 = *(_QWORD *)(v2 + 48) + 8 * v19;
    v21 = *(_OWORD *)(v20 + 8);
    v22 = *(_QWORD *)(v4 + 48) + 8 * v19;
    *(_BYTE *)v22 = *(_BYTE *)v20;
    *(_OWORD *)(v22 + 8) = v21;
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1AE55DE50(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1AE563A28(a1);
  sub_1AE506200();
  sub_1AE5637C0();
  if (v5)
  {
    v6 = (void *)sub_1AE50A2CC();
    if (v9)
      v10 = (unint64_t)v6 >= v8;
    else
      v10 = 1;
    if (v10)
      sub_1AE563518(v6, v7);
    sub_1AE4FB84C();
    if (!v13)
      goto LABEL_10;
LABEL_9:
    sub_1AE563494();
    while (1)
    {
      *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v15);
      if (v14)
        goto LABEL_9;
LABEL_10:
      v16 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v16 >= v11)
        goto LABEL_25;
      if (!*(_QWORD *)(v4 + 8 * v16))
      {
        if (v12 + 2 >= v11)
          goto LABEL_25;
        if (!*(_QWORD *)(v4 + 8 * (v12 + 2)))
        {
          if (v12 + 3 >= v11)
            goto LABEL_25;
          if (!*(_QWORD *)(v4 + 8 * (v12 + 3)))
          {
            v17 = v12 + 4;
            if (v12 + 4 >= v11)
              goto LABEL_25;
            if (!*(_QWORD *)(v4 + 8 * v17))
              break;
          }
        }
      }
LABEL_22:
      sub_1AE563454();
    }
    while (1)
    {
      v18 = v17 + 1;
      if (__OFADD__(v17, 1))
        break;
      if (v18 >= v11)
        goto LABEL_25;
      ++v17;
      if (*(_QWORD *)(v4 + 8 * v18))
        goto LABEL_22;
    }
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    sub_1AE50A24C();
    *v1 = v2;
    sub_1AE4F6624();
  }
}

void *sub_1AE55DF40(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  char v9;
  BOOL v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  sub_1AE563A28(a1);
  sub_1AE506200();
  sub_1AE5637C0();
  if (!v5)
  {
LABEL_28:
    result = (void *)sub_1AE50A24C();
    *v1 = v2;
    return result;
  }
  result = (void *)sub_1AE50A2CC();
  if (v9)
    v10 = (unint64_t)result >= v8;
  else
    v10 = 1;
  if (v10)
    result = sub_1AE563518(result, v7);
  v11 = 0;
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v3 + 16);
  v12 = 1 << *(_BYTE *)(v3 + 32);
  v13 = *(_QWORD *)(v3 + 56);
  v14 = -1;
  if (v12 < 64)
    v14 = ~(-1 << v12);
  v15 = v14 & v13;
  v16 = (unint64_t)(v12 + 63) >> 6;
  if ((v14 & v13) == 0)
    goto LABEL_12;
LABEL_11:
  v17 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v17 | (v11 << 6); ; i = v23 + (v11 << 6))
  {
    v24 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 32 * i);
    v25 = v24[1];
    v26 = v24[2];
    v27 = v24[3];
    v28 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 32 * i);
    *v28 = *v24;
    v28[1] = v25;
    v28[2] = v26;
    v28[3] = v27;
    swift_bridgeObjectRetain();
    result = (void *)sub_1AE4F6708();
    if (v15)
      goto LABEL_11;
LABEL_12:
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v16)
      goto LABEL_28;
    ++v11;
    if (!*(_QWORD *)(v4 + 8 * v19))
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v16)
        goto LABEL_28;
      if (!*(_QWORD *)(v4 + 8 * v11))
      {
        v11 = v19 + 2;
        if (v19 + 2 >= v16)
          goto LABEL_28;
        if (!*(_QWORD *)(v4 + 8 * v11))
          break;
      }
    }
LABEL_25:
    sub_1AE50747C();
    v15 = v22 & v21;
  }
  v20 = v19 + 3;
  if (v20 >= v16)
    goto LABEL_28;
  if (*(_QWORD *)(v4 + 8 * v20))
  {
    v11 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v11 >= v16)
      goto LABEL_28;
    ++v20;
    if (*(_QWORD *)(v4 + 8 * v11))
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1AE55E0AC(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE563A28(a1);
  sub_1AE506200();
  sub_1AE5637C0();
  if (v4)
  {
    v5 = (void *)sub_1AE50A2CC();
    if (v8)
      v9 = (unint64_t)v5 >= v7;
    else
      v9 = 1;
    if (v9)
      sub_1AE563518(v5, v6);
    sub_1AE4FB84C();
    if (!v12)
      goto LABEL_10;
LABEL_9:
    sub_1AE563494();
    while (1)
    {
      sub_1AE563D10();
      if (v16)
        goto LABEL_9;
LABEL_10:
      v13 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v13 >= v10)
        goto LABEL_25;
      if (!*(_QWORD *)(v3 + 8 * v13))
      {
        if (v11 + 2 >= v10)
          goto LABEL_25;
        if (!*(_QWORD *)(v3 + 8 * (v11 + 2)))
        {
          if (v11 + 3 >= v10)
            goto LABEL_25;
          if (!*(_QWORD *)(v3 + 8 * (v11 + 3)))
          {
            v14 = v11 + 4;
            if (v11 + 4 >= v10)
              goto LABEL_25;
            if (!*(_QWORD *)(v3 + 8 * v14))
              break;
          }
        }
      }
LABEL_22:
      sub_1AE563454();
    }
    while (1)
    {
      v15 = v14 + 1;
      if (__OFADD__(v14, 1))
        break;
      if (v15 >= v10)
        goto LABEL_25;
      ++v14;
      if (*(_QWORD *)(v3 + 8 * v15))
        goto LABEL_22;
    }
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    sub_1AE50A24C();
    *v1 = v2;
    sub_1AE4F6624();
  }
}

void *sub_1AE55E190()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  const void *v21;
  _BYTE v22[144];

  v1 = v0;
  sub_1AE501548(&qword_1EED9BD50);
  v2 = *v0;
  v3 = sub_1AE9268D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 9 * i;
    v21 = (const void *)(*(_QWORD *)(v2 + 48) + 144 * i);
    memcpy(v22, v21, sizeof(v22));
    memmove((void *)(*(_QWORD *)(v4 + 48) + 16 * v20), v21, 0x90uLL);
    result = (void *)sub_1AE525A98((uint64_t)v22);
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1AE55E36C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1AE5633B8();
  v3 = v0;
  v4 = *v0;
  sub_1AE508A88(v5, v6);
  v7 = sub_1AE56354C();
  if (!*(_QWORD *)(v4 + 16))
  {
    sub_1AE4F6700();
LABEL_30:
    *v3 = v7;
    sub_1AE500988();
    return;
  }
  v8 = 0;
  v9 = v4 + 56;
  sub_1AE56346C();
  if (!v1)
    goto LABEL_4;
LABEL_3:
  sub_1AE5639E8();
  while (1)
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v10);
    sub_1AE500978();
    sub_1AE563EB0();
    sub_1AE4F905C();
    sub_1AE563798();
    if (v14)
    {
      sub_1AE5053C0();
      while (1)
      {
        sub_1AE5637B4();
        if (v14)
        {
          if ((v16 & 1) != 0)
            break;
        }
        if (v17 == v18)
          v17 = 0;
        if (*(_QWORD *)(v7 + 56 + 8 * v17) != -1)
        {
          sub_1AE4FB888();
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    sub_1AE4FC604();
LABEL_26:
    sub_1AE56358C(v15);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v19) = v13;
    ++*(_QWORD *)(v7 + 16);
    if (v1)
      goto LABEL_3;
LABEL_4:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_32;
    if (v11 >= v2)
      goto LABEL_28;
    ++v8;
    if (!*(_QWORD *)(v9 + 8 * v11))
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v2)
        goto LABEL_28;
      if (!*(_QWORD *)(v9 + 8 * v8))
        break;
    }
LABEL_15:
    sub_1AE563998();
  }
  v12 = v11 + 2;
  if (v12 >= v2)
  {
LABEL_28:
    sub_1AE4F6700();
    v3 = v0;
    goto LABEL_30;
  }
  if (*(_QWORD *)(v9 + 8 * v12))
  {
    v8 = v12;
    goto LABEL_15;
  }
  while (1)
  {
    v8 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v8 >= v2)
      goto LABEL_28;
    ++v12;
    if (*(_QWORD *)(v9 + 8 * v8))
      goto LABEL_15;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_1AE55E4E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548((uint64_t *)&unk_1ED3195F8);
  v3 = sub_1AE9268E0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v31 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v32 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  v33 = v2;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(_QWORD *)(v2 + 48) + 40 * i;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(_QWORD *)(v16 + 24);
    v21 = *(_WORD *)(v16 + 32);
    sub_1AE926EC8();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1AE925F14();
    swift_bridgeObjectRelease();
    result = sub_1AE926F10();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6))) == 0)
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v24);
        if (v29 != -1)
        {
          v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v8 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = *(_QWORD *)(v4 + 48) + 40 * v25;
    *(_QWORD *)v30 = v17;
    *(_QWORD *)(v30 + 8) = v18;
    *(_QWORD *)(v30 + 16) = v19;
    *(_QWORD *)(v30 + 24) = v20;
    *(_WORD *)(v30 + 32) = v21;
    ++*(_QWORD *)(v4 + 16);
    v2 = v33;
    if (v7)
      goto LABEL_6;
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_36;
    if (v13 >= v32)
      goto LABEL_32;
    v14 = *(_QWORD *)(v31 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v32)
        goto LABEL_32;
      v14 = *(_QWORD *)(v31 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v32)
          goto LABEL_32;
        v14 = *(_QWORD *)(v31 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v32)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v31 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v32)
      goto LABEL_32;
    v14 = *(_QWORD *)(v31 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1AE55E7D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548(&qword_1ED31AD70);
  v3 = sub_1AE9268E0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_1AE926EC8();
    swift_bridgeObjectRetain();
    sub_1AE925F14();
    result = sub_1AE926F10();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1AE55EA80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;
  int64_t v27;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548(&qword_1EED9BD38);
  v3 = sub_1AE9268E0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = v2 + 56;
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v27 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    swift_retain();
    v10 = 0;
    if (!v8)
      goto LABEL_7;
    while (2)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
LABEL_21:
      v16 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v12);
      sub_1AE926EC8();
      if (!(v16 >> 6))
      {
        sub_1AE926ED4();
        __asm { BR              X8 }
      }
      if (v16 >> 6 == 1)
      {
        sub_1AE926ED4();
        __asm { BR              X8 }
      }
      sub_1AE926ED4();
      v17 = sub_1AE926F10();
      v18 = -1 << *(_BYTE *)(v4 + 32);
      v19 = v17 & ~v18;
      v20 = v19 >> 6;
      if (((-1 << v19) & ~*(_QWORD *)(v9 + 8 * (v19 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v9 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_34;
      }
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v9 + 8 * v20);
      }
      while (v25 == -1);
      v21 = __clz(__rbit64(~v25)) + (v20 << 6);
LABEL_34:
      *(_QWORD *)(v9 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v21) = v16;
      ++*(_QWORD *)(v4 + 16);
      if (v8)
        continue;
      break;
    }
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_40;
    if (v13 < v27)
    {
      v14 = *(_QWORD *)(v6 + 8 * v13);
      ++v10;
      if (v14)
        goto LABEL_20;
      v10 = v13 + 1;
      if (v13 + 1 < v27)
      {
        v14 = *(_QWORD *)(v6 + 8 * v10);
        if (v14)
          goto LABEL_20;
        v10 = v13 + 2;
        if (v13 + 2 < v27)
        {
          v14 = *(_QWORD *)(v6 + 8 * v10);
          if (v14)
            goto LABEL_20;
          v15 = v13 + 3;
          if (v15 < v27)
          {
            v14 = *(_QWORD *)(v6 + 8 * v15);
            if (v14)
            {
              v10 = v15;
LABEL_20:
              v8 = (v14 - 1) & v14;
              v12 = __clz(__rbit64(v14)) + (v10 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              v10 = v15 + 1;
              if (__OFADD__(v15, 1))
                break;
              if (v10 >= v27)
                goto LABEL_36;
              v14 = *(_QWORD *)(v6 + 8 * v10);
              ++v15;
              if (v14)
                goto LABEL_20;
            }
LABEL_41:
            __break(1u);
            JUMPOUT(0x1AE55EEECLL);
          }
        }
      }
    }
LABEL_36:
    result = swift_release_n();
    v1 = v0;
  }
  else
  {
    result = swift_release();
  }
  *v1 = v4;
  return result;
}

uint64_t sub_1AE55EF1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548(&qword_1EED9BD58);
  v3 = sub_1AE9268E0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_1AE926EC8();
    swift_bridgeObjectRetain_n();
    sub_1AE925F14();
    swift_bridgeObjectRelease();
    result = sub_1AE926F10();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1AE55F1D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548(&qword_1ED30FCD0);
  v3 = sub_1AE9268E0();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v7 > 1)
  {
    v9 = *(_QWORD *)(v2 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if (v7 > 2)
    {
      v9 = *(_QWORD *)(v2 + 72);
      if (v9)
        goto LABEL_19;
      v10 = 3;
      if (v7 > 3)
      {
        v9 = *(_QWORD *)(v2 + 80);
        if (!v9)
        {
          v11 = 4;
          if (v7 > 4)
          {
            v9 = *(_QWORD *)(v2 + 88);
            if (v9)
            {
              v10 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
              {
                __break(1u);
                JUMPOUT(0x1AE55F574);
              }
              if (v10 >= v7)
                break;
              v9 = *(_QWORD *)(v2 + 56 + 8 * v10);
              ++v11;
              if (v9)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v8);
        sub_1AE926EC8();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
  v1 = v0;
LABEL_23:
  *v1 = v3;
  return result;
}

uint64_t sub_1AE55F598()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;

  v1 = v0;
  v2 = *v0;
  sub_1AE501548((uint64_t *)&unk_1ED31B880);
  v3 = sub_1AE9268E0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v31 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v32 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  v33 = v2;
  if (!v7)
    goto LABEL_7;
LABEL_6:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = *(_QWORD *)(v2 + 48) + 40 * i;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(_QWORD *)(v16 + 24);
    v21 = *(_BYTE *)(v16 + 32);
    sub_1AE926EC8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_1AE925F14();
    swift_bridgeObjectRelease();
    result = sub_1AE926F10();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6))) == 0)
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v24);
        if (v29 != -1)
        {
          v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v8 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = *(_QWORD *)(v4 + 48) + 40 * v25;
    *(_QWORD *)v30 = v17;
    *(_QWORD *)(v30 + 8) = v18;
    *(_QWORD *)(v30 + 16) = v19;
    *(_QWORD *)(v30 + 24) = v20;
    *(_BYTE *)(v30 + 32) = v21;
    ++*(_QWORD *)(v4 + 16);
    v2 = v33;
    if (v7)
      goto LABEL_6;
LABEL_7:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_36;
    if (v13 >= v32)
      goto LABEL_32;
    v14 = *(_QWORD *)(v31 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v32)
        goto LABEL_32;
      v14 = *(_QWORD *)(v31 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v32)
          goto LABEL_32;
        v14 = *(_QWORD *)(v31 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v32)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v31 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v32)
      goto LABEL_32;
    v14 = *(_QWORD *)(v31 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1AE55F890()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  char v35[72];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *v0;
  sub_1AE501548(&qword_1EED9BD00);
  v2 = sub_1AE9268E0();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_24:
    result = swift_release();
    *v26 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v27 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v28 = (unint64_t)(v4 + 63) >> 6;
  v29 = v2 + 56;
  v30 = v1;
  result = swift_retain();
  v8 = 0;
  if (!v6)
    goto LABEL_7;
LABEL_6:
  v33 = (v6 - 1) & v6;
  v34 = v8;
  v9 = __clz(__rbit64(v6)) | (v8 << 6);
  v10 = v30;
  while (1)
  {
    v15 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 88 * v9);
    v16 = v15[1];
    v17 = v15[2];
    v18 = v15[3];
    v19 = v15[4];
    v21 = v15[5];
    v20 = v15[6];
    v22 = v15[7];
    v31 = v15[8];
    v24 = v15[9];
    v23 = v15[10];
    v36 = *v15;
    v32 = v36;
    v37 = v16;
    v38 = v17;
    v39 = v18;
    v40 = v19;
    v41 = v21;
    v42 = v20;
    v43 = v22;
    v44 = v31;
    v45 = v24;
    v46 = v23;
    sub_1AE926EC8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    KnosisInternalFact.hash(into:)((uint64_t)v35);
    sub_1AE926F10();
    result = sub_1AE92685C();
    *(_QWORD *)(v29 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v25 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 88 * result);
    *v25 = v32;
    v25[1] = v16;
    v25[2] = v17;
    v25[3] = v18;
    v25[4] = v19;
    v25[5] = v21;
    v25[6] = v20;
    v25[7] = v22;
    v25[8] = v31;
    v25[9] = v24;
    v25[10] = v23;
    ++*(_QWORD *)(v3 + 16);
    v6 = v33;
    v8 = v34;
    if (v33)
      goto LABEL_6;
LABEL_7:
    v11 = v8 + 1;
    v10 = v30;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v11 >= v28)
      goto LABEL_23;
    v12 = *(_QWORD *)(v27 + 8 * v11);
    v13 = v8 + 1;
    if (!v12)
    {
      v13 = v8 + 2;
      if (v8 + 2 >= v28)
        goto LABEL_23;
      v12 = *(_QWORD *)(v27 + 8 * v13);
      if (!v12)
      {
        v13 = v8 + 3;
        if (v8 + 3 >= v28)
          goto LABEL_23;
        v12 = *(_QWORD *)(v27 + 8 * v13);
        if (!v12)
          break;
      }
    }
LABEL_20:
    v33 = (v12 - 1) & v12;
    v34 = v13;
    v9 = __clz(__rbit64(v12)) + (v13 << 6);
  }
  v14 = v8 + 4;
  if (v8 + 4 >= v28)
  {
LABEL_23:
    swift_release();
    goto LABEL_24;
  }
  v12 = *(_QWORD *)(v27 + 8 * v14);
  if (v12)
  {
    v13 = v8 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v28)
      goto LABEL_23;
    v12 = *(_QWORD *)(v27 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

