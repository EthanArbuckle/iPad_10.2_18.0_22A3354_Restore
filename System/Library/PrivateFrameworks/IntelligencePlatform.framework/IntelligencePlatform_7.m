uint64_t sub_1AE8309CC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v13;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_1AE926D60() & 1) != 0)
    return 0;
  v9 = 0;
  v10 = a3 + 7;
  v11 = 1;
  while (1)
  {
    if (v3 == v11)
      return 0;
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2)
      break;
    v13 = sub_1AE926D60();
    result = v11++;
    v10 += 2;
    if ((v13 & 1) != 0)
      return result;
  }
  return v9;
}

uint64_t sub_1AE830AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  __int128 v39;

  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1E0DEE9D8];
  v6 = sub_1AE925C98();
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = (_QWORD *)(a1 + 72);
    while (1)
    {
      v9 = *(v8 - 5);
      v39 = *((_OWORD *)v8 - 2);
      v37 = *((_BYTE *)v8 - 16);
      v10 = *(v8 - 1);
      v11 = *v8;
      sub_1AE4FB764();
      sub_1AE8369A8();
      sub_1AE4FB930();
      v36 = v7;
      v38 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE505F58();
        sub_1AE519C48();
        v5 = v28;
      }
      v13 = *(_QWORD *)(v5 + 16);
      v12 = *(_QWORD *)(v5 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1AE506008(v12);
        sub_1AE519C48();
        v5 = v29;
      }
      *(_QWORD *)(v5 + 16) = v13 + 1;
      v35 = v5;
      v14 = v5 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v39;
      sub_1AE8369A8();
      sub_1AE4FB930();
      sub_1AE4FB764();
      swift_isUniquelyReferenced_nonNull_native();
      v15 = sub_1AE836A1C();
      if (__OFADD__(*(_QWORD *)(v6 + 16), (v16 & 1) == 0))
        break;
      v17 = v15;
      v18 = v16;
      sub_1AE501548(&qword_1ED30FD10);
      if ((sub_1AE926A54() & 1) != 0)
      {
        v19 = sub_1AE836A1C();
        if ((v18 & 1) != (v20 & 1))
          goto LABEL_19;
        v17 = v19;
      }
      if ((v18 & 1) != 0)
      {
        v21 = *(_QWORD *)(v6 + 56) + 48 * v17;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AE4F81B8();
        *(_QWORD *)v21 = v9;
        *(_OWORD *)(v21 + 8) = v39;
        *(_BYTE *)(v21 + 24) = v37;
        *(_QWORD *)(v21 + 32) = v38;
        *(_QWORD *)(v21 + 40) = v11;
      }
      else
      {
        sub_1AE4FFC58(v6 + 8 * (v17 >> 6));
        v23 = (_QWORD *)(v22 + 16 * v17);
        *v23 = v9;
        v23[1] = v39;
        v24 = *(_QWORD *)(v6 + 56) + 48 * v17;
        *(_QWORD *)v24 = v9;
        *(_OWORD *)(v24 + 8) = v39;
        *(_BYTE *)(v24 + 24) = v37;
        *(_QWORD *)(v24 + 32) = v38;
        *(_QWORD *)(v24 + 40) = v11;
        v25 = *(_QWORD *)(v6 + 16);
        v26 = __OFADD__(v25, 1);
        v27 = v25 + 1;
        if (v26)
          goto LABEL_18;
        *(_QWORD *)(v6 + 16) = v27;
        swift_bridgeObjectRetain();
      }
      v8 += 6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v5 = v35;
      --v7;
      if (v36 == 1)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    result = sub_1AE926DE4();
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    result = sub_1AE802190(v5, a2);
    *a4 = v6;
    a4[1] = a2;
    a4[2] = result;
    a4[3] = v31;
    a4[4] = 500;
    a4[5] = a3;
  }
  return result;
}

uint64_t sub_1AE830D7C(unint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!(_DWORD)result || (v3 & 0x8000000000000000) != 0 || (v3 & 0x4000000000000000) != 0)
    sub_1AE7AA54C(v3);
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    v9 = v5 + 8 * a1;
    v10 = *(_QWORD *)(v9 + 32);
    sub_1AE5201B0(v9 + 40, v8, v9 + 32);
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10) = v7;
    sub_1AE9261FC();
    return v10;
  }
  return result;
}

void sub_1AE830E0C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AE7AA5DC();
    v3 = v6;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    sub_1AE520954((char *)(v3 + 32 * a1 + 64), v4 - 1 - a1, (char *)(v3 + 32 * a1 + 32));
    *(_QWORD *)(v3 + 16) = v5;
    *v1 = v3;
  }
}

void *sub_1AE830EA8()
{
  void *result;

  result = (void *)sub_1AE925C98();
  off_1EEDA41A0 = result;
  return result;
}

void sub_1AE830EE0()
{
  qword_1EEDA41A8 = (uint64_t)&unk_1E5DAA200;
}

uint64_t sub_1AE830EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0;
  *(_QWORD *)(v0 + 72) = 0;
  *(_DWORD *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0xE000000000000000;
  *(_QWORD *)(v0 + 40) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v0 + 48) = 0;
  type metadata accessor for KnosisQueryParam();
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = 0;
  v2 = sub_1AE925C98();
  type metadata accessor for QueryNode();
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1AE883BA0(0, 0xE000000000000000, v2);
  return v1;
}

uint64_t sub_1AE830F90()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AE830FD8()
{
  sub_1AE830F90();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE830FF8()
{
  uint64_t v0;
  uint64_t v2;

  v2 = MEMORY[0x1E0DEE9D8];
  type metadata accessor for Node();
  swift_allocObject();
  v0 = sub_1AE830EF4();
  MEMORY[0x1AF4533D0](v0);
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1AE926220();
  sub_1AE92625C();
  sub_1AE9261FC();
  return v2;
}

uint64_t sub_1AE83109C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a1 >> 62)
    goto LABEL_5;
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    while (1)
    {
      v1 = swift_bridgeObjectRetain();
      sub_1AE56FAE4(v1);
      v3 = v2;
      swift_bridgeObjectRelease();
      if (v3)
        break;
      __break(1u);
LABEL_5:
      swift_bridgeObjectRetain();
      v4 = sub_1AE926AD8();
      swift_bridgeObjectRelease();
      if (!v4)
        goto LABEL_6;
    }
  }
  else
  {
LABEL_6:
    type metadata accessor for Node();
    v3 = swift_allocObject();
    sub_1AE830EF4();
  }
  return v3;
}

uint64_t ParserError.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  if (v1)
  {
    sub_1AE92691C();
    sub_1AE925F74();
    sub_1AE926A48();
    sub_1AE925F74();
    sub_1AE4F6730();
    sub_1AE925F74();
    sub_1AE4F81B8();
    sub_1AE925F74();
    sub_1AE926D18();
    sub_1AE925F74();
    sub_1AE4F81B8();
    sub_1AE925F74();
  }
  sub_1AE925F74();
  sub_1AE4F81B8();
  sub_1AE925F74();
  sub_1AE4FB75C();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  return 0;
}

void sub_1AE83134C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  char v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unsigned __int8 v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  BOOL v154;
  uint64_t v155;
  BOOL v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  int v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  char v206;
  unint64_t v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  Swift::String v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unsigned __int8 v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  unsigned __int8 v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char v261;
  unint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  unint64_t v269;
  char v270;
  uint64_t v271;
  uint64_t v272;
  unint64_t v273;
  uint64_t v274;
  unint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  unint64_t v295;
  uint64_t v296;
  _QWORD *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  char v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  unint64_t v308;
  unint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  unint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  _QWORD *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  char v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  unint64_t *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  unint64_t v360;
  uint64_t v361;
  uint64_t v362;
  unint64_t v363;
  __int128 v364;
  uint64_t v365;
  uint64_t v366;
  __int128 v367;
  unint64_t v368;
  uint64_t v369;
  uint64_t v370;

  v356 = *(_QWORD *)v1;
  v340 = *(_QWORD *)(v1 + 16);
  v342 = *(_QWORD *)(v1 + 8);
  v338 = *(_QWORD *)(v1 + 24);
  v350 = *(_QWORD *)(v1 + 32);
  v354 = *(_QWORD *)(v1 + 40);
  v363 = sub_1AE830FF8();
  v7 = *(_QWORD *)(a1 + 56);
  v8 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
LABEL_344:
    __break(1u);
LABEL_345:
    sub_1AE4FB930();
    sub_1AE56782C(19);
    sub_1AE544754();
    sub_1AE508D54();
    v359 = v314 - 2;
    v360 = 0x80000001AE988520;
    sub_1AE4FB930();
    sub_1AE4F7A40();
    sub_1AE4F66E8();
    sub_1AE836954();
    sub_1AE4F6778();
    v311 = 1;
LABEL_340:
    sub_1AE83693C(v310, v311);
    goto LABEL_341;
  }
  HIDWORD(v329) = 0;
  v336 = 0;
  v355 = (unint64_t *)(a1 + 48);
  v370 = a1;
  while (2)
  {
    *(_QWORD *)(a1 + 56) = v8;
    v9 = *(_QWORD *)(a1 + 48);
    if (v8 >= *(_QWORD *)(v9 + 16))
    {
      v3 = sub_1AE8369BC();
      v12 = v21;
      v11 = v22;
      v5 = v23;
      sub_1AE836934();
      v13 = sub_1AE505598();
      if ((v13 & 1) == 0)
      {
        sub_1AE4F9714();
        v9 = v13;
      }
      v25 = *(_QWORD *)(v9 + 16);
      v24 = *(_QWORD *)(v9 + 24);
      v1 = v25 + 1;
      if (v25 >= v24 >> 1)
      {
        sub_1AE506008(v24);
        sub_1AE4F6DDC();
        v9 = v13;
      }
      *(_QWORD *)(v9 + 16) = v1;
      v26 = v9 + 32 * v25;
      *(_BYTE *)(v26 + 32) = v3;
      *(_QWORD *)(v26 + 40) = v12;
      *(_QWORD *)(v26 + 48) = v11;
      *(_QWORD *)(v26 + 56) = v5;
      *v355 = v9;
      a1 = v370;
    }
    else
    {
      if (v8 < 0)
      {
        __break(1u);
LABEL_349:
        sub_1AE4F6804();
        sub_1AE56782C(21);
        sub_1AE544754();
        v359 = 0xD000000000000013;
        v360 = 0x80000001AE988490;
        sub_1AE4F6804();
        sub_1AE925F74();
        sub_1AE4F67AC();
        v315 = v359;
        v316 = v360;
        sub_1AE8368D4();
        sub_1AE4F6778();
        *(_QWORD *)v317 = v5;
        *(_QWORD *)(v317 + 8) = a1;
        *(_QWORD *)(v317 + 16) = v3;
        *(_QWORD *)(v317 + 24) = v4;
        *(_QWORD *)(v317 + 32) = v315;
        *(_QWORD *)(v317 + 40) = v316;
        *(_BYTE *)(v317 + 48) = 1;
        swift_willThrow();
        sub_1AE4FB730();
        swift_bridgeObjectRelease();
        goto LABEL_341;
      }
      v10 = v9 + 32 * v8;
      v3 = *(unsigned __int8 *)(v10 + 32);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(_QWORD *)(v10 + 48);
      v5 = *(_QWORD *)(v10 + 56);
      v13 = sub_1AE4FB930();
    }
    *(_QWORD *)(a1 + 56) = v8;
    switch((char)v3)
    {
      case 1:
        sub_1AE505C20();
        v117 = sub_1AE836A10();
        if ((_DWORD)v9 != 11)
          goto LABEL_345;
        sub_1AE4FCBE8(v117, v118, v119, v120, v121, v122, v123, v124, v324, v326, v329, v332, v334, v336, v338, v340, v342, v344, v347,
          v350,
          v352,
          v354);
        sub_1AE833288(1, v12, v11, v5, v331 & 1);
        if (v363 >> 62)
        {
          sub_1AE4F66CC();
          v203 = sub_1AE507F58();
          sub_1AE4F9038();
          if (v203)
          {
LABEL_103:
            sub_1AE4F943C();
            sub_1AE83695C();
          }
        }
        else if (*(_QWORD *)((v363 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_103;
        }
        sub_1AE836A08(MEMORY[0x1E0DEE9D8]);
        goto LABEL_103;
      case 2:
      case 11:
        v47 = v12;
        v12 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
LABEL_369:
          __break(1u);
LABEL_370:
          __break(1u);
LABEL_371:
          __break(1u);
LABEL_372:
          __break(1u);
LABEL_373:
          __break(1u);
LABEL_374:
          __break(1u);
LABEL_375:
          __break(1u);
LABEL_376:
          __break(1u);
LABEL_377:
          __break(1u);
LABEL_378:
          __break(1u);
LABEL_379:
          __break(1u);
LABEL_380:
          __break(1u);
LABEL_381:
          __break(1u);
LABEL_382:
          __break(1u);
LABEL_383:
          __break(1u);
LABEL_384:
          __break(1u);
LABEL_385:
          __break(1u);
LABEL_386:
          sub_1AE4FF294();
          v321 = sub_1AE505584();
          sub_1AE4F6648();
          if (v321)
          {
            sub_1AE4FB75C();
            v307 = sub_1AE505584();
            sub_1AE4F6648();
            goto LABEL_335;
          }
LABEL_388:
          sub_1AE4F6648();
          goto LABEL_389;
        }
        v347 = v3;
        *(_QWORD *)(v370 + 56) = v12;
        if (v12 >= *(_QWORD *)(v9 + 16))
        {
          v4 = v357;
          v1 = sub_1AE802674();
          v49 = v128;
          v130 = v129;
          v334 = v131;
          sub_1AE836934();
          v352 = v5;
          v344 = v49;
          if ((sub_1AE505598() & 1) == 0)
          {
            sub_1AE4F9714();
            v9 = v199;
          }
          v132 = *(_QWORD *)(v9 + 16);
          if (v132 >= *(_QWORD *)(v9 + 24) >> 1)
          {
            sub_1AE4F6DDC();
            v9 = v200;
          }
          *(_QWORD *)(v9 + 16) = v132 + 1;
          v133 = v9 + 32 * v132;
          *(_BYTE *)(v133 + 32) = v1;
          *(_QWORD *)(v133 + 40) = v49;
          *(_QWORD *)(v133 + 48) = v130;
          *(_QWORD *)(v133 + 56) = v334;
          *v355 = v9;
          v5 = v352;
        }
        else
        {
          v4 = v357;
          if (v12 < 0)
            goto LABEL_369;
          v48 = v9 + 32 * v12;
          v1 = *(unsigned __int8 *)(v48 + 32);
          v49 = *(_QWORD *)(v48 + 40);
          sub_1AE4F6804();
        }
        *(_QWORD *)(v370 + 56) = v12 - 1;
        if (v1 <= 0x10u && ((1 << v1) & 0x12910) != 0)
        {
          sub_1AE56782C(49);
          sub_1AE544754();
          sub_1AE508D54();
          v359 = v312 + 20;
          v360 = 0x80000001AE988440;
          sub_1AE4FB930();
          v1 = (uint64_t)&v359;
          v9 = v49;
          sub_1AE925F74();
          sub_1AE4F66E8();
          sub_1AE925F74();
          sub_1AE925F74();
          sub_1AE4F67AC();
          sub_1AE836954();
          sub_1AE4F6778();
          *(_QWORD *)v313 = v347;
          *(_QWORD *)(v313 + 8) = v47;
          goto LABEL_343;
        }
        sub_1AE4F67AC();
        v357 = v4;
        v12 = v47;
        a1 = v370;
        v3 = v347;
LABEL_326:
        if (++v336 >= v350)
        {
          sub_1AE56782C(30);
          sub_1AE544754();
          sub_1AE508D54();
          v359 = v294 + 1;
          v360 = 0x80000001AE988420;
          v362 = v350;
          v1 = (uint64_t)&v362;
          sub_1AE926D18();
          v9 = v295;
          sub_1AE8369B4();
          sub_1AE4F6648();
          sub_1AE925F74();
          goto LABEL_328;
        }
LABEL_285:
        sub_1AE4F66E8();
        v256 = *(_QWORD *)(a1 + 56);
        v8 = v256 + 1;
        if (__OFADD__(v256, 1))
          goto LABEL_344;
        continue;
      case 3:
      case 6:
        v4 = v12;
        v27 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
LABEL_347:
          swift_release();
          goto LABEL_341;
        }
        *(_QWORD *)(a1 + 56) = v27;
        v352 = v5;
        if (v27 >= *(_QWORD *)(v9 + 16))
        {
          v347 = v11;
          v1 = sub_1AE8369BC();
          v344 = v33;
          v35 = v34;
          v5 = v36;
          sub_1AE836934();
          if ((sub_1AE505598() & 1) == 0)
          {
            sub_1AE4F9714();
            v9 = v181;
          }
          v37 = *(_QWORD *)(v9 + 16);
          if (v37 >= *(_QWORD *)(v9 + 24) >> 1)
          {
            sub_1AE4F6DDC();
            v9 = v182;
          }
          *(_QWORD *)(v9 + 16) = v37 + 1;
          v38 = v9 + 32 * v37;
          *(_BYTE *)(v38 + 32) = v1;
          *(_QWORD *)(v38 + 40) = v344;
          *(_QWORD *)(v38 + 48) = v35;
          *(_QWORD *)(v38 + 56) = v5;
          v39 = v370;
          *(_QWORD *)(v370 + 48) = v9;
          *(_QWORD *)(v39 + 56) = v8;
          a1 = v39;
          v13 = swift_bridgeObjectRelease();
          v11 = v347;
          if (v1 == 8)
            goto LABEL_285;
          goto LABEL_32;
        }
        if (v27 < 0)
        {
          __break(1u);
          swift_bridgeObjectRelease();
          sub_1AE507978();
          sub_1AE507978();
LABEL_354:
          swift_release();
          goto LABEL_392;
        }
        v1 = *(unsigned __int8 *)(v9 + 32 * v27 + 32);
        *(_QWORD *)(a1 + 56) = v8;
        if ((_DWORD)v1 == 8)
          goto LABEL_285;
LABEL_32:
        if (v1 == 13)
          goto LABEL_285;
        v5 = v352;
        v12 = v4;
        if ((v329 & 0x100000000) != 0)
          goto LABEL_351;
        if (v1 == 2 || v1 == 12 || v1 == 16)
        {
          sub_1AE4FCBE8(v13, v14, v15, v16, v17, v18, v19, v20, v324, v326, v329, v332, v334, v336, v338, v340, v342, v344, v347,
            v350,
            v352,
            v354);
          sub_1AE4FC008();
          if (v42)
          {
            sub_1AE4FF294();
            v43 = sub_1AE505584();
            sub_1AE4F6648();
            if (v43)
              goto LABEL_44;
          }
          else
          {
            v43 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
            sub_1AE4FB75C();
            if (v43)
            {
LABEL_44:
              v44 = v43 - 1;
              if (__OFSUB__(v43, 1))
                goto LABEL_382;
              if ((v9 & 0xC000000000000001) != 0)
              {
                sub_1AE4FB75C();
                sub_1AE4F9510();
              }
              if (v44 < 0)
                goto LABEL_383;
              sub_1AE508914();
              if (v45)
                goto LABEL_384;
              v46 = *(_QWORD *)(v9 + 8 * v44 + 32);
              swift_retain();
LABEL_227:
              sub_1AE4F6648();
              v2 = v357;
              sub_1AE834D3C(v46, v3, v4, v11, v5);
              if (v357)
                goto LABEL_347;
              swift_release();
              sub_1AE4FC008();
              if (v204)
              {
                sub_1AE4FF294();
                v1 = sub_1AE505584();
                sub_1AE4F6648();
                if (v1)
                  goto LABEL_230;
              }
              else
              {
                v1 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
                sub_1AE4FB75C();
                if (v1)
                {
LABEL_230:
                  v156 = __OFSUB__(v1--, 1);
                  if (v156)
                    goto LABEL_385;
                  v205 = sub_1AE7EAD64();
                  sub_1AE509740(v205);
                  if ((v46 & 1) == 0)
                  {
                    sub_1AE4FB75C();
                    sub_1AE4F9510();
                  }
                  sub_1AE50A674();
                  goto LABEL_235;
                }
              }
              type metadata accessor for Node();
              sub_1AE503B28();
              sub_1AE4FD590();
LABEL_235:
              sub_1AE4F6648();
              v206 = *(_BYTE *)(v1 + 83);
              sub_1AE4FC564();
              if ((v206 & 1) == 0)
              {
                v207 = v363;
                sub_1AE4FDFD0();
                v1 = sub_1AE5B77A0(v207);
                sub_1AE4F6648();
                if (v1)
                {
                  v208 = sub_1AE4FB75C();
                  sub_1AE56FAE4(v208);
                  v1 = v209;
                  sub_1AE4F6648();
                  if (!v1)
                    goto LABEL_416;
                }
                else
                {
                  type metadata accessor for Node();
                  sub_1AE503B28();
                  sub_1AE4FD590();
                }
                sub_1AE4F6648();
                v210 = *(_QWORD *)(v1 + 72);
                v156 = __OFADD__(v210, 1);
                v211 = v210 + 1;
                if (v156)
                  goto LABEL_395;
                *(_QWORD *)(v1 + 72) = v211;
                sub_1AE4FC564();
              }
              HIDWORD(v329) = 0;
              goto LABEL_326;
            }
          }
          type metadata accessor for Node();
          v46 = sub_1AE503B28();
          sub_1AE4FD590();
          goto LABEL_227;
        }
        if (v1 == 11)
        {
LABEL_351:
          sub_1AE56782C(21);
          sub_1AE4FB930();
          swift_bridgeObjectRelease();
          v359 = v4;
          v360 = v11;
          v1 = (uint64_t)&v359;
          sub_1AE925F74();
          sub_1AE836954();
          sub_1AE4F6778();
          v296 = v3;
          goto LABEL_329;
        }
        sub_1AE56782C(24);
        sub_1AE544754();
        sub_1AE508D54();
        v359 = v320 + 3;
        v360 = 0x80000001AE9884E0;
        sub_1AE4FB930();
        sub_1AE4F7A40();
        sub_1AE4F66E8();
LABEL_328:
        sub_1AE836954();
        sub_1AE4F6778();
        v296 = v3;
LABEL_329:
        *(_QWORD *)v313 = v296;
        *(_QWORD *)(v313 + 8) = v12;
LABEL_343:
        *(_QWORD *)(v313 + 16) = v11;
        *(_QWORD *)(v313 + 24) = v5;
        *(_QWORD *)(v313 + 32) = v9;
        *(_QWORD *)(v313 + 40) = v1;
LABEL_390:
        *(_BYTE *)(v313 + 48) = 0;
LABEL_391:
        swift_willThrow();
LABEL_392:
        swift_bridgeObjectRelease();
LABEL_393:
        sub_1AE4F667C();
        return;
      case 4:
        HIDWORD(v329) = 1;
        goto LABEL_326;
      case 7:
        v301 = *(_QWORD *)(a1 + 16);
        v302 = *(_QWORD *)(a1 + 24);
        v364 = *(_OWORD *)a1;
        v365 = v301;
        v366 = v302;
        v367 = *(_OWORD *)(a1 + 32);
        v368 = v9;
        v369 = v8;
        v303 = sub_1AE8025E4();
        v305 = v304;
        if (v303 == 12)
        {
          sub_1AE4F6648();
          sub_1AE4FC008();
          if (v306)
            goto LABEL_386;
          v307 = *(_QWORD *)((v305 & 0xFFFFFFFFFFFFF8) + 0x10);
          sub_1AE4FB75C();
          if (!v307)
            goto LABEL_388;
LABEL_335:
          sub_1AE4F6648();
          if (v307 != 1)
          {
LABEL_389:
            sub_1AE8368D4();
            sub_1AE4F6778();
            *v322 = 7;
            v322[1] = v12;
            v322[2] = v11;
            v322[3] = v5;
            sub_1AE508D54();
            *(_QWORD *)(v313 + 32) = v323 + 19;
            *(_QWORD *)(v313 + 40) = 0x80000001AE9883F0;
            goto LABEL_390;
          }
          v308 = v363 & 0xC000000000000001;
          sub_1AE66B890(0, (v363 & 0xC000000000000001) == 0, v363);
          if (!v308)
          {
            sub_1AE4F943C();
            sub_1AE4F66E8();
            swift_bridgeObjectRelease();
            goto LABEL_393;
          }
LABEL_408:
          sub_1AE4F9510();
        }
        sub_1AE4FB930();
        v359 = sub_1AE56782C(51);
        v360 = v309;
        sub_1AE508D54();
        sub_1AE8369B4();
        sub_1AE925F74();
        sub_1AE4F6648();
        sub_1AE836954();
        sub_1AE4F6778();
        v311 = 7;
        goto LABEL_340;
      case 8:
        v353 = v5;
        sub_1AE802540();
        sub_1AE4FB930();
        swift_bridgeObjectRelease();
        v345 = type metadata accessor for Node();
        sub_1AE503B28();
        sub_1AE4FD590();
        v362 = a1;
        v51 = v12;
        v348 = v11;
        v52 = v11;
        v327 = v12;
        while (2)
        {
          v53 = *(_QWORD *)(a1 + 56);
          v54 = v53 + 1;
          if (__OFADD__(v53, 1))
            goto LABEL_358;
          *(_QWORD *)(a1 + 56) = v54;
          v55 = *(_QWORD *)(a1 + 48);
          if (v54 >= *(_QWORD *)(v55 + 16))
          {
            v5 = sub_1AE802674();
            v332 = v57;
            v334 = v56;
            v59 = v58;
            sub_1AE836934();
            v60 = v51;
            v11 = v12;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1AE505F58();
              sub_1AE51A614();
              v55 = v111;
            }
            v62 = *(_QWORD *)(v55 + 16);
            v61 = *(_QWORD *)(v55 + 24);
            if (v62 >= v61 >> 1)
            {
              sub_1AE506008(v61);
              sub_1AE51A614();
              v55 = v112;
            }
            *(_QWORD *)(v55 + 16) = v62 + 1;
            v63 = v55 + 32 * v62;
            *(_BYTE *)(v63 + 32) = v5;
            *(_QWORD *)(v63 + 40) = v334;
            *(_QWORD *)(v63 + 48) = v59;
            *(_QWORD *)(v63 + 56) = v332;
            sub_1AE4F9038();
            *v355 = v55;
            v51 = v60;
          }
          else if (v54 < 0)
          {
            goto LABEL_364;
          }
          *(_QWORD *)(v370 + 56) = v54;
          if (qword_1EED99898 != -1)
            swift_once();
          v64 = off_1EEDA41A0;
          if (!*((_QWORD *)off_1EEDA41A0 + 2))
            goto LABEL_359;
          sub_1AE4FB75C();
          v65 = sub_1AE536EDC(v51, v52);
          if ((v66 & 1) == 0)
            goto LABEL_413;
          v67 = (uint64_t *)(v64[7] + 16 * v65);
          v68 = *v67;
          v69 = v67[1];
          sub_1AE4F6708();
          sub_1AE4F6648();
          v70 = sub_1AE503B28();
          sub_1AE4FD590();
          type metadata accessor for KnosisQueryParam();
          v71 = sub_1AE925C98();
          type metadata accessor for QueryNode();
          v72 = swift_allocObject();
          v73 = v71;
          v74 = v72;
          *(_QWORD *)(v70 + 16) = sub_1AE883BA0(v68, v69, v73);
          swift_release();
          v75 = v370;
          if (!*(_QWORD *)(v356 + 16))
            goto LABEL_79;
          v76 = *(_QWORD *)(v70 + 16);
          v77 = *(_QWORD *)(v76 + 16);
          v78 = *(_QWORD *)(v76 + 24);
          sub_1AE4F6730();
          v74 = v356;
          v79 = sub_1AE536EDC(v77, v78);
          if ((v80 & 1) != 0)
          {
            v81 = *(_QWORD *)(v356 + 56) + 48 * v79;
            v83 = *(_QWORD *)v81;
            v82 = *(_QWORD *)(v81 + 8);
            v84 = *(_QWORD *)(v81 + 16);
            v5 = *(unsigned __int8 *)(v81 + 24);
            v85 = *(_QWORD *)(v81 + 40);
            v332 = *(_QWORD *)(v81 + 32);
            swift_bridgeObjectRetain();
            sub_1AE4F66CC();
            sub_1AE4F6708();
            sub_1AE4F81B8();
            v334 = *(_QWORD *)(v70 + 64);
            *(_QWORD *)(v70 + 24) = v83;
            *(_QWORD *)(v70 + 32) = v82;
            *(_QWORD *)(v70 + 40) = v84;
            *(_BYTE *)(v70 + 48) = v5;
            *(_QWORD *)(v70 + 56) = v332;
            *(_QWORD *)(v70 + 64) = v85;
            v12 = v327;
            sub_1AE4F66CC();
            sub_1AE4F6708();
            v75 = v370;
            swift_bridgeObjectRelease();
            sub_1AE4F9038();
            swift_bridgeObjectRelease();
            sub_1AE4F81B8();
            swift_bridgeObjectRelease();
            *(_BYTE *)(v70 + 80) = 0;
            v86 = sub_1AE4F6648();
          }
          else
          {
            sub_1AE4F81B8();
LABEL_79:
            sub_1AE503B28();
            sub_1AE4FD590();
            sub_1AE4F6648();
            v86 = swift_release();
            v70 = v74;
          }
          v358 = v70;
          v359 = v356;
          sub_1AE5077EC(v86, v87, v88, v89, v90, v91, v92, v93, v324, v327, v329, v332, v334, v336, v338, v340, v342, v345, v348,
            v350,
            v353,
            v354);
          sub_1AE833BB0(v75, &v362, &v358);
          if (!v357)
          {
            v11 = v94;
            swift_release();
            v362 = v11;
            v95 = *(_QWORD *)(v75 + 56);
            v96 = v95 + 1;
            if (__OFADD__(v95, 1))
              goto LABEL_360;
            *(_QWORD *)(v75 + 56) = v96;
            v97 = *(_QWORD *)(v75 + 48);
            v357 = 0;
            if (v96 >= *(_QWORD *)(v97 + 16))
            {
              v334 = v11;
              v100 = v75;
              v99 = sub_1AE8369BC();
              v5 = v101;
              v52 = v102;
              v104 = v103;
              sub_1AE836934();
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(_QWORD *)(v100 + 48) = v97;
              v106 = v12;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1AE8369E8();
                v97 = v113;
                *v355 = v113;
              }
              v107 = *(_QWORD *)(v97 + 16);
              if (v107 >= *(_QWORD *)(v97 + 24) >> 1)
              {
                sub_1AE8369E8();
                *v355 = v114;
              }
              v51 = v5;
              v108 = sub_1AE8DD98C(v107, v99, v5, v52, v104);
              nullsub_1(v108);
              v12 = v106;
              v11 = v334;
            }
            else
            {
              if (v96 < 0)
                goto LABEL_365;
              v98 = v97 + 32 * v96;
              v99 = *(_BYTE *)(v98 + 32);
              v51 = *(_QWORD *)(v98 + 40);
              v52 = *(_QWORD *)(v98 + 48);
              sub_1AE4FB75C();
            }
            v109 = v370;
            *(_QWORD *)(v370 + 56) = v96 - 1;
            swift_release();
            v110 = v99;
            a1 = v109;
            if (v110 != 8)
            {
              sub_1AE4F6648();
              sub_1AE4FC008();
              if (v135)
              {
                sub_1AE4FB75C();
                v109 = sub_1AE507F58();
                sub_1AE4F6648();
              }
              else
              {
                sub_1AE836964();
              }
              if (v109)
              {
                sub_1AE4FC008();
                if (!v136)
                {
                  sub_1AE836964();
LABEL_128:
                  v137 = sub_1AE8369DC();
                  v363 = v52;
                  if (!v137 || (v52 & 0x8000000000000000) != 0 || (v52 & 0x4000000000000000) != 0)
                    sub_1AE7AA54C(v52);
                  v138 = v52 & 0xFFFFFFFFFFFFFF8;
                  v139 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  if (v139)
                  {
                    v140 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 8 * (v139 - 1) + 0x20);
                    v141 = sub_1AE8369C4(v138);
                    goto LABEL_150;
                  }
LABEL_400:
                  __break(1u);
LABEL_401:
                  __break(1u);
LABEL_402:
                  __break(1u);
LABEL_403:
                  __break(1u);
LABEL_404:
                  __break(1u);
LABEL_405:
                  __break(1u);
                  goto LABEL_406;
                }
                sub_1AE4FB75C();
                v239 = sub_1AE507F58();
                sub_1AE4F6648();
                if (v239)
                  goto LABEL_128;
LABEL_399:
                __break(1u);
                goto LABEL_400;
              }
              v140 = sub_1AE503B28();
              v141 = sub_1AE4FD590();
LABEL_150:
              v358 = v140;
              v359 = v356;
              sub_1AE5077EC(v141, v142, v143, v144, v145, v146, v147, v148, v324, v327, v329, v332, v334, v336, v338, v340, v342, v345, v348,
                v350,
                v353,
                v354);
              swift_retain();
              sub_1AE833884(&v358, v11);
              sub_1AE507978();
              v155 = *(_QWORD *)(v358 + 72);
              v156 = __OFADD__(v155, 1);
              v157 = v155 + 1;
              if (!v156)
              {
                *(_QWORD *)(v358 + 72) = v157;
                if (v363 >> 62)
                {
                  sub_1AE4F943C();
                  sub_1AE4F66CC();
                  v221 = sub_1AE507F58();
                  sub_1AE4F9038();
                  if (!v221)
LABEL_153:
                    sub_1AE836A08(MEMORY[0x1E0DEE9D8]);
                }
                else
                {
                  v158 = *(_QWORD *)((v363 & 0xFFFFFFFFFFFFF8) + 0x10);
                  sub_1AE4F943C();
                  if (!v158)
                    goto LABEL_153;
                }
                sub_1AE4F943C();
                sub_1AE83695C();
              }
              __break(1u);
LABEL_395:
              __break(1u);
              JUMPOUT(0x1AE8331D4);
            }
            continue;
          }
          break;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_392;
      case 10:
        sub_1AE8368D4();
        sub_1AE4F6778();
        *(_QWORD *)v300 = 10;
        *(_QWORD *)(v300 + 8) = v12;
        *(_QWORD *)(v300 + 16) = v11;
        *(_QWORD *)(v300 + 24) = v5;
        *(_QWORD *)(v300 + 32) = v12;
        *(_QWORD *)(v300 + 40) = v11;
        *(_BYTE *)(v300 + 48) = 2;
        sub_1AE4FB930();
        goto LABEL_391;
      case 12:
        sub_1AE4FC008();
        if (v28)
        {
          sub_1AE4FB75C();
          v168 = sub_1AE507F58();
          sub_1AE4F6648();
          if (v168)
          {
LABEL_19:
            sub_1AE4FC008();
            if (v29)
            {
              sub_1AE4FB75C();
              v183 = sub_1AE507F58();
              sub_1AE4F6648();
              if (!v183)
              {
                __break(1u);
                goto LABEL_357;
              }
            }
            else
            {
              sub_1AE836964();
            }
            v30 = sub_1AE8369DC();
            v363 = v9;
            if (!v30 || (v9 & 0x8000000000000000) != 0 || (v9 & 0x4000000000000000) != 0)
              sub_1AE7AA54C(v9);
            v31 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v31)
            {
              v32 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * (v31 - 1) + 0x20);
              sub_1AE8369C4(v9 & 0xFFFFFFFFFFFFFF8);
              goto LABEL_175;
            }
LABEL_357:
            __break(1u);
LABEL_358:
            __break(1u);
LABEL_359:
            __break(1u);
LABEL_360:
            __break(1u);
LABEL_361:
            __break(1u);
LABEL_362:
            __break(1u);
LABEL_363:
            __break(1u);
LABEL_364:
            __break(1u);
LABEL_365:
            __break(1u);
LABEL_366:
            __break(1u);
LABEL_367:
            sub_1AE8368D4();
            sub_1AE4F6778();
            *(_QWORD *)v313 = 13;
            *(_QWORD *)(v313 + 8) = v12;
            *(_QWORD *)(v313 + 16) = v11;
            *(_QWORD *)(v313 + 24) = v5;
            *(_QWORD *)(v313 + 32) = 0xD000000000000018;
            *(_QWORD *)(v313 + 40) = 0x80000001AE988470;
            goto LABEL_390;
          }
        }
        else
        {
          sub_1AE836964();
          if (v1)
            goto LABEL_19;
        }
        type metadata accessor for Node();
        v32 = sub_1AE503B28();
        sub_1AE4FD590();
LABEL_175:
        if ((*(_BYTE *)(v32 + 80) & 1) != 0)
        {
          v169 = sub_1AE5069F0();
          goto LABEL_187;
        }
        sub_1AE4FC008();
        if (v177)
        {
          sub_1AE4FF294();
          sub_1AE5069F0();
          v178 = sub_1AE505584();
          sub_1AE4F6648();
          if (v178)
          {
LABEL_179:
            v179 = sub_1AE4FB75C();
            sub_1AE56FAE4(v179);
            v178 = v180;
            sub_1AE4F6648();
            if (!v178)
              goto LABEL_414;
            goto LABEL_185;
          }
        }
        else
        {
          v178 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
          sub_1AE4FB75C();
          sub_1AE5069F0();
          if (v178)
            goto LABEL_179;
        }
        type metadata accessor for Node();
        sub_1AE503B28();
        sub_1AE4FD590();
LABEL_185:
        sub_1AE4F6648();
        v184 = *(_QWORD *)(v178 + 16);
        sub_1AE4F943C();
        sub_1AE4FC564();
        v185 = *(_QWORD *)(v184 + 16);
        v8 = *(_QWORD *)(v184 + 24);
        sub_1AE4F6730();
        sub_1AE4FB730();
        sub_1AE551594(v185, v8, v354);
        v9 = v186;
        v169 = sub_1AE4F81B8();
        if ((v9 & 1) != 0)
          *(_BYTE *)(v32 + 82) = 1;
LABEL_187:
        sub_1AE4FCBE8(v169, v170, v171, v172, v173, v174, v175, v176, v324, v326, v329, v332, v334, v336, v338, v340, v342, v344, v347,
          v350,
          v352,
          v354);
        sub_1AE8334E8(v32);
        if (v357)
        {
          sub_1AE4F66E8();
          sub_1AE4FC54C();
          goto LABEL_392;
        }
        sub_1AE505C20();
        sub_1AE836A10();
        if ((_DWORD)v9 == 4)
        {
          sub_1AE4FC008();
          if (v187)
          {
            sub_1AE4FB75C();
            v197 = sub_1AE507F58();
            sub_1AE4F6648();
            if (v197)
            {
LABEL_192:
              sub_1AE5069F0();
              sub_1AE83695C();
            }
          }
          else
          {
            sub_1AE836964();
            if (&v359)
              goto LABEL_192;
          }
          sub_1AE836A08(MEMORY[0x1E0DEE9D8]);
          goto LABEL_192;
        }
        sub_1AE4FC008();
        if (v189 == 1)
        {
          if (v188)
          {
            sub_1AE4FF294();
            v190 = sub_1AE505584();
            sub_1AE4F6648();
          }
          else
          {
            v190 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
            sub_1AE4FB75C();
          }
          if (!v190)
            goto LABEL_288;
          v191 = sub_1AE4FB75C();
          sub_1AE56FAE4(v191);
          v190 = v192;
          sub_1AE4F6648();
          if (!v190)
          {
            __break(1u);
LABEL_415:
            __break(1u);
LABEL_416:
            __break(1u);
LABEL_417:
            __break(1u);
            JUMPOUT(0x1AE833248);
          }
          while (1)
          {
            sub_1AE4F6648();
            v257 = *(_QWORD *)(v190 + 16);
            v258 = *(_QWORD *)(v257 + 40);
            *(_QWORD *)(v257 + 40) = *(_QWORD *)(v32 + 16);
            swift_retain();
            sub_1AE4FC564();
            sub_1AE4FDCE8();
            sub_1AE4FB730();
            sub_1AE4FC008();
            if (v259)
            {
              sub_1AE4FF294();
              v260 = sub_1AE505584();
              sub_1AE4F6648();
              if (!v260)
              {
LABEL_295:
                type metadata accessor for Node();
                sub_1AE503B28();
                sub_1AE4FD590();
                goto LABEL_296;
              }
            }
            else
            {
              v260 = *(_QWORD *)((v258 & 0xFFFFFFFFFFFFF8) + 0x10);
              sub_1AE4FB75C();
              if (!v260)
                goto LABEL_295;
            }
            v156 = __OFSUB__(v260--, 1);
            if (v156)
              goto LABEL_361;
            v261 = sub_1AE7EAD64();
            sub_1AE509740(v261);
            if ((v8 & 1) == 0)
            {
              sub_1AE4FB75C();
              sub_1AE4F9510();
            }
            sub_1AE50A674();
LABEL_296:
            sub_1AE4F6648();
            LOBYTE(v8) = *(_BYTE *)(v260 + 80);
            sub_1AE4FC564();
            v262 = v363;
            v263 = sub_1AE4F66CC();
            v264 = sub_1AE5B77A0(v263);
            sub_1AE4F9038();
            if ((v8 & 1) == 0)
            {
              if (v264)
              {
                if (!sub_1AE5084E4())
                  goto LABEL_401;
                sub_1AE836990();
                if (!v271)
                {
                  v272 = sub_1AE5084E4();
                  v156 = __OFSUB__(v272, 1);
                  v273 = v272 - 1;
                  if (!v156)
                  {
                    v271 = sub_1AE830D7C(v273);
                    goto LABEL_315;
                  }
                  __break(1u);
LABEL_410:
                  __break(1u);
LABEL_411:
                  __break(1u);
LABEL_412:
                  __break(1u);
LABEL_413:
                  sub_1AE4F6648();
                  __break(1u);
LABEL_414:
                  __break(1u);
                  JUMPOUT(0x1AE833234);
                }
LABEL_315:
                v274 = v271;
              }
              else
              {
                type metadata accessor for Node();
                v274 = sub_1AE503B28();
                sub_1AE4FD590();
              }
              v275 = sub_1AE4F66CC();
              v276 = sub_1AE83109C(v275);
              v277 = sub_1AE4F9038();
              sub_1AE836910(v277, v278, v279, v280, v281, v282, v283, v284, v325, v328, v330, v333, v335, v337, v339, v341, v343, v346, v349,
                v351);
              v361 = v285;
              v362 = v276;
              sub_1AE833884(&v362, v274);
              v286 = sub_1AE4F66CC();
              v287 = sub_1AE5B77A0(v286);
              sub_1AE4F9038();
              if (v287)
              {
                if (!sub_1AE5084E4())
                  goto LABEL_403;
                sub_1AE836990();
                if (!v288)
                {
                  v289 = sub_1AE5084E4();
                  v156 = __OFSUB__(v289, 1);
                  v290 = v289 - 1;
                  if (v156)
                    goto LABEL_411;
                  sub_1AE830D7C(v290);
                }
              }
              else
              {
                type metadata accessor for Node();
                swift_initStackObject();
                sub_1AE4FD590();
              }
              swift_release();
              sub_1AE50668C();
              v291 = sub_1AE4F66CC();
              v292 = sub_1AE5B77A0(v291);
              sub_1AE4F9038();
              if (!v292)
              {
                sub_1AE5196A8(0);
                sub_1AE836998(v293);
              }
              sub_1AE50668C();
              sub_1AE83695C();
            }
            if (v264)
            {
              if (!sub_1AE5084E4())
                goto LABEL_362;
              sub_1AE836990();
              if (!v265)
              {
                v266 = sub_1AE5084E4();
                v156 = __OFSUB__(v266, 1);
                v267 = v266 - 1;
                if (v156)
                  goto LABEL_366;
                v265 = sub_1AE830D7C(v267);
              }
              v268 = v265;
              sub_1AE4FDCE8();
              v32 = v268;
            }
            else
            {
              type metadata accessor for Node();
              sub_1AE503B28();
              sub_1AE4FD590();
              sub_1AE4FDCE8();
              v32 = v262;
            }
            v269 = v363;
            sub_1AE4FDFD0();
            sub_1AE5069F0();
            v190 = sub_1AE5B77A0(v269);
            sub_1AE4F6648();
            if (v190)
            {
              v156 = __OFSUB__(v190--, 1);
              if (v156)
                goto LABEL_363;
              v270 = sub_1AE7EAD64();
              sub_1AE509740(v270);
              if ((v8 & 1) == 0)
              {
                sub_1AE4FB75C();
                sub_1AE4F9510();
              }
              sub_1AE50A674();
            }
            else
            {
LABEL_288:
              type metadata accessor for Node();
              sub_1AE503B28();
              sub_1AE4FD590();
            }
          }
        }
        if (v188)
        {
          sub_1AE4FB75C();
          v220 = sub_1AE507F58();
          sub_1AE4F6648();
          if (v220)
          {
LABEL_201:
            sub_1AE4FC008();
            if (v193)
            {
              sub_1AE4FF294();
              v194 = sub_1AE505584();
              sub_1AE4F6648();
              if (v194)
              {
LABEL_203:
                v195 = sub_1AE4FB75C();
                sub_1AE56FAE4(v195);
                v194 = v196;
                sub_1AE4F6648();
                if (!v194)
                  goto LABEL_415;
LABEL_261:
                v222 = sub_1AE4F6648();
                sub_1AE836910(v222, v223, v224, v225, v226, v227, v228, v229, v325, v328, v330, v333, v335, v337, v339, v341, v343, v346, v349,
                  v351);
                v361 = v230;
                v362 = v194;
                sub_1AE833884(&v362, v32);
                sub_1AE4FDCE8();
                v231 = sub_1AE4FB75C();
                v232 = sub_1AE5B77A0(v231);
                sub_1AE4F6648();
                if (v232)
                {
                  if (!sub_1AE5084E4())
                    goto LABEL_402;
                  sub_1AE836990();
                  if (!v233)
                  {
                    v234 = sub_1AE5084E4();
                    v156 = __OFSUB__(v234, 1);
                    v235 = v234 - 1;
                    if (v156)
                      goto LABEL_410;
                    sub_1AE830D7C(v235);
                  }
                }
                else
                {
                  type metadata accessor for Node();
                  swift_initStackObject();
                  sub_1AE4FD590();
                }
                swift_release();
                sub_1AE4F943C();
                v236 = sub_1AE4F66CC();
                v237 = sub_1AE5B77A0(v236);
                sub_1AE4F9038();
                if (!v237)
                {
                  sub_1AE5196A8(0);
                  sub_1AE836998(v238);
                }
                sub_1AE4F943C();
                sub_1AE83695C();
              }
            }
            else
            {
              v194 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
              sub_1AE4FB75C();
              if (v194)
                goto LABEL_203;
            }
            type metadata accessor for Node();
            sub_1AE503B28();
            sub_1AE4FD590();
            goto LABEL_261;
          }
        }
        else
        {
          sub_1AE836964();
          if (&v359)
            goto LABEL_201;
        }
        sub_1AE4FDCE8();
        sub_1AE4FB930();
        sub_1AE56782C(36);
        sub_1AE544754();
        sub_1AE508D54();
        v359 = v318 + 15;
        v360 = 0x80000001AE9884B0;
        v362 = v5;
        sub_1AE926D18();
        sub_1AE8369B4();
        sub_1AE4F6648();
        sub_1AE836954();
        sub_1AE4F6778();
        sub_1AE83693C(v319, 12);
        sub_1AE4F66E8();
        goto LABEL_354;
      case 13:
        if (v8)
        {
          if ((unint64_t)(v8 - 1) >= *(_QWORD *)(v9 + 16))
            goto LABEL_374;
          v125 = v9 + 32 * (v8 - 1);
          v1 = *(_QWORD *)(v125 + 40);
          v126 = *(_QWORD *)(v125 + 48);
          sub_1AE4FB75C();
          if (v1 == 0x7079547865646E69 && v126 == 0xE900000000000065)
          {
LABEL_136:
            swift_bridgeObjectRelease();
            v150 = v363;
            if (v363 >> 62)
            {
              swift_bridgeObjectRetain_n();
              v151 = sub_1AE926AD8();
              sub_1AE4F67AC();
              if (v151)
                goto LABEL_138;
            }
            else
            {
              v151 = *(_QWORD *)((v363 & 0xFFFFFFFFFFFFF8) + 0x10);
              sub_1AE4F6804();
              if (v151)
              {
LABEL_138:
                v2 = v151 - 1;
                if (__OFSUB__(v151, 1))
                {
                  __break(1u);
LABEL_397:
                  __break(1u);
LABEL_398:
                  __break(1u);
                  goto LABEL_399;
                }
                if ((v150 & 0xC000000000000001) != 0)
                {
                  v152 = v12;
                  v12 = v5;
                  sub_1AE4F6804();
                  v153 = MEMORY[0x1AF453B80](v151 - 1, v150);
                  sub_1AE4F67AC();
                }
                else
                {
                  if ((v2 & 0x8000000000000000) != 0)
                    goto LABEL_397;
                  if (v2 >= *(_QWORD *)((v150 & 0xFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_398;
                  v152 = v12;
                  v12 = v5;
                  v153 = *(_QWORD *)(v150 + 8 * v2 + 32);
                  sub_1AE4F943C();
                }
                goto LABEL_245;
              }
            }
            v152 = v12;
            v12 = v5;
            type metadata accessor for Node();
            v153 = sub_1AE503B28();
            sub_1AE4FD590();
LABEL_245:
            sub_1AE4F67AC();
            sub_1AE505C20();
            v216 = a1;
            v217 = *(_QWORD *)(a1 + 56);
            v156 = __OFADD__(v217, 1);
            v218 = v217 + 1;
            if (v156)
              goto LABEL_371;
            LOBYTE(v5) = v212;
            a1 = v213;
            v3 = v214;
            v4 = v215;
            *(_QWORD *)(v216 + 56) = v218;
            v359 = v213;
            v360 = v214;
            sub_1AE836934();
            v219._countAndFlagsBits = sub_1AE926034();
            KnosisIndexType.init(rawValue:)(v219);
            if (v362 == 9)
              goto LABEL_349;
            *(_BYTE *)(*(_QWORD *)(v153 + 16) + 64) = v362;
            sub_1AE4FB730();
            sub_1AE4F67AC();
            v3 = 13;
            v5 = v12;
            v12 = v152;
            goto LABEL_284;
          }
        }
        else
        {
          sub_1AE508D54();
          v1 = v149 + 13;
          v126 = v324 | 0x8000000000000000;
        }
        if ((sub_1AE4F91C4() & 1) != 0)
          goto LABEL_136;
        v154 = v1 == 0x74696D696CLL && v126 == 0xE500000000000000;
        if (v154 || (sub_1AE4F91C4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_1AE4FC008();
          if (v159)
          {
            sub_1AE4FF294();
            v160 = sub_1AE505584();
            sub_1AE4F6648();
            if (v160)
              goto LABEL_157;
          }
          else
          {
            v160 = *(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10);
            sub_1AE4FB75C();
            if (v160)
            {
LABEL_157:
              v2 = v160 - 1;
              if (__OFSUB__(v160, 1))
                goto LABEL_405;
              if ((v126 & 0xC000000000000001) != 0)
              {
                sub_1AE4FB75C();
                sub_1AE4F9510();
              }
              if ((v2 & 0x8000000000000000) != 0)
              {
LABEL_406:
                __break(1u);
LABEL_407:
                __break(1u);
                goto LABEL_408;
              }
              sub_1AE508914();
              if (v45)
                goto LABEL_407;
              sub_1AE50668C();
              goto LABEL_275;
            }
          }
          type metadata accessor for Node();
          sub_1AE503B28();
          sub_1AE4FD590();
LABEL_275:
          sub_1AE4F6648();
          v240 = v370;
          sub_1AE80244C();
          v241 = *(_QWORD *)(v240 + 56);
          v156 = __OFADD__(v241, 1);
          v242 = v241 + 1;
          if (v156)
            goto LABEL_404;
          sub_1AE506464(v242);
          v1 = (uint64_t)&v359;
          v243 = sub_1AE506750();
          sub_1AE834434(v243, v244, v245, v246, v247);
LABEL_282:
          v357 = v2;
          if (!v2)
          {
            swift_release();
            sub_1AE4F6648();
            v3 = 13;
LABEL_284:
            a1 = v370;
            goto LABEL_326;
          }
          swift_release();
          sub_1AE4F6648();
LABEL_341:
          sub_1AE4F66E8();
          goto LABEL_392;
        }
        if (v1 == 0x736D61726170 && v126 == 0xE600000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v162 = sub_1AE4F91C4();
          sub_1AE4F6648();
          if ((v162 & 1) == 0)
            goto LABEL_367;
        }
        sub_1AE4FC008();
        if (v163)
        {
          sub_1AE4FF294();
          v248 = sub_1AE505584();
          sub_1AE4F6648();
          if (v248)
          {
LABEL_171:
            v165 = sub_1AE4FB75C();
            sub_1AE56FAE4(v165);
            v167 = v166;
            sub_1AE4F6648();
            if (!v167)
              goto LABEL_417;
            goto LABEL_280;
          }
        }
        else
        {
          v164 = *(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10);
          sub_1AE4FB75C();
          if (v164)
            goto LABEL_171;
        }
        type metadata accessor for Node();
        sub_1AE503B28();
        sub_1AE4FD590();
LABEL_280:
        sub_1AE4F6648();
        v1 = v370;
        sub_1AE80244C();
        v249 = *(_QWORD *)(v1 + 56);
        v156 = __OFADD__(v249, 1);
        v250 = v249 + 1;
        if (v156)
          goto LABEL_412;
        sub_1AE506464(v250);
        v251 = sub_1AE506750();
        sub_1AE8347D4(v251, v252, v253, v254, v255);
        goto LABEL_282;
      case 15:
        sub_1AE4FC008();
        if (v50)
        {
          sub_1AE4FF294();
          v1 = sub_1AE505584();
          sub_1AE4F6648();
          if (!v1)
          {
LABEL_208:
            type metadata accessor for Node();
            sub_1AE503B28();
            sub_1AE4FD590();
            goto LABEL_209;
          }
        }
        else
        {
          v1 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
          sub_1AE4FB75C();
          if (!v1)
            goto LABEL_208;
        }
        v2 = v1 - 1;
        if (__OFSUB__(v1, 1))
          goto LABEL_372;
        if ((v9 & 0xC000000000000001) != 0)
        {
          sub_1AE4FB75C();
          sub_1AE4F9510();
        }
        if ((v2 & 0x8000000000000000) != 0)
          goto LABEL_376;
        sub_1AE508914();
        if (v45)
          goto LABEL_378;
        sub_1AE50A674();
LABEL_209:
        sub_1AE4F6648();
        *(_BYTE *)(v1 + 83) = 1;
        sub_1AE4FC564();
        v3 = 15;
        goto LABEL_326;
      case 16:
        sub_1AE4FC008();
        if (v115)
        {
          sub_1AE4FF294();
          v116 = sub_1AE505584();
          sub_1AE4F6648();
          if (!v116)
          {
LABEL_211:
            type metadata accessor for Node();
            sub_1AE503B28();
            sub_1AE4FD590();
            goto LABEL_212;
          }
        }
        else
        {
          v116 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
          sub_1AE4FB75C();
          if (!v116)
            goto LABEL_211;
        }
        v2 = v116 - 1;
        if (__OFSUB__(v116, 1))
          goto LABEL_373;
        if ((v9 & 0xC000000000000001) != 0)
        {
          sub_1AE4FB75C();
          sub_1AE4F9510();
        }
        if ((v2 & 0x8000000000000000) != 0)
          goto LABEL_377;
        sub_1AE508914();
        if (v45)
          goto LABEL_379;
        sub_1AE50A674();
LABEL_212:
        sub_1AE4F6648();
        *(_BYTE *)(v116 + 83) = 0;
        sub_1AE4FC564();
        sub_1AE4FC008();
        if (v198)
        {
          sub_1AE4FF294();
          v1 = sub_1AE505584();
          sub_1AE4F6648();
          if (!v1)
          {
LABEL_220:
            type metadata accessor for Node();
            sub_1AE503B28();
            sub_1AE4FD590();
            goto LABEL_221;
          }
        }
        else
        {
          v1 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
          sub_1AE4FB75C();
          if (!v1)
            goto LABEL_220;
        }
        v2 = v1 - 1;
        if (__OFSUB__(v1, 1))
          goto LABEL_375;
        if ((v9 & 0xC000000000000001) != 0)
        {
          sub_1AE4FB75C();
          sub_1AE4F9510();
        }
        if ((v2 & 0x8000000000000000) != 0)
          goto LABEL_380;
        sub_1AE508914();
        if (v45)
          goto LABEL_381;
        sub_1AE50A674();
LABEL_221:
        sub_1AE4F6648();
        v201 = *(_QWORD *)(v1 + 72);
        v156 = __OFADD__(v201, 1);
        v202 = v201 + 1;
        if (v156)
          goto LABEL_370;
        *(_QWORD *)(v1 + 72) = v202;
        sub_1AE4FC564();
        v3 = 16;
        goto LABEL_326;
      default:
        sub_1AE8368D4();
        sub_1AE4F6778();
        *v297 = v3;
        v297[1] = v12;
        v297[2] = v11;
        v297[3] = v5;
        sub_1AE508D54();
        *(_QWORD *)(v299 + 32) = v298 + 6;
        *(_QWORD *)(v299 + 40) = 0x80000001AE988390;
        *(_BYTE *)(v299 + 48) = 2;
        goto LABEL_391;
    }
  }
}

uint64_t sub_1AE833288(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _BYTE v26[16];

  if (a1 == 8)
  {
    if (qword_1EED99898 != -1)
      swift_once();
    v8 = off_1EEDA41A0;
    swift_bridgeObjectRetain();
    sub_1AE515C78(a2, a3, (uint64_t)v8);
    a2 = v9;
    v11 = v10;
    result = swift_bridgeObjectRelease();
    if (!v11)
    {
      __break(1u);
      return result;
    }
    a3 = v11;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  type metadata accessor for Node();
  v13 = swift_allocObject();
  sub_1AE830EF4();
  type metadata accessor for KnosisQueryParam();
  v14 = sub_1AE925C98();
  type metadata accessor for QueryNode();
  swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1AE883BA0(a2, a3, v14);
  swift_release();
  swift_bridgeObjectRetain();
  sub_1AE515D24();
  swift_bridgeObjectRelease();
  sub_1AE5CD6E0((uint64_t)&v17, (uint64_t)&v18, &qword_1ED30FAE0);
  if (*((_QWORD *)&v18 + 1))
  {
    v21 = v18;
    v22 = v19;
    v23 = v20;
    v24 = v18;
    v25 = v19;
    sub_1AE5CD6E0((uint64_t)&v23, (uint64_t)v26, &qword_1ED30FC40);
    v15 = v22;
    *(_OWORD *)(v13 + 24) = v21;
    *(_OWORD *)(v13 + 40) = v15;
    *(_OWORD *)(v13 + 56) = v23;
    sub_1AE578F28((uint64_t)&v24);
    sub_1AE61E280((uint64_t)&v25);
    sub_1AE578F28((uint64_t)v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE574264((uint64_t)&v24);
    sub_1AE61E2A8((uint64_t)&v25);
    sub_1AE574264((uint64_t)v26);
    *(_BYTE *)(v13 + 80) = a5 & 1;
  }
  else
  {
    v16 = swift_allocObject();
    sub_1AE830EF4();
    swift_release();
    return v16;
  }
  return v13;
}

uint64_t sub_1AE8334E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *v7;
  BOOL v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  _BYTE v20[16];
  char v21;
  uint64_t v22;
  __int128 v23;
  _BYTE v24[16];
  __int128 v25;
  char v26;
  __int128 v27;
  _BYTE v28[16];
  __int128 v29;
  uint64_t v30;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  swift_bridgeObjectRetain();
  sub_1AE835874(v4, v5, (uint64_t)&v17);
  result = swift_bridgeObjectRelease();
  if (!v1)
  {
    v7 = *(_QWORD **)(a1 + 16);
    v8 = v7[2] == 26217 && v7[3] == 0xE200000000000000;
    if ((v8 || (sub_1AE926D60() & 1) != 0) && *(_QWORD *)(a1 + 72) == 2)
    {
      v23 = v17;
      sub_1AE574264((uint64_t)&v23);
      v22 = v18;
      v9 = &v21;
      v10 = &v22;
LABEL_22:
      sub_1AE61E2A8((uint64_t)v10);
      sub_1AE5CD6E0((uint64_t)v20, (uint64_t)v9, &qword_1ED30FC40);
      return sub_1AE574264((uint64_t)v9);
    }
    v30 = v18;
    v11 = *(_QWORD *)(v18 + 16);
    if ((*(_BYTE *)(a1 + 82) & 1) != 0 || (*(_BYTE *)(a1 + 81) & 1) == 0 && *(_BYTE *)(a1 + 80) == 1)
    {
      swift_beginAccess();
      v12 = v7[4];
      if (v12 && v11 - 1 == *(_QWORD *)(v12 + 16))
        sub_1AE8359CC(a1);
    }
    v13 = *(_QWORD *)(a1 + 72);
    if (v11 == v13 || (v19 & 1) != 0)
    {
      if (v13 >= v11)
      {
        v27 = v17;
        sub_1AE574264((uint64_t)&v27);
        v9 = &v26;
        v10 = &v30;
        goto LABEL_22;
      }
      v14 = v19;
      v25 = v17;
      sub_1AE574264((uint64_t)&v25);
      sub_1AE61E2A8((uint64_t)&v30);
      sub_1AE5CD6E0((uint64_t)v20, (uint64_t)v24, &qword_1ED30FC40);
      result = sub_1AE574264((uint64_t)v24);
      if ((v14 & 1) == 0)
        return result;
    }
    else
    {
      v29 = v17;
      sub_1AE574264((uint64_t)&v29);
      sub_1AE61E2A8((uint64_t)&v30);
      sub_1AE5CD6E0((uint64_t)v20, (uint64_t)v28, &qword_1ED30FC40);
      sub_1AE574264((uint64_t)v28);
    }
    *(_QWORD *)&v16 = 0;
    *((_QWORD *)&v16 + 1) = 0xE000000000000000;
    sub_1AE92691C();
    sub_1AE925F74();
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE8368D4();
    swift_allocError();
    *(_OWORD *)v15 = 0u;
    *(_OWORD *)(v15 + 16) = 0u;
    *(_OWORD *)(v15 + 32) = v16;
    *(_BYTE *)(v15 + 48) = 1;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AE833884(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 16);
  v7 = *(_QWORD *)(v5 + 16);
  v6 = *(_QWORD *)(v5 + 24);
  v8 = v7 & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0)
    v9 = HIBYTE(v6) & 0xF;
  else
    v9 = v8;
  if (!v9)
  {
    swift_retain();
    result = swift_release();
    *a1 = a2;
    return result;
  }
  result = sub_1AE835528(v4);
  if (v2)
    return result;
  v12 = result;
  v13 = v11;
  v14 = *(_QWORD *)(v4 + 16);
  swift_beginAccess();
  if (!*(_QWORD *)(v14 + 32))
  {
    swift_endAccess();
    goto LABEL_12;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  v15 = sub_1AE515C74(v12, v13);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  if (!v15)
  {
LABEL_12:
    type metadata accessor for KnosisQueryParam();
    swift_allocObject();
    v18 = swift_retain();
    sub_1AE885968(v18);
    v15 = v19;
    goto LABEL_13;
  }
  if (*(_BYTE *)(v4 + 83) == 1)
  {
    v16 = *(_QWORD *)(a2 + 16);
    swift_beginAccess();
    *(_QWORD *)(v15 + 24) = v16;
    swift_retain();
    swift_release();
LABEL_13:
    swift_retain();
    swift_retain();
    sub_1AE8821A8(v12, v13, v15);
    swift_release();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v21 = 0x206D61726170;
  *((_QWORD *)&v21 + 1) = 0xE600000000000000;
  swift_retain();
  sub_1AE501548(&qword_1EEDA41C0);
  sub_1AE925E90();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  sub_1AE8368D4();
  swift_allocError();
  *(_OWORD *)v20 = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  *(_OWORD *)(v20 + 32) = v21;
  *(_BYTE *)(v20 + 48) = 1;
  swift_willThrow();
  return swift_release();
}

void sub_1AE833BB0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  unsigned __int8 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99[3];
  uint64_t v100;
  _OWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _OWORD v106[4];
  _OWORD *v107;

  v98 = *v3;
  v7 = v3[2];
  v107 = (_OWORD *)v3[1];
  v8 = v3[3];
  v96 = v3[4];
  v97 = v3[5];
  if (qword_1EED998A0 != -1)
    swift_once();
  v9 = v106;
  v10 = qword_1EEDA41A8;
  v11 = *a3;
  v12 = sub_1AE8309CC(*(_QWORD *)(*(_QWORD *)(*a3 + 16) + 16), *(_QWORD *)(*(_QWORD *)(*a3 + 16) + 24), (_QWORD *)qword_1EEDA41A8);
  if ((v13 & 1) != 0
    || (v14 = v12,
        v15 = (_QWORD *)v10,
        v16 = *a2,
        v17 = sub_1AE8309CC(*(_QWORD *)(*(_QWORD *)(*a2 + 16) + 16), *(_QWORD *)(*(_QWORD *)(*a2 + 16) + 24), v15),
        (v18 & 1) != 0)
    || *(uint64_t *)(v16 + 72) < 1)
  {
LABEL_13:
    v100 = v98;
    v101 = v107;
    v30 = v7;
    v102 = v7;
    v103 = v8;
    v31 = v8;
    v8 = v96;
    v7 = v97;
    v104 = v96;
    v105 = v97;
    v32 = *(_OWORD *)(a1 + 16);
    v9[4] = *(_OWORD *)a1;
    v9[5] = v32;
    v33 = *(_OWORD *)(a1 + 48);
    v9[6] = *(_OWORD *)(a1 + 32);
    v9[7] = v33;
    v34 = sub_1AE8025E4();
    sub_1AE834D3C(v11, v34, v35, v36, v37);
    if (!v4)
    {
      swift_bridgeObjectRelease();
      v38 = *(_QWORD *)(v11 + 72);
      v20 = __OFADD__(v38, 1);
      v39 = v38 + 1;
      if (v20)
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)(v11 + 72) = v39;
        v100 = v98;
        v101 = v107;
        v102 = v30;
        v103 = v31;
        v104 = v96;
        v105 = v97;
        sub_1AE80244C();
        v44 = *(_QWORD *)(a1 + 56);
        v20 = __OFADD__(v44, 1);
        v45 = v44 + 1;
        if (!v20)
        {
          *(_QWORD *)(a1 + 56) = v45;
          sub_1AE834D3C(v11, v40, v41, v42, v43);
          swift_bridgeObjectRelease();
          v46 = *(_QWORD *)(v11 + 72);
          v20 = __OFADD__(v46, 1);
          v47 = v46 + 1;
          if (!v20)
          {
            *(_QWORD *)(v11 + 72) = v47;
LABEL_21:
            swift_retain();
            return;
          }
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
      }
      __break(1u);
      goto LABEL_48;
    }
    goto LABEL_17;
  }
  if (v17 < v14)
  {
    v9 = v107;
    v100 = v98;
    v101 = v107;
    v102 = v7;
    v103 = v8;
    v104 = v96;
    v105 = v97;
    sub_1AE833884(a3, v16);
    if (v4)
      return;
    v16 = *a3;
    v19 = *(_QWORD *)(*a3 + 72);
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
    {
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    *(_QWORD *)(v16 + 72) = v21;
    v100 = v98;
    v101 = v9;
    v102 = v7;
    v103 = v8;
    v104 = v96;
    v105 = v97;
    sub_1AE80244C();
    v26 = *(_QWORD *)(a1 + 56);
    v20 = __OFADD__(v26, 1);
    v27 = v26 + 1;
    if (v20)
    {
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    v11 = v24;
    *(_QWORD *)(a1 + 56) = v27;
    sub_1AE834D3C(v16, v22, v23, v24, v25);
    swift_bridgeObjectRelease();
    v28 = *(_QWORD *)(v16 + 72);
    v20 = __OFADD__(v28, 1);
    v29 = v28 + 1;
    if (!v20)
      goto LABEL_32;
    __break(1u);
    goto LABEL_13;
  }
  if (v14 == v17)
  {
    v100 = v98;
    v101 = v107;
    v102 = v7;
    v103 = v8;
    v104 = v96;
    v105 = v97;
    sub_1AE80244C();
    v52 = *(_QWORD *)(a1 + 56);
    v20 = __OFADD__(v52, 1);
    v53 = v52 + 1;
    if (v20)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    *(_QWORD *)(a1 + 56) = v53;
    sub_1AE834D3C(v16, v48, v49, v50, v51);
    if (!v4)
    {
      swift_bridgeObjectRelease();
      v59 = *(_QWORD *)(v16 + 72);
      v20 = __OFADD__(v59, 1);
      v29 = v59 + 1;
      if (!v20)
      {
LABEL_32:
        *(_QWORD *)(v16 + 72) = v29;
        goto LABEL_21;
      }
      goto LABEL_57;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  v100 = v98;
  v101 = v107;
  v102 = v7;
  v103 = v8;
  v104 = v96;
  v105 = v97;
  v54 = sub_1AE8350B8(v16);
  if (!v4)
  {
    v56 = v16;
    v57 = v55;
    v93 = v54;
    v91 = v56;
    v58 = *(_QWORD *)(v56 + 16);
    swift_beginAccess();
    if (*(_QWORD *)(v58 + 32))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v92 = sub_1AE515C74(v93, v57);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v92)
      {
        swift_beginAccess();
        if (*(_QWORD *)(v92 + 24))
        {
          v100 = v98;
          v101 = v107;
          v102 = v7;
          v103 = v8;
          v104 = v96;
          v105 = v97;
          v95 = swift_retain();
          v99[0] = sub_1AE8352DC(v95);
          v100 = v98;
          v101 = v107;
          v102 = v7;
          v103 = v8;
          v104 = v96;
          v105 = v97;
          sub_1AE833BB0(a1, v99, a3);
          v76 = *(_QWORD *)(v91 + 16);
          swift_beginAccess();
          if (*(_QWORD *)(v76 + 32))
          {
            type metadata accessor for KnosisQueryParam();
            swift_allocObject();
            swift_retain();
            v77 = swift_retain();
            sub_1AE885968(v77);
            sub_1AE836748(v78, v93, v57);
            swift_endAccess();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
          }
          swift_release();
          swift_release();
          goto LABEL_21;
        }
        swift_beginAccess();
        if (*(_QWORD *)(*(_QWORD *)(v92 + 16) + 16))
        {
          v100 = v98;
          v101 = v107;
          v102 = v7;
          v103 = v8;
          v104 = v96;
          v105 = v97;
          v60 = *(_OWORD *)(a1 + 16);
          v106[0] = *(_OWORD *)a1;
          v61 = *(_OWORD *)(a1 + 32);
          v62 = *(_OWORD *)(a1 + 48);
          v106[1] = v60;
          v106[2] = v61;
          v106[3] = v62;
          v63 = sub_1AE8025E4();
          sub_1AE834D3C(v11, v63, v64, v65, v66);
          swift_bridgeObjectRelease();
          v67 = *(_QWORD *)(v11 + 72);
          v20 = __OFADD__(v67, 1);
          v68 = v67 + 1;
          if (v20)
          {
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
          *(_QWORD *)(v11 + 72) = v68;
          v100 = v98;
          v101 = v107;
          v102 = v7;
          v103 = v8;
          v104 = v96;
          v105 = v97;
          sub_1AE80244C();
          v73 = *(_QWORD *)(a1 + 56);
          v20 = __OFADD__(v73, 1);
          v74 = v73 + 1;
          if (v20)
          {
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
          *(_QWORD *)(a1 + 56) = v74;
          sub_1AE834D3C(v11, v69, v70, v71, v72);
          swift_bridgeObjectRelease();
          v79 = *(_QWORD *)(v11 + 72);
          v20 = __OFADD__(v79, 1);
          v80 = v79 + 1;
          if (v20)
            goto LABEL_60;
          *(_QWORD *)(v11 + 72) = v80;
          v81 = *(_QWORD *)(v91 + 16);
          swift_beginAccess();
          if (*(_QWORD *)(v81 + 32))
          {
            swift_retain();
            sub_1AE654858(v93, v57, v82, v83, v84, v85, v86, v87, v91, v92);
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
LABEL_49:
            v88 = *(_QWORD *)(v91 + 72);
            v20 = __OFSUB__(v88, 1);
            v89 = v88 - 1;
            if (v20)
            {
LABEL_61:
              __break(1u);
              return;
            }
            *(_QWORD *)(v91 + 72) = v89;
            v100 = v98;
            v101 = v107;
            v102 = v7;
            v103 = v8;
            v104 = v96;
            v105 = v97;
            sub_1AE833884(a2, v11);
            swift_release();
            v16 = *a2;
            v90 = *(_QWORD *)(*a2 + 72);
            v20 = __OFADD__(v90, 1);
            v29 = v90 + 1;
            if (!v20)
              goto LABEL_32;
            __break(1u);
            goto LABEL_53;
          }
LABEL_48:
          swift_endAccess();
          swift_bridgeObjectRelease();
          goto LABEL_49;
        }
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    sub_1AE8368D4();
    swift_allocError();
    *(_OWORD *)v75 = 0u;
    *(_OWORD *)(v75 + 16) = 0u;
    *(_QWORD *)(v75 + 32) = 0xD00000000000001FLL;
    *(_QWORD *)(v75 + 40) = 0x80000001AE988590;
    *(_BYTE *)(v75 + 48) = 0;
    swift_willThrow();
  }
}

uint64_t sub_1AE834434(uint64_t result, unsigned __int8 a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;

  v9 = HIBYTE(a4) & 0xF;
  v10 = a3 & 0xFFFFFFFFFFFFLL;
  if ((a4 & 0x2000000000000000) != 0)
    v11 = HIBYTE(a4) & 0xF;
  else
    v11 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
LABEL_46:
    v33 = 0;
    v34 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    v33 = 0xD000000000000013;
    v34 = 0x80000001AE988490;
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    v26 = v33;
    v27 = v34;
    sub_1AE8368D4();
    swift_allocError();
    *(_QWORD *)v28 = a2;
    *(_QWORD *)(v28 + 8) = a3;
    *(_QWORD *)(v28 + 16) = a4;
    *(_QWORD *)(v28 + 24) = a5;
    *(_QWORD *)(v28 + 32) = v26;
    *(_QWORD *)(v28 + 40) = v27;
    *(_BYTE *)(v28 + 48) = 1;
    return swift_willThrow();
  }
  v12 = result;
  if ((a4 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v14 = sub_1AE5BC078(a3, a4, 10);
    v16 = v32;
    result = swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  if ((a4 & 0x2000000000000000) == 0)
  {
    if ((a3 & 0x1000000000000000) != 0)
      v13 = (unsigned __int8 *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v13 = (unsigned __int8 *)sub_1AE926994();
    result = (uint64_t)sub_1AE5BC064(v13, v10);
    v14 = result;
    v16 = v15 & 1;
LABEL_44:
    if ((v16 & 1) == 0)
    {
      *(_QWORD *)(*(_QWORD *)(v12 + 16) + 48) = v14;
      return result;
    }
    goto LABEL_46;
  }
  v33 = a3;
  v34 = a4 & 0xFFFFFFFFFFFFFFLL;
  if (a3 == 43)
  {
    if (!v9)
      goto LABEL_56;
    if (v9 == 1 || (BYTE1(a3) - 48) > 9u)
      goto LABEL_31;
    v14 = (BYTE1(a3) - 48);
    if (v9 != 2)
    {
      if ((BYTE2(a3) - 48) > 9u)
        goto LABEL_31;
      v14 = 10 * (BYTE1(a3) - 48) + (BYTE2(a3) - 48);
      v17 = v9 - 3;
      if (v17)
      {
        v18 = (unsigned __int8 *)&v33 + 3;
        while (1)
        {
          v19 = *v18 - 48;
          if (v19 > 9)
            goto LABEL_31;
          v20 = 10 * v14;
          if ((unsigned __int128)(v14 * (__int128)10) >> 64 != (10 * v14) >> 63)
            goto LABEL_31;
          v14 = v20 + v19;
          if (__OFADD__(v20, v19))
            goto LABEL_31;
          v16 = 0;
          ++v18;
          if (!--v17)
            goto LABEL_44;
        }
      }
    }
LABEL_43:
    v16 = 0;
    goto LABEL_44;
  }
  if (a3 != 45)
  {
    if (!v9 || (a3 - 48) > 9u)
      goto LABEL_31;
    v14 = (a3 - 48);
    if (v9 != 1)
    {
      if ((BYTE1(a3) - 48) > 9u)
        goto LABEL_31;
      v14 = 10 * (a3 - 48) + (BYTE1(a3) - 48);
      v21 = v9 - 2;
      if (v21)
      {
        v22 = (unsigned __int8 *)&v33 + 2;
        while (1)
        {
          v23 = *v22 - 48;
          if (v23 > 9)
            goto LABEL_31;
          v24 = 10 * v14;
          if ((unsigned __int128)(v14 * (__int128)10) >> 64 != (10 * v14) >> 63)
            goto LABEL_31;
          v14 = v24 + v23;
          if (__OFADD__(v24, v23))
            goto LABEL_31;
          v16 = 0;
          ++v22;
          if (!--v21)
            goto LABEL_44;
        }
      }
    }
    goto LABEL_43;
  }
  if (v9)
  {
    if (v9 != 1 && (BYTE1(a3) - 48) <= 9u)
    {
      if (v9 == 2)
      {
        v16 = 0;
        v14 = -(uint64_t)(BYTE1(a3) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(a3) - 48) <= 9u)
      {
        v14 = -10 * (BYTE1(a3) - 48) - (BYTE2(a3) - 48);
        v25 = v9 - 3;
        if (!v25)
          goto LABEL_43;
        v29 = (unsigned __int8 *)&v33 + 3;
        while (1)
        {
          v30 = *v29 - 48;
          if (v30 > 9)
            break;
          v31 = 10 * v14;
          if ((unsigned __int128)(v14 * (__int128)10) >> 64 != (10 * v14) >> 63)
            break;
          v14 = v31 - v30;
          if (__OFSUB__(v31, v30))
            break;
          v16 = 0;
          ++v29;
          if (!--v25)
            goto LABEL_44;
        }
      }
    }
LABEL_31:
    v14 = 0;
    v16 = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_56:
  __break(1u);
  return result;
}

void sub_1AE8347D4(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v6 = v5;
  v10 = sub_1AE9244BC();
  v63 = *(_QWORD *)(v10 - 8);
  v65 = v10;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F666C();
  v14 = v13 - v12;
  v59 = a3;
  sub_1AE4F7630();
  sub_1AE4F6804();
  v15 = sub_1AE9267D8();
  sub_1AE4F67AC();
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    v56 = a4;
    v57 = a5;
    v69 = MEMORY[0x1E0DEE9D8];
    sub_1AE5218F4();
    sub_1AE5D892C();
    v17 = 0;
    v60 = v16;
    do
    {
      v61 = v17;
      sub_1AE4FB75C();
      v18 = sub_1AE9267D8();
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        v68 = MEMORY[0x1E0DEE9D8];
        sub_1AE52154C();
        v20 = v18 + 56;
        do
        {
          sub_1AE4F6730();
          sub_1AE924498();
          v21 = sub_1AE9267A8();
          v23 = v22;
          (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v14, v65);
          sub_1AE4F81B8();
          v24 = v68;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1AE52154C();
            v24 = v68;
          }
          v26 = *(_QWORD *)(v24 + 16);
          v25 = *(_QWORD *)(v24 + 24);
          if (v26 >= v25 >> 1)
          {
            sub_1AE506008(v25);
            sub_1AE52154C();
            v24 = v68;
          }
          *(_QWORD *)(v24 + 16) = v26 + 1;
          v27 = v24 + 16 * v26;
          *(_QWORD *)(v27 + 32) = v21;
          *(_QWORD *)(v27 + 40) = v23;
          v20 += 32;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v16 = v60;
      }
      else
      {
        sub_1AE4F6648();
        sub_1AE4F81B8();
        v24 = MEMORY[0x1E0DEE9D8];
      }
      v28 = v69;
      if ((sub_1AE505598() & 1) == 0)
      {
        sub_1AE5218F4();
        v28 = v69;
      }
      v30 = *(_QWORD *)(v28 + 16);
      v29 = *(_QWORD *)(v28 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1AE506008(v29);
        sub_1AE5218F4();
        v28 = v69;
      }
      ++v17;
      *(_QWORD *)(v28 + 16) = v30 + 1;
      *(_QWORD *)(v28 + 8 * v30 + 32) = v24;
    }
    while (v61 + 1 != v16);
    swift_bridgeObjectRelease();
    a5 = v57;
    v6 = v5;
    a4 = v56;
  }
  else
  {
    sub_1AE4F6648();
    v28 = MEMORY[0x1E0DEE9D8];
  }
  sub_1AE4F6804();
  sub_1AE8303D8(v28, a2, v59, a4, a5);
  if (!v6)
  {
    v32 = v31;
    v64 = *(_QWORD *)(v31 + 16);
    if (v64)
    {
      sub_1AE4FB75C();
      v33 = 0;
      v34 = MEMORY[0x1E0DEE9E0];
      v62 = v32;
      while (1)
      {
        v35 = *(_QWORD *)(*(_QWORD *)(v32 + 8 * v33 + 32) + 16);
        if (!v35)
          break;
        if (v35 == 1)
          goto LABEL_40;
        v66 = v33;
        sub_1AE4FB764();
        swift_bridgeObjectRetain();
        sub_1AE4FB75C();
        v36 = sub_1AE926034();
        v38 = v37;
        v67 = sub_1AE926034();
        v40 = v39;
        swift_isUniquelyReferenced_nonNull_native();
        v41 = sub_1AE8369D0();
        if (__OFADD__(*(_QWORD *)(v34 + 16), (v42 & 1) == 0))
          goto LABEL_41;
        v43 = v41;
        v44 = v42;
        sub_1AE501548(&qword_1ED30FD00);
        if ((sub_1AE926A54() & 1) != 0)
        {
          v45 = sub_1AE8369D0();
          if ((v44 & 1) != (v46 & 1))
            goto LABEL_43;
          v43 = v45;
        }
        if ((v44 & 1) != 0)
        {
          v47 = (uint64_t *)(*(_QWORD *)(v34 + 56) + 16 * v43);
          swift_bridgeObjectRelease();
          *v47 = v67;
          v47[1] = v40;
        }
        else
        {
          sub_1AE4FFC58(v34 + 8 * (v43 >> 6));
          v49 = (uint64_t *)(v48 + 16 * v43);
          *v49 = v36;
          v49[1] = v38;
          v50 = (uint64_t *)(*(_QWORD *)(v34 + 56) + 16 * v43);
          *v50 = v67;
          v50[1] = v40;
          v51 = *(_QWORD *)(v34 + 16);
          v52 = __OFADD__(v51, 1);
          v53 = v51 + 1;
          if (v52)
            goto LABEL_42;
          *(_QWORD *)(v34 + 16) = v53;
          swift_bridgeObjectRetain();
        }
        ++v33;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v32 = v62;
        if (v64 == v66 + 1)
        {
          sub_1AE4F6648();
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      sub_1AE926DE4();
      __break(1u);
    }
    else
    {
      v34 = MEMORY[0x1E0DEE9E0];
LABEL_35:
      sub_1AE4F6648();
      if (*(_QWORD *)(v34 + 16))
      {
        v54 = *(_QWORD *)(a1 + 16);
        swift_beginAccess();
        *(_QWORD *)(v54 + 72) = v34;
      }
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1AE834D3C(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  result = sub_1AE835528(a1);
  if (v5)
    return result;
  v13 = result;
  v14 = v12;
  v15 = *(_QWORD *)(a1 + 16);
  swift_beginAccess();
  if (!*(_QWORD *)(v15 + 32))
  {
    swift_endAccess();
LABEL_7:
    sub_1AE501548(&qword_1ED31BCD0);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1AE934250;
    *(_QWORD *)(v20 + 32) = a3;
    *(_QWORD *)(v20 + 40) = a4;
    type metadata accessor for KnosisQueryParam();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1AE885910(v20);
    v16 = v21;
    if (a2 == 3)
      *(_BYTE *)(v21 + 32) = 3;
    goto LABEL_9;
  }
  v23 = a5;
  swift_retain();
  swift_bridgeObjectRetain();
  v16 = sub_1AE515C74(v13, v14);
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  if (!v16)
    goto LABEL_7;
  if (*(_BYTE *)(a1 + 83) == 1)
  {
    swift_beginAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1AE8DD234();
    v17 = *(_QWORD *)(*(_QWORD *)(v16 + 16) + 16);
    sub_1AE8DD574(v17);
    v18 = *(_QWORD *)(v16 + 16);
    *(_QWORD *)(v18 + 16) = v17 + 1;
    v19 = v18 + 16 * v17;
    *(_QWORD *)(v19 + 32) = a3;
    *(_QWORD *)(v19 + 40) = a4;
    swift_endAccess();
    swift_release();
LABEL_9:
    swift_retain();
    swift_retain();
    sub_1AE8821A8(v13, v14, v16);
    swift_release();
    swift_release_n();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v24 = 0x206D61726170;
  *((_QWORD *)&v24 + 1) = 0xE600000000000000;
  swift_retain();
  sub_1AE501548(&qword_1EEDA41C0);
  sub_1AE925E90();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  sub_1AE8368D4();
  swift_allocError();
  *(_QWORD *)v22 = a2;
  *(_QWORD *)(v22 + 8) = a3;
  *(_QWORD *)(v22 + 16) = a4;
  *(_QWORD *)(v22 + 24) = v23;
  *(_OWORD *)(v22 + 32) = v24;
  *(_BYTE *)(v22 + 48) = 1;
  swift_willThrow();
  return swift_release();
}

unint64_t sub_1AE8350B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _BYTE v17[16];
  __int128 v18;
  uint64_t v19;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  swift_bridgeObjectRetain();
  sub_1AE835874(v4, v5, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    v6 = v15;
    v18 = v13;
    sub_1AE574264((uint64_t)&v18);
    v19 = v14;
    sub_1AE61E2A8((uint64_t)&v19);
    sub_1AE5CD6E0((uint64_t)&v16, (uint64_t)v17, &qword_1ED30FC40);
    sub_1AE574264((uint64_t)v17);
    if ((v6 & 1) == 0)
    {
      sub_1AE92691C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      v4 = 0x80000001AE9885B0;
      v7 = 0xD00000000000002ALL;
LABEL_8:
      sub_1AE8368D4();
      swift_allocError();
      *(_OWORD *)v11 = 0u;
      *(_OWORD *)(v11 + 16) = 0u;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v4;
      *(_BYTE *)(v11 + 48) = 1;
      swift_willThrow();
      return v4;
    }
    if (*(uint64_t *)(a1 + 72) < 1
      || (v8 = *(_QWORD *)(a1 + 16), swift_beginAccess(), !*(_QWORD *)(v8 + 32))
      || (swift_bridgeObjectRetain(), v4 = sub_1AE740668(), v10 = v9, swift_bridgeObjectRelease(), !v10))
    {
      sub_1AE92691C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      v7 = 0xD000000000000024;
      v4 = 0x80000001AE9885E0;
      goto LABEL_8;
    }
  }
  return v4;
}

uint64_t sub_1AE8352DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  _BYTE v7[48];
  _OWORD v8[3];
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _BYTE v14[16];

  swift_bridgeObjectRetain();
  sub_1AE515D24();
  swift_bridgeObjectRelease();
  sub_1AE5CD6E0((uint64_t)v7, (uint64_t)v8, &qword_1ED30FAE0);
  if (*((_QWORD *)&v8[0] + 1))
  {
    v9 = v8[0];
    v10 = v8[1];
    v11 = v8[2];
    type metadata accessor for Node();
    v2 = swift_allocObject();
    sub_1AE830EF4();
    *(_QWORD *)(v2 + 16) = a1;
    swift_retain();
    swift_release();
    swift_beginAccess();
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
      v3 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v2 + 72) = v3;
    v12 = v9;
    v13 = v10;
    sub_1AE5CD6E0((uint64_t)&v11, (uint64_t)v14, &qword_1ED30FC40);
    *(_OWORD *)(v2 + 24) = v9;
    v4 = v11;
    *(_OWORD *)(v2 + 40) = v10;
    *(_OWORD *)(v2 + 56) = v4;
    sub_1AE578F28((uint64_t)&v12);
    sub_1AE61E280((uint64_t)&v13);
    sub_1AE578F28((uint64_t)v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE574264((uint64_t)&v12);
    sub_1AE61E2A8((uint64_t)&v13);
    sub_1AE574264((uint64_t)v14);
  }
  else
  {
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    v2 = 0x726F74617265706FLL;
    sub_1AE8368D4();
    swift_allocError();
    *(_OWORD *)v5 = 0u;
    *(_OWORD *)(v5 + 16) = 0u;
    *(_QWORD *)(v5 + 32) = 0x726F74617265706FLL;
    *(_QWORD *)(v5 + 40) = 0xE900000000000020;
    *(_BYTE *)(v5 + 48) = 1;
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1AE835528(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t result;
  unint64_t v12;
  int64_t v13;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char v26;
  _BYTE v27[16];
  _BYTE v28[16];
  __int128 v29;
  _BYTE v30[16];
  __int128 v31;
  _BYTE v32[16];
  __int128 v33;
  uint64_t v34;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_OWORD *)(v1 + 16);
  v21[0] = *(_OWORD *)v1;
  v21[1] = v6;
  v22 = v4;
  v23 = v5;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v7 + 24);
  swift_bridgeObjectRetain();
  v10 = v21;
  sub_1AE835874(v8, v9, (uint64_t)&v24);
  result = swift_bridgeObjectRelease();
  if (v2)
    return (uint64_t)v10;
  v34 = v25;
  v12 = *(_QWORD *)(v25 + 16);
  v13 = *(_QWORD *)(a1 + 72);
  if (v13 >= (uint64_t)v12 && (v26 & 1) == 0)
  {
    *(_QWORD *)&v21[0] = 0;
    *((_QWORD *)&v21[0] + 1) = 0xE000000000000000;
    sub_1AE92691C();
    sub_1AE925F74();
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    v33 = v24;
    sub_1AE574264((uint64_t)&v33);
    sub_1AE61E2A8((uint64_t)&v34);
    sub_1AE5CD6E0((uint64_t)v27, (uint64_t)v32, &qword_1ED30FC40);
    sub_1AE574264((uint64_t)v32);
    result = sub_1AE925F74();
    if (!__OFADD__(*(_QWORD *)(a1 + 72), 1))
    {
      sub_1AE926D18();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      v16 = *((_QWORD *)&v21[0] + 1);
      v10 = *(_OWORD **)&v21[0];
      sub_1AE8368D4();
      swift_allocError();
      *(_OWORD *)v17 = 0u;
      *(_OWORD *)(v17 + 16) = 0u;
      *(_QWORD *)(v17 + 32) = v10;
      *(_QWORD *)(v17 + 40) = v16;
      *(_BYTE *)(v17 + 48) = 1;
      swift_willThrow();
      return (uint64_t)v10;
    }
    __break(1u);
    goto LABEL_16;
  }
  if ((v26 & 1) == 0 || (v15 = v13 - (v12 - 1), v13 < (uint64_t)(v12 - 1)))
  {
    if (v13 < v12)
    {
      v10 = *(_OWORD **)(v25 + 16 * v13 + 32);
      v29 = v24;
      swift_bridgeObjectRetain();
      sub_1AE574264((uint64_t)&v29);
      sub_1AE61E2A8((uint64_t)&v34);
      sub_1AE5CD6E0((uint64_t)v27, (uint64_t)v28, &qword_1ED30FC40);
      sub_1AE574264((uint64_t)v28);
      return (uint64_t)v10;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v12)
  {
    v18 = v25 + 16 * (v12 - 1);
    v19 = *(_QWORD *)(v18 + 32);
    v20 = *(_QWORD *)(v18 + 40);
    *(_QWORD *)&v21[0] = v15;
    swift_bridgeObjectRetain();
    sub_1AE926D18();
    *(_QWORD *)&v21[0] = v19;
    *((_QWORD *)&v21[0] + 1) = v20;
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    v10 = *(_OWORD **)&v21[0];
    v31 = v24;
    sub_1AE574264((uint64_t)&v31);
    sub_1AE61E2A8((uint64_t)&v34);
    sub_1AE5CD6E0((uint64_t)v27, (uint64_t)v30, &qword_1ED30FC40);
    sub_1AE574264((uint64_t)v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1AE835874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v7 = *v3;
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1AE536EDC(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(v7 + 56) + 48 * v8;
      v12 = *(_QWORD *)v10;
      v11 = *(_QWORD *)(v10 + 8);
      v13 = *(_QWORD *)(v10 + 16);
      v14 = *(_BYTE *)(v10 + 24);
      v16 = *(_QWORD *)(v10 + 32);
      v15 = *(_QWORD *)(v10 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRelease();
      *(_QWORD *)a3 = v12;
      *(_QWORD *)(a3 + 8) = v11;
      *(_QWORD *)(a3 + 16) = v13;
      *(_BYTE *)(a3 + 24) = v14;
      *(_QWORD *)(a3 + 32) = v16;
      *(_QWORD *)(a3 + 40) = v15;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  sub_1AE8368D4();
  swift_allocError();
  *(_OWORD *)v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(_QWORD *)(v18 + 32) = 0xD000000000000011;
  *(_QWORD *)(v18 + 40) = 0x80000001AE988570;
  *(_BYTE *)(v18 + 48) = 1;
  return swift_willThrow();
}

uint64_t sub_1AE8359CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  BOOL v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t *v31;
  _QWORD *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;

  v2 = sub_1AE925C98();
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
    goto LABEL_72;
  v5 = (_QWORD *)v2;
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v9 = v4 == 1;
  v10 = v4 - 2;
  v73 = v4 - 2;
  v74 = a1;
  do
  {
    v11 = *(_QWORD *)(v3 + v6 + 32);
    v12 = *(_QWORD *)(v3 + v6 + 40);
    if ((v8 & 1) == 0)
    {
      v13 = *(_QWORD *)(a1 + 64);
      if (!v13)
        goto LABEL_19;
      if (v11 != *(_QWORD *)(a1 + 56) || v13 != v12)
      {
        v15 = *(_QWORD *)(v3 + v6 + 40);
        v16 = *(_QWORD *)(v3 + v6 + 32);
        v17 = v5;
        v18 = v9;
        v19 = sub_1AE926D60();
        v9 = v18;
        v5 = v17;
        a1 = v74;
        v11 = v16;
        v12 = v15;
        if ((v19 & 1) == 0)
        {
LABEL_19:
          if (v9)
            goto LABEL_29;
          v8 = 0;
          goto LABEL_26;
        }
      }
      if (v7 == v4)
        goto LABEL_28;
    }
    if (v7 < v4 - 1)
    {
      if (v7 + 1 < v4)
      {
        v75 = v9;
        v20 = *(_QWORD *)(v3 + v6 + 56);
        v77 = *(_QWORD *)(v3 + v6 + 48);
        v21 = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_isUniquelyReferenced_nonNull_native();
        v22 = sub_1AE536EDC(v21, v12);
        if (__OFADD__(v5[2], (v23 & 1) == 0))
          goto LABEL_69;
        v24 = v22;
        v25 = v23;
        sub_1AE501548(&qword_1ED30FD00);
        v26 = sub_1AE926A54();
        v27 = v21;
        if ((v26 & 1) != 0)
        {
          v28 = sub_1AE536EDC(v21, v12);
          if ((v25 & 1) != (v29 & 1))
            goto LABEL_76;
          v24 = v28;
          v27 = v21;
        }
        if ((v25 & 1) != 0)
        {
          v30 = (_QWORD *)(v5[7] + 16 * v24);
          swift_bridgeObjectRelease();
          *v30 = v77;
          v30[1] = v20;
        }
        else
        {
          v5[(v24 >> 6) + 8] |= 1 << v24;
          v31 = (uint64_t *)(v5[6] + 16 * v24);
          *v31 = v27;
          v31[1] = v12;
          v32 = (_QWORD *)(v5[7] + 16 * v24);
          *v32 = v77;
          v32[1] = v20;
          v33 = v5[2];
          v34 = __OFADD__(v33, 1);
          v35 = v33 + 1;
          if (v34)
            goto LABEL_70;
          v5[2] = v35;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v73;
        a1 = v74;
        v9 = v75;
        goto LABEL_24;
      }
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
LABEL_24:
    if (v9)
      goto LABEL_30;
    v8 = 1;
LABEL_26:
    v9 = v10 == v7;
    v3 = *(_QWORD *)(a1 + 40);
    v4 = *(_QWORD *)(v3 + 16);
    v6 += 16;
    ++v7;
  }
  while (v7 < v4);
  __break(1u);
LABEL_28:
  swift_bridgeObjectRetain();
  swift_isUniquelyReferenced_nonNull_native();
  sub_1AE53A244();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_29:
  if (!v5[2])
  {
LABEL_66:
    sub_1AE92691C();
    sub_1AE925F74();
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE8368D4();
    swift_allocError();
    *(_OWORD *)v72 = 0u;
    *(_OWORD *)(v72 + 16) = 0u;
    *(_QWORD *)(v72 + 32) = 0;
    *(_QWORD *)(v72 + 40) = 0xE000000000000000;
    *(_BYTE *)(v72 + 48) = 1;
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
LABEL_30:
  v36 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 16);
  if (v36 >= 2)
  {
    v40 = v36 - 1;
    v41 = 16 * v36;
    while (1)
    {
      --v40;
      v42 = *(_QWORD *)(a1 + 40);
      if ((unint64_t)v40 >= *(_QWORD *)(v42 + 16))
        goto LABEL_71;
      v43 = (uint64_t *)(v42 + v41);
      v45 = *v43;
      v44 = v43[1];
      v46 = *(_QWORD *)(a1 + 16);
      swift_beginAccess();
      v47 = *(_QWORD *)(v46 + 32);
      if (!v47)
      {
        swift_endAccess();
        goto LABEL_66;
      }
      v48 = *(_QWORD *)(v47 + 16);
      swift_bridgeObjectRetain();
      if (!v48)
      {
        swift_retain();
LABEL_65:
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_66;
      }
      swift_bridgeObjectRetain();
      swift_retain();
      v49 = sub_1AE536EDC(v45, v44);
      if ((v50 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_65;
      }
      v51 = *(_QWORD *)(*(_QWORD *)(v47 + 56) + 8 * v49);
      swift_endAccess();
      swift_retain();
      swift_release();
      swift_bridgeObjectRelease();
      if (!v5[2])
        goto LABEL_55;
      v79 = v51;
      swift_bridgeObjectRetain();
      v52 = sub_1AE536EDC(v45, v44);
      if ((v53 & 1) != 0)
        break;
      swift_release();
      swift_bridgeObjectRelease_n();
LABEL_60:
      v41 -= 16;
      if (v40 < 1)
        goto LABEL_31;
    }
    v54 = (uint64_t *)(v5[7] + 16 * v52);
    v78 = *v54;
    v55 = v54[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v56 = (uint64_t *)(*(_QWORD *)(a1 + 16) + 32);
    swift_beginAccess();
    if (*v56)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1AE536EDC(v45, v44);
      v58 = v57;
      swift_bridgeObjectRelease();
      if ((v58 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        v80 = *v56;
        *v56 = 0x8000000000000000;
        sub_1AE501548(&qword_1ED30FD18);
        sub_1AE926A54();
        swift_bridgeObjectRelease();
        type metadata accessor for KnosisQueryParam();
        sub_1AE926A6C();
        *v56 = v80;
        swift_bridgeObjectRelease();
      }
      v59 = v55;
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      a1 = v74;
    }
    else
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      v59 = v55;
    }
    v60 = *(_QWORD *)(a1 + 16);
    swift_beginAccess();
    if (*(_QWORD *)(v60 + 32))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_isUniquelyReferenced_nonNull_native();
      v61 = *(_QWORD **)(v60 + 32);
      v81 = v61;
      v76 = v60;
      *(_QWORD *)(v60 + 32) = 0x8000000000000000;
      v62 = sub_1AE536EDC(v78, v59);
      if (__OFADD__(v61[2], (v63 & 1) == 0))
        goto LABEL_73;
      v64 = v62;
      v65 = v63;
      sub_1AE501548(&qword_1ED30FD18);
      a1 = v74;
      if ((sub_1AE926A54() & 1) != 0)
      {
        v66 = sub_1AE536EDC(v78, v55);
        if ((v65 & 1) != (v67 & 1))
          goto LABEL_76;
        v64 = v66;
      }
      if ((v65 & 1) != 0)
      {
        v68 = v61[7];
        swift_release();
        *(_QWORD *)(v68 + 8 * v64) = v79;
      }
      else
      {
        v61[(v64 >> 6) + 8] |= 1 << v64;
        v69 = (uint64_t *)(v61[6] + 16 * v64);
        *v69 = v78;
        v69[1] = v55;
        *(_QWORD *)(v61[7] + 8 * v64) = v79;
        v70 = v61[2];
        v34 = __OFADD__(v70, 1);
        v71 = v70 + 1;
        if (v34)
          goto LABEL_75;
        v61[2] = v71;
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)(v76 + 32) = v81;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_endAccess();
LABEL_55:
      swift_bridgeObjectRelease();
    }
    swift_release();
    goto LABEL_60;
  }
LABEL_31:
  *(_BYTE *)(a1 + 81) = 1;
  v37 = *(_QWORD *)(a1 + 72);
  v34 = __OFADD__(v37, 1);
  v38 = v37 + 1;
  if (!v34)
  {
    *(_QWORD *)(a1 + 72) = v38;
    return swift_bridgeObjectRelease();
  }
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Node()
{
  return objc_opt_self();
}

uint64_t initializeWithCopy for ParserError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ParserError(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for ParserError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParserError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParserError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ParserError()
{
  sub_1AE4F67D4();
}

uint64_t destroy for Parser()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for Parser(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Parser(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Parser(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for Parser()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE836640(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE83668C + 4 * byte_1AE961765[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE8366C0 + 4 * byte_1AE961760[v4]))();
}

uint64_t sub_1AE8366C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8366C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8366D0);
  return result;
}

uint64_t sub_1AE8366DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8366E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE8366E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8366F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ParserError.ErrorType()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE83670C()
{
  unint64_t result;

  result = qword_1EEDA41B0;
  if (!qword_1EEDA41B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE961878, &unk_1E5DB2BD8);
    atomic_store(result, (unint64_t *)&qword_1EEDA41B0);
  }
  return result;
}

uint64_t sub_1AE836748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v10;

  v4 = v3;
  swift_isUniquelyReferenced_nonNull_native();
  v10 = *v3;
  *v3 = 0x8000000000000000;
  v8 = sub_1AE8367D0(a1, a2, a3);
  *v4 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1AE8367D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v4 = v3;
  v8 = *v3;
  v9 = sub_1AE536EDC(a2, a3);
  if (__OFADD__(*(_QWORD *)(v8 + 16), (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_1AE501548(&qword_1ED30FD18);
  if ((sub_1AE926A54() & 1) == 0)
    goto LABEL_5;
  v13 = sub_1AE536EDC(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_1AE926DE4();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = *(_QWORD *)(v15 + 56);
    result = *(_QWORD *)(v16 + 8 * v11);
    *(_QWORD *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_1AE53B180(v11, a2, a3, a1, v15);
    swift_bridgeObjectRetain();
    return 0;
  }
  return result;
}

unint64_t sub_1AE8368D4()
{
  unint64_t result;

  result = qword_1EEDA41B8;
  if (!qword_1EEDA41B8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ParserError, &type metadata for ParserError);
    atomic_store(result, (unint64_t *)&qword_1EEDA41B8);
  }
  return result;
}

void sub_1AE836910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v21 - 224) = v20;
  *(_QWORD *)(v21 - 216) = a17;
  *(_QWORD *)(v21 - 208) = a16;
  *(_QWORD *)(v21 - 200) = a15;
  *(_QWORD *)(v21 - 192) = a20;
}

uint64_t sub_1AE836934()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE83693C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v2;
  *(_QWORD *)(a1 + 40) = v3;
  *(_BYTE *)(a1 + 48) = 0;
  return swift_willThrow();
}

unint64_t sub_1AE836954()
{
  return sub_1AE8368D4();
}

void sub_1AE83695C()
{
  JUMPOUT(0x1AF4533D0);
}

uint64_t sub_1AE836970()
{
  return sub_1AE92625C();
}

uint64_t sub_1AE83697C()
{
  uint64_t v0;

  return sub_1AE8DD658(*(_QWORD *)((*(_QWORD *)(v0 - 168) & 0xFFFFFFFFFFFFF8) + 0x10));
}

void sub_1AE836990()
{
  sub_1AE7AADF8();
}

uint64_t sub_1AE836998(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8369A8()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1AE8369B4()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE8369BC()
{
  return sub_1AE802674();
}

uint64_t sub_1AE8369C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  return sub_1AE9261FC();
}

uint64_t sub_1AE8369D0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v0, v1);
}

uint64_t sub_1AE8369DC()
{
  return swift_isUniquelyReferenced_nonNull_bridgeObject();
}

void sub_1AE8369E8()
{
  sub_1AE51A614();
}

uint64_t sub_1AE836A08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 168) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE836A10()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE836A1C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v0, v1);
}

void sub_1AE836A28(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AE7AA5FC();
    v2 = v4;
  }
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  sub_1AE78FC68(v5);
  *a1 = v2;
}

uint64_t static ParserV2.parse(kgq:)@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD v14[4];

  v3 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
  v4 = sub_1AE83AD24(0xD000000000000014, 0x80000001AE988630, 0);
  if (v1)
  {

  }
  else
  {
    v5 = v4;
    if (v4)
    {
      v6 = (void *)sub_1AE925E18();
      v7 = sub_1AE925F20();
      v8 = (void *)sub_1AE925E18();
      v9 = objc_msgSend(v5, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v6, 0, 0, v7, v8);

      sub_1AE925E3C();
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRetain();
LABEL_6:
  v14[0] = 0x5941444F54;
  v14[1] = 0xE500000000000000;
  sub_1AE4F7630();
  v10 = sub_1AE9267B4();
  v12 = v11;
  sub_1AE4F76D8();
  sub_1AE803894(v10, v12, (uint64_t)v14);
  sub_1AE83ADF8((uint64_t)v14);
  sub_1AE836D04(a1);
  swift_bridgeObjectRelease();
  sub_1AE4F81B8();
  sub_1AE4F9038();
  sub_1AE4F76D8();
  sub_1AE805E40(0, 0, 0, 0xFCu);
  return sub_1AE83AE40((uint64_t)v14);
}

void sub_1AE836D04(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned __int8 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  __int128 v134;
  uint64_t v135;
  unsigned __int8 v136;
  uint64_t v137;
  uint64_t v138;

  v3 = v2;
  v4 = v1;
  v137 = MEMORY[0x1E0DEE9E8];
  sub_1AE8041F8((uint64_t)&v134);
  v13 = sub_1AE83B838(v5, v6, v7, v8, v9, v10, v11, v12, v94, a1, v102, v106, v110, v114, v117, v121, v125, v127, v128,
          v129,
          v130,
          v131,
          v132,
          v133,
          v134,
          *((uint64_t *)&v134 + 1),
          v135,
          v136);
  if (!(!v18 & v17))
  {
    v19 = MEMORY[0x1E0DEE9D8];
    v122 = &v127;
    while (1)
    {
      sub_1AE8370D8(v13, v14, v15, v16, (uint64_t)&v134);
      if (v3)
      {
        sub_1AE4F67AC();
        sub_1AE4F9038();
        return;
      }
      v20 = v134;
      v21 = v135;
      v22 = v136;
      sub_1AE5521A0(v134, v137);
      if ((v23 & 1) != 0)
      {
        sub_1AE78FBF4(*((uint64_t *)&v20 + 1), v21, v22);
        sub_1AE4F67AC();
        sub_1AE4F9038();
        sub_1AE83B364();
        sub_1AE4F6778();
        *(_OWORD *)v93 = xmmword_1AE944A30;
        *(_BYTE *)(v93 + 16) = 2;
        sub_1AE4F6928();
        return;
      }
      sub_1AE55760C(&v134, v20);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1AE505FE4();
        sub_1AE51BCE0();
        v19 = isUniquelyReferenced_nonNull_native;
      }
      v33 = *(_QWORD *)(v19 + 16);
      v32 = *(_QWORD *)(v19 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1AE4FBAB0(v32);
        sub_1AE51BCE0();
        v19 = isUniquelyReferenced_nonNull_native;
      }
      *(_QWORD *)(v19 + 16) = v33 + 1;
      v34 = v19 + 32 * v33;
      *(_OWORD *)(v34 + 32) = v20;
      *(_QWORD *)(v34 + 48) = v21;
      *(_BYTE *)(v34 + 56) = v22;
      sub_1AE83B6F4(isUniquelyReferenced_nonNull_native, v25, v26, v27, v28, v29, v30, v31, v95, (uint64_t)v99, v103, v107, v111, v115, v118, (uint64_t)v122);
      sub_1AE83B7F4();
      if (!v18 & v17)
      {
        sub_1AE5084EC();
        v45 = sub_1AE50AE50(8);
      }
      else
      {
        v130 = v21;
        v131 = v22;
        v132 = v33;
        LOBYTE(v133) = v33 + 1;
        v126 = 8;
        *v123 = 0;
        v123[1] = 0;
        LOBYTE(v129) = -32;
        v35 = sub_1AE8035B8(v21, v22, v33, v33 + 1);
        sub_1AE83B7D4(v35, v36, v37, v38, v39, v40, v41, v42, v96, v100, v104, v108);
        v44 = v43;
        sub_1AE80360C(v130, v131, v132, v133);
        v45 = sub_1AE5084EC();
        if ((v44 & 1) != 0)
          goto LABEL_18;
      }
      sub_1AE83B6F4(v45, v46, v47, v48, v49, v50, v51, v52, v96, v100, v104, v108, v112, *((uint64_t *)&v112 + 1), v119, (uint64_t)v123);
      sub_1AE83B7F4();
      if (!v18 & v17)
      {
        sub_1AE5084EC();
        v63 = sub_1AE50AE50(7);
        goto LABEL_27;
      }
      v130 = v21;
      v131 = v22;
      v132 = v33;
      LOBYTE(v133) = v33 + 1;
      v126 = 7;
      *v123 = 0;
      v123[1] = 0;
      LOBYTE(v129) = -32;
      v53 = sub_1AE8035B8(v21, v22, v33, v33 + 1);
      sub_1AE83B7D4(v53, v54, v55, v56, v57, v58, v59, v60, v96, v100, v104, v108);
      v62 = v61;
      sub_1AE80360C(v130, v131, v132, v133);
      v63 = sub_1AE5084EC();
      if ((v62 & 1) == 0)
        goto LABEL_27;
LABEL_18:
      v71 = *(_QWORD *)(v4 + 72);
      v72 = *(_QWORD *)(v71 + 16);
      if (v72)
      {
        v73 = *(_QWORD *)(v71 + 32);
        v74 = *(_QWORD *)(v71 + 40);
        v75 = *(_QWORD *)(v71 + 48);
        v76 = *(_BYTE *)(v71 + 56);
        swift_bridgeObjectRetain();
        v108 = v74;
        *(_QWORD *)&v112 = v73;
        v104 = v75;
        sub_1AE4FD598(v73, v74, v75, v76);
        swift_bridgeObjectRetain();
        v77 = swift_dynamicCastClass();
        if (!v77)
        {
          sub_1AE4F6718();
          v77 = MEMORY[0x1E0DEE9D8];
        }
        v78 = *(_QWORD *)(v77 + 16);
        swift_release();
        if (v78 == v72 - 1)
        {
          v79 = swift_dynamicCastClass();
          if (!v79)
          {
            sub_1AE4F6718();
            v79 = MEMORY[0x1E0DEE9D8];
          }
        }
        else
        {
          sub_1AE4F6718();
          sub_1AE5924A8();
          v79 = v92;
        }
        sub_1AE4F6718();
        *(_QWORD *)(v4 + 72) = v79;
        v63 = sub_1AE83B5E8();
        *(_QWORD *)(v4 + 80) = v73;
        *(_QWORD *)(v4 + 88) = v108;
        *(_QWORD *)(v4 + 96) = v104;
        *(_BYTE *)(v4 + 104) = v76;
      }
      else
      {
        sub_1AE508D60();
        if (v81)
        {
          __break(1u);
          return;
        }
        *(_QWORD *)(v4 + 112) = v80;
        sub_1AE8038C4((uint64_t)&v134);
        v112 = v134;
        v82 = v135;
        v83 = v136;
        v63 = sub_1AE83B5E8();
        *(_OWORD *)(v4 + 80) = v112;
        *(_QWORD *)(v4 + 96) = v82;
        *(_BYTE *)(v4 + 104) = v83;
      }
LABEL_27:
      sub_1AE83B6F4(v63, v64, v65, v66, v67, v68, v69, v70, v96, v100, v104, v108, v112, *((uint64_t *)&v112 + 1), v119, (uint64_t)v123);
      v13 = sub_1AE83B838(v84, v85, v86, v87, v88, v89, v90, v91, v97, v101, v105, v109, v113, v116, v120, v124, v126, v127, v128,
              v129,
              v130,
              v131,
              v132,
              v133,
              v134,
              *((uint64_t *)&v134 + 1),
              v135,
              v136);
      if (!v18 & v17)
        goto LABEL_33;
    }
  }
  v19 = MEMORY[0x1E0DEE9D8];
LABEL_33:
  v138 = v19;
  sub_1AE4F81B8();
  sub_1AE836A28(&v138);
  *v99 = v138;
}

uint64_t sub_1AE8370D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;

  sub_1AE83B7EC(a1, a2, a3, a4);
  if (v23 > 0xFBu)
    goto LABEL_9;
  if ((v23 & 0xE0) != 0xC0)
  {
    sub_1AE805E40(v20, v21, v22, v23);
LABEL_9:
    sub_1AE83B364();
    sub_1AE4F6778();
    *(_QWORD *)v18 = 0;
    *(_QWORD *)(v18 + 8) = 0;
    *(_BYTE *)(v18 + 16) = 2;
    return sub_1AE4F6928();
  }
  sub_1AE83B7EC(v7, v8, v9, v23);
  if (v23 > 0xFBu)
    goto LABEL_6;
  sub_1AE83B7BC(v10, v11, v12, v13, 0, 0, 0, -32);
  if ((v14 & 1) == 0)
  {
    sub_1AE92691C();
    sub_1AE925F74();
    sub_1AE926A48();
    sub_1AE83B688();
    sub_1AE83B364();
    sub_1AE4F6778();
    *(_QWORD *)v19 = 0;
    *(_QWORD *)(v19 + 8) = 0xE000000000000000;
    *(_BYTE *)(v19 + 16) = 0;
    return sub_1AE4F6928();
  }
  sub_1AE83B688();
LABEL_6:
  result = sub_1AE837268();
  if (!v5)
  {
    *(_QWORD *)a5 = v20;
    *(_QWORD *)(a5 + 8) = result;
    *(_QWORD *)(a5 + 16) = v16;
    *(_BYTE *)(a5 + 24) = v17;
  }
  return result;
}

uint64_t sub_1AE837268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  __int128 v15;
  unsigned __int8 v16;

  sub_1AE8041F8((uint64_t)&v14);
  if (v16 > 0xFBu)
    goto LABEL_35;
  if (v16 < 0xE0u)
  {
LABEL_34:
    sub_1AE805E40(v14, v15, *((uint64_t *)&v15 + 1), v16);
LABEL_35:
    sub_1AE83B364();
    v11 = sub_1AE4F6778();
    *v12 = 0xD000000000000027;
    v12[1] = 0x80000001AE988690;
    sub_1AE509B7C(v11, (uint64_t)v12);
    return sub_1AE83B76C();
  }
  if (v16 == 224 && v14 == 15 && v15 == 0)
  {
    sub_1AE837398();
    sub_1AE50647C();
    v9 = 15;
    goto LABEL_33;
  }
  if (v16 == 224 && v14 == 16 && v15 == 0)
  {
    sub_1AE838180(v14, v15, *((uint64_t *)&v15 + 1), v16, v0, v1, v2, v3);
    sub_1AE50647C();
    v9 = 16;
    goto LABEL_33;
  }
  v8 = v16 == 224 && v14 == 17;
  if (!v8 || v15 != 0)
  {
    v10 = v16 == 224 && v14 == 18;
    if (v10 && v15 == 0)
    {
      sub_1AE838440(v14, v15, *((uint64_t *)&v15 + 1), v16, v0, v1, v2, v3);
      sub_1AE50647C();
      v9 = 18;
      goto LABEL_33;
    }
    goto LABEL_34;
  }
  sub_1AE838294(v14, v15, *((uint64_t *)&v15 + 1), v16, v0, v1, v2, v3);
  sub_1AE50647C();
  v9 = 17;
LABEL_33:
  sub_1AE50AE50(v9);
  return sub_1AE83B76C();
}

uint64_t sub_1AE837398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  int v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  BOOL v31;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  char v39;
  unsigned __int8 v40;
  char v41;
  uint64_t v42;
  char v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int EnumCaseMultiPayload;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  size_t v85;
  BOOL v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned __int8 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  unint64_t v112;
  _QWORD *v114;
  _QWORD *v115;
  unint64_t v116;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  NSObject *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  unsigned __int8 v144;
  uint64_t v145;

  v2 = v0;
  v3 = sub_1AE78B8A8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v125 - v8;
  result = sub_1AE83B874((uint64_t)&unk_1E5DB08D0, &v142);
  if (v1)
    return result;
  v136 = v3;
  v138 = v9;
  v145 = 0;
  sub_1AE80360C(v142, *((uint64_t *)&v142 + 1), v143, v144);
  v11 = 0;
  *(_QWORD *)&v12 = 136315138;
  v129 = v12;
  v128 = MEMORY[0x1E0DEE9B8] + 8;
  v131 = MEMORY[0x1E0DEE9D8];
  v139 = MEMORY[0x1E0DEE9D8];
  v126 = v4;
  v137 = (uint64_t *)v7;
  do
  {
    while (2)
    {
      HIDWORD(v127) = v11;
      while (1)
      {
        while (1)
        {
          v13 = *(_QWORD *)(v2 + 72);
          if (*(_QWORD *)(v13 + 16))
          {
            v14 = *(_QWORD *)(v13 + 32);
            v15 = *(_QWORD *)(v13 + 40);
            v16 = *(_QWORD *)(v13 + 48);
            v141 = *(_QWORD *)(v2 + 72);
            v17 = *(unsigned __int8 *)(v13 + 56);
            v18 = *(_QWORD *)(v2 + 80);
            v19 = *(_QWORD *)(v2 + 88);
            v20 = *(_QWORD *)(v2 + 96);
            v21 = *(_BYTE *)(v2 + 104);
            sub_1AE83B484();
            sub_1AE805E40(v18, v19, v20, v21);
            *(_QWORD *)(v2 + 80) = v14;
            *(_QWORD *)(v2 + 88) = v15;
            *(_QWORD *)(v2 + 96) = v16;
            *(_BYTE *)(v2 + 104) = v17;
            sub_1AE83B484();
          }
          else
          {
            sub_1AE83B7C8();
            if (v23)
            {
              __break(1u);
LABEL_142:
              __break(1u);
              goto LABEL_143;
            }
            sub_1AE83B4A0(v22);
            v17 = v144;
            if (v144 > 0xFBu)
              return v139;
            v15 = *((_QWORD *)&v142 + 1);
            v14 = v142;
            v16 = v143;
            sub_1AE805E40(*(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), *(_BYTE *)(v2 + 104));
            *(_OWORD *)(v2 + 80) = __PAIR128__(v15, v14);
            *(_QWORD *)(v2 + 96) = v16;
            *(_BYTE *)(v2 + 104) = v17;
            sub_1AE83B484();
            sub_1AE83B484();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1AE505FE4();
              sub_1AE51BC74();
              v13 = v83;
            }
            v25 = *(_QWORD *)(v13 + 16);
            v24 = *(_QWORD *)(v13 + 24);
            if (v25 >= v24 >> 1)
            {
              sub_1AE5D8C50(v24);
              sub_1AE51BC74();
              v13 = v84;
            }
            *(_QWORD *)(v13 + 16) = v25 + 1;
            v26 = v13 + 32 * v25;
            *(_QWORD *)(v26 + 32) = v14;
            *(_QWORD *)(v26 + 40) = v15;
            *(_QWORD *)(v26 + 48) = v16;
            *(_BYTE *)(v26 + 56) = v17;
            v141 = v13;
            *(_QWORD *)(v2 + 72) = v13;
          }
          if (v17 >= 0xE0)
            break;
LABEL_45:
          v36 = v145;
          v37 = sub_1AE83865C();
          v145 = v36;
          if (v36)
          {
            sub_1AE506EC4(v14, v15, v16);
            sub_1AE736404();
            return sub_1AE501A7C();
          }
          v40 = v37;
          v41 = v39;
          v140 = v16;
          v141 = v38;
          if (sub_1AE7911F0(v37) == 1701869940 && v42 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            v45 = v137;
            goto LABEL_57;
          }
          v44 = sub_1AE4FB6F0();
          sub_1AE4F81B8();
          v45 = v137;
          if ((v44 & 1) != 0)
          {
LABEL_57:
            v50 = *(_QWORD *)(v141 + 16);
            if (v50)
            {
              v62 = v141
                  + ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80));
              v135 = *(_QWORD *)(v126 + 72);
              do
              {
                v63 = (uint64_t)v138;
                sub_1AE78B0EC(v62, (uint64_t)v138);
                sub_1AE78B0EC(v63, (uint64_t)v45);
                EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload == 6)
                  __asm { BR              X9 }
                if (EnumCaseMultiPayload)
                {
                  sub_1AE736404();
                  sub_1AE501A7C();
                  swift_bridgeObjectRelease();
                  *(_QWORD *)&v142 = 0;
                  *((_QWORD *)&v142 + 1) = 0xE000000000000000;
                  sub_1AE83B81C();
                  sub_1AE5093A4();
                  sub_1AE4F6A2C();
                  v118 = (uint64_t)v138;
                  sub_1AE926A48();
                  sub_1AE83B62C();
                  sub_1AE83B364();
                  v119 = sub_1AE4F6778();
                  sub_1AE83B474(v119, v120);
                  sub_1AE506EC4(v14, v15, v140);
                  sub_1AE78AFB8(v118);
                  return sub_1AE78AFB8((uint64_t)v45);
                }
                v66 = *v45;
                v65 = v45[1];
                sub_1AE4FB75C();
                v134 = v66;
                v67 = sub_1AE926B44();
                sub_1AE4F6648();
                if (v67 > 5)
                {
                  if (qword_1ED3193F0 != -1)
                    swift_once();
                  v71 = sub_1AE925B6C();
                  sub_1AE4FB608(v71, (uint64_t)qword_1ED3193D8);
                  sub_1AE4FB75C();
                  v72 = sub_1AE925B54();
                  v73 = sub_1AE9265EC();
                  v133 = v72;
                  HIDWORD(v132) = v73;
                  if (os_log_type_enabled(v72, v73))
                  {
                    v74 = swift_slowAlloc();
                    v130 = swift_slowAlloc();
                    *(_QWORD *)&v142 = v130;
                    *(_DWORD *)v74 = v129;
                    sub_1AE4FB75C();
                    sub_1AE520ED4(v134, v65, (uint64_t)&v142, v75, v76, v77, v78, v79, v125, v126, v127, v128, v129, *((uint64_t *)&v129 + 1), v130, v131, v132, (uint64_t)v133, v134,
                      v135);
                    *(_QWORD *)(v74 + 4) = v80;
                    swift_bridgeObjectRelease_n();
                    _os_log_impl(&dword_1AE4F2000, v133, BYTE4(v132), "type %s not found", (uint8_t *)v74, 0xCu);
                    swift_arrayDestroy();
                    sub_1AE4F9064();
                  }
                  swift_bridgeObjectRelease_n();

                }
                else
                {
                  sub_1AE4F6648();
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_1AE505FE4();
                    sub_1AE51BCB8();
                    v139 = v81;
                  }
                  v68 = *(_QWORD *)(v139 + 16);
                  v69 = v68 + 1;
                  if (v68 >= *(_QWORD *)(v139 + 24) >> 1)
                  {
                    v134 = v68 + 1;
                    sub_1AE51BCB8();
                    v69 = v134;
                    v139 = v82;
                  }
                  v70 = v139;
                  *(_QWORD *)(v139 + 16) = v69;
                  *(_BYTE *)(v70 + v68 + 32) = v67;
                }
                sub_1AE78AFB8((uint64_t)v138);
                v62 += v135;
                --v50;
              }
              while (v50);
              sub_1AE506EC4(v14, v15, v140);
              swift_bridgeObjectRelease();
            }
            else
            {
              sub_1AE506EC4(v14, v15, v140);
              sub_1AE4F6648();
            }
          }
          else
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1AE83B714();
              v131 = v87;
            }
            v46 = v131;
            v47 = *(_QWORD *)(v131 + 16);
            if (v47 >= *(_QWORD *)(v131 + 24) >> 1)
              sub_1AE51BC9C();
            *(_QWORD *)(v46 + 16) = v47 + 1;
            v131 = v46;
            v48 = v46 + 24 * v47;
            *(_BYTE *)(v48 + 32) = v40;
            v49 = v140;
            *(_QWORD *)(v48 + 40) = v141;
            *(_BYTE *)(v48 + 48) = v41;
            sub_1AE506EC4(v14, v15, v49);
          }
        }
        v27 = v16 | v15;
        v28 = (_DWORD)v17 == 224 && v14 == 3;
        if (!v28 || v27 != 0)
          break;
        v51 = v141;
        v52 = *(_QWORD *)(v141 + 16);
        if (v52)
        {
          v53 = *(_QWORD *)(v141 + 32);
          v54 = *(_QWORD *)(v141 + 40);
          v55 = *(_QWORD *)(v141 + 48);
          v56 = *(_BYTE *)(v141 + 56);
          sub_1AE83B498();
          swift_bridgeObjectRetain();
          v57 = sub_1AE83B76C();
          sub_1AE4FD598(v57, v58, v55, v56);
          if (!sub_1AE83B56C())
            sub_1AE4F6710();
          sub_1AE8060C4();
          v59 = v52 - 1;
          if (v17 == v59)
          {
            v60 = (_QWORD *)sub_1AE83B56C();
            if (v60)
              goto LABEL_66;
            sub_1AE4F6710();
LABEL_65:
            v60 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            goto LABEL_66;
          }
          swift_bridgeObjectRelease();
          if (!v59)
            goto LABEL_65;
          sub_1AE501548((uint64_t *)&unk_1EED9C8B0);
          v60 = (_QWORD *)sub_1AE4FCFFC();
          v85 = j__malloc_size(v60);
          v60[2] = v59;
          v60[3] = 2 * ((uint64_t)(v85 - 32) / 32);
          v86 = v51 + 64 >= (unint64_t)&v60[4 * v59 + 4] || (unint64_t)(v60 + 4) >= v51 + 64 + 32 * v59;
          if (!v86)
            goto LABEL_145;
          swift_arrayInitWithCopy();
LABEL_66:
          sub_1AE4F6710();
          sub_1AE507C6C();
          *(_QWORD *)(v2 + 72) = v60;
          *(_QWORD *)(v2 + 80) = v53;
          *(_QWORD *)(v2 + 88) = v54;
          *(_QWORD *)(v2 + 96) = v55;
          *(_BYTE *)(v2 + 104) = v56;
        }
        else
        {
          sub_1AE83B7C8();
          if (v23)
            goto LABEL_142;
          sub_1AE83B4A0(v61);
          sub_1AE507C6C();
          sub_1AE506A94();
        }
      }
      v31 = v14 == 6 && v27 == 0 && (_DWORD)v17 == 224;
      v11 = v31;
      if (v31)
      {
        v88 = *(_QWORD *)(v141 + 16);
        if (v88)
        {
          v89 = *(_QWORD *)(v141 + 32);
          v90 = *(_QWORD *)(v141 + 40);
          v91 = *(_QWORD *)(v141 + 48);
          v92 = *(_BYTE *)(v141 + 56);
          sub_1AE4FB764();
          v140 = v89;
          v93 = sub_1AE4FD598(v89, v90, v91, v92);
          sub_1AE4FB764();
          v94 = sub_1AE83B56C();
          if (!v94)
          {
            sub_1AE4F6710();
            v94 = MEMORY[0x1E0DEE9D8];
          }
          v95 = *(_QWORD *)(v94 + 16);
          swift_release();
          v96 = v88 - 1;
          if (v95 == v96)
          {
            v93 = sub_1AE83B56C();
            v97 = v140;
            if (!v93)
            {
              sub_1AE4F6710();
              v93 = MEMORY[0x1E0DEE9D8];
            }
LABEL_99:
            sub_1AE4F6710();
            sub_1AE4F972C();
            *(_QWORD *)(v2 + 72) = v93;
            *(_QWORD *)(v2 + 80) = v97;
            *(_QWORD *)(v2 + 88) = v90;
            *(_QWORD *)(v2 + 96) = v91;
            *(_BYTE *)(v2 + 104) = v92;
LABEL_109:
            if ((v127 & 0x100000000) != 0)
            {
              sub_1AE736404();
              sub_1AE501A7C();
              sub_1AE83B364();
              sub_1AE4F6778();
              sub_1AE5093A4();
              *(_QWORD *)v122 = v121 | 7;
              *(_QWORD *)(v122 + 8) = 0x80000001AE988720;
              *(_BYTE *)(v122 + 16) = 0;
              return sub_1AE4F6928();
            }
            continue;
          }
          sub_1AE4F6710();
          if (v96)
          {
            sub_1AE501548((uint64_t *)&unk_1EED9C8B0);
            v110 = (_QWORD *)sub_1AE4FCFFC();
            v111 = sub_1AE83B51C(v110);
            if (!v86 && (unint64_t)v111 < v112)
              goto LABEL_145;
            swift_arrayInitWithCopy();
          }
          else
          {
            v93 = MEMORY[0x1E0DEE9D8];
          }
          v97 = v140;
          goto LABEL_99;
        }
        sub_1AE83B7C8();
        if (!v23)
        {
          sub_1AE83B4A0(v108);
          sub_1AE4F972C();
          sub_1AE506A94();
          goto LABEL_109;
        }
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        sub_1AE83B66C();
        sub_1AE500FB4();
        __break(1u);
        JUMPOUT(0x1AE838118);
      }
      break;
    }
    if ((_DWORD)v17 != 224 || v14 != 7 || v27 != 0)
    {
      if ((_DWORD)v17 == 224 && v14 == 8 && v27 == 0)
        return v139;
      goto LABEL_45;
    }
    v98 = *(_QWORD *)(v141 + 16);
    if (v98)
    {
      v99 = *(_QWORD *)(v141 + 32);
      v100 = *(_QWORD *)(v141 + 40);
      v101 = *(_QWORD *)(v141 + 48);
      v102 = *(_BYTE *)(v141 + 56);
      sub_1AE83B498();
      swift_bridgeObjectRetain();
      v140 = v99;
      v103 = sub_1AE4FD598(v99, v100, v101, v102);
      v104 = sub_1AE83B56C();
      if (!v104)
      {
        sub_1AE4F6710();
        v104 = MEMORY[0x1E0DEE9D8];
      }
      v105 = *(_QWORD *)(v104 + 16);
      swift_release();
      v106 = v98 - 1;
      if (v105 == v106)
      {
        v103 = sub_1AE83B56C();
        if (!v103)
        {
          sub_1AE4F6710();
          v103 = MEMORY[0x1E0DEE9D8];
        }
      }
      else
      {
        sub_1AE4F6710();
        if (v106)
        {
          sub_1AE501548((uint64_t *)&unk_1EED9C8B0);
          v114 = (_QWORD *)sub_1AE4FCFFC();
          v115 = sub_1AE83B51C(v114);
          if (!v86 && (unint64_t)v115 < v116)
            goto LABEL_145;
          swift_arrayInitWithCopy();
        }
        else
        {
          v103 = MEMORY[0x1E0DEE9D8];
        }
      }
      sub_1AE4F6710();
      sub_1AE83B44C();
      v107 = v140;
      *(_QWORD *)(v2 + 72) = v103;
      *(_QWORD *)(v2 + 80) = v107;
      *(_QWORD *)(v2 + 88) = v100;
      *(_QWORD *)(v2 + 96) = v101;
      *(_BYTE *)(v2 + 104) = v102;
    }
    else
    {
      sub_1AE83B7C8();
      if (v23)
        goto LABEL_144;
      sub_1AE83B4A0(v109);
      sub_1AE83B44C();
      sub_1AE506A94();
    }
  }
  while ((v127 & 0x100000000) == 0);
  result = v139;
  if (!*(_QWORD *)(v139 + 16) || !*(_QWORD *)(v131 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1AE501A7C();
    sub_1AE83B364();
    sub_1AE4F6778();
    sub_1AE5093A4();
    sub_1AE83B5D0(v124, v123 + 30);
    return sub_1AE4F6928();
  }
  return result;
}

uint64_t sub_1AE838180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;

  v9 = sub_1AE83B87C((uint64_t)&unk_1E5DB0910, a2, a3, a4, a5, a6, a7, a8, v23);
  if (!v8)
  {
    sub_1AE83B790(v9, v10, v11, v12, v13, v14, v15, v16, v24, v25, v26, v27);
    if (!*(_QWORD *)(v17 + 16))
      goto LABEL_10;
    if (sub_1AE7911F0(*(_BYTE *)(v17 + 32)) == 0x65756C6176 && v18 == 0xE500000000000000)
    {
      swift_bridgeObjectRetain();
      sub_1AE4F76D8();
    }
    else
    {
      v20 = sub_1AE4FB6F0();
      swift_bridgeObjectRetain();
      sub_1AE4F67AC();
      if ((v20 & 1) == 0)
      {
        sub_1AE4F81B8();
LABEL_10:
        sub_1AE4F76D8();
        sub_1AE4F9038();
        sub_1AE83B364();
        sub_1AE4F6778();
        sub_1AE83B5D0(v21, 0xD000000000000033);
        sub_1AE4F6928();
        return sub_1AE83B76C();
      }
    }
    sub_1AE4F76D8();
  }
  return sub_1AE83B76C();
}

uint64_t sub_1AE838294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];
  unsigned __int8 v42;

  v10 = sub_1AE83B87C((uint64_t)&unk_1E5DB0A10, a2, a3, a4, a5, a6, a7, a8, *(__int128 *)v41);
  if (!v8)
  {
    sub_1AE83B61C(v10, v11, v12, v13, v14, v15, v16, v17, *(uint64_t *)v41, *(uint64_t *)&v41[8], *(uint64_t *)&v41[16], v42);
    v18 = sub_1AE83B874((uint64_t)&unk_1E5DB0990, (__int128 *)v41);
    sub_1AE83B61C(v18, v19, v20, v21, v22, v23, v24, v25, *(uint64_t *)v41, *(uint64_t *)&v41[8], *(uint64_t *)&v41[16], v42);
    sub_1AE803FF8((uint64_t)v41);
    if (v42 <= 0xFBu)
    {
      if (v42 >= 0xE0u)
      {
        v26 = v42 == 224 && *(_QWORD *)v41 == 19;
        if (v26 && *(_OWORD *)&v41[8] == 0)
        {
          sub_1AE505EC0();
          sub_1AE83B868();
          sub_1AE50AE50(19);
LABEL_35:
          v30 = sub_1AE83B874((uint64_t)&unk_1E5DB09D0, (__int128 *)v41);
          sub_1AE83B61C(v30, v34, v35, v36, v37, v38, v39, v40, *(uint64_t *)v41, *(uint64_t *)&v41[8], *(uint64_t *)&v41[16], v42);
          return v9;
        }
        v27 = v42 == 224 && *(_QWORD *)v41 == 20;
        if (v27 && *(_OWORD *)&v41[8] == 0)
        {
          sub_1AE505EC0();
          sub_1AE83B868();
          sub_1AE50AE50(20);
          goto LABEL_35;
        }
        v28 = v42 == 224 && *(_QWORD *)v41 == 21;
        if (v28 && *(_OWORD *)&v41[8] == 0)
        {
          sub_1AE505EC0();
          sub_1AE83B868();
          sub_1AE50AE50(21);
          goto LABEL_35;
        }
        v29 = v42 == 224 && *(_QWORD *)v41 == 22;
        if (v29 && *(_OWORD *)&v41[8] == 0)
        {
          sub_1AE505EC0();
          sub_1AE83B868();
          sub_1AE50AE50(22);
          goto LABEL_35;
        }
      }
      sub_1AE805E40(*(uint64_t *)v41, *(uint64_t *)&v41[8], *(uint64_t *)&v41[16], v42);
    }
    sub_1AE83B364();
    v31 = sub_1AE4F6778();
    *v32 = 0xD00000000000001FLL;
    v32[1] = 0x80000001AE988880;
    sub_1AE509B7C(v31, (uint64_t)v32);
  }
  return v9;
}

uint64_t sub_1AE838440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;

  result = sub_1AE83B87C((uint64_t)&unk_1E5DB0950, a2, a3, a4, a5, a6, a7, a8, v17);
  if (!v8)
    return sub_1AE83B790(result, v10, v11, v12, v13, v14, v15, v16, v18, v19, v20, v21);
  return result;
}

uint64_t sub_1AE83848C@<X0>(uint64_t a1@<X0>, __int128 *a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  unsigned __int8 v26;
  __int128 *v27;

  sub_1AE8041F8((uint64_t)&v24);
  v4 = v24;
  v5 = v25;
  v6 = v26;
  if (v26 <= 0xFBu && (v7 = *(_QWORD *)(a1 + 16)) != 0)
  {
    v27 = a2;
    sub_1AE805E54(v24, *((uint64_t *)&v24 + 1), v25, v26);
    v8 = swift_bridgeObjectRetain();
    v12 = (unsigned __int8 *)(a1 + 56);
    while (1)
    {
      v13 = *v12;
      v14 = *((_QWORD *)v12 - 1);
      v24 = *(_OWORD *)(v12 - 24);
      v25 = v14;
      v26 = v13;
      LOBYTE(v23) = v6;
      sub_1AE83B7BC(v8, v9, v10, v11, v4, v5, v23);
      if ((v8 & 1) != 0)
        break;
      v12 += 32;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        sub_1AE83B6B4();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v18 = sub_1AE83B6B4();
    sub_1AE83B7EC(v18, v19, v20, v21);
    result = sub_1AE805E40(v24, *((uint64_t *)&v24 + 1), v25, v26);
    v22 = v27;
    *v27 = v4;
    *((_QWORD *)v22 + 2) = v5;
    *((_BYTE *)v22 + 24) = v6;
  }
  else
  {
LABEL_7:
    *(_QWORD *)&v24 = 0;
    *((_QWORD *)&v24 + 1) = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    MEMORY[0x1AF453400](a1, &unk_1E5DB03C0);
    sub_1AE5058FC();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    v24 = v4;
    v25 = v5;
    v26 = v6;
    sub_1AE501548(&qword_1EEDA41D0);
    sub_1AE925E90();
    sub_1AE5058FC();
    sub_1AE4F6648();
    sub_1AE83B364();
    v15 = sub_1AE4F6778();
    return sub_1AE83B474(v15, v16);
  }
  return result;
}

uint64_t sub_1AE83865C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12;
  unsigned __int8 v13;
  BOOL v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  unsigned __int8 v21;

  sub_1AE803FF8((uint64_t)&v19);
  if (v21 > 0xFBu)
    goto LABEL_6;
  if ((v21 & 0xE0) != 0x80)
  {
    sub_1AE83B574();
LABEL_6:
    sub_1AE5FBE64();
    sub_1AE92691C();
    sub_1AE509ED4();
    sub_1AE5093A4();
    v5 = *(_QWORD *)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 96);
    v7 = *(_BYTE *)(v0 + 104);
    v19 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)&v20 = v5;
    *((_QWORD *)&v20 + 1) = v6;
    v21 = v7;
    sub_1AE805E54(v19, v5, v6, v7);
    sub_1AE501548(&qword_1EEDA41D0);
    sub_1AE925E90();
    sub_1AE5058FC();
    sub_1AE4F6648();
    goto LABEL_7;
  }
  sub_1AE8035B8(v19, v20, *((uint64_t *)&v20 + 1), v21);
  v3 = sub_1AE791798();
  if (v3 == 26)
  {
    sub_1AE5FBE64();
    sub_1AE83B81C();
    sub_1AE509ED4();
    sub_1AE5093A4();
    v19 = v4 + 16;
    *(_QWORD *)&v20 = 0x80000001AE988770;
    sub_1AE925F74();
    sub_1AE83B574();
    sub_1AE925F74();
LABEL_7:
    sub_1AE83B364();
    v8 = sub_1AE4F6778();
    sub_1AE83B474(v8, v9);
    return v2;
  }
  v2 = v3;
  sub_1AE83B574();
  sub_1AE83848C((uint64_t)&unk_1E5DB06F0, (__int128 *)&v19);
  if (!v1)
  {
    v11 = v19;
    v12 = v20;
    v13 = v21;
    if (v21 >= 0xE0u
      && (!(*((_QWORD *)&v20 + 1) | (unint64_t)v20 | v19) && v21 == 224
       || (v21 == 224 ? (v14 = v19 == 2) : (v14 = 0),
           v14 && v20 == 0 || (v21 == 224 ? (v15 = v19 == 10) : (v15 = 0), v15 && v20 == 0))))
    {
      sub_1AE838918(0);
    }
    else
    {
      sub_1AE5FBE64();
      sub_1AE92691C();
      sub_1AE509ED4();
      sub_1AE5093A4();
      v19 = v16;
      *(_QWORD *)&v20 = 0x80000001AE9887A0;
      sub_1AE791E54();
      MEMORY[0x1AF453400]();
      sub_1AE925F74();
      sub_1AE4F6648();
      sub_1AE4F81B8();
      sub_1AE83B364();
      v17 = sub_1AE4F6778();
      sub_1AE83B474(v17, v18);
      sub_1AE80360C(v11, v12, *((uint64_t *)&v12 + 1), v13);
    }
  }
  return v2;
}

uint64_t sub_1AE838918(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  int v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  BOOL v74;
  BOOL v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  BOOL v121;
  uint64_t v122;
  BOOL v123;
  uint64_t v124;
  BOOL v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  int v152;
  uint64_t v153;
  int v154;
  int v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  _QWORD *v163;
  unint64_t v164;
  uint64_t v166;
  uint64_t v167;
  int v168;
  uint64_t *v169;
  uint64_t *v170;
  double *v171;
  uint64_t *v172;
  _BYTE *v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  unsigned int v190;
  unsigned int v191;
  __int128 v192;
  uint64_t v193;
  unsigned __int8 v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;

  v4 = v1;
  v168 = a1;
  sub_1AE501548(&qword_1ED30EB60);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  v179 = v6;
  v178 = sub_1AE9248DC();
  v177 = *(_QWORD *)(v178 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  v176 = v8;
  v9 = sub_1AE78B8A8();
  v182 = *(_QWORD *)(v9 - 8);
  v183 = v9;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F686C();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F6A60();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F6A60();
  v181 = v13;
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F6A60();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F6A60();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F6A60();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE4F6A60();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v18);
  v171 = (double *)((char *)&v167 - v19);
  v20 = 0;
  v21 = 0;
  v199 = MEMORY[0x1E0DEE9D8];
  v197 = 0;
  v198 = 0xE000000000000000;
  v186 = v1;
  while (1)
  {
    v22 = v20;
    v23 = *(_QWORD *)(v4 + 72);
    v24 = *(_QWORD *)(v23 + 16);
    v190 = v22;
    v191 = v21;
    if (!v24)
      break;
    v25 = *(_QWORD *)(v23 + 32);
    v26 = *(_QWORD *)(v23 + 40);
    v27 = *(_QWORD *)(v23 + 48);
    v189 = v23;
    LODWORD(v28) = *(unsigned __int8 *)(v23 + 56);
    v22 = *(_QWORD *)(v4 + 80);
    v29 = *(_QWORD *)(v4 + 88);
    v3 = *(_QWORD *)(v4 + 96);
    v23 = *(unsigned __int8 *)(v4 + 104);
    sub_1AE508024();
    sub_1AE805E40(v22, v29, v3, v23);
    *(_QWORD *)(v4 + 80) = v25;
    *(_QWORD *)(v4 + 88) = v26;
    *(_QWORD *)(v4 + 96) = v27;
    *(_BYTE *)(v4 + 104) = v28;
    sub_1AE508024();
LABEL_11:
    switch(v28 >> 5)
    {
      case 1u:
        sub_1AE83B660();
        if (v4)
        {
          sub_1AE4F6DE8();
          swift_bridgeObjectRetain();
          v25 = v29;
          v180 = v26;
          sub_1AE4FD598(v2, v29, v27, v26);
          if (!sub_1AE509754())
            sub_1AE4F6710();
          sub_1AE83B734();
          sub_1AE83B7B0();
          if (v71)
          {
            sub_1AE509754();
            sub_1AE83B55C();
            if (!v34)
            {
              sub_1AE4F6710();
              v22 = MEMORY[0x1E0DEE9D8];
            }
          }
          else
          {
            sub_1AE4F6710();
            sub_1AE507810();
            sub_1AE83B55C();
          }
          sub_1AE4F6710();
          sub_1AE50676C();
          if ((v35 & 1) != 0)
            goto LABEL_20;
        }
        else
        {
          sub_1AE50A164();
          if (v31)
            goto LABEL_263;
          sub_1AE50111C(v86);
          sub_1AE83B588();
          if ((v87 & 1) != 0)
          {
LABEL_20:
            *(_QWORD *)&v192 = v25;
            sub_1AE926D18();
            goto LABEL_30;
          }
        }
        *v171 = (double)v25;
        sub_1AE83B85C();
        if ((sub_1AE50731C() & 1) == 0)
        {
          sub_1AE4FE168();
          v22 = v138;
        }
        sub_1AE506120();
        if (v46)
        {
          sub_1AE505914();
          v22 = v139;
        }
        sub_1AE4FCC0C();
        v89 = &v200;
LABEL_131:
        sub_1AE83B778(v88, (uint64_t)v89);
        v20 = 0;
        v199 = v22;
        v21 = v23;
        continue;
      case 2u:
        sub_1AE83B660();
        if (v4)
        {
          sub_1AE4F6DE8();
          swift_bridgeObjectRetain();
          v25 = v29;
          v180 = v26;
          sub_1AE4FD598(v2, v29, v27, v26);
          if (!sub_1AE509754())
            sub_1AE4F6710();
          sub_1AE83B734();
          sub_1AE83B7B0();
          if (v71)
          {
            sub_1AE509754();
            sub_1AE83B55C();
            if (!v36)
            {
              sub_1AE4F6710();
              v22 = MEMORY[0x1E0DEE9D8];
            }
          }
          else
          {
            sub_1AE4F6710();
            sub_1AE507810();
            sub_1AE83B55C();
          }
          sub_1AE4F6710();
          sub_1AE50676C();
          if ((v37 & 1) == 0)
            goto LABEL_126;
        }
        else
        {
          sub_1AE50A164();
          if (v31)
            goto LABEL_264;
          sub_1AE50111C(v90);
          sub_1AE83B588();
          if ((v91 & 1) == 0)
          {
LABEL_126:
            *v172 = v25;
            sub_1AE83B85C();
            if ((sub_1AE50731C() & 1) == 0)
            {
              sub_1AE4FE168();
              v22 = v140;
            }
            sub_1AE506120();
            if (v46)
            {
              sub_1AE505914();
              v22 = v141;
            }
            sub_1AE4FCC0C();
            v89 = &v201;
            goto LABEL_131;
          }
        }
        sub_1AE926388();
LABEL_30:
        sub_1AE925F74();
        sub_1AE4F6648();
        v20 = 1;
        v21 = v23;
        continue;
      case 3u:
        v38 = v191;
        sub_1AE508024();
        sub_1AE83B7E0();
        sub_1AE83B780();
        v39 = v179;
        sub_1AE83A6E4(v179);
        v40 = v26;
        v41 = v178;
        if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v39, 1, v178) == 1)
        {
          sub_1AE657280(v39);
          v42 = sub_1AE83AA68();
          if ((v43 & 1) != 0)
          {
            sub_1AE8035B8(v25, v40, v27, v28);
            EntityIdentifier.init(_:)(v25, v40, (uint64_t)&v192);
            v3 = v40;
            v45 = v38;
            if ((BYTE8(v192) & 1) != 0)
            {
              sub_1AE8035B8(v25, v40, v27, v28);
              v105 = sub_1AE791798();
              if (v105 == 26)
              {
                v38 = v27;
                v27 = (uint64_t)v169;
                *v169 = v25;
                *(_QWORD *)(v27 + 8) = v40;
              }
              else
              {
                v118 = v105;
                sub_1AE83B6C8();
                *(_BYTE *)v27 = v118;
              }
            }
            else
            {
              v112 = v192;
              sub_1AE83B6C8();
              *(_QWORD *)v27 = v112;
            }
            swift_storeEnumTagMultiPayload();
            sub_1AE8DD51C();
            v119 = *(_QWORD *)(v199 + 16);
            sub_1AE8DD888(v119);
            v120 = sub_1AE8DDADC(v119, v27);
            nullsub_1(v120);
            sub_1AE506EC4(v25, v40, v38);
          }
          else
          {
            v44 = v42;
            v3 = v40;
            sub_1AE506EC4(v25, v40, v27);
            *v170 = v44;
            swift_storeEnumTagMultiPayload();
            v45 = v38;
            if ((sub_1AE50731C() & 1) == 0)
            {
              sub_1AE4FE168();
              v44 = v148;
            }
            sub_1AE506120();
            if (v46)
            {
              sub_1AE505914();
              v44 = v149;
            }
            sub_1AE4FCC0C();
            sub_1AE83B778(v47, (uint64_t)&v199);
            sub_1AE805E40(v25, v40, v27, v28);
            v199 = v44;
          }
          v20 = v190;
          v21 = v45;
        }
        else
        {
          v184 = v40;
          v3 = v27;
          sub_1AE506EC4(v25, v40, v27);
          v81 = v177;
          v82 = v176;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v177 + 32))(v176, v39, v41);
          v83 = v175;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v175, v82, v41);
          swift_storeEnumTagMultiPayload();
          if ((sub_1AE50731C() & 1) == 0)
          {
            sub_1AE4FE168();
            v83 = v136;
          }
          sub_1AE506120();
          if (v46)
          {
            sub_1AE505914();
            v83 = v137;
          }
          sub_1AE4FCC0C();
          sub_1AE83B778(v84, (uint64_t)&v203);
          sub_1AE805E40(v25, v184, v3, v28);
          v199 = v83;
          (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v176, v41);
          v20 = v190;
          v21 = v38;
        }
        continue;
      case 4u:
        v3 = v189;
        v48 = *(_QWORD *)(v189 + 16);
        if (v48)
        {
          v22 = v189 + 32;
          v49 = *(_QWORD *)(v189 + 32);
          v188 = v27;
          v50 = *(_QWORD *)(v189 + 40);
          v51 = *(_QWORD *)(v189 + 48);
          v52 = (2 * v48) | 1;
          v187 = v28;
          v28 = v25;
          v53 = v26;
          v54 = *(_BYTE *)(v189 + 56);
          v55 = sub_1AE83B76C();
          sub_1AE8035B8(v55, v56, v51, v54);
          v57 = v52;
          v4 = v186;
          *(_QWORD *)(v4 + 72) = sub_1AE80379C(v3, v3 + 32, 1, v57);
          *(_QWORD *)(v4 + 80) = v49;
          *(_QWORD *)(v4 + 88) = v50;
          *(_QWORD *)(v4 + 96) = v51;
          v27 = v188;
          *(_BYTE *)(v4 + 104) = v54;
          v26 = v53;
          v25 = v28;
          LOBYTE(v28) = v187;
        }
        else
        {
          sub_1AE508D60();
          if (v31)
            goto LABEL_265;
          sub_1AE50111C(v92);
          sub_1AE83B500();
        }
        sub_1AE8035B8(v25, v26, v27, v28);
        v93 = sub_1AE791798();
        if (v93 == 26)
        {
          v94 = v174;
          *v174 = v25;
          v94[1] = v26;
          swift_storeEnumTagMultiPayload();
          if ((sub_1AE50731C() & 1) == 0)
          {
            sub_1AE4FE168();
            v22 = v142;
          }
          sub_1AE506120();
          if (v46)
          {
            sub_1AE505914();
            v22 = v143;
          }
          sub_1AE4FCC0C();
          sub_1AE83B778(v95, (uint64_t)&v202);
          sub_1AE805E40(v25, v26, v27, v28);
          v199 = v22;
        }
        else
        {
          v96 = v93;
          sub_1AE506EC4(v25, v26, v27);
          *v173 = v96;
          swift_storeEnumTagMultiPayload();
          v97 = v27;
          if ((sub_1AE50731C() & 1) == 0)
          {
            sub_1AE4FE168();
            v96 = v144;
            v199 = v144;
          }
          v98 = *(_QWORD *)(v96 + 16);
          if (v98 >= *(_QWORD *)(v96 + 24) >> 1)
          {
            sub_1AE505914();
            v199 = v145;
          }
          v99 = sub_1AE8DDADC(v98, (uint64_t)v173);
          nullsub_1(v99);
          sub_1AE506EC4(v25, v26, v97);
        }
        v20 = v190;
        v21 = v191;
        continue;
      case 5u:
        sub_1AE83B660();
        if (v4)
        {
          v187 = v28;
          v185 = v25;
          v58 = v26;
          v188 = v27;
          v59 = *(_QWORD *)(v3 + 32);
          v60 = *(_QWORD *)(v3 + 40);
          v61 = *(_QWORD *)(v3 + 48);
          v62 = *(unsigned __int8 *)(v3 + 56);
          sub_1AE83B498();
          swift_bridgeObjectRetain();
          v63 = v59;
          v64 = sub_1AE83B76C();
          v190 = v62;
          sub_1AE4FD598(v64, v65, v61, v62);
          if (!sub_1AE509754())
            sub_1AE4F6710();
          sub_1AE83B734();
          sub_1AE83B7B0();
          if (v71)
          {
            v134 = sub_1AE509754();
            v135 = v58;
            if (!v134)
            {
              sub_1AE4F6710();
              v134 = MEMORY[0x1E0DEE9D8];
            }
          }
          else
          {
            sub_1AE4F6710();
            sub_1AE507810();
            v134 = v133;
            v135 = v58;
          }
          sub_1AE4F6710();
          v66 = v185;
          sub_1AE805E40(v185, v135, v188, v187);
          v67 = v186;
          *(_QWORD *)(v186 + 72) = v134;
          *(_QWORD *)(v67 + 80) = v63;
          *(_QWORD *)(v67 + 88) = v60;
          *(_QWORD *)(v67 + 96) = v61;
          *(_BYTE *)(v67 + 104) = v190;
          __asm { BR              X9 }
        }
        sub_1AE50A164();
        if (!v31)
        {
          sub_1AE50111C(v100);
          sub_1AE805E40(v25, v26, v27, v28);
          sub_1AE83B500();
          __asm { BR              X9 }
        }
        goto LABEL_266;
      case 6u:
        sub_1AE83B660();
        if (v4)
        {
          sub_1AE4F6DE8();
          swift_bridgeObjectRetain();
          v180 = v26;
          v68 = sub_1AE4FD598(v2, v29, v27, v26);
          if (!sub_1AE509754())
            sub_1AE4F6710();
          sub_1AE83B734();
          sub_1AE83B7B0();
          if (v71)
          {
            sub_1AE509754();
            sub_1AE83B55C();
            if (!v69)
            {
              sub_1AE4F6710();
              v22 = MEMORY[0x1E0DEE9D8];
            }
          }
          else
          {
            v68 = (2 * v4) | 1;
            sub_1AE4F6710();
            sub_1AE507810();
            sub_1AE83B55C();
          }
          sub_1AE4F6710();
          v25 = v185;
          sub_1AE805E40(v185, v68, v188, v187);
          v4 = v186;
          *(_QWORD *)(v186 + 72) = v22;
          *(_QWORD *)(v4 + 80) = v2;
          *(_QWORD *)(v4 + 88) = v26;
          *(_QWORD *)(v4 + 96) = v27;
          *(_BYTE *)(v4 + 104) = v180;
        }
        else
        {
          sub_1AE50A164();
          if (v31)
            goto LABEL_267;
          sub_1AE50111C(v101);
          sub_1AE805E40(v25, v26, v27, v28);
          sub_1AE83B500();
          LODWORD(v23) = v191;
        }
        *v181 = v25;
        swift_storeEnumTagMultiPayload();
        if ((sub_1AE50731C() & 1) == 0)
        {
          sub_1AE4FE168();
          v22 = v131;
          v199 = v131;
        }
        v102 = v190;
        v103 = *(_QWORD *)(v22 + 16);
        if (v103 >= *(_QWORD *)(v22 + 24) >> 1)
        {
          sub_1AE505914();
          v199 = v132;
        }
        v104 = sub_1AE8DDADC(v103, (uint64_t)v181);
        nullsub_1(v104);
        v20 = v102;
        v21 = v23;
        continue;
      case 7u:
        v70 = v27 | v26;
        v71 = (_DWORD)v28 == 224 && v25 == 3;
        if (v71 && v70 == 0)
        {
          sub_1AE83B660();
          if (v4)
          {
            sub_1AE50A780();
            swift_bridgeObjectRetain();
            sub_1AE503B34();
            if (!sub_1AE83B440())
              sub_1AE4F6710();
            sub_1AE8060C4();
            sub_1AE83B728();
            if (v71)
            {
              v147 = sub_1AE83B440();
              if (!v147)
              {
                sub_1AE4F6710();
                v147 = MEMORY[0x1E0DEE9D8];
              }
            }
            else
            {
              sub_1AE4F6710();
              sub_1AE83B460();
              v147 = v146;
            }
            sub_1AE4F6710();
            sub_1AE50AE50(3);
            v4 = v186;
            *(_QWORD *)(v186 + 72) = v147;
            *(_QWORD *)(v4 + 80) = v25;
            *(_QWORD *)(v4 + 88) = v26;
            *(_QWORD *)(v4 + 96) = v23;
            v21 = 1;
            v85 = v190;
            v20 = v190;
            *(_BYTE *)(v4 + 104) = v29;
          }
          else
          {
            sub_1AE50A164();
            if (v31)
              goto LABEL_268;
            sub_1AE50111C(v111);
            sub_1AE507C6C();
            MEMORY[0x50] = v192;
            MEMORY[0x60] = v193;
            MEMORY[0x68] = v194;
            v21 = 1;
            v85 = v190;
            v20 = v190;
          }
          if ((v191 & 1) == 0)
          {
            if ((v85 & 1) == 0)
              goto LABEL_259;
            goto LABEL_254;
          }
        }
        else
        {
          v74 = (_DWORD)v28 == 224 && v25 == 4 && v70 == 0;
          v3 = v189;
          if (v74)
          {
            v106 = *(_QWORD *)(v189 + 16);
            if (v106)
            {
              sub_1AE4FB764();
              sub_1AE503B34();
              sub_1AE4FB764();
              v107 = sub_1AE83B56C();
              if (!v107)
              {
                sub_1AE4F6710();
                v107 = MEMORY[0x1E0DEE9D8];
              }
              v108 = *(_QWORD *)(v107 + 16);
              swift_release();
              v109 = v106 - 1;
              if (v108 == v109)
              {
                v110 = sub_1AE83B56C();
                v4 = v186;
                if (!v110)
                  sub_1AE4F6710();
              }
              else
              {
                swift_bridgeObjectRelease();
                v4 = v186;
                if (v109)
                {
                  sub_1AE501548((uint64_t *)&unk_1EED9C8B0);
                  v150 = (_QWORD *)sub_1AE4FCFFC();
                  sub_1AE4F7A50(v150);
                }
              }
              sub_1AE4F6710();
              sub_1AE83B700();
              sub_1AE83B73C();
            }
            else
            {
              sub_1AE508D60();
              if (v31)
                goto LABEL_269;
              sub_1AE50111C(v117);
              sub_1AE83B700();
              sub_1AE83B5F8();
            }
          }
          else
          {
            if ((_DWORD)v28 == 224 && v25 == 5 && v70 == 0)
            {
              sub_1AE83B7E0();
              sub_1AE83B780();
              if ((v191 & 1) == 0)
              {
                sub_1AE508374();
                sub_1AE506040();
                sub_1AE83B364();
                sub_1AE4F6778();
                *(_QWORD *)v166 = 0xD000000000000017;
                *(_QWORD *)(v166 + 8) = 0x80000001AE9887C0;
LABEL_261:
                *(_BYTE *)(v166 + 16) = 0;
LABEL_251:
                sub_1AE4F6928();
                return v22;
              }
LABEL_258:
              if ((v190 & 1) == 0)
              {
LABEL_259:
                sub_1AE508374();
                return v199;
              }
LABEL_254:
              sub_1AE506040();
              goto LABEL_255;
            }
            if ((_DWORD)v28 == 224 && v25 == 6 && v70 == 0)
            {
              v113 = *(_QWORD *)(v189 + 16);
              if (!v113)
              {
                sub_1AE508D60();
                if (v31)
                  goto LABEL_270;
                sub_1AE50111C(v122);
                sub_1AE4F972C();
                sub_1AE83B5F8();
                goto LABEL_199;
              }
              sub_1AE83B498();
              swift_bridgeObjectRetain();
              v22 = sub_1AE503B34();
              v114 = sub_1AE83B56C();
              if (!v114)
              {
                sub_1AE4F6710();
                v114 = MEMORY[0x1E0DEE9D8];
              }
              v115 = *(_QWORD *)(v114 + 16);
              swift_release();
              v116 = v113 - 1;
              if (v115 != v116)
              {
                swift_bridgeObjectRelease();
                v4 = v186;
                if (v116)
                {
                  sub_1AE501548((uint64_t *)&unk_1EED9C8B0);
                  v151 = (_QWORD *)sub_1AE4FCFFC();
                  sub_1AE4F7A50(v151);
                  goto LABEL_177;
                }
                goto LABEL_176;
              }
              v22 = sub_1AE83B56C();
              v4 = v186;
              if (!v22)
              {
                sub_1AE4F6710();
LABEL_176:
                v22 = MEMORY[0x1E0DEE9D8];
              }
LABEL_177:
              sub_1AE4F6710();
              sub_1AE4F972C();
              sub_1AE83B73C();
LABEL_199:
              if ((v168 & 1) == 0)
              {
                sub_1AE508374();
                sub_1AE506040();
                sub_1AE83B364();
                sub_1AE4F6778();
                *(_OWORD *)v166 = xmmword_1AE9618A0;
                goto LABEL_261;
              }
            }
            else
            {
              v79 = (_DWORD)v28 == 224 && v25 == 7;
              if (v79 && !v70)
                goto LABEL_258;
              v80 = (_DWORD)v28 == 224 && v25 == 11;
              if (!v80 || v70)
              {
                v121 = (_DWORD)v28 == 224 && v25 == 12;
                if (!v121 || v70)
                {
                  v123 = (_DWORD)v28 == 224 && v25 == 13;
                  if (!v123 || v70)
                  {
                    v125 = (_DWORD)v28 == 224 && v25 == 14;
                    if (!v125 || v70)
                    {
LABEL_252:
                      sub_1AE508374();
                      sub_1AE506040();
                      v195 = sub_1AE56782C(2);
                      v196 = v158;
                      *(_QWORD *)&v192 = v25;
                      *((_QWORD *)&v192 + 1) = v26;
                      v193 = v27;
                      v194 = v28;
                      sub_1AE926A48();
                      v22 = v195;
                      sub_1AE83B364();
                      v159 = v27;
                      v160 = sub_1AE4F6778();
                      sub_1AE83B474(v160, v161);
                      sub_1AE506EC4(v25, v26, v159);
                      return v22;
                    }
                    sub_1AE83B660();
                    if (v4)
                    {
                      sub_1AE50A780();
                      swift_bridgeObjectRetain();
                      sub_1AE503B34();
                      if (!sub_1AE83B440())
                        sub_1AE4F6710();
                      sub_1AE8060C4();
                      sub_1AE83B728();
                      if (v71)
                      {
                        v153 = sub_1AE83B440();
                        if (!v153)
                        {
                          sub_1AE4F6710();
                          LODWORD(v153) = MEMORY[0x1E0DEE9D8];
                        }
                      }
                      else
                      {
                        sub_1AE4F6710();
                        sub_1AE83B460();
                        LODWORD(v153) = v156;
                      }
                      sub_1AE4F6710();
                      sub_1AE4FC014(14);
                    }
                    else
                    {
                      sub_1AE50A164();
                      LODWORD(v153) = v191;
                      if (v31)
                        goto LABEL_274;
                      sub_1AE50111C(v128);
                      sub_1AE50206C(14);
                    }
                    if ((v190 & 1) != 0)
                    {
LABEL_244:
                      sub_1AE925F74();
                      v20 = 1;
                      v21 = v153;
                    }
                  }
                  else
                  {
                    v4 = *(_QWORD *)(v189 + 16);
                    if (v4)
                    {
                      sub_1AE50A780();
                      swift_bridgeObjectRetain();
                      sub_1AE503B34();
                      if (!sub_1AE83B440())
                        sub_1AE4F6710();
                      sub_1AE8060C4();
                      sub_1AE83B728();
                      if (v71)
                      {
                        v153 = sub_1AE83B440();
                        if (!v153)
                        {
                          sub_1AE4F6710();
                          LODWORD(v153) = MEMORY[0x1E0DEE9D8];
                        }
                      }
                      else
                      {
                        sub_1AE4F6710();
                        sub_1AE83B460();
                        LODWORD(v153) = v155;
                      }
                      sub_1AE4F6710();
                      sub_1AE4FC014(13);
                    }
                    else
                    {
                      sub_1AE50A164();
                      LODWORD(v153) = v191;
                      if (v31)
                        goto LABEL_273;
                      sub_1AE50111C(v127);
                      sub_1AE50206C(13);
                    }
                    if ((v190 & 1) != 0)
                      goto LABEL_244;
                  }
                }
                else
                {
                  v4 = *(_QWORD *)(v189 + 16);
                  if (v4)
                  {
                    sub_1AE50A780();
                    swift_bridgeObjectRetain();
                    sub_1AE503B34();
                    if (!sub_1AE83B440())
                      sub_1AE4F6710();
                    sub_1AE8060C4();
                    sub_1AE83B728();
                    if (v71)
                    {
                      v153 = sub_1AE83B440();
                      if (!v153)
                      {
                        sub_1AE4F6710();
                        LODWORD(v153) = MEMORY[0x1E0DEE9D8];
                      }
                    }
                    else
                    {
                      sub_1AE4F6710();
                      sub_1AE83B460();
                      LODWORD(v153) = v154;
                    }
                    sub_1AE4F6710();
                    sub_1AE4FC014(12);
                  }
                  else
                  {
                    sub_1AE50A164();
                    LODWORD(v153) = v191;
                    if (v31)
                      goto LABEL_272;
                    sub_1AE50111C(v126);
                    sub_1AE50206C(12);
                  }
                  if ((v190 & 1) != 0)
                    goto LABEL_244;
                }
              }
              else
              {
                v4 = *(_QWORD *)(v189 + 16);
                if (v4)
                {
                  sub_1AE50A780();
                  swift_bridgeObjectRetain();
                  sub_1AE503B34();
                  if (!sub_1AE83B440())
                    sub_1AE4F6710();
                  sub_1AE8060C4();
                  sub_1AE83B728();
                  if (v71)
                  {
                    v153 = sub_1AE83B440();
                    if (!v153)
                    {
                      sub_1AE4F6710();
                      LODWORD(v153) = MEMORY[0x1E0DEE9D8];
                    }
                  }
                  else
                  {
                    sub_1AE4F6710();
                    sub_1AE83B460();
                    LODWORD(v153) = v152;
                  }
                  sub_1AE4F6710();
                  sub_1AE4FC014(11);
                }
                else
                {
                  sub_1AE50A164();
                  LODWORD(v153) = v191;
                  if (v31)
                    goto LABEL_271;
                  sub_1AE50111C(v124);
                  sub_1AE50206C(11);
                }
                if ((v190 & 1) != 0)
                  goto LABEL_244;
              }
            }
          }
        }
        break;
      default:
        goto LABEL_252;
    }
  }
  sub_1AE508D60();
  if (v31)
  {
    __break(1u);
LABEL_263:
    __break(1u);
LABEL_264:
    __break(1u);
LABEL_265:
    __break(1u);
LABEL_266:
    __break(1u);
LABEL_267:
    __break(1u);
LABEL_268:
    __break(1u);
LABEL_269:
    __break(1u);
LABEL_270:
    __break(1u);
LABEL_271:
    __break(1u);
LABEL_272:
    __break(1u);
LABEL_273:
    __break(1u);
LABEL_274:
    __break(1u);
    JUMPOUT(0x1AE839E98);
  }
  sub_1AE50111C(v30);
  LODWORD(v28) = v194;
  if (v194 <= 0xFBu)
  {
    v26 = *((_QWORD *)&v192 + 1);
    v25 = v192;
    v27 = v193;
    sub_1AE83B5E8();
    *(_QWORD *)(v4 + 80) = v25;
    *(_QWORD *)(v4 + 88) = v26;
    *(_QWORD *)(v4 + 96) = v27;
    *(_BYTE *)(v4 + 104) = v28;
    sub_1AE8035B8(v25, v26, v27, v28);
    sub_1AE508024();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE505FE4();
      sub_1AE51BC74();
      v23 = v129;
    }
    v29 = *(_QWORD *)(v23 + 16);
    v32 = *(_QWORD *)(v23 + 24);
    v22 = v29 + 1;
    if (v29 >= v32 >> 1)
    {
      sub_1AE5D8C50(v32);
      sub_1AE51BC74();
      v23 = v130;
    }
    *(_QWORD *)(v23 + 16) = v22;
    v33 = v23 + 32 * v29;
    *(_QWORD *)(v33 + 32) = v25;
    *(_QWORD *)(v33 + 40) = v26;
    *(_QWORD *)(v33 + 48) = v27;
    *(_BYTE *)(v33 + 56) = v28;
    v189 = v23;
    *(_QWORD *)(v4 + 72) = v23;
    goto LABEL_11;
  }
  sub_1AE506040();
  if ((v22 & 1) == 0)
  {
    sub_1AE508374();
    sub_1AE83B364();
    sub_1AE4F6778();
    *(_QWORD *)v157 = 0;
    *(_QWORD *)(v157 + 8) = 0;
    *(_BYTE *)(v157 + 16) = 2;
    goto LABEL_251;
  }
LABEL_255:
  sub_1AE501548(&qword_1EED9A618);
  v162 = (*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1AE934250;
  v163 = (_QWORD *)(v22 + v162);
  v164 = v198;
  *v163 = v197;
  v163[1] = v164;
  swift_storeEnumTagMultiPayload();
  return v22;
}

uint64_t sub_1AE839F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v26;
  BOOL v27;
  unsigned __int8 v29;
  uint64_t v30;
  char v31;
  unsigned __int8 v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  unint64_t v73;
  BOOL v74;
  _QWORD *v75;
  _QWORD *v76;
  unint64_t v77;
  uint64_t result;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unsigned __int8 v99;
  uint64_t v100;

  v2 = v1;
  v90 = sub_1AE78B8A8();
  v86 = *(_QWORD *)(v90 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F686C();
  v89 = (uint64_t *)v4;
  MEMORY[0x1E0C80A78](v5);
  v91 = (char *)&v86 - v6;
  v7 = 0;
  v88 = MEMORY[0x1E0DEE9D8];
  v92 = MEMORY[0x1E0DEE9D8];
  v100 = v0;
LABEL_2:
  v87 = v7;
  while (1)
  {
    while (1)
    {
      v8 = *(_QWORD *)(v0 + 72);
      if (*(_QWORD *)(v8 + 16))
      {
        v9 = *(_QWORD *)(v8 + 32);
        v10 = *(_QWORD *)(v8 + 40);
        v11 = *(_QWORD *)(v8 + 48);
        v93 = v2;
        v94 = v8;
        v12 = *(unsigned __int8 *)(v8 + 56);
        v13 = *(_QWORD *)(v0 + 80);
        v14 = *(_QWORD *)(v100 + 88);
        v15 = *(_QWORD *)(v100 + 96);
        LOBYTE(v8) = *(_BYTE *)(v100 + 104);
        sub_1AE83B5C4(v9, v10);
        v0 = v100;
        v16 = v15;
        v2 = v93;
        sub_1AE506EC4(v13, v14, v16);
        *(_QWORD *)(v0 + 80) = v9;
        *(_QWORD *)(v0 + 88) = v10;
        *(_QWORD *)(v0 + 96) = v11;
        *(_BYTE *)(v0 + 104) = v12;
        v95 = v10;
        sub_1AE83B5C4(v9, v10);
      }
      else
      {
        v17 = *(_QWORD *)(v0 + 112);
        v18 = __OFADD__(v17, 1);
        v19 = v17 + 1;
        if (v18)
        {
          __break(1u);
          goto LABEL_98;
        }
        sub_1AE83B69C(v19);
        v12 = v99;
        if (v99 > 0xFBu)
          return v92;
        v9 = v96;
        v20 = v97;
        v11 = v98;
        sub_1AE805E40(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
        *(_QWORD *)(v0 + 80) = v9;
        *(_QWORD *)(v0 + 88) = v20;
        *(_QWORD *)(v0 + 96) = v11;
        *(_BYTE *)(v0 + 104) = v12;
        sub_1AE83B5C4(v9, v20);
        v95 = v20;
        sub_1AE83B5C4(v9, v20);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE505FE4();
          sub_1AE51BC74();
          v8 = v55;
        }
        v21 = *(_QWORD *)(v8 + 16);
        if (v21 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_1AE51BC74();
          v8 = v56;
        }
        *(_QWORD *)(v8 + 16) = v21 + 1;
        v22 = v8 + 32 * v21;
        v23 = v95;
        *(_QWORD *)(v22 + 32) = v9;
        *(_QWORD *)(v22 + 40) = v23;
        *(_QWORD *)(v22 + 48) = v11;
        *(_BYTE *)(v22 + 56) = v12;
        v0 = v100;
        v94 = v8;
        *(_QWORD *)(v100 + 72) = v8;
      }
      if (v12 >= 0xE0)
      {
        v24 = v11 | v95;
        v26 = v9 == 6 && v24 == 0 && (_DWORD)v12 == 224;
        v7 = v26;
        if (v26)
        {
          v59 = *(_QWORD *)(v94 + 16);
          if (v59)
          {
            sub_1AE83B644(v94);
            swift_bridgeObjectRetain();
            sub_1AE4FD598(v9, v2, v12, v8);
            swift_bridgeObjectRetain();
            v60 = swift_dynamicCastClass();
            if (!v60)
            {
              sub_1AE737420();
              v60 = MEMORY[0x1E0DEE9D8];
            }
            v61 = *(_QWORD *)(v60 + 16);
            swift_release();
            v62 = v59 - 1;
            if (v61 == v62)
            {
              v0 = v94;
              if (!sub_1AE83B6A8())
                sub_1AE4F9038();
LABEL_59:
              sub_1AE4F9038();
              sub_1AE4F972C();
              sub_1AE83B754();
LABEL_69:
              if ((v87 & 1) == 0)
                goto LABEL_2;
              sub_1AE5FC314();
              sub_1AE4F7774();
              sub_1AE83B364();
              sub_1AE4F6778();
              *(_QWORD *)v84 = 0xD00000000000001ALL;
              *(_QWORD *)(v84 + 8) = 0x80000001AE988860;
              *(_BYTE *)(v84 + 16) = 0;
              return sub_1AE4F6928();
            }
            sub_1AE737420();
            if (v62)
            {
              sub_1AE501548((uint64_t *)&unk_1EED9C8B0);
              v71 = (_QWORD *)sub_1AE4FCFFC();
              v72 = sub_1AE83B4B0(v71);
              v74 = v74 || (unint64_t)v72 >= v73;
              if (!v74)
              {
LABEL_102:
                sub_1AE83B66C();
                result = sub_1AE500FB4();
                __break(1u);
                return result;
              }
              swift_arrayInitWithCopy();
            }
            v0 = v94;
            goto LABEL_59;
          }
          v67 = *(_QWORD *)(v0 + 112);
          v18 = __OFADD__(v67, 1);
          v68 = v67 + 1;
          if (!v18)
          {
            sub_1AE83B69C(v68);
            sub_1AE4F972C();
            sub_1AE4F83BC();
            goto LABEL_69;
          }
          __break(1u);
LABEL_101:
          __break(1u);
          goto LABEL_102;
        }
        v27 = (_DWORD)v12 == 224 && v9 == 7;
        if (v27 && v24 == 0)
        {
          v63 = *(_QWORD *)(v94 + 16);
          if (v63)
          {
            sub_1AE83B644(v94);
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            sub_1AE4FD598(v9, v2, v12, v8);
            v64 = sub_1AE83B6A8();
            if (!v64)
            {
              sub_1AE737420();
              v64 = MEMORY[0x1E0DEE9D8];
            }
            v65 = *(_QWORD *)(v64 + 16);
            swift_release();
            v66 = v63 - 1;
            if (v65 == v66)
            {
              v0 = v94;
              if (!sub_1AE83B6A8())
                sub_1AE4F9038();
            }
            else
            {
              sub_1AE737420();
              if (v66)
              {
                sub_1AE501548((uint64_t *)&unk_1EED9C8B0);
                v75 = (_QWORD *)sub_1AE4FCFFC();
                v76 = sub_1AE83B4B0(v75);
                if (!v74 && (unint64_t)v76 < v77)
                  goto LABEL_102;
                swift_arrayInitWithCopy();
              }
              v0 = v94;
            }
            sub_1AE4F9038();
            sub_1AE83B44C();
            sub_1AE83B754();
          }
          else
          {
            v69 = *(_QWORD *)(v0 + 112);
            v18 = __OFADD__(v69, 1);
            v70 = v69 + 1;
            if (v18)
              goto LABEL_101;
            sub_1AE83B69C(v70);
            sub_1AE83B44C();
            sub_1AE4F83BC();
          }
          if ((v87 & 1) == 0)
            goto LABEL_2;
          if (*(_QWORD *)(v92 + 16) && *(_QWORD *)(v88 + 16))
            return v92;
LABEL_98:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1AE83B364();
          sub_1AE4F6778();
          sub_1AE83B5D0(v85, 0xD000000000000031);
          return sub_1AE4F6928();
        }
      }
      v94 = v11;
      v29 = sub_1AE83865C();
      if (v2)
      {
        sub_1AE83B4F0();
        sub_1AE5FC314();
        return sub_1AE4F7774();
      }
      v32 = v29;
      v33 = v30;
      v34 = v31;
      if (sub_1AE7911F0(v29) == 0x656372756F73 && v35 == 0xE600000000000000)
        break;
      v37 = sub_1AE4FB6F0();
      sub_1AE4F6648();
      if ((v37 & 1) != 0)
        goto LABEL_42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v38 = v88;
      }
      else
      {
        sub_1AE83B714();
        v38 = v57;
      }
      v40 = *(_QWORD *)(v38 + 16);
      v39 = *(_QWORD *)(v38 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_1AE4FBAB0(v39);
        sub_1AE51BC9C();
        v38 = v58;
      }
      *(_QWORD *)(v38 + 16) = v40 + 1;
      v88 = v38;
      v41 = v38 + 24 * v40;
      *(_BYTE *)(v41 + 32) = v32;
      *(_QWORD *)(v41 + 40) = v33;
      *(_BYTE *)(v41 + 48) = v34;
      sub_1AE83B4F0();
      v0 = v100;
    }
    swift_bridgeObjectRelease();
LABEL_42:
    v42 = *(_QWORD *)(v33 + 16);
    if (v42)
      break;
LABEL_43:
    sub_1AE83B4F0();
    sub_1AE4F81B8();
    v0 = v100;
  }
  v43 = v33 + ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80));
  v44 = *(_QWORD *)(v86 + 72);
  v93 = 0;
  v45 = (uint64_t)v91;
  while (1)
  {
    sub_1AE78B0EC(v43, v45);
    v46 = v89;
    sub_1AE78B0EC(v45, (uint64_t)v89);
    if (swift_getEnumCaseMultiPayload() != 5)
      break;
    v47 = *v46;
    v48 = v92;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE505FE4();
      sub_1AE51BCC4();
      v48 = v53;
    }
    v49 = v48;
    v50 = *(_QWORD *)(v48 + 16);
    v92 = v49;
    v51 = (uint64_t)v91;
    if (v50 >= *(_QWORD *)(v49 + 24) >> 1)
    {
      sub_1AE51BCC4();
      v51 = (uint64_t)v91;
      v92 = v54;
    }
    v52 = v92;
    *(_QWORD *)(v92 + 16) = v50 + 1;
    *(_QWORD *)(v52 + 8 * v50 + 32) = v47;
    v45 = v51;
    sub_1AE78AFB8(v51);
    v43 += v44;
    --v42;
    v2 = v93;
    if (!v42)
      goto LABEL_43;
  }
  sub_1AE5FC314();
  sub_1AE4F7774();
  sub_1AE4F81B8();
  v96 = 0;
  v97 = 0xE000000000000000;
  sub_1AE83B81C();
  sub_1AE4F6A2C();
  v80 = (uint64_t)v91;
  sub_1AE926A48();
  sub_1AE83B62C();
  sub_1AE83B364();
  v81 = (uint64_t)v46;
  v82 = sub_1AE4F6778();
  sub_1AE83B474(v82, v83);
  sub_1AE83B4F0();
  sub_1AE78AFB8(v80);
  return sub_1AE78AFB8(v81);
}

uint64_t sub_1AE83A6E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v1 = sub_1AE9248DC();
  v36 = *(_QWORD *)(v1 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F666C();
  v5 = v4 - v3;
  sub_1AE501548(&qword_1ED30EB60);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F666C();
  v9 = v8 - v7;
  sub_1AE501548(&qword_1EEDA2908);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F666C();
  v13 = v12 - v11;
  v14 = sub_1AE924948();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F666C();
  v18 = v17 - v16;
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  sub_1AE924924();
  v20 = (void *)sub_1AE924930();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
  objc_msgSend(v19, sel_setLocale_, v20);

  sub_1AE9249C0();
  v21 = sub_1AE9249D8();
  v22 = 0;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v13, 1, v21) != 1)
  {
    v22 = (void *)sub_1AE9249CC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v13, v21);
  }
  objc_msgSend(v19, sel_setTimeZone_, v22, a1);

  sub_1AE501548(&qword_1ED31BCD0);
  result = swift_initStackObject();
  v24 = result;
  v25 = 0;
  *(_OWORD *)(result + 16) = xmmword_1AE93D1B0;
  *(_QWORD *)(result + 32) = 0x2D4D4D2D79797979;
  *(_QWORD *)(result + 40) = 0xEA00000000006464;
  v26 = (uint64_t *)(result + 40);
  *(_QWORD *)(result + 48) = 0x79792D64642D4D4DLL;
  *(_QWORD *)(result + 56) = 0xEA00000000007979;
  *(_QWORD *)(result + 64) = 0x797979792D4D4DLL;
  *(_QWORD *)(result + 72) = 0xE700000000000000;
  *(_QWORD *)(result + 80) = 2038004089;
  *(_QWORD *)(result + 88) = 0xE400000000000000;
  while (v25 < *(_QWORD *)(v24 + 16))
  {
    v28 = *(v26 - 1);
    v27 = *v26;
    sub_1AE4FB75C();
    sub_1AE83B314(v28, v27, v19);
    v29 = (void *)sub_1AE925E18();
    v30 = objc_msgSend(v19, sel_dateFromString_, v29);

    if (v30)
    {
      sub_1AE9248A0();

      v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
      v31(v9, v5, v1);
      sub_1AE4FCF34(v9, 0);
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v9, 1, v1) != 1)
      {

        swift_setDeallocating();
        sub_1AE85EB9C();
        v32 = v35;
        v31(v35, v9, v1);
        v33 = 0;
        return sub_1AE4FCF34(v32, v33);
      }
    }
    else
    {
      sub_1AE4FCF34(v9, 1);
    }
    ++v25;
    result = sub_1AE657280(v9);
    v26 += 2;
    if (v25 == 4)
    {
      swift_setDeallocating();
      sub_1AE85EB9C();

      v33 = 1;
      v32 = v35;
      return sub_1AE4FCF34(v32, v33);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1AE83AA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  BOOL v17;
  BOOL v18;
  char v20;
  uint64_t v22;

  sub_1AE4F7630();
  v0 = sub_1AE9267D8();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = v0 + 56;
    v3 = 0.0;
    while (1)
    {
      v4 = *(_QWORD *)(v2 - 24);
      v5 = *(_QWORD *)(v2 - 16);
      swift_bridgeObjectRetain_n();
      sub_1AE83B824();
      if (__OFSUB__(sub_1AE92673C(), 1))
        break;
      v6 = sub_1AE926730();
      if ((v7 & 1) != 0)
        v8 = v5;
      else
        v8 = v6;
      if (v4 >> 14 > v8 >> 14)
        goto LABEL_43;
      v22 = v1;
      sub_1AE83B824();
      sub_1AE926754();
      sub_1AE4F9038();
      v9 = sub_1AE9263B8();
      v1 = v9;
      if ((v10 & 1) != 0)
      {
        sub_1AE4F9038();
        sub_1AE7374E4();
        return v1;
      }
      if (v4 >> 14 == v5 >> 14)
      {
        sub_1AE7374E4();
        goto LABEL_40;
      }
      v11 = *(double *)&v9;
      sub_1AE83B808();
      sub_1AE926724();
      sub_1AE83B808();
      v12 = sub_1AE926748();
      v14 = v13;
      sub_1AE4F9038();
      v15 = v12 == 100 && v14 == 0xE100000000000000;
      if (v15 || (sub_1AE4FF1B4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v16 = v22;
        v11 = v11 * 86400.0;
      }
      else
      {
        v17 = v12 == 104 && v14 == 0xE100000000000000;
        if (v17 || (sub_1AE4FF1B4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v16 = v22;
          v11 = v11 * 3600.0;
        }
        else
        {
          v18 = v12 == 109 && v14 == 0xE100000000000000;
          if (v18 || (sub_1AE4FF1B4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v16 = v22;
            v11 = v11 * 60.0;
          }
          else if (v12 == 115 && v14 == 0xE100000000000000)
          {
            swift_bridgeObjectRelease();
            v16 = v22;
          }
          else
          {
            v20 = sub_1AE4FF1B4();
            swift_bridgeObjectRelease();
            v16 = v22;
            if ((v20 & 1) == 0)
              goto LABEL_40;
          }
        }
      }
      v3 = v3 + v11;
      v2 += 32;
      v1 = v16 - 1;
      if (!v1)
      {
        sub_1AE7374E4();
        return *(_QWORD *)&v3;
      }
    }
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v1;
}

id sub_1AE83AD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1AE925E18();
  sub_1AE4F76D8();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1AE9246B4();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1AE83ADF8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE83AE40(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for ParserV2(uint64_t a1)
{
  uint64_t result;
  unsigned int v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3 = *(unsigned __int8 *)(a1 + 104);
  if (v3 <= 0xFB)
    return sub_1AE80360C(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), v3);
  return result;
}

uint64_t initializeWithCopy for ParserV2(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = *(unsigned __int8 *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 <= 0xFB)
  {
    v8 = *(_QWORD *)(a2 + 80);
    v9 = *(_QWORD *)(a2 + 88);
    v10 = *(_QWORD *)(a2 + 96);
    sub_1AE8035B8(v8, v9, v10, v7);
    *(_QWORD *)(a1 + 80) = v8;
    *(_QWORD *)(a1 + 88) = v9;
    *(_QWORD *)(a1 + 96) = v10;
    *(_BYTE *)(a1 + 104) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  }
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t assignWithCopy for ParserV2(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned int v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 80);
  v5 = (_OWORD *)(a2 + 80);
  v6 = *(unsigned __int8 *)(a2 + 104);
  if (*(unsigned __int8 *)(a1 + 104) <= 0xFBu)
  {
    if (v6 <= 0xFB)
    {
      v12 = *(_QWORD *)(a2 + 80);
      v13 = *(_QWORD *)(a2 + 88);
      v14 = *(_QWORD *)(a2 + 96);
      sub_1AE8035B8(v12, v13, v14, *(_BYTE *)(a2 + 104));
      v15 = *(_QWORD *)(a1 + 80);
      v16 = *(_QWORD *)(a1 + 88);
      v17 = *(_QWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 80) = v12;
      *(_QWORD *)(a1 + 88) = v13;
      *(_QWORD *)(a1 + 96) = v14;
      v18 = *(_BYTE *)(a1 + 104);
      *(_BYTE *)(a1 + 104) = v6;
      sub_1AE80360C(v15, v16, v17, v18);
    }
    else
    {
      sub_1AE83B144(a1 + 80);
      v8 = *(_OWORD *)(a2 + 89);
      *v4 = *v5;
      *(_OWORD *)(a1 + 89) = v8;
    }
  }
  else if (v6 <= 0xFB)
  {
    v9 = *(_QWORD *)(a2 + 80);
    v10 = *(_QWORD *)(a2 + 88);
    v11 = *(_QWORD *)(a2 + 96);
    sub_1AE8035B8(v9, v10, v11, *(_BYTE *)(a2 + 104));
    *(_QWORD *)(a1 + 80) = v9;
    *(_QWORD *)(a1 + 88) = v10;
    *(_QWORD *)(a1 + 96) = v11;
    *(_BYTE *)(a1 + 104) = v6;
  }
  else
  {
    v7 = *v5;
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
    *v4 = v7;
  }
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t sub_1AE83B144(uint64_t a1)
{
  sub_1AE8035F8(a1);
  return a1;
}

void *initializeWithTake for ParserV2(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t assignWithTake for ParserV2(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v6 = *(unsigned __int8 *)(a1 + 104);
  if (v6 <= 0xFB)
  {
    v7 = *(unsigned __int8 *)(a2 + 104);
    if (v7 <= 0xFB)
    {
      v8 = *(_QWORD *)(a2 + 96);
      v9 = *(_QWORD *)(a1 + 80);
      v10 = *(_QWORD *)(a1 + 88);
      v11 = *(_QWORD *)(a1 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 96) = v8;
      *(_BYTE *)(a1 + 104) = v7;
      sub_1AE80360C(v9, v10, v11, v6);
      goto LABEL_6;
    }
    sub_1AE83B144(a1 + 80);
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
LABEL_6:
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParserV2(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParserV2(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ParserV2()
{
  return &type metadata for ParserV2;
}

void sub_1AE83B314(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1AE925E18();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setDateFormat_, v4);

}

unint64_t sub_1AE83B364()
{
  unint64_t result;

  result = qword_1EEDA41C8;
  if (!qword_1EEDA41C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9618DC, &type metadata for ParserV2Error);
    atomic_store(result, (unint64_t *)&qword_1EEDA41C8);
  }
  return result;
}

uint64_t sub_1AE83B3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for KGQ.Value();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE83B3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1AE526540(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for ParserV2Error()
{
  return &type metadata for ParserV2Error;
}

uint64_t sub_1AE83B440()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1AE83B44C()
{
  return sub_1AE805E40(7, 0, 0, 0xE0u);
}

void sub_1AE83B460()
{
  sub_1AE5924A8();
}

uint64_t sub_1AE83B474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_1AE83B484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;

  return sub_1AE8035B8(v0, v1, v2, v3);
}

uint64_t sub_1AE83B498()
{
  return swift_unknownObjectRetain();
}

double sub_1AE83B4A0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 112) = a1;
  return sub_1AE8038C4(v2 - 128);
}

_QWORD *sub_1AE83B4B0(_QWORD *a1)
{
  uint64_t v1;
  size_t v3;

  v3 = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(v3 - 32) / 32);
  return a1 + 4;
}

uint64_t sub_1AE83B4F0()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;

  return sub_1AE805E40(v0, *(_QWORD *)(v2 - 120), *(_QWORD *)(v2 - 128), v1);
}

__n128 sub_1AE83B500()
{
  __n128 *v0;
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = *(_QWORD *)(v1 - 144);
  v3 = *(_BYTE *)(v1 - 136);
  result = *(__n128 *)(v1 - 160);
  v0[5] = result;
  v0[6].n128_u64[0] = v2;
  v0[6].n128_u8[8] = v3;
  return result;
}

_QWORD *sub_1AE83B51C(_QWORD *a1)
{
  uint64_t v1;
  size_t v3;

  v3 = j__malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(v3 - 32) / 32);
  return a1 + 4;
}

uint64_t sub_1AE83B56C()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1AE83B574()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1AE805E40(v3, v2, v1, v0);
}

__n128 sub_1AE83B588()
{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;
  __n128 result;

  sub_1AE805E40(v2, v3, v0, v4);
  v6 = *(_QWORD *)(v5 - 144);
  v7 = *(_BYTE *)(v5 - 136);
  result = *(__n128 *)(v5 - 160);
  v1[5] = result;
  v1[6].n128_u64[0] = v6;
  v1[6].n128_u8[8] = v7;
  return result;
}

uint64_t sub_1AE83B5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 v3;

  return sub_1AE8035B8(a1, a2, v2, v3);
}

void sub_1AE83B5D0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(_BYTE *)(a1 + 16) = 1;
}

uint64_t sub_1AE83B5E8()
{
  uint64_t v0;

  return sub_1AE805E40(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
}

__n128 sub_1AE83B5F8()
{
  __n128 *v0;
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = *(_QWORD *)(v1 - 144);
  v3 = *(_BYTE *)(v1 - 136);
  result = *(__n128 *)(v1 - 160);
  v0[5] = result;
  v0[6].n128_u64[0] = v2;
  v0[6].n128_u8[8] = v3;
  return result;
}

uint64_t sub_1AE83B61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  return sub_1AE80360C(a9, a10, a11, a12);
}

uint64_t sub_1AE83B62C()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE83B644@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = v1;
  return a1;
}

uint64_t sub_1AE83B688()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1AE805E40(v3, v2, v1, v0);
}

double sub_1AE83B69C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 112) = a1;
  return sub_1AE8038C4(v2 - 112);
}

uint64_t sub_1AE83B6A8()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1AE83B6B4()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1AE805E40(v3, v2, v1, v0);
}

uint64_t sub_1AE83B6C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;

  return sub_1AE805E40(v1, v2, v0, v3);
}

void sub_1AE83B6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  sub_1AE8041F8((uint64_t)va);
}

uint64_t sub_1AE83B700()
{
  return sub_1AE805E40(4, 0, 0, 0xE0u);
}

void sub_1AE83B714()
{
  sub_1AE51BC9C();
}

uint64_t sub_1AE83B734()
{
  return swift_release();
}

void sub_1AE83B73C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 72) = v0;
  *(_QWORD *)(v2 + 80) = v3;
  *(_QWORD *)(v2 + 88) = v4;
  *(_QWORD *)(v2 + 96) = v5;
  *(_BYTE *)(v2 + 104) = v1;
}

void sub_1AE83B754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(v5 - 72);
  *(_QWORD *)(v6 + 72) = v1;
  *(_QWORD *)(v6 + 80) = v0;
  *(_QWORD *)(v6 + 88) = v2;
  *(_QWORD *)(v6 + 96) = v3;
  *(_BYTE *)(v6 + 104) = v4;
}

uint64_t sub_1AE83B76C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE83B778@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1AE83B3A0(*(_QWORD *)(a2 - 256), a1);
}

uint64_t sub_1AE83B780()
{
  uint64_t v0;

  return sub_1AE805E40(*(_QWORD *)(v0 - 160), *(_QWORD *)(v0 - 152), *(_QWORD *)(v0 - 144), *(_BYTE *)(v0 - 136));
}

uint64_t sub_1AE83B790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  sub_1AE80360C(a9, a10, a11, a12);
  return sub_1AE839F3C();
}

void sub_1AE83B7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1AE80527C((uint64_t)va);
}

void sub_1AE83B7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  sub_1AE80527C((uint64_t)va);
}

void sub_1AE83B7E0()
{
  uint64_t v0;

  sub_1AE803FF8(v0 - 160);
}

void sub_1AE83B7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_1AE803FF8((uint64_t)va);
}

uint64_t sub_1AE83B81C()
{
  return sub_1AE92691C();
}

uint64_t sub_1AE83B838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unsigned __int8 a28)
{
  return sub_1AE805E40(a25, a26, a27, a28);
}

uint64_t sub_1AE83B85C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1AE83B874@<X0>(uint64_t a1@<X0>, __int128 *a2@<X8>)
{
  return sub_1AE83848C(a1, a2);
}

uint64_t sub_1AE83B87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  return sub_1AE83848C(a1, &a9);
}

uint64_t PartOfDay.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE83B8B4 + 4 * byte_1AE961920[*v0]))(0x6E776F6E6B6E55, 0xE700000000000000);
}

uint64_t sub_1AE83B8B4()
{
  return 0x676E696E726F4DLL;
}

uint64_t sub_1AE83B8F0()
{
  return 0x746867694ELL;
}

IntelligencePlatform::PartOfDay __swiftcall PartOfDay.init(hour:)(Swift::Int hour)
{
  char *v1;
  char v2;
  char v3;
  char v4;

  if ((unint64_t)(hour - 17) < 4)
    v2 = 3;
  else
    v2 = 4;
  if ((unint64_t)(hour - 12) >= 5)
    v3 = v2;
  else
    v3 = 2;
  if ((unint64_t)(hour - 6) >= 6)
    v4 = v3;
  else
    v4 = 1;
  *v1 = v4;
  return (char)hour;
}

IntelligencePlatform::PartOfDay_optional __swiftcall PartOfDay.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (IntelligencePlatform::PartOfDay_optional)rawValue;
}

uint64_t PartOfDay.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1AE83B95C()
{
  unint64_t result;

  result = qword_1EEDA41D8;
  if (!qword_1EEDA41D8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PartOfDay, &type metadata for PartOfDay);
    atomic_store(result, (unint64_t *)&qword_1EEDA41D8);
  }
  return result;
}

IntelligencePlatform::PartOfDay_optional sub_1AE83B998(Swift::Int *a1)
{
  return PartOfDay.init(rawValue:)(*a1);
}

uint64_t sub_1AE83B9A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = PartOfDay.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for PartOfDay(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AE83BA14 + 4 * byte_1AE96192A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AE83BA48 + 4 * byte_1AE961925[v4]))();
}

uint64_t sub_1AE83BA48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE83BA50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE83BA58);
  return result;
}

uint64_t sub_1AE83BA64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE83BA6CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AE83BA70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE83BA78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PartOfDay()
{
  return &type metadata for PartOfDay;
}

uint64_t sub_1AE83BA94@<X0>(uint64_t a1@<X8>)
{
  return static Paths.createBaseDirectory()(a1);
}

uint64_t static Paths.createBaseDirectory()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v18;
  void *v19;
  unsigned __int8 v20;
  id v21;
  id v22;
  uint64_t v24;
  id v25[3];

  v25[2] = *(id *)MEMORY[0x1E0C80C00];
  v1 = sub_1AE9246E4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4F666C();
  v5 = v4 - v3;
  v6 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F666C();
  v9 = v8 - v7;
  v10 = sub_1AE924780();
  v24 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F666C();
  v13 = v12 - v11;
  v14 = (void *)objc_opt_self();
  v15 = objc_msgSend(v14, sel_defaultManager);
  v16 = objc_msgSend(v15, sel_URLsForDirectory_inDomains_, 5, 1);

  sub_1AE9261CC();
  sub_1AE56AEAC();
  swift_bridgeObjectRelease();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v9, 1, v10) == 1)
  {
    sub_1AE543420(v9);
    sub_1AE83C02C();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v13, v9, v10);
    v25[0] = (id)0xD000000000000014;
    v25[1] = (id)0x80000001AE961A20;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x1E0CAFD60], v1);
    sub_1AE4F7630();
    sub_1AE924774();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v14, sel_defaultManager);
    v19 = (void *)sub_1AE924708();
    v25[0] = 0;
    v20 = objc_msgSend(v18, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v19, 1, 0, v25);

    if ((v20 & 1) != 0)
    {
      v21 = v25[0];
    }
    else
    {
      v22 = v25[0];
      sub_1AE9246B4();

      swift_willThrow();
      sub_1AE503B58(a1);
    }
    return sub_1AE503B58(v13);
  }
}

unint64_t sub_1AE83C02C()
{
  unint64_t result;

  result = qword_1EEDA41F0;
  if (!qword_1EEDA41F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE961B04, &type metadata for Paths.BaseDirectoryError);
    atomic_store(result, (unint64_t *)&qword_1EEDA41F0);
  }
  return result;
}

uint64_t sub_1AE83C068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v0 = sub_1AE924780();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE83BA94((uint64_t)v3);
  v4 = sub_1AE9246F0();
  v6 = v5;
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1EEDA41E0 = v4;
  *(_QWORD *)algn_1EEDA41E8 = v6;
  return result;
}

uint64_t static Paths.baseDirectory.getter()
{
  uint64_t v0;

  if (qword_1EED998A8 != -1)
    swift_once();
  v0 = qword_1EEDA41E0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1AE83C158()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1AE924780();
  sub_1AE595770(v0, qword_1ED31B510);
  v1 = sub_1AE4FB608(v0, (uint64_t)qword_1ED31B510);
  return sub_1AE83BA94(v1);
}

ValueMetadata *type metadata accessor for Paths()
{
  return &type metadata for Paths;
}

uint64_t storeEnumTagSinglePayload for Paths.BaseDirectoryError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE83C1F0 + 4 * byte_1AE961A30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE83C210 + 4 * byte_1AE961A35[v4]))();
}

_BYTE *sub_1AE83C1F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE83C210(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE83C218(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE83C220(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE83C228(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE83C230(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Paths.BaseDirectoryError()
{
  return &type metadata for Paths.BaseDirectoryError;
}

unint64_t sub_1AE83C24C()
{
  return 0xD000000000000029;
}

unint64_t sub_1AE83C270()
{
  unint64_t result;

  result = qword_1EEDA41F8[0];
  if (!qword_1EEDA41F8[0])
  {
    result = MEMORY[0x1AF454B70](&unk_1AE961ADC, &type metadata for Paths.BaseDirectoryError);
    atomic_store(result, qword_1EEDA41F8);
  }
  return result;
}

uint64_t sub_1AE83C2AC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    v0 = sub_1AE92670C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_1AE83C378(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  int v10;
  uint64_t v11;
  size_t v12;
  unint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  void *v21;
  const void *v22;
  uint64_t v25;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  if (*(_DWORD *)(v9 + 84))
    v12 = *(_QWORD *)(v9 + 64);
  else
    v12 = *(_QWORD *)(v9 + 64) + 1;
  v13 = ((v12
        + 7
        + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~(unint64_t)v10)) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v14 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  v15 = (*(_DWORD *)(v6 + 80) | v10) & 0x100000;
  if (v14 > 7 || v15 != 0 || v13 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
    swift_retain();
  }
  else
  {
    v25 = AssociatedTypeWitness;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v19 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v19 = *v20;
    v21 = (void *)(((unint64_t)v19 + v11 + 8) & ~v11);
    v22 = (const void *)(((unint64_t)v20 + v11 + 8) & ~v11);
    swift_bridgeObjectRetain();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v22, 1, v25))
    {
      memcpy(v21, v22, v12);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v21, v22, v25);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v21, 0, 1, v25);
    }
    *(_QWORD *)(((unint64_t)v21 + v12 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v22 + v12 + 7) & 0xFFFFFFFFFFFFF8);
  }
  return a1;
}

uint64_t sub_1AE83C538(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(a1, *(_QWORD *)(a2 + 16));
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v7, 1, AssociatedTypeWitness);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v6 + 8))(v7, AssociatedTypeWitness);
  return result;
}

uint64_t sub_1AE83C5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  uint64_t v15;
  size_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  v13 = (const void *)(((unint64_t)v8 + v11 + 8) & ~v11);
  swift_bridgeObjectRetain();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, AssociatedTypeWitness))
  {
    v14 = *(_DWORD *)(v10 + 84);
    v15 = *(_QWORD *)(v10 + 64);
    if (v14)
      v16 = *(_QWORD *)(v10 + 64);
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, AssociatedTypeWitness);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, AssociatedTypeWitness);
    v14 = *(_DWORD *)(v10 + 84);
    v15 = *(_QWORD *)(v10 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  *(_QWORD *)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + v17 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1AE83C73C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 24))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  v13 = (const void *)(((unint64_t)v8 + v11 + 8) & ~v11);
  LODWORD(v7) = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v12, 1, AssociatedTypeWitness);
  v14 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, AssociatedTypeWitness);
  if ((_DWORD)v7)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, AssociatedTypeWitness);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 24))(v12, v13, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v10 + 84))
    v15 = *(_QWORD *)(v10 + 64);
  else
    v15 = *(_QWORD *)(v10 + 64) + 1;
  memcpy(v12, v13, v15);
LABEL_10:
  if (*(_DWORD *)(v10 + 84))
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = *(_QWORD *)(v10 + 64) + 1;
  *(_QWORD *)(((unint64_t)v12 + v16 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + v16 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1AE83C8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  v13 = (const void *)(((unint64_t)v8 + v11 + 8) & ~v11);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, AssociatedTypeWitness))
  {
    v14 = *(_DWORD *)(v10 + 84);
    v15 = *(_QWORD *)(v10 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v12, v13, AssociatedTypeWitness);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, AssociatedTypeWitness);
    v14 = *(_DWORD *)(v10 + 84);
    v15 = *(_QWORD *)(v10 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  *(_QWORD *)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + v17 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1AE83CA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  uint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 40))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  v13 = (const void *)(((unint64_t)v8 + v11 + 8) & ~v11);
  LODWORD(v7) = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v12, 1, AssociatedTypeWitness);
  v14 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, AssociatedTypeWitness);
  if ((_DWORD)v7)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v12, v13, AssociatedTypeWitness);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 40))(v12, v13, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v10 + 84))
    v15 = *(_QWORD *)(v10 + 64);
  else
    v15 = *(_QWORD *)(v10 + 64) + 1;
  memcpy(v12, v13, v15);
LABEL_10:
  if (*(_DWORD *)(v10 + 84))
    v16 = *(_QWORD *)(v10 + 64);
  else
    v16 = *(_QWORD *)(v10 + 64) + 1;
  *(_QWORD *)(((unint64_t)v12 + v16 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + v16 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1AE83CB8C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t *v21;
  unint64_t v22;
  unsigned int v23;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned int *)(v9 + 84);
  v11 = v10 - 1;
  if (!(_DWORD)v10)
    v11 = 0;
  if (v7 <= v11)
    v12 = v11;
  else
    v12 = v7;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  if ((_DWORD)v10)
    v14 = 7;
  else
    v14 = 8;
  if (!a2)
    return 0;
  v15 = *(_QWORD *)(v6 + 64);
  v16 = *(unsigned __int8 *)(v9 + 80);
  if (v13 < a2)
  {
    if (((((v14 + *(_QWORD *)(v9 + 64) + ((v16 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v17 = 2;
    else
      v17 = a2 - v13 + 1;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    __asm { BR              X16 }
  }
  if ((_DWORD)v7 == v13)
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, v7, v5);
  v21 = (unint64_t *)((a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  if ((v12 & 0x80000000) != 0)
  {
    if (v10 >= 2)
    {
      v23 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(((unint64_t)v21 + v16 + 8) & ~v16, v10, AssociatedTypeWitness);
      if (v23 >= 2)
        return v23 - 1;
      else
        return 0;
    }
    return 0;
  }
  v22 = *v21;
  if (v22 >= 0xFFFFFFFF)
    LODWORD(v22) = -1;
  return (v22 + 1);
}

void sub_1AE83CD64(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  size_t v15;
  unsigned int v16;
  int v17;
  unsigned int v18;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = 0u;
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = v11 - 1;
  if (!v11)
    v12 = 0;
  if (v8 > v12)
    v12 = v8;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = 7;
  if (!v11)
    v14 = 8;
  v15 = ((v14
        + *(_QWORD *)(v10 + 64)
        + ((*(unsigned __int8 *)(v10 + 80) + ((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v13 < a3)
  {
    if ((_DWORD)v15)
      v16 = 2;
    else
      v16 = a3 - v13 + 1;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v9 = v17;
    else
      v9 = 0;
  }
  if (a2 > v13)
  {
    if ((_DWORD)v15)
    {
      v18 = ~v13 + a2;
      bzero(a1, v15);
      *a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

void sub_1AE83CEBC(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  *(_BYTE *)(v8 + v11) = 0;
  if ((_DWORD)v7)
  {
    if ((_DWORD)v10 == v3)
    {
      v12 = v8;
      v13 = v7;
      a1 = v10;
      a2 = v9;
LABEL_4:
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v12, v13, a1, a2);
      return;
    }
    v14 = (_QWORD *)((v8 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (a3 < 0)
    {
      if (a1 >= 2)
      {
        v12 = ((unint64_t)v14 + v5 + 8) & v6;
        v13 = (v7 + 1);
        goto LABEL_4;
      }
    }
    else
    {
      if ((v7 & 0x80000000) != 0)
        v15 = v7 ^ 0x80000000;
      else
        v15 = (v7 - 1);
      *v14 = v15;
    }
  }
}

uint64_t type metadata accessor for PeekableIterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PeekableIterator);
}

uint64_t sub_1AE83CF84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v32 = a2;
  v4 = *(_QWORD *)(a1 + 24);
  v28[1] = *(_QWORD *)(a1 + 16);
  v29 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v31 = sub_1AE92670C();
  v6 = *(_QWORD *)(v31 - 8);
  v7 = MEMORY[0x1E0C80A78](v31);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v28 - v10;
  v30 = *(int *)(a1 + 36);
  v12 = *(_QWORD *)(v2 + v30);
  *(_QWORD *)&v35 = v12;
  v13 = sub_1AE9262B0();
  MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF50], v13);
  sub_1AE926520();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v11, 1, AssociatedTypeWitness) == 1)
  {
    v14 = v11;
    v16 = v31;
    v15 = v32;
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v14, v31);
    v18 = *(int *)(a1 + 44);
    v19 = *(_QWORD *)(v2 + v18);
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v2 + v18) = v21;
      sub_1AE926760();
      v22 = v2 + *(int *)(a1 + 40);
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v22, v9, v16);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v15, v22, v16);
    }
  }
  else
  {
    v29 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v23 = v32;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v32, v11, AssociatedTypeWitness);
    *(_QWORD *)&v33 = v12;
    swift_bridgeObjectRetain();
    sub_1AE92655C();
    v33 = v35;
    v34 = v36;
    v24 = sub_1AE9267F0();
    MEMORY[0x1AF454B70](MEMORY[0x1E0DEBF78], v24);
    v25 = sub_1AE9262C8();
    swift_bridgeObjectRelease();
    v26 = v31;
    *(_QWORD *)(v2 + v30) = v25;
    v27 = v2 + *(int *)(a1 + 40);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v27, v26);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v27, v23, AssociatedTypeWitness);
    sub_1AE5005CC(v27);
    return sub_1AE5005CC(v23);
  }
  return result;
}

uint64_t RecordCursor.peekable.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  type metadata accessor for PeekableRecordCursor(0, *(_QWORD *)(*v4 + *MEMORY[0x1E0D23BC8]), *(_QWORD *)(*v4 + *MEMORY[0x1E0D23BC8] + 8), a4);
  v5 = swift_retain();
  return PeekableRecordCursor.__allocating_init(_:)(v5);
}

uint64_t type metadata accessor for PeekableRecordCursor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PeekableRecordCursor);
}

uint64_t PeekableRecordCursor.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PeekableRecordCursor.init(_:)(a1);
  return v2;
}

_QWORD *PeekableRecordCursor.init(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v3 = v1;
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 80);
  v7 = sub_1AE92670C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - v9;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v3 + *(_QWORD *)(v5 + 104), 1, 1, v6);
  v3[2] = a1;
  v11 = sub_1AE924B94();
  swift_retain();
  MEMORY[0x1AF454B70](MEMORY[0x1E0D23BD0], v11);
  sub_1AE924CB4();
  swift_release();
  if (v2)
  {
    swift_release();
  }
  else
  {
    v12 = (char *)v3 + *(_QWORD *)(*v3 + 104);
    sub_1AE4FB9BC();
    (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v12, v10, v7);
    swift_endAccess();
  }
  return v3;
}

uint64_t PeekableRecordCursor.next()@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  _BYTE v12[24];

  v4 = *v1;
  v5 = sub_1AE92670C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v12[-v7];
  v9 = (char *)v1 + *(_QWORD *)(v4 + 104);
  sub_1AE4FB9BC();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(a1, v9, v5);
  v10 = sub_1AE924B94();
  MEMORY[0x1AF454B70](MEMORY[0x1E0D23BD0], v10);
  sub_1AE924CB4();
  if (v2)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  sub_1AE4FB9BC();
  (*(void (**)(char *, _BYTE *, uint64_t))(v6 + 40))(v9, v8, v5);
  return swift_endAccess();
}

uint64_t PeekableRecordCursor.peek()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
  swift_beginAccess();
  v4 = sub_1AE4FF2AC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PeekableRecordCursor.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  v2 = sub_1AE4FF2AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t PeekableRecordCursor.__deallocating_deinit()
{
  PeekableRecordCursor.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE83D5FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AE92670C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PeekableRecordCursor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PeekableRecordCursor.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for PeopleSubgraphView()
{
  return &type metadata for PeopleSubgraphView;
}

uint64_t sub_1AE83D6B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE83D6E4
                                                            + 4 * asc_1AE961C00[a1]))(0x7463656A627573, 0xE700000000000000);
}

uint64_t sub_1AE83D6E4()
{
  return 0x7461636964657270;
}

uint64_t sub_1AE83D700()
{
  return 0x6E6F6974616C6572;
}

unint64_t sub_1AE83D724()
{
  return 0xD000000000000015;
}

uint64_t sub_1AE83D740()
{
  return 0x7463656A626FLL;
}

uint64_t storeEnumTagSinglePayload for SubgraphColumn(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AE83D7A0 + 4 * byte_1AE961C0A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AE83D7D4 + 4 * byte_1AE961C05[v4]))();
}

uint64_t sub_1AE83D7D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE83D7DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE83D7E4);
  return result;
}

uint64_t sub_1AE83D7F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE83D7F8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AE83D7FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE83D804(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubgraphColumn()
{
  return &type metadata for SubgraphColumn;
}

uint64_t sub_1AE83D820()
{
  unint64_t v0;

  v0 = sub_1AE926B44();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

void sub_1AE83D868()
{
  unsigned __int8 *v0;

  sub_1AE512B88(*v0);
}

void sub_1AE83D870(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FEC0(a1, *v1);
}

uint64_t sub_1AE83D878@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE83D820();
  *a1 = result;
  return result;
}

uint64_t sub_1AE83D8A4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1AE83D6B0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AE83D8CC()
{
  sub_1AE83DAEC();
  return sub_1AE924ED0();
}

uint64_t sub_1AE83D904()
{
  sub_1AE83DB28();
  return sub_1AE924EB8();
}

uint64_t sub_1AE83D93C()
{
  sub_1AE83DA70();
  return sub_1AE9250A4();
}

uint64_t sub_1AE83D974()
{
  sub_1AE83DA70();
  return sub_1AE925098();
}

unint64_t sub_1AE83D9B0()
{
  unint64_t result;

  result = qword_1EEDA4300;
  if (!qword_1EEDA4300)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE961C90, &type metadata for SubgraphColumn);
    atomic_store(result, (unint64_t *)&qword_1EEDA4300);
  }
  return result;
}

unint64_t sub_1AE83D9F0()
{
  unint64_t result;

  result = qword_1EEDA4308;
  if (!qword_1EEDA4308)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE961C40, &type metadata for SubgraphColumn);
    atomic_store(result, (unint64_t *)&qword_1EEDA4308);
  }
  return result;
}

unint64_t sub_1AE83DA30()
{
  unint64_t result;

  result = qword_1EEDA4310;
  if (!qword_1EEDA4310)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE961C68, &type metadata for SubgraphColumn);
    atomic_store(result, (unint64_t *)&qword_1EEDA4310);
  }
  return result;
}

unint64_t sub_1AE83DA70()
{
  unint64_t result;

  result = qword_1EEDA4318;
  if (!qword_1EEDA4318)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE961CB8, &type metadata for SubgraphColumn);
    atomic_store(result, (unint64_t *)&qword_1EEDA4318);
  }
  return result;
}

unint64_t sub_1AE83DAB0()
{
  unint64_t result;

  result = qword_1EEDA4320;
  if (!qword_1EEDA4320)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE961D98, &type metadata for SubgraphColumn);
    atomic_store(result, (unint64_t *)&qword_1EEDA4320);
  }
  return result;
}

unint64_t sub_1AE83DAEC()
{
  unint64_t result;

  result = qword_1EEDA4328;
  if (!qword_1EEDA4328)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE961D20, &type metadata for SubgraphColumn);
    atomic_store(result, (unint64_t *)&qword_1EEDA4328);
  }
  return result;
}

unint64_t sub_1AE83DB28()
{
  unint64_t result;

  result = qword_1EEDA4330;
  if (!qword_1EEDA4330)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE961CF0, &type metadata for SubgraphColumn);
    atomic_store(result, (unint64_t *)&qword_1EEDA4330);
  }
  return result;
}

IntelligencePlatform::PersonalKnowledgeToolResultAttributeSemanticType_optional __swiftcall PersonalKnowledgeToolResultAttributeSemanticType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char *v3;
  char v4;
  IntelligencePlatform::PersonalKnowledgeToolResultAttributeSemanticType_optional result;

  v3 = v1;
  sub_1AE926DA8();
  sub_1AE503B60();
  v4 = 19;
  if (v2 < 0x13)
    v4 = v2;
  *v3 = v4;
  sub_1AE4F6624();
  return result;
}

uint64_t PersonalKnowledgeToolResultAttributeSemanticType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE83DBE0 + 4 * byte_1AE961DC0[*v0]))(0x6E6F73726570, 0xE600000000000000);
}

uint64_t sub_1AE83DBE0()
{
  return 0x49746361746E6F63;
}

uint64_t sub_1AE83DC00()
{
  return 0x746E657665;
}

uint64_t sub_1AE83DC14()
{
  return 1701667182;
}

uint64_t sub_1AE83DC24()
{
  return 0x6D614E7473726966;
}

uint64_t sub_1AE83DD38()
{
  return 0x65746144646E65;
}

void sub_1AE83DD50()
{
  JUMPOUT(0x1AE83DD5CLL);
}

uint64_t sub_1AE83DD60()
{
  return 0x69746E6565726373;
}

uint64_t sub_1AE83DD7C()
{
  return 0x6765746143707061;
}

void sub_1AE83DD9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_1AE5105E0(*a1, *a2);
}

void sub_1AE83DDA8()
{
  unsigned __int8 *v0;

  sub_1AE512E80(*v0);
}

uint64_t sub_1AE83DDB0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1AE5E8454(a1, *v1);
}

void sub_1AE83DDB8(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54F788(a1, *v1);
}

IntelligencePlatform::PersonalKnowledgeToolResultAttributeSemanticType_optional sub_1AE83DDC0(Swift::String *a1)
{
  return PersonalKnowledgeToolResultAttributeSemanticType.init(rawValue:)(*a1);
}

void sub_1AE83DDCC(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = PersonalKnowledgeToolResultAttributeSemanticType.rawValue.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

IntelligencePlatform::PersonalKnowledgeToolResultAttributeDataType_optional __swiftcall PersonalKnowledgeToolResultAttributeDataType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char *v3;
  char v4;
  IntelligencePlatform::PersonalKnowledgeToolResultAttributeDataType_optional result;

  v3 = v1;
  sub_1AE926B44();
  sub_1AE503B60();
  v4 = 5;
  if (v2 < 5)
    v4 = v2;
  *v3 = v4;
  sub_1AE4F6624();
  return result;
}

uint64_t PersonalKnowledgeToolResultAttributeDataType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE83DE60 + 4 * byte_1AE961DD3[*v0]))(0x676E69727473, 0xE600000000000000);
}

uint64_t sub_1AE83DE60()
{
  return 0x72656765746E69;
}

uint64_t sub_1AE83DE78()
{
  return 0x656C62756F64;
}

uint64_t sub_1AE83DE88()
{
  return sub_1AE4FDC24(0x61727564u);
}

uint64_t sub_1AE83DE98()
{
  return 1702125924;
}

void sub_1AE83DEA8(char *a1)
{
  sub_1AE5105EC(*a1);
}

void sub_1AE83DEB4()
{
  unsigned __int8 *v0;

  sub_1AE512E74(*v0);
}

void sub_1AE83DEBC(uint64_t a1)
{
  char *v1;

  sub_1AE5E8460(a1, *v1);
}

void sub_1AE83DEC4(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54F794(a1, *v1);
}

IntelligencePlatform::PersonalKnowledgeToolResultAttributeDataType_optional sub_1AE83DECC(Swift::String *a1)
{
  return PersonalKnowledgeToolResultAttributeDataType.init(rawValue:)(*a1);
}

void sub_1AE83DED8(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = PersonalKnowledgeToolResultAttributeDataType.rawValue.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

void PersonalKnowledgeToolResultAttribute.semanticType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void PersonalKnowledgeToolResultAttribute.dataType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

BOOL static PersonalKnowledgeToolResultAttributeError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void PersonalKnowledgeToolResultAttributeError.hash(into:)()
{
  sub_1AE926ED4();
  sub_1AE4F6664();
}

uint64_t PersonalKnowledgeToolResultAttributeError.hashValue.getter()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  return sub_1AE926F10();
}

unint64_t sub_1AE83DF9C()
{
  unint64_t result;

  result = qword_1EEDA4340;
  if (!qword_1EEDA4340)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonalKnowledgeToolResultAttributeSemanticType, &type metadata for PersonalKnowledgeToolResultAttributeSemanticType);
    atomic_store(result, (unint64_t *)&qword_1EEDA4340);
  }
  return result;
}

unint64_t sub_1AE83DFDC()
{
  unint64_t result;

  result = qword_1EEDA4348;
  if (!qword_1EEDA4348)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonalKnowledgeToolResultAttributeDataType, &type metadata for PersonalKnowledgeToolResultAttributeDataType);
    atomic_store(result, (unint64_t *)&qword_1EEDA4348);
  }
  return result;
}

unint64_t sub_1AE83E01C()
{
  unint64_t result;

  result = qword_1EEDA4350;
  if (!qword_1EEDA4350)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonalKnowledgeToolResultAttributeError, &type metadata for PersonalKnowledgeToolResultAttributeError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4350);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PersonalKnowledgeToolResultAttributeSemanticType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEE)
  {
    if (a2 + 18 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 18) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 19;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v5 = v6 - 19;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonalKnowledgeToolResultAttributeSemanticType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_1AE83E12C + 4 * byte_1AE961DDD[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_1AE83E160 + 4 * byte_1AE961DD8[v4]))();
}

uint64_t sub_1AE83E160(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE83E168(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE83E170);
  return result;
}

uint64_t sub_1AE83E17C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE83E184);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_1AE83E188(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE83E190(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PersonalKnowledgeToolResultAttributeSemanticType()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for PersonalKnowledgeToolResultAttributeDataType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AE83E1F4 + 4 * byte_1AE961DE7[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AE83E228 + 4 * byte_1AE961DE2[v4]))();
}

uint64_t sub_1AE83E228(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE83E230(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE83E238);
  return result;
}

uint64_t sub_1AE83E244(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE83E24CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AE83E250(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE83E258(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PersonalKnowledgeToolResultAttributeDataType()
{
  sub_1AE4F67D4();
}

uint64_t getEnumTagSinglePayload for PersonalKnowledgeToolResultAttribute(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 65284 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65284 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 65285;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonalKnowledgeToolResultAttribute(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65284 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65284 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AE83E348 + 4 * byte_1AE961DF1[v4]))();
  *a1 = a2 - 252;
  return ((uint64_t (*)(void))((char *)sub_1AE83E37C + 4 * byte_1AE961DEC[v4]))();
}

uint64_t sub_1AE83E37C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AE83E384(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1AE83E38CLL);
  return result;
}

uint64_t sub_1AE83E398(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1AE83E3A0);
  *(_BYTE *)(result + 1) = a2 + 4;
  return result;
}

uint64_t sub_1AE83E3A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AE83E3AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

void type metadata accessor for PersonalKnowledgeToolResultAttribute()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for PersonalKnowledgeToolResultAttributeError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AE83E410 + 4 * byte_1AE961DFB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AE83E444 + 4 * byte_1AE961DF6[v4]))();
}

uint64_t sub_1AE83E444(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE83E44C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE83E454);
  return result;
}

uint64_t sub_1AE83E460(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE83E468);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AE83E46C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE83E474(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for PersonalKnowledgeToolResultAttributeError()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE83E48C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v9[3];
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1AE83FE9C();
    v2 = v10;
    v4 = (unint64_t *)(a1 + 136);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1AE508924();
      sub_1AE54C814(v5, v6);
      sub_1AE501548((uint64_t *)&unk_1EED9E290);
      sub_1AE509C4C();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE83FEC4();
        v2 = v10;
      }
      v7 = *(_QWORD *)(v2 + 16);
      if (v7 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_1AE83FEC4();
        v2 = v10;
      }
      *(_QWORD *)(v2 + 16) = v7 + 1;
      sub_1AE7F9FCC(v9, (_OWORD *)(v2 + 48 * v7 + 32));
      v4 += 14;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1AE83E5EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  __int128 v7[3];
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1AE83FE9C();
    v2 = v8;
    v4 = a1 + 72;
    do
    {
      sub_1AE54C814(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
      sub_1AE508924();
      sub_1AE501548((uint64_t *)&unk_1EED9E290);
      sub_1AE509C4C();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE83FEC4();
        v2 = v8;
      }
      v5 = *(_QWORD *)(v2 + 16);
      if (v5 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_1AE83FEC4();
        v2 = v8;
      }
      *(_QWORD *)(v2 + 16) = v5 + 1;
      sub_1AE7F9FCC(v7, (_OWORD *)(v2 + 48 * v5 + 32));
      v4 += 96;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1AE83E73C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    sub_1AE5225F0();
    v2 = v10;
    v4 = a1 + 48;
    do
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1AE501548(&qword_1EED9A5F8);
      sub_1AE501548(&qword_1EED9E278);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE5225F0();
        v2 = v10;
      }
      v5 = *(_QWORD *)(v2 + 16);
      if (v5 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_1AE5225F0();
        v2 = v10;
      }
      *(_QWORD *)(v2 + 16) = v5 + 1;
      v6 = v2 + 24 * v5;
      *(_OWORD *)(v6 + 32) = v8;
      *(_QWORD *)(v6 + 48) = v9;
      v4 += 24;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t PersonalKnowledgeToolExecution.init(knosisServer:ecrServer:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  return sub_1AE50AF58(a2, (uint64_t)(a3 + 1));
}

uint64_t PersonalKnowledgeToolExecution.execute(kgqString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[108] = v4;
  v5[107] = a4;
  v5[106] = a3;
  v5[105] = a2;
  v5[104] = a1;
  return swift_task_switch();
}

uint64_t sub_1AE83E8DC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  _QWORD v31[3];
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  v1 = v0 + 368;
  *(_QWORD *)(v0 + 816) = MEMORY[0x1E0DEE9D8];
  v2 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
  v3 = sub_1AE83AD24(0xD000000000000014, 0x80000001AE988630, 0);
  v6 = v3;
  if (v3)
  {
    v7 = (void *)sub_1AE925E18();
    v8 = sub_1AE925F20();
    v9 = (void *)sub_1AE925E18();
    v10 = objc_msgSend(v6, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v7, 0, 0, v8, v9);

    v1 = v0 + 368;
    v5 = sub_1AE925E3C();
    v4 = v11;

  }
  else
  {
    v4 = *(_QWORD *)(v0 + 856);
    swift_bridgeObjectRetain();
    v5 = *(_QWORD *)(v0 + 848);
  }
  *(_QWORD *)(v0 + 600) = v5;
  *(_QWORD *)(v0 + 608) = v4;
  *(_QWORD *)(v0 + 584) = 0x5941444F54;
  *(_QWORD *)(v0 + 592) = 0xE500000000000000;
  *(_QWORD *)(v0 + 568) = 5721934;
  *(_QWORD *)(v0 + 576) = 0xE300000000000000;
  *(_QWORD *)(v0 + 872) = sub_1AE4F7630();
  sub_1AE83FEAC();
  v12 = sub_1AE9267B4();
  v14 = v13;
  swift_bridgeObjectRelease();
  sub_1AE803894(v12, v14, v1);
  v15 = *(_QWORD *)(v0 + 376);
  v16 = *(_QWORD *)(v0 + 400);
  v17 = *(_QWORD *)(v0 + 424);
  v18 = *(_BYTE *)(v0 + 432);
  v31[1] = *(_QWORD *)(v0 + 368);
  v31[2] = v15;
  v32 = *(_OWORD *)(v0 + 384);
  v33 = v16;
  v34 = *(_OWORD *)(v0 + 408);
  v35 = v17;
  v36 = v18;
  v37 = MEMORY[0x1E0DEE9D8];
  v38 = 0;
  v39 = 0;
  v40 = 0;
  v41 = -4;
  v42 = 0;
  sub_1AE83ADF8(v1);
  sub_1AE836D04((uint64_t)v31);
  v19 = v1;
  v20 = *(void ***)(v0 + 864);
  v21 = v38;
  v23 = v39;
  v22 = v40;
  v24 = v41;
  swift_bridgeObjectRelease();
  sub_1AE4F76D8();
  swift_bridgeObjectRelease();
  sub_1AE4F67AC();
  sub_1AE805E40(v21, v23, v22, v24);
  sub_1AE83AE40(v19);
  v25 = v31[0];
  v26 = *v20;
  sub_1AE57C238((uint64_t)(v20 + 1), v0 + 448);
  *(_QWORD *)(v0 + 440) = v26;
  v27 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 488) = v25;
  *(_QWORD *)(v0 + 496) = v27;
  v28 = v26;
  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 880) = v29;
  *v29 = v0;
  v29[1] = sub_1AE83ED58;
  return sub_1AE78D6F4();
}

uint64_t sub_1AE83ED58(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 888) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 896) = a1;
  return swift_task_switch();
}

uint64_t sub_1AE83EDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int16 v70;
  _BYTE *v71;
  __int16 *v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  os_log_type_t v120;
  uint64_t v121;
  _BYTE v122[168];
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __int16 v130;
  _QWORD v131[23];

  v1 = sub_1AE83E73C(*(_QWORD *)(v0 + 896));
  sub_1AE4F9038();
  sub_1AE4FCC30();
  *(_QWORD *)(v0 + 816) = v1;
  if (qword_1EED99850 != -1)
    swift_once();
  v2 = (uint64_t *)(v0 + 816);
  v3 = sub_1AE4F6854();
  sub_1AE4FB608(v3, (uint64_t)qword_1EED9F830);
  v4 = sub_1AE925B54();
  v5 = sub_1AE9265E0();
  v6 = os_log_type_enabled(v4, v5);
  v7 = MEMORY[0x1E0DEE9B8];
  if (v6)
  {
    v8 = (uint8_t *)sub_1AE4F66A0();
    v131[0] = sub_1AE4F66A0();
    *(_DWORD *)v8 = 136315138;
    sub_1AE4F9094();
    v9 = *(_QWORD *)(v0 + 816);
    swift_bridgeObjectRetain();
    v10 = sub_1AE501548(&qword_1EED9E278);
    MEMORY[0x1AF453400](v9, v10);
    v11 = swift_bridgeObjectRelease();
    sub_1AE4F6E10(v11, v12, v13, v14, v15, v16, v17, v18, v75, v78, v81, v84, v87, v91, v95, v99, v103, v107, v111,
      v116);
    *(_QWORD *)(v0 + 824) = v19;
    sub_1AE92676C();
    sub_1AE4F76D8();
    sub_1AE508348(&dword_1AE4F2000, v4, v5, "kgq to vop: %s", v8);
    swift_arrayDestroy();
    sub_1AE4F9064();
  }

  sub_1AE83FB0C((id *)(v0 + 440));
  sub_1AE4F9094();
  if (*(_QWORD *)(*v2 + 16))
  {
    v100 = v0 + 648;
    v104 = v0 + 632;
    v92 = v0 + 680;
    v96 = v0 + 664;
    v117 = v0 + 808;
    v112 = v0 + 784;
    v20 = *v2 + 48;
    v88 = *v2;
    swift_bridgeObjectRetain();
    v108 = v7 + 8;
    v121 = *(_QWORD *)(v20 - 16);
    v131[0] = *(_QWORD *)(v20 - 8);
    swift_retain();
    swift_bridgeObjectRetain();
    VOPBuilder.toString.getter();
    v22 = v21;
    v24 = v23;
    sub_1AE4F67AC();
    v123 = 0;
    v124 = 0;
    v125 = v22;
    v126 = v24;
    v128 = 0;
    v129 = 0;
    v127 = 0;
    v130 = 257;
    KnosisServer.executeKGQ(request:)();
    sub_1AE4F6824();
    sub_1AE4F6718();
    sub_1AE4FD464((void *)(v0 + 200), v131);
    sub_1AE4FD464(v122, v131);
    sub_1AE4FC04C();
    sub_1AE4FC04C();
    v25 = sub_1AE925B54();
    v26 = sub_1AE9265E0();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = sub_1AE4F66A0();
      v131[0] = sub_1AE4F66A0();
      *(_DWORD *)v27 = 136315394;
      *(_QWORD *)(v0 + 552) = 0;
      *(_QWORD *)(v0 + 560) = 0xE000000000000000;
      sub_1AE50924C();
      sub_1AE925D94();
      *(_QWORD *)(v0 + 768) = v121;
      sub_1AE926D18();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE508038(*(_QWORD *)(v0 + 552), v28, v29, v30, v31, v32, v33, v34, v75, v78, v81, v84, v88, v92, v96, v100, v104, v108, v112,
        v117);
      *(_QWORD *)(v0 + 752) = v35;
      sub_1AE92676C();
      sub_1AE4F9038();
      *(_WORD *)(v27 + 12) = 2080;
      sub_1AE4FC04C();
      v36 = sub_1AE7AEEE0();
      v38 = v37;
      sub_1AE50112C();
      sub_1AE520ED4(v36, v38, (uint64_t)v131, v39, v40, v41, v42, v43, v76, v79, v82, v85, v89, v93, v97, v101, v105, v109, v113,
        v118);
      *(_QWORD *)(v0 + 744) = v44;
      sub_1AE92676C();
      swift_bridgeObjectRelease();
      sub_1AE50112C();
      sub_1AE50112C();
      _os_log_impl(&dword_1AE4F2000, v25, v26, "execution result for %s: %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      sub_1AE4F9064();
    }
    sub_1AE50112C();
    sub_1AE50112C();

    sub_1AE4FC04C();
    sub_1AE4FC04C();
    v45 = sub_1AE925B54();
    v46 = sub_1AE9265E0();
    if (os_log_type_enabled(v45, v46))
    {
      v120 = v46;
      v47 = sub_1AE4F66A0();
      v131[0] = sub_1AE4F66A0();
      *(_DWORD *)v47 = 136315394;
      *(_QWORD *)(v0 + 616) = 0;
      *(_QWORD *)(v0 + 624) = 0xE000000000000000;
      sub_1AE50924C();
      sub_1AE925D94();
      *(_QWORD *)(v0 + 808) = v121;
      sub_1AE926D18();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE508038(*(_QWORD *)(v0 + 616), v48, v49, v50, v51, v52, v53, v54, v75, v78, v81, v84, v88, v92, v96, v100, v104, v108, v112,
        v117);
      *(_QWORD *)(v0 + 800) = v55;
      sub_1AE92676C();
      v56 = sub_1AE4F9038();
      *(_WORD *)(v47 + 12) = 2080;
      v64 = *(_QWORD *)(v0 + 352);
      if (v64)
      {
        v65 = *(_QWORD *)(v0 + 360);
        v66 = *(_QWORD *)(v0 + 344);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1AE7AF004(v66, v64, v65);
        v56 = sub_1AE53F134(v66, v64);
      }
      sub_1AE4F6E10(v56, v57, v58, v59, v60, v61, v62, v63, v77, v80, v83, v86, v90, v94, v98, v102, v106, v110, v114,
        v119);
      *v115 = v67;
      sub_1AE92676C();
      sub_1AE4F76D8();
      sub_1AE50112C();
      sub_1AE50112C();
      _os_log_impl(&dword_1AE4F2000, v45, v120, "execution debug for %s: %s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      sub_1AE4F9064();
    }
    sub_1AE50112C();
    sub_1AE50112C();

    __asm { BR              X9 }
  }
  v68 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (v68)
  {
    memcpy((void *)(v0 + 16), (const void *)(MEMORY[0x1E0DEE9D8] + 184 * v68 - 152), 0xB8uLL);
    sub_1AE83FB40((_QWORD *)(v0 + 16));
    sub_1AE4F6728();
    v69 = *(_QWORD *)(v0 + 192);
    sub_1AE83FB40((_QWORD *)(v0 + 16));
    sub_1AE56E58C((_QWORD *)(v0 + 24));
    if (*(_QWORD *)(v69 + 16))
    {
      v70 = *(_WORD *)(v69 + 32);
      sub_1AE4F6824();
    }
    else
    {
      sub_1AE4F6824();
      v70 = 1280;
    }
    v73 = *(__int16 **)(v0 + 840);
    v74 = *(void **)(v0 + 832);
    sub_1AE4FCC30();
    sub_1AE4FD464(v74, (const void *)(v0 + 24));
    *v73 = v70;
    return sub_1AE4FF2B8(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    sub_1AE4F6728();
    sub_1AE83FC10();
    swift_allocError();
    *v71 = 1;
    swift_willThrow();
    sub_1AE4FCC30();
    return sub_1AE4FF2B8(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_1AE83F890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;

  sub_1AE83FB0C((id *)(v0 + 440));
  if (qword_1EED99850 != -1)
    swift_once();
  v2 = sub_1AE4F6854();
  sub_1AE4FB608(v2, (uint64_t)qword_1EED9F830);
  sub_1AE4FCEFC();
  sub_1AE4FCEFC();
  v3 = sub_1AE925B54();
  v4 = sub_1AE9265EC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)sub_1AE4F66A0();
    v6 = (_QWORD *)sub_1AE4F66A0();
    *(_DWORD *)v5 = 138412290;
    sub_1AE4FCEFC();
    v7 = _swift_stdlib_bridgeErrorToNSError();
    sub_1AE4FD5AC(v7);
    *v6 = v1;
    sub_1AE4F916C();
    sub_1AE4F916C();
    sub_1AE508348(&dword_1AE4F2000, v3, v4, "kgq v2 parsing error: %@", v5);
    sub_1AE501548(&qword_1ED319410);
    sub_1AE50A974();
    sub_1AE4F9064();
  }
  sub_1AE4F916C();
  sub_1AE4F916C();

  swift_willThrow();
  sub_1AE4FCC30();
  return sub_1AE4FF2B8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE83F9E0(uint64_t a1)
{
  if (!*(_QWORD *)(a1 + 16))
    return 0;
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE568D9C();
  sub_1AE925DC4();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  return 10075;
}

BOOL static PersonalKnowledgeToolError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PersonalKnowledgeToolError.hash(into:)()
{
  return sub_1AE926ED4();
}

uint64_t PersonalKnowledgeToolError.hashValue.getter()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  return sub_1AE926F10();
}

id *sub_1AE83FB0C(id *a1)
{
  destroy for KGQConversion(a1);
  return a1;
}

_QWORD *sub_1AE83FB40(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[12];
  v3 = a1[13];
  v5 = a1[20];
  v6 = a1[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE7AA1A0(v2, v3);
  sub_1AE53F164(v6, v5);
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1AE83FC10()
{
  unint64_t result;

  result = qword_1EEDA4360;
  if (!qword_1EEDA4360)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonalKnowledgeToolError, &type metadata for PersonalKnowledgeToolError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4360);
  }
  return result;
}

unint64_t sub_1AE83FC50()
{
  unint64_t result;

  result = qword_1EEDA4368;
  if (!qword_1EEDA4368)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonalKnowledgeToolError, &type metadata for PersonalKnowledgeToolError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4368);
  }
  return result;
}

uint64_t destroy for PersonalKnowledgeToolExecution(id *a1)
{
  uint64_t v1;

  v1 = (uint64_t)(a1 + 1);

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v1);
}

uint64_t initializeWithCopy for PersonalKnowledgeToolExecution(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a1 + 8;
  v5 = a2 + 8;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for PersonalKnowledgeToolExecution(void **a1, void **a2)
{
  void *v3;
  uint64_t *v4;
  void *v5;
  uint64_t *v6;
  id v7;

  v4 = (uint64_t *)(a2 + 1);
  v3 = *a2;
  v5 = *a1;
  *a1 = *a2;
  v6 = (uint64_t *)(a1 + 1);
  v7 = v3;

  sub_1AE65F6C8(v6, v4);
  return a1;
}

uint64_t assignWithTake for PersonalKnowledgeToolExecution(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for PersonalKnowledgeToolExecution()
{
  return &type metadata for PersonalKnowledgeToolExecution;
}

uint64_t storeEnumTagSinglePayload for PersonalKnowledgeToolError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE83FE1C + 4 * byte_1AE962179[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE83FE50 + 4 * byte_1AE962174[v4]))();
}

uint64_t sub_1AE83FE50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE83FE58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE83FE60);
  return result;
}

uint64_t sub_1AE83FE6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE83FE74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE83FE78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE83FE80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonalKnowledgeToolError()
{
  return &type metadata for PersonalKnowledgeToolError;
}

void sub_1AE83FE9C()
{
  sub_1AE522394();
}

void sub_1AE83FEC4()
{
  sub_1AE522394();
}

void sub_1AE83FECC()
{
  sub_1AE51BCF4();
}

uint64_t PersonEntityCard.subject.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t PersonEntityCard.subject.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*PersonEntityCard.subject.modify())(_QWORD)
{
  return nullsub_1;
}

void PersonEntityCard.summaryInfos.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void PersonEntityCard.summaryInfos.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v0;
  sub_1AE4F6624();
}

uint64_t (*PersonEntityCard.summaryInfos.modify())(_QWORD)
{
  return nullsub_1;
}

void PersonEntityCard.summaryAllTime.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void PersonEntityCard.summaryAllTime.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v0;
  sub_1AE4F6624();
}

uint64_t (*PersonEntityCard.summaryAllTime.modify())(_QWORD)
{
  return nullsub_1;
}

void PersonEntityCard.summaryAllTimeWithLocations.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void PersonEntityCard.summaryAllTimeWithLocations.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v0;
  sub_1AE4F6624();
}

uint64_t (*PersonEntityCard.summaryAllTimeWithLocations.modify())(_QWORD)
{
  return nullsub_1;
}

void PersonEntityCard.name.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void PersonEntityCard.name.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v0;
  sub_1AE4F6624();
}

uint64_t (*PersonEntityCard.name.modify())(_QWORD)
{
  return nullsub_1;
}

void PersonEntityCard.currentUser.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void PersonEntityCard.currentUser.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = v2;
  *(_QWORD *)(v1 + 80) = v0;
  sub_1AE4F6624();
}

uint64_t (*PersonEntityCard.currentUser.modify())(_QWORD)
{
  return nullsub_1;
}

void PersonEntityCard.relationship.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void PersonEntityCard.relationship.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 88) = v2;
  *(_QWORD *)(v1 + 96) = v0;
  sub_1AE4F6624();
}

uint64_t (*PersonEntityCard.relationship.modify())(_QWORD)
{
  return nullsub_1;
}

void PersonEntityCard.summaryAllTimeActivities.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void PersonEntityCard.summaryAllTimeActivities.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 104) = v2;
  *(_QWORD *)(v1 + 112) = v0;
  sub_1AE4F6624();
}

uint64_t (*PersonEntityCard.summaryAllTimeActivities.modify())(_QWORD)
{
  return nullsub_1;
}

void PersonEntityCard.summaryAllTimeSpantext.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void PersonEntityCard.summaryAllTimeSpantext.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 120) = v2;
  *(_QWORD *)(v1 + 128) = v0;
  sub_1AE4F6624();
}

uint64_t (*PersonEntityCard.summaryAllTimeSpantext.modify())(_QWORD)
{
  return nullsub_1;
}

void PersonEntityCard.summaryAllTimeWithLocationsActivities.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void PersonEntityCard.summaryAllTimeWithLocationsActivities.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 136) = v2;
  *(_QWORD *)(v1 + 144) = v0;
  sub_1AE4F6624();
}

uint64_t (*PersonEntityCard.summaryAllTimeWithLocationsActivities.modify())(_QWORD)
{
  return nullsub_1;
}

void PersonEntityCard.summaryAllTimeWithLocationsSpantext.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void PersonEntityCard.summaryAllTimeWithLocationsSpantext.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 152) = v2;
  *(_QWORD *)(v1 + 160) = v0;
  sub_1AE4F6624();
}

uint64_t (*PersonEntityCard.summaryAllTimeWithLocationsSpantext.modify())(_QWORD)
{
  return nullsub_1;
}

void PersonEntityCard.summaryAllTimeWithLocationsLocations.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void PersonEntityCard.summaryAllTimeWithLocationsLocations.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 168) = v2;
  *(_QWORD *)(v1 + 176) = v0;
  sub_1AE4F6624();
}

uint64_t (*PersonEntityCard.summaryAllTimeWithLocationsLocations.modify())(_QWORD)
{
  return nullsub_1;
}

void PersonEntityCard.summaryAllTimeWithLocationsLocNames.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void PersonEntityCard.summaryAllTimeWithLocationsLocNames.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 184) = v2;
  *(_QWORD *)(v1 + 192) = v0;
  sub_1AE4F6624();
}

uint64_t (*PersonEntityCard.summaryAllTimeWithLocationsLocNames.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1AE840318(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v11;

  v2 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x497972616D6D7573 && a2 == 0xEC000000736F666ELL;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x417972616D6D7573 && a2 == 0xEE00656D69546C6CLL;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001AE988900 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 1701667182 && a2 == 0xE400000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x55746E6572727563 && a2 == 0xEB00000000726573;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = a1 == 0x6E6F6974616C6572 && a2 == 0xEC00000070696873;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000018 && a2 == 0x80000001AE987A20 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x80000001AE987A40 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD000000000000025 && a2 == 0x80000001AE988920 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000023 && a2 == 0x80000001AE988950 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else if (a1 == 0xD000000000000024 && a2 == 0x80000001AE988980 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 11;
            }
            else if (a1 == 0xD000000000000023 && a2 == 0x80000001AE9889B0)
            {
              swift_bridgeObjectRelease();
              return 12;
            }
            else
            {
              v11 = sub_1AE926D60();
              swift_bridgeObjectRelease();
              if ((v11 & 1) != 0)
                return 12;
              else
                return 13;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE840854(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE840888 + 4 * byte_1AE962280[a1]))(0x7463656A627573, 0xE700000000000000);
}

uint64_t sub_1AE840888()
{
  return 0x497972616D6D7573;
}

uint64_t sub_1AE8408A8()
{
  return 0x417972616D6D7573;
}

unint64_t sub_1AE8408CC()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1AE8409C4()
{
  unsigned __int8 *v0;

  return sub_1AE840854(*v0);
}

uint64_t sub_1AE8409CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE840318(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8409F0()
{
  sub_1AE840D70();
  return sub_1AE926F94();
}

uint64_t sub_1AE840A18()
{
  sub_1AE840D70();
  return sub_1AE926FA0();
}

void PersonEntityCard.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  _QWORD v20[23];
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v3 = sub_1AE501548(&qword_1EEDA4370);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = v1[1];
  v20[21] = v1[2];
  v20[22] = v6;
  v7 = v1[3];
  v20[19] = v1[4];
  v20[20] = v7;
  v8 = v1[5];
  v20[17] = v1[6];
  v20[18] = v8;
  v9 = v1[7];
  v20[15] = v1[8];
  v20[16] = v9;
  v10 = v1[9];
  v20[13] = v1[10];
  v20[14] = v10;
  v11 = v1[11];
  v20[11] = v1[12];
  v20[12] = v11;
  v12 = v1[14];
  v20[9] = v1[13];
  v20[10] = v12;
  v13 = v1[16];
  v20[7] = v1[15];
  v20[8] = v13;
  v14 = v1[18];
  v20[5] = v1[17];
  v20[6] = v14;
  v20[3] = v1[19];
  v20[4] = v1[20];
  v20[1] = v1[21];
  v20[2] = v1[22];
  v15 = v1[24];
  v16 = a1[3];
  v17 = a1;
  v18 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9858(v17, v16);
  sub_1AE840D70();
  sub_1AE926F4C();
  v34 = 0;
  v19 = v21;
  sub_1AE926CDC();
  if (!v19)
  {
    v21 = v15;
    v33 = 1;
    sub_1AE5006B4();
    v32 = 2;
    sub_1AE5006B4();
    v31 = 3;
    sub_1AE5006B4();
    v30 = 4;
    sub_1AE5006B4();
    v29 = 5;
    sub_1AE5006B4();
    v28 = 6;
    sub_1AE5006B4();
    v27 = 7;
    sub_1AE5006B4();
    v26 = 8;
    sub_1AE5006B4();
    v25 = 9;
    sub_1AE5006B4();
    v24 = 10;
    sub_1AE50A798();
    v23 = 11;
    sub_1AE50A798();
    v22 = 12;
    sub_1AE50A798();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v18, v3);
  sub_1AE4F667C();
}

unint64_t sub_1AE840D70()
{
  unint64_t result;

  result = qword_1EEDA4378;
  if (!qword_1EEDA4378)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962594, &type metadata for PersonEntityCard.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4378);
  }
  return result;
}

void PersonEntityCard.init(from:)(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[25];
  _QWORD v48[26];
  char v49;

  v43 = sub_1AE501548(&qword_1EEDA4380);
  MEMORY[0x1E0C80A78](v43);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE840D70();
  sub_1AE926F34();
  v44 = (uint64_t)a1;
  if (v2)
  {
    sub_1AE4FD5C8();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE737DE0();
    sub_1AE509FE0();
    sub_1AE4F6728();
    swift_bridgeObjectRelease();
    sub_1AE4F6710();
    swift_bridgeObjectRelease();
    sub_1AE4F76D8();
    sub_1AE4F9038();
    swift_bridgeObjectRelease();
    sub_1AE4F66E8();
  }
  else
  {
    v42 = a2;
    v5 = sub_1AE926C04();
    v6 = sub_1AE501134();
    v8 = v7;
    v41 = v6;
    sub_1AE842884(2);
    v40 = sub_1AE501134();
    v46 = v9;
    swift_bridgeObjectRetain();
    v38 = sub_1AE501134();
    v39 = v10;
    sub_1AE842884(4);
    v36 = sub_1AE501134();
    v37 = v11;
    sub_1AE842884(5);
    v34 = sub_1AE501134();
    v35 = v12;
    sub_1AE842884(6);
    v32 = sub_1AE501134();
    v33 = v13;
    sub_1AE842884(7);
    v31 = sub_1AE501134();
    v15 = v14;
    swift_bridgeObjectRetain();
    v16 = sub_1AE501134();
    v30 = v17;
    sub_1AE842884(9);
    v18 = sub_1AE509258();
    v29 = v19;
    v20 = v18;
    swift_bridgeObjectRetain();
    v27 = sub_1AE509258();
    v28 = v21;
    LOBYTE(v48[0]) = 11;
    swift_bridgeObjectRetain();
    v26 = sub_1AE509258();
    v45 = v22;
    v49 = 12;
    swift_bridgeObjectRetain();
    v25 = sub_1AE509258();
    v24 = v23;
    sub_1AE4FCC38();
    sub_1AE4F66CC();
    swift_bridgeObjectRelease();
    v47[0] = v5;
    v47[1] = v41;
    v47[2] = v8;
    v47[3] = v40;
    v47[4] = v46;
    v47[5] = v38;
    v47[6] = v39;
    v47[7] = v36;
    v47[8] = v37;
    v47[9] = v34;
    v47[10] = v35;
    v47[11] = v32;
    v47[12] = v33;
    v47[13] = v31;
    v47[14] = v15;
    v47[15] = v16;
    v47[16] = v30;
    v47[17] = v20;
    v47[18] = v29;
    v47[19] = v27;
    v47[20] = v28;
    v47[21] = v26;
    v47[22] = v45;
    v47[23] = v25;
    v47[24] = v24;
    sub_1AE84144C((uint64_t)v47);
    sub_1AE4F9038();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE4F6728();
    sub_1AE4F76D8();
    sub_1AE505920();
    sub_1AE4F6728();
    swift_bridgeObjectRelease();
    sub_1AE4F9038();
    sub_1AE4F76D8();
    sub_1AE4F6710();
    sub_1AE4F66E8();
    memcpy(v42, v47, 0xC8uLL);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v44);
    v48[0] = v5;
    v48[1] = v41;
    v48[2] = v8;
    v48[3] = v40;
    v48[4] = v46;
    v48[5] = v38;
    v48[6] = v39;
    v48[7] = v36;
    v48[8] = v37;
    v48[9] = v34;
    v48[10] = v35;
    v48[11] = v32;
    v48[12] = v39;
    v48[13] = v31;
    v48[14] = v15;
    v48[15] = v16;
    v48[16] = v30;
    v48[17] = v20;
    v48[18] = v29;
    v48[19] = v27;
    v48[20] = v28;
    v48[21] = v26;
    v48[22] = v45;
    v48[23] = v25;
    v48[24] = v24;
    sub_1AE841524((uint64_t)v48);
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE84144C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE841524(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1AE8415FC(_QWORD *a1@<X0>, void *a2@<X8>)
{
  PersonEntityCard.init(from:)(a1, a2);
}

void sub_1AE841610(_QWORD *a1)
{
  PersonEntityCard.encode(to:)(a1);
}

uint64_t sub_1AE841624()
{
  sub_1AE8427C4();
  return sub_1AE924DA4();
}

uint64_t sub_1AE84167C()
{
  sub_1AE842788();
  return sub_1AE924F90();
}

uint64_t sub_1AE8416CC()
{
  sub_1AE842788();
  return sub_1AE924F84();
}

uint64_t sub_1AE841710()
{
  sub_1AE842788();
  return sub_1AE924F78();
}

uint64_t sub_1AE841754()
{
  sub_1AE84274C();
  return sub_1AE924D44();
}

uint64_t ViewService.personEntityCardsView.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(id, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v16;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  v5 = (void *)sub_1AE925E18();
  v17[0] = 0;
  v6 = objc_msgSend(v4, sel_requestAssertionForViewName_error_, v5, v17);

  v7 = v17[0];
  if (v6)
  {
    v8 = *(_QWORD **)(v1 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    v9 = v8[5];
    v10 = v8[6];
    sub_1AE4F9858(v8 + 2, v9);
    v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 8);
    v12 = v7;
    v13 = v11(v6, v9, v10);
    if (v2)
      return swift_unknownObjectRelease();
    else
      return sub_1AE84190C(v6, v13, v14, a1);
  }
  else
  {
    v16 = v17[0];
    sub_1AE9246B4();

    return swift_willThrow();
  }
}

uint64_t sub_1AE84190C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;

  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v8 = objc_msgSend(a1, sel_viewArtifactTableName);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1AE925E3C();
    v12 = v11;
    swift_unknownObjectRelease();

  }
  else
  {
    swift_unknownObjectRelease();
    v12 = 0x80000001AE988A00;
    v10 = 0xD000000000000016;
  }
  result = swift_unknownObjectRelease();
  *a4 = a1;
  a4[1] = v10;
  a4[2] = v12;
  a4[3] = a2;
  a4[4] = a3;
  return result;
}

uint64_t ViewService.PersonEntityCardsView.getEntityCard(personId:)()
{
  sub_1AE507C48();
  return sub_1AE924CCC();
}

void *sub_1AE841A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE v23[200];
  _QWORD v24[25];
  _QWORD v25[28];

  v19 = a1;
  v18 = a3;
  v4 = sub_1AE501548(&qword_1EEDA43D8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AE501548(&qword_1EEDA43E0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1AE925368();
  v24[0] = a2;
  LOBYTE(v24[1]) = 0;
  sub_1AE925308();
  sub_1AE5BA550(&qword_1EEDA43E8, &qword_1EEDA43D8, MEMORY[0x1E0D24290]);
  sub_1AE842800();
  v12 = v20;
  sub_1AE924B34();
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1AE84283C((uint64_t)v25, (uint64_t)v23);
  sub_1AE84283C((uint64_t)v23, (uint64_t)v24);
  if (sub_1AE81B198((uint64_t)v24) == 1)
  {
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    v21 = 0xD00000000000001FLL;
    v22 = 0x80000001AE9889E0;
    v25[27] = a2;
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    v13 = v21;
    v14 = v22;
    sub_1AE5CB92C();
    swift_allocError();
    *(_QWORD *)v15 = v13;
    *(_QWORD *)(v15 + 8) = v14;
    *(_BYTE *)(v15 + 16) = 1;
    swift_willThrow();
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return memcpy(v18, v24, 0xC8uLL);
}

void *sub_1AE841CD8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;

  return sub_1AE841A50(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t ViewService.PersonEntityCardsView.getEntityCards(personIds:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1AE507C48();
  sub_1AE501548(&qword_1EEDA4388);
  result = sub_1AE924CCC();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1AE841D84@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[5];
  uint64_t v18[7];

  v14 = a2;
  v3 = sub_1AE501548(&qword_1EEDA43D8);
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1AE501548(&qword_1EEDA43E0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1AE925368();
  v18[6] = a1;
  v17[3] = sub_1AE925374();
  v17[4] = MEMORY[0x1E0D24668];
  sub_1AE52F6A8(v17);
  sub_1AE925380();
  v18[3] = sub_1AE924C9C();
  v18[4] = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8(v18);
  sub_1AE501548(&qword_1EEDA3FA8);
  sub_1AE5BA550(&qword_1EEDA3FB0, &qword_1EEDA3FA8, MEMORY[0x1E0DEB3D0]);
  sub_1AE926058();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v17);
  sub_1AE925320();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v18);
  sub_1AE5BA550(&qword_1EEDA43E8, &qword_1EEDA43D8, MEMORY[0x1E0D24290]);
  sub_1AE842800();
  v10 = v16;
  v11 = sub_1AE924B28();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v10)
    *v14 = v11;
  return result;
}

uint64_t sub_1AE841FC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1AE841D84(*(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1AE841FDC()
{
  unint64_t result;

  result = qword_1EEDA4390;
  if (!qword_1EEDA4390)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonEntityCard, &type metadata for PersonEntityCard);
    atomic_store(result, (unint64_t *)&qword_1EEDA4390);
  }
  return result;
}

unint64_t sub_1AE84201C()
{
  unint64_t result;

  result = qword_1EEDA4398;
  if (!qword_1EEDA4398)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonEntityCard, &type metadata for PersonEntityCard);
    atomic_store(result, (unint64_t *)&qword_1EEDA4398);
  }
  return result;
}

unint64_t sub_1AE84205C()
{
  unint64_t result;

  result = qword_1EEDA43A0;
  if (!qword_1EEDA43A0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonEntityCard, &type metadata for PersonEntityCard);
    atomic_store(result, (unint64_t *)&qword_1EEDA43A0);
  }
  return result;
}

uint64_t destroy for PersonEntityCard()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PersonEntityCard(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  v11 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v11;
  v12 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v12;
  v13 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v13;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PersonEntityCard(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  a1[22] = a2[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[23] = a2[23];
  a1[24] = a2[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for PersonEntityCard(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC8uLL);
}

uint64_t assignWithTake for PersonEntityCard(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonEntityCard(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 200))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersonEntityCard(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 200) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonEntityCard()
{
  return &type metadata for PersonEntityCard;
}

ValueMetadata *type metadata accessor for ViewService.PersonEntityCardsView()
{
  return &type metadata for ViewService.PersonEntityCardsView;
}

uint64_t storeEnumTagSinglePayload for PersonEntityCard.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1AE84260C + 4 * byte_1AE962292[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1AE842640 + 4 * byte_1AE96228D[v4]))();
}

uint64_t sub_1AE842640(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE842648(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE842650);
  return result;
}

uint64_t sub_1AE84265C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE842664);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1AE842668(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE842670(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonEntityCard.CodingKeys()
{
  return &type metadata for PersonEntityCard.CodingKeys;
}

unint64_t sub_1AE842690()
{
  unint64_t result;

  result = qword_1EEDA43A8;
  if (!qword_1EEDA43A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96256C, &type metadata for PersonEntityCard.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA43A8);
  }
  return result;
}

unint64_t sub_1AE8426D0()
{
  unint64_t result;

  result = qword_1EEDA43B0;
  if (!qword_1EEDA43B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9624DC, &type metadata for PersonEntityCard.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA43B0);
  }
  return result;
}

unint64_t sub_1AE842710()
{
  unint64_t result;

  result = qword_1EEDA43B8;
  if (!qword_1EEDA43B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962504, &type metadata for PersonEntityCard.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA43B8);
  }
  return result;
}

unint64_t sub_1AE84274C()
{
  unint64_t result;

  result = qword_1EEDA43C0;
  if (!qword_1EEDA43C0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonEntityCard, &type metadata for PersonEntityCard);
    atomic_store(result, (unint64_t *)&qword_1EEDA43C0);
  }
  return result;
}

unint64_t sub_1AE842788()
{
  unint64_t result;

  result = qword_1EEDA43C8;
  if (!qword_1EEDA43C8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonEntityCard, &type metadata for PersonEntityCard);
    atomic_store(result, (unint64_t *)&qword_1EEDA43C8);
  }
  return result;
}

unint64_t sub_1AE8427C4()
{
  unint64_t result;

  result = qword_1EEDA43D0;
  if (!qword_1EEDA43D0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonEntityCard, &type metadata for PersonEntityCard);
    atomic_store(result, (unint64_t *)&qword_1EEDA43D0);
  }
  return result;
}

unint64_t sub_1AE842800()
{
  unint64_t result;

  result = qword_1EEDA43F0;
  if (!qword_1EEDA43F0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonEntityCard, &type metadata for PersonEntityCard);
    atomic_store(result, (unint64_t *)&qword_1EEDA43F0);
  }
  return result;
}

uint64_t sub_1AE84283C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EEDA43F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE842884@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 432) = a1;
  return swift_bridgeObjectRetain();
}

IntelligencePlatform::PersonMatcherInferenceInterface::Input __swiftcall PersonMatcherInferenceInterface.Input.init(string:charList:)(Swift::String string, Swift::String charList)
{
  Swift::String *v2;
  IntelligencePlatform::PersonMatcherInferenceInterface::Input result;

  *v2 = string;
  v2[1] = charList;
  result.charList = charList;
  result.string = string;
  return result;
}

unint64_t static PersonMatcherInferenceInterface.interfaceId.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1AE8428B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x676E69727473 && a2 == 0xE600000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7473694C72616863 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE84299C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7473694C72616863;
  else
    return 0x676E69727473;
}

uint64_t sub_1AE8429D0()
{
  char *v0;

  return sub_1AE84299C(*v0);
}

uint64_t sub_1AE8429D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8428B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8429FC()
{
  sub_1AE842B44();
  return sub_1AE926F94();
}

uint64_t sub_1AE842A24()
{
  sub_1AE842B44();
  return sub_1AE926FA0();
}

void PersonMatcherInferenceInterface.Input.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1AE4F67EC();
  v2 = v1;
  v3 = sub_1AE501548(&qword_1EEDA4400);
  v7 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F666C();
  v6 = v5 - v4;
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE842B44();
  sub_1AE926F4C();
  sub_1AE4FB9C4();
  if (!v0)
    sub_1AE4FB9C4();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v3);
  sub_1AE4F667C();
}

unint64_t sub_1AE842B44()
{
  unint64_t result;

  result = qword_1EEDA4408;
  if (!qword_1EEDA4408)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962E88, &type metadata for PersonMatcherInferenceInterface.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4408);
  }
  return result;
}

void PersonMatcherInferenceInterface.Input.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  sub_1AE4F67EC();
  v3 = v2;
  v5 = v4;
  sub_1AE501548(&qword_1EEDA4410);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE842B44();
  sub_1AE926F34();
  if (v0)
  {
    sub_1AE4F90EC();
  }
  else
  {
    v7 = sub_1AE4F9230();
    v9 = v8;
    swift_bridgeObjectRetain();
    v10 = sub_1AE4F9230();
    v12 = v11;
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
    v14 = v10;
    sub_1AE4FDB48(v13);
    *v5 = v7;
    v5[1] = v9;
    v5[2] = v14;
    v5[3] = v12;
    swift_bridgeObjectRetain();
    sub_1AE4F90EC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1AE4F667C();
}

void sub_1AE842CC0()
{
  PersonMatcherInferenceInterface.Input.init(from:)();
}

void sub_1AE842CD4()
{
  PersonMatcherInferenceInterface.Input.encode(to:)();
}

uint64_t PersonMatcherInferenceInterface.Output.embedding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1AE501548(&qword_1EED9AD58);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1AE842D24()
{
  sub_1AE842E80();
  return sub_1AE926F94();
}

uint64_t sub_1AE842D4C()
{
  sub_1AE842E80();
  return sub_1AE926FA0();
}

uint64_t PersonMatcherInferenceInterface.Output.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1AE501548(&qword_1EEDA4418);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F666C();
  v6 = v5 - v4;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE842E80();
  sub_1AE926F4C();
  sub_1AE501548(&qword_1EED9AD58);
  sub_1AE84307C(&qword_1EEDA3D48, MEMORY[0x1E0DEB198], MEMORY[0x1E0C9E6D0]);
  sub_1AE926CC4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_1AE842E80()
{
  unint64_t result;

  result = qword_1EEDA4420;
  if (!qword_1EEDA4420)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962E38, &type metadata for PersonMatcherInferenceInterface.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4420);
  }
  return result;
}

void PersonMatcherInferenceInterface.Output.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE4F67EC();
  v3 = v2;
  v14 = v4;
  v16 = sub_1AE501548(&qword_1EED9AD58);
  v13 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F666C();
  v15 = v6 - v5;
  v7 = sub_1AE501548(&qword_1EEDA4428);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F910C();
  v9 = type metadata accessor for PersonMatcherInferenceInterface.Output();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F666C();
  v12 = v11 - v10;
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE842E80();
  sub_1AE926F34();
  if (!v0)
  {
    sub_1AE84307C(&qword_1EEDA3D58, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0C9E6D8]);
    sub_1AE926BEC();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v12, v15, v16);
    sub_1AE8430DC(v12, v14);
  }
  sub_1AE4F90EC();
  sub_1AE4F667C();
}

uint64_t type metadata accessor for PersonMatcherInferenceInterface.Output()
{
  uint64_t result;

  result = qword_1EED94470;
  if (!qword_1EED94470)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AE84307C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1AE523CF0(&qword_1EED9AD58);
    v8 = a2;
    result = MEMORY[0x1AF454B70](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AE8430DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PersonMatcherInferenceInterface.Output();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AE843120()
{
  PersonMatcherInferenceInterface.Output.init(from:)();
}

uint64_t sub_1AE843134(_QWORD *a1)
{
  return PersonMatcherInferenceInterface.Output.encode(to:)(a1);
}

uint64_t static PersonMatcherInferenceInterface.Errors.InitError.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1AE843150()
{
  sub_1AE8432C0();
  return sub_1AE926F94();
}

uint64_t sub_1AE843178()
{
  sub_1AE8432C0();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8431A0()
{
  sub_1AE8432FC();
  return sub_1AE926F94();
}

uint64_t sub_1AE8431C8()
{
  sub_1AE8432FC();
  return sub_1AE926FA0();
}

void PersonMatcherInferenceInterface.Errors.InitError.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EEDA4430);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F90C8();
  sub_1AE501548(&qword_1EEDA4438);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE8432C0();
  sub_1AE509BF0();
  sub_1AE8432FC();
  sub_1AE509718();
  sub_1AE4FDD44(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1AE4FDB48(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1AE4F667C();
}

unint64_t sub_1AE8432C0()
{
  unint64_t result;

  result = qword_1EEDA4440;
  if (!qword_1EEDA4440)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962DE8, &type metadata for PersonMatcherInferenceInterface.Errors.InitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4440);
  }
  return result;
}

unint64_t sub_1AE8432FC()
{
  unint64_t result;

  result = qword_1EEDA4448;
  if (!qword_1EEDA4448)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962D98, &type metadata for PersonMatcherInferenceInterface.Errors.InitError.InvalidModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4448);
  }
  return result;
}

void PersonMatcherInferenceInterface.Errors.InitError.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EEDA4450);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F910C();
  sub_1AE501548(&qword_1EEDA4458);
  sub_1AE506E98();
  MEMORY[0x1E0C80A78](v5);
  v6 = v3[3];
  v7 = v3[4];
  sub_1AE4F9858(v3, v6);
  sub_1AE8432C0();
  sub_1AE4FBF58();
  if (v1)
    goto LABEL_6;
  sub_1AE815F64();
  sub_1AE507300();
  if (!v8 || (v9 = sub_1AE4F6D90(), sub_1AE50AF34(v9, v10, v11, v12, v13, v14), sub_1AE50A120(), v7 != v6 >> 1))
  {
    v6 = sub_1AE926988();
    sub_1AE4F6778();
    sub_1AE501548(&qword_1EED99C38);
    sub_1AE508D28((uint64_t)&type metadata for PersonMatcherInferenceInterface.Errors.InitError);
    v15 = sub_1AE4FCB7C();
    sub_1AE4F96A0(v15, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1AE507C3C();
    sub_1AE4FDD44(MEMORY[8]);
LABEL_6:
    v16 = v6;
    goto LABEL_7;
  }
  sub_1AE8432FC();
  sub_1AE5058D0();
  sub_1AE50800C();
  swift_unknownObjectRelease();
  sub_1AE4FDD44(MEMORY[8]);
  v16 = v0;
LABEL_7:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v16);
  sub_1AE4F667C();
}

uint64_t sub_1AE8434D8()
{
  return PersonMatcherInferenceInterface.Errors.RunError.hashValue.getter();
}

uint64_t sub_1AE8434EC()
{
  return PersonMatcherInferenceInterface.Errors.RunError.hash(into:)();
}

void sub_1AE843500()
{
  PersonMatcherInferenceInterface.Errors.InitError.init(from:)();
}

void sub_1AE843514()
{
  PersonMatcherInferenceInterface.Errors.InitError.encode(to:)();
}

uint64_t static PersonMatcherInferenceInterface.Errors.RunError.== infix(_:_:)()
{
  return 1;
}

uint64_t PersonMatcherInferenceInterface.Errors.RunError.hash(into:)()
{
  return sub_1AE926ED4();
}

uint64_t sub_1AE843554()
{
  sub_1AE8438A8();
  return sub_1AE926F94();
}

uint64_t sub_1AE84357C()
{
  sub_1AE8438A8();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8435A4()
{
  sub_1AE8438E4();
  return sub_1AE926F94();
}

uint64_t sub_1AE8435CC()
{
  sub_1AE8438E4();
  return sub_1AE926FA0();
}

void PersonMatcherInferenceInterface.Errors.RunError.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EEDA4460);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F90C8();
  sub_1AE501548(&qword_1EEDA4468);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE8438A8();
  sub_1AE509BF0();
  sub_1AE8438E4();
  sub_1AE509718();
  sub_1AE4FDD44(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1AE4FDB48(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1AE4F667C();
}

void PersonMatcherInferenceInterface.Errors.RunError.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EEDA4480);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F910C();
  sub_1AE501548(&qword_1EEDA4488);
  sub_1AE506E98();
  MEMORY[0x1E0C80A78](v5);
  v6 = v3[3];
  v7 = v3[4];
  sub_1AE4F9858(v3, v6);
  sub_1AE8438A8();
  sub_1AE4FBF58();
  if (v1)
    goto LABEL_6;
  sub_1AE815F64();
  sub_1AE507300();
  if (!v8 || (v9 = sub_1AE4F6D90(), sub_1AE50AF34(v9, v10, v11, v12, v13, v14), sub_1AE50A120(), v7 != v6 >> 1))
  {
    v6 = sub_1AE926988();
    sub_1AE4F6778();
    sub_1AE501548(&qword_1EED99C38);
    sub_1AE508D28((uint64_t)&type metadata for PersonMatcherInferenceInterface.Errors.RunError);
    v15 = sub_1AE4FCB7C();
    sub_1AE4F96A0(v15, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1AE507C3C();
    sub_1AE4FDD44(MEMORY[8]);
LABEL_6:
    v16 = v6;
    goto LABEL_7;
  }
  sub_1AE8438E4();
  sub_1AE5058D0();
  sub_1AE50800C();
  swift_unknownObjectRelease();
  sub_1AE4FDD44(MEMORY[8]);
  v16 = v0;
LABEL_7:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v16);
  sub_1AE4F667C();
}

void sub_1AE843864()
{
  PersonMatcherInferenceInterface.Errors.RunError.init(from:)();
}

void sub_1AE843878()
{
  PersonMatcherInferenceInterface.Errors.RunError.encode(to:)();
}

unint64_t sub_1AE84388C()
{
  static PersonMatcherInferenceInterface.interfaceId.getter();
  return 0xD000000000000016;
}

unint64_t sub_1AE8438A8()
{
  unint64_t result;

  result = qword_1EEDA4470;
  if (!qword_1EEDA4470)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962D48, &type metadata for PersonMatcherInferenceInterface.Errors.RunError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4470);
  }
  return result;
}

unint64_t sub_1AE8438E4()
{
  unint64_t result;

  result = qword_1EEDA4478;
  if (!qword_1EEDA4478)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962CF8, &type metadata for PersonMatcherInferenceInterface.Errors.RunError.InvalidStringInputCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4478);
  }
  return result;
}

unint64_t sub_1AE843924()
{
  unint64_t result;

  result = qword_1EEDA4490;
  if (!qword_1EEDA4490)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonMatcherInferenceInterface.Errors.InitError, &type metadata for PersonMatcherInferenceInterface.Errors.InitError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4490);
  }
  return result;
}

unint64_t sub_1AE843964()
{
  unint64_t result;

  result = qword_1EEDA4498;
  if (!qword_1EEDA4498)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonMatcherInferenceInterface.Errors.RunError, &type metadata for PersonMatcherInferenceInterface.Errors.RunError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4498);
  }
  return result;
}

unint64_t sub_1AE8439A4()
{
  unint64_t result;

  result = qword_1EEDA44A0;
  if (!qword_1EEDA44A0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonMatcherInferenceInterface.Errors.InitError, &type metadata for PersonMatcherInferenceInterface.Errors.InitError);
    atomic_store(result, (unint64_t *)&qword_1EEDA44A0);
  }
  return result;
}

unint64_t sub_1AE8439E4()
{
  unint64_t result;

  result = qword_1EEDA44A8;
  if (!qword_1EEDA44A8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonMatcherInferenceInterface.Errors.RunError, &type metadata for PersonMatcherInferenceInterface.Errors.RunError);
    atomic_store(result, (unint64_t *)&qword_1EEDA44A8);
  }
  return result;
}

unint64_t sub_1AE843A24()
{
  unint64_t result;

  result = qword_1EEDA44B0;
  if (!qword_1EEDA44B0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonMatcherInferenceInterface.Errors, &type metadata for PersonMatcherInferenceInterface.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEDA44B0);
  }
  return result;
}

void type metadata accessor for PersonMatcherInferenceInterface()
{
  sub_1AE4F67D4();
}

void type metadata accessor for PersonMatcherInferenceInterface.Input()
{
  sub_1AE4F67D4();
}

uint64_t getEnumTagSinglePayload for PersonMatcherInferenceInterface.Output()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE843A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9AD58);
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PersonMatcherInferenceInterface.Output()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE843AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9AD58);
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a2, v4);
}

void type metadata accessor for PersonMatcherInferenceInterface.Errors()
{
  sub_1AE4F67D4();
}

void type metadata accessor for PersonMatcherInferenceInterface.Errors.InitError()
{
  sub_1AE4F67D4();
}

void type metadata accessor for PersonMatcherInferenceInterface.Errors.RunError()
{
  sub_1AE4F67D4();
}

ValueMetadata *type metadata accessor for PersonMatcherInferenceInterface.Errors.RunError.CodingKeys()
{
  return &type metadata for PersonMatcherInferenceInterface.Errors.RunError.CodingKeys;
}

ValueMetadata *type metadata accessor for PersonMatcherInferenceInterface.Errors.RunError.InvalidStringInputCodingKeys()
{
  return &type metadata for PersonMatcherInferenceInterface.Errors.RunError.InvalidStringInputCodingKeys;
}

ValueMetadata *type metadata accessor for PersonMatcherInferenceInterface.Errors.InitError.CodingKeys()
{
  return &type metadata for PersonMatcherInferenceInterface.Errors.InitError.CodingKeys;
}

ValueMetadata *type metadata accessor for PersonMatcherInferenceInterface.Errors.InitError.InvalidModelCodingKeys()
{
  return &type metadata for PersonMatcherInferenceInterface.Errors.InitError.InvalidModelCodingKeys;
}

uint64_t _s20IntelligencePlatform31PersonMatcherInferenceInterfaceO6ErrorsO9InitErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE843BAC + 4 * byte_1AE9625F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE843BCC + 4 * byte_1AE9625F5[v4]))();
}

_BYTE *sub_1AE843BAC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE843BCC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE843BD4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE843BDC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE843BE4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE843BEC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PersonMatcherInferenceInterface.Output.CodingKeys()
{
  return &type metadata for PersonMatcherInferenceInterface.Output.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PersonMatcherInferenceInterface.Input.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE843C54 + 4 * byte_1AE9625FF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE843C88 + 4 * byte_1AE9625FA[v4]))();
}

uint64_t sub_1AE843C88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE843C90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE843C98);
  return result;
}

uint64_t sub_1AE843CA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE843CACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE843CB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE843CB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonMatcherInferenceInterface.Input.CodingKeys()
{
  return &type metadata for PersonMatcherInferenceInterface.Input.CodingKeys;
}

unint64_t sub_1AE843CD8()
{
  unint64_t result;

  result = qword_1EEDA44B8;
  if (!qword_1EEDA44B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962A08, &type metadata for PersonMatcherInferenceInterface.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA44B8);
  }
  return result;
}

unint64_t sub_1AE843D18()
{
  unint64_t result;

  result = qword_1EEDA44C0;
  if (!qword_1EEDA44C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962AC0, &type metadata for PersonMatcherInferenceInterface.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA44C0);
  }
  return result;
}

unint64_t sub_1AE843D58()
{
  unint64_t result;

  result = qword_1EEDA44C8;
  if (!qword_1EEDA44C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962BC8, &type metadata for PersonMatcherInferenceInterface.Errors.InitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA44C8);
  }
  return result;
}

unint64_t sub_1AE843D98()
{
  unint64_t result;

  result = qword_1EEDA44D0;
  if (!qword_1EEDA44D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962CD0, &type metadata for PersonMatcherInferenceInterface.Errors.RunError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA44D0);
  }
  return result;
}

unint64_t sub_1AE843DD8()
{
  unint64_t result;

  result = qword_1EEDA44D8;
  if (!qword_1EEDA44D8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962BF0, &type metadata for PersonMatcherInferenceInterface.Errors.RunError.InvalidStringInputCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA44D8);
  }
  return result;
}

unint64_t sub_1AE843E18()
{
  unint64_t result;

  result = qword_1EEDA44E0;
  if (!qword_1EEDA44E0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962C18, &type metadata for PersonMatcherInferenceInterface.Errors.RunError.InvalidStringInputCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA44E0);
  }
  return result;
}

unint64_t sub_1AE843E58()
{
  unint64_t result;

  result = qword_1EEDA44E8;
  if (!qword_1EEDA44E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962C40, &type metadata for PersonMatcherInferenceInterface.Errors.RunError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA44E8);
  }
  return result;
}

unint64_t sub_1AE843E98()
{
  unint64_t result;

  result = qword_1EEDA44F0;
  if (!qword_1EEDA44F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962C68, &type metadata for PersonMatcherInferenceInterface.Errors.RunError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA44F0);
  }
  return result;
}

unint64_t sub_1AE843ED8()
{
  unint64_t result;

  result = qword_1EEDA44F8;
  if (!qword_1EEDA44F8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962AE8, &type metadata for PersonMatcherInferenceInterface.Errors.InitError.InvalidModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA44F8);
  }
  return result;
}

unint64_t sub_1AE843F18()
{
  unint64_t result;

  result = qword_1EEDA4500;
  if (!qword_1EEDA4500)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962B10, &type metadata for PersonMatcherInferenceInterface.Errors.InitError.InvalidModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4500);
  }
  return result;
}

unint64_t sub_1AE843F58()
{
  unint64_t result;

  result = qword_1EEDA4508;
  if (!qword_1EEDA4508)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962B38, &type metadata for PersonMatcherInferenceInterface.Errors.InitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4508);
  }
  return result;
}

unint64_t sub_1AE843F98()
{
  unint64_t result;

  result = qword_1EEDA4510;
  if (!qword_1EEDA4510)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962B60, &type metadata for PersonMatcherInferenceInterface.Errors.InitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4510);
  }
  return result;
}

unint64_t sub_1AE843FD8()
{
  unint64_t result;

  result = qword_1EEDA4518;
  if (!qword_1EEDA4518)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962A30, &type metadata for PersonMatcherInferenceInterface.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4518);
  }
  return result;
}

unint64_t sub_1AE844018()
{
  unint64_t result;

  result = qword_1EEDA4520;
  if (!qword_1EEDA4520)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962A58, &type metadata for PersonMatcherInferenceInterface.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4520);
  }
  return result;
}

unint64_t sub_1AE844058()
{
  unint64_t result;

  result = qword_1EEDA4528;
  if (!qword_1EEDA4528)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE962978, &type metadata for PersonMatcherInferenceInterface.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4528);
  }
  return result;
}

unint64_t sub_1AE844098()
{
  unint64_t result;

  result = qword_1EEDA4530;
  if (!qword_1EEDA4530)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9629A0, &type metadata for PersonMatcherInferenceInterface.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4530);
  }
  return result;
}

unint64_t static PersonMatcherInferenceServiceDefinition.definitionId.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1AE8440F4()
{
  sub_1AE844204();
  return sub_1AE926F94();
}

uint64_t sub_1AE84411C()
{
  sub_1AE844204();
  return sub_1AE926FA0();
}

void PersonMatcherInferenceServiceDefinition.ConfigParameters.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1AE501548(&qword_1EEDA4538);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F6744();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE844204();
  sub_1AE926F4C();
  sub_1AE926C88();
  sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1AE4F667C();
}

unint64_t sub_1AE844204()
{
  unint64_t result;

  result = qword_1EEDA4540;
  if (!qword_1EEDA4540)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96311C, &type metadata for PersonMatcherInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4540);
  }
  return result;
}

void PersonMatcherInferenceServiceDefinition.ConfigParameters.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = sub_1AE501548(&qword_1EEDA4548);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F6744();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE844204();
  sub_1AE926F34();
  if (!v2)
  {
    v7 = sub_1AE926BB0();
    v9 = v8;
    sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *a2 = v7;
    a2[1] = v9;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  sub_1AE4F667C();
}

void sub_1AE844328(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  PersonMatcherInferenceServiceDefinition.ConfigParameters.init(from:)(a1, a2);
}

void sub_1AE84433C(_QWORD *a1)
{
  PersonMatcherInferenceServiceDefinition.ConfigParameters.encode(to:)(a1);
}

void PersonMatcherInferenceServiceDefinition.Runner.cost.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 120);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 112);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_1AE844364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  id v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v4[3] = a3;
  v4[4] = v3;
  v4[2] = a2;
  v4[5] = *(_QWORD *)v3;
  swift_defaultActor_initialize();
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = a2;
  *(_QWORD *)(v3 + 112) = 0;
  *(_BYTE *)(v3 + 120) = 1;
  v7 = objc_allocWithZone(MEMORY[0x1E0C9E958]);
  swift_bridgeObjectRetain();
  v8 = objc_msgSend(v7, sel_init);
  v4[6] = v8;
  objc_msgSend(v8, sel_setComputeUnits_, 2);
  objc_msgSend(v8, sel_setAllowBackgroundGPUCompute_, 1);
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EED9EF60 + dword_1EED9EF60);
  v9 = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v4[7] = v10;
  *v10 = v4;
  v10[1] = sub_1AE84448C;
  return v12(a1, a2, 0x614D6E6F73726570, 0xED00007265686374, (uint64_t)v8);
}

uint64_t sub_1AE84448C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  void *v4;
  uint64_t v5;
  void *v6;

  v4 = *(void **)(*v2 + 48);
  v5 = *v2;
  *(_QWORD *)(v5 + 64) = a1;
  swift_task_dealloc();

  if (v1)
  {
    v6 = *(void **)(v5 + 48);
    swift_bridgeObjectRelease();
LABEL_3:

    swift_bridgeObjectRelease();
    swift_defaultActor_destroy();
    swift_release();
    swift_deallocPartialClassInstance();
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  swift_bridgeObjectRelease();
  if (!a1)
  {
    v6 = *(void **)(v5 + 48);
    sub_1AE8439A4();
    sub_1AE4F6778();
    sub_1AE50AB80();
    goto LABEL_3;
  }
  *(_QWORD *)(*(_QWORD *)(v5 + 32) + 144) = a1;
  swift_retain();
  return swift_task_switch();
}

uint64_t PersonMatcherInferenceServiceDefinition.Runner.run(input:context:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 104) = a3;
  *(_QWORD *)(v4 + 112) = v3;
  *(_QWORD *)(v4 + 96) = a1;
  sub_1AE501548(&qword_1EED9DD98);
  *(_QWORD *)(v4 + 120) = sub_1AE4FD1D8();
  *(_QWORD *)(v4 + 128) = sub_1AE4FD1D8();
  v6 = sub_1AE501548(&qword_1EED9AD58);
  *(_QWORD *)(v4 + 136) = v6;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 152) = sub_1AE4FD1D8();
  *(_QWORD *)(v4 + 160) = sub_1AE4FD1D8();
  v7 = sub_1AE4FD1D8();
  v8 = *a2;
  *(_QWORD *)(v4 + 168) = v7;
  *(_QWORD *)(v4 + 176) = v8;
  *(_OWORD *)(v4 + 184) = *(_OWORD *)(a2 + 1);
  *(_QWORD *)(v4 + 200) = a2[3];
  return swift_task_switch();
}

uint64_t sub_1AE84465C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t inited;
  unint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v15;
  _QWORD *v16;
  uint64_t (*v17)(uint64_t);

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  String.oneHotEncoding(charList:)(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), v1);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, v2) == 1)
  {
    sub_1AE613E1C(*(_QWORD *)(v0 + 128));
    sub_1AE8439E4();
    sub_1AE4F6778();
    sub_1AE50AB80();
    sub_1AE4FE18C();
    sub_1AE4F90A0();
    sub_1AE4F67E4();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 160);
    v3 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 128);
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    *(_QWORD *)(v0 + 208) = v8;
    v8(v3, v7, v5);
    sub_1AE501548(&qword_1EED9BFE0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AE934250;
    *(_QWORD *)(inited + 32) = 0x315F7475706E69;
    *(_QWORD *)(inited + 40) = 0xE700000000000000;
    v10 = sub_1AE844E6C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v5);
    sub_1AE5BA550((unint64_t *)&qword_1EED9DDA0, &qword_1EED9AD58, MEMORY[0x1E0C9E6C8]);
    v11 = sub_1AE9265C8();
    *(_QWORD *)(inited + 72) = v10;
    *(_QWORD *)(inited + 48) = v11;
    sub_1AE925C98();
    v12 = objc_allocWithZone(MEMORY[0x1E0C9E8F8]);
    v13 = sub_1AE80D3A4();
    *(_QWORD *)(v0 + 216) = v13;
    v17 = (uint64_t (*)(uint64_t))((char *)&dword_1EEDA3AF0 + dword_1EEDA3AF0);
    v15 = v13;
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v16;
    *v16 = v0;
    v16[1] = sub_1AE84488C;
    return v17((uint64_t)v15);
  }
}

uint64_t sub_1AE84488C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 240) = v1;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_1AE844904()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 232);
  v2 = (void *)sub_1AE925E18();
  v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 120);
  if (v3)
  {
    sub_1AE926610();

    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v5, 1, v4) != 1)
    {
      v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 208);
      v7 = *(void **)(v0 + 216);
      v8 = *(_QWORD *)(v0 + 168);
      v10 = *(_QWORD *)(v0 + 144);
      v9 = *(_QWORD *)(v0 + 152);
      v11 = *(_QWORD *)(v0 + 136);
      v12 = *(_QWORD *)(v0 + 120);
      v13 = *(_QWORD *)(v0 + 96);
      swift_unknownObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v11);
      v6(v9, v12, v11);
      v6(v13, v9, v11);
      v14 = v13 + *(int *)(sub_1AE501548(&qword_1EEDA4558) + 28);
      *(_QWORD *)v14 = 0;
      *(_BYTE *)(v14 + 8) = 1;
      swift_task_dealloc();
      sub_1AE4F90A0();
      sub_1AE4F67E4();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(*(_QWORD *)(v0 + 120), 1, 1, *(_QWORD *)(v0 + 136));
  }
  sub_1AE613E1C(*(_QWORD *)(v0 + 120));
  return sub_1AE926AB4();
}

uint64_t sub_1AE844AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_1AE4FE18C();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t String.oneHotEncoding(charList:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v35 = a3;
  v5 = sub_1AE501548(&qword_1EED9AD58);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v48) = 0;
  v41 = sub_1AE501548(&qword_1ED31B988);
  v9 = sub_1AE505820();
  v40 = xmmword_1AE93D190;
  *(_OWORD *)(v9 + 16) = xmmword_1AE93D190;
  *(_QWORD *)(v9 + 32) = 1;
  *(_QWORD *)(v9 + 40) = sub_1AE925F20();
  v38 = a1;
  *(_QWORD *)(v9 + 48) = sub_1AE925F20();
  sub_1AE5BA550((unint64_t *)&qword_1EED9DDA0, &qword_1EED9AD58, MEMORY[0x1E0C9E6C8]);
  v42 = v8;
  v10 = v5;
  sub_1AE925BB4();
  v11 = sub_1AE925E9C();
  v13 = HIBYTE(v12) & 0xF;
  v48 = v11;
  v49 = v12;
  if ((v12 & 0x2000000000000000) == 0)
    v13 = v11 & 0xFFFFFFFFFFFFLL;
  v50 = 0;
  v51 = v13;
  v14 = sub_1AE925F98();
  if (v15)
  {
    v16 = v14;
    v17 = v15;
    v34 = v6;
    v18 = 0;
    v19 = 0;
    v20 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0)
      v20 = v38 & 0xFFFFFFFFFFFFLL;
    v36 = a2;
    v37 = v20;
    result = a2;
    v22 = v38;
    do
    {
      if (__OFADD__(v19, 1))
        goto LABEL_25;
      v39 = v19 + 1;
      v44 = v22;
      v45 = result;
      v46 = 0;
      v47 = v37;
      swift_bridgeObjectRetain();
      result = sub_1AE925F98();
      if (v23)
      {
        v24 = result;
        v25 = v23;
        v26 = 0;
        while (!__OFADD__(v26, 1))
        {
          v27 = (void *)MEMORY[0x1AF454348]();
          v28 = v16 == v24 && v17 == v25;
          if (v28 || (sub_1AE926D60() & 1) != 0)
          {
            v29 = sub_1AE505820();
            *(_OWORD *)(v29 + 16) = v40;
            *(_QWORD *)(v29 + 32) = 0;
            *(_QWORD *)(v29 + 40) = v19;
            *(_QWORD *)(v29 + 48) = v26;
            v43 = 1065353216;
            sub_1AE925BA8();
            v18 = 1;
          }
          objc_autoreleasePoolPop(v27);
          swift_bridgeObjectRelease();
          result = sub_1AE925F98();
          v24 = result;
          v25 = v30;
          ++v26;
          if (!v30)
            goto LABEL_18;
        }
        __break(1u);
LABEL_25:
        __break(1u);
        return result;
      }
LABEL_18:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = sub_1AE925F98();
      v17 = v31;
      v22 = v38;
      v19 = v39;
      result = v36;
    }
    while (v31);
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
    {
      v6 = v34;
      v32 = v35;
      (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v35, v42, v10);
      v33 = 0;
    }
    else
    {
      v33 = 1;
      v6 = v34;
      v32 = v35;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v33 = 1;
    v32 = v35;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v32, v33, 1, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v42, v10);
}

unint64_t sub_1AE844E6C()
{
  unint64_t result;

  result = qword_1EEDA3AD0;
  if (!qword_1EEDA3AD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEDA3AD0);
  }
  return result;
}

uint64_t PersonMatcherInferenceServiceDefinition.Runner.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t PersonMatcherInferenceServiceDefinition.Runner.__deallocating_deinit()
{
  PersonMatcherInferenceServiceDefinition.Runner.deinit();
  return swift_defaultActor_deallocate();
}

void PersonMatcherInferenceServiceDefinition.Runner.unownedExecutor.getter()
{
  sub_1AE4F67D4();
}

void sub_1AE844EF4()
{
  PersonMatcherInferenceServiceDefinition.Runner.unownedExecutor.getter();
}

void sub_1AE844F0C(uint64_t a1@<X8>)
{
  PersonMatcherInferenceServiceDefinition.Runner.cost.getter(a1);
}

uint64_t sub_1AE844F2C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1AE817264;
  return PersonMatcherInferenceServiceDefinition.Runner.run(input:context:)(a1, a2, a3);
}

uint64_t static PersonMatcherInferenceServiceDefinition.buildRunner(config:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v2[2] = a2;
  v2[3] = v3;
  v2[4] = v4;
  return swift_task_switch();
}

uint64_t sub_1AE844FB8()
{
  uint64_t *v0;
  _QWORD *v1;

  type metadata accessor for PersonMatcherInferenceServiceDefinition.Runner();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1AE62DA5C;
  return sub_1AE844364(v0[3], v0[4], v0[2]);
}

unint64_t sub_1AE845044()
{
  static PersonMatcherInferenceServiceDefinition.definitionId.getter();
  return 0xD00000000000001DLL;
}

uint64_t sub_1AE845060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1AE8173BC;
  return static PersonMatcherInferenceServiceDefinition.buildRunner(config:context:)(a2, a3);
}

uint64_t type metadata accessor for PersonMatcherInferenceServiceDefinition.Runner()
{
  return objc_opt_self();
}

unint64_t sub_1AE8450D8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AE845104();
  result = sub_1AE845140();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AE845104()
{
  unint64_t result;

  result = qword_1EEDA4570;
  if (!qword_1EEDA4570)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonMatcherInferenceServiceDefinition.ConfigParameters, &type metadata for PersonMatcherInferenceServiceDefinition.ConfigParameters);
    atomic_store(result, (unint64_t *)&qword_1EEDA4570);
  }
  return result;
}

unint64_t sub_1AE845140()
{
  unint64_t result;

  result = qword_1EEDA4578;
  if (!qword_1EEDA4578)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonMatcherInferenceServiceDefinition.ConfigParameters, &type metadata for PersonMatcherInferenceServiceDefinition.ConfigParameters);
    atomic_store(result, (unint64_t *)&qword_1EEDA4578);
  }
  return result;
}

unint64_t sub_1AE84517C(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE8451A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE8451A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEDA4580;
  if (!qword_1EEDA4580)
  {
    v1 = type metadata accessor for PersonMatcherInferenceServiceDefinition.Runner();
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonMatcherInferenceServiceDefinition.Runner, v1);
    atomic_store(result, (unint64_t *)&qword_1EEDA4580);
  }
  return result;
}

uint64_t sub_1AE8451DC()
{
  return sub_1AE5BA550((unint64_t *)&unk_1EEDA4588, &qword_1EEDA4558, (uint64_t)&protocol conformance descriptor for InferenceServiceRunnerExtendedResponse<A>);
}

unint64_t sub_1AE84520C()
{
  unint64_t result;

  result = qword_1EEDA4598;
  if (!qword_1EEDA4598)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonMatcherInferenceServiceDefinition.ConfigParameters, &type metadata for PersonMatcherInferenceServiceDefinition.ConfigParameters);
    atomic_store(result, (unint64_t *)&qword_1EEDA4598);
  }
  return result;
}

unint64_t sub_1AE84524C()
{
  unint64_t result;

  result = qword_1EEDA45A0;
  if (!qword_1EEDA45A0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonMatcherInferenceInterface, &type metadata for PersonMatcherInferenceInterface);
    atomic_store(result, (unint64_t *)&qword_1EEDA45A0);
  }
  return result;
}

void type metadata accessor for PersonMatcherInferenceServiceDefinition()
{
  sub_1AE4F67D4();
}

void type metadata accessor for PersonMatcherInferenceServiceDefinition.ConfigParameters()
{
  sub_1AE4F67D4();
}

uint64_t method lookup function for PersonMatcherInferenceServiceDefinition.Runner()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for PersonMatcherInferenceServiceDefinition.ConfigParameters.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE8452F0 + 4 * byte_1AE962EE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE845310 + 4 * byte_1AE962EE5[v4]))();
}

_BYTE *sub_1AE8452F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE845310(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE845318(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE845320(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE845328(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE845330(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PersonMatcherInferenceServiceDefinition.ConfigParameters.CodingKeys()
{
  return &type metadata for PersonMatcherInferenceServiceDefinition.ConfigParameters.CodingKeys;
}

unint64_t sub_1AE845350()
{
  unint64_t result;

  result = qword_1EEDA45B0;
  if (!qword_1EEDA45B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9630F4, &type metadata for PersonMatcherInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA45B0);
  }
  return result;
}

unint64_t sub_1AE845390()
{
  unint64_t result;

  result = qword_1EEDA45B8;
  if (!qword_1EEDA45B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963064, &type metadata for PersonMatcherInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA45B8);
  }
  return result;
}

unint64_t sub_1AE8453D0()
{
  unint64_t result;

  result = qword_1EEDA45C0;
  if (!qword_1EEDA45C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96308C, &type metadata for PersonMatcherInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA45C0);
  }
  return result;
}

void sub_1AE84540C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AE8894E8();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1AE846DFC(v5);
  *a1 = v2;
}

uint64_t PersonRankingServiceError.description.getter(uint64_t a1)
{
  uint64_t result;

  if (!a1)
    return 0xD000000000000034;
  result = sub_1AE926DC0();
  __break(1u);
  return result;
}

uint64_t PersonRankingServiceError.init(rawValue:)()
{
  return 0;
}

unint64_t static PersonRankingServiceError._nsErrorDomain.getter()
{
  return 0xD00000000000002ELL;
}

void sub_1AE8454F4()
{
  sub_1AE512D3C();
}

uint64_t sub_1AE8454FC()
{
  sub_1AE847B38();
  return sub_1AE9245C4();
}

void sub_1AE845534()
{
  sub_1AE54F96C();
}

uint64_t sub_1AE84553C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = PersonRankingServiceError.init(rawValue:)();
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1AE84556C()
{
  sub_1AE847B38();
  return sub_1AE9245DC();
}

uint64_t sub_1AE845594()
{
  sub_1AE847B38();
  return sub_1AE9245D0();
}

unint64_t sub_1AE8455BC()
{
  uint64_t *v0;

  PersonRankingServiceError.description.getter(*v0);
  return 0xD000000000000034;
}

unint64_t sub_1AE8455DC()
{
  static PersonRankingServiceError._nsErrorDomain.getter();
  return 0xD00000000000002ELL;
}

uint64_t sub_1AE8455F8()
{
  sub_1AE847B38();
  return sub_1AE9245B8();
}

id PersonRankingService.__allocating_init(config:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC20IntelligencePlatform20PersonRankingService_config] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id PersonRankingService.init(config:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC20IntelligencePlatform20PersonRankingService_config] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for PersonRankingService();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for PersonRankingService()
{
  return objc_opt_self();
}

uint64_t sub_1AE845704(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6574696D696C6E75 && a2 == 0xE900000000000064;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7368564 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE8457EC(char a1)
{
  if ((a1 & 1) != 0)
    return 7368564;
  else
    return 0x6574696D696C6E75;
}

uint64_t sub_1AE845820()
{
  char *v0;

  return sub_1AE8457EC(*v0);
}

uint64_t sub_1AE845828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE845704(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE84584C()
{
  sub_1AE845AE8();
  return sub_1AE926F94();
}

uint64_t sub_1AE845874()
{
  sub_1AE845AE8();
  return sub_1AE926FA0();
}

uint64_t sub_1AE84589C()
{
  sub_1AE845B24();
  return sub_1AE926F94();
}

uint64_t sub_1AE8458C4()
{
  sub_1AE845B24();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8458EC()
{
  sub_1AE845B60();
  return sub_1AE926F94();
}

uint64_t sub_1AE845914()
{
  sub_1AE845B60();
  return sub_1AE926FA0();
}

void PersonRankingService.RankingMode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v3 = v1;
  v5 = sub_1AE501548(&qword_1EEDA45D0);
  v14 = *(_QWORD *)(v5 - 8);
  v15 = v5;
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F90F4();
  v13 = sub_1AE501548(&qword_1EEDA45D8);
  v6 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EEDA45E0);
  v16 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F6744();
  v12 = *v3;
  v10 = *((unsigned __int8 *)v3 + 8);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE845AE8();
  sub_1AE926F4C();
  if (v10 == 1)
  {
    v17 = 0;
    sub_1AE845B60();
    sub_1AE4F6974();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v13);
  }
  else
  {
    sub_1AE509760();
    sub_1AE4F6974();
    v11 = v15;
    sub_1AE926CB8();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v11);
  }
  sub_1AE4FD5F0();
  sub_1AE4F667C();
}

unint64_t sub_1AE845AE8()
{
  unint64_t result;

  result = qword_1EEDA45E8;
  if (!qword_1EEDA45E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963654, &type metadata for PersonRankingService.RankingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA45E8);
  }
  return result;
}

unint64_t sub_1AE845B24()
{
  unint64_t result;

  result = qword_1EEDA45F0;
  if (!qword_1EEDA45F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963604, &type metadata for PersonRankingService.RankingMode.TopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA45F0);
  }
  return result;
}

unint64_t sub_1AE845B60()
{
  unint64_t result;

  result = qword_1EEDA45F8;
  if (!qword_1EEDA45F8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9635B4, &type metadata for PersonRankingService.RankingMode.UnlimitedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA45F8);
  }
  return result;
}

void PersonRankingService.RankingMode.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char v40;

  v36 = a2;
  v38 = sub_1AE501548(&qword_1EEDA4600);
  v35 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v37 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1AE501548(&qword_1EEDA4608);
  v6 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  sub_1AE4F6744();
  v7 = sub_1AE501548(&qword_1EEDA4610);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F90F4();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE845AE8();
  v9 = v39;
  sub_1AE926F34();
  if (v9)
    goto LABEL_10;
  v31 = v6;
  v32 = v2;
  v33 = v8;
  v39 = a1;
  v10 = sub_1AE926C1C();
  v11 = *(_QWORD *)(v10 + 16);
  v12 = v7;
  if (!v11)
  {
    v21 = v3;
LABEL_8:
    v22 = v33;
    v23 = sub_1AE926988();
    swift_allocError();
    v25 = v24;
    sub_1AE501548(&qword_1EED99C38);
    *v25 = &type metadata for PersonRankingService.RankingMode;
    sub_1AE926B5C();
    sub_1AE92697C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    sub_1AE4FBA84();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v12);
    a1 = v39;
LABEL_10:
    v27 = (uint64_t)a1;
    goto LABEL_11;
  }
  v30 = 0;
  v13 = *(unsigned __int8 *)(v10 + 32);
  sub_1AE50AF34(1, v11, v10, v10 + 32, 0, (2 * v11) | 1);
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v15 != v17 >> 1)
  {
    v21 = v3;
    v12 = v7;
    goto LABEL_8;
  }
  v18 = v13;
  if ((v13 & 1) != 0)
  {
    LODWORD(v34) = v13;
    sub_1AE509760();
    sub_1AE4FCC48();
    v19 = sub_1AE926BE0();
    v20 = v33;
    v28 = v19;
    sub_1AE4FC060();
    sub_1AE4FBA84();
    sub_1AE847B80(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    v18 = v34;
  }
  else
  {
    v40 = 0;
    sub_1AE845B60();
    v26 = v32;
    sub_1AE4FCC48();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v26, v34);
    sub_1AE4FBA84();
    sub_1AE847B80(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8));
    v28 = 0;
  }
  v29 = v36;
  *v36 = v28;
  *((_BYTE *)v29 + 8) = v18 ^ 1;
  v27 = (uint64_t)v39;
LABEL_11:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v27);
  sub_1AE4F667C();
}

void sub_1AE845F00(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  PersonRankingService.RankingMode.init(from:)(a1, a2);
}

void sub_1AE845F14(_QWORD *a1)
{
  PersonRankingService.RankingMode.encode(to:)(a1);
}

uint64_t sub_1AE845F28(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = a1;
  v3 = 0;
  return sub_1AE846004((uint64_t)&v2);
}

uint64_t sub_1AE846004(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  _BOOL8 v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  __int128 v56;
  __int128 v57;
  __int16 v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  unint64_t v64;

  v3 = v2;
  v4 = v1;
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  if (qword_1ED31C9B0 != -1)
LABEL_25:
    swift_once();
  v7 = (void *)qword_1ED31C9A0;
  type metadata accessor for EntityResolutionRankingService();
  v8 = swift_allocObject();
  v9 = EntityResolutionRankingService.init(config:viewService:)((uint64_t)&v55, v7);
  if (v3)
    return v8;
  v10 = v9;
  v51 = (uint64_t)v4;
  v48 = v6;
  v49 = v5;
  sub_1AE501548((uint64_t *)&unk_1ED31BCC0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE934250;
  static EntityClass.person.getter();
  sub_1AE56BA14(inited, v12, v13, v14, v15, v16, v17, v18, v44, v45);
  v50 = v19;
  v55 = (_QWORD *)v19;
  v56 = 0u;
  v57 = 0u;
  v59 = -1;
  v58 = 0;
  v60 = 0;
  v61 = 2;
  v62 = 0;
  v63 = 1;
  sub_1AE5FE3A4(0, (uint64_t)&v55, (uint64_t *)&v64);
  v20 = v64;
  sub_1AE5962D8();
  v4 = (_QWORD *)sub_1AE925C98();
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v21 = sub_1AE926AD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v45 = 0;
  v46 = (uint64_t)v10;
  if (!v21)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    sub_1AE8465A4((uint64_t)v4);
    v36 = swift_bridgeObjectRelease();
    v8 = sub_1AE503B80(v36, v37, v38, v39, v40, v41, v42, v43, v44, 0, v46, v47, v48, v49, v50, v51, v52, v53, v54,
           (uint64_t)v55,
           v56);
    sub_1AE506C5C();
    sub_1AE4FF2D4();
    sub_1AE4F6648();
    return v8;
  }
  v52 = v20;
  v53 = v20 & 0xC000000000000001;
  v22 = 4;
  while (1)
  {
    v3 = v22 - 4;
    if (v53)
    {
      v5 = MEMORY[0x1AF453B80](v22 - 4, v20);
    }
    else
    {
      v5 = *(_QWORD *)(v20 + 8 * v22);
      swift_retain();
    }
    if (__OFADD__(v3, 1))
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v54 = v22 - 3;
    v23 = v21;
    v24 = *(_QWORD *)(v5 + 16);
    v25 = *(_QWORD *)(v5 + 24);
    swift_isUniquelyReferenced_nonNull_native();
    v55 = v4;
    v26 = sub_1AE536D68();
    v28 = v4[2];
    v29 = (v27 & 1) == 0;
    v4 = (_QWORD *)(v28 + v29);
    if (__OFADD__(v28, v29))
      goto LABEL_23;
    v3 = v26;
    v6 = v27;
    sub_1AE501548(&qword_1EED9EC70);
    if ((sub_1AE926A54() & 1) != 0)
      break;
LABEL_15:
    v4 = v55;
    if ((v6 & 1) != 0)
    {
      *(_QWORD *)(v55[7] + 8 * v3) = v25;
    }
    else
    {
      v55[(v3 >> 6) + 8] |= 1 << v3;
      *(_QWORD *)(v4[6] + 8 * v3) = v24;
      *(_QWORD *)(v4[7] + 8 * v3) = v25;
      v32 = v4[2];
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (v33)
        goto LABEL_24;
      v4[2] = v34;
    }
    sub_1AE4F682C();
    swift_bridgeObjectRelease();
    ++v22;
    v21 = v23;
    v20 = v52;
    if (v54 == v23)
      goto LABEL_20;
  }
  v30 = sub_1AE536D68();
  if ((v6 & 1) == (v31 & 1))
  {
    v3 = v30;
    goto LABEL_15;
  }
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE8465A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  unint64_t v13;
  char v14;
  double v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;
  _OWORD v26[2];
  uint64_t v27;

  if (qword_1ED31C9B0 != -1)
    swift_once();
  ViewService.entityImportanceSignalsView.getter(v24);
  if (!v1)
  {
    v26[0] = v24[0];
    v26[1] = v24[1];
    v27 = v25;
    *(_QWORD *)&v24[0] = MEMORY[0x1E0DEE9D8];
    ObjectType = swift_getObjectType();
    MEMORY[0x1E0C80A78](ObjectType);
    sub_1AE501548(&qword_1EED9CD28);
    sub_1AE924CCC();
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)(v23 + 16);
    if (v5)
    {
      v6 = (uint64_t *)(v23 + 56);
      v2 = MEMORY[0x1E0DEE9D8];
      do
      {
        v7 = *((unsigned __int8 *)v6 - 16);
        v8 = *((_BYTE *)v6 - 15);
        v9 = *((_BYTE *)v6 - 14);
        v10 = *(v6 - 1);
        v11 = *v6;
        v12 = 0.0;
        v22 = *(v6 - 3);
        if (*(_QWORD *)(a1 + 16))
        {
          v13 = sub_1AE536D68();
          if ((v14 & 1) != 0)
            v12 = *(double *)(*(_QWORD *)(a1 + 56) + 8 * v13);
        }
        swift_bridgeObjectRetain();
        v15 = sub_1AE846814(v7, v8, v9, v12, v10, v11);
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE847B74();
          v2 = v19;
        }
        v16 = *(_QWORD *)(v2 + 16);
        v17 = v22;
        if (v16 >= *(_QWORD *)(v2 + 24) >> 1)
        {
          sub_1AE847B74();
          v2 = v20;
          v17 = v22;
        }
        *(_QWORD *)(v2 + 16) = v16 + 1;
        v18 = v2 + 16 * v16;
        *(_QWORD *)(v18 + 32) = v17;
        *(double *)(v18 + 40) = v15;
        v6 += 4;
        --v5;
      }
      while (v5);
    }
    else
    {
      v2 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    sub_1AE6A1880((uint64_t)v26);
  }
  return v2;
}

double sub_1AE846814(uint64_t a1, char a2, char a3, double a4, uint64_t a5, uint64_t a6)
{
  char v10;
  id v11;
  uint64_t v12;
  double v13;
  double v14;
  id v15;
  double v16;
  double v17;
  id v18;
  double v19;
  double v20;
  double v21;
  uint64_t v23;
  double v24;

  v10 = a1;
  v11 = sub_1AE5009B4(a1, sel_isFavoriteMultiplier);
  v12 = 1;
  if (v13 != 0.0 && (v10 & 1) != 0)
  {
    v11 = sub_1AE5009B4((uint64_t)v11, sel_isFavoriteMultiplier);
    a4 = v14 + a4;
    v12 = 2;
  }
  v15 = sub_1AE5009B4((uint64_t)v11, sel_emergencyContactMultiplier);
  if (v16 != 0.0 && (a2 & 1) != 0)
  {
    v15 = sub_1AE5009B4((uint64_t)v15, sel_emergencyContactMultiplier);
    a4 = a4 + v17;
    ++v12;
  }
  v18 = sub_1AE5009B4((uint64_t)v15, sel_iCloudFamilyMemberMultiplier);
  if (v19 != 0.0 && (a3 & 1) != 0)
  {
    v18 = sub_1AE5009B4((uint64_t)v18, sel_iCloudFamilyMemberMultiplier);
    a4 = a4 + v20;
    ++v12;
  }
  sub_1AE5009B4((uint64_t)v18, sel_relationshipTagMultiplier);
  if (v21 != 0.0 && a6 != 0)
  {
    sub_1AE4F7630();
    v23 = sub_1AE4FDD2C();
    if ((v23 & 1) != 0)
      goto LABEL_28;
    v23 = sub_1AE4FDD2C();
    if ((v23 & 1) != 0)
      goto LABEL_28;
    v23 = sub_1AE4FDD2C();
    if ((v23 & 1) != 0)
      goto LABEL_28;
    v23 = sub_1AE4FDD2C();
    if ((v23 & 1) != 0)
      goto LABEL_28;
    v23 = sub_1AE4FDD2C();
    if ((v23 & 1) != 0)
      goto LABEL_28;
    v23 = sub_1AE4FDD2C();
    if ((v23 & 1) != 0)
      goto LABEL_28;
    v23 = sub_1AE4FDD2C();
    if ((v23 & 1) != 0
      || (v23 = sub_1AE4FDD2C(), (v23 & 1) != 0)
      || (v23 = sub_1AE4FDD2C(), (v23 & 1) != 0)
      || (v23 = sub_1AE4FDD2C(), (v23 & 1) != 0)
      || (v23 = sub_1AE4FDD2C(), (v23 & 1) != 0)
      || (v23 = sub_1AE4FDD2C(), (v23 & 1) != 0)
      || (v23 = sub_1AE4FDD2C(), (v23 & 1) != 0)
      || (v23 = sub_1AE4FDD2C(), (v23 & 1) != 0))
    {
LABEL_28:
      sub_1AE5009B4(v23, sel_relationshipTagMultiplier);
      a4 = a4 + v24;
      ++v12;
    }
  }
  return a4 / (double)v12;
}

uint64_t sub_1AE846B74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[2];
  uint64_t v22;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v21[0] = a1;
  swift_bridgeObjectRetain();
  sub_1AE84540C(v21);
  if (v2)
  {
    result = swift_release();
    __break(1u);
    return result;
  }
  v5 = v21[0];
  v6 = *(_QWORD *)(v21[0] + 16);
  if (v6)
  {
    v22 = v3;
    v21[0] = MEMORY[0x1E0DEE9D8];
    sub_1AE5219D8();
    v7 = v21[0];
    v8 = *(_QWORD *)(v21[0] + 16);
    v9 = 32;
    do
    {
      v10 = *(_QWORD *)(v5 + v9);
      v21[0] = v7;
      if (v8 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1AE5219D8();
        v7 = v21[0];
      }
      *(_QWORD *)(v7 + 16) = v8 + 1;
      *(_QWORD *)(v7 + 8 * v8 + 32) = v10;
      v9 += 16;
      ++v8;
      --v6;
    }
    while (v6);
    sub_1AE4F77C8();
    v3 = v22;
    if ((v4 & 1) != 0)
      goto LABEL_9;
  }
  else
  {
    sub_1AE4F77C8();
    v7 = MEMORY[0x1E0DEE9D8];
    if ((v4 & 1) != 0)
      goto LABEL_9;
  }
  v11 = sub_1AE76B3C0(v3, v7);
  v7 = sub_1AE8037A8(v11, v12, v13, v14);
LABEL_9:
  if (qword_1ED31C9B0 != -1)
    swift_once();
  v15 = ViewService.siriPersonView.getter();
  sub_1AE501548((uint64_t *)&unk_1ED318930);
  swift_allocObject();
  v16 = swift_retain();
  v17 = sub_1AE527CC8(v16);
  v21[0] = (uint64_t)v15;
  v21[1] = v17;
  SiriPersonView.fetchValues(entityIdentifier:)(v7);
  v20 = v19;
  sub_1AE4F77C8();
  sub_1AE4F682C();
  sub_1AE4F6648();
  return v20;
}

id PersonRankingService.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PersonRankingService.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PersonRankingService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PersonRankingService();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1AE846DFC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double *v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  double v26;
  uint64_t v27;
  double *v28;
  double v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;

  v3 = a1[1];
  v4 = sub_1AE926D0C();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1AE847404(0, v3, 1, a1);
      return;
    }
    goto LABEL_124;
  }
  v5 = v4;
  sub_1AE519BD0(v3 / 2);
  v91 = a1;
  v92 = v6;
  v96 = v7;
  v94 = v3;
  if (v3 <= 0)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    v32 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_90:
    if (v32 < 2)
    {
LABEL_101:
      swift_bridgeObjectRelease();
      if (v94 >= -1)
      {
        *(_QWORD *)(v92 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_129;
    }
    v83 = *v91;
    while (1)
    {
      v84 = v32 - 2;
      if (v32 < 2)
        break;
      if (!v83)
        goto LABEL_133;
      v85 = *(_QWORD *)(v10 + 32 + 16 * v84);
      v86 = *(_QWORD *)(v10 + 32 + 16 * (v32 - 1) + 8);
      sub_1AE847470((double *)(v83 + 16 * v85), (double *)(v83 + 16 * *(_QWORD *)(v10 + 32 + 16 * (v32 - 1))), v83 + 16 * v86, v96);
      if (v1)
        goto LABEL_86;
      if (v86 < v85)
        goto LABEL_119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE8893F4();
        v10 = v89;
      }
      if (v84 >= *(_QWORD *)(v10 + 16))
        goto LABEL_120;
      v87 = (_QWORD *)(v10 + 32 + 16 * v84);
      *v87 = v85;
      v87[1] = v86;
      v88 = *(_QWORD *)(v10 + 16);
      if (v32 > v88)
        goto LABEL_121;
      memmove((void *)(v10 + 32 + 16 * (v32 - 1)), (const void *)(v10 + 32 + 16 * v32), 16 * (v88 - v32));
      *(_QWORD *)(v10 + 16) = v88 - 1;
      v32 = v88 - 1;
      if (v88 <= 2)
        goto LABEL_101;
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v90 = *a1 + 40;
  v10 = MEMORY[0x1E0DEE9D8];
  v93 = v5;
  v95 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(double *)(v9 + 16 * v8 + 8);
      v13 = *(double *)(v9 + 16 * v11 + 8);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v14 = (double *)(v90 + 16 * v11);
        v15 = v12;
        while (1)
        {
          v16 = v15;
          v15 = *v14;
          if (v13 < v12 == v16 >= *v14)
            break;
          ++v8;
          v14 += 2;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v13 < v12)
      {
        if (v8 < v11)
          goto LABEL_126;
        if (v11 < v8)
        {
          v17 = 16 * v8;
          v18 = 16 * v11;
          v19 = v8;
          v20 = v11;
          do
          {
            if (v20 != --v19)
            {
              if (!v9)
                goto LABEL_132;
              v21 = v9 + v17;
              v22 = *(_QWORD *)(v9 + v18);
              v23 = *(_QWORD *)(v9 + v18 + 8);
              *(_OWORD *)(v9 + v18) = *(_OWORD *)(v9 + v17 - 16);
              *(_QWORD *)(v21 - 16) = v22;
              *(_QWORD *)(v21 - 8) = v23;
            }
            ++v20;
            v17 -= 16;
            v18 += 16;
          }
          while (v20 < v19);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_123;
      if (v8 - v11 < v5)
      {
        v24 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_127;
        if (v24 >= v3)
          v24 = v3;
        if (v24 < v11)
          goto LABEL_128;
        if (v8 != v24)
        {
          v25 = (double *)(v9 + 16 * v8);
          do
          {
            v26 = *(double *)(v9 + 16 * v8 + 8);
            v27 = v11;
            v28 = v25;
            do
            {
              if (*(v28 - 1) >= v26)
                break;
              if (!v9)
                goto LABEL_130;
              v29 = *v28;
              *(_OWORD *)v28 = *((_OWORD *)v28 - 1);
              *(v28 - 1) = v26;
              *(v28 - 2) = v29;
              v28 -= 2;
              ++v27;
            }
            while (v8 != v27);
            ++v8;
            v25 += 2;
          }
          while (v8 != v24);
          v8 = v24;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE889310(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
      v10 = v81;
    }
    v31 = *(_QWORD *)(v10 + 16);
    v30 = *(_QWORD *)(v10 + 24);
    v32 = v31 + 1;
    v9 = v95;
    if (v31 >= v30 >> 1)
    {
      sub_1AE889310(v30 > 1, v31 + 1, 1, (char *)v10);
      v9 = v95;
      v10 = v82;
    }
    *(_QWORD *)(v10 + 16) = v32;
    v33 = v10 + 32;
    v34 = (uint64_t *)(v10 + 32 + 16 * v31);
    *v34 = v11;
    v34[1] = v8;
    if (v31)
      break;
    v32 = 1;
LABEL_81:
    v5 = v93;
    v3 = v94;
    if (v8 >= v94)
      goto LABEL_90;
  }
  while (1)
  {
    v35 = v32 - 1;
    if (v32 >= 4)
    {
      v40 = v33 + 16 * v32;
      v41 = *(_QWORD *)(v40 - 64);
      v42 = *(_QWORD *)(v40 - 56);
      v46 = __OFSUB__(v42, v41);
      v43 = v42 - v41;
      if (v46)
        goto LABEL_107;
      v45 = *(_QWORD *)(v40 - 48);
      v44 = *(_QWORD *)(v40 - 40);
      v46 = __OFSUB__(v44, v45);
      v38 = v44 - v45;
      v39 = v46;
      if (v46)
        goto LABEL_108;
      v47 = v32 - 2;
      v48 = (uint64_t *)(v33 + 16 * (v32 - 2));
      v50 = *v48;
      v49 = v48[1];
      v46 = __OFSUB__(v49, v50);
      v51 = v49 - v50;
      if (v46)
        goto LABEL_109;
      v46 = __OFADD__(v38, v51);
      v52 = v38 + v51;
      if (v46)
        goto LABEL_111;
      if (v52 >= v43)
      {
        v70 = (uint64_t *)(v33 + 16 * v35);
        v72 = *v70;
        v71 = v70[1];
        v46 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v46)
          goto LABEL_117;
        v63 = v38 < v73;
        goto LABEL_70;
      }
    }
    else
    {
      if (v32 != 3)
      {
        v64 = *(_QWORD *)(v10 + 32);
        v65 = *(_QWORD *)(v10 + 40);
        v46 = __OFSUB__(v65, v64);
        v57 = v65 - v64;
        v58 = v46;
        goto LABEL_64;
      }
      v37 = *(_QWORD *)(v10 + 32);
      v36 = *(_QWORD *)(v10 + 40);
      v46 = __OFSUB__(v36, v37);
      v38 = v36 - v37;
      v39 = v46;
    }
    if ((v39 & 1) != 0)
      goto LABEL_110;
    v47 = v32 - 2;
    v53 = (uint64_t *)(v33 + 16 * (v32 - 2));
    v55 = *v53;
    v54 = v53[1];
    v56 = __OFSUB__(v54, v55);
    v57 = v54 - v55;
    v58 = v56;
    if (v56)
      goto LABEL_112;
    v59 = (uint64_t *)(v33 + 16 * v35);
    v61 = *v59;
    v60 = v59[1];
    v46 = __OFSUB__(v60, v61);
    v62 = v60 - v61;
    if (v46)
      goto LABEL_114;
    if (__OFADD__(v57, v62))
      goto LABEL_116;
    if (v57 + v62 >= v38)
    {
      v63 = v38 < v62;
LABEL_70:
      if (v63)
        v35 = v47;
      goto LABEL_72;
    }
LABEL_64:
    if ((v58 & 1) != 0)
      goto LABEL_113;
    v66 = (uint64_t *)(v33 + 16 * v35);
    v68 = *v66;
    v67 = v66[1];
    v46 = __OFSUB__(v67, v68);
    v69 = v67 - v68;
    if (v46)
      goto LABEL_115;
    if (v69 < v57)
      goto LABEL_81;
LABEL_72:
    v74 = v10;
    v75 = v35 - 1;
    if (v35 - 1 >= v32)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v9)
      goto LABEL_131;
    v76 = (uint64_t *)(v33 + 16 * v75);
    v77 = *v76;
    v78 = (_QWORD *)(v33 + 16 * v35);
    v79 = v78[1];
    sub_1AE847470((double *)(v9 + 16 * *v76), (double *)(v9 + 16 * *v78), v9 + 16 * v79, v96);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_104;
    if (v35 > *(_QWORD *)(v74 + 16))
      goto LABEL_105;
    *v76 = v77;
    *(_QWORD *)(v33 + 16 * v75 + 8) = v79;
    v80 = *(_QWORD *)(v74 + 16);
    if (v35 >= v80)
      goto LABEL_106;
    v10 = v74;
    v32 = v80 - 1;
    memmove((void *)(v33 + 16 * v35), v78 + 2, 16 * (v80 - 1 - v35));
    *(_QWORD *)(v74 + 16) = v80 - 1;
    v9 = v95;
    if (v80 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v94 < -1)
    goto LABEL_125;
  *(_QWORD *)(v92 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1AE847404(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double *v8;
  double v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 16 * a3;
    while (2)
    {
      v6 = *(double *)(v4 + 16 * a3 + 8);
      v7 = result;
      v8 = (double *)v5;
      do
      {
        if (*(v8 - 1) >= v6)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v9 = *v8;
        *(_OWORD *)v8 = *((_OWORD *)v8 - 1);
        *(v8 - 1) = v6;
        *(v8 - 2) = v9;
        v8 -= 2;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 16;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1AE847470(double *a1, double *a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4;
  double *v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  _OWORD *v15;
  double *v20;
  double *v21;
  double *v22;
  BOOL v23;
  BOOL v24;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = (char *)a2 - (char *)a1;
  v9 = ((char *)a2 - (char *)a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_1AE520270(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = v4 + 16 * v11;
    if (v7 >= v6 || v10 < 16)
      goto LABEL_45;
    v20 = (double *)(a3 - 16);
    while (1)
    {
      v21 = v20 + 2;
      if (*(v6 - 1) >= *(double *)(v12 - 8))
      {
        v22 = (double *)(v12 - 16);
        v24 = v21 != (double *)v12 || (unint64_t)v20 >= v12;
        v12 -= 16;
        if (!v24)
          goto LABEL_41;
      }
      else
      {
        v22 = v6 - 2;
        v23 = v21 != v6 || v20 >= v6;
        v6 -= 2;
        if (!v23)
          goto LABEL_41;
      }
      *(_OWORD *)v20 = *(_OWORD *)v22;
LABEL_41:
      v20 -= 2;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_45;
    }
  }
  sub_1AE520270(a1, ((char *)a2 - (char *)a1) / 16, a4);
  v12 = v4 + 16 * v9;
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    do
    {
      if (*(double *)(v4 + 8) >= v6[1])
      {
        v14 = v7 == (double *)v4;
        v15 = (_OWORD *)v4;
        v4 += 16;
        if (v14 && (unint64_t)v7 < v4)
          goto LABEL_18;
      }
      else
      {
        v14 = v7 == v6;
        v15 = v6;
        v6 += 2;
        if (v14 && v7 < v6)
          goto LABEL_18;
      }
      *(_OWORD *)v7 = *v15;
LABEL_18:
      v7 += 2;
    }
    while (v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_45:
  sub_1AE520270(v4, (uint64_t)(v12 - v4) / 16, v6);
  return 1;
}

unint64_t sub_1AE8475F4()
{
  unint64_t result;

  result = qword_1EEDA4618;
  if (!qword_1EEDA4618)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonRankingServiceError, &type metadata for PersonRankingServiceError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4618);
  }
  return result;
}

unint64_t sub_1AE847634()
{
  unint64_t result;

  result = qword_1EEDA4620;
  if (!qword_1EEDA4620)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonRankingServiceError, &type metadata for PersonRankingServiceError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4620);
  }
  return result;
}

unint64_t sub_1AE847678()
{
  unint64_t result;

  result = qword_1EEDA4628;
  if (!qword_1EEDA4628)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonRankingServiceError, &type metadata for PersonRankingServiceError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4628);
  }
  return result;
}

unint64_t sub_1AE8476BC()
{
  unint64_t result;

  result = qword_1EEDA4630;
  if (!qword_1EEDA4630)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonRankingServiceError, &type metadata for PersonRankingServiceError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4630);
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonRankingServiceError()
{
  return &type metadata for PersonRankingServiceError;
}

uint64_t method lookup function for PersonRankingService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PersonRankingService.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PersonRankingService.rankedPersonsForObjC(maxCount:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of PersonRankingService.rankedPersons(rankingMode:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

ValueMetadata *type metadata accessor for PersonRankingService.RankingMode()
{
  return &type metadata for PersonRankingService.RankingMode;
}

uint64_t storeEnumTagSinglePayload for PersonRankingService.RankingMode.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE8477D0 + 4 * byte_1AE96317A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE847804 + 4 * byte_1AE963175[v4]))();
}

uint64_t sub_1AE847804(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE84780C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE847814);
  return result;
}

uint64_t sub_1AE847820(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE847828);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE84782C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE847834(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersonRankingService.RankingMode.CodingKeys()
{
  return &type metadata for PersonRankingService.RankingMode.CodingKeys;
}

ValueMetadata *type metadata accessor for PersonRankingService.RankingMode.UnlimitedCodingKeys()
{
  return &type metadata for PersonRankingService.RankingMode.UnlimitedCodingKeys;
}

uint64_t storeEnumTagSinglePayload for PersonRankingService.RankingMode.TopCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE8478A0 + 4 * byte_1AE96317F[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE8478C0 + 4 * byte_1AE963184[v4]))();
}

_BYTE *sub_1AE8478A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE8478C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE8478C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE8478D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE8478D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE8478E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PersonRankingService.RankingMode.TopCodingKeys()
{
  return &type metadata for PersonRankingService.RankingMode.TopCodingKeys;
}

unint64_t sub_1AE847900()
{
  unint64_t result;

  result = qword_1EEDA4638;
  if (!qword_1EEDA4638)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963484, &type metadata for PersonRankingService.RankingMode.TopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4638);
  }
  return result;
}

unint64_t sub_1AE847940()
{
  unint64_t result;

  result = qword_1EEDA4640;
  if (!qword_1EEDA4640)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96358C, &type metadata for PersonRankingService.RankingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4640);
  }
  return result;
}

unint64_t sub_1AE847980()
{
  unint64_t result;

  result = qword_1EEDA4648;
  if (!qword_1EEDA4648)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9634AC, &type metadata for PersonRankingService.RankingMode.UnlimitedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4648);
  }
  return result;
}

unint64_t sub_1AE8479C0()
{
  unint64_t result;

  result = qword_1EEDA4650;
  if (!qword_1EEDA4650)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9634D4, &type metadata for PersonRankingService.RankingMode.UnlimitedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4650);
  }
  return result;
}

unint64_t sub_1AE847A00()
{
  unint64_t result;

  result = qword_1EEDA4658;
  if (!qword_1EEDA4658)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9633F4, &type metadata for PersonRankingService.RankingMode.TopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4658);
  }
  return result;
}

unint64_t sub_1AE847A40()
{
  unint64_t result;

  result = qword_1EEDA4660;
  if (!qword_1EEDA4660)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96341C, &type metadata for PersonRankingService.RankingMode.TopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4660);
  }
  return result;
}

unint64_t sub_1AE847A80()
{
  unint64_t result;

  result = qword_1EEDA4668;
  if (!qword_1EEDA4668)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9634FC, &type metadata for PersonRankingService.RankingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4668);
  }
  return result;
}

unint64_t sub_1AE847AC0()
{
  unint64_t result;

  result = qword_1EEDA4670;
  if (!qword_1EEDA4670)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963524, &type metadata for PersonRankingService.RankingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4670);
  }
  return result;
}

unint64_t sub_1AE847AFC()
{
  unint64_t result;

  result = qword_1EEDA4678;
  if (!qword_1EEDA4678)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEDA4678);
  }
  return result;
}

unint64_t sub_1AE847B38()
{
  unint64_t result;

  result = qword_1EEDA4680;
  if (!qword_1EEDA4680)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for PersonRankingServiceError, &type metadata for PersonRankingServiceError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4680);
  }
  return result;
}

void sub_1AE847B74()
{
  sub_1AE51BD9C();
}

uint64_t sub_1AE847B80@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_1AE847B8C()
{
  uint64_t v0;

  v0 = sub_1AE501548(&qword_1ED319190);
  sub_1AE595770(v0, qword_1EEDA4690);
  sub_1AE4FB608(v0, (uint64_t)qword_1EEDA4690);
  return sub_1AE925350();
}

uint64_t PHPersonIdentifierMapView.identifier(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t inited;
  uint64_t result;
  uint64_t v9;

  sub_1AE501548(&qword_1ED31BCD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE934250;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1AE56BB6C();
  swift_getObjectType();
  sub_1AE501548((uint64_t *)&unk_1EEDA4070);
  sub_1AE924CCC();
  result = swift_bridgeObjectRelease();
  if (!v3)
  {
    sub_1AE56ABC4(v9, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t PHPersonIdentifierMapView.identifiers(for:)(uint64_t a1)
{
  return sub_1AE8252EC(a1, (uint64_t *)&unk_1EEDA4070);
}

uint64_t sub_1AE847D14@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _BOOL8 v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40[5];
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v38 = a1;
  v32 = a3;
  isUniquelyReferenced_nonNull_native = sub_1AE501548(&qword_1ED319190);
  v5 = *(_QWORD *)(isUniquelyReferenced_nonNull_native - 8);
  MEMORY[0x1E0C80A78](isUniquelyReferenced_nonNull_native);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AE501548(&qword_1ED318B60);
  v37 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD **)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EED998B8 != -1)
LABEL_30:
    swift_once();
  v11 = sub_1AE4FB608(isUniquelyReferenced_nonNull_native, (uint64_t)qword_1EEDA4690);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, isUniquelyReferenced_nonNull_native);
  v45 = a2;
  v40[3] = sub_1AE925374();
  v40[4] = MEMORY[0x1E0D24668];
  sub_1AE52F6A8(v40);
  sub_1AE925380();
  v43 = sub_1AE924C9C();
  v44 = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8(&v41);
  sub_1AE501548(&qword_1ED318F30);
  sub_1AE5BA550(&qword_1ED30F960, &qword_1ED318F30, MEMORY[0x1E0DEB3D0]);
  sub_1AE926058();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v40);
  sub_1AE925320();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, isUniquelyReferenced_nonNull_native);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v41);
  sub_1AE5BA550((unint64_t *)&qword_1ED30FFD0, &qword_1ED318B60, MEMORY[0x1E0D24290]);
  v12 = v39;
  a2 = (uint64_t)v10;
  isUniquelyReferenced_nonNull_native = sub_1AE924B70();
  v13 = v12;
  result = (*(uint64_t (**)(_QWORD *, unint64_t))(v37 + 8))(v10, v8);
  if (v12)
    return result;
  if (!((unint64_t)isUniquelyReferenced_nonNull_native >> 62))
  {
    v8 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_5;
LABEL_35:
    v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_36:
    result = swift_bridgeObjectRelease_n();
    *v32 = v10;
    return result;
  }
  if (isUniquelyReferenced_nonNull_native < 0)
    a2 = isUniquelyReferenced_nonNull_native;
  else
    a2 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n();
  v8 = sub_1AE926AD8();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_35;
LABEL_5:
  v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v15 = 4;
  v37 = 0x80000001AE988C20;
  v38 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  v33 = v8;
  v34 = isUniquelyReferenced_nonNull_native;
  while (1)
  {
    v5 = v15 - 4;
    if (v38)
    {
      v7 = (char *)MEMORY[0x1AF453B80](v15 - 4, isUniquelyReferenced_nonNull_native);
    }
    else
    {
      v7 = *(char **)(isUniquelyReferenced_nonNull_native + 8 * v15);
      swift_retain();
    }
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v39 = v15 - 3;
    sub_1AE571708();
    if (v13)
      break;
    v5 = v16;
    v18 = v17;
    sub_1AE848938((uint64_t)&v41);
    if ((v42 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1AE536EDC(v5, v18);
      a2 = v19;
      swift_bridgeObjectRelease();
      if ((a2 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        v40[0] = (uint64_t)v10;
        sub_1AE501548(&qword_1EED94770);
        a2 = (uint64_t)v40;
        v8 = v33;
        isUniquelyReferenced_nonNull_native = v34;
        sub_1AE926A54();
        v10 = (_QWORD *)v40[0];
        swift_bridgeObjectRelease();
        sub_1AE926A6C();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = 0;
      v36 = v41;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v40[0] = (uint64_t)v10;
      a2 = (uint64_t)v10;
      v20 = sub_1AE536EDC(v5, v18);
      v22 = v10[2];
      v23 = (v21 & 1) == 0;
      v10 = (_QWORD *)(v22 + v23);
      if (__OFADD__(v22, v23))
        goto LABEL_28;
      v8 = v20;
      v24 = v21;
      sub_1AE501548(&qword_1EED94770);
      a2 = (uint64_t)v40;
      v25 = sub_1AE926A54();
      isUniquelyReferenced_nonNull_native = v34;
      if ((v25 & 1) != 0)
      {
        a2 = v40[0];
        v26 = sub_1AE536EDC(v5, v18);
        if ((v24 & 1) != (v27 & 1))
          goto LABEL_39;
        v8 = v26;
      }
      v10 = (_QWORD *)v40[0];
      if ((v24 & 1) != 0)
      {
        *(_QWORD *)(*(_QWORD *)(v40[0] + 56) + 8 * v8) = v36;
      }
      else
      {
        *(_QWORD *)(v40[0] + 8 * (v8 >> 6) + 64) |= 1 << v8;
        v28 = (uint64_t *)(v10[6] + 16 * v8);
        *v28 = v5;
        v28[1] = v18;
        *(_QWORD *)(v10[7] + 8 * v8) = v36;
        v29 = v10[2];
        v30 = __OFADD__(v29, 1);
        v31 = v29 + 1;
        if (v30)
          goto LABEL_29;
        v10[2] = v31;
        swift_bridgeObjectRetain();
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v35;
      v8 = v33;
    }
    ++v15;
    if (v39 == v8)
      goto LABEL_36;
  }
  swift_unexpectedError();
  __break(1u);
LABEL_39:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t PHPersonIdentifierMapView.phPersonIdentifier(for:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v8;

  v3 = *a1;
  v4 = *v1;
  sub_1AE501548((uint64_t *)&unk_1ED30FDA0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE934250;
  *(_QWORD *)(inited + 32) = v3;
  sub_1AE56B498();
  swift_getObjectType();
  sub_1AE501548(&qword_1EEDA4080);
  v6 = v4;
  sub_1AE924CCC();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v6 = sub_1AE56AE48(v8);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t PHPersonIdentifierMapView.phPersonIdentifiers(for:)(uint64_t a1)
{
  return sub_1AE8252EC(a1, &qword_1EEDA4080);
}

uint64_t sub_1AE8483B8@<X0>(char *a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  uint64_t v4;
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t **v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39[5];
  uint64_t v40[7];

  v37 = a1;
  v31 = a3;
  v4 = sub_1AE501548(&qword_1ED319190);
  isUniquelyReferenced_nonNull_native = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (unint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AE501548(&qword_1ED318B60);
  v36 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EED998B8 != -1)
LABEL_29:
    swift_once();
  v11 = sub_1AE4FB608(v4, (uint64_t)qword_1EEDA4690);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 16))(v7, v11, v4);
  v40[6] = (uint64_t)a2;
  v39[3] = sub_1AE925374();
  v39[4] = MEMORY[0x1E0D24668];
  sub_1AE52F6A8(v39);
  sub_1AE925380();
  v40[3] = sub_1AE924C9C();
  v40[4] = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8(v40);
  sub_1AE501548((uint64_t *)&unk_1ED318F20);
  sub_1AE5BA550((unint64_t *)&qword_1ED30F950, (uint64_t *)&unk_1ED318F20, MEMORY[0x1E0DEB3D0]);
  sub_1AE578E74();
  sub_1AE926058();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v39);
  sub_1AE925320();
  (*(void (**)(unint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 8))(v7, v4);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v40);
  sub_1AE5BA550((unint64_t *)&qword_1ED30FFD0, &qword_1ED318B60, MEMORY[0x1E0D24290]);
  v12 = (char *)v38;
  isUniquelyReferenced_nonNull_native = sub_1AE924B70();
  v7 = (unint64_t)v12;
  result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v10, v8);
  if (v12)
    return result;
  if (!(isUniquelyReferenced_nonNull_native >> 62))
  {
    v4 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_5;
LABEL_31:
    v14 = (uint64_t *)MEMORY[0x1E0DEE9E0];
LABEL_32:
    result = swift_bridgeObjectRelease_n();
    *v31 = v14;
    return result;
  }
  swift_bridgeObjectRetain_n();
  v4 = sub_1AE926AD8();
  swift_bridgeObjectRelease();
  if (!v4)
    goto LABEL_31;
LABEL_5:
  v35 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  v14 = (uint64_t *)MEMORY[0x1E0DEE9E0];
  v8 = 4;
  v33 = v4;
  v34 = 0x80000001AE988C20;
  v32 = isUniquelyReferenced_nonNull_native;
  while (1)
  {
    a2 = (uint64_t *)(v8 - 4);
    if (v35)
    {
      v15 = MEMORY[0x1AF453B80](v8 - 4, isUniquelyReferenced_nonNull_native);
    }
    else
    {
      v15 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v8);
      swift_retain();
    }
    if (__OFADD__(a2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v38 = v8 - 3;
    sub_1AE572374();
    if (v7)
      break;
    v16 = v40[0];
    v17 = sub_1AE573E34();
    if (v18)
    {
      v10 = v18;
      v36 = v15;
      v37 = 0;
      v19 = v17;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v39[0] = (uint64_t)v14;
      a2 = v14;
      v20 = sub_1AE536D68();
      if (__OFADD__(v14[2], (v21 & 1) == 0))
        goto LABEL_27;
      v7 = v20;
      v4 = v21;
      sub_1AE501548(&qword_1EEDA28D8);
      a2 = v39;
      v22 = sub_1AE926A54();
      isUniquelyReferenced_nonNull_native = v32;
      if ((v22 & 1) != 0)
      {
        a2 = (uint64_t *)v39[0];
        v23 = sub_1AE536D68();
        if ((v4 & 1) != (v24 & 1))
          goto LABEL_35;
        v7 = v23;
      }
      v14 = (uint64_t *)v39[0];
      if ((v4 & 1) != 0)
      {
        v25 = (uint64_t *)(*(_QWORD *)(v39[0] + 56) + 16 * v7);
        *v25 = v19;
        v25[1] = (uint64_t)v10;
        swift_bridgeObjectRelease();
      }
      else
      {
        *(_QWORD *)(v39[0] + 8 * (v7 >> 6) + 64) |= 1 << v7;
        *(_QWORD *)(v14[6] + 8 * v7) = v16;
        v27 = (uint64_t *)(v14[7] + 16 * v7);
        *v27 = v19;
        v27[1] = (uint64_t)v10;
        v28 = v14[2];
        v29 = __OFADD__(v28, 1);
        v30 = v28 + 1;
        if (v29)
          goto LABEL_28;
        v14[2] = v30;
      }
      swift_release();
      swift_bridgeObjectRelease();
      v7 = (unint64_t)v37;
    }
    else
    {
      sub_1AE536D68();
      if ((v26 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        v39[0] = (uint64_t)v14;
        sub_1AE501548(&qword_1EEDA28D8);
        isUniquelyReferenced_nonNull_native = v32;
        sub_1AE926A54();
        v14 = (uint64_t *)v39[0];
        sub_1AE5962D8();
        sub_1AE926A6C();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    v4 = v33;
    ++v8;
    if (v38 == v33)
      goto LABEL_32;
  }
  swift_unexpectedError();
  __break(1u);
LABEL_35:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE8488F8@<X0>(unint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1AE847D14(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1AE848910@<X0>(char *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v2;

  return sub_1AE8483B8(a1, *(uint64_t **)(v2 + 16), a2);
}

ValueMetadata *type metadata accessor for PHPersonIdentifierMapView()
{
  return &type metadata for PHPersonIdentifierMapView;
}

uint64_t sub_1AE848938@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1AE925248();
  if ((v3 & 1) != 0)
  {
    *(_QWORD *)a1 = 0;
    *(_BYTE *)(a1 + 8) = 1;
  }
  else
  {
    sub_1AE52F66C();
    return sub_1AE5006C4();
  }
  return result;
}

uint64_t sub_1AE8489A0()
{
  uint64_t v0;
  char v1;
  uint64_t result;
  uint64_t v3;

  sub_1AE925248();
  if ((v1 & 1) != 0)
    return 0;
  sub_1AE5C8958();
  result = sub_1AE5006C4();
  if (!v0)
    return v3;
  return result;
}

uint64_t sub_1AE848A10@<X0>(unint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AE8488F8(a1, a2);
}

uint64_t sub_1AE848A24@<X0>(char *a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1AE848910(a1, a2);
}

void static PriorityQueue<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for PriorityQueue(0, a3, a3, a4);
  PriorityQueue.count.getter(v4, v5, v6, v7);
}

void sub_1AE848AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  PriorityQueue.count.getter(v4, a2, a3, a4);
}

void PriorityQueue.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AE501144(a1, *(_QWORD *)(a1 + 16), a3, a4);
  j___s20IntelligencePlatform4HeapV19underestimatedCountSivg();
}

uint64_t type metadata accessor for PriorityQueue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PriorityQueue);
}

void sub_1AE848B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  static PriorityQueue<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

void PriorityQueue.Iterator.next()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for PriorityQueue(0, *(_QWORD *)(a1 + 16), a3, a4);
  PriorityQueue.pop()(v4, v5, v6, v7);
}

uint64_t PriorityQueue.makeIterator()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_1AE769C3C(v5);
}

uint64_t sub_1AE848C20@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  PriorityQueue.makeIterator()(a1);
  v2 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1AE6263E0(v2);
}

void PriorityQueue.description.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE92691C();
  sub_1AE925F74();
  PriorityQueue.count.getter(a1, v2, v3, v4);
}

void sub_1AE848CE0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE926D18();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1AE769C3C(v1);
  MEMORY[0x1AF454B70](&protocol conformance descriptor for PriorityQueue<A>, v0);
  sub_1AE9262C8();
  sub_1AE9262B0();
  sub_1AE4FEEAC();
}

uint64_t sub_1AE848D98()
{
  uint64_t v1;

  sub_1AE926D48();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1AE848DD8()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE848DF8(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v2;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_retain();
  swift_release();
  v6 = (_OWORD *)a1[2];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1AE5006D0();
  if (!v8)
  {
    if (v7)
    {
      v10 = a2[4];
      a1[3] = v7;
      a1[4] = v10;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *v6 = *v2;
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  v9 = a2[4];
  a1[3] = v7;
  a1[4] = v9;
  swift_retain();
  swift_release();
LABEL_8:
  sub_1AE4F6624();
}

void sub_1AE848E98(uint64_t a1, uint64_t a2)
{
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  sub_1AE5006D0();
  if (!v7)
  {
    if (v6)
    {
      v9 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = v9;
      goto LABEL_8;
    }
LABEL_7:
    *v2 = *v3;
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v8;
  swift_release();
LABEL_8:
  sub_1AE4F6624();
}

uint64_t type metadata accessor for PriorityQueue.Iterator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PriorityQueue.Iterator);
}

uint64_t sub_1AE848F28()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 16) = xmmword_1AE963830;
  *(_QWORD *)(v0 + 32) = &unk_1E5DAF4F8;
  *(_OWORD *)(v0 + 40) = xmmword_1AE963840;
  *(_OWORD *)(v0 + 56) = xmmword_1AE963850;
  *(_QWORD *)(v0 + 72) = 0x80000001AE988C80;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1AE5158B8(0, 0);
  return v0;
}

uint64_t sub_1AE848FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  void *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t inited;
  char v51;
  uint64_t v52;
  void *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[4];
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  char v67;
  _OWORD v68[5];
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char v72;
  _OWORD v73[6];
  uint64_t v74;
  char v75;
  uint64_t v76;

  if (((1 << *(_BYTE *)(a6 + 64)) & 0x1FA) == 0 || (v10 = (_QWORD *)(a6 + 32), sub_1AE4F9094(), !*(_QWORD *)(a6 + 32)))
  {
LABEL_17:
    sub_1AE4FD604();
    *(_OWORD *)(a1 + 88) = xmmword_1AE934380;
    *(_BYTE *)(a1 + 104) = 0;
    return v22 & 1;
  }
  sub_1AE4FB930();
  v11 = sub_1AE515C74(112, 0xE100000000000000);
  swift_bridgeObjectRelease();
  if (!v11)
  {
LABEL_12:
    if (qword_1ED3193F0 != -1)
      swift_once();
    v23 = sub_1AE925B6C();
    sub_1AE4FB608(v23, (uint64_t)qword_1ED3193D8);
    v24 = (void *)sub_1AE925B54();
    v25 = sub_1AE9265EC();
    if (sub_1AE4FB89C(v25))
    {
      *(_WORD *)sub_1AE4F69B0() = 0;
      sub_1AE503BA0(&dword_1AE4F2000, v26, v27, "Pvp operator has empty predicates");
      sub_1AE5020A8();
    }

    goto LABEL_17;
  }
  sub_1AE4F9094();
  v12 = *(_QWORD *)(v11 + 16);
  sub_1AE4FB930();
  swift_release();
  v13 = sub_1AE898358(v12);
  if (!*(_QWORD *)(v13 + 16))
  {
    sub_1AE4F76D8();
    goto LABEL_12;
  }
  v14 = a2 + *(int *)(type metadata accessor for QueryContext() + 32);
  v15 = *(_QWORD *)(v14 + 88);
  v16 = *(_BYTE *)(v14 + 104);
  if (v15 >> 1 != 0xFFFFFFFF || (v16 & 0x1E) != 0)
  {
    v18 = *(_QWORD *)(v14 + 96);
    v19 = *(_QWORD *)(v14 + 80);
    v20 = *(_OWORD *)(v14 + 16);
    v68[0] = *(_OWORD *)v14;
    v68[1] = v20;
    v21 = *(_OWORD *)(v14 + 48);
    v68[2] = *(_OWORD *)(v14 + 32);
    v68[3] = v21;
    v68[4] = *(_OWORD *)(v14 + 64);
    v69 = v19;
    v70 = v15;
    v71 = v18;
    v72 = v16;
    memset(v61, 0, 24);
    v61[3] = v13;
    v62 = 0u;
    v63 = 0u;
    v64 = 0u;
    v65 = 0u;
    v66 = 0;
    v67 = 32;
    LOBYTE(v76) = 0;
    sub_1AE84D160((uint64_t)v61, (unsigned __int8 *)&v76, (uint64_t)v73);
    sub_1AE4F76D8();
    swift_bridgeObjectRelease_n();
    if (v6)
      return v22 & 1;
    v45 = v74;
    v46 = v75;
    v47 = v73[1];
    *(_OWORD *)a1 = v73[0];
    *(_OWORD *)(a1 + 16) = v47;
    v48 = v73[3];
    *(_OWORD *)(a1 + 32) = v73[2];
    *(_OWORD *)(a1 + 48) = v48;
    v49 = v73[5];
    *(_OWORD *)(a1 + 64) = v73[4];
    *(_OWORD *)(a1 + 80) = v49;
    *(_QWORD *)(a1 + 96) = v45;
    goto LABEL_52;
  }
  v61[0] = 0;
  v29 = MEMORY[0x1E0DEE9E8];
  v76 = MEMORY[0x1E0DEE9E8];
  swift_beginAccess();
  if (*v10 && (v30 = sub_1AE515C74(111, 0xE100000000000000)) != 0)
  {
    v31 = v30;
    swift_endAccess();
    sub_1AE4F9094();
    v32 = *(_QWORD *)(v31 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    swift_endAccess();
    v32 = MEMORY[0x1E0DEE9D8];
  }
  v33 = *(_QWORD *)(v32 + 16);
  if (v33)
  {
    v59 = v13;
    v34 = (uint64_t *)(v32 + 40);
    while (1)
    {
      v36 = *(v34 - 1);
      v35 = *v34;
      sub_1AE4FB930();
      if ((sub_1AE926004() & 1) != 0)
      {
        if (!v76)
          goto LABEL_32;
      }
      else
      {
        v42 = v61[0];
        if (!v61[0])
          v42 = v29;
        v61[0] = v42;
      }
      sub_1AE555EFC((uint64_t)v68, v36, v35, v37, v38, v39, v40, v41, v59, v60);
LABEL_32:
      swift_bridgeObjectRelease();
      v34 += 2;
      if (!--v33)
      {
        sub_1AE4F67AC();
        v43 = v61[0];
        v44 = v76;
        v13 = v59;
        goto LABEL_37;
      }
    }
  }
  sub_1AE4F67AC();
  v43 = 0;
  v44 = MEMORY[0x1E0DEE9E8];
LABEL_37:
  sub_1AE501548((uint64_t *)&unk_1EED94CD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE933BD0;
  *(_QWORD *)(inited + 32) = v43;
  *(_QWORD *)(inited + 40) = v44;
  v51 = sub_1AE89DEDC(inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  sub_1AE4FB930();
  sub_1AE85EB44();
  if ((v51 & 1) == 0)
  {
    if (v44)
    {
      if (!*(_QWORD *)(v44 + 16))
      {
        sub_1AE4F67AC();
        v58 = 0;
        v57 = 0;
        v44 = 0;
LABEL_50:
        v46 = 32;
        goto LABEL_51;
      }
      if (v43)
      {
        sub_1AE501548((uint64_t *)&unk_1ED30FFC0);
        v57 = swift_allocObject();
        *(_OWORD *)(v57 + 16) = xmmword_1AE933BD0;
        *(_QWORD *)(v57 + 32) = 0;
        *(_QWORD *)(v57 + 40) = 0;
        *(_QWORD *)(v57 + 48) = 0;
        *(_QWORD *)(v57 + 56) = v13;
        *(_QWORD *)(v57 + 64) = 0;
        *(_QWORD *)(v57 + 72) = v43;
        *(_OWORD *)(v57 + 80) = 0u;
        *(_OWORD *)(v57 + 96) = 0u;
        *(_OWORD *)(v57 + 112) = 0u;
        *(_QWORD *)(v57 + 128) = 0;
        *(_BYTE *)(v57 + 136) = 32;
        *(_QWORD *)(v57 + 144) = 0;
        *(_QWORD *)(v57 + 152) = 0;
        *(_QWORD *)(v57 + 160) = 0;
        *(_QWORD *)(v57 + 168) = v13;
        *(_QWORD *)(v57 + 176) = 0;
        *(_QWORD *)(v57 + 184) = 0;
        *(_QWORD *)(v57 + 192) = 0;
        *(_QWORD *)(v57 + 200) = v44;
        *(_OWORD *)(v57 + 208) = 0u;
        *(_OWORD *)(v57 + 224) = 0u;
        *(_QWORD *)(v57 + 240) = 0;
        *(_BYTE *)(v57 + 248) = 32;
        swift_bridgeObjectRetain();
        v13 = 0;
        v43 = 0;
        v44 = 0;
        v46 = 0;
        v58 = 1;
LABEL_51:
        *(_QWORD *)a1 = v58;
        *(_QWORD *)(a1 + 8) = v57;
        *(_QWORD *)(a1 + 16) = 0;
        *(_QWORD *)(a1 + 24) = v13;
        *(_QWORD *)(a1 + 32) = 0;
        *(_QWORD *)(a1 + 40) = v43;
        *(_QWORD *)(a1 + 48) = 0;
        *(_QWORD *)(a1 + 56) = v44;
        *(_OWORD *)(a1 + 64) = 0u;
        *(_OWORD *)(a1 + 80) = 0u;
        *(_QWORD *)(a1 + 96) = 0;
LABEL_52:
        v22 = 1;
        *(_BYTE *)(a1 + 104) = v46;
        return v22 & 1;
      }
      swift_bridgeObjectRelease_n();
    }
    v58 = 0;
    v57 = 0;
    goto LABEL_50;
  }
  sub_1AE4F76D8();
  if (qword_1ED3193F0 != -1)
    swift_once();
  v52 = sub_1AE925B6C();
  sub_1AE4FB608(v52, (uint64_t)qword_1ED3193D8);
  v53 = (void *)sub_1AE925B54();
  v54 = sub_1AE9265EC();
  if (sub_1AE4FB89C(v54))
  {
    *(_WORD *)sub_1AE4F69B0() = 0;
    sub_1AE503BA0(&dword_1AE4F2000, v55, v56, "Pvp operator has empty terms for O arg");
    sub_1AE5020A8();
  }

  sub_1AE4FD604();
  *(_OWORD *)(a1 + 88) = xmmword_1AE934380;
  *(_BYTE *)(a1 + 104) = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = 0;
  return v22 & 1;
}

uint64_t sub_1AE849524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t result;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[9];

  v4 = sub_1AE88163C();
  v5 = sub_1AE88163C();
  v6 = MEMORY[0x1E0DEE9D8];
  v44 = *(_QWORD *)(a3 + 16);
  if (!v44)
  {
    v9 = MEMORY[0x1E0DEE9D8];
LABEL_69:
    sub_1AE4F66E8();
    swift_bridgeObjectRelease();
    type metadata accessor for ResultGraph();
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = sub_1AE925C98();
    *(_QWORD *)(v37 + 24) = v6;
    v55[0] = 0;
    v38 = swift_bridgeObjectRetain();
    sub_1AE85DA40(v38, v55);
    sub_1AE4F81B8();
    return v9;
  }
  v47 = *(_QWORD *)(v4 + 16);
  v43 = a3 + 32;
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)v4;
  v8 = 0;
  v41 = v7;
  v39 = (_QWORD *)(v5 + 72);
  v40 = v7 + 9;
  v9 = MEMORY[0x1E0DEE9D8];
  v42 = (_QWORD *)v5;
  while (1)
  {
    v52 = v9;
    v10 = (uint64_t *)(v43 + 88 * v8);
    v54 = v10[1];
    v11 = v10[7];
    v12 = v10[9];
    v53 = v10[10];
    v48 = v10[8];
    v49 = v10[6];
    if (v11)
      v13 = v10[6];
    else
      v13 = 0;
    if (v11)
      v14 = v10[7];
    else
      v14 = 0xE000000000000000;
    if (v12)
      v15 = v10[8];
    else
      v15 = 0;
    if (v12)
      v16 = v10[9];
    else
      v16 = 0xE000000000000000;
    if (!v47)
      goto LABEL_33;
    v17 = v10[2];
    v45 = *v10;
    v46 = v10[3];
    v50 = v10[5];
    v51 = v10[4];
    v18 = v41[4] == v13 && v41[5] == v14;
    if (!v18 && (sub_1AE5006E4() & 1) == 0)
    {
      if (v47 == 1)
        goto LABEL_33;
      if (v41[6] != v13 || v41[7] != v14)
      {
        result = sub_1AE5006E4();
        if ((result & 1) == 0)
          break;
      }
    }
LABEL_21:
    swift_bridgeObjectRetain();
    sub_1AE4F6A24();
    sub_1AE4F6A24();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AE4F81B8();
    v19 = v42[2];
    if (!v19 || (v42[4] == v15 ? (v20 = v42[5] == v16) : (v20 = 0), v20 || (sub_1AE4FF308() & 1) != 0))
    {
LABEL_27:
      sub_1AE4F67AC();
      v9 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE84999C();
        v9 = v35;
      }
      v21 = *(_QWORD *)(v9 + 16);
      v22 = v50;
      if (v21 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1AE84999C();
        v22 = v50;
        v9 = v36;
      }
      *(_QWORD *)(v9 + 16) = v21 + 1;
      v23 = (_QWORD *)(v9 + 88 * v21);
      v23[4] = v45;
      v23[5] = v54;
      v23[6] = v17;
      v23[7] = v46;
      v23[8] = v51;
      v23[9] = v22;
      v23[10] = v49;
      v23[11] = v11;
      v23[12] = v48;
      v23[13] = v12;
      v23[14] = v53;
      goto LABEL_34;
    }
    if (v19 != 1)
    {
      if (v42[6] == v15 && v42[7] == v16)
        goto LABEL_27;
      result = sub_1AE4FF308();
      if ((result & 1) != 0)
        goto LABEL_27;
      if (v19 != 2)
      {
        v31 = v39;
        v32 = 2;
        do
        {
          v33 = v32 + 1;
          if (__OFADD__(v32, 1))
            goto LABEL_71;
          if (*(v31 - 1) == v15 && *v31 == v16)
            goto LABEL_27;
          result = sub_1AE4FF308();
          if ((result & 1) != 0)
            goto LABEL_27;
          v31 += 2;
          ++v32;
        }
        while (v33 != v19);
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE4F67AC();
    v9 = v52;
LABEL_34:
    if (++v8 == v44)
    {
      sub_1AE4F66E8();
      v6 = MEMORY[0x1E0DEE9D8];
      goto LABEL_69;
    }
  }
  if (v47 == 2)
  {
LABEL_33:
    swift_bridgeObjectRetain();
    sub_1AE4F6A24();
    sub_1AE4F6A24();
    sub_1AE4FB930();
    swift_bridgeObjectRetain();
    sub_1AE4F66E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE4F67AC();
    sub_1AE4F81B8();
    v9 = v52;
    goto LABEL_34;
  }
  v26 = v40;
  v27 = 2;
  while (1)
  {
    v28 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (*(v26 - 1) == v13 && *v26 == v14)
      goto LABEL_21;
    result = sub_1AE5006E4();
    if ((result & 1) != 0)
      goto LABEL_21;
    v26 += 2;
    ++v27;
    if (v28 == v47)
      goto LABEL_33;
  }
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Pvp()
{
  return objc_opt_self();
}

void sub_1AE84999C()
{
  sub_1AE519F94();
}

uint64_t sub_1AE8499A8()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 16) = xmmword_1AE963870;
  *(_QWORD *)(v0 + 32) = &unk_1E5DB0010;
  *(_OWORD *)(v0 + 40) = xmmword_1AE934390;
  *(_OWORD *)(v0 + 56) = xmmword_1AE963880;
  *(_QWORD *)(v0 + 72) = 0x80000001AE988CD0;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1AE5158B8(0, 0);
  return v0;
}

uint64_t sub_1AE849A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x1E0DEE9D8];
    v7 = 112;
    while (1)
    {
      v8 = *(_QWORD *)(a3 + v7);
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_QWORD *)(v6 + 16);
      if (__OFADD__(v10, v9))
        break;
      swift_bridgeObjectRetain();
      if (!swift_isUniquelyReferenced_nonNull_native() || v10 + v9 > *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1AE519F94();
        v6 = v11;
      }
      if (*(_QWORD *)(v8 + 16))
      {
        v12 = *(_QWORD *)(v6 + 16);
        if ((*(_QWORD *)(v6 + 24) >> 1) - v12 < v9)
          goto LABEL_24;
        v13 = v6 + 88 * v12 + 32;
        if (v8 + 32 < v13 + 88 * v9 && v13 < v8 + 32 + 88 * v9)
          goto LABEL_26;
        swift_arrayInitWithCopy();
        if (v9)
        {
          v15 = *(_QWORD *)(v6 + 16);
          v16 = __OFADD__(v15, v9);
          v17 = v15 + v9;
          if (v16)
            goto LABEL_25;
          *(_QWORD *)(v6 + 16) = v17;
        }
      }
      else if (v9)
      {
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      v7 += 88;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        v4 = MEMORY[0x1E0DEE9D8];
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_1AE926B20();
    __break(1u);
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    type metadata accessor for ResultGraph();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_1AE925C98();
    *(_QWORD *)(v18 + 24) = v4;
    v21 = 2;
    v19 = swift_bridgeObjectRetain();
    sub_1AE85DA40(v19, &v21);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t type metadata accessor for Qget()
{
  return objc_opt_self();
}

uint64_t sub_1AE849C7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1AE8499A8();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  *(_OWORD *)(v0 + 16) = xmmword_1AE9638A0;
  *(_QWORD *)(v0 + 32) = &unk_1E5DB0AD0;
  *(_OWORD *)(v0 + 40) = xmmword_1AE934390;
  *(_OWORD *)(v0 + 56) = xmmword_1AE9638B0;
  *(_QWORD *)(v0 + 72) = 0x80000001AE988D30;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  sub_1AE50114C(v1, v2);
  return v0;
}

void sub_1AE849D20(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

void sub_1AE849D4C(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

void sub_1AE849D60(_BYTE *a1@<X8>)
{
  *a1 = 6;
  JUMPOUT(0x1AE849D50);
}

void sub_1AE849D6C()
{
  uint64_t v0;

  sub_1AE5322E0();
  swift_allocError();
  *(_QWORD *)v0 = 0xD000000000000028;
  *(_QWORD *)(v0 + 8) = 0x80000001AE988D80;
  *(_BYTE *)(v0 + 16) = 2;
  swift_willThrow();
  JUMPOUT(0x1AE849D50);
}

uint64_t sub_1AE849DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  char v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  char v25;
  __int128 *v26;
  unint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  unsigned __int8 v44;
  _OWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char v62;
  _OWORD v63[3];
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  char v68;

  if (((1 << *(_BYTE *)(a6 + 64)) & 0x1FA) != 0)
  {
    v10 = (_QWORD *)(a6 + 32);
    sub_1AE4FE110();
    if (*(_QWORD *)(a6 + 32) && (v11 = sub_1AE515C74(115, 0xE100000000000000)) != 0)
    {
      v12 = v11;
      sub_1AE4FF20C();
      sub_1AE4F9094();
      v13 = *(_QWORD *)(v12 + 16);
      sub_1AE4FB930();
      swift_release();
    }
    else
    {
      sub_1AE4FF20C();
      v13 = MEMORY[0x1E0DEE9D8];
    }
    v14 = sub_1AE898358(v13);
    sub_1AE4FE110();
    if (*v10 && (v15 = sub_1AE515C74(112, 0xE100000000000000)) != 0)
    {
      v16 = v15;
      sub_1AE4FF20C();
      sub_1AE4F9094();
      v17 = *(_QWORD *)(v16 + 16);
      sub_1AE4FB930();
      swift_release();
    }
    else
    {
      sub_1AE4FF20C();
      v17 = MEMORY[0x1E0DEE9D8];
    }
    v18 = sub_1AE898358(v17);
    sub_1AE501548((uint64_t *)&unk_1EED94CD0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AE933BD0;
    *(_QWORD *)(inited + 32) = v14;
    *(_QWORD *)(inited + 40) = v18;
    v20 = sub_1AE89DEDC(inited);
    swift_setDeallocating();
    swift_bridgeObjectRetain();
    sub_1AE4FB930();
    sub_1AE85EB44();
    if ((v20 & 1) == 0)
    {
      v26 = (__int128 *)(a2 + *(int *)(type metadata accessor for QueryContext() + 32));
      v27 = *((_QWORD *)v26 + 11);
      v28 = *((_BYTE *)v26 + 104);
      v29 = 32;
      if (v27 >> 1 != 0xFFFFFFFF || (*((_BYTE *)v26 + 104) & 0x1E) != 0)
      {
        v37 = *((_QWORD *)v26 + 12);
        v38 = *((_QWORD *)v26 + 10);
        v39 = v26[1];
        v54 = *v26;
        v40 = v26[2];
        v41 = v26[3];
        v55 = v39;
        v56 = v40;
        v42 = v26[4];
        v57 = v41;
        v58 = v42;
        v59 = v38;
        v60 = v27;
        v61 = v37;
        v62 = v28;
        memset(v45, 0, sizeof(v45));
        v46 = 0;
        v47 = v14;
        v48 = 0;
        v49 = v18;
        v51 = 0;
        v52 = 0;
        v50 = 0;
        v53 = 32;
        v44 = 1;
        sub_1AE84D160((uint64_t)v45, &v44, (uint64_t)v63);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        if (v6)
          return v25 & 1;
        v31 = v63[0];
        v34 = v63[1];
        v35 = v63[2];
        v30 = v64;
        v32 = v65;
        v33 = v66;
        v36 = v67;
        v29 = v68;
      }
      else
      {
        v30 = 0;
        v31 = 0uLL;
        v32 = (unint64_t)v14;
        v33 = (unint64_t)v18;
        v34 = 0uLL;
        v35 = 0uLL;
        v36 = 0uLL;
      }
      *(_OWORD *)a1 = v31;
      *(_OWORD *)(a1 + 16) = v34;
      *(_OWORD *)(a1 + 32) = v35;
      *(_QWORD *)(a1 + 48) = v30;
      *(_OWORD *)(a1 + 56) = v32;
      *(_OWORD *)(a1 + 72) = v33;
      *(_OWORD *)(a1 + 88) = v36;
      v25 = 1;
      *(_BYTE *)(a1 + 104) = v29;
      return v25 & 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED3193F0 != -1)
      swift_once();
    v21 = sub_1AE925B6C();
    sub_1AE4FB608(v21, (uint64_t)qword_1ED3193D8);
    v22 = sub_1AE925B54();
    v23 = sub_1AE9265EC();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1AE4F2000, v22, v23, "Qpropget operator has all empty terms", v24, 2u);
      MEMORY[0x1AF454C78](v24, -1, -1);
    }

  }
  v25 = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 88) = xmmword_1AE934380;
  *(_BYTE *)(a1 + 104) = 0;
  return v25 & 1;
}

uint64_t sub_1AE84A148()
{
  uint64_t v0;

  sub_1AE50114C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Qpropget()
{
  return objc_opt_self();
}

uint64_t sub_1AE84A1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59[13];
  unsigned __int8 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  char v68;
  uint64_t v69;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v45 = a2;
    v58 = v2;
    v69 = MEMORY[0x1E0DEE9D8];
    sub_1AE521758(0, v3, 0);
    v5 = v69;
    v6 = a1 + 72;
    while (1)
    {
      v46 = v3;
      v56 = v5;
      v7 = *(_QWORD *)(v6 - 32);
      v8 = *(_QWORD *)(v6 - 24);
      v9 = *(_QWORD *)(v6 - 16);
      v10 = *(_QWORD *)(v6 - 8);
      v11 = *(_QWORD *)v6;
      v12 = *(_QWORD *)(v6 + 8);
      v13 = *(_QWORD *)(v6 + 16);
      v14 = *(_QWORD *)(v6 + 24);
      v15 = *(_QWORD *)(v6 + 32);
      v16 = *(_QWORD *)(v6 + 40);
      v17 = *(_QWORD *)(v6 + 48);
      v5 = *(_QWORD *)(v6 + 56);
      v18 = *(_BYTE *)(v6 + 64);
      v59[0] = *(_QWORD *)(v6 - 40);
      v59[1] = v7;
      v59[2] = v8;
      v59[3] = v9;
      v59[4] = v10;
      v59[5] = v11;
      v59[6] = v12;
      v59[7] = v13;
      v59[8] = v14;
      v59[9] = v15;
      v59[10] = v16;
      v59[11] = v17;
      v59[12] = v5;
      v60 = v18;
      v54 = v7;
      *(_QWORD *)&v53 = v8;
      *(_QWORD *)&v52 = v9;
      *(_QWORD *)&v51 = v10;
      v49 = v12;
      *(_QWORD *)&v50 = v11;
      v48 = v13;
      sub_1AE526458(v59[0], v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v5, v18);
      v19 = sub_1AE84B270(&v61, v59);
      if (v58)
        break;
      v58 = 0;
      sub_1AE4FD61C((uint64_t)v19, v20, v21, v22, v23, v24, v25, v26, v39, v40, v41, v42, v43, v44, v45, v46, v48, v49, v50,
        *((uint64_t *)&v50 + 1),
        v51,
        *((uint64_t *)&v51 + 1),
        v52,
        *((uint64_t *)&v52 + 1),
        v53,
        *((uint64_t *)&v53 + 1),
        v54);
      v27 = v61;
      v28 = v62;
      v29 = v63;
      v30 = v64;
      v31 = v65;
      v32 = v66;
      v33 = v67;
      v34 = v68;
      v5 = v56;
      v36 = *(_QWORD *)(v56 + 16);
      v35 = *(_QWORD *)(v56 + 24);
      v69 = v56;
      if (v36 >= v35 >> 1)
      {
        v55 = v62;
        v57 = v61;
        v52 = v64;
        v53 = v63;
        v50 = v66;
        v51 = v65;
        sub_1AE521758(v35 > 1, v36 + 1, 1);
        v32 = v50;
        v31 = v51;
        v30 = v52;
        v29 = v53;
        v28 = v55;
        v27 = v57;
        v5 = v69;
      }
      v6 += 112;
      *(_QWORD *)(v5 + 16) = v36 + 1;
      v37 = v5 + 112 * v36;
      *(_OWORD *)(v37 + 32) = v27;
      *(_OWORD *)(v37 + 48) = v28;
      *(_OWORD *)(v37 + 64) = v29;
      *(_OWORD *)(v37 + 80) = v30;
      *(_OWORD *)(v37 + 96) = v31;
      *(_OWORD *)(v37 + 112) = v32;
      *(_QWORD *)(v37 + 128) = v33;
      *(_BYTE *)(v37 + 136) = v34;
      v3 = v47 - 1;
      if (v47 == 1)
      {
        swift_release();
        return v5;
      }
    }
    sub_1AE4FD61C((uint64_t)v19, v20, v21, v22, v23, v24, v25, v26, v39, v40, v41, v42, v43, v44, v45, v46, v48, v49, v50,
      *((uint64_t *)&v50 + 1),
      v51,
      *((uint64_t *)&v51 + 1),
      v52,
      *((uint64_t *)&v52 + 1),
      v53,
      *((uint64_t *)&v53 + 1),
      v54);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

uint64_t sub_1AE84A39C()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 16) = xmmword_1AE9638E0;
  *(_QWORD *)(v0 + 32) = &unk_1E5DB04C0;
  *(_OWORD *)(v0 + 40) = xmmword_1AE934390;
  *(_OWORD *)(v0 + 56) = xmmword_1AE9638F0;
  *(_QWORD *)(v0 + 72) = 0x80000001AE988DE0;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1AE5158B8(0, 0);
  return v0;
}

uint64_t sub_1AE84A43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *a5;
  sub_1AE84A504(*a5);
  if ((v6 & 1) != 0)
    return 0;
  result = swift_beginAccess();
  if (*(_QWORD *)(v5 + 32))
  {
    v8 = sub_1AE4F9740();
    v10 = sub_1AE515C74(v8, v9);
    if (v10)
    {
      v11 = v10;
      swift_endAccess();
      sub_1AE4F9094();
      if (*(_QWORD *)(v11 + 24))
      {
        v12 = swift_retain();
        sub_1AE84A5E0(v12, 1);
        sub_1AE4F6700();
      }
      swift_release();
    }
    else
    {
      swift_endAccess();
    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_1AE84A504(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE84A538()
{
  unsigned __int8 v0;

  sub_1AE61E2FC();
  sub_1AE508D78();
  v0 = sub_1AE926D60();
  swift_bridgeObjectRelease();
  return (v0 ^ 1) & 1;
}

uint64_t sub_1AE84A5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a2 > 24)
  {
    sub_1AE92691C();
    sub_1AE925F74();
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE5322E0();
    swift_allocError();
    *(_QWORD *)v20 = 0;
    *(_QWORD *)(v20 + 8) = 0xE000000000000000;
    *(_BYTE *)(v20 + 16) = 3;
    return swift_willThrow();
  }
  *(_BYTE *)(a1 + 64) = 2;
  result = swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 32);
  if (!v6)
    goto LABEL_31;
  v7 = v6 + 64;
  v8 = 1 << *(_BYTE *)(v6 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v6 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v21 = a2 + 1;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  while (v10)
  {
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v14 = v13 | (v12 << 6);
LABEL_19:
    v18 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v14);
    result = swift_beginAccess();
    if (*(_QWORD *)(v18 + 24))
    {
      swift_retain();
      v19 = swift_retain();
      sub_1AE84A5E0(v19, v21);
      if (v2)
      {
        swift_release();
        swift_release();
        return swift_release();
      }
      swift_release();
      result = swift_release();
    }
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v12 >= v11)
    return swift_release();
  v16 = *(_QWORD *)(v7 + 8 * v12);
  if (v16)
  {
LABEL_18:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_19;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v11)
    return swift_release();
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_17;
  v17 = v12 + 2;
  if (v12 + 2 >= v11)
    return swift_release();
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
    goto LABEL_17;
  v17 = v12 + 3;
  if (v12 + 3 >= v11)
    return swift_release();
  v16 = *(_QWORD *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_17:
    v12 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v11)
      return swift_release();
    v16 = *(_QWORD *)(v7 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_18;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1AE84A864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned __int8 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  unint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  unint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  unint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  unint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  void (*v375)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  unsigned __int8 v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  unint64_t v390;
  unint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  _QWORD v414[3];
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  unint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  unint64_t v423;
  unint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  unsigned __int8 v431;
  uint64_t v432;
  unint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  unint64_t v437;
  unint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  unint64_t v443;
  uint64_t v444;
  unsigned __int8 v445;
  _QWORD v446[3];
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;

  sub_1AE84A504(a6);
  if ((v13 & 1) == 0)
  {
    v18 = a2 + *(int *)(type metadata accessor for QueryContext() + 32);
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v23 = *(_QWORD *)(v18 + 32);
    v24 = *(_QWORD *)(v18 + 40);
    v25 = *(_QWORD *)(v18 + 48);
    v26 = *(_QWORD *)(v18 + 56);
    v27 = *(_QWORD *)(v18 + 64);
    v28 = *(_QWORD *)(v18 + 72);
    v29 = *(_QWORD *)(v18 + 80);
    v30 = *(_QWORD *)(v18 + 88);
    v31 = *(_QWORD *)(v18 + 96);
    LOBYTE(v18) = *(_BYTE *)(v18 + 104);
    *(_QWORD *)a1 = v19;
    *(_QWORD *)(a1 + 8) = v20;
    *(_QWORD *)(a1 + 16) = v21;
    *(_QWORD *)(a1 + 24) = v22;
    *(_QWORD *)(a1 + 32) = v23;
    *(_QWORD *)(a1 + 40) = v24;
    *(_QWORD *)(a1 + 48) = v25;
    *(_QWORD *)(a1 + 56) = v26;
    *(_QWORD *)(a1 + 64) = v27;
    *(_QWORD *)(a1 + 72) = v28;
    *(_QWORD *)(a1 + 80) = v29;
    *(_QWORD *)(a1 + 88) = v30;
    *(_QWORD *)(a1 + 96) = v31;
    *(_BYTE *)(a1 + 104) = v18;
    sub_1AE582F40(v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v18);
    v17 = 0;
    return v17 & 1;
  }
  v394 = a4;
  sub_1AE4F9740();
  sub_1AE881C50();
  if (v14)
  {
    v15 = v14;
    sub_1AE4F9094();
    v16 = *(_QWORD *)(v15 + 24);
    swift_retain();
    sub_1AE4FC564();
    if (v16)
    {
      v449 = v16;
      sub_1AE4F7A84((uint64_t)&v449, v394, (uint64_t)v446);
      if (v6)
      {
        sub_1AE507978();
        return v17 & 1;
      }
      v382 = v447;
      v389 = v16;
      v36 = v448;
      sub_1AE4F9858(v446, v447);
      v375 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 64);
      swift_retain();
      v135 = v36;
      v37 = a5;
      v375(&v432, a2, a3, v394, a5, v389, a6, v382);
      sub_1AE4FB730();
      v39 = v432;
      v40 = v433;
      v41 = v441;
      v383 = v445;
      v376 = v437;
      v362 = v440;
      if (v443 >> 1 == 0xFFFFFFFF && (v445 & 0x1E) == 0)
      {
        v42 = v436;
        v43 = v435;
        v44 = v434;
        v45 = v433;
        v355 = v441;
        v368 = v442;
        v390 = v443;
        v395 = v444;
        v46 = v438;
        v47 = v439;
        swift_release();
        *(_QWORD *)a1 = v39;
        *(_QWORD *)(a1 + 8) = v45;
        *(_QWORD *)(a1 + 16) = v44;
        *(_QWORD *)(a1 + 24) = v43;
        *(_QWORD *)(a1 + 32) = v42;
        *(_QWORD *)(a1 + 40) = v376;
        *(_QWORD *)(a1 + 48) = v46;
        *(_QWORD *)(a1 + 56) = v47;
        *(_QWORD *)(a1 + 64) = v362;
        *(_QWORD *)(a1 + 72) = v355;
        *(_QWORD *)(a1 + 80) = v368;
        *(_QWORD *)(a1 + 88) = v390;
        *(_QWORD *)(a1 + 96) = v395;
        *(_BYTE *)(a1 + 104) = v383;
        sub_1AE84CCD4();
        v17 = 0;
        return v17 & 1;
      }
      v335 = v438;
      v343 = v439;
      v319 = v435;
      v327 = v436;
      v311 = v434;
      if ((v445 & 0x10) != 0)
      {
        v432 = 0;
        v433 = 0xE000000000000000;
        v56 = v438;
        v57 = v39;
        v58 = v437;
        v59 = v436;
        v60 = v435;
        v61 = v434;
        v62 = v40;
        v369 = v442;
        v391 = v443;
        v396 = v444;
        sub_1AE92691C();
        v418 = v432;
        v419 = v433;
        sub_1AE925F74();
        v432 = v57;
        v433 = v62;
        v434 = v61;
        v435 = v60;
        v436 = v59;
        v437 = v58;
        v438 = v56;
        v439 = v343;
        v440 = v362;
        v441 = v41;
        v442 = v369;
        v443 = v391;
        v444 = v396;
        v445 = v383;
        sub_1AE926A48();
        sub_1AE582FC0(v57, v62, v311, v319, v327, v376, v335, v343, v362, v41, v369, v391, v396, v383);
        v63 = v419;
        sub_1AE5322E0();
        sub_1AE4F6778();
        *v64 = v418;
        v64[1] = v63;
        sub_1AE4FBB3C((uint64_t)v64, 2);
        swift_release();
        sub_1AE84CCD4();
        return v17 & 1;
      }
      v418 = v432;
      v419 = v433;
      v420 = v434;
      v421 = v435;
      v422 = v436;
      v423 = v437;
      v424 = v438;
      v425 = v439;
      v426 = v440;
      v427 = v441;
      v428 = v442;
      v429 = v443;
      v430 = v444;
      v431 = v445;
      v289 = v433;
      v297 = v432;
      sub_1AE84B270((uint64_t)&v418);
      sub_1AE5020B8(v48, v49, v50, v51, v52, v53, v54, v55, v135, v143, v151, v159, v165, v171, v177, v185, v193, v201, v209,
        v217,
        v225,
        v233,
        v241,
        v249,
        v257,
        v265,
        v273,
        v281,
        v289,
        v297,
        0,
        v311,
        v319,
        v327,
        v335,
        v343,
        v37,
        a3,
        v362,
        a2,
        v376,
        v383);
      v65 = v433;
      v363 = v434;
      v377 = v435;
      v384 = v436;
      v66 = v437;
      v67 = v438;
      v68 = v439;
      sub_1AE50592C();
      v69 = sub_1AE84B648(a6, *(_QWORD *)(a2 + 8));
      if (*(_QWORD *)(v69 + 16))
      {
        sub_1AE501548((uint64_t *)&unk_1ED30FFC0);
        v70 = swift_allocObject();
        v71 = v65;
        v65 = v70;
        *(_OWORD *)(v70 + 16) = xmmword_1AE933BD0;
        *(_QWORD *)(v70 + 32) = v344;
        *(_QWORD *)(v70 + 40) = v71;
        *(_QWORD *)(v70 + 48) = v363;
        *(_QWORD *)(v70 + 56) = v377;
        *(_QWORD *)(v70 + 64) = v384;
        *(_QWORD *)(v70 + 72) = v66;
        *(_QWORD *)(v70 + 80) = v67;
        *(_QWORD *)(v70 + 88) = v68;
        *(_QWORD *)(v70 + 96) = v336;
        *(_QWORD *)(v70 + 104) = v328;
        *(_QWORD *)(v70 + 112) = v320;
        *(_QWORD *)(v70 + 120) = v312;
        *(_QWORD *)(v70 + 128) = v298;
        *(_BYTE *)(v70 + 136) = v290;
        v72 = sub_1AE898358(v69);
        v336 = 0;
        v344 = 0;
        v363 = 0;
        v377 = 0;
        v384 = 0;
        v266 = 0;
        v274 = 0;
        v282 = 0;
        v320 = 0;
        v328 = 0;
        v312 = 0;
        v298 = 0;
        LODWORD(v290) = 0;
        *(_QWORD *)(v65 + 144) = 0;
        *(_QWORD *)(v65 + 152) = v72;
        *(_BYTE *)(v65 + 248) = 32;
        *(_OWORD *)(v65 + 160) = 0u;
        *(_OWORD *)(v65 + 176) = 0u;
        *(_OWORD *)(v65 + 192) = 0u;
        *(_OWORD *)(v65 + 208) = 0u;
        *(_OWORD *)(v65 + 224) = 0u;
        *(_QWORD *)(v65 + 240) = 0;
      }
      else
      {
        v274 = v66;
        v282 = v68;
        sub_1AE4F9038();
        v266 = v67;
      }
      sub_1AE5067A8();
      sub_1AE881C50();
      v258 = v65;
      if (v73)
      {
        v74 = v73;
        sub_1AE4F9094();
        v75 = *(_QWORD *)(v74 + 24);
        sub_1AE4F943C();
        sub_1AE4FC564();
        v76 = v266;
        if (!v75)
        {
          sub_1AE507978();
          v77 = v274;
          v78 = v282;
          goto LABEL_31;
        }
        v417 = v75;
        v77 = v274;
        v78 = v282;
        if ((*(_BYTE *)(v75 + 80) & 1) != 0)
        {
          sub_1AE507978();
          sub_1AE4FB730();
          goto LABEL_31;
        }
        v250 = v75;
        sub_1AE4F7A84((uint64_t)&v417, v394, (uint64_t)v414);
        v80 = v415;
        v79 = v416;
        sub_1AE4F9858(v414, v415);
        v81 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 64);
        sub_1AE4F943C();
        v136 = v79;
        v81(&v432, v370, v356, v394, v349, v75, a6, v80);
        v305 = 0;
        sub_1AE4FB730();
        v210 = v432;
        v218 = v433;
        v226 = v434;
        v234 = v435;
        v242 = v436;
        v350 = v437;
        v357 = v438;
        v397 = v439;
        v194 = v441;
        v202 = v440;
        v186 = v442;
        if (v443 >> 1 != 0xFFFFFFFF || (v445 & 0x1E) != 0)
        {
          v90 = v415;
          v91 = v416;
          sub_1AE4F9858(v414, v415);
          v92 = (*(_QWORD *(**)(char *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 88))((char *)&v413 + 7, a2, v250, a6, v90, v91);
          if (HIBYTE(v413) && HIBYTE(v413) != 1)
          {
            sub_1AE503BB4((uint64_t)v92, v93, v94, v95, v96, v97, v98, v99, v79, v144, v152, v160, v166, v172, v178, v186, v194, v202, v210,
              v218,
              v226,
              v234,
              v242,
              v250,
              v258,
              v266,
              v274,
              v282,
              v290,
              v298,
              0,
              v312,
              v320,
              v328,
              v336);
            v100 = v314;
            v428 = v322;
            v429 = v314;
            v101 = v300;
            v430 = v300;
            v102 = v292;
            v431 = v292;
            sub_1AE4FF318(4u, v138, v146, v154, v162, v168, v174, v180, v188, v196, v204, v212, v220, v228, v236, v244, v252, v260, v268,
              v276,
              v284,
              v292,
              v300,
              v307,
              v314,
              v322,
              v330,
              v338,
              v344,
              v350,
              v357,
              v363,
              v370,
              v377,
              v384,
              v389,
              v397,
              v400,
              v401,
              v402,
              v403,
              v404,
              v405,
              v406,
              v407,
              v408,
              v409,
              v410,
              v411,
              v412,
              v413,
              SWORD1(v413),
              SWORD2(v413),
              BYTE6(v413));
            sub_1AE501158(v103, v104, v105, v106, v107, v108, v109, v110, v139, v147, v155, v100, v101, v102, v181, v189, v197, v205, v213,
              v221,
              v229,
              v237,
              v245,
              v253,
              v261,
              v269,
              v277,
              v285,
              v293,
              v301,
              v308,
              v315,
              v323,
              v331,
              v339,
              v345,
              v351,
              v358,
              v364,
              v371,
              v378,
              v385);
            sub_1AE508930();
            v111 = sub_1AE5095A8();
            sub_1AE5006F4(v111, v112, v113, v114, v115, v116, v117, v118, v140, v148, v156, v163, v169, v175, v182, v190, v198, v206, v214,
              v222,
              v230,
              v238,
              v246,
              v254,
              v262,
              v270,
              v278,
              v286,
              v294,
              v302,
              v309,
              v316,
              v324,
              v332,
              v340,
              v346,
              v352,
              v359,
              v365,
              v372,
              v379,
              v386,
              v392,
              v398);
            v305 = 0;
          }
          else
          {
            sub_1AE503BB4((uint64_t)v92, v93, v94, v95, v96, v97, v98, v99, v79, v144, v152, v160, v166, v172, v178, v186, v194, v202, v210,
              v218,
              v226,
              v234,
              v242,
              v250,
              v258,
              v266,
              v274,
              v282,
              v290,
              v298,
              0,
              v312,
              v320,
              v328,
              v336);
            v428 = v321;
            v429 = v313;
            v430 = v299;
            v431 = v291;
            sub_1AE4FF318(1u, v137, v145, v153, v161, v167, v173, v179, v187, v195, v203, v211, v219, v227, v235, v243, v251, v259, v267,
              v275,
              v283,
              v291,
              v299,
              v306,
              v313,
              v321,
              v329,
              v337,
              v344,
              v350,
              v357,
              v363,
              v370,
              v377,
              v384,
              v389,
              v397,
              v400,
              v401,
              v402,
              v403,
              v404,
              v405,
              v406,
              v407,
              v408,
              v409,
              v410,
              v411,
              v412,
              v413,
              SWORD1(v413),
              SWORD2(v413),
              BYTE6(v413));
            sub_1AE501158(v119, v120, v121, v122, v123, v124, v125, v126, v141, v149, v157, v317, v303, v295, v183, v191, v199, v207, v215,
              v223,
              v231,
              v239,
              v247,
              v255,
              v263,
              v271,
              v279,
              v287,
              v295,
              v303,
              0,
              v317,
              v325,
              v333,
              v341,
              v347,
              v353,
              v360,
              v366,
              v373,
              v380,
              v387);
            sub_1AE508930();
            v127 = sub_1AE5095A8();
            sub_1AE5006F4(v127, v128, v129, v130, v131, v132, v133, v134, v142, v150, v158, v164, v170, v176, v184, v192, v200, v208, v216,
              v224,
              v232,
              v240,
              v248,
              v256,
              v264,
              v272,
              v280,
              v288,
              v296,
              v304,
              v310,
              v318,
              v326,
              v334,
              v342,
              v348,
              v354,
              v361,
              v367,
              v374,
              v381,
              v388,
              v393,
              v399);
          }
          v363 = v434;
          v377 = v435;
          v384 = v436;
          v258 = v433;
          v266 = v438;
          v274 = v437;
          v282 = v439;
          sub_1AE50592C();
        }
        else
        {
          sub_1AE508930();
          v82 = sub_1AE5095A8();
        }
        sub_1AE84CD28(v82, v83, v84, v85, v86, v87, v88, v89, v136, v144, v152, v160, v166, v172, v178, v186, v194, v202, v210,
          v218,
          v226,
          v234,
          v242,
          v250,
          v258,
          v266,
          v274,
          v282,
          v290,
          v298,
          v305,
          v312,
          v320,
          v328,
          v336,
          v344,
          v350,
          v357,
          v363,
          v370,
          v377,
          v384,
          v389,
          v397,
          v400,
          v401,
          v402,
          v403,
          v404,
          v405,
          v406,
          v407,
          v408,
          v409,
          v410,
          v411,
          v412,
          v413,
          v414[0]);
      }
      else
      {
        sub_1AE507978();
      }
      v77 = v274;
      v78 = v282;
      v76 = v266;
LABEL_31:
      *(_QWORD *)a1 = v344;
      *(_QWORD *)(a1 + 8) = v258;
      *(_QWORD *)(a1 + 16) = v363;
      *(_QWORD *)(a1 + 24) = v377;
      *(_QWORD *)(a1 + 32) = v384;
      *(_QWORD *)(a1 + 40) = v77;
      *(_QWORD *)(a1 + 48) = v76;
      *(_QWORD *)(a1 + 56) = v78;
      *(_QWORD *)(a1 + 64) = v336;
      *(_QWORD *)(a1 + 72) = v328;
      *(_QWORD *)(a1 + 80) = v320;
      *(_QWORD *)(a1 + 88) = v312;
      *(_QWORD *)(a1 + 96) = v298;
      *(_BYTE *)(a1 + 104) = v290;
      sub_1AE84CCD4();
      v17 = 1;
      return v17 & 1;
    }
  }
  if (qword_1ED3193F0 != -1)
    swift_once();
  v32 = sub_1AE925B6C();
  sub_1AE4FB608(v32, (uint64_t)qword_1ED3193D8);
  v33 = sub_1AE925B54();
  v34 = sub_1AE9265EC();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v35 = 0;
    _os_log_impl(&dword_1AE4F2000, v33, v34, "Qselect operator has empty filter node", v35, 2u);
    MEMORY[0x1AF454C78](v35, -1, -1);
  }

  v17 = 0;
  *(_QWORD *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 88) = xmmword_1AE934380;
  *(_BYTE *)(a1 + 104) = 0;
  return v17 & 1;
}

void sub_1AE84B270(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE84B2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;

  *(_QWORD *)v10 = v17;
  *(_QWORD *)(v10 + 8) = v11;
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  *(_QWORD *)(v10 + 32) = a5;
  *(_QWORD *)(v10 + 40) = v12;
  *(_QWORD *)(v10 + 48) = a7;
  *(_QWORD *)(v10 + 56) = a8;
  *(_QWORD *)(v10 + 64) = v8;
  *(_QWORD *)(v10 + 72) = v9;
  *(_QWORD *)(v10 + 80) = v14;
  *(_QWORD *)(v10 + 88) = v16;
  *(_QWORD *)(v10 + 96) = v15;
  *(_BYTE *)(v10 + 104) = v13;
  sub_1AE84CD5C();
  return sub_1AE526458(v17, v11, v18, v19, v20, v12, v21, v22, v23, v24, v14, v26, v27, v28);
}

uint64_t sub_1AE84B648(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1AE5067A8();
  result = sub_1AE88163C();
  v13 = result;
  if (*(_QWORD *)(result + 16) && a2)
  {
    sub_1AE4F943C();
    v4 = sub_1AE85E1E0();
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      v12 = MEMORY[0x1E0DEE9D8];
      sub_1AE52154C();
      v6 = (uint64_t *)(v4 + 64);
      do
      {
        v8 = *(v6 - 1);
        v7 = *v6;
        v10 = *(_QWORD *)(v12 + 16);
        v9 = *(_QWORD *)(v12 + 24);
        sub_1AE4F6804();
        if (v10 >= v9 >> 1)
          sub_1AE52154C();
        *(_QWORD *)(v12 + 16) = v10 + 1;
        v11 = v12 + 16 * v10;
        *(_QWORD *)(v11 + 32) = v8;
        *(_QWORD *)(v11 + 40) = v7;
        v6 += 11;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
    sub_1AE60EE2C();
    swift_release();
    return v13;
  }
  return result;
}

uint64_t sub_1AE84B774(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t Context;
  uint64_t v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  _QWORD *v57;
  _QWORD *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unsigned __int8 v164;
  char v165[8];
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;

  v8 = v7;
  Context = type metadata accessor for QueryContext();
  MEMORY[0x1E0C80A78](Context);
  v129 = (uint64_t)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE84A504(a5);
  if ((v18 & 1) != 0)
    return sub_1AE581BC0(a1, a2, a3, a4, a5, a6, a7);
  v128 = a7;
  v123 = a2;
  sub_1AE5067A8();
  sub_1AE881C50();
  if (!v20 || (sub_1AE84C3CC((uint64_t)a1, v20, a5, v123, a3, a4, v128), result = sub_1AE4F6700(), !v7))
  {
    sub_1AE4F9740();
    sub_1AE881C50();
    if (!v21 || (v22 = v21, sub_1AE4F9094(), v23 = *(_QWORD *)(v22 + 24), swift_retain(), sub_1AE4FB730(), !v23))
    {
      v151 = 0;
      v152 = 0xE000000000000000;
      sub_1AE92691C();
      swift_bridgeObjectRelease();
      sub_1AE5322E0();
      sub_1AE4F6778();
      *v24 = 0xD00000000000001FLL;
      v24[1] = 0x80000001AE988E10;
      return sub_1AE4FBB3C((uint64_t)v24, 1);
    }
    v166 = v23;
    if ((sub_1AE881FF4() & 1) == 0)
    {
      *(_BYTE *)(v23 + 80) = 1;
      v25 = a1[1];
      v122 = a1;
      v118 = a4;
      v117 = a3;
      if (v25)
        v26 = sub_1AE85E1E0();
      else
        v26 = 0;
      v119 = type metadata accessor for ResultGraph();
      v27 = sub_1AE4F9148();
      v28 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v27 + 16) = sub_1AE84CD18();
      *(_QWORD *)(v27 + 24) = v28;
      sub_1AE4FC564();
      v122[1] = v27;
      v29 = sub_1AE84CD18();
      if (!v26)
        goto LABEL_67;
      v30 = v29;
      v31 = v26;
      v145 = v30;
      v32 = *(_QWORD *)(v26 + 16);
      v33 = v129;
      v121 = a5;
      v34 = v128;
      v125 = v32;
      if (v32)
      {
        v35 = 0;
        v124 = v26 + 32;
        v144 = MEMORY[0x1E0DEE9D8];
        v120 = v26;
        do
        {
          if (v35 >= *(_QWORD *)(v31 + 16))
            goto LABEL_62;
          v36 = (uint64_t *)(v124 + 88 * v35);
          v37 = v36[10];
          v38 = *(_QWORD *)(v37 + 16);
          if (v38)
          {
            v126 = v35;
            v127 = v8;
            v39 = v36[1];
            v133 = *v36;
            v40 = v36[2];
            v41 = v36[4];
            v132 = v36[3];
            v131 = v36[6];
            v42 = v36[7];
            v130 = v36[8];
            sub_1AE506130(v36[9], (uint64_t)&v168);
            sub_1AE4F6A24();
            swift_bridgeObjectRetain();
            v149 = v41;
            swift_bridgeObjectRetain();
            sub_1AE84CD50((uint64_t)&v169);
            v147 = v42;
            sub_1AE4F6708();
            v43 = (uint64_t *)(v37 + 56);
            v134 = v39;
            while (1)
            {
              v143 = v38;
              v44 = *(v43 - 3);
              v45 = *(v43 - 2);
              v46 = *(v43 - 1);
              v142 = *v43;
              v47 = v43[2];
              v139 = v43[3];
              v48 = v43[4];
              v137 = v43[5];
              v49 = v43[7];
              sub_1AE506130(v43[6], (uint64_t)v165);
              v135 = v49;
              sub_1AE4F66C4();
              sub_1AE4F6A24();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1AE6901CC();
              sub_1AE6901CC();
              sub_1AE6901CC();
              sub_1AE4F67A4();
              sub_1AE84CD50((uint64_t)&v167);
              v140 = v47;
              sub_1AE4F6708();
              v138 = v48;
              swift_bridgeObjectRetain();
              v50 = v145;
              swift_isUniquelyReferenced_nonNull_native();
              v150 = v44;
              v151 = (_QWORD *)v50;
              v51 = sub_1AE536EDC(v44, v45);
              if (__OFADD__(*(_QWORD *)(v50 + 16), (v52 & 1) == 0))
              {
                __break(1u);
                goto LABEL_54;
              }
              v53 = v51;
              v54 = v52;
              sub_1AE501548(&qword_1EEDA46A8);
              if ((sub_1AE926A54() & 1) != 0)
              {
                v55 = sub_1AE536EDC(v150, v45);
                if ((v54 & 1) != (v56 & 1))
                  goto LABEL_68;
                v53 = v55;
              }
              v57 = v151;
              v145 = (uint64_t)v151;
              if ((v54 & 1) != 0)
              {
                v58 = (_QWORD *)(v151[7] + 88 * v53);
                swift_bridgeObjectRelease();
                sub_1AE4F9038();
                sub_1AE4F6648();
                sub_1AE4F76D8();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v59 = v134;
                *v58 = v133;
                v58[1] = v59;
                v58[2] = v40;
                v60 = v149;
                v58[3] = v132;
                v58[4] = v60;
                v61 = v131;
                v58[5] = v148;
                v58[6] = v61;
                v62 = v130;
                v58[7] = v147;
                v58[8] = v62;
                v58[9] = v146;
                v58[10] = v37;
              }
              else
              {
                v151[(v53 >> 6) + 8] |= 1 << v53;
                v63 = (_QWORD *)(v57[6] + 16 * v53);
                *v63 = v150;
                v63[1] = v45;
                v64 = (_QWORD *)(v57[7] + 88 * v53);
                v65 = v134;
                *v64 = v133;
                v64[1] = v65;
                v64[2] = v40;
                v66 = v149;
                v64[3] = v132;
                v64[4] = v66;
                v67 = v131;
                v64[5] = v148;
                v64[6] = v67;
                v68 = v130;
                v64[7] = v147;
                v64[8] = v68;
                v64[9] = v146;
                v64[10] = v37;
                v69 = v57[2];
                v70 = __OFADD__(v69, 1);
                v71 = v69 + 1;
                if (v70)
                {
                  __break(1u);
LABEL_62:
                  __break(1u);
LABEL_63:
                  __break(1u);
LABEL_64:
                  swift_bridgeObjectRetain();
                  sub_1AE4F6804();
                  swift_bridgeObjectRetain();
                  sub_1AE4F6730();
                  sub_1AE4F6708();
                  sub_1AE4F67A4();
LABEL_66:
                  __break(1u);
LABEL_67:
                  __break(1u);
LABEL_68:
                  result = sub_1AE926DE4();
                  __break(1u);
                  return result;
                }
                v57[2] = v71;
                sub_1AE4F6730();
              }
              sub_1AE4F81B8();
              swift_bridgeObjectRelease();
              v72 = v144;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1AE505FE4();
                sub_1AE519F94();
                v72 = v79;
              }
              v73 = *(_QWORD *)(v72 + 16);
              if (v73 >= *(_QWORD *)(v72 + 24) >> 1)
              {
                sub_1AE519F94();
                v72 = v80;
              }
              *(_QWORD *)(v72 + 16) = v73 + 1;
              v144 = v72;
              v74 = (_QWORD *)(v72 + 88 * v73);
              v74[4] = v150;
              v74[5] = v45;
              v74[6] = v46;
              v75 = v141;
              v74[7] = v142;
              v74[8] = v75;
              v76 = v139;
              v74[9] = v140;
              v74[10] = v76;
              v77 = v137;
              v74[11] = v138;
              v74[12] = v77;
              v78 = v135;
              v74[13] = v136;
              v74[14] = v78;
              v43 += 11;
              v38 = v143 - 1;
              if (v143 == 1)
              {
                sub_1AE5001F4();
                sub_1AE5001F4();
                sub_1AE5001F4();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                v8 = v127;
                v33 = v129;
                a5 = v121;
                v34 = v128;
                v31 = v120;
                v35 = v126;
                break;
              }
            }
          }
          ++v35;
        }
        while (v35 != v125);
      }
      else
      {
        v144 = MEMORY[0x1E0DEE9D8];
      }
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v145 + 16))
      {
        v81 = sub_1AE4F9148();
        v82 = (_QWORD *)v33;
        v83 = MEMORY[0x1E0DEE9D8];
        *(_QWORD *)(v81 + 16) = sub_1AE925C98();
        *(_QWORD *)(v81 + 24) = v83;
        LOBYTE(v151) = 0;
        v84 = sub_1AE4F6730();
        sub_1AE85DA40(v84, &v151);
        sub_1AE4F81B8();
        sub_1AE850854(v82);
        swift_retain();
        swift_release();
        v82[1] = v81;
        if (__OFADD__(v34, 1))
          goto LABEL_63;
        v85 = sub_1AE82B5A8((uint64_t)&v151, (uint64_t)v82, (uint64_t)&v166, a5, v34 + 1, v123, v117, v118);
        if (v8)
        {
          sub_1AE5001F4();
          swift_release();
          swift_release();
          sub_1AE581398((uint64_t)v82);
        }
        else
        {
          v86 = v85;
          v135 = v81;
          v127 = 0;
          sub_1AE582FC0((uint64_t)v151, v152, v153, v154, v155, v156, v157, v158, v159, v160, v161, v162, v163, v164);
          v134 = v86;
          v87 = sub_1AE85E1E0();
          v88 = *(_QWORD *)(v87 + 16);
          v136 = v87;
          if (v88)
          {
            v89 = (uint64_t *)(v87 + 64);
            v90 = MEMORY[0x1E0DEE9D8];
            while (1)
            {
              v147 = v90;
              v91 = *(v89 - 3);
              v92 = *v89;
              v93 = v89[1];
              v94 = v89[5];
              v95 = v145;
              if (!*(_QWORD *)(v145 + 16))
                goto LABEL_64;
              v146 = v88;
              v96 = *(v89 - 2);
              v97 = *(v89 - 4);
              sub_1AE506130(v94, (uint64_t)&v167);
              sub_1AE4F6804();
              sub_1AE4F6A24();
              v143 = v92;
              sub_1AE4F6730();
              v142 = v93;
              sub_1AE4F6708();
              sub_1AE4F67A4();
              v98 = sub_1AE536EDC(v97, v91);
              if ((v99 & 1) == 0)
              {
                sub_1AE4F6718();
                goto LABEL_66;
              }
              v100 = (uint64_t *)(*(_QWORD *)(v95 + 56) + 88 * v98);
              v101 = v100[1];
              v138 = *v100;
              v102 = v100[4];
              v139 = v100[3];
              v103 = v100[5];
              v140 = v100[6];
              v104 = v100[7];
              v137 = v100[8];
              v105 = v100[9];
              v106 = v100[10];
              sub_1AE4F6708();
              sub_1AE4FB764();
              sub_1AE4F6730();
              v148 = v102;
              sub_1AE4F67A4();
              v150 = v103;
              sub_1AE4F66C4();
              v149 = v104;
              swift_bridgeObjectRetain();
              sub_1AE4F6718();
              if (!v101)
                goto LABEL_66;
              swift_bridgeObjectRelease();
              sub_1AE5001F4();
              sub_1AE4F6648();
              sub_1AE5001F4();
              sub_1AE5001F4();
              sub_1AE4F6718();
              sub_1AE4F6730();
              sub_1AE6901CC();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1AE4F6708();
              sub_1AE4FB764();
              v90 = v147;
              v107 = v106;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1AE505FE4();
                sub_1AE519F94();
                v90 = v115;
              }
              v108 = *(_QWORD *)(v90 + 16);
              if (v108 >= *(_QWORD *)(v90 + 24) >> 1)
              {
                sub_1AE519F94();
                v90 = v116;
              }
              *(_QWORD *)(v90 + 16) = v108 + 1;
              v109 = (_QWORD *)(v90 + 88 * v108);
              v110 = v138;
              v109[4] = v138;
              v109[5] = v101;
              v109[6] = v96;
              v111 = v148;
              v109[7] = v139;
              v109[8] = v111;
              v112 = v149;
              v113 = v140;
              v109[9] = v150;
              v109[10] = v113;
              v114 = v137;
              v109[11] = v112;
              v109[12] = v114;
              v109[13] = v105;
              v109[14] = v107;
              sub_1AE84CC68(v110, v101);
              v89 += 11;
              v88 = v146 - 1;
              if (v146 == 1)
                goto LABEL_55;
            }
          }
LABEL_54:
          v90 = MEMORY[0x1E0DEE9D8];
LABEL_55:
          sub_1AE5001F4();
          sub_1AE5001F4();
          *(_BYTE *)(v121 + 80) = 1;
          if (v122[1])
          {
            LOBYTE(v151) = 2;
            sub_1AE85DA40(v90, &v151);
            sub_1AE4FBC80();
            sub_1AE4FBC80();
            sub_1AE4F6718();
          }
          else
          {
            sub_1AE4F6718();
            sub_1AE4FBC80();
            sub_1AE4FBC80();
          }
          swift_release();
          sub_1AE581398(v129);
        }
        return swift_bridgeObjectRelease();
      }
      sub_1AE5001F4();
      sub_1AE4F81B8();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1AE84C3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t Context;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24[13];
  unsigned __int8 v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v28 = a3;
  Context = type metadata accessor for QueryContext();
  MEMORY[0x1E0C80A78](Context);
  v16 = (uint64_t *)((char *)&v24[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  if (*(_QWORD *)(a2 + 24))
  {
    v26 = *(_QWORD *)(a2 + 24);
    result = sub_1AE881FF4();
    if ((result & 1) == 0)
    {
      swift_retain();
      result = sub_1AE850854(v16);
      if (__OFADD__(a7, 1))
      {
        __break(1u);
      }
      else
      {
        v18 = sub_1AE82B5A8((uint64_t)v24, (uint64_t)v16, (uint64_t)&v26, v28, a7 + 1, a4, a5, a6);
        if (v7)
        {
          sub_1AE581398((uint64_t)v16);
          return swift_release();
        }
        else
        {
          v22 = v18;
          sub_1AE582FC0(v24[0], v24[1], v24[2], v24[3], v24[4], v24[5], v24[6], v24[7], v24[8], v24[9], v24[10], v24[11], v24[12], v25);
          sub_1AE581398((uint64_t)v16);
          swift_release();
          result = swift_release();
          *(_QWORD *)(a1 + 8) = v22;
        }
      }
    }
  }
  else
  {
    result = swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)(a2 + 16) + 16))
    {
      v26 = 0;
      v27 = 0xE000000000000000;
      sub_1AE92691C();
      sub_1AE925F74();
      sub_1AE925F74();
      sub_1AE7988D8(*(_BYTE *)(v28 + 64));
      v19 = v26;
      v20 = v27;
      sub_1AE5322E0();
      swift_allocError();
      *(_QWORD *)v21 = v19;
      *(_QWORD *)(v21 + 8) = v20;
      *(_BYTE *)(v21 + 16) = 1;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1AE84C5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;

  v4 = *(_QWORD *)(a3 + 16) == 7370352 && *(_QWORD *)(a3 + 24) == 0xE300000000000000;
  if (!v4 && (sub_1AE926D60() & 1) == 0)
    goto LABEL_10;
  sub_1AE881C50();
  if (!v5)
    goto LABEL_10;
  v6 = v5;
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 24);
  if (!v7)
  {
    swift_release();
LABEL_10:
    v10 = 1;
    goto LABEL_11;
  }
  type metadata accessor for QueryNode();
  swift_retain_n();
  sub_1AE4F943C();
  sub_1AE881CC8(v7, a2);
  v9 = v8;
  swift_release_n();
  swift_release();
  swift_release();
  v10 = v9 ^ 1;
LABEL_11:
  sub_1AE84A504(a2);
  return v11 & v10 & 1;
}

void sub_1AE84C6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for ResultGraph();
  v3 = sub_1AE4F9148();
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 16) = sub_1AE925C98();
  *(_QWORD *)(v3 + 24) = v4;
  __asm { BR              X10 }
}

uint64_t sub_1AE84C78C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  BOOL v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;

  sub_1AE61E2FC();
  sub_1AE508D78();
  v2 = sub_1AE926D60();
  sub_1AE4F6648();
  i = v34;
  if ((v2 & 1) != 0)
  {
    sub_1AE4F9740();
    sub_1AE881C50();
    if (!v4)
      goto LABEL_16;
    v5 = v4;
    sub_1AE4F9094();
    v6 = *(_QWORD *)(v5 + 24);
    sub_1AE4F943C();
    sub_1AE4FC564();
    if (v6)
    {
      v8 = *(_QWORD *)(v6 + 16);
      v7 = *(_QWORD *)(v6 + 24);
      v9 = qword_1ED30FB60;
      sub_1AE4F6708();
      if (v9 != -1)
        goto LABEL_57;
      goto LABEL_5;
    }
LABEL_15:
    for (i = v34; ; i = v34)
    {
LABEL_16:
      sub_1AE5067A8();
      sub_1AE881C50();
      v17 = v16;
      v38 = *(_QWORD *)(v33 + 16);
      if (!v38)
      {
        sub_1AE4FC564();
        break;
      }
      v35 = v16 + 16;
      swift_bridgeObjectRetain();
      v0 = 0;
      v39 = MEMORY[0x1E0DEE9D8];
      while (1)
      {
        if (v17)
        {
          v18 = v33 + 32 + 88 * v0;
          v36 = *(_QWORD *)(v18 + 8);
          v37 = *(_QWORD *)v18;
          v19 = *(_QWORD *)(v18 + 16);
          v20 = *(_QWORD *)(v18 + 24);
          v8 = *(_QWORD *)(v18 + 32);
          v40 = *(_OWORD *)(v18 + 56);
          v41 = *(_OWORD *)(v18 + 40);
          v7 = *(_QWORD *)(v18 + 72);
          v21 = *(_QWORD *)(v18 + 80);
          sub_1AE4F9094();
          v22 = *(_QWORD **)v35;
          v23 = *(_QWORD *)(*(_QWORD *)v35 + 16);
          if (v23)
          {
            v24 = v22[4] == v20 && v22[5] == v8;
            if (v24 || (sub_1AE50A174() & 1) != 0)
            {
LABEL_31:
              sub_1AE4F6708();
              sub_1AE4FB764();
              swift_retain();
              sub_1AE4FB764();
              sub_1AE4F6804();
              sub_1AE4F66C4();
              sub_1AE4F6730();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1AE505FE4();
                sub_1AE519F94();
                v39 = v30;
              }
              v26 = *(_QWORD *)(v39 + 16);
              if (v26 >= *(_QWORD *)(v39 + 24) >> 1)
              {
                sub_1AE519F94();
                v39 = v31;
              }
              *(_QWORD *)(v39 + 16) = v26 + 1;
              v27 = v39 + 88 * v26;
              *(_QWORD *)(v27 + 32) = v37;
              *(_QWORD *)(v27 + 40) = v36;
              *(_QWORD *)(v27 + 48) = v19;
              *(_QWORD *)(v27 + 56) = v20;
              *(_QWORD *)(v27 + 64) = v8;
              *(_OWORD *)(v27 + 72) = v41;
              *(_OWORD *)(v27 + 88) = v40;
              *(_QWORD *)(v27 + 104) = v7;
              *(_QWORD *)(v27 + 112) = v21;
              sub_1AE4FC564();
LABEL_36:
              i = v34;
              goto LABEL_37;
            }
            if (v23 != 1)
            {
              v25 = v22[6] == v20 && v22[7] == v8;
              if (v25 || (sub_1AE50A174() & 1) != 0)
                goto LABEL_31;
              if (v23 != 2)
                break;
            }
          }
        }
LABEL_37:
        if (++v0 == v38)
        {
          sub_1AE4FC564();
          swift_bridgeObjectRelease();
          goto LABEL_51;
        }
      }
      v28 = v22 + 9;
      v6 = 2;
      while (!__OFADD__(v6, 1))
      {
        if (*(v28 - 1) == v20 && *v28 == v8)
          goto LABEL_31;
        v32 = v6 + 1;
        if ((sub_1AE50A174() & 1) != 0)
          goto LABEL_31;
        v28 += 2;
        ++v6;
        if (v32 == v23)
          goto LABEL_36;
      }
      __break(1u);
LABEL_57:
      swift_once();
LABEL_5:
      v10 = qword_1ED3274B8;
      if (*(_QWORD *)(qword_1ED3274B8 + 16))
      {
        sub_1AE4F6708();
        v11 = sub_1AE536EDC(v8, v7);
        if ((v12 & 1) != 0)
        {
          sub_1AE57C238(*(_QWORD *)(v10 + 56) + 40 * v11, (uint64_t)&v42);
        }
        else
        {
          v44 = 0;
          v42 = 0u;
          v43 = 0u;
        }
        sub_1AE4F76D8();
      }
      else
      {
        v44 = 0;
        v42 = 0u;
        v43 = 0u;
      }
      sub_1AE4F76D8();
      if (!*((_QWORD *)&v43 + 1))
      {
        sub_1AE4FB730();
        sub_1AE582F80((uint64_t)&v42);
        goto LABEL_15;
      }
      sub_1AE50AF58(&v42, v1 - 152);
      v13 = *(_QWORD *)(v1 - 128);
      v14 = *(_QWORD *)(v1 - 120);
      sub_1AE4F9858((_QWORD *)(v1 - 152), v13);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 80))(v34, v6, v33, v13, v14);
      sub_1AE4FB730();
      if (v0)
      {
        swift_release();
        return sub_1AE84CCD4();
      }
      sub_1AE4F6700();
      sub_1AE4F9038();
      sub_1AE84CCD4();
    }
  }
  v39 = MEMORY[0x1E0DEE9D8];
LABEL_51:
  if (*(_QWORD *)(i + 8) && !sub_1AE85D040())
  {
    LOBYTE(v42) = 2;
    sub_1AE4F943C();
    ((void (*)(__int128 *))sub_1AE85DA40)(&v42);
    sub_1AE4FB730();
    return v39;
  }
  else
  {
    swift_bridgeObjectRelease();
    LOBYTE(v42) = 2;
    ((void (*)(__int128 *))sub_1AE85DA40)(&v42);
    return swift_bridgeObjectRetain();
  }
}

uint64_t type metadata accessor for Qselect()
{
  return objc_opt_self();
}

uint64_t sub_1AE84CC68(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AE84CCD4()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 152);
}

uint64_t sub_1AE84CCDC()
{
  return 0x79676F6C6F746E6FLL;
}

uint64_t sub_1AE84CD00(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
}

uint64_t sub_1AE84CD18()
{
  return sub_1AE925C98();
}

uint64_t sub_1AE84CD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&a59);
}

double sub_1AE84CD30()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  v0[1] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  return result;
}

uint64_t sub_1AE84CD44(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE84A1A8(a1, v1);
}

uint64_t sub_1AE84CD50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 - 256) = v1;
  return swift_bridgeObjectRetain();
}

void sub_1AE84CD68(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 v66;

  v5 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)v3;
  v6 = *(_QWORD *)(v3 + 8);
  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_QWORD *)(v3 + 24);
  v10 = *(_QWORD *)(v3 + 56);
  v52 = *(_QWORD *)(v3 + 64);
  v51 = *(_QWORD *)(v3 + 72);
  v11 = *(_QWORD *)(v3 + 88);
  v50 = *(_QWORD *)(v3 + 80);
  v12 = *(_BYTE *)(v3 + 104);
  v66 = *(_BYTE *)(a2 + 104);
  v64 = *(_QWORD *)(a2 + 88);
  v65 = *(_QWORD *)(a2 + 96);
  v62 = *(_QWORD *)(a2 + 72);
  v63 = *(_QWORD *)(a2 + 80);
  v60 = *(_QWORD *)(a2 + 8);
  v61 = *(_QWORD *)(a2 + 64);
  v57 = *(_QWORD *)(a2 + 48);
  v58 = *(_QWORD *)(a2 + 56);
  v55 = *(_QWORD *)(a2 + 32);
  v56 = *(_QWORD *)(a2 + 40);
  v54 = *(_QWORD *)(a2 + 16);
  v59 = *(_QWORD *)a2;
  v53 = *(_QWORD *)(v3 + 96);
  if ((v12 & 0x10) != 0)
  {
    v49 = *(_QWORD *)(v3 + 88);
    LODWORD(v46) = *(unsigned __int8 *)(v3 + 104);
    sub_1AE92691C();
    sub_1AE5020E8();
    sub_1AE926A48();
    v15 = sub_1AE4F6A2C();
    sub_1AE501180(v15, v16, v17, v18, v19, v20, v21, v22, v33, v34, v35, v36, v37, v38, v39, v41, v43, v44, v46,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v5,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65);
  }
  else
  {
    v42 = *(_QWORD *)(v3 + 16);
    v45 = *(_QWORD *)(v3 + 32);
    v47 = *(_QWORD *)(v3 + 40);
    v48 = *(_QWORD *)(v3 + 48);
    if ((*(_BYTE *)(a2 + 104) & 0x10) == 0)
    {
      v40 = *a1;
      sub_1AE501548((uint64_t *)&unk_1ED30FFC0);
      v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1AE934250;
      *(_QWORD *)(v13 + 32) = v7;
      *(_QWORD *)(v13 + 40) = v6;
      *(_QWORD *)(v13 + 48) = v8;
      *(_QWORD *)(v13 + 56) = v9;
      *(_QWORD *)(v13 + 64) = v45;
      *(_QWORD *)(v13 + 72) = v47;
      *(_QWORD *)(v13 + 80) = v48;
      *(_QWORD *)(v13 + 88) = v10;
      *(_QWORD *)(v13 + 96) = v52;
      *(_QWORD *)(v13 + 104) = v51;
      *(_QWORD *)(v13 + 112) = v50;
      *(_QWORD *)(v13 + 120) = v11;
      *(_QWORD *)(v13 + 128) = v53;
      *(_BYTE *)(v13 + 136) = v12;
      sub_1AE5263DC(v7, v6, v8, v9, v45, v47, v48, v10, v52, v51, v50, v11, v53, v12);
      sub_1AE5263DC(v59, v60, v54, v5, v55, v56, v57, v58, v61, v62, v63, v64, v65, v66);
      sub_1AE51A12C();
      *(_QWORD *)(v14 + 16) = 2;
      *(_QWORD *)(v14 + 144) = v59;
      *(_QWORD *)(v14 + 152) = v60;
      *(_QWORD *)(v14 + 160) = v54;
      *(_QWORD *)(v14 + 168) = v5;
      *(_QWORD *)(v14 + 176) = v55;
      *(_QWORD *)(v14 + 184) = v56;
      *(_QWORD *)(v14 + 192) = v57;
      *(_QWORD *)(v14 + 200) = v58;
      *(_QWORD *)(v14 + 208) = v61;
      *(_QWORD *)(v14 + 216) = v62;
      *(_QWORD *)(v14 + 224) = v63;
      *(_QWORD *)(v14 + 232) = v64;
      *(_QWORD *)(v14 + 240) = v65;
      *(_BYTE *)(v14 + 248) = v66;
      *(_QWORD *)a3 = v40;
      *(_QWORD *)(a3 + 8) = v14;
      *(_OWORD *)(a3 + 16) = 0u;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)(a3 + 48) = 0u;
      *(_OWORD *)(a3 + 64) = 0u;
      *(_OWORD *)(a3 + 80) = 0u;
      *(_QWORD *)(a3 + 96) = 0;
      *(_BYTE *)(a3 + 104) = -96;
      return;
    }
    sub_1AE92691C();
    sub_1AE925F74();
    sub_1AE4F9754();
    v23 = sub_1AE4F6A2C();
    sub_1AE501180(v23, v24, v25, v26, v27, v28, v29, v30, v33, v34, v35, v36, v37, v38, v39, v42, v9, v45, v47,
      v48,
      v50,
      v51,
      v52,
      v53,
      v54,
      v5,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65);
  }
  sub_1AE926A48();
  sub_1AE580FEC();
  v31 = sub_1AE4F6778();
  sub_1AE50A184(v31, v32);
}

uint64_t sub_1AE84D160@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;

  v50 = *(_QWORD *)(a1 + 8);
  v51 = *(_QWORD *)(a1 + 16);
  v52 = *(_QWORD *)(a1 + 24);
  v55 = *(_QWORD *)(a1 + 40);
  v57 = *(_QWORD *)a1;
  v58 = *(_QWORD *)(a1 + 48);
  v60 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD **)v3;
  v5 = *(_QWORD *)(v3 + 48);
  v48 = *(_QWORD *)(v3 + 56);
  v6 = *(_QWORD *)(v3 + 64);
  v7 = *(_QWORD *)(v3 + 72);
  v9 = *(_QWORD *)(v3 + 80);
  v8 = *(_QWORD *)(v3 + 88);
  v10 = *(_BYTE *)(v3 + 104);
  if ((v10 & 0x10) == 0)
  {
    v37 = *(_QWORD *)(v3 + 8);
    v38 = *(_QWORD *)(v3 + 24);
    v40 = *(_QWORD *)(v3 + 40);
    v41 = *(_QWORD *)(v3 + 16);
    v39 = *(_QWORD *)(v3 + 32);
    v43 = *(_QWORD *)(a1 + 96);
    v44 = *(_QWORD *)(a1 + 88);
    v45 = *(_QWORD *)(a1 + 80);
    v46 = *(_QWORD *)(a1 + 72);
    v47 = *(_QWORD *)(a1 + 64);
    v53 = *(_QWORD *)(a1 + 32);
    v42 = *(_BYTE *)(a1 + 104);
    if ((v42 & 0x10) == 0)
    {
      v36 = *a2;
      v11 = *(_QWORD *)(v3 + 96);
      sub_1AE501548((uint64_t *)&unk_1ED30FFC0);
      v13 = swift_allocObject();
      *(_QWORD *)a3 = v36;
      *(_OWORD *)(v13 + 16) = xmmword_1AE933BD0;
      *(_QWORD *)(v13 + 32) = v4;
      *(_QWORD *)(v13 + 40) = v37;
      *(_QWORD *)(v13 + 48) = v41;
      *(_QWORD *)(v13 + 56) = v38;
      *(_QWORD *)(v13 + 64) = v39;
      *(_QWORD *)(v13 + 72) = v40;
      *(_QWORD *)(v13 + 80) = v5;
      *(_QWORD *)(v13 + 88) = v48;
      *(_QWORD *)(v13 + 96) = v6;
      *(_QWORD *)(v13 + 104) = v7;
      *(_QWORD *)(v13 + 112) = v9;
      *(_QWORD *)(v13 + 120) = v8;
      *(_QWORD *)(v13 + 128) = v11;
      *(_BYTE *)(v13 + 136) = v10;
      *(_QWORD *)(v13 + 144) = v57;
      *(_QWORD *)(v13 + 152) = v50;
      *(_QWORD *)(v13 + 160) = v51;
      *(_QWORD *)(v13 + 168) = v52;
      *(_QWORD *)(v13 + 176) = v53;
      *(_QWORD *)(v13 + 184) = v55;
      *(_QWORD *)(v13 + 192) = v58;
      *(_QWORD *)(v13 + 200) = v60;
      *(_QWORD *)(v13 + 208) = v47;
      *(_QWORD *)(v13 + 216) = v46;
      *(_QWORD *)(v13 + 224) = v45;
      *(_QWORD *)(v13 + 232) = v44;
      *(_QWORD *)(v13 + 240) = v43;
      *(_BYTE *)(v13 + 248) = v42;
      *(_QWORD *)(a3 + 8) = v13;
      *(_OWORD *)(a3 + 16) = 0u;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)(a3 + 48) = 0u;
      *(_OWORD *)(a3 + 64) = 0u;
      *(_OWORD *)(a3 + 80) = 0u;
      *(_OWORD *)(a3 + 89) = 0u;
      sub_1AE5263DC((uint64_t)v4, v37, v41, v38, v39, v40, v5, v48, v6, v7, v9, v8, v11, v10);
      return sub_1AE5263DC(v57, v50, v51, v52, v53, v55, v58, v60, v47, v46, v45, v44, v43, v42);
    }
    goto LABEL_5;
  }
  if ((*(_BYTE *)(a1 + 104) & 0x10) == 0)
  {
LABEL_5:
    sub_1AE92691C();
    sub_1AE5020E8();
    sub_1AE4F9754();
    sub_1AE4F6A2C();
    sub_1AE4FF380();
    sub_1AE4F9754();
    sub_1AE580FEC();
    v15 = sub_1AE4F6778();
    return sub_1AE50A184(v15, v16);
  }
  v54 = v57 + 64;
  v17 = 1 << *(_BYTE *)(v57 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v57 + 64);
  v56 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = 0;
  if (!v19)
    goto LABEL_10;
LABEL_9:
  v59 = (v19 - 1) & v19;
  v61 = v20;
  for (i = __clz(__rbit64(v19)) | (v20 << 6); ; i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    v26 = *(_QWORD *)(v57 + 48) + 24 * i;
    v27 = *(_QWORD *)v26;
    v28 = *(_QWORD *)(v26 + 8);
    v29 = *(_BYTE *)(v26 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AE84FAE0();
    swift_isUniquelyReferenced_nonNull_native();
    v30 = sub_1AE508938();
    if (__OFADD__(v4[2], (v31 & 1) == 0))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v32 = v30;
    v33 = v31;
    sub_1AE501548(&qword_1EEDA4738);
    if ((sub_1AE926A54() & 1) != 0)
    {
      v34 = sub_1AE508938();
      if ((v33 & 1) != (v35 & 1))
        goto LABEL_36;
      v32 = v34;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((v33 & 1) == 0)
    {
      sub_1AE53B184(v32, v27, v28, v29, MEMORY[0x1E0DEE9E8], v4);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_1AE5B8FD8();
    swift_bridgeObjectRelease();
    v20 = v61;
    v19 = v59;
    if (v59)
      goto LABEL_9;
LABEL_10:
    v22 = v20 + 1;
    if (__OFADD__(v20, 1))
      goto LABEL_34;
    if (v22 >= v56)
      goto LABEL_32;
    v23 = *(_QWORD *)(v54 + 8 * v22);
    v24 = v20 + 1;
    if (!v23)
    {
      v24 = v20 + 2;
      if (v20 + 2 >= v56)
        goto LABEL_32;
      v23 = *(_QWORD *)(v54 + 8 * v24);
      if (!v23)
      {
        v24 = v20 + 3;
        if (v20 + 3 >= v56)
          goto LABEL_32;
        v23 = *(_QWORD *)(v54 + 8 * v24);
        if (!v23)
          break;
      }
    }
LABEL_23:
    v59 = (v23 - 1) & v23;
    v61 = v24;
  }
  v25 = v20 + 4;
  if (v20 + 4 >= v56)
  {
LABEL_32:
    swift_release();
    *(_QWORD *)a3 = v4;
    *(_QWORD *)(a3 + 8) = v50;
    *(_QWORD *)(a3 + 16) = v51;
    *(_QWORD *)(a3 + 24) = (unsigned __int16)v52;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 80) = 0u;
    *(_QWORD *)(a3 + 96) = 0;
    *(_BYTE *)(a3 + 104) = 16;
    sub_1AE526540(v50, v51, v52);
    return sub_1AE84FAE0();
  }
  v23 = *(_QWORD *)(v54 + 8 * v25);
  if (v23)
  {
    v24 = v20 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v56)
      goto LABEL_32;
    v23 = *(_QWORD *)(v54 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_23;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

void IndexQuery.impl.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  v1 = sub_1AE503BFC(a1);
  sub_1AE5263DC(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  sub_1AE4FC538();
}

__n128 IndexQuery.impl.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  __n128 result;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v22 = a1[1];
  v23 = *a1;
  v21 = a1[2];
  v19 = a1[4];
  v20 = a1[3];
  v18 = (__n128)a1[5];
  v2 = *((_QWORD *)a1 + 12);
  v3 = *((_BYTE *)a1 + 104);
  v4 = sub_1AE84FA68();
  sub_1AE583000(v5, v6, v7, v8, v9, v10, v11, v12, v4.n128_i64[0], v4.n128_i64[1], v15, v16, v13, v14);
  *(_OWORD *)v1 = v23;
  *(_OWORD *)(v1 + 16) = v22;
  *(_OWORD *)(v1 + 32) = v21;
  *(_OWORD *)(v1 + 48) = v20;
  result = v18;
  *(_OWORD *)(v1 + 64) = v19;
  *(__n128 *)(v1 + 80) = v18;
  *(_QWORD *)(v1 + 96) = v2;
  *(_BYTE *)(v1 + 104) = v3;
  return result;
}

uint64_t (*IndexQuery.impl.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1AE84D898(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001AE988F20 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001AE988F40)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1AE84D980(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000020;
  else
    return 0xD000000000000011;
}

unint64_t sub_1AE84D9BC()
{
  char *v0;

  return sub_1AE84D980(*v0);
}

uint64_t sub_1AE84D9C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE84D898(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE84D9E8()
{
  sub_1AE84DDEC();
  return sub_1AE926F94();
}

uint64_t sub_1AE84DA10()
{
  sub_1AE84DDEC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE84DA38()
{
  sub_1AE84DE28();
  return sub_1AE926F94();
}

uint64_t sub_1AE84DA60()
{
  sub_1AE84DE28();
  return sub_1AE926FA0();
}

uint64_t sub_1AE84DA88()
{
  sub_1AE84DEA0();
  return sub_1AE926F94();
}

uint64_t sub_1AE84DAB0()
{
  sub_1AE84DEA0();
  return sub_1AE926FA0();
}

void IndexQuery.IndexQueryImpl.encode(to:)()
{
  uint64_t *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;

  sub_1AE4F67EC();
  v2 = v1;
  v3 = sub_1AE501548(&qword_1EED98E58);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1AE501548(&qword_1EED98E60);
  v34 = *(_QWORD *)(v35 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F666C();
  v10 = v9 - v8;
  v11 = sub_1AE501548(&qword_1EED98E68);
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v0[1];
  v38 = *v0;
  v39 = v15;
  v16 = v0[3];
  v40 = v0[2];
  v33 = v0[4];
  v32 = v0[5];
  v31 = v0[6];
  v30 = v0[7];
  v29 = v0[8];
  v28 = v0[9];
  v27 = v0[10];
  v26 = v0[11];
  v25 = v0[12];
  v17 = *((_BYTE *)v0 + 104);
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE84DDEC();
  sub_1AE926F4C();
  if ((v17 & 0x10) != 0)
  {
    sub_1AE84FAC0();
    v21 = v42;
    sub_1AE503380();
    sub_1AE84FB00();
    v44 = v22;
    LOWORD(v45) = v16;
    sub_1AE84DE64();
    v23 = v37;
    sub_1AE926CC4();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v6, v23);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v21);
  }
  else
  {
    v43 = 0;
    sub_1AE84DEA0();
    v18 = v42;
    sub_1AE503380();
    sub_1AE84FB00();
    v44 = v19;
    v45 = v16;
    v46 = v33;
    v47 = v32;
    v48 = v31;
    v49 = v30;
    v50 = v29;
    v51 = v28;
    v52 = v27;
    v53 = v26;
    v54 = v25;
    v55 = v17;
    sub_1AE84DEDC();
    v20 = v35;
    sub_1AE926CC4();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v10, v20);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v18);
  }
  sub_1AE4F667C();
}

unint64_t sub_1AE84DDEC()
{
  unint64_t result;

  result = qword_1EED98B80;
  if (!qword_1EED98B80)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE964094, &type metadata for IndexQuery.IndexQueryImpl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98B80);
  }
  return result;
}

unint64_t sub_1AE84DE28()
{
  unint64_t result;

  result = qword_1EEDA46B0;
  if (!qword_1EEDA46B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE964044, &type metadata for IndexQuery.IndexQueryImpl.LiveGlobalKnowledgeIdSearchQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA46B0);
  }
  return result;
}

unint64_t sub_1AE84DE64()
{
  unint64_t result;

  result = qword_1EEDA46B8;
  if (!qword_1EEDA46B8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.IdSearchRequest, &type metadata for LiveGlobalKnowledge.IdSearchRequest);
    atomic_store(result, (unint64_t *)&qword_1EEDA46B8);
  }
  return result;
}

unint64_t sub_1AE84DEA0()
{
  unint64_t result;

  result = qword_1EED98B68;
  if (!qword_1EED98B68)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963FF4, &type metadata for IndexQuery.IndexQueryImpl.TriplesIndexQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98B68);
  }
  return result;
}

unint64_t sub_1AE84DEDC()
{
  unint64_t result;

  result = qword_1EED98B50;
  if (!qword_1EED98B50)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for IndexQuery.TriplesIndexQuery, &type metadata for IndexQuery.TriplesIndexQuery);
    atomic_store(result, (unint64_t *)&qword_1EED98B50);
  }
  return result;
}

void IndexQuery.IndexQueryImpl.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  char v40;

  sub_1AE4F67EC();
  v2 = v1;
  v31 = v3;
  sub_1AE501548(&qword_1EEDA46C0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F666C();
  v32 = sub_1AE501548(&qword_1EEDA46C8);
  MEMORY[0x1E0C80A78](v32);
  sub_1AE4F666C();
  v5 = sub_1AE501548(&qword_1EEDA46D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE84DDEC();
  sub_1AE926F34();
  if (v0)
    goto LABEL_8;
  v30 = v6;
  v7 = sub_1AE926C1C();
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8
    || (v9 = *(_BYTE *)(v7 + 32),
        sub_1AE50AF34(1, v8, v7, v7 + 32, 0, (2 * v8) | 1),
        v11 = v10,
        v13 = v12,
        swift_bridgeObjectRelease(),
        v11 != v13 >> 1))
  {
    v14 = sub_1AE926988();
    sub_1AE4F6778();
    v16 = v15;
    sub_1AE501548(&qword_1EED99C38);
    *v16 = &type metadata for IndexQuery.IndexQueryImpl;
    sub_1AE926B5C();
    sub_1AE92697C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x1E0DEC450], v14);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_1AE4FB810(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
LABEL_8:
    v17 = (uint64_t)v2;
    goto LABEL_9;
  }
  if ((v9 & 1) != 0)
  {
    sub_1AE84FAC0();
    sub_1AE50339C();
    sub_1AE84EE68();
    sub_1AE926BEC();
    v18 = sub_1AE84FACC();
    v19(v18);
    sub_1AE4FC718();
    sub_1AE4FB810(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    v20 = v33;
    v21 = v34;
    v22 = 0uLL;
    v23 = (unsigned __int16)v35;
    v24 = 16;
    v25 = 0uLL;
    v26 = 0uLL;
    v27 = 0uLL;
  }
  else
  {
    LOBYTE(v33) = 0;
    sub_1AE84DEA0();
    sub_1AE50339C();
    sub_1AE84EEA4();
    sub_1AE926BEC();
    v28 = sub_1AE84FAEC();
    v29(v28);
    sub_1AE4FC718();
    sub_1AE4FB810(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    v20 = v33;
    v21 = v34;
    v23 = v35;
    v22 = v36;
    v25 = v37;
    v26 = v38;
    v27 = v39;
    v24 = v40;
  }
  *(_QWORD *)v31 = v20;
  *(_OWORD *)(v31 + 8) = v21;
  *(_OWORD *)(v31 + 24) = v23;
  *(_OWORD *)(v31 + 40) = v22;
  *(_OWORD *)(v31 + 56) = v25;
  *(_OWORD *)(v31 + 72) = v26;
  *(_OWORD *)(v31 + 88) = v27;
  *(_BYTE *)(v31 + 104) = v24;
  v17 = (uint64_t)v2;
LABEL_9:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v17);
  sub_1AE4F667C();
}

void sub_1AE84E2E0()
{
  IndexQuery.IndexQueryImpl.init(from:)();
}

void sub_1AE84E2F4()
{
  IndexQuery.IndexQueryImpl.encode(to:)();
}

void IndexQuery.TriplesIndexQuery.query.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;

  v1 = sub_1AE503BFC(a1);
  sub_1AE526458(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  sub_1AE4FC538();
}

uint64_t IndexQuery.TriplesIndexQuery.description.getter()
{
  const void *v0;
  _BYTE __dst[112];

  memcpy(__dst, v0, 0x69uLL);
  sub_1AE92691C();
  sub_1AE84FAA0();
  sub_1AE84EEE0();
  sub_1AE798A08(__dst);
  sub_1AE84EEE0();
  sub_1AE4FF0F0();
  return 0;
}

void IndexQuery.TriplesIndexQuery.combine(query:combineType:)(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v29 = *(_QWORD *)a1;
  v26 = *(_QWORD *)(a1 + 8);
  v24 = *(_QWORD *)(a1 + 16);
  v30 = *(_QWORD *)(a1 + 24);
  v31 = *(_QWORD *)(a1 + 32);
  v32 = *(_QWORD *)(a1 + 40);
  v33 = *(_QWORD *)(a1 + 48);
  v34 = *(_QWORD *)(a1 + 56);
  v21 = *(_QWORD *)(a1 + 72);
  v22 = *(_QWORD *)(a1 + 64);
  v23 = *(_QWORD *)(a1 + 80);
  v25 = *(_QWORD *)(a1 + 88);
  v28 = *(_QWORD *)(a1 + 96);
  v27 = *(_BYTE *)(a1 + 104);
  v20 = *a2;
  sub_1AE509C7C();
  v5 = *(_QWORD *)(v3 + 40);
  v15 = *(_QWORD *)(v3 + 32);
  v7 = *(_QWORD *)(v3 + 48);
  v6 = *(_QWORD *)(v3 + 56);
  v9 = *(_QWORD *)(v3 + 64);
  v8 = *(_QWORD *)(v3 + 72);
  v10 = *(_QWORD *)(v3 + 80);
  v11 = *(_QWORD *)(v3 + 88);
  v12 = *(_QWORD *)(v3 + 96);
  v13 = *(_BYTE *)(v3 + 104);
  sub_1AE501548((uint64_t *)&unk_1ED30FFC0);
  v14 = swift_allocObject();
  *(_QWORD *)a3 = v20;
  *(_OWORD *)(v14 + 16) = xmmword_1AE933BD0;
  *(_QWORD *)(v14 + 32) = v19;
  *(_QWORD *)(v14 + 40) = v18;
  *(_QWORD *)(v14 + 48) = v17;
  *(_QWORD *)(v14 + 56) = v16;
  *(_QWORD *)(v14 + 64) = v15;
  *(_QWORD *)(v14 + 72) = v5;
  *(_QWORD *)(v14 + 80) = v7;
  *(_QWORD *)(v14 + 88) = v6;
  *(_QWORD *)(v14 + 96) = v9;
  *(_QWORD *)(v14 + 104) = v8;
  *(_QWORD *)(v14 + 112) = v10;
  *(_QWORD *)(v14 + 120) = v11;
  *(_QWORD *)(v14 + 128) = v12;
  *(_BYTE *)(v14 + 136) = v13;
  *(_QWORD *)(v14 + 144) = v29;
  *(_QWORD *)(v14 + 152) = v26;
  *(_QWORD *)(v14 + 160) = v24;
  *(_QWORD *)(v14 + 168) = v30;
  *(_QWORD *)(v14 + 176) = v31;
  *(_QWORD *)(v14 + 184) = v32;
  *(_QWORD *)(v14 + 192) = v33;
  *(_QWORD *)(v14 + 200) = v34;
  *(_QWORD *)(v14 + 208) = v22;
  *(_QWORD *)(v14 + 216) = v21;
  *(_QWORD *)(v14 + 224) = v23;
  *(_QWORD *)(v14 + 232) = v25;
  *(_QWORD *)(v14 + 240) = v28;
  *(_BYTE *)(v14 + 248) = v27;
  *(_QWORD *)(a3 + 8) = v14;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_QWORD *)(a3 + 96) = 0;
  *(_BYTE *)(a3 + 104) = 0;
  sub_1AE526458(v19, v18, v17, v16, v15, v5, v7, v6, v9, v8, v10, v11, v12, v13);
  sub_1AE526458(v29, v26, v24, v30, v31, v32, v33, v34, v22, v21, v23, v25, v28, v27);
  sub_1AE505630();
}

BOOL static IndexQuery.CombineType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void IndexQuery.TriplesIndexQuery.join(joinCondition:incomingQuery:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v29 = *a1;
  v27 = *(_QWORD *)(a2 + 8);
  v28 = *(_QWORD *)a2;
  v25 = *(_QWORD *)(a2 + 24);
  v26 = *(_QWORD *)(a2 + 16);
  v23 = *(_QWORD *)(a2 + 40);
  v24 = *(_QWORD *)(a2 + 32);
  v21 = *(_QWORD *)(a2 + 56);
  v22 = *(_QWORD *)(a2 + 48);
  v34 = *(_QWORD *)(a2 + 72);
  v35 = *(_QWORD *)(a2 + 64);
  v32 = *(_QWORD *)(a2 + 88);
  v33 = *(_QWORD *)(a2 + 80);
  v31 = *(_QWORD *)(a2 + 96);
  v30 = *(_BYTE *)(a2 + 104);
  sub_1AE509C7C();
  v5 = *(_QWORD *)(v3 + 40);
  v6 = *(_QWORD *)(v3 + 48);
  v15 = *(_QWORD *)(v3 + 56);
  v16 = *(_QWORD *)(v3 + 32);
  v7 = *(_QWORD *)(v3 + 64);
  v8 = *(_QWORD *)(v3 + 72);
  v9 = *(_QWORD *)(v3 + 80);
  v10 = *(_QWORD *)(v3 + 88);
  v11 = *(_QWORD *)(v3 + 96);
  v12 = *(_BYTE *)(v3 + 104);
  sub_1AE501548((uint64_t *)&unk_1ED30FFC0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v13 + 32) = v20;
  *(_QWORD *)(v13 + 40) = v19;
  *(_QWORD *)(v13 + 48) = v18;
  *(_QWORD *)(v13 + 56) = v17;
  *(_QWORD *)(v13 + 64) = v16;
  *(_QWORD *)(v13 + 72) = v5;
  *(_QWORD *)(v13 + 80) = v6;
  *(_QWORD *)(v13 + 88) = v15;
  *(_QWORD *)(v13 + 96) = v7;
  *(_QWORD *)(v13 + 104) = v8;
  *(_QWORD *)(v13 + 112) = v9;
  *(_QWORD *)(v13 + 120) = v10;
  *(_QWORD *)(v13 + 128) = v11;
  *(_BYTE *)(v13 + 136) = v12;
  sub_1AE526458(v20, v19, v18, v17, v16, v5, v6, v15, v7, v8, v9, v10, v11, v12);
  sub_1AE526458(v28, v27, v26, v25, v24, v23, v22, v21, v35, v34, v33, v32, v31, v30);
  sub_1AE51A12C();
  *(_QWORD *)(v14 + 16) = 2;
  *(_QWORD *)(v14 + 144) = v28;
  *(_QWORD *)(v14 + 152) = v27;
  *(_QWORD *)(v14 + 160) = v26;
  *(_QWORD *)(v14 + 168) = v25;
  *(_QWORD *)(v14 + 176) = v24;
  *(_QWORD *)(v14 + 184) = v23;
  *(_QWORD *)(v14 + 192) = v22;
  *(_QWORD *)(v14 + 200) = v21;
  *(_QWORD *)(v14 + 208) = v35;
  *(_QWORD *)(v14 + 216) = v34;
  *(_QWORD *)(v14 + 224) = v33;
  *(_QWORD *)(v14 + 232) = v32;
  *(_QWORD *)(v14 + 240) = v31;
  *(_BYTE *)(v14 + 248) = v30;
  *(_QWORD *)a3 = v29;
  *(_QWORD *)(a3 + 8) = v14;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_QWORD *)(a3 + 96) = 0;
  *(_BYTE *)(a3 + 104) = -96;
  sub_1AE505630();
}

uint64_t sub_1AE84E7AC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7972657571 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE84E828()
{
  return 0x7972657571;
}

uint64_t sub_1AE84E840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE84E7AC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE84E868()
{
  sub_1AE84EF28();
  return sub_1AE926F94();
}

uint64_t sub_1AE84E890()
{
  sub_1AE84EF28();
  return sub_1AE926FA0();
}

void IndexQuery.TriplesIndexQuery.encode(to:)()
{
  uint64_t v0;

  sub_1AE4F67EC();
  sub_1AE501548(&qword_1EED98E50);
  sub_1AE4F7878();
  MEMORY[0x1E0C80A78](v0);
  sub_1AE4FE1D8();
  sub_1AE84EF28();
  sub_1AE508050();
  sub_1AE4FD64C();
  sub_1AE84EF64();
  sub_1AE508D98();
  sub_1AE507C80();
  sub_1AE4F667C();
}

void IndexQuery.TriplesIndexQuery.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1AE4F67EC();
  v2 = v1;
  sub_1AE501548(&qword_1EEDA46E8);
  sub_1AE5635D8();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE84EF28();
  sub_1AE505AEC();
  if (!v0)
  {
    sub_1AE84EFA0();
    sub_1AE84FA50();
    sub_1AE50976C();
    sub_1AE4FC0AC();
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  sub_1AE4F667C();
}

void sub_1AE84EA0C()
{
  IndexQuery.TriplesIndexQuery.init(from:)();
}

void sub_1AE84EA20()
{
  IndexQuery.TriplesIndexQuery.encode(to:)();
}

uint64_t IndexQuery.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[13];
  unsigned __int8 v33;

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 104);
  if ((v4 & 0x10) != 0)
    return LiveGlobalKnowledge.IdSearchRequest.description.getter();
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 80);
  v27 = *(_QWORD *)(v0 + 88);
  v28 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 48);
  v31 = *(_QWORD *)(v0 + 40);
  v29 = *(_QWORD *)(v0 + 56);
  v30 = *(_QWORD *)(v0 + 32);
  v32[0] = *(_QWORD *)v0;
  v32[1] = v1;
  v32[2] = v3;
  v32[3] = v2;
  v32[4] = v30;
  v32[5] = v31;
  v32[6] = v8;
  v32[7] = v29;
  v26 = v6;
  v32[8] = v7;
  v32[9] = v28;
  v32[10] = v6;
  v32[11] = v27;
  v9 = v6;
  v32[12] = v5;
  v10 = v5;
  v25 = v5;
  v33 = v4;
  sub_1AE92691C();
  sub_1AE84FAA0();
  v11 = sub_1AE84FA88();
  sub_1AE526458(v11, v12, v13, v14, v15, v16, v8, v29, v7, v28, v9, v27, v10, v4);
  sub_1AE798A08(v32);
  v17 = sub_1AE84FA88();
  sub_1AE583000(v17, v18, v19, v20, v21, v22, v23, v29, v7, v28, v26, v27, v25, v4);
  sub_1AE4FF0F0();
  return 0;
}

uint64_t sub_1AE84EB90(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1819307369 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE84EC04()
{
  return 1819307369;
}

uint64_t sub_1AE84EC18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE84EB90(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE84EC40()
{
  sub_1AE84EFDC();
  return sub_1AE926F94();
}

uint64_t sub_1AE84EC68()
{
  sub_1AE84EFDC();
  return sub_1AE926FA0();
}

void IndexQuery.encode(to:)()
{
  uint64_t v0;

  sub_1AE4F67EC();
  sub_1AE501548(&qword_1EED98E70);
  sub_1AE4F7878();
  MEMORY[0x1E0C80A78](v0);
  sub_1AE4FE1D8();
  sub_1AE84EFDC();
  sub_1AE508050();
  sub_1AE4FD64C();
  sub_1AE84F018();
  sub_1AE508D98();
  sub_1AE507C80();
  sub_1AE4F667C();
}

void IndexQuery.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1AE4F67EC();
  v2 = v1;
  sub_1AE501548(&qword_1EEDA46F8);
  sub_1AE5635D8();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE84EFDC();
  sub_1AE505AEC();
  if (!v0)
  {
    sub_1AE84F054();
    sub_1AE84FA50();
    sub_1AE50976C();
    sub_1AE4FC0AC();
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  sub_1AE4F667C();
}

void sub_1AE84EDE4()
{
  IndexQuery.init(from:)();
}

void sub_1AE84EDF8()
{
  IndexQuery.encode(to:)();
}

uint64_t IndexQuery.CombineType.hash(into:)()
{
  return sub_1AE926ED4();
}

void IndexQuery.CombineType.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE4F6694();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

unint64_t sub_1AE84EE68()
{
  unint64_t result;

  result = qword_1EEDA46D8;
  if (!qword_1EEDA46D8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.IdSearchRequest, &type metadata for LiveGlobalKnowledge.IdSearchRequest);
    atomic_store(result, (unint64_t *)&qword_1EEDA46D8);
  }
  return result;
}

unint64_t sub_1AE84EEA4()
{
  unint64_t result;

  result = qword_1EEDA46E0;
  if (!qword_1EEDA46E0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for IndexQuery.TriplesIndexQuery, &type metadata for IndexQuery.TriplesIndexQuery);
    atomic_store(result, (unint64_t *)&qword_1EEDA46E0);
  }
  return result;
}

void sub_1AE84EEE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1AE84FAAC();
  v6(v0, v1, v2, v3, v4, v5);
  sub_1AE50533C();
}

unint64_t sub_1AE84EF28()
{
  unint64_t result;

  result = qword_1EED98B38;
  if (!qword_1EED98B38)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963FA4, &type metadata for IndexQuery.TriplesIndexQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98B38);
  }
  return result;
}

unint64_t sub_1AE84EF64()
{
  unint64_t result;

  result = qword_1EED98E08;
  if (!qword_1EED98E08)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery, &type metadata for TriplesQuery);
    atomic_store(result, (unint64_t *)&qword_1EED98E08);
  }
  return result;
}

unint64_t sub_1AE84EFA0()
{
  unint64_t result;

  result = qword_1EEDA46F0;
  if (!qword_1EEDA46F0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery, &type metadata for TriplesQuery);
    atomic_store(result, (unint64_t *)&qword_1EEDA46F0);
  }
  return result;
}

unint64_t sub_1AE84EFDC()
{
  unint64_t result;

  result = qword_1EED98BA0;
  if (!qword_1EED98BA0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963F54, &type metadata for IndexQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98BA0);
  }
  return result;
}

unint64_t sub_1AE84F018()
{
  unint64_t result;

  result = qword_1EED98B98;
  if (!qword_1EED98B98)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for IndexQuery.IndexQueryImpl, &type metadata for IndexQuery.IndexQueryImpl);
    atomic_store(result, (unint64_t *)&qword_1EED98B98);
  }
  return result;
}

unint64_t sub_1AE84F054()
{
  unint64_t result;

  result = qword_1EEDA4700;
  if (!qword_1EEDA4700)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for IndexQuery.IndexQueryImpl, &type metadata for IndexQuery.IndexQueryImpl);
    atomic_store(result, (unint64_t *)&qword_1EEDA4700);
  }
  return result;
}

unint64_t sub_1AE84F094()
{
  unint64_t result;

  result = qword_1EEDA4708;
  if (!qword_1EEDA4708)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for IndexQuery.CombineType, &type metadata for IndexQuery.CombineType);
    atomic_store(result, (unint64_t *)&qword_1EEDA4708);
  }
  return result;
}

void destroy for IndexQuery.IndexQueryImpl(uint64_t a1, uint64_t a2)
{
  sub_1AE84F17C(a1, a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AE583000);
}

void initializeWithCopy for IndexQuery.IndexQueryImpl(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_1AE84F1D0(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_1AE5263DC);
}

void assignWithCopy for IndexQuery.IndexQueryImpl(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_1AE84F2B0(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_1AE5263DC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE583000);
}

void *_s6ClauseV11MatchClauseVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x69uLL);
}

void assignWithTake for IndexQuery.IndexQueryImpl(uint64_t a1)
{
  sub_1AE84F3A4(a1);
}

void type metadata accessor for IndexQuery()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE84F124(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 104) >> 4) & 1;
}

uint64_t sub_1AE84F130(uint64_t result)
{
  *(_BYTE *)(result + 104) &= ~0x10u;
  return result;
}

uint64_t sub_1AE84F140(uint64_t result, char a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 104) & 0xE1 | (16 * (a2 & 1));
  *(_QWORD *)(result + 88) &= 1uLL;
  *(_BYTE *)(result + 104) = v2;
  return result;
}

void type metadata accessor for IndexQuery.IndexQueryImpl()
{
  sub_1AE4F67D4();
}

void destroy for IndexQuery.TriplesIndexQuery(uint64_t a1, uint64_t a2)
{
  sub_1AE84F17C(a1, a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AE58307C);
}

void sub_1AE84F17C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v3;

  v3 = *(_BYTE *)(a1 + 104);
  a3(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), v3);
  sub_1AE4FC538();
}

void initializeWithCopy for IndexQuery.TriplesIndexQuery(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_1AE84F1D0(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_1AE526458);
}

void sub_1AE84F1D0(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  v11 = a2[6];
  v12 = a2[7];
  v13 = a2[8];
  v14 = a2[9];
  v15 = a2[10];
  v16 = a2[11];
  v17 = a2[12];
  v18 = *((_BYTE *)a2 + 104);
  a4(*a2, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v12;
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v15;
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v17;
  *(_BYTE *)(a1 + 104) = v18;
  sub_1AE4F778C();
}

void assignWithCopy for IndexQuery.TriplesIndexQuery(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_1AE84F2B0(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))sub_1AE526458, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE58307C);
}

void sub_1AE84F2B0(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[4];
  v11 = a2[5];
  v12 = a2[6];
  v13 = a2[7];
  v14 = a2[8];
  v21 = a2[9];
  v22 = a2[10];
  v23 = a2[11];
  v24 = a2[12];
  v25 = *((_BYTE *)a2 + 104);
  a4(*a2, v7, v8, v9, v10, v11, v12, v13, v14, v21, v22, v23, v24, v25);
  sub_1AE84FA68();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v21;
  *(_QWORD *)(a1 + 80) = v22;
  *(_QWORD *)(a1 + 88) = v23;
  *(_QWORD *)(a1 + 96) = v24;
  *(_BYTE *)(a1 + 104) = v25;
  a5(v15, v16, v17, v18, v19, v20);
  sub_1AE4F778C();
}

void assignWithTake for IndexQuery.TriplesIndexQuery(uint64_t a1)
{
  sub_1AE84F3A4(a1);
}

void sub_1AE84F3A4(uint64_t a1)
{
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  sub_1AE84FAAC();
  v3 = v2[1];
  *(_OWORD *)a1 = *v2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = v2[3];
  *(_OWORD *)(a1 + 32) = v2[2];
  *(_OWORD *)(a1 + 48) = v4;
  v5 = v2[5];
  *(_OWORD *)(a1 + 64) = v2[4];
  *(_OWORD *)(a1 + 80) = v5;
  *(_QWORD *)(a1 + 96) = v6;
  *(_BYTE *)(a1 + 104) = v7;
  v13(v8, v14, v9, v10, v11, v12);
  sub_1AE50533C();
}

uint64_t getEnumTagSinglePayload for TriplesQuery(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 105))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 88) >> 1;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for TriplesQuery(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 104) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 105) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 80) = 0;
      *(_QWORD *)(a1 + 88) = 2 * -a2;
      *(_QWORD *)(a1 + 96) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 105) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for IndexQuery.TriplesIndexQuery()
{
  sub_1AE4F67D4();
}

void type metadata accessor for IndexQuery.CombineType()
{
  sub_1AE4F67D4();
}

ValueMetadata *type metadata accessor for IndexQuery.CodingKeys()
{
  return &type metadata for IndexQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for IndexQuery.TriplesIndexQuery.CodingKeys()
{
  return &type metadata for IndexQuery.TriplesIndexQuery.CodingKeys;
}

uint64_t _s20IntelligencePlatform10IndexQueryV11CombineTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE84F564 + 4 * byte_1AE963931[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE84F598 + 4 * asc_1AE96392C[v4]))();
}

uint64_t sub_1AE84F598(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE84F5A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE84F5A8);
  return result;
}

uint64_t sub_1AE84F5B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE84F5BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE84F5C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE84F5C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IndexQuery.IndexQueryImpl.CodingKeys()
{
  return &type metadata for IndexQuery.IndexQueryImpl.CodingKeys;
}

ValueMetadata *type metadata accessor for IndexQuery.IndexQueryImpl.TriplesIndexQueryCodingKeys()
{
  return &type metadata for IndexQuery.IndexQueryImpl.TriplesIndexQueryCodingKeys;
}

uint64_t _s20IntelligencePlatform10IndexQueryV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE84F634 + 4 * byte_1AE963936[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE84F654 + 4 * byte_1AE96393B[v4]))();
}

_BYTE *sub_1AE84F634(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE84F654(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE84F65C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE84F664(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE84F66C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE84F674(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IndexQuery.IndexQueryImpl.LiveGlobalKnowledgeIdSearchQueryCodingKeys()
{
  return &type metadata for IndexQuery.IndexQueryImpl.LiveGlobalKnowledgeIdSearchQueryCodingKeys;
}

unint64_t sub_1AE84F694()
{
  unint64_t result;

  result = qword_1EEDA4710;
  if (!qword_1EEDA4710)
  {
    result = MEMORY[0x1AF454B70]("M9G7", &type metadata for IndexQuery.IndexQueryImpl.LiveGlobalKnowledgeIdSearchQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4710);
  }
  return result;
}

unint64_t sub_1AE84F6D4()
{
  unint64_t result;

  result = qword_1EEDA4718;
  if (!qword_1EEDA4718)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963D04, &type metadata for IndexQuery.IndexQueryImpl.TriplesIndexQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4718);
  }
  return result;
}

unint64_t sub_1AE84F714()
{
  unint64_t result;

  result = qword_1EEDA4720;
  if (!qword_1EEDA4720)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963DBC, &type metadata for IndexQuery.IndexQueryImpl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4720);
  }
  return result;
}

unint64_t sub_1AE84F754()
{
  unint64_t result;

  result = qword_1EEDA4728;
  if (!qword_1EEDA4728)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963E74, &type metadata for IndexQuery.TriplesIndexQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4728);
  }
  return result;
}

unint64_t sub_1AE84F794()
{
  unint64_t result;

  result = qword_1EEDA4730;
  if (!qword_1EEDA4730)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963F2C, &type metadata for IndexQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4730);
  }
  return result;
}

unint64_t sub_1AE84F7D4()
{
  unint64_t result;

  result = qword_1EED98BB0;
  if (!qword_1EED98BB0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963E9C, &type metadata for IndexQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98BB0);
  }
  return result;
}

unint64_t sub_1AE84F814()
{
  unint64_t result;

  result = qword_1EED98BA8;
  if (!qword_1EED98BA8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963EC4, &type metadata for IndexQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98BA8);
  }
  return result;
}

unint64_t sub_1AE84F854()
{
  unint64_t result;

  result = qword_1EED98B48;
  if (!qword_1EED98B48)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963DE4, &type metadata for IndexQuery.TriplesIndexQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98B48);
  }
  return result;
}

unint64_t sub_1AE84F894()
{
  unint64_t result;

  result = qword_1EED98B40;
  if (!qword_1EED98B40)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963E0C, &type metadata for IndexQuery.TriplesIndexQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98B40);
  }
  return result;
}

unint64_t sub_1AE84F8D4()
{
  unint64_t result;

  result = qword_1EED98B78;
  if (!qword_1EED98B78)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963C74, &type metadata for IndexQuery.IndexQueryImpl.TriplesIndexQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98B78);
  }
  return result;
}

unint64_t sub_1AE84F914()
{
  unint64_t result;

  result = qword_1EED98B70;
  if (!qword_1EED98B70)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963C9C, &type metadata for IndexQuery.IndexQueryImpl.TriplesIndexQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98B70);
  }
  return result;
}

unint64_t sub_1AE84F954()
{
  unint64_t result;

  result = qword_1EED98B60;
  if (!qword_1EED98B60)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963BBC, &type metadata for IndexQuery.IndexQueryImpl.LiveGlobalKnowledgeIdSearchQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98B60);
  }
  return result;
}

unint64_t sub_1AE84F994()
{
  unint64_t result;

  result = qword_1EED98B58;
  if (!qword_1EED98B58)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963BE4, &type metadata for IndexQuery.IndexQueryImpl.LiveGlobalKnowledgeIdSearchQueryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98B58);
  }
  return result;
}

unint64_t sub_1AE84F9D4()
{
  unint64_t result;

  result = qword_1EED98B90;
  if (!qword_1EED98B90)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963D2C, &type metadata for IndexQuery.IndexQueryImpl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98B90);
  }
  return result;
}

unint64_t sub_1AE84FA14()
{
  unint64_t result;

  result = qword_1EED98B88;
  if (!qword_1EED98B88)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE963D54, &type metadata for IndexQuery.IndexQueryImpl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98B88);
  }
  return result;
}

uint64_t sub_1AE84FA50()
{
  return sub_1AE926BEC();
}

__n128 sub_1AE84FA68()
{
  __n128 *v0;

  return v0[4];
}

uint64_t sub_1AE84FA88()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE84FAA0()
{
  return sub_1AE925F74();
}

__n128 sub_1AE84FAAC()
{
  __n128 *v0;

  return v0[4];
}

unint64_t sub_1AE84FAC0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 200) = 1;
  return sub_1AE84DE28();
}

uint64_t sub_1AE84FACC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE84FAE0()
{
  uint64_t v0;

  return sub_1AE6263E0(v0);
}

uint64_t sub_1AE84FAEC()
{
  uint64_t v0;

  return v0;
}

void sub_1AE84FB00()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 232);
  *(_QWORD *)(v0 - 200) = *(_QWORD *)(v0 - 240);
  *(_QWORD *)(v0 - 192) = v1;
}

_QWORD *sub_1AE84FB14(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  unint64_t v17;
  unsigned __int8 v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = a3[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1AE9248DC();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_retain();
    swift_retain();
    v13(v10, v11, v12);
    v14 = a3[8];
    v15 = (_QWORD *)((char *)v7 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = *(_QWORD *)((char *)a2 + v14 + 88);
    v18 = *((_BYTE *)a2 + v14 + 104);
    if (v17 >> 1 == 0xFFFFFFFF && (v18 & 0x1E) == 0)
    {
      memcpy(v15, v16, 0x69uLL);
    }
    else
    {
      v20 = *v16;
      v21 = v16[1];
      v22 = v16[2];
      v23 = v16[3];
      v39 = v16[5];
      v40 = v16[4];
      v37 = v16[7];
      v38 = v16[6];
      v41 = v16[8];
      v42 = v16[9];
      v43 = v16[10];
      v44 = v16[12];
      sub_1AE5263DC(*v16, v21, v22, v23, v40, v39, v38, v37, v41, v42, v43, v17, v44, v18);
      *v15 = v20;
      v15[1] = v21;
      v15[2] = v22;
      v15[3] = v23;
      v15[4] = v40;
      v15[5] = v39;
      v15[6] = v38;
      v15[7] = v37;
      v15[8] = v41;
      v15[9] = v42;
      v15[10] = v43;
      v15[11] = v17;
      v15[12] = v44;
      *((_BYTE *)v15 + 104) = v18;
    }
    v24 = a3[10];
    *(_QWORD *)((char *)v7 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    *(_QWORD *)((char *)v7 + v24) = *(_QWORD *)((char *)a2 + v24);
    v25 = a3[11];
    v26 = (char *)v7 + v25;
    v27 = (char *)a2 + v25;
    v28 = *(_QWORD *)((char *)a2 + v25);
    v29 = *(_QWORD *)((char *)a2 + v25 + 8);
    v30 = *((_BYTE *)a2 + v25 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AE526540(v28, v29, v30);
    *(_QWORD *)v26 = v28;
    *((_QWORD *)v26 + 1) = v29;
    v26[16] = v30;
    *((_QWORD *)v26 + 3) = *((_QWORD *)v27 + 3);
    v31 = a3[12];
    v32 = a3[13];
    v33 = (_QWORD *)((char *)v7 + v31);
    v34 = (_QWORD *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v33[2] = v34[2];
    *((_BYTE *)v7 + v32) = *((_BYTE *)a2 + v32);
    *((_BYTE *)v7 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1AE84FD40(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;

  swift_release();
  swift_release();
  v4 = a1 + a2[7];
  v5 = sub_1AE9248DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[8];
  v7 = *(_QWORD *)(v6 + 88);
  v8 = *(_BYTE *)(v6 + 104);
  if (v7 >> 1 != 0xFFFFFFFF || (v8 & 0x1E) != 0)
    sub_1AE583000(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_QWORD *)(v6 + 72), *(_QWORD *)(v6 + 80), v7, *(_QWORD *)(v6 + 96), v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE579F84(*(_QWORD *)(a1 + a2[11]), *(_QWORD *)(a1 + a2[11] + 8), *(_BYTE *)(a1 + a2[11] + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1AE84FE40(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  unint64_t v15;
  unsigned __int8 v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AE9248DC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  v12 = a3[8];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = *(_QWORD *)((char *)a2 + v12 + 88);
  v16 = *((_BYTE *)a2 + v12 + 104);
  if (v15 >> 1 == 0xFFFFFFFF && (v16 & 0x1E) == 0)
  {
    memcpy(v13, v14, 0x69uLL);
  }
  else
  {
    v18 = *v14;
    v19 = v14[1];
    v20 = v14[2];
    v21 = v14[3];
    v37 = v14[5];
    v38 = v14[4];
    v35 = v14[7];
    v36 = v14[6];
    v39 = v14[8];
    v40 = v14[9];
    v41 = v14[10];
    v42 = v14[12];
    sub_1AE5263DC(*v14, v19, v20, v21, v38, v37, v36, v35, v39, v40, v41, v15, v42, v16);
    *v13 = v18;
    v13[1] = v19;
    v13[2] = v20;
    v13[3] = v21;
    v13[4] = v38;
    v13[5] = v37;
    v13[6] = v36;
    v13[7] = v35;
    v13[8] = v39;
    v13[9] = v40;
    v13[10] = v41;
    v13[11] = v15;
    v13[12] = v42;
    *((_BYTE *)v13 + 104) = v16;
  }
  v22 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + v22) = *(_QWORD *)((char *)a2 + v22);
  v23 = a3[11];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = *(_QWORD *)((char *)a2 + v23);
  v27 = *(_QWORD *)((char *)a2 + v23 + 8);
  v28 = *((_BYTE *)a2 + v23 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE526540(v26, v27, v28);
  *(_QWORD *)v24 = v26;
  *((_QWORD *)v24 + 1) = v27;
  v24[16] = v28;
  *((_QWORD *)v24 + 3) = *((_QWORD *)v25 + 3);
  v29 = a3[12];
  v30 = a3[13];
  v31 = (_QWORD *)((char *)a1 + v29);
  v32 = (_QWORD *)((char *)a2 + v29);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v31[2] = v32[2];
  *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1AE850044(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  unsigned __int8 v16;
  BOOL v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AE9248DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[8];
  v11 = (char *)a1 + v10;
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = *(_QWORD *)((char *)a1 + v10 + 88);
  v14 = *((_BYTE *)a1 + v10 + 104) & 0x1E;
  v15 = *(_QWORD *)((char *)a2 + v10 + 88);
  v16 = *((_BYTE *)a2 + v10 + 104);
  v18 = (v16 & 0x1E) == 0 && v15 >> 1 == 0xFFFFFFFF;
  if (v13 >> 1 == 0xFFFFFFFF && v14 == 0)
  {
    if (!v18)
    {
      v38 = v12[1];
      v39 = v12[2];
      v40 = v12[3];
      v41 = v12[5];
      v62 = v41;
      v64 = v12[4];
      v42 = v12[7];
      v58 = v42;
      v60 = v12[6];
      v66 = v12[8];
      v68 = v12[9];
      v70 = v12[10];
      v72 = v12[12];
      v43 = *v12;
      sub_1AE5263DC(v43, v38, v39, v40, v64, v41, v60, v42, v66, v68, v70, v15, v72, v16);
      *(_QWORD *)v11 = v43;
      *((_QWORD *)v11 + 1) = v38;
      *((_QWORD *)v11 + 2) = v39;
      *((_QWORD *)v11 + 3) = v40;
      *((_QWORD *)v11 + 4) = v64;
      *((_QWORD *)v11 + 5) = v62;
      *((_QWORD *)v11 + 6) = v60;
      *((_QWORD *)v11 + 7) = v58;
      *((_QWORD *)v11 + 8) = v66;
      *((_QWORD *)v11 + 9) = v68;
      *((_QWORD *)v11 + 10) = v70;
      *((_QWORD *)v11 + 11) = v15;
      *((_QWORD *)v11 + 12) = v72;
      v11[104] = v16;
      goto LABEL_17;
    }
  }
  else
  {
    if (!v18)
    {
      v20 = v12[1];
      v63 = v20;
      v65 = *v12;
      v21 = v12[2];
      v22 = v12[3];
      v23 = v12[4];
      v24 = v12[6];
      v59 = v24;
      v61 = v12[5];
      v57 = v12[7];
      v67 = v12[8];
      v69 = v12[9];
      v71 = v12[10];
      v25 = v12[12];
      sub_1AE5263DC(v65, v20, v21, v22, v23, v61, v24, v57, v67, v69, v71, v15, v25, v16);
      v26 = *(_QWORD *)v11;
      v27 = *((_QWORD *)v11 + 1);
      v28 = *((_QWORD *)v11 + 2);
      v29 = *((_QWORD *)v11 + 3);
      v30 = *((_QWORD *)v11 + 4);
      v31 = *((_QWORD *)v11 + 5);
      v32 = *((_QWORD *)v11 + 6);
      v33 = *((_QWORD *)v11 + 7);
      v34 = *((_OWORD *)v11 + 4);
      v35 = *((_OWORD *)v11 + 5);
      v36 = *((_QWORD *)v11 + 12);
      v37 = v11[104];
      *(_QWORD *)v11 = v65;
      *((_QWORD *)v11 + 1) = v63;
      *((_QWORD *)v11 + 2) = v21;
      *((_QWORD *)v11 + 3) = v22;
      *((_QWORD *)v11 + 4) = v23;
      *((_QWORD *)v11 + 5) = v61;
      *((_QWORD *)v11 + 6) = v59;
      *((_QWORD *)v11 + 7) = v57;
      *((_QWORD *)v11 + 8) = v67;
      *((_QWORD *)v11 + 9) = v69;
      *((_QWORD *)v11 + 10) = v71;
      *((_QWORD *)v11 + 11) = v15;
      *((_QWORD *)v11 + 12) = v25;
      v11[104] = v16;
      sub_1AE583000(v26, v27, v28, v29, v30, v31, v32, v33, v34, *((uint64_t *)&v34 + 1), v35, *((uint64_t *)&v35 + 1), v36, v37);
      goto LABEL_17;
    }
    sub_1AE73E8EC((uint64_t)v11);
  }
  memcpy(v11, v12, 0x69uLL);
LABEL_17:
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = a3[11];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = *(_QWORD *)((char *)a2 + v44);
  v48 = *(_QWORD *)((char *)a2 + v44 + 8);
  v49 = *((_BYTE *)a2 + v44 + 16);
  sub_1AE526540(v47, v48, v49);
  v50 = *(_QWORD *)v45;
  v51 = *((_QWORD *)v45 + 1);
  *(_QWORD *)v45 = v47;
  *((_QWORD *)v45 + 1) = v48;
  v52 = v45[16];
  v45[16] = v49;
  sub_1AE579F84(v50, v51, v52);
  *((_QWORD *)v45 + 3) = *((_QWORD *)v46 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = a3[12];
  v54 = (_QWORD *)((char *)a1 + v53);
  v55 = (char *)a2 + v53;
  *v54 = *(_QWORD *)((char *)a2 + v53);
  v54[1] = *(_QWORD *)((char *)a2 + v53 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54[2] = *((_QWORD *)v55 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  return a1;
}

uint64_t sub_1AE850398(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1AE9248DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  memcpy((void *)(a1 + a3[8]), (const void *)(a2 + a3[8]), 0x69uLL);
  v10 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = a3[11];
  v12 = a3[12];
  v13 = *(_OWORD *)(a2 + v11);
  v14 = *(_OWORD *)(a2 + v11 + 16);
  v15 = (_OWORD *)(a1 + v11);
  *v15 = v13;
  v15[1] = v14;
  v16 = a1 + v12;
  v17 = a2 + v12;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  v18 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  return a1;
}

_QWORD *sub_1AE850474(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _OWORD *v12;
  unint64_t v13;
  unsigned __int8 v14;
  unint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AE9248DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[8];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_OWORD *)((char *)a2 + v10);
  v13 = *(_QWORD *)((char *)a1 + v10 + 88);
  v14 = *((_BYTE *)v11 + 104);
  if (v13 >> 1 == 0xFFFFFFFF && (v14 & 0x1E) == 0)
    goto LABEL_11;
  v16 = *((_QWORD *)v12 + 11);
  v17 = *((_BYTE *)v12 + 104);
  if (v16 >> 1 == 0xFFFFFFFF && (v17 & 0x1E) == 0)
  {
    sub_1AE73E8EC((uint64_t)v11);
LABEL_11:
    memcpy(v11, v12, 0x69uLL);
    goto LABEL_12;
  }
  v19 = *((_QWORD *)v12 + 10);
  v20 = *((_QWORD *)v12 + 12);
  v21 = *v11;
  v22 = v11[1];
  v23 = v11[2];
  v24 = v11[3];
  v25 = v11[4];
  v26 = v11[5];
  v27 = v11[6];
  v28 = v11[7];
  v29 = *((_OWORD *)v11 + 4);
  v30 = v11[10];
  v31 = v11[12];
  v32 = v12[1];
  *(_OWORD *)v11 = *v12;
  *((_OWORD *)v11 + 1) = v32;
  v33 = v12[3];
  *((_OWORD *)v11 + 2) = v12[2];
  *((_OWORD *)v11 + 3) = v33;
  *((_OWORD *)v11 + 4) = v12[4];
  v11[10] = v19;
  v11[11] = v16;
  v11[12] = v20;
  *((_BYTE *)v11 + 104) = v17;
  sub_1AE583000(v21, v22, v23, v24, v25, v26, v27, v28, v29, *((uint64_t *)&v29 + 1), v30, v13, v31, v14);
LABEL_12:
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  v34 = a3[11];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  LOBYTE(v34) = *((_BYTE *)a2 + v34 + 16);
  v37 = *(_QWORD *)v35;
  v38 = *((_QWORD *)v35 + 1);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  v39 = v35[16];
  v35[16] = v34;
  sub_1AE579F84(v37, v38, v39);
  *((_QWORD *)v35 + 3) = *((_QWORD *)v36 + 3);
  swift_bridgeObjectRelease();
  v40 = a3[12];
  v41 = (_QWORD *)((char *)a1 + v40);
  v42 = (char *)a2 + v40;
  v43 = *(_QWORD *)((char *)a2 + v40 + 8);
  *v41 = *(_QWORD *)((char *)a2 + v40);
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v41[2] = *((_QWORD *)v42 + 2);
  swift_bridgeObjectRelease();
  v44 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  *((_BYTE *)a1 + v44) = *((_BYTE *)a2 + v44);
  return a1;
}

uint64_t sub_1AE850664()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE850670(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1AE4F675C();
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1AE8506E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1AE8506EC(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = sub_1AE4F675C();
    return (_QWORD *)_s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for QueryContext()
{
  uint64_t result;

  result = qword_1ED30FA88;
  if (!qword_1ED30FA88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AE85078C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AE9248DC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AE850854@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  int *Context;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  char *v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = v1[1];
  v4 = MEMORY[0x1E0DEE9D8];
  v41 = *v1;
  if (v3)
  {
    swift_retain();
  }
  else
  {
    type metadata accessor for ResultGraph();
    v3 = swift_allocObject();
    swift_retain();
    *(_QWORD *)(v3 + 16) = sub_1AE925C98();
    *(_QWORD *)(v3 + 24) = v4;
  }
  v40 = v3;
  v39 = v1[2];
  Context = (int *)type metadata accessor for QueryContext();
  v6 = Context[7];
  v7 = (char *)v1 + v6;
  v8 = (char *)a1 + v6;
  v9 = sub_1AE4F675C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, v7, v9);
  v10 = (char *)v1 + Context[8];
  v11 = *((_QWORD *)v10 + 1);
  v35 = *(_QWORD *)v10;
  v12 = *((_QWORD *)v10 + 2);
  v42 = *((_QWORD *)v10 + 3);
  v31 = *((_QWORD *)v10 + 4);
  v32 = *((_QWORD *)v10 + 5);
  v33 = *((_QWORD *)v10 + 6);
  v34 = *((_QWORD *)v10 + 7);
  v13 = *((_QWORD *)v10 + 9);
  v46 = *((_QWORD *)v10 + 8);
  v14 = *((_QWORD *)v10 + 10);
  v15 = *((_QWORD *)v10 + 11);
  v16 = *((_QWORD *)v10 + 12);
  v45 = *(_QWORD *)((char *)v1 + Context[9]);
  v17 = v10[104];
  v37 = *((_BYTE *)v1 + Context[13]);
  v30 = *(_QWORD *)((char *)v1 + Context[10]);
  v18 = (char *)v1 + Context[11];
  v43 = *(_QWORD *)v18;
  v44 = *((_QWORD *)v18 + 1);
  v47 = *((_QWORD *)v18 + 3);
  v38 = *((_BYTE *)v1 + Context[14]);
  v19 = v18[16];
  v36 = v19;
  swift_retain();
  sub_1AE582F40(v35, v11, v12, v42, v31, v32, v33, v34, v46, v13, v14, v15, v16, v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE526540(v43, v44, v19);
  swift_bridgeObjectRetain();
  v20 = MEMORY[0x1E0DEE9D8];
  result = swift_bridgeObjectRelease_n();
  v22 = Context[8];
  v23 = Context[10];
  v24 = Context[12];
  v25 = Context[13];
  v26 = Context[14];
  *a1 = v41;
  a1[1] = v40;
  a1[2] = v39;
  v27 = (char *)a1 + v22;
  *(_QWORD *)v27 = v35;
  *((_QWORD *)v27 + 1) = v11;
  *((_QWORD *)v27 + 2) = v12;
  *((_QWORD *)v27 + 3) = v42;
  *((_QWORD *)v27 + 4) = v31;
  *((_QWORD *)v27 + 5) = v32;
  *((_QWORD *)v27 + 6) = v33;
  *((_QWORD *)v27 + 7) = v34;
  *((_QWORD *)v27 + 8) = v46;
  *((_QWORD *)v27 + 9) = v13;
  *((_QWORD *)v27 + 10) = v14;
  *((_QWORD *)v27 + 11) = v15;
  *((_QWORD *)v27 + 12) = v16;
  v27[104] = v17;
  *(_QWORD *)((char *)a1 + Context[9]) = v45;
  *((_BYTE *)a1 + v25) = v37;
  v28 = (_QWORD *)((char *)a1 + v24);
  v28[1] = v20;
  v28[2] = v20;
  *v28 = 0;
  *(_QWORD *)((char *)a1 + v23) = v30;
  v29 = (char *)a1 + Context[11];
  *(_QWORD *)v29 = v43;
  *((_QWORD *)v29 + 1) = v44;
  v29[16] = v36;
  *((_QWORD *)v29 + 3) = v47;
  *((_BYTE *)a1 + v26) = v38;
  return result;
}

void sub_1AE850B14(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *Context;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[13];
  char v65;
  _QWORD v66[5];
  unsigned __int8 v67;
  uint64_t v68;
  uint64_t v69;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD **)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v58 = *(_QWORD *)(a2 + 64);
  v59 = *(_QWORD *)(a2 + 56);
  v56 = *(_QWORD *)(a2 + 80);
  v57 = *(_QWORD *)(a2 + 72);
  v54 = *(_QWORD *)(a2 + 96);
  v55 = *(_QWORD *)(a2 + 88);
  HIDWORD(v53) = *(unsigned __int8 *)(a2 + 104);
  Context = (int *)type metadata accessor for QueryContext();
  v14 = v3 + Context[8];
  v15 = *(_QWORD *)(v14 + 88);
  v16 = *(_BYTE *)(v14 + 104) & 0x1E;
  if (v15 >> 1 == 0xFFFFFFFF && v16 == 0)
  {
    *(_OWORD *)a3 = xmmword_1AE964170;
    *(_QWORD *)(a3 + 16) = 0x80000001AE988FD0;
  }
  else
  {
    v18 = *(_QWORD *)(a1 + 48);
    v19 = 50 * v18;
    if ((unsigned __int128)(v18 * (__int128)50) >> 64 == (50 * v18) >> 63)
    {
      v20 = Context[12];
      v21 = *(_QWORD *)(v3 + v20);
      v22 = __OFADD__(v21, 1);
      v23 = v21 + 1;
      if (!v22)
      {
        v24 = *(_BYTE *)(a1 + 64);
        v25 = v12;
        v26 = *(_QWORD *)(v3 + Context[10]);
        v27 = v3 + Context[11];
        v28 = v11;
        v29 = v10;
        v31 = *(_QWORD *)v27;
        v30 = *(_QWORD *)(v27 + 8);
        v32 = v9;
        v33 = *(_BYTE *)(v27 + 16);
        v34 = v8;
        v35 = *(_QWORD *)(v27 + 24);
        *(_QWORD *)(v3 + v20) = v23;
        *(_BYTE *)(a1 + 80) = 1;
        v36 = *(_QWORD *)(v3 + Context[9]);
        v68 = v35;
        v69 = v36;
        LOBYTE(v66[0]) = v24;
        v66[1] = v19;
        v66[2] = v26;
        v66[3] = v31;
        v66[4] = v30;
        v67 = v33;
        v64[0] = v6;
        v64[1] = (uint64_t)v7;
        v64[2] = v34;
        v64[3] = v32;
        v64[4] = v29;
        v64[5] = v28;
        v64[6] = v25;
        v64[7] = v59;
        v64[8] = v58;
        v64[9] = v57;
        v64[10] = v56;
        v64[11] = v55;
        v64[12] = v54;
        v65 = BYTE4(v53);
        swift_bridgeObjectRetain();
        sub_1AE526540(v31, v30, v33);
        swift_bridgeObjectRetain();
        sub_1AE742238(v66, v64, a3);
        swift_bridgeObjectRelease();
        sub_1AE4FF3E4();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    swift_once();
    v37 = sub_1AE925B6C();
    sub_1AE4FB608(v37, (uint64_t)qword_1ED3193D8);
    sub_1AE4FB8E0();
    sub_1AE4FB8E0();
    v38 = sub_1AE925B54();
    v39 = sub_1AE9265EC();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      v64[0] = swift_slowAlloc();
      *(_DWORD *)v40 = 136315138;
      v66[0] = a1;
      sub_1AE4FB8E0();
      sub_1AE501548((uint64_t *)&unk_1ED319C60);
      v41 = sub_1AE925E90();
      sub_1AE520ED4(v41, v42, (uint64_t)v64, v43, v44, v45, v46, v47, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62,
        v63);
      v66[0] = v48;
      sub_1AE92676C();
      swift_bridgeObjectRelease();
      sub_1AE4F6834();
      sub_1AE4F6834();
      _os_log_impl(&dword_1AE4F2000, v38, v39, "QueryContext: indexExecute: error from index handler execution: %s", v40, 0xCu);
      swift_arrayDestroy();
      sub_1AE4F9064();
    }
    sub_1AE4F6834();
    sub_1AE4F6834();

    swift_getErrorValue();
    v49 = sub_1AE926E20();
    v51 = v50;
    sub_1AE4F6834();
    *v7 = 0;
    v7[1] = v49;
    v7[2] = v51;
  }
}

ValueMetadata *type metadata accessor for QueryContextRanker()
{
  return &type metadata for QueryContextRanker;
}

void sub_1AE850E98(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AE889458();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1AE851260(v5);
  *a1 = v2;
}

uint64_t sub_1AE850F00(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v34;

  v3 = v2;
  v32 = *a2;
  v30 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v31 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v7 << 6); ; i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * i);
    v34 = v14;
    v15 = sub_1AE500724();
    if (v2)
    {
      swift_bridgeObjectRelease();
      return sub_1AE4FF404();
    }
    v16 = v15;
    v34 = v32;
    sub_1AE500724();
    v3 = 0;
    sub_1AE501548(&qword_1EEDA4740);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AE934250;
    *(_QWORD *)(inited + 32) = v14;
    *(_QWORD *)(inited + 40) = v16;
    sub_1AE501548(&qword_1EEDA3AD8);
    sub_1AE5962D8();
    v18 = sub_1AE925C98();
    v19 = MEMORY[0x1E0C80A78](v18);
    sub_1AE851878(v19, (double (*)(uint64_t *, _QWORD *, uint64_t))sub_1AE851258);
    sub_1AE62C0C4(v20);
    v22 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = sub_1AE56AC58(v22);
    LOBYTE(v16) = v24;
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      v23 = 0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_19;
    }
    else if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      goto LABEL_19;
    }
    sub_1AE5011E4();
    v8 = v27;
LABEL_19:
    v25 = *(_QWORD *)(v8 + 16);
    if (v25 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_1AE5011E4();
      v8 = v28;
    }
    *(_QWORD *)(v8 + 16) = v25 + 1;
    v26 = v8 + 16 * v25;
    *(_QWORD *)(v26 + 32) = v14;
    *(_QWORD *)(v26 + 40) = v23;
    if (v6)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v7 >= v31)
      goto LABEL_30;
    v12 = *(_QWORD *)(v30 + 8 * v7);
    if (!v12)
      break;
LABEL_15:
    v6 = (v12 - 1) & v12;
  }
  v13 = v7 + 1;
  if (v7 + 1 >= v31)
    goto LABEL_30;
  v12 = *(_QWORD *)(v30 + 8 * v13);
  if (v12)
    goto LABEL_14;
  v13 = v7 + 2;
  if (v7 + 2 >= v31)
    goto LABEL_30;
  v12 = *(_QWORD *)(v30 + 8 * v13);
  if (v12)
  {
LABEL_14:
    v7 = v13;
    goto LABEL_15;
  }
  v13 = v7 + 3;
  if (v7 + 3 < v31)
  {
    v12 = *(_QWORD *)(v30 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        v7 = v13 + 1;
        if (__OFADD__(v13, 1))
          goto LABEL_33;
        if (v7 >= v31)
          goto LABEL_30;
        v12 = *(_QWORD *)(v30 + 8 * v7);
        ++v13;
        if (v12)
          goto LABEL_15;
      }
    }
    goto LABEL_14;
  }
LABEL_30:
  sub_1AE4FF404();
  v34 = v8;
  swift_bridgeObjectRetain_n();
  sub_1AE850E98(&v34);
  if (!v3)
  {
    swift_bridgeObjectRelease_n();
    return v34;
  }
LABEL_34:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1AE851258(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1AE852E84(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_1AE851260(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double *v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  double v26;
  uint64_t v27;
  double *v28;
  double v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;

  v3 = a1[1];
  v4 = sub_1AE926D0C();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1AE847404(0, v3, 1, a1);
      return;
    }
    goto LABEL_124;
  }
  v5 = v4;
  sub_1AE519740(v3 / 2);
  v91 = a1;
  v92 = v6;
  v96 = v7;
  v94 = v3;
  if (v3 <= 0)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    v32 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_90:
    if (v32 < 2)
    {
LABEL_101:
      swift_bridgeObjectRelease();
      if (v94 >= -1)
      {
        *(_QWORD *)(v92 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_129;
    }
    v83 = *v91;
    while (1)
    {
      v84 = v32 - 2;
      if (v32 < 2)
        break;
      if (!v83)
        goto LABEL_133;
      v85 = *(_QWORD *)(v10 + 32 + 16 * v84);
      v86 = *(_QWORD *)(v10 + 32 + 16 * (v32 - 1) + 8);
      sub_1AE847470((double *)(v83 + 16 * v85), (double *)(v83 + 16 * *(_QWORD *)(v10 + 32 + 16 * (v32 - 1))), v83 + 16 * v86, v96);
      if (v1)
        goto LABEL_86;
      if (v86 < v85)
        goto LABEL_119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE8893F4();
        v10 = v89;
      }
      if (v84 >= *(_QWORD *)(v10 + 16))
        goto LABEL_120;
      v87 = (_QWORD *)(v10 + 32 + 16 * v84);
      *v87 = v85;
      v87[1] = v86;
      v88 = *(_QWORD *)(v10 + 16);
      if (v32 > v88)
        goto LABEL_121;
      memmove((void *)(v10 + 32 + 16 * (v32 - 1)), (const void *)(v10 + 32 + 16 * v32), 16 * (v88 - v32));
      *(_QWORD *)(v10 + 16) = v88 - 1;
      v32 = v88 - 1;
      if (v88 <= 2)
        goto LABEL_101;
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v90 = *a1 + 40;
  v10 = MEMORY[0x1E0DEE9D8];
  v93 = v5;
  v95 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(double *)(v9 + 16 * v8 + 8);
      v13 = *(double *)(v9 + 16 * v11 + 8);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v14 = (double *)(v90 + 16 * v11);
        v15 = v12;
        while (1)
        {
          v16 = v15;
          v15 = *v14;
          if (v13 < v12 == v16 >= *v14)
            break;
          ++v8;
          v14 += 2;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v13 < v12)
      {
        if (v8 < v11)
          goto LABEL_126;
        if (v11 < v8)
        {
          v17 = 16 * v8;
          v18 = 16 * v11;
          v19 = v8;
          v20 = v11;
          do
          {
            if (v20 != --v19)
            {
              if (!v9)
                goto LABEL_132;
              v21 = v9 + v17;
              v22 = *(_QWORD *)(v9 + v18);
              v23 = *(_QWORD *)(v9 + v18 + 8);
              *(_OWORD *)(v9 + v18) = *(_OWORD *)(v9 + v17 - 16);
              *(_QWORD *)(v21 - 16) = v22;
              *(_QWORD *)(v21 - 8) = v23;
            }
            ++v20;
            v17 -= 16;
            v18 += 16;
          }
          while (v20 < v19);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_123;
      if (v8 - v11 < v5)
      {
        v24 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_127;
        if (v24 >= v3)
          v24 = v3;
        if (v24 < v11)
          goto LABEL_128;
        if (v8 != v24)
        {
          v25 = (double *)(v9 + 16 * v8);
          do
          {
            v26 = *(double *)(v9 + 16 * v8 + 8);
            v27 = v11;
            v28 = v25;
            do
            {
              if (*(v28 - 1) >= v26)
                break;
              if (!v9)
                goto LABEL_130;
              v29 = *v28;
              *(_OWORD *)v28 = *((_OWORD *)v28 - 1);
              *(v28 - 1) = v26;
              *(v28 - 2) = v29;
              v28 -= 2;
              ++v27;
            }
            while (v8 != v27);
            ++v8;
            v25 += 2;
          }
          while (v8 != v24);
          v8 = v24;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE889310(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
      v10 = v81;
    }
    v31 = *(_QWORD *)(v10 + 16);
    v30 = *(_QWORD *)(v10 + 24);
    v32 = v31 + 1;
    v9 = v95;
    if (v31 >= v30 >> 1)
    {
      sub_1AE889310(v30 > 1, v31 + 1, 1, (char *)v10);
      v9 = v95;
      v10 = v82;
    }
    *(_QWORD *)(v10 + 16) = v32;
    v33 = v10 + 32;
    v34 = (uint64_t *)(v10 + 32 + 16 * v31);
    *v34 = v11;
    v34[1] = v8;
    if (v31)
      break;
    v32 = 1;
LABEL_81:
    v5 = v93;
    v3 = v94;
    if (v8 >= v94)
      goto LABEL_90;
  }
  while (1)
  {
    v35 = v32 - 1;
    if (v32 >= 4)
    {
      v40 = v33 + 16 * v32;
      v41 = *(_QWORD *)(v40 - 64);
      v42 = *(_QWORD *)(v40 - 56);
      v46 = __OFSUB__(v42, v41);
      v43 = v42 - v41;
      if (v46)
        goto LABEL_107;
      v45 = *(_QWORD *)(v40 - 48);
      v44 = *(_QWORD *)(v40 - 40);
      v46 = __OFSUB__(v44, v45);
      v38 = v44 - v45;
      v39 = v46;
      if (v46)
        goto LABEL_108;
      v47 = v32 - 2;
      v48 = (uint64_t *)(v33 + 16 * (v32 - 2));
      v50 = *v48;
      v49 = v48[1];
      v46 = __OFSUB__(v49, v50);
      v51 = v49 - v50;
      if (v46)
        goto LABEL_109;
      v46 = __OFADD__(v38, v51);
      v52 = v38 + v51;
      if (v46)
        goto LABEL_111;
      if (v52 >= v43)
      {
        v70 = (uint64_t *)(v33 + 16 * v35);
        v72 = *v70;
        v71 = v70[1];
        v46 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v46)
          goto LABEL_117;
        v63 = v38 < v73;
        goto LABEL_70;
      }
    }
    else
    {
      if (v32 != 3)
      {
        v64 = *(_QWORD *)(v10 + 32);
        v65 = *(_QWORD *)(v10 + 40);
        v46 = __OFSUB__(v65, v64);
        v57 = v65 - v64;
        v58 = v46;
        goto LABEL_64;
      }
      v37 = *(_QWORD *)(v10 + 32);
      v36 = *(_QWORD *)(v10 + 40);
      v46 = __OFSUB__(v36, v37);
      v38 = v36 - v37;
      v39 = v46;
    }
    if ((v39 & 1) != 0)
      goto LABEL_110;
    v47 = v32 - 2;
    v53 = (uint64_t *)(v33 + 16 * (v32 - 2));
    v55 = *v53;
    v54 = v53[1];
    v56 = __OFSUB__(v54, v55);
    v57 = v54 - v55;
    v58 = v56;
    if (v56)
      goto LABEL_112;
    v59 = (uint64_t *)(v33 + 16 * v35);
    v61 = *v59;
    v60 = v59[1];
    v46 = __OFSUB__(v60, v61);
    v62 = v60 - v61;
    if (v46)
      goto LABEL_114;
    if (__OFADD__(v57, v62))
      goto LABEL_116;
    if (v57 + v62 >= v38)
    {
      v63 = v38 < v62;
LABEL_70:
      if (v63)
        v35 = v47;
      goto LABEL_72;
    }
LABEL_64:
    if ((v58 & 1) != 0)
      goto LABEL_113;
    v66 = (uint64_t *)(v33 + 16 * v35);
    v68 = *v66;
    v67 = v66[1];
    v46 = __OFSUB__(v67, v68);
    v69 = v67 - v68;
    if (v46)
      goto LABEL_115;
    if (v69 < v57)
      goto LABEL_81;
LABEL_72:
    v74 = v10;
    v75 = v35 - 1;
    if (v35 - 1 >= v32)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v9)
      goto LABEL_131;
    v76 = (uint64_t *)(v33 + 16 * v75);
    v77 = *v76;
    v78 = (_QWORD *)(v33 + 16 * v35);
    v79 = v78[1];
    sub_1AE847470((double *)(v9 + 16 * *v76), (double *)(v9 + 16 * *v78), v9 + 16 * v79, v96);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_104;
    if (v35 > *(_QWORD *)(v74 + 16))
      goto LABEL_105;
    *v76 = v77;
    *(_QWORD *)(v33 + 16 * v75 + 8) = v79;
    v80 = *(_QWORD *)(v74 + 16);
    if (v35 >= v80)
      goto LABEL_106;
    v10 = v74;
    v32 = v80 - 1;
    memmove((void *)(v33 + 16 * v35), v78 + 2, 16 * (v80 - 1 - v35));
    *(_QWORD *)(v74 + 16) = v80 - 1;
    v9 = v95;
    if (v80 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v94 < -1)
    goto LABEL_125;
  *(_QWORD *)(v92 + 16) = 0;
  swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for QueryContextSimilarity()
{
  return &type metadata for QueryContextSimilarity;
}

void sub_1AE851878(uint64_t a1, double (*a2)(uint64_t *, _QWORD *, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1AE521988();
    v4 = v20;
    v5 = sub_1AE64A338(a1);
    if ((v5 & 0x8000000000000000) == 0)
    {
      v7 = v5;
      if (v5 < 1 << *(_BYTE *)(a1 + 32))
      {
        v8 = v6;
        v9 = a1 + 64;
        while ((*(_QWORD *)(v9 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
        {
          if (v8 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v17 = v2;
          v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v7);
          v18[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v7);
          v18[1] = v10;
          swift_bridgeObjectRetain();
          v11 = a2(&v19, v18, v10);
          sub_1AE4F81B8();
          v12 = v19;
          v20 = v4;
          v13 = *(_QWORD *)(v4 + 16);
          if (v13 >= *(_QWORD *)(v4 + 24) >> 1)
          {
            sub_1AE521988();
            v4 = v20;
          }
          *(_QWORD *)(v4 + 16) = v13 + 1;
          v14 = v4 + 16 * v13;
          *(_QWORD *)(v14 + 32) = v12;
          *(double *)(v14 + 40) = v11;
          if ((uint64_t)v7 >= -(-1 << *(_BYTE *)(a1 + 32)))
            goto LABEL_19;
          v9 = a1 + 64;
          if ((*(_QWORD *)(a1 + 64 + 8 * (v7 >> 6)) & (1 << v7)) == 0)
            goto LABEL_20;
          if (v8 != *(_DWORD *)(a1 + 36))
            goto LABEL_21;
          v15 = sub_1AE926850();
          v2 = v17 - 1;
          if (v17 == 1)
            return;
          v7 = v15;
          if ((v15 & 0x8000000000000000) == 0)
          {
            v8 = *(_DWORD *)(a1 + 36);
            if (v15 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

char *sub_1AE851A6C(char *result, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)result;
  v5 = *a2;
  if (*(_QWORD *)result != *a2)
  {
    v14 = *(_QWORD *)result;
    result = sub_1AE851BD4(&v14, a3);
    if (!v3)
    {
      v7 = result;
      v14 = v5;
      sub_1AE851BD4(&v14, a3);
      sub_1AE501548(&qword_1EEDA4740);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1AE934250;
      *(_QWORD *)(inited + 32) = v4;
      *(_QWORD *)(inited + 40) = v7;
      sub_1AE501548(&qword_1EEDA3AD8);
      sub_1AE5962D8();
      v9 = sub_1AE925C98();
      v10 = MEMORY[0x1E0C80A78](v9);
      sub_1AE851878(v10, (double (*)(uint64_t *, _QWORD *, uint64_t))sub_1AE851258);
      sub_1AE62C0C4(v11);
      v13 = v12;
      sub_1AE4F81B8();
      sub_1AE4F9038();
      sub_1AE56AC58(v13);
      return (char *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *sub_1AE851BD4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint8_t *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;

  v5 = sub_1AE501548(&qword_1EEDA4748);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v57 - v9;
  v11 = sub_1AE501548(&qword_1EED9AC70);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v57 - v16;
  v63 = *a1;
  sub_1AE503C50(a2, v18, 0x80000001AE988FF0);
  if (!v2)
  {
    v62 = (uint8_t *)a2;
    sub_1AE515F00();
    swift_bridgeObjectRelease();
    v19 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, v11);
    v59 = v8;
    if (v19 == 1)
    {
      v66 = &unk_1E5DA9CD0;
      sub_1AE501548(&qword_1EEDA3AD8);
      sub_1AE5BA550(&qword_1EEDA4750, &qword_1EEDA3AD8, MEMORY[0x1E0DEAF38]);
      sub_1AE925B84();
      sub_1AE8522BC((uint64_t)v10);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    }
    v61 = sub_1AE5BA550(&qword_1EEDA4758, &qword_1EED9AC70, MEMORY[0x1E0C9E6C8]);
    v20 = sub_1AE50595C();
    v21 = sub_1AE5EABD4(v20, (uint64_t)&unk_1E5DA9C30);
    sub_1AE4F9038();
    if ((v21 & 1) != 0)
    {
      v60 = v12;
      if (qword_1EED94698 != -1)
        swift_once();
      v23 = sub_1AE925B6C();
      sub_1AE4FB608(v23, (uint64_t)qword_1EED94678);
      v24 = sub_1AE925B54();
      v25 = sub_1AE9265EC();
      if (sub_1AE4FD694(v25))
      {
        v26 = (uint8_t *)sub_1AE4F66A0();
        v66 = (void *)sub_1AE4F66A0();
        v58 = v15;
        *(_DWORD *)v26 = 136315138;
        v57 = v26 + 4;
        v27 = sub_1AE5011F0();
        sub_1AE4FCC5C(v27, v28, v29, v30, v31, v32, v33, v34, (uint64_t)v57, (unint64_t)v58, (uint64_t)v59, v60, v61, (uint64_t)v62, v63, v64, v65, (uint64_t)v66, v67,
          v68);
        sub_1AE4FBF9C(v35);
        sub_1AE92676C();
        sub_1AE4F9038();
        _os_log_impl(&dword_1AE4F2000, v24, v21, "Failed to find embedding vector for %s in feature entity_popularity_day_of_week", v26, 0xCu);
        swift_arrayDestroy();
        sub_1AE4F9064();
      }

      v12 = v60;
    }
    sub_1AE503C50((uint64_t)v62, v22, 0x80000001AE989010);
    v37 = (uint64_t)v59;
    sub_1AE515F00();
    sub_1AE4F9038();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v37, 1, v11) == 1)
    {
      v66 = &unk_1E5DA9C58;
      sub_1AE501548(&qword_1EEDA3AD8);
      sub_1AE5BA550(&qword_1EEDA4750, &qword_1EEDA3AD8, MEMORY[0x1E0DEAF38]);
      sub_1AE925B84();
      sub_1AE8522BC(v37);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v15, v37, v11);
    }
    v38 = sub_1AE50595C();
    v39 = sub_1AE5EABD4(v38, (uint64_t)&unk_1E5DA9CA8);
    sub_1AE4F9038();
    if ((v39 & 1) != 0)
    {
      v60 = v12;
      if (qword_1EED94698 != -1)
        swift_once();
      v40 = sub_1AE925B6C();
      sub_1AE4FB608(v40, (uint64_t)qword_1EED94678);
      v41 = sub_1AE925B54();
      v42 = sub_1AE9265EC();
      if (sub_1AE4FD694(v42))
      {
        v43 = sub_1AE4F66A0();
        v58 = v15;
        v44 = (uint8_t *)v43;
        v66 = (void *)sub_1AE4F66A0();
        *(_DWORD *)v44 = 136315138;
        v62 = v44 + 4;
        v45 = sub_1AE5011F0();
        sub_1AE4FCC5C(v45, v46, v47, v48, v49, v50, v51, v52, (uint64_t)v57, (unint64_t)v58, (uint64_t)v59, v60, v61, (uint64_t)v62, v63, v64, v65, (uint64_t)v66, v67,
          v68);
        sub_1AE4FBF9C(v53);
        sub_1AE92676C();
        sub_1AE4F9038();
        _os_log_impl(&dword_1AE4F2000, v41, v39, "Failed to find embedding vector for %s in feature entity_popularity_hour_of_day", v44, 0xCu);
        swift_arrayDestroy();
        sub_1AE4F9064();
      }

      v12 = v60;
    }
    v54 = sub_1AE50595C();
    v55 = sub_1AE925B9C();
    v10 = (char *)sub_1AE852194(v54, v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v56 = *(void (**)(char *, uint64_t))(v12 + 8);
    v56(v15, v11);
    v56(v17, v11);
  }
  return v10;
}

uint64_t sub_1AE852194(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  unint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a2 + 16);
  v5 = a1 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v4)
    {
      v8 = *(double *)(v5 + 8 * v6);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE50AE60();
        v7 = v13;
      }
      v9 = 0;
      v10 = *(_QWORD *)(v7 + 16);
      do
      {
        v11 = *(double *)(a2 + 8 * v9 + 32);
        if (v10 >= *(_QWORD *)(v7 + 24) >> 1)
        {
          sub_1AE50AE60();
          v7 = v12;
        }
        ++v9;
        *(_QWORD *)(v7 + 16) = v10 + 1;
        *(double *)(v7 + 8 * v10++ + 32) = v8 * v11;
      }
      while (v4 != v9);
      swift_bridgeObjectRelease();
    }
    ++v6;
  }
  while (v6 != v2);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1AE8522BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1EEDA4748);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AE8522FC(uint64_t a1, void (*a2)(_QWORD *, id))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *, id);
  _QWORD v38[7];
  _QWORD v39[6];
  int64_t v40;

  v37 = a2;
  v2 = sub_1AE501548(&qword_1EEDA4768);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1AE501548(&qword_1EED9AC80);
  v32 = *(_QWORD *)(v36 - 8);
  v5 = MEMORY[0x1E0C80A78](v36);
  v35 = (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v31 = (uint64_t)&v30 - v7;
  sub_1AE64A2FC(v39);
  v8 = v39[0];
  v40 = v39[3];
  v9 = v39[4];
  v33 = v39[1];
  v34 = (unint64_t)(v39[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v40 << 6);
      goto LABEL_20;
    }
    v14 = v40 + 1;
    if (__OFADD__(v40, 1))
      break;
    if (v14 >= v34)
      goto LABEL_27;
    v15 = *(_QWORD *)(v33 + 8 * v14);
    v16 = v40 + 1;
    if (!v15)
    {
      v16 = v40 + 2;
      if (v40 + 2 >= v34)
        goto LABEL_27;
      v15 = *(_QWORD *)(v33 + 8 * v16);
      if (!v15)
      {
        v16 = v40 + 3;
        if (v40 + 3 >= v34)
          goto LABEL_27;
        v15 = *(_QWORD *)(v33 + 8 * v16);
        if (!v15)
        {
          v16 = v40 + 4;
          if (v40 + 4 >= v34)
            goto LABEL_27;
          v15 = *(_QWORD *)(v33 + 8 * v16);
          if (!v15)
          {
            v16 = v40 + 5;
            if (v40 + 5 >= v34)
              goto LABEL_27;
            v15 = *(_QWORD *)(v33 + 8 * v16);
            if (!v15)
            {
              v17 = v40 + 6;
              while (v17 < v34)
              {
                v15 = *(_QWORD *)(v33 + 8 * v17++);
                if (v15)
                {
                  v16 = v17 - 1;
                  goto LABEL_19;
                }
              }
LABEL_27:
              swift_release();
              return v11;
            }
          }
        }
      }
    }
LABEL_19:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v40 = v16;
LABEL_20:
    v18 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 48 * v13);
    v19 = v18[1];
    v20 = v18[2];
    v21 = v18[3];
    v22 = v18[4];
    v23 = v18[5];
    v24 = *(void **)(*(_QWORD *)(v8 + 56) + 8 * v13);
    v38[0] = *v18;
    v38[1] = v19;
    v38[2] = v20;
    v38[3] = v21;
    v38[4] = v22;
    v38[5] = v23;
    v38[6] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = v24;
    v37(v38, v25);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v4, 1, v36) == 1)
    {
      result = sub_1AE52982C((uint64_t)v4, &qword_1EEDA4768);
    }
    else
    {
      v26 = v31;
      sub_1AE852EDC((uint64_t)v4, v31);
      sub_1AE852EDC(v26, v35);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE51A660();
        v11 = v28;
      }
      v27 = *(_QWORD *)(v11 + 16);
      if (v27 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_1AE51A660();
        v11 = v29;
      }
      *(_QWORD *)(v11 + 16) = v27 + 1;
      result = sub_1AE852EDC(v35, v11+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v27);
    }
  }
  __break(1u);
  return result;
}

void sub_1AE852678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  ViewService.entitySimilarityFeatureView.getter();
  if (!v3)
  {
    swift_bridgeObjectRetain();
    sub_1AE66C2EC();
    v7 = v6;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = swift_unknownObjectRelease();
    if (*(_QWORD *)(v7 + 16))
    {
      MEMORY[0x1E0C80A78](v8);
      v9 = sub_1AE8522FC(v7, (void (*)(_QWORD *, id))sub_1AE852E98);
      swift_bridgeObjectRelease();
      sub_1AE62C038(v9);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1AE852EA0();
      swift_allocError();
      *(_QWORD *)v10 = a2;
      *(_QWORD *)(v10 + 8) = a3;
      *(_BYTE *)(v10 + 16) = 1;
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
  }
}

uint64_t sub_1AE8527E8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double *v8;
  double v9;
  double *v10;
  uint64_t v11;
  double v12;
  double v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;

  v2 = *(_QWORD *)(result + 16);
  v3 = 0.0;
  if (v2)
  {
    v4 = (double *)(result + 32);
    v5 = *(_QWORD *)(result + 16);
    do
    {
      v6 = *v4++;
      v3 = v3 + v6;
      --v5;
    }
    while (v5);
  }
  v7 = *(_QWORD *)(a2 + 16);
  if (v7)
  {
    v8 = (double *)(a2 + 32);
    v9 = 0.0;
    v10 = (double *)(a2 + 32);
    v11 = *(_QWORD *)(a2 + 16);
    do
    {
      v12 = *v10++;
      v9 = v9 + v12;
      --v11;
    }
    while (v11);
    v13 = 0.0;
    if (v2)
    {
      if (v3 != 0.0 && v9 != 0.0)
      {
        v14 = (double *)(result + 32);
        v15 = v7 - 1;
        v16 = v2 - 1;
        do
        {
          v17 = *v14++;
          v18 = v17;
          v19 = *v8++;
          v20 = v18 / v3;
          v21 = v19 / v9;
          if (v19 / v9 < v20)
            v20 = v21;
          v13 = v13 + v20;
          if (!v16)
            break;
          v22 = v15--;
          --v16;
        }
        while (v22);
      }
    }
  }
  return result;
}

uint64_t sub_1AE852890@<X0>(unint64_t *a1@<X0>, NSObject *a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  os_log_t v57;
  unint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v57 = a2;
  v59 = a4;
  v6 = sub_1AE501548(&qword_1EEDA4748);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED9AC70);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[1];
  v56 = *a1;
  v58 = a1[2];
  v15 = a1[4];
  v14 = a1[5];
  sub_1AE926610();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    v55 = v15;
    sub_1AE52982C((uint64_t)v8, &qword_1EEDA4748);
    if (qword_1EED94698 != -1)
      swift_once();
    v16 = sub_1AE925B6C();
    sub_1AE4FB608(v16, (uint64_t)qword_1EED94678);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v17 = sub_1AE925B54();
    v18 = sub_1AE9265EC();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v62 = v20;
      *(_DWORD *)v19 = 136315394;
      swift_bridgeObjectRetain();
      sub_1AE520ED4((uint64_t)v57, a3, (uint64_t)&v62, v21, v22, v23, v24, v25, v55, v56, (uint64_t)v57, v58, (uint64_t)v59, v60, v61, v62, v63, v64, v65,
        v66);
      v60 = v26;
      sub_1AE92676C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 12) = 2080;
      v60 = v56;
      v61 = v13;
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE520ED4(v60, v61, (uint64_t)&v62, v27, v28, v29, v30, v31, v55, v56, (uint64_t)v57, v58, (uint64_t)v59, v60, v61, v62, v63, v64, v65,
        v66);
      v60 = v32;
      sub_1AE92676C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AE4F2000, v17, v18, "Failed to load feature '%s' for %s.", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF454C78](v20, -1, -1);
      MEMORY[0x1AF454C78](v19, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
LABEL_15:
    v53 = sub_1AE501548(&qword_1EED9AC80);
    v51 = v59;
    v52 = 1;
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v51, v52, 1, v53);
  }
  v33 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v33(v12, v8, v9);
  swift_bridgeObjectRetain();
  EntityIdentifier.init(_:)(v15, v14, (uint64_t)&v60);
  if (v61 == 1)
  {
    if (qword_1EED94698 != -1)
      swift_once();
    v34 = sub_1AE925B6C();
    sub_1AE4FB608(v34, (uint64_t)qword_1EED94678);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v35 = sub_1AE925B54();
    v36 = sub_1AE9265EC();
    if (os_log_type_enabled(v35, v36))
    {
      v55 = v15;
      v37 = swift_slowAlloc();
      v57 = v35;
      v38 = (uint8_t *)v37;
      v58 = swift_slowAlloc();
      v60 = v58;
      *(_DWORD *)v38 = 136315138;
      swift_bridgeObjectRetain();
      sub_1AE520ED4(v55, v14, (uint64_t)&v60, v39, v40, v41, v42, v43, v55, v56, (uint64_t)v57, v58, (uint64_t)v59, v60, v61, v62, v63, v64, v65,
        v66);
      v62 = v44;
      sub_1AE92676C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v45 = v57;
      _os_log_impl(&dword_1AE4F2000, v57, v36, "Failed to parse identifier %s", v38, 0xCu);
      v46 = v58;
      swift_arrayDestroy();
      MEMORY[0x1AF454C78](v46, -1, -1);
      MEMORY[0x1AF454C78](v38, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_15;
  }
  v47 = v60;
  v48 = sub_1AE501548(&qword_1EED9AC80);
  v49 = v59;
  v50 = (char *)v59 + *(int *)(v48 + 48);
  *v59 = v47;
  v33(v50, v12, v9);
  v51 = v49;
  v52 = 0;
  v53 = v48;
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v51, v52, 1, v53);
}

uint64_t sub_1AE852E84(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  *a1 = *a2;
  return sub_1AE8527E8(a3, a4);
}

uint64_t sub_1AE852E98@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1AE852890(a1, *(NSObject **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_1AE852EA0()
{
  unint64_t result;

  result = qword_1EEDA4760;
  if (!qword_1EEDA4760)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9641D4, &type metadata for QueryContextError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4760);
  }
  return result;
}

uint64_t sub_1AE852EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9AC80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for QueryContextError()
{
  return &type metadata for QueryContextError;
}

uint64_t destroy for ReadableViewDatabaseTable()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReadableViewDatabaseTable(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ReadableViewDatabaseTable(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v4;
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ReadableViewDatabaseTable(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ReadableViewDatabaseTable()
{
  return &type metadata for ReadableViewDatabaseTable;
}

BOOL static RelationshipIdentifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

BOOL static RelationshipIdentifier.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

void RelationshipIdentifier.entityClass.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  EntityClass.init(intValue:)(*(_BYTE *)(v1 + 7), a1);
}

uint64_t RelationshipIdentifier.init(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  char v18;
  uint64_t v19;
  unsigned __int8 v20;
  char v21;
  char v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v4 = a2;
  v6 = HIBYTE(a2) & 0xF;
  v7 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) == 0)
    v6 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    result = sub_1AE4F81B8();
    v14 = 0;
LABEL_57:
    v37 = 0;
LABEL_58:
    *(_QWORD *)a3 = v14;
    *(_BYTE *)(a3 + 8) = v37;
    return result;
  }
  v8 = a1;
  result = sub_1AE926004();
  if ((result & 1) != 0)
  {
    v10 = sub_1AE925F20();
    v11 = sub_1AE5BB100(v10, v8, v4);
    v8 = MEMORY[0x1AF4530E8](v11);
    v4 = v12;
    result = sub_1AE4F9038();
    v13 = HIBYTE(v4);
    v7 = v8 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v13 = HIBYTE(v4);
  }
  v15 = v13 & 0xF;
  if ((v4 & 0x2000000000000000) != 0)
    v16 = v15;
  else
    v16 = v7;
  if (!v16)
    goto LABEL_54;
  if ((v4 & 0x1000000000000000) != 0)
  {
    sub_1AE4F6730();
    v52 = sub_1AE4F6B80();
    v14 = sub_1AE5BC078(v52, v53, 10);
    v3 = v54;
    sub_1AE4F81B8();
    goto LABEL_53;
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((v8 & 0x1000000000000000) != 0)
    {
      v17 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else
    {
      sub_1AE4F6B80();
      v17 = (unsigned __int8 *)sub_1AE926994();
      v7 = v55;
    }
    v14 = (uint64_t)sub_1AE5BC064(v17, v7);
    v3 = v18 & 1;
LABEL_53:
    if ((v3 & 1) == 0)
    {
LABEL_56:
      result = sub_1AE4F81B8();
      goto LABEL_57;
    }
LABEL_54:
    sub_1AE4F6730();
    v33 = sub_1AE4F6B80();
    v35 = sub_1AE5BB660(v33, v34);
    if ((v36 & 1) != 0)
    {
      if (qword_1ED31BCB0 != -1)
        swift_once();
      v38 = sub_1AE925B6C();
      sub_1AE4FB608(v38, (uint64_t)qword_1ED31BC90);
      sub_1AE4F6730();
      v39 = sub_1AE925B54();
      v40 = sub_1AE9265EC();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)sub_1AE4F66A0();
        v57 = sub_1AE4F66A0();
        *(_DWORD *)v41 = 136380675;
        sub_1AE4F6730();
        v42 = sub_1AE4F6B80();
        sub_1AE520ED4(v42, v43, v44, v45, v46, v47, v48, v49, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66,
          v67);
        sub_1AE92676C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1AE4F2000, v39, v40, "RelationshipIdentifier: attempted initialization with non-numeric value: %{private}s", v41, 0xCu);
        swift_arrayDestroy();
        sub_1AE4F9064();
      }

      result = swift_bridgeObjectRelease_n();
      v14 = 0;
      v37 = 1;
      goto LABEL_58;
    }
    v14 = v35;
    goto LABEL_56;
  }
  v58 = v4 & 0xFFFFFFFFFFFFFFLL;
  if (v8 == 43)
  {
    if (!v15)
      goto LABEL_74;
    if (v15 == 1)
      goto LABEL_39;
    sub_1AE4FEBE8();
    if (!v22 & v21)
      goto LABEL_39;
    v14 = v24;
    if (v23 != 2)
    {
      sub_1AE4FEBE8();
      if (!v22 & v21)
        goto LABEL_39;
      v14 = 10 * v14 + v26;
      if (v25 != 3)
      {
        while (1)
        {
          sub_1AE4F92A4();
          if (!v22 & v21)
            goto LABEL_39;
          sub_1AE4F95C8();
          if (!v22)
            goto LABEL_39;
          v14 = v28 + v27;
          if (__OFADD__(v28, v27))
            goto LABEL_39;
          sub_1AE4FCA98();
          if (v22)
            goto LABEL_53;
        }
      }
    }
LABEL_52:
    v3 = 0;
    goto LABEL_53;
  }
  if (v8 != 45)
  {
    if (!v15 || (v8 - 48) > 9u)
      goto LABEL_39;
    v14 = (v8 - 48);
    if (v15 != 1)
    {
      sub_1AE4FEBE8();
      if (!v22 & v21)
        goto LABEL_39;
      v14 = 10 * (v8 - 48) + v30;
      if (v29 != 2)
      {
        while (1)
        {
          sub_1AE4F92A4();
          if (!v22 & v21)
            goto LABEL_39;
          sub_1AE4F95C8();
          if (!v22)
            goto LABEL_39;
          v14 = v32 + v31;
          if (__OFADD__(v32, v31))
            goto LABEL_39;
          sub_1AE4FCA98();
          if (v22)
            goto LABEL_53;
        }
      }
    }
    goto LABEL_52;
  }
  if (v15)
  {
    if (v15 != 1)
    {
      sub_1AE4FEBE8();
      if (!(!v22 & v21))
      {
        if (v19 == 2)
        {
          v3 = 0;
          v14 = -(uint64_t)v20;
          goto LABEL_53;
        }
        if ((BYTE2(v8) - 48) <= 9u)
        {
          v14 = -10 * v20 - (BYTE2(v8) - 48);
          if (v19 == 3)
            goto LABEL_52;
          while (1)
          {
            sub_1AE4F92A4();
            if (!v22 & v21)
              break;
            sub_1AE4F95C8();
            if (!v22)
              break;
            v14 = v51 - v50;
            if (__OFSUB__(v51, v50))
              break;
            sub_1AE4FCA98();
            if (v22)
              goto LABEL_53;
          }
        }
      }
    }
LABEL_39:
    v14 = 0;
    v3 = 1;
    goto LABEL_53;
  }
  __break(1u);
LABEL_74:
  __break(1u);
  return result;
}

void static RelationshipIdentifier.null.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t static RelationshipIdentifier.stringValuePrefix.getter()
{
  return 3828082;
}

uint64_t RelationshipIdentifier.init(intValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t RelationshipIdentifier.init(entityClass:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 32);
  swift_bridgeObjectRelease();
  sub_1AE4F9038();
  result = sub_1AE853D24(0xFFFFFFFFFFFFFFuLL);
  *a2 = (result + 1) | (v3 << 56);
  return result;
}

uint64_t RelationshipIdentifier.init(entityClass:hash:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  uint64_t v9;
  char v10;

  v5 = *(unsigned __int8 *)(a1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE501548((uint64_t *)&unk_1ED319520);
  sub_1AE925C14();
  if ((v10 & 1) != 0)
  {
    result = sub_1AE926AB4();
    __break(1u);
  }
  else
  {
    v6 = sub_1AE925C20();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a2, v6);
    *((_QWORD *)&v8 + 1) = v5;
    *(_QWORD *)&v8 = v9;
    *a3 = v8 >> 8;
  }
  return result;
}

uint64_t sub_1AE853698()
{
  sub_1AE853DAC();
  return sub_1AE926F94();
}

uint64_t sub_1AE8536C0()
{
  sub_1AE853DAC();
  return sub_1AE926FA0();
}

void RelationshipIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t v2;

  sub_1AE501548(&qword_1EEDA4770);
  sub_1AE509818();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F6744();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE853DAC();
  sub_1AE926F4C();
  sub_1AE926CE8();
  sub_1AE4FD9B8();
  sub_1AE4F667C();
}

void RelationshipIdentifier.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  sub_1AE501548(&qword_1EEDA4780);
  sub_1AE509818();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F6744();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE853DAC();
  sub_1AE926F34();
  if (!v2)
  {
    v6 = sub_1AE926C10();
    sub_1AE4FD9B8();
    *a2 = v6;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  sub_1AE4F667C();
}

void sub_1AE85385C(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  RelationshipIdentifier.init(from:)(a1, a2);
}

void sub_1AE853870(_QWORD *a1)
{
  RelationshipIdentifier.encode(to:)(a1);
}

void RelationshipIdentifier.databaseValue.getter()
{
  JUMPOUT(0x1AF45409CLL);
}

uint64_t static RelationshipIdentifier.fromDatabaseValue(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  char v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26[9];

  v4 = sub_1AE924C60();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1AE926E98();
  v10 = v9;
  if ((v9 & 1) != 0)
  {
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v11 = sub_1AE925B6C();
    sub_1AE4FB608(v11, (uint64_t)qword_1ED31BC90);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v12 = sub_1AE925B54();
    v13 = sub_1AE9265EC();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)sub_1AE4F66A0();
      v24 = sub_1AE4F66A0();
      v26[0] = v24;
      *(_DWORD *)v14 = 136380675;
      v23 = v14 + 4;
      sub_1AE5BC024();
      v15 = sub_1AE926D18();
      sub_1AE520ED4(v15, v16, (uint64_t)v26, v17, v18, v19, v20, v21, (uint64_t)v23, v24, v25, v26[0], v26[1], v26[2], v26[3], v26[4], v26[5], v26[6], v26[7],
        v26[8]);
      v25 = v22;
      sub_1AE92676C();
      sub_1AE4F9038();
      sub_1AE4FD090();
      _os_log_impl(&dword_1AE4F2000, v12, v13, "RelationshipIdentifier: failed to initialize from database value: %{private}s", v14, 0xCu);
      swift_arrayDestroy();
      sub_1AE4F9064();
    }
    sub_1AE4FD090();

    result = 0;
  }
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v10 & 1;
  return result;
}

uint64_t sub_1AE853A84()
{
  sub_1AE572788();
  return sub_1AE92511C();
}

uint64_t sub_1AE853ABC()
{
  sub_1AE572788();
  return sub_1AE925134();
}

uint64_t RelationshipIdentifier.hash(into:)()
{
  return sub_1AE926EF8();
}

void RelationshipIdentifier.hashValue.getter()
{
  sub_1AE926EC8();
  sub_1AE5098C0();
  sub_1AE926F10();
  sub_1AE4F6650();
}

uint64_t RelationshipIdentifier.stringValue.getter()
{
  sub_1AE926D18();
  sub_1AE925F74();
  sub_1AE4F6648();
  return 3828082;
}

unint64_t RelationshipIdentifier.description.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;

  EntityClass.init(intValue:)(HIBYTE(*v0), (uint64_t)&v4);
  v1 = v5;
  if (v5)
  {
    v2 = v4;
    swift_bridgeObjectRetain();
    sub_1AE52F880(v2, v1);
  }
  v4 = 0;
  v5 = 0xE000000000000000;
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  v4 = 0xD00000000000001ALL;
  v5 = 0x80000001AE9890B0;
  sub_1AE925F74();
  sub_1AE4F6648();
  sub_1AE925F74();
  sub_1AE4FC770();
  sub_1AE925F74();
  sub_1AE4F81B8();
  sub_1AE925F74();
  sub_1AE4FC770();
  sub_1AE925F74();
  sub_1AE4F6648();
  sub_1AE925F74();
  return v4;
}

unint64_t sub_1AE853D24(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x1AF454C90](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x1AF454C90](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1AE853DAC()
{
  unint64_t result;

  result = qword_1EEDA4778;
  if (!qword_1EEDA4778)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96451C, &type metadata for RelationshipIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4778);
  }
  return result;
}

unint64_t sub_1AE853DEC()
{
  unint64_t result;

  result = qword_1ED319C28;
  if (!qword_1ED319C28)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RelationshipIdentifier, &type metadata for RelationshipIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED319C28);
  }
  return result;
}

unint64_t sub_1AE853E2C()
{
  unint64_t result;

  result = qword_1ED318C78;
  if (!qword_1ED318C78)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RelationshipIdentifier, &type metadata for RelationshipIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED318C78);
  }
  return result;
}

unint64_t sub_1AE853E6C()
{
  unint64_t result;

  result = qword_1ED31A128;
  if (!qword_1ED31A128)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RelationshipIdentifier, &type metadata for RelationshipIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED31A128);
  }
  return result;
}

ValueMetadata *type metadata accessor for RelationshipIdentifier()
{
  return &type metadata for RelationshipIdentifier;
}

uint64_t storeEnumTagSinglePayload for RelationshipIdentifier.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE853EF8 + 4 * byte_1AE964270[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE853F18 + 4 * byte_1AE964275[v4]))();
}

_BYTE *sub_1AE853EF8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE853F18(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE853F20(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE853F28(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE853F30(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE853F38(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RelationshipIdentifier.CodingKeys()
{
  return &type metadata for RelationshipIdentifier.CodingKeys;
}

unint64_t sub_1AE853F58()
{
  unint64_t result;

  result = qword_1EEDA4788;
  if (!qword_1EEDA4788)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9644F4, &type metadata for RelationshipIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4788);
  }
  return result;
}

unint64_t sub_1AE853F98()
{
  unint64_t result;

  result = qword_1EEDA4790;
  if (!qword_1EEDA4790)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE964464, &type metadata for RelationshipIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4790);
  }
  return result;
}

unint64_t sub_1AE853FD8()
{
  unint64_t result;

  result = qword_1EEDA4798[0];
  if (!qword_1EEDA4798[0])
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96448C, &type metadata for RelationshipIdentifier.CodingKeys);
    atomic_store(result, qword_1EEDA4798);
  }
  return result;
}

uint64_t sub_1AE854018()
{
  return swift_initClassMetadata2();
}

void sub_1AE854070(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  *(_QWORD *)(v3 + 160) = a2;
  *(_QWORD *)(v3 + 168) = v2;
  *(_QWORD *)(v3 + 152) = a1;
  v4 = (_OWORD *)*v2;
  v5 = sub_1AE500270();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v8 = type metadata accessor for InferenceMessageResponseError(0, v5, AssociatedConformanceWitness, v7);
  *(_QWORD *)(v3 + 176) = v8;
  *(_QWORD *)(v3 + 184) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v3 + 192) = swift_task_alloc();
  v9 = sub_1AE500270();
  *(_QWORD *)(v3 + 200) = v9;
  v10 = v4[7];
  v11 = v4[8];
  v12 = v4[9];
  *(_QWORD *)(v3 + 16) = v9;
  *(_QWORD *)(v3 + 24) = v5;
  *(_OWORD *)(v3 + 32) = v10;
  *(_QWORD *)(v3 + 48) = AssociatedConformanceWitness;
  *(_OWORD *)(v3 + 56) = v11;
  *(_OWORD *)(v3 + 72) = v12;
  type metadata accessor for InferenceMessageRemoteServerResponse();
}

uint64_t sub_1AE854140(uint64_t a1)
{
  _QWORD *v1;

  v1[26] = a1;
  v1[27] = *(_QWORD *)(a1 - 8);
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AE854198()
{
  _QWORD *v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = (uint64_t *)v0[21];
  MEMORY[0x1AF454348]();
  sub_1AE8545E8(v1, v0 + 17);
  v2 = (_QWORD *)v0[21];
  sub_1AE4FF40C();
  v4 = v0[17];
  v3 = v0[18];
  v0[30] = v4;
  v0[31] = v3;
  v5 = v2[11];
  v6 = v2[12];
  sub_1AE4F9858(v2 + 8, v5);
  v8 = v2[2];
  v7 = v2[3];
  v0[32] = v7;
  v9 = v2[4];
  v10 = v2[5];
  v0[33] = v10;
  v11 = v2[6];
  v12 = v2[7];
  v0[34] = v12;
  v0[11] = v8;
  v0[12] = v7;
  v0[13] = v9;
  v0[14] = v10;
  v0[15] = v11;
  v0[16] = v12;
  v15 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v6 + 8) + *(_QWORD *)(v6 + 8));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = (_QWORD *)swift_task_alloc();
  v0[35] = v13;
  *v13 = v0;
  v13[1] = sub_1AE8542F8;
  return v15(v0 + 11, v4, v3, v5, v6);
}

uint64_t sub_1AE8542F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[36] = a1;
  v4[37] = a2;
  v4[38] = v2;
  swift_task_dealloc();
  sub_1AE503C60();
  sub_1AE4F6648();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

void sub_1AE854390()
{
  MEMORY[0x1AF454348]();
  sub_1AE854690();
}

uint64_t sub_1AE8543E0()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (v0)
  {
    v3 = v1[36];
    v2 = v1[37];
    v5 = v1[30];
    v4 = v1[31];
    sub_1AE4FF40C();
    sub_1AE50BDB4(v5, v4);
    sub_1AE50BDB4(v3, v2);
  }
  else
  {
    v7 = v1[28];
    v6 = v1[29];
    v8 = v1[27];
    sub_1AE4FF40C();
    sub_1AE500EA0(v7, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v10 = v1[31];
    v27 = v1[30];
    v11 = v1[28];
    v13 = v1[26];
    v12 = v1[27];
    if (EnumCaseMultiPayload != 1)
    {
      v19 = v1[25];
      v20 = v1[19];
      (*(void (**)(_QWORD, uint64_t))(v12 + 8))(v1[29], v13);
      sub_1AE502100();
      sub_1AE50BDB4(v27, v10);
      v23 = type metadata accessor for InferenceMessageResponse(0, v19, v21, v22);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v20, v11, v23);
      swift_task_dealloc();
      sub_1AE4F90A0();
      swift_task_dealloc();
      v18 = (uint64_t (*)(void))v1[1];
      return v18();
    }
    v25 = v1[31];
    v26 = v1[29];
    v14 = v1[23];
    v15 = v1[24];
    v16 = v1[22];
    sub_1AE500EA0(v15, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 32));
    MEMORY[0x1AF454B70](&protocol conformance descriptor for InferenceMessageResponseError<A>, v16);
    swift_allocError();
    sub_1AE500EA0(v17, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 16));
    swift_willThrow();
    sub_1AE502100();
    sub_1AE50BDB4(v27, v25);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v26, v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v18 = (uint64_t (*)(void))v1[1];
  return v18();
}

uint64_t sub_1AE854594()
{
  uint64_t v0;

  sub_1AE50BDB4(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
  swift_task_dealloc();
  sub_1AE4F90A0();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AE8545E8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  __int128 v11;

  v4 = *a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = type metadata accessor for InferenceMessageRequest(0, AssociatedTypeWitness, v6, v7);
  v11 = *(_OWORD *)(v4 + 96);
  MEMORY[0x1AF454B70](&unk_1AE954FA0, v8, &v11);
  result = sub_1AE9243F0();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v10;
  }
  return result;
}

void sub_1AE854690()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for InferenceMessageRemoteServerResponse();
}

uint64_t sub_1AE854754(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE954B18, a1);
  return sub_1AE9243A8();
}

uint64_t sub_1AE8547A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE4F6648();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 64);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1AE854800()
{
  sub_1AE8547A8();
  return swift_deallocClassInstance();
}

void type metadata accessor for RemoteInferenceServiceInstanceClient()
{
  JUMPOUT(0x1AF454AECLL);
}

void sub_1AE85482C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1AE56794C;
  sub_1AE854070(a1, a2);
}

uint64_t sub_1AE854890()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 16) = xmmword_1AE964630;
  *(_QWORD *)(v0 + 32) = &unk_1E5DA6F18;
  *(_OWORD *)(v0 + 40) = xmmword_1AE963840;
  *(_OWORD *)(v0 + 56) = xmmword_1AE964640;
  *(_QWORD *)(v0 + 72) = 0x80000001AE989110;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1AE5158B8(0, 0);
  return v0;
}

uint64_t sub_1AE854930()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v0 = (_QWORD *)sub_1AE88163C();
  if (v0[2])
  {
    v1 = v0[5];
    v49 = v0[4];
    swift_bridgeObjectRetain();
    sub_1AE4F6648();
    v2 = sub_1AE88163C();
    v4 = *(_QWORD *)(v2 + 16);
    v5 = MEMORY[0x1E0DEE9D8];
    v42 = v2;
    if (v4)
    {
      v6 = (uint64_t *)(v2 + 40);
      *(_QWORD *)&v3 = 136315394;
      v46 = v3;
      v44 = MEMORY[0x1E0DEE9B8] + 8;
      v7 = MEMORY[0x1E0DEE9D8];
      v57 = v1;
      do
      {
        v9 = *(v6 - 1);
        v8 = *v6;
        sub_1AE4F67A4();
        sub_1AE854D2C(v49, v1, v9, v8, (uint64_t)&v59);
        v10 = v60;
        if (v60)
        {
          v11 = v9;
          v12 = v61;
          v13 = v62;
          v51 = v59;
          v53 = v7;
          sub_1AE4F81B0();
          swift_bridgeObjectRetain();
          sub_1AE4FD6A4();
          sub_1AE4FF414();
          v55 = v12;
          v14 = v11;
          sub_1AE925F74();
          sub_1AE4F76D8();
          sub_1AE4FF414();
          sub_1AE4FD6A4();
          sub_1AE4F76D8();
          sub_1AE4FF414();
          sub_1AE925F74();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1AE4F76D8();
          v15 = v59;
          v16 = v60;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1AE519F94();
            v7 = v36;
          }
          v17 = *(_QWORD *)(v7 + 16);
          v18 = v7;
          if (v17 >= *(_QWORD *)(v7 + 24) >> 1)
          {
            sub_1AE519F94();
            v18 = v37;
          }
          *(_QWORD *)(v18 + 16) = v17 + 1;
          v7 = v18;
          v19 = (_QWORD *)(v18 + 88 * v17);
          v19[4] = v15;
          v19[5] = v16;
          v19[6] = 0;
          v19[7] = v51;
          v19[8] = v10;
          v19[9] = 0;
          v1 = v57;
          v19[10] = v55;
          v19[11] = v13;
          v19[12] = v14;
          v19[13] = v8;
          v5 = MEMORY[0x1E0DEE9D8];
          v19[14] = MEMORY[0x1E0DEE9D8];
        }
        else
        {
          if (qword_1ED3193F0 != -1)
            swift_once();
          v20 = sub_1AE4F6854();
          v21 = sub_1AE4FB608(v20, (uint64_t)qword_1ED3193D8);
          swift_bridgeObjectRetain_n();
          sub_1AE4F67A4();
          sub_1AE925B54();
          v22 = sub_1AE4FCF04();
          if (os_log_type_enabled(v21, v22))
          {
            v23 = sub_1AE4F66A0();
            v59 = sub_1AE4F66A0();
            *(_DWORD *)v23 = v46;
            sub_1AE4F67A4();
            sub_1AE520ED4(v9, v8, (uint64_t)&v59, v24, v25, v26, v27, v28, v42, v44, v46, *((uint64_t *)&v46 + 1), v49, v51, v53, v55, v57, v59, v60,
              v61);
            *(_QWORD *)(v23 + 4) = v29;
            sub_1AE779DE4();
            *(_WORD *)(v23 + 12) = 2080;
            swift_bridgeObjectRetain();
            sub_1AE520ED4(v50, v58, (uint64_t)&v59, v30, v31, v32, v33, v34, v43, v45, v47, v48, v50, v52, v54, v56, v58, v59, v60,
              v61);
            *(_QWORD *)(v23 + 14) = v35;
            sub_1AE779DE4();
            _os_log_impl(&dword_1AE4F2000, v21, v22, "Error converting %s of type %s to string value", (uint8_t *)v23, 0x16u);
            swift_arrayDestroy();
            sub_1AE4F9064();
          }

          sub_1AE4F6824();
          sub_1AE4F6824();
        }
        v6 += 2;
        --v4;
      }
      while (v4);
    }
    else
    {
      v7 = MEMORY[0x1E0DEE9D8];
    }
    sub_1AE4F76D8();
    swift_bridgeObjectRelease();
    type metadata accessor for ResultGraph();
    v39 = sub_1AE4F9148();
    *(_QWORD *)(v39 + 16) = sub_1AE925C98();
    *(_QWORD *)(v39 + 24) = v5;
    LOBYTE(v59) = 0;
    v40 = swift_bridgeObjectRetain();
    sub_1AE85DA40(v40, &v59);
    sub_1AE4F6648();
  }
  else
  {
    sub_1AE4F6648();
    type metadata accessor for ResultGraph();
    v38 = sub_1AE4F9148();
    v7 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v38 + 16) = sub_1AE925C98();
    *(_QWORD *)(v38 + 24) = v7;
  }
  return v7;
}

void sub_1AE854D2C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  BOOL v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  BOOL v60;
  unint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;

  v71 = a5;
  v9 = sub_1AE9245A0();
  v68 = *(_QWORD *)(v9 - 8);
  v69 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1AE9248DC();
  v12 = *(_QWORD *)(v70 - 8);
  v13 = MEMORY[0x1E0C80A78](v70);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v66 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v66 - v19;
  v21 = sub_1AE9249B4();
  v66 = *(_QWORD *)(v21 - 8);
  v67 = v21;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F81B0();
  sub_1AE56416C(a3, a4);
  if ((v24 & 1) != 0)
  {
    if (qword_1ED3193F0 != -1)
      swift_once();
    v49 = sub_1AE4F6854();
    v50 = sub_1AE4FB608(v49, (uint64_t)qword_1ED3193D8);
    swift_bridgeObjectRetain_n();
    sub_1AE925B54();
    v51 = sub_1AE4FCF04();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)sub_1AE4F66A0();
      v78 = sub_1AE4F66A0();
      *(_DWORD *)v52 = 136315138;
      sub_1AE4F81B0();
      sub_1AE520ED4(a3, a4, (uint64_t)&v78, v53, v54, v55, v56, v57, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76,
        v77);
      v73 = v58;
      sub_1AE92676C();
      sub_1AE779DE4();
      _os_log_impl(&dword_1AE4F2000, v50, v51, "cannot convert %s to Double", v52, 0xCu);
      swift_arrayDestroy();
      sub_1AE4F9064();
    }

    sub_1AE4F6824();
  }
  else
  {
    v79 = 0;
    v80 = 0xE000000000000000;
    static EntityPredicate.empty.getter((uint64_t)&v78);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
    if (v25 || (sub_1AE503C6C() & 1) != 0)
    {
      sub_1AE92499C();
      sub_1AE9248D0();
      sub_1AE9248D0();
      sub_1AE924870();
      v26 = *(void (**)(char *, uint64_t))(v12 + 8);
      v26(v15, v70);
      sub_1AE501548(&qword_1EEDA2918);
      v27 = *(_QWORD *)(sub_1AE9249A8() - 8);
      v28 = *(_QWORD *)(v27 + 72);
      v29 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1AE93D190;
      v31 = v30 + v29;
      sub_1AE4F6E20(v31, *MEMORY[0x1E0CB1158]);
      sub_1AE4F6E20(v31 + v28, *MEMORY[0x1E0CB1160]);
      sub_1AE4F6E20(v31 + 2 * v28, *MEMORY[0x1E0CB1130]);
      sub_1AE56C228(v30);
      sub_1AE924960();
      sub_1AE4F665C();
      v32 = sub_1AE92457C();
      if ((v33 & 1) == 0)
      {
        v34 = v32;
        v35 = sub_1AE924588();
        if ((v36 & 1) == 0)
        {
          v37 = v35;
          v38 = sub_1AE924564();
          if ((v39 & 1) == 0)
          {
            v40 = v38;
            v73 = 0;
            v74 = 0xE000000000000000;
            sub_1AE92691C();
            swift_bridgeObjectRelease();
            v73 = 0x203A7372616559;
            v74 = 0xE700000000000000;
            v72 = v34;
            sub_1AE926D18();
            sub_1AE50210C();
            swift_bridgeObjectRelease();
            sub_1AE925F74();
            v72 = v37;
            sub_1AE926D18();
            sub_1AE50210C();
            swift_bridgeObjectRelease();
            sub_1AE925F74();
            v72 = v40;
            sub_1AE926D18();
            sub_1AE50210C();
            sub_1AE4F665C();
            sub_1AE925F74();
            sub_1AE4F665C();
          }
        }
      }
      static EntityPredicate.duration.getter();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v11, v69);
      v41 = v70;
      v26(v18, v70);
      v26(v20, v41);
      (*(void (**)(char *, unint64_t))(v66 + 8))(v23, v67);
      goto LABEL_12;
    }
    v60 = a1 == 0x656D697465746164 && a2 == 0xE800000000000000;
    if (v60 || (sub_1AE503C6C() & 1) != 0)
    {
      sub_1AE924858();
      v79 = sub_1AE9248C4();
      v80 = v61;
      sub_1AE5C6870(0x91uLL, (uint64_t)&v73);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v70);
LABEL_12:
      v42 = v73;
      v43 = v74;
      v44 = v75;
      v45 = v76;
      v46 = v77;
      v47 = v80;
      v48 = v71;
      *(_QWORD *)v71 = v79;
      *(_QWORD *)(v48 + 8) = v47;
      *(_QWORD *)(v48 + 16) = v42;
      *(_QWORD *)(v48 + 24) = v43;
      *(_QWORD *)(v48 + 32) = v44;
      *(_QWORD *)(v48 + 40) = v45;
      *(_WORD *)(v48 + 48) = v46;
      return;
    }
    if (qword_1ED3193F0 != -1)
      swift_once();
    v62 = sub_1AE4F6854();
    v63 = sub_1AE4FB608(v62, (uint64_t)qword_1ED3193D8);
    sub_1AE925B54();
    v64 = sub_1AE4FCF04();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)sub_1AE4F66A0();
      *(_WORD *)v65 = 0;
      _os_log_impl(&dword_1AE4F2000, v63, v64, "unknown conversion type", v65, 2u);
      sub_1AE4F9064();
    }

  }
  v59 = (_OWORD *)v71;
  *(_WORD *)(v71 + 48) = 0;
  v59[1] = 0u;
  v59[2] = 0u;
  *v59 = 0u;
}

uint64_t type metadata accessor for RenderDateTime()
{
  return objc_opt_self();
}

_QWORD *sub_1AE8553E0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  int *Context;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  unint64_t v18;
  unsigned __int8 v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    Context = (int *)type metadata accessor for QueryContext();
    v10 = Context[7];
    v11 = (char *)v7 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1AE9248DC();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_retain();
    swift_retain();
    v14(v11, v12, v13);
    v15 = Context[8];
    v16 = (_QWORD *)((char *)v7 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = *(_QWORD *)((char *)a2 + v15 + 88);
    v19 = *((_BYTE *)a2 + v15 + 104);
    if (v18 >> 1 == 0xFFFFFFFF && (v19 & 0x1E) == 0)
    {
      memcpy(v16, v17, 0x69uLL);
    }
    else
    {
      v21 = *v17;
      v22 = v17[1];
      v23 = v17[2];
      v43 = v17[4];
      v44 = v17[3];
      v41 = v17[6];
      v42 = v17[5];
      v40 = v17[7];
      v45 = v17[8];
      v46 = v17[9];
      v47 = v17[10];
      v48 = v17[12];
      sub_1AE5263DC(*v17, v22, v23, v44, v43, v42, v41, v40, v45, v46, v47, v18, v48, v19);
      *v16 = v21;
      v16[1] = v22;
      v16[2] = v23;
      v16[3] = v44;
      v16[4] = v43;
      v16[5] = v42;
      v16[6] = v41;
      v16[7] = v40;
      v16[8] = v45;
      v16[9] = v46;
      v16[10] = v47;
      v16[11] = v18;
      v16[12] = v48;
      *((_BYTE *)v16 + 104) = v19;
    }
    *(_QWORD *)((char *)v7 + Context[9]) = *(_QWORD *)((char *)a2 + Context[9]);
    *(_QWORD *)((char *)v7 + Context[10]) = *(_QWORD *)((char *)a2 + Context[10]);
    v24 = Context[11];
    v25 = (char *)v7 + v24;
    v26 = (char *)a2 + v24;
    v27 = *(_QWORD *)((char *)a2 + v24);
    v28 = *(_QWORD *)((char *)a2 + v24 + 8);
    v29 = *((_BYTE *)a2 + v24 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AE526540(v27, v28, v29);
    *(_QWORD *)v25 = v27;
    *((_QWORD *)v25 + 1) = v28;
    v25[16] = v29;
    *((_QWORD *)v25 + 3) = *((_QWORD *)v26 + 3);
    v30 = Context[12];
    v31 = (_QWORD *)((char *)v7 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v31[2] = v32[2];
    *((_BYTE *)v7 + Context[13]) = *((_BYTE *)a2 + Context[13]);
    *((_BYTE *)v7 + Context[14]) = *((_BYTE *)a2 + Context[14]);
    v34 = a3[6];
    *(_QWORD *)((char *)v7 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *(_QWORD *)((char *)v7 + v34) = *(_QWORD *)((char *)a2 + v34);
    v35 = a3[7];
    v36 = *(void **)((char *)a2 + v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v37 = v36;
    *(_QWORD *)((char *)v7 + v35) = v36;
    v38 = a3[9];
    *((_BYTE *)v7 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *(_QWORD *)((char *)v7 + v38) = *(_QWORD *)((char *)a2 + v38);
    *(_QWORD *)((char *)v7 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1AE85567C(uint64_t a1, uint64_t a2)
{
  int *Context;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 v9;

  swift_release();
  swift_release();
  Context = (int *)type metadata accessor for QueryContext();
  v5 = a1 + Context[7];
  v6 = sub_1AE9248DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + Context[8];
  v8 = *(_QWORD *)(v7 + 88);
  v9 = *(_BYTE *)(v7 + 104);
  if (v8 >> 1 != 0xFFFFFFFF || (v9 & 0x1E) != 0)
    sub_1AE583000(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), *(_QWORD *)(v7 + 48), *(_QWORD *)(v7 + 56), *(_QWORD *)(v7 + 64), *(_QWORD *)(v7 + 72), *(_QWORD *)(v7 + 80), v8, *(_QWORD *)(v7 + 96), v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE579F84(*(_QWORD *)(a1 + Context[11]), *(_QWORD *)(a1 + Context[11] + 8), *(_BYTE *)(a1 + Context[11] + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

_QWORD *sub_1AE8557B8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *Context;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  unint64_t v16;
  unsigned __int8 v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  Context = (int *)type metadata accessor for QueryContext();
  v8 = Context[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1AE9248DC();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_retain();
  swift_retain();
  v12(v9, v10, v11);
  v13 = Context[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = *(_QWORD *)((char *)a2 + v13 + 88);
  v17 = *((_BYTE *)a2 + v13 + 104);
  if (v16 >> 1 == 0xFFFFFFFF && (v17 & 0x1E) == 0)
  {
    memcpy(v14, v15, 0x69uLL);
  }
  else
  {
    v19 = *v15;
    v20 = v15[1];
    v21 = v15[2];
    v41 = v15[4];
    v42 = v15[3];
    v39 = v15[6];
    v40 = v15[5];
    v38 = v15[7];
    v43 = v15[8];
    v44 = v15[9];
    v45 = v15[10];
    v46 = v15[12];
    sub_1AE5263DC(*v15, v20, v21, v42, v41, v40, v39, v38, v43, v44, v45, v16, v46, v17);
    *v14 = v19;
    v14[1] = v20;
    v14[2] = v21;
    v14[3] = v42;
    v14[4] = v41;
    v14[5] = v40;
    v14[6] = v39;
    v14[7] = v38;
    v14[8] = v43;
    v14[9] = v44;
    v14[10] = v45;
    v14[11] = v16;
    v14[12] = v46;
    *((_BYTE *)v14 + 104) = v17;
  }
  *(_QWORD *)((char *)a1 + Context[9]) = *(_QWORD *)((char *)a2 + Context[9]);
  *(_QWORD *)((char *)a1 + Context[10]) = *(_QWORD *)((char *)a2 + Context[10]);
  v22 = Context[11];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *(_QWORD *)((char *)a2 + v22);
  v26 = *(_QWORD *)((char *)a2 + v22 + 8);
  v27 = *((_BYTE *)a2 + v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE526540(v25, v26, v27);
  *(_QWORD *)v23 = v25;
  *((_QWORD *)v23 + 1) = v26;
  v23[16] = v27;
  *((_QWORD *)v23 + 3) = *((_QWORD *)v24 + 3);
  v28 = Context[12];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v29[2] = v30[2];
  *((_BYTE *)a1 + Context[13]) = *((_BYTE *)a2 + Context[13]);
  *((_BYTE *)a1 + Context[14]) = *((_BYTE *)a2 + Context[14]);
  v32 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  *(_QWORD *)((char *)a1 + v32) = *(_QWORD *)((char *)a2 + v32);
  v33 = a3[7];
  v34 = *(void **)((char *)a2 + v33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v35 = v34;
  *(_QWORD *)((char *)a1 + v33) = v34;
  v36 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v36) = *(_QWORD *)((char *)a2 + v36);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1AE855A2C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *Context;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  unsigned __int8 v17;
  BOOL v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  Context = (int *)type metadata accessor for QueryContext();
  v7 = Context[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AE9248DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = Context[8];
  v12 = (char *)a1 + v11;
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = *(_QWORD *)((char *)a1 + v11 + 88);
  v15 = *((_BYTE *)a1 + v11 + 104) & 0x1E;
  v16 = *(_QWORD *)((char *)a2 + v11 + 88);
  v17 = *((_BYTE *)a2 + v11 + 104);
  v19 = (v17 & 0x1E) == 0 && v16 >> 1 == 0xFFFFFFFF;
  if (v14 >> 1 == 0xFFFFFFFF && v15 == 0)
  {
    if (!v19)
    {
      v39 = v13[1];
      v40 = v13[2];
      v41 = v13[4];
      v68 = v41;
      v70 = v13[3];
      v42 = v13[6];
      v64 = v42;
      v66 = v13[5];
      v62 = v13[7];
      v72 = v13[8];
      v74 = v13[9];
      v76 = v13[10];
      v78 = v13[12];
      v43 = *v13;
      sub_1AE5263DC(v43, v39, v40, v70, v41, v66, v42, v62, v72, v74, v76, v16, v78, v17);
      *(_QWORD *)v12 = v43;
      *((_QWORD *)v12 + 1) = v39;
      *((_QWORD *)v12 + 2) = v40;
      *((_QWORD *)v12 + 3) = v70;
      *((_QWORD *)v12 + 4) = v68;
      *((_QWORD *)v12 + 5) = v66;
      *((_QWORD *)v12 + 6) = v64;
      *((_QWORD *)v12 + 7) = v62;
      *((_QWORD *)v12 + 8) = v72;
      *((_QWORD *)v12 + 9) = v74;
      *((_QWORD *)v12 + 10) = v76;
      *((_QWORD *)v12 + 11) = v16;
      *((_QWORD *)v12 + 12) = v78;
      v12[104] = v17;
      goto LABEL_17;
    }
  }
  else
  {
    if (!v19)
    {
      v21 = v13[1];
      v69 = v21;
      v71 = *v13;
      v22 = v13[2];
      v23 = v13[3];
      v24 = v13[5];
      v65 = v24;
      v67 = v13[4];
      v25 = v13[7];
      v61 = v25;
      v63 = v13[6];
      v73 = v13[8];
      v75 = v13[9];
      v77 = v13[10];
      v26 = v13[12];
      sub_1AE5263DC(v71, v21, v22, v23, v67, v24, v63, v25, v73, v75, v77, v16, v26, v17);
      v27 = *(_QWORD *)v12;
      v28 = *((_QWORD *)v12 + 1);
      v29 = *((_QWORD *)v12 + 2);
      v30 = *((_QWORD *)v12 + 3);
      v31 = *((_QWORD *)v12 + 4);
      v32 = *((_QWORD *)v12 + 5);
      v33 = *((_QWORD *)v12 + 6);
      v34 = *((_QWORD *)v12 + 7);
      v35 = *((_OWORD *)v12 + 4);
      v36 = *((_OWORD *)v12 + 5);
      v37 = *((_QWORD *)v12 + 12);
      v38 = v12[104];
      *(_QWORD *)v12 = v71;
      *((_QWORD *)v12 + 1) = v69;
      *((_QWORD *)v12 + 2) = v22;
      *((_QWORD *)v12 + 3) = v23;
      *((_QWORD *)v12 + 4) = v67;
      *((_QWORD *)v12 + 5) = v65;
      *((_QWORD *)v12 + 6) = v63;
      *((_QWORD *)v12 + 7) = v61;
      *((_QWORD *)v12 + 8) = v73;
      *((_QWORD *)v12 + 9) = v75;
      *((_QWORD *)v12 + 10) = v77;
      *((_QWORD *)v12 + 11) = v16;
      *((_QWORD *)v12 + 12) = v26;
      v12[104] = v17;
      sub_1AE583000(v27, v28, v29, v30, v31, v32, v33, v34, v35, *((uint64_t *)&v35 + 1), v36, *((uint64_t *)&v36 + 1), v37, v38);
      goto LABEL_17;
    }
    sub_1AE73E8EC((uint64_t)v12);
  }
  memcpy(v12, v13, 0x69uLL);
LABEL_17:
  *(_QWORD *)((char *)a1 + Context[9]) = *(_QWORD *)((char *)a2 + Context[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + Context[10]) = *(_QWORD *)((char *)a2 + Context[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = Context[11];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = *(_QWORD *)((char *)a2 + v44);
  v48 = *(_QWORD *)((char *)a2 + v44 + 8);
  v49 = *((_BYTE *)a2 + v44 + 16);
  sub_1AE526540(v47, v48, v49);
  v50 = *(_QWORD *)v45;
  v51 = *((_QWORD *)v45 + 1);
  *(_QWORD *)v45 = v47;
  *((_QWORD *)v45 + 1) = v48;
  v52 = v45[16];
  v45[16] = v49;
  sub_1AE579F84(v50, v51, v52);
  *((_QWORD *)v45 + 3) = *((_QWORD *)v46 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = Context[12];
  v54 = (_QWORD *)((char *)a1 + v53);
  v55 = (char *)a2 + v53;
  *v54 = *(_QWORD *)((char *)a2 + v53);
  v54[1] = *(_QWORD *)((char *)a2 + v53 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54[2] = *((_QWORD *)v55 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + Context[13]) = *((_BYTE *)a2 + Context[13]);
  *((_BYTE *)a1 + Context[14]) = *((_BYTE *)a2 + Context[14]);
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_retain();
  swift_release();
  v56 = a3[7];
  v57 = *(void **)((char *)a1 + v56);
  v58 = *(void **)((char *)a2 + v56);
  v59 = v58;
  *(_QWORD *)((char *)a1 + v56) = v58;

  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE855E18(uint64_t a1, uint64_t a2, int *a3)
{
  int *Context;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  Context = (int *)type metadata accessor for QueryContext();
  v7 = Context[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1AE9248DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  memcpy((void *)(a1 + Context[8]), (const void *)(a2 + Context[8]), 0x69uLL);
  *(_QWORD *)(a1 + Context[9]) = *(_QWORD *)(a2 + Context[9]);
  *(_QWORD *)(a1 + Context[10]) = *(_QWORD *)(a2 + Context[10]);
  v11 = Context[11];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = Context[12];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  *(_BYTE *)(a1 + Context[13]) = *(_BYTE *)(a2 + Context[13]);
  *(_BYTE *)(a1 + Context[14]) = *(_BYTE *)(a2 + Context[14]);
  v18 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v19 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  v20 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  return a1;
}

_QWORD *sub_1AE855F48(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *Context;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _OWORD *v13;
  unint64_t v14;
  unsigned __int8 v15;
  unint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  Context = (int *)type metadata accessor for QueryContext();
  v7 = Context[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AE9248DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = Context[8];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = *(_QWORD *)((char *)a1 + v11 + 88);
  v15 = *((_BYTE *)v12 + 104);
  if (v14 >> 1 == 0xFFFFFFFF && (v15 & 0x1E) == 0)
    goto LABEL_11;
  v17 = *((_QWORD *)v13 + 11);
  v18 = *((_BYTE *)v13 + 104);
  if (v17 >> 1 == 0xFFFFFFFF && (v18 & 0x1E) == 0)
  {
    sub_1AE73E8EC((uint64_t)v12);
LABEL_11:
    memcpy(v12, v13, 0x69uLL);
    goto LABEL_12;
  }
  v20 = *((_QWORD *)v13 + 10);
  v21 = *((_QWORD *)v13 + 12);
  v22 = *v12;
  v23 = v12[1];
  v24 = v12[2];
  v25 = v12[3];
  v26 = v12[4];
  v27 = v12[5];
  v28 = v12[6];
  v29 = v12[7];
  v30 = *((_OWORD *)v12 + 4);
  v31 = v12[10];
  v32 = v12[12];
  v33 = v13[1];
  *(_OWORD *)v12 = *v13;
  *((_OWORD *)v12 + 1) = v33;
  v34 = v13[3];
  *((_OWORD *)v12 + 2) = v13[2];
  *((_OWORD *)v12 + 3) = v34;
  *((_OWORD *)v12 + 4) = v13[4];
  v12[10] = v20;
  v12[11] = v17;
  v12[12] = v21;
  *((_BYTE *)v12 + 104) = v18;
  sub_1AE583000(v22, v23, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, v14, v32, v15);
LABEL_12:
  *(_QWORD *)((char *)a1 + Context[9]) = *(_QWORD *)((char *)a2 + Context[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + Context[10]) = *(_QWORD *)((char *)a2 + Context[10]);
  swift_bridgeObjectRelease();
  v35 = Context[11];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  LOBYTE(v35) = *((_BYTE *)a2 + v35 + 16);
  v38 = *(_QWORD *)v36;
  v39 = *((_QWORD *)v36 + 1);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  v40 = v36[16];
  v36[16] = v35;
  sub_1AE579F84(v38, v39, v40);
  *((_QWORD *)v36 + 3) = *((_QWORD *)v37 + 3);
  swift_bridgeObjectRelease();
  v41 = Context[12];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (char *)a2 + v41;
  v44 = *(_QWORD *)((char *)a2 + v41 + 8);
  *v42 = *(_QWORD *)((char *)a2 + v41);
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v42[2] = *((_QWORD *)v43 + 2);
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + Context[13]) = *((_BYTE *)a2 + Context[13]);
  *((_BYTE *)a1 + Context[14]) = *((_BYTE *)a2 + Context[14]);
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_release();
  v45 = a3[7];
  v46 = *(void **)((char *)a1 + v45);
  *(_QWORD *)((char *)a1 + v45) = *(_QWORD *)((char *)a2 + v45);

  v47 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v47) = *(_QWORD *)((char *)a2 + v47);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE8561AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE8561BC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for Renderer(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1ED30FBD0);
}

uint64_t sub_1AE8561E0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for QueryContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AE856288()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;
  uint64_t v25;
  int64_t v26;
  _QWORD v27[3];
  _QWORD v28[5];
  uint64_t v29;

  sub_1AE64A2FC(v28);
  v1 = v28[0];
  v2 = v28[3];
  v3 = v28[4];
  v25 = v28[1];
  v26 = (unint64_t)(v28[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  v4 = MEMORY[0x1E0DEE9D8];
  if (!v3)
    goto LABEL_3;
LABEL_2:
  v5 = __clz(__rbit64(v3));
  v3 &= v3 - 1;
  v6 = v5 | (v2 << 6);
  while (1)
  {
    v10 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v11 = v10[1];
    v12 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v6);
    v27[0] = *v10;
    v27[1] = v11;
    v27[2] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AE85A490((uint64_t)v27, &v29);
    if (v0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = v29;
    v14 = *(_QWORD *)(v29 + 16);
    v15 = *(_QWORD *)(v4 + 16);
    if (__OFADD__(v15, v14))
      break;
    if (!swift_isUniquelyReferenced_nonNull_native() || v15 + v14 > *(_QWORD *)(v4 + 24) >> 1)
    {
      sub_1AE519D38();
      v4 = v16;
    }
    if (*(_QWORD *)(v13 + 16))
    {
      v17 = *(_QWORD *)(v4 + 16);
      if ((*(_QWORD *)(v4 + 24) >> 1) - v17 < v14)
        goto LABEL_43;
      v18 = v4 + 112 * v17 + 32;
      if (v13 + 32 < v18 + 112 * v14 && v18 < v13 + 32 + 112 * v14)
        goto LABEL_46;
      swift_arrayInitWithCopy();
      if (v14)
      {
        v20 = *(_QWORD *)(v4 + 16);
        v21 = __OFADD__(v20, v14);
        v22 = v20 + v14;
        if (v21)
          goto LABEL_45;
        *(_QWORD *)(v4 + 16) = v22;
      }
    }
    else if (v14)
    {
      goto LABEL_42;
    }
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_2;
LABEL_3:
    v7 = v2 + 1;
    if (__OFADD__(v2, 1))
      goto LABEL_44;
    if (v7 >= v26)
      goto LABEL_39;
    v8 = *(_QWORD *)(v25 + 8 * v7);
    if (!v8)
    {
      v9 = v2 + 2;
      if (v2 + 2 >= v26)
        goto LABEL_39;
      v8 = *(_QWORD *)(v25 + 8 * v9);
      if (v8)
        goto LABEL_12;
      v9 = v2 + 3;
      if (v2 + 3 >= v26)
        goto LABEL_39;
      v8 = *(_QWORD *)(v25 + 8 * v9);
      if (v8)
        goto LABEL_12;
      v9 = v2 + 4;
      if (v2 + 4 >= v26)
        goto LABEL_39;
      v8 = *(_QWORD *)(v25 + 8 * v9);
      if (v8)
      {
LABEL_12:
        v7 = v9;
      }
      else
      {
        v7 = v2 + 5;
        if (v2 + 5 >= v26)
          goto LABEL_39;
        v8 = *(_QWORD *)(v25 + 8 * v7);
        if (!v8)
        {
          v23 = v2 + 6;
          while (v23 < v26)
          {
            v8 = *(_QWORD *)(v25 + 8 * v23++);
            if (v8)
            {
              v7 = v23 - 1;
              goto LABEL_13;
            }
          }
LABEL_39:
          swift_release();
          return v4;
        }
      }
    }
LABEL_13:
    v3 = (v8 - 1) & v8;
    v6 = __clz(__rbit64(v8)) + (v7 << 6);
    v2 = v7;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

void sub_1AE856598()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  NSObject *v23;
  os_signpost_type_t v24;
  uint8_t *v25;
  uint8_t *v26;
  os_signpost_id_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD v49[8];
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;

  sub_1AE50A320();
  v53 = v0;
  v50 = v1;
  v49[4] = sub_1AE85CDE4();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4FFEB4();
  MEMORY[0x1E0C80A78](v3);
  v49[3] = (char *)v49 - v4;
  v5 = sub_1AE925AE8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4FFEB4();
  v9 = v7 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v49 - v11;
  v13 = sub_1AE4F6854();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1AE925B0C();
  v55 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for LogSignpost();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v20);
  sub_1AE4F9024();
  v51 = v21;
  if (qword_1ED31C728 != -1)
    swift_once();
  v22 = sub_1AE4FB608(v13, (uint64_t)qword_1ED31C710);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v22, v13);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v23 = sub_1AE925B00();
  v24 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v25 = (uint8_t *)sub_1AE4F66A0();
    v52 = v9;
    v26 = v25;
    *(_WORD *)v25 = 0;
    v27 = sub_1AE925AD0();
    _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v23, v24, v27, "Knosis.renderAll", "", v26, 2u);
    sub_1AE4F9064();
  }

  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v9, v12, v5);
  sub_1AE925B3C();
  sub_1AE4FCE84();
  v28 = sub_1AE925B30();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  v29 = v51;
  *v51 = "Knosis.renderAll";
  v29[1] = 16;
  *((_BYTE *)v29 + 16) = 2;
  v29[3] = v28;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))((char *)v29 + *(int *)(v54 + 24), v19, v17);
  v30 = type metadata accessor for Renderer(0);
  v31 = v53;
  v32 = *(_QWORD *)(v53 + *(int *)(v30 + 28));
  if (!v32)
  {
    if (*(_BYTE *)(v53 + *(int *)(v30 + 32)) == 4)
      v47 = 0;
    else
      v47 = *(unsigned __int8 *)(v53 + *(int *)(v30 + 32));
    if (sub_1AE85D040())
      __asm { BR              X9 }
    __asm { BR              X9 }
  }
  v34 = *(_QWORD *)(*(_QWORD *)v53 + 16);
  v33 = *(_QWORD *)(*(_QWORD *)v53 + 24);
  v36 = *(_QWORD *)(*(_QWORD *)v53 + 32);
  v35 = *(_QWORD *)(*(_QWORD *)v53 + 40);
  sub_1AE508C18();
  v37 = 0;
  v38 = 0;
  v39 = 0;
  sub_1AE85CC90();
  if (v41)
  {
    v42 = (uint64_t *)(v31 + *(int *)(v40 + 48));
    v37 = *v42;
    v38 = v42[1];
    v39 = v42[2];
    sub_1AE4FB75C();
    sub_1AE4F66CC();
  }
  v57 = 0;
  v58 = 0xE000000000000000;
  v56 = v32;
  sub_1AE4FB8E0();
  sub_1AE4F6730();
  sub_1AE4F6708();
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  sub_1AE926A48();
  v43 = v57;
  v44 = v58;
  sub_1AE4F6834();
  v45 = v50;
  *v50 = v34;
  v45[1] = v33;
  v45[2] = v36;
  v45[3] = v35;
  v45[4] = MEMORY[0x1E0DEE9D8];
  *((_BYTE *)v45 + 40) = 2;
  v45[6] = v43;
  v45[7] = v44;
  sub_1AE85CC4C();
  v46[17] = 0;
  v46[18] = v37;
  v46[19] = v38;
  v46[20] = v39;
  v48 = v51;
  sub_1AE576DB0((uint64_t)v51);
  sub_1AE53D160((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for LogSignpost);
  sub_1AE4F7740();
}

uint64_t sub_1AE856FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t inited;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  __int16 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int16 v72;
  _OWORD v73[2];
  _OWORD v74[8];
  uint64_t v75;
  uint64_t v76;

  sub_1AE50A320();
  v75 = v0;
  v76 = v1;
  v3 = v2;
  v5 = v4;
  type metadata accessor for Renderer(0);
  v6 = sub_1AE85DB30();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = 0;
    v51 = v6 + 32;
    v9 = MEMORY[0x1E0DEE9D8];
    v52 = v3;
    v48 = v3;
    v49 = *(_QWORD *)(v6 + 16);
    v50 = v6;
    while (v8 < *(_QWORD *)(v6 + 16))
    {
      if (v5 < 1)
      {
        v63 = v9;
        v10 = v51 + 40 * v8;
        v12 = *(_QWORD *)v10;
        v11 = *(_QWORD *)(v10 + 8);
        v13 = *(_QWORD *)(v10 + 24);
        v14 = *(_BYTE *)(v10 + 32);
        if (v3 >= 1)
        {
          v15 = v52 - 1;
          if (__OFSUB__(v52, 1))
            goto LABEL_29;
          --v52;
          if (v15 < 0)
          {
            swift_bridgeObjectRelease();
            return v63;
          }
        }
        v61 = v14;
        v62 = v8;
        sub_1AE4F6A24();
        sub_1AE4F6804();
        GraphNode.init(id:)(v12, v11, (uint64_t)&v64);
        v58 = *((_QWORD *)&v64 + 1);
        v59 = v64;
        v56 = *((_QWORD *)&v65 + 1);
        v57 = v65;
        v54 = BYTE2(v66);
        v55 = v66;
        sub_1AE501548(&qword_1EEDA2AF8);
        sub_1AE525A5C();
        v53 = sub_1AE925C98();
        v16 = sub_1AE4F6804();
        sub_1AE889508(v16);
        v18 = v17;
        sub_1AE4F67AC();
        *(_QWORD *)&v64 = v18;
        swift_retain();
        sub_1AE85DA44((uint64_t *)&v64);
        v60 = v5;
        sub_1AE4F67AC();
        sub_1AE4F9038();
        sub_1AE4F6A6C();
        v19 = *(_QWORD *)(v64 + 16);
        if (v19)
        {
          v20 = v64 + 56;
          v21 = MEMORY[0x1E0DEE9D8];
          do
          {
            swift_bridgeObjectRetain();
            sub_1AE4FB764();
            sub_1AE4F66CC();
            sub_1AE4F67A4();
            sub_1AE4FB75C();
            sub_1AE4F6708();
            sub_1AE7A6FB0();
            v23 = v68;
            v22 = v69;
            v25 = v70;
            v24 = v71;
            v26 = v72;
            sub_1AE501548(&qword_1EEDA4848);
            inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_1AE934250;
            *(_QWORD *)(inited + 32) = v23;
            *(_QWORD *)(inited + 40) = v22;
            *(_QWORD *)(inited + 48) = v25;
            *(_QWORD *)(inited + 56) = v24;
            *(_WORD *)(inited + 64) = v26;
            sub_1AE501548(&qword_1EED9AAC8);
            v28 = sub_1AE4F66BC();
            v29 = v64;
            *(_OWORD *)(v28 + 16) = xmmword_1AE934250;
            *(_OWORD *)(v28 + 32) = v29;
            v30 = v66;
            *(_OWORD *)(v28 + 48) = v65;
            *(_OWORD *)(v28 + 64) = v30;
            *(_QWORD *)(v28 + 80) = v67;
            *(_QWORD *)(v28 + 88) = v23;
            *(_QWORD *)(v28 + 96) = v22;
            *(_QWORD *)(v28 + 104) = v25;
            *(_QWORD *)(v28 + 112) = v24;
            *(_WORD *)(v28 + 120) = v26;
            v31 = v73[0];
            v32 = v73[1];
            v33 = v74[0];
            *(_QWORD *)(v28 + 168) = *(_QWORD *)((char *)v74 + 14);
            *(_OWORD *)(v28 + 154) = v33;
            *(_OWORD *)(v28 + 138) = v32;
            *(_OWORD *)(v28 + 122) = v31;
            *(_QWORD *)(inited + 72) = v28;
            sub_1AE4FB75C();
            sub_1AE4F66CC();
            v34 = sub_1AE925C98();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1AE505FE4();
              sub_1AE519ED0();
              v21 = v39;
            }
            v36 = *(_QWORD *)(v21 + 16);
            v35 = *(_QWORD *)(v21 + 24);
            if (v36 >= v35 >> 1)
            {
              sub_1AE506008(v35);
              sub_1AE519ED0();
              v21 = v40;
            }
            *(_QWORD *)(v21 + 16) = v36 + 1;
            v37 = v21 + 112 * v36;
            *(_OWORD *)(v37 + 32) = 0u;
            *(_OWORD *)(v37 + 48) = 0u;
            *(_WORD *)(v37 + 64) = 0;
            *(_BYTE *)(v37 + 66) = 4;
            *(_OWORD *)(v37 + 72) = 0u;
            *(_OWORD *)(v37 + 88) = 0u;
            *(_QWORD *)(v37 + 104) = v34;
            v38 = MEMORY[0x1E0DEE9D8];
            *(_QWORD *)(v37 + 112) = MEMORY[0x1E0DEE9D8];
            *(_QWORD *)(v37 + 120) = 0;
            *(_BYTE *)(v37 + 128) = 0;
            *(_QWORD *)(v37 + 136) = v38;
            v20 += 88;
            --v19;
          }
          while (v19);
        }
        else
        {
          v21 = MEMORY[0x1E0DEE9D8];
        }
        swift_release();
        v9 = v63;
        v5 = v60;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE505FE4();
          sub_1AE519ED0();
          v9 = v45;
        }
        v3 = v48;
        v7 = v49;
        v42 = *(_QWORD *)(v9 + 16);
        v41 = *(_QWORD *)(v9 + 24);
        v6 = v50;
        v8 = v62;
        v43 = v61;
        if (v42 >= v41 >> 1)
        {
          sub_1AE506008(v41);
          sub_1AE519ED0();
          v43 = v61;
          v8 = v62;
          v9 = v46;
          v7 = v49;
          v6 = v50;
        }
        *(_QWORD *)(v9 + 16) = v42 + 1;
        v44 = v9 + 112 * v42;
        *(_QWORD *)(v44 + 32) = v59;
        *(_QWORD *)(v44 + 40) = v58;
        *(_QWORD *)(v44 + 48) = v57;
        *(_QWORD *)(v44 + 56) = v56;
        *(_WORD *)(v44 + 64) = v55;
        *(_BYTE *)(v44 + 66) = v54;
        *(_OWORD *)(v44 + 72) = 0u;
        *(_OWORD *)(v44 + 88) = 0u;
        *(_QWORD *)(v44 + 104) = v53;
        *(_QWORD *)(v44 + 112) = v21;
        *(_QWORD *)(v44 + 120) = v13;
        *(_BYTE *)(v44 + 128) = v43;
        *(_QWORD *)(v44 + 136) = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        --v5;
      }
      if (++v8 == v7)
      {
        swift_bridgeObjectRelease();
        return v9;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

void sub_1AE8575D0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AE56CC34(v1, a1, type metadata accessor for AnswerRenderIterator);
}

void sub_1AE8575F4(uint64_t a1@<X8>)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;

  v3 = (int *)sub_1AE85CDE4();
  v4 = v3[6];
  v5 = *(_QWORD *)(*(_QWORD *)(v1 + v4) + 16);
  if (!v5)
    goto LABEL_7;
  v6 = (uint64_t *)(v1 + v3[8]);
  if ((v6[1] & 1) != 0)
  {
    v7 = 0;
    *v6 = 0;
    *((_BYTE *)v6 + 8) = 0;
LABEL_11:
    sub_1AE85777C();
    goto LABEL_12;
  }
  v8 = *v6;
  if (*v6 >= v5 - 1)
  {
LABEL_7:
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return;
  }
  *((_BYTE *)v6 + 8) = 0;
  v7 = v8 + 1;
  *v6 = v8 + 1;
  if (v8 == -1)
  {
    v7 = 0;
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(v1 + v3[7]);
  if (v9 == -1 || v9 && !(v7 % v9))
    goto LABEL_11;
LABEL_12:
  if (v7 < 0)
  {
    __break(1u);
  }
  else
  {
    v10 = *(_QWORD *)(v1 + v4);
    if ((unint64_t)v7 < *(_QWORD *)(v10 + 16))
    {
      v11 = v10 + 112 * v7;
      v12 = *(_QWORD *)(v11 + 32);
      v13 = *(_QWORD *)(v11 + 40);
      v14 = *(_QWORD *)(v11 + 48);
      v15 = *(_QWORD *)(v11 + 56);
      v16 = *(_QWORD *)(v11 + 72);
      v17 = *(_QWORD *)(v11 + 96);
      v18 = *(_QWORD *)(v11 + 104);
      v20 = *(_QWORD *)(v11 + 112);
      v19 = *(_QWORD *)(v11 + 120);
      v21 = *(unsigned __int8 *)(v11 + 128);
      v22 = *(_QWORD *)(v11 + 136);
      v23 = *(unsigned __int16 *)(v11 + 64);
      v24 = *(_BYTE *)(v11 + 66);
      *(_QWORD *)a1 = v12;
      *(_QWORD *)(a1 + 8) = v13;
      *(_QWORD *)(a1 + 16) = v14;
      *(_QWORD *)(a1 + 24) = v15;
      *(_QWORD *)(a1 + 32) = (unsigned __int16)v23 | ((unint64_t)v24 << 16);
      *(_QWORD *)(a1 + 40) = v16;
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(v11 + 80);
      *(_QWORD *)(a1 + 64) = v17;
      *(_QWORD *)(a1 + 72) = v18;
      *(_QWORD *)(a1 + 80) = v20;
      *(_QWORD *)(a1 + 88) = v19;
      *(_QWORD *)(a1 + 96) = v21;
      *(_QWORD *)(a1 + 104) = v22;
      sub_1AE525B74(v12, v13, v14, v15, v23, v24);
      sub_1AE4F66CC();
      sub_1AE4F66C4();
      sub_1AE4F6730();
      sub_1AE4F6708();
      swift_bridgeObjectRetain();
      return;
    }
  }
  __break(1u);
}

uint64_t type metadata accessor for AnswerRenderIterator(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1ED30FB40);
}

void sub_1AE85777C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  __int16 v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  id v104;
  id v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  NSObject *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  BOOL v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  NSObject *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _WORD *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  __int16 v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  int v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int64_t v208;
  int64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unint64_t v225;
  unint64_t v226;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  int64_t v231;
  int64_t v232;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  unint64_t v243;
  uint64_t v244;
  char v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unint64_t v253;
  unint64_t v254;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  void *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char v266;
  uint64_t v267;
  __int128 v268;
  __int128 v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  id v282;
  uint64_t v283;
  uint64_t v284;
  id v285;
  char *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  __int16 v292;
  char v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t *v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  char v303;
  uint64_t v304;
  __int16 v305;
  char v306;
  uint64_t v307;
  char v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  char v312;
  __int128 *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  NSObject *v317;
  int v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unsigned __int8 v327;
  unsigned __int8 v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  unint64_t v335;
  char v336;
  NSObject *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  int v341;
  uint64_t v342;
  _QWORD *v343;
  uint64_t v344;
  uint64_t v345;
  NSObject *v346;
  int v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t *v355;
  uint64_t v356;
  unint64_t v357;
  unint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  unsigned __int8 v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  _QWORD *v373;
  NSObject *v374;
  os_log_type_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  _QWORD *v381;
  os_log_type_t v382;
  uint8_t *v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  id v392;
  id v393;
  id v394;
  uint64_t v395;
  unint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  id v404;
  uint64_t v405;
  char *v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  _QWORD *v410;
  id v411;
  id v412;
  uint64_t v413;
  uint64_t *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  unsigned int v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  int *v422;
  uint64_t v423;
  uint64_t v424;
  NSObject *v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  _QWORD *v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  _QWORD *v434;
  char *v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  NSObject *v445;
  _QWORD *v446;
  uint64_t v447;
  _QWORD *v448;
  uint64_t v449;
  uint64_t v450;
  _QWORD *v451;
  NSObject *v452;
  _QWORD v453[5];
  __int16 v454;
  uint64_t v455;
  unsigned __int8 v456;
  __int128 v457[9];
  uint64_t v458;
  uint64_t v459;
  _QWORD *v460;
  uint64_t v461;
  NSObject *v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  char v472;
  uint64_t v473;
  _QWORD v474[3];
  uint64_t v475;
  uint64_t v476;
  _QWORD v477[5];
  _QWORD v478[5];
  _OWORD v479[2];
  __int16 v480;
  _OWORD v481[9];
  _QWORD v482[4];
  __int16 v483;
  _QWORD v484[3];

  sub_1AE50A320();
  v1 = sub_1AE4F6854();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4FFEB4();
  v5 = v3 - v4;
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t)&v395 - v7;
  sub_1AE85CDE4();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F9024();
  v438 = v11;
  v12 = v0 + v10[8];
  if ((*(_BYTE *)(v12 + 8) & 1) != 0)
    goto LABEL_308;
  v13 = *(_QWORD *)v12;
  v14 = *(_QWORD *)(v0 + v10[7]);
  v420 = v13;
  v15 = __OFADD__(v13, v14);
  v16 = v13 + v14;
  if (v15)
    goto LABEL_333;
  v400 = v5;
  v414 = (uint64_t *)(v0 + v10[6]);
  v17 = *v414;
  if (*(_QWORD *)(*v414 + 16) < v16)
    v16 = *(_QWORD *)(*v414 + 16);
  v15 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v15)
  {
LABEL_334:
    __break(1u);
LABEL_335:
    __break(1u);
LABEL_336:
    __break(1u);
LABEL_337:
    __break(1u);
LABEL_338:
    __break(1u);
LABEL_339:
    __break(1u);
    goto LABEL_340;
  }
  v437 = v18;
  v398 = v2;
  v399 = v1;
  v19 = v0;
  v20 = v10;
  sub_1AE501548(&qword_1EEDA2AF8);
  v0 = MEMORY[0x1E0DEE9D8];
  v405 = sub_1AE925C98();
  v422 = v20;
  v21 = v20[9];
  v415 = v19;
  v409 = v21;
  v2 = *(_QWORD *)(v19 + v21);
  v22 = *(_QWORD *)(v2 + 16);
  if (v22)
  {
    sub_1AE4F6A24();
    v23 = 0;
    while (1)
    {
      if (*(_BYTE *)(v2 + v23 + 32))
      {
        if (*(_BYTE *)(v2 + v23 + 32) != 2)
        {
          sub_1AE4F6824();
          sub_1AE85CC68();
LABEL_25:
          v410 = 0;
          goto LABEL_26;
        }
      }
      else
      {
        sub_1AE78B538();
      }
      v24 = sub_1AE4F9760();
      sub_1AE4F67AC();
      if ((v24 & 1) != 0)
      {
        sub_1AE4F6824();
        goto LABEL_25;
      }
      if (v22 == ++v23)
      {
        sub_1AE4F6824();
        break;
      }
    }
  }
  if ((*(_BYTE *)(v415 + *(int *)(sub_1AE508C18() + 56)) & 1) != 0)
    goto LABEL_25;
  sub_1AE5FB980();
  if (v437 < v420)
    goto LABEL_343;
  v25 = sub_1AE85CD98(v420, v437);
  *(_QWORD *)&v481[0] = v0;
  if (v28 >> 1 != v27)
  {
    if ((uint64_t)(v28 >> 1) > v27)
    {
      v29 = v26;
      v30 = v27;
      v452 = v25;
      swift_unknownObjectRetain();
      __asm { BR              X9 }
    }
    goto LABEL_347;
  }
  swift_unknownObjectRelease();
  v31 = sub_1AE898358(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)&v481[0] = 0;
  *((_QWORD *)&v481[0] + 1) = v31;
  memset(&v481[1], 0, 88);
  BYTE8(v481[6]) = 32;
  v32 = sub_1AE859FA4((uint64_t)v481);
  v410 = 0;
  v405 = v32;
  sub_1AE85CDD0();
  sub_1AE4F67AC();
LABEL_26:
  sub_1AE5962D8();
  v2 = MEMORY[0x1E0DEE9D8];
  v403 = sub_1AE925C98();
  v53 = sub_1AE4F82EC(objc_allocWithZone(MEMORY[0x1E0CB3578]));
  objc_msgSend(v53, sel_setTimeStyle_, 0);
  sub_1AE4FF014(v53, sel_setDateStyle_);
  v8 = (uint64_t)sub_1AE4F82EC(objc_allocWithZone(MEMORY[0x1E0CB3578]));
  objc_msgSend((id)v8, sel_setTimeStyle_, 2);
  sub_1AE4FF014((id)v8, sel_setDateStyle_);
  v54 = (uint64_t)sub_1AE4F82EC(objc_allocWithZone(MEMORY[0x1E0CB3570]));
  sub_1AE4FF014((id)v54, sel_setUnitsStyle_);
  objc_msgSend((id)v54, sel_setMaximumUnitCount_, 2);
  sub_1AE9243C0();
  v0 = sub_1AE4FCE84();
  v402 = sub_1AE9243B4();
  v408 = *(int *)(sub_1AE508C18() + 56);
  v55 = *(unsigned __int8 *)(v415 + v408);
  v404 = v53;
  v411 = (id)v54;
  if (v55 != 1)
  {
    v63 = v53;
    v64 = (id)v8;
    v65 = (id)v54;
    v401 = MEMORY[0x1E0DEE9D8];
    v66 = v420;
    v67 = (id)v8;
    while (1)
    {
      v283 = v437 + 1;
      if (__OFADD__(v437, 1))
        goto LABEL_338;
      if (v283 < v66)
        goto LABEL_339;
      v284 = v415;
      v8 = (uint64_t)v411;
      if (v66 == v283)
        goto LABEL_263;
      v286 = "";
      v406 = "";
      v407 = v437 + 1;
      v412 = v67;
LABEL_265:
      if (v66 >= v283)
        goto LABEL_321;
      v420 = v66;
      v287 = *(_QWORD *)(v284 + v409);
      v288 = *(_QWORD *)(v287 + 16);
      if (!v288)
      {
LABEL_275:
        v289 = *v414;
        v2 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
        v8 = v420;
        sub_1AE66B86C(v420, v2 & 1, v289);
        v290 = v438;
        if ((v2 & 1) != 0)
        {
          v291 = v289 + 112 * v8;
          v292 = *(_WORD *)(v291 + 64);
          v293 = *(_BYTE *)(v291 + 66);
          v457[0] = *(_OWORD *)(v291 + 32);
          v457[1] = *(_OWORD *)(v291 + 48);
          LOWORD(v457[2]) = v292;
          BYTE2(v457[2]) = v293;
          GraphNode.id.getter();
          sub_1AE515C44(v294, v295, v405);
          v2 = v296;
          sub_1AE4F9038();
          if (!v2)
          {
            sub_1AE85CCE8();
            v2 = v297;
          }
          v298 = v414;
          sub_1AE85CDA8();
          v299 = *v298;
          v54 = v420;
          sub_1AE85B690(v420, *v298);
          v287 = v299 + 112 * v54 + 32;
          sub_1AE7A4198(v2);
          v300 = sub_1AE4F665C();
          sub_1AE85CDA0(v300);
          goto LABEL_282;
        }
        goto LABEL_326;
      }
      sub_1AE4F6A24();
      v54 = 0;
      while (!*(_BYTE *)(v287 + v54 + 32))
      {
        v2 = 0xE700000000000000;
        sub_1AE78B538();
LABEL_272:
        v8 = sub_1AE4F9760();
        sub_1AE4F665C();
        if ((v8 & 1) != 0)
        {
          sub_1AE4F6824();
          goto LABEL_281;
        }
        if (v288 == ++v54)
        {
          sub_1AE4F6824();
          goto LABEL_275;
        }
      }
      if (*(_BYTE *)(v287 + v54 + 32) == 2)
        break;
      sub_1AE4F6824();
      sub_1AE85CC68();
LABEL_281:
      v290 = v438;
      v54 = v420;
LABEL_282:
      sub_1AE85CDA8();
      sub_1AE85CCA0();
      v301 = v287 + 112 * v54 + 32;
      v302 = sub_1AE7A3974();
      sub_1AE85CDA0(v302);
      v303 = sub_1AE85CD7C();
      sub_1AE85CC7C(v303);
      if ((v2 & 1) == 0)
        goto LABEL_322;
      v8 = 112 * v54;
      v304 = v301 + 112 * v54;
      v305 = *(_WORD *)(v304 + 64);
      v306 = *(_BYTE *)(v304 + 66);
      v307 = *(_QWORD *)(v304 + 120);
      v308 = *(_BYTE *)(v304 + 128);
      v309 = *(_QWORD *)(v304 + 136);
      v457[0] = *(_OWORD *)(v304 + 32);
      v457[1] = *(_OWORD *)(v304 + 48);
      LOWORD(v457[2]) = v305;
      BYTE2(v457[2]) = v306;
      *(__int128 *)((char *)&v457[2] + 8) = *(_OWORD *)(v304 + 72);
      *(__int128 *)((char *)&v457[3] + 8) = *(_OWORD *)(v304 + 88);
      *(__int128 *)((char *)&v457[4] + 8) = *(_OWORD *)(v304 + 104);
      *((_QWORD *)&v457[5] + 1) = v307;
      LOBYTE(v457[6]) = v308;
      *((_QWORD *)&v457[6] + 1) = v309;
      sub_1AE7A036C();
      v2 = v310;
      sub_1AE85CDA8();
      sub_1AE85CCA0();
      *((_QWORD *)&v457[7 * v54 + 8] + 1) = v2;
      v311 = swift_bridgeObjectRelease();
      sub_1AE85CDA0(v311);
      sub_1AE56CC34(v415, v290, type metadata accessor for AnswerRenderIterator);
      v312 = sub_1AE85CD7C();
      sub_1AE85CC7C(v312);
      if ((v2 & 1) == 0)
      {
LABEL_323:
        sub_1AE85CD20(v54);
        __break(1u);
LABEL_324:
        __break(1u);
        goto LABEL_325;
      }
      v313 = &v457[7 * v54];
      v54 = *((_QWORD *)v313 + 4);
      v314 = *((_QWORD *)v313 + 5);
      v315 = v290;
      v317 = *((_QWORD *)v313 + 6);
      v316 = *((_QWORD *)v313 + 7);
      v318 = *((unsigned __int16 *)v313 + 32);
      v418 = *((unsigned __int8 *)v313 + 66);
      LODWORD(v419) = v318;
      v319 = *((_QWORD *)v313 + 9);
      v8 = *((_QWORD *)v313 + 10);
      v320 = *((_QWORD *)v313 + 11);
      v2 = *((_QWORD *)v313 + 12);
      v322 = *((_QWORD *)v313 + 13);
      v321 = *((_QWORD *)v313 + 14);
      v323 = *((_QWORD *)v313 + 15);
      LODWORD(v431) = *((unsigned __int8 *)v313 + 128);
      v416 = *((_QWORD *)v313 + 17);
      v417 = v321;
      v437 = *(_QWORD *)(v315 + v422[9]);
      v324 = sub_1AE5B7810(v437);
      v432 = v320;
      v428 = v54;
      v429 = (_QWORD *)v2;
      v426 = v322;
      v427 = v314;
      v452 = v317;
      if (!v324)
      {
        v439 = v319;
        v353 = sub_1AE7D3660();
        sub_1AE525B74(v353, v354, (uint64_t)v317, v316, v419, v418);
        sub_1AE4F66C4();
        sub_1AE4FB764();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1AE4F6730();
        v352 = v8;
        v351 = v316;
        goto LABEL_298;
      }
      v413 = v316;
      if (v324 >= 1)
      {
        v441 = v324;
        v325 = v413;
        v327 = v418;
        v326 = v419;
        sub_1AE85CD90(v54, v314, (uint64_t)v452, v413, v419);
        sub_1AE4F66C4();
        sub_1AE4FB764();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1AE4F6730();
        v328 = v327;
        v329 = v417;
        sub_1AE525B74(v54, v314, (uint64_t)v452, v325, v326, v328);
        v330 = qword_1EED996B8;
        sub_1AE4F6730();
        sub_1AE4F66C4();
        sub_1AE4FB764();
        sub_1AE4F67A4();
        v331 = v416;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v330 != -1)
          swift_once();
        v332 = 0;
        v448 = (_QWORD *)v2;
        v449 = v314;
        v445 = v452;
        v446 = (_QWORD *)v54;
        v444 = v413;
        LODWORD(v430) = v419;
        LODWORD(v443) = v418;
        v450 = v322;
        v451 = (_QWORD *)v8;
        v447 = v329;
        v442 = v331;
        v333 = v441;
        v421 = v8;
        do
        {
          v334 = qword_1EEE11E30;
          if (*(_QWORD *)(qword_1EEE11E30 + 16) && (v335 = sub_1AE536DFC(), v333 = v441, (v336 & 1) != 0))
          {
            sub_1AE57C238(*(_QWORD *)(v334 + 56) + 40 * v335, (uint64_t)v457);
            sub_1AE50AF58(v457, (uint64_t)v474);
            v436 = v475;
            v440 = v476;
            v435 = (char *)sub_1AE4F9858(v474, v475);
            v337 = v445;
            v338 = (uint64_t)v446;
            v460 = v446;
            v461 = v449;
            v462 = v445;
            v339 = v444;
            v463 = v444;
            v340 = v430;
            LOWORD(v464) = v430;
            v341 = v443;
            BYTE2(v464) = v443;
            v465 = v319;
            v439 = v319;
            v466 = (uint64_t)v451;
            v467 = v432;
            v468 = (uint64_t)v448;
            v469 = v450;
            v470 = v447;
            v471 = v323;
            v472 = v431;
            v342 = v442;
            v473 = v442;
            v343 = *(_QWORD **)(v440 + 8);
            v433 = *(_QWORD *)(v438 + v422[5]);
            v434 = v343;
            sub_1AE85CD90((uint64_t)v446, v449, (uint64_t)v445, v444, v430);
            sub_1AE4F66CC();
            sub_1AE4F66C4();
            sub_1AE4F66C4();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            ((void (*)(__int128 *__return_ptr, _QWORD **, uint64_t, uint64_t, uint64_t, uint64_t))v434)(v457, &v460, v438, v433, v436, v440);
            v445 = v337;
            v446 = (_QWORD *)v338;
            v344 = v338;
            v345 = v449;
            v444 = v339;
            LODWORD(v443) = v341;
            sub_1AE525C94(v344, v449, (uint64_t)v337, v339, v340, v341);
            v442 = v342;
            swift_bridgeObjectRelease();
            sub_1AE4F665C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v346 = *((_QWORD *)&v457[4] + 1);
            if (*((_QWORD *)&v457[4] + 1))
            {
              v323 = *((_QWORD *)&v457[5] + 1);
              v435 = *(char **)&v457[4];
              v436 = *(_QWORD *)&v457[5];
              v434 = *(_QWORD **)&v457[3];
              v439 = *((_QWORD *)&v457[2] + 1);
              v440 = *((_QWORD *)&v457[6] + 1);
              v347 = v457[2];
              v432 = *((_QWORD *)&v457[3] + 1);
              v433 = *((_QWORD *)&v457[1] + 1);
              v424 = *((_QWORD *)&v457[0] + 1);
              v425 = *(NSObject **)&v457[1];
              v348 = *(_QWORD *)&v457[0];
              v423 = *(_QWORD *)&v457[2] >> 16;
              LODWORD(v431) = LOBYTE(v457[6]);
              sub_1AE525C94((uint64_t)v446, v345, (uint64_t)v445, v444, v340, v443);
              sub_1AE507824();
              swift_bridgeObjectRelease();
              sub_1AE4F67AC();
              swift_bridgeObjectRelease();
              sub_1AE4F81B8();
              _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v474);
              v445 = v425;
              v446 = (_QWORD *)v348;
              v444 = v433;
              LODWORD(v430) = v347;
              LODWORD(v443) = v423;
              v450 = (uint64_t)v346;
              v451 = v434;
              v448 = v435;
              v449 = v424;
              v447 = v436;
              v319 = v439;
              v442 = v440;
              sub_1AE505ECC();
            }
            else
            {
              _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v474);
              sub_1AE505ECC();
              v319 = v439;
            }
          }
          else
          {
            v346 = v452;
          }
          ++v332;
        }
        while (v333 != v332);
        v439 = v319;
        swift_bridgeObjectRelease();
        v349 = sub_1AE7D3660();
        sub_1AE525C94(v349, v350, (uint64_t)v346, v413, v419, v418);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AE4F6710();
        sub_1AE4F665C();
        sub_1AE4F81B8();
        v427 = v449;
        v428 = (uint64_t)v446;
        v351 = v444;
        v452 = v445;
        v418 = v443;
        LODWORD(v419) = v430;
        v429 = v448;
        v352 = (uint64_t)v451;
        v426 = v450;
        v416 = v442;
        v417 = v447;
LABEL_298:
        sub_1AE53D160(v438, type metadata accessor for AnswerRenderIterator);
        v355 = v414;
        sub_1AE85B654();
        v356 = *v355;
        v357 = v420;
        sub_1AE85B690(v420, *v355);
        v358 = v356 + 112 * v357;
        v359 = *(_QWORD *)(v358 + 32);
        v360 = *(_QWORD *)(v358 + 40);
        v361 = *(_QWORD *)(v358 + 48);
        v362 = *(_QWORD *)(v358 + 56);
        v2 = *(_QWORD *)(v358 + 96);
        v54 = *(_QWORD *)(v358 + 136);
        v363 = v427;
        *(_QWORD *)(v358 + 32) = v428;
        *(_QWORD *)(v358 + 40) = v363;
        *(_QWORD *)(v358 + 48) = v452;
        *(_QWORD *)(v358 + 56) = v351;
        v364 = *(unsigned __int16 *)(v358 + 64);
        *(_WORD *)(v358 + 64) = v419;
        v365 = *(_BYTE *)(v358 + 66);
        *(_BYTE *)(v358 + 66) = v418;
        *(_QWORD *)(v358 + 72) = v439;
        *(_QWORD *)(v358 + 80) = v352;
        v366 = (uint64_t)v429;
        *(_QWORD *)(v358 + 88) = v432;
        *(_QWORD *)(v358 + 96) = v366;
        v367 = v417;
        *(_QWORD *)(v358 + 104) = v426;
        *(_QWORD *)(v358 + 112) = v367;
        *(_QWORD *)(v358 + 120) = v323;
        *(_BYTE *)(v358 + 128) = v431;
        *(_QWORD *)(v358 + 136) = v416;
        sub_1AE525C94(v359, v360, v361, v362, v364, v365);
        sub_1AE4F67AC();
        swift_bridgeObjectRelease();
        sub_1AE4F81B8();
        swift_bridgeObjectRelease();
        v368 = sub_1AE4F665C();
        nullsub_1(v368);
        v284 = v415;
        if ((*(_BYTE *)(v415 + v408) & 1) != 0)
        {
          *(_QWORD *)&v457[0] = v402;
          *((_QWORD *)&v457[0] + 1) = v404;
          v8 = (uint64_t)v411;
          *(_QWORD *)&v457[1] = v412;
          *((_QWORD *)&v457[1] + 1) = v411;
          sub_1AE85B654();
          sub_1AE85B690(v357, *v355);
          v2 = (uint64_t)v410;
          sub_1AE7A1F1C();
          v17 = v400;
          v410 = (_QWORD *)v2;
          if (!v2)
          {
            nullsub_1(v369);
            v284 = v415;
            goto LABEL_302;
          }
          sub_1AE5FBDF8();
          swift_bridgeObjectRelease();
          v370 = sub_1AE5FB980();
          nullsub_1(v370);
          v2 = v398;
          v0 = v399;
          if (qword_1ED3193F0 == -1)
          {
LABEL_305:
            v371 = sub_1AE4FB608(v0, (uint64_t)qword_1ED3193D8);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v17, v371, v0);
            v372 = sub_1AE4F66BC();
            v373 = v410;
            *(_QWORD *)(v372 + 16) = v410;
            sub_1AE85CD88();
            sub_1AE85CD88();
            v374 = sub_1AE925B54();
            v375 = sub_1AE9265EC();
            v376 = sub_1AE4F66BC();
            *(_BYTE *)(v376 + 16) = 32;
            v377 = sub_1AE4F66BC();
            *(_BYTE *)(v377 + 16) = 8;
            v378 = sub_1AE4F66BC();
            *(_QWORD *)(v378 + 16) = sub_1AE85CC3C;
            *(_QWORD *)(v378 + 24) = v372;
            v379 = sub_1AE4F66BC();
            *(_QWORD *)(v379 + 16) = sub_1AE734E24;
            *(_QWORD *)(v379 + 24) = v378;
            sub_1AE501548(qword_1ED31B2E0);
            v380 = sub_1AE4F66BC();
            sub_1AE5B7814(v380, 3);
            *v381 = sub_1AE734F64;
            v381[1] = v376;
            v381[2] = sub_1AE734F64;
            v381[3] = v377;
            v381[4] = sub_1AE734F3C;
            v381[5] = v379;
            swift_retain();
            swift_retain();
            sub_1AE509AC4();
            sub_1AE60DD4C();
            swift_retain();
            sub_1AE4F6710();
            v382 = v375;
            v452 = v374;
            if (sub_1AE85CDB0())
            {
              v383 = (uint8_t *)sub_1AE4F66A0();
              v451 = (_QWORD *)sub_1AE4F66A0();
              *(_QWORD *)&v457[0] = v451;
              *(_WORD *)v383 = 258;
              v383[2] = 32;
              sub_1AE4F77C8();
              v383[3] = 8;
              sub_1AE507978();
              v460 = v373;
              sub_1AE85CD88();
              sub_1AE501548((uint64_t *)&unk_1ED319C60);
              v384 = sub_1AE925E90();
              sub_1AE520ED4(v384, v385, (uint64_t)v457, v386, v387, v388, v389, v390, v395, v396, v397, v398, v399, v400, v401, v402, v403, (uint64_t)v404, v405,
                (uint64_t)v406);
              v460 = (_QWORD *)v391;
              sub_1AE92676C();
              sub_1AE50A24C();
              swift_release();
              sub_1AE4F682C();
              swift_bridgeObjectRelease();
              sub_1AE85CCB0();
              sub_1AE508348(&dword_1AE4F2000, v452, v382, "KGRenderer: textualizing answer failed: %s", v383);
              sub_1AE5081C8();
              sub_1AE4F9064();
            }
            sub_1AE4F6DB8();
            v392 = v411;

            v393 = v412;
            v394 = v404;

            sub_1AE85CCB0();
            sub_1AE50A24C();
            swift_release();
            sub_1AE4F682C();
            sub_1AE507978();
            sub_1AE4F77C8();
            sub_1AE85CCB0();

            (*(void (**)(uint64_t, uint64_t))(v398 + 8))(v400, v399);
            goto LABEL_308;
          }
LABEL_348:
          swift_once();
          goto LABEL_305;
        }
        v8 = (uint64_t)v411;
LABEL_302:
        v66 = v420 + 1;
        v286 = v406;
        v283 = v407;
        v67 = v412;
        if (v420 + 1 == v407)
        {
LABEL_263:
          swift_bridgeObjectRelease();
          sub_1AE5FB980();
          sub_1AE4F6DB8();

          v285 = v404;
          sub_1AE5FBDF8();
          goto LABEL_308;
        }
        goto LABEL_265;
      }
LABEL_325:
      __break(1u);
LABEL_326:
      sub_1AE85CD20(v8);
      __break(1u);
LABEL_327:
      swift_unknownObjectRelease_n();
      v88 = v474[0];
LABEL_37:
      v0 = sub_1AE7AF14C(v88, (uint64_t)v429);
      if (*(_QWORD *)(v2 + 16))
      {
        sub_1AE5FB980();
        sub_1AE5FBDF8();
        LOBYTE(v460) = 0;
        LOBYTE(v474[0]) = 0;
        LOBYTE(v459) = 0;
        LOBYTE(v458) = 0;
        v456 = 0;
        static TriplesQuery.Clause.match(subjectMatchType:subjects:subjectClauses:predicateMatchType:predicates:objectMatchType:objects:relationshipIdMatchType:relationshipIds:relationshipPredicateMatchType:relationshipPredicates:)((unsigned __int8 *)&v460, v2, 0, (unsigned __int8 *)v474, v0, (unsigned __int8 *)&v459, 0, (unsigned __int8 *)&v458, v457, 0, &v456, v0);
        sub_1AE4F9038();
        v451 = (_QWORD *)*((_QWORD *)&v457[0] + 1);
        v452 = *(NSObject **)&v457[0];
        v449 = *((_QWORD *)&v457[1] + 1);
        v450 = *(_QWORD *)&v457[1];
        v447 = *((_QWORD *)&v457[2] + 1);
        v448 = *(_QWORD **)&v457[2];
        v89 = v457[3];
        v91 = *((_QWORD *)&v457[4] + 1);
        v90 = *(_QWORD *)&v457[4];
        v93 = *((_QWORD *)&v457[5] + 1);
        v92 = *(_QWORD *)&v457[5];
        v94 = *(_QWORD *)&v457[6];
        v95 = BYTE8(v457[6]);
        LOBYTE(v460) = 6;
        v96 = sub_1AE85A13C((uint64_t)v457, (char *)&v460);
        sub_1AE58307C((uint64_t)v452, (uint64_t)v451, v450, v449, (uint64_t)v448, v447, v89, *((uint64_t *)&v89 + 1), v90, v91, v92, v93, v94, v95);
        sub_1AE4F66CC();
        v97 = v410;
        v98 = sub_1AE856288();
        v410 = v97;
        v405 = v96;
        sub_1AE4F9038();
        v99 = sub_1AE4F6708();
        v100 = sub_1AE85ACA8(v99);
        v101 = sub_1AE501548(&qword_1EEDA2D00);
        sub_1AE4F66BC();
        v0 = sub_1AE527CC8(v100);
        v401 = v98;
        sub_1AE4F76D8();
        *((_QWORD *)&v457[1] + 1) = v101;
        sub_1AE52FB78(&qword_1EEDA4830, &qword_1EEDA2D00, (uint64_t)&protocol conformance descriptor for GraphObjectBareContext<A>);
        *(_QWORD *)&v457[2] = v102;
        *(_QWORD *)&v457[0] = v0;
        type metadata accessor for K2TInProcessService();
        v2 = sub_1AE4F66BC();
        sub_1AE50AF58(v457, v2 + 16);
        v103 = v404;
        *(_QWORD *)(v2 + 56) = v402;
        *(_QWORD *)(v2 + 64) = v103;
        v54 = (uint64_t)v411;
        v67 = v412;
        *(_QWORD *)(v2 + 72) = v412;
        *(_QWORD *)(v2 + 80) = v54;
        swift_retain();
        sub_1AE60DD4C();
        v104 = v103;
        v105 = v67;
        v106 = (id)v54;
        v8 = v431;
        v403 = sub_1AE85B75C(v431);
        sub_1AE4F81B8();
        sub_1AE50A24C();
        swift_release();
        v66 = v420;
      }
      else
      {
        sub_1AE4F9038();
        sub_1AE4F665C();
        v401 = MEMORY[0x1E0DEE9D8];
        v66 = v420;
        v67 = v412;
      }
    }
    v2 = (unint64_t)v286 | 0x8000000000000000;
    goto LABEL_272;
  }
  v412 = (id)v8;
  if (v437 < v420)
    goto LABEL_342;
  v8 = sub_1AE85CD98(v420, v437);
  *(_QWORD *)&v457[0] = v2;
  v59 = (v58 >> 1) - v57;
  if (v58 >> 1 == v57)
  {
    v60 = v404;
    v61 = v412;
    v62 = v411;
    swift_unknownObjectRelease();
  }
  else
  {
    if ((uint64_t)(v58 >> 1) <= v57)
      goto LABEL_345;
    v68 = v56;
    v69 = v57;
    v70 = v404;
    v71 = v412;
    v72 = v411;
    v54 = v68 + 112 * v69 + 104;
    do
    {
      v73 = *(_WORD *)(v54 - 72);
      v74 = *(_BYTE *)(v54 - 70);
      v75 = *(_QWORD *)(v54 - 16);
      v76 = *(_BYTE *)(v54 - 8);
      v77 = *(_QWORD *)v54;
      v79 = *(_OWORD *)(v54 - 48);
      v78 = *(_OWORD *)(v54 - 32);
      v80 = *(_OWORD *)(v54 - 88);
      v81 = *(_OWORD *)(v54 - 64);
      v481[0] = *(_OWORD *)(v54 - 104);
      v481[1] = v80;
      LOWORD(v481[2]) = v73;
      BYTE2(v481[2]) = v74;
      *(_OWORD *)((char *)&v481[2] + 8) = v81;
      *(_OWORD *)((char *)&v481[3] + 8) = v79;
      *(_OWORD *)((char *)&v481[4] + 8) = v78;
      *((_QWORD *)&v481[5] + 1) = v75;
      LOBYTE(v481[6]) = v76;
      *((_QWORD *)&v481[6] + 1) = v77;
      sub_1AE7A0BBC();
      sub_1AE60F084();
      v54 += 112;
      --v59;
    }
    while (v59);
    swift_unknownObjectRelease();
  }
  sub_1AE898248();
  v431 = v82;
  sub_1AE77B910();
  v429 = (_QWORD *)v83;
  v84 = sub_1AE85CD98(v420, v437);
  v430 = v87;
  v474[0] = v2;
  if (v85 == v86 >> 1)
  {
    swift_unknownObjectRelease();
    v88 = MEMORY[0x1E0DEE9D8];
    v2 = v431;
    goto LABEL_37;
  }
  v2 = v86 >> 1;
  v401 = v84;
  v0 = v85;
  swift_unknownObjectRetain();
  v107 = v2;
  v108 = v0;
  v413 = v2;
  while (2)
  {
    if (v107 <= v108)
      goto LABEL_344;
    v428 = v108;
    v109 = v430 + 112 * v108;
    v110 = *(_QWORD *)v109;
    v111 = *(_QWORD *)(v109 + 16);
    v112 = *(_QWORD *)(v109 + 24);
    v113 = *(unsigned __int16 *)(v109 + 32);
    v114 = *(unsigned __int8 *)(v109 + 34);
    v17 = *(_QWORD *)(v109 + 72);
    v8 = *(_QWORD *)(v109 + 80);
    v54 = *(_QWORD *)(v109 + 104);
    v115 = *(_QWORD *)(v109 + 64);
    v0 = *(_QWORD *)(v109 + 48);
    v423 = *(_QWORD *)(v109 + 8);
    v424 = v110;
    v421 = v111;
    v419 = v112;
    v418 = v113;
    LODWORD(v417) = v114;
    sub_1AE525B74(v110, v423, v111, v112, v113, v114);
    v426 = v115;
    sub_1AE4F66C4();
    v425 = v17;
    sub_1AE4F6708();
    sub_1AE4F6A24();
    v416 = v54;
    sub_1AE4F6804();
    v427 = v0;
    sub_1AE4F66CC();
    sub_1AE519690(0);
    v2 = v116;
    v459 = v116;
    v117 = sub_1AE5B7810(v8);
    v434 = (_QWORD *)v8;
    v435 = (char *)v117;
    if (v117)
    {
      LODWORD(v433) = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
      v432 = v8 + 32;
      sub_1AE4F6730();
      v118 = 0;
      while (1)
      {
        if ((v433 & 1) == 0)
          goto LABEL_357;
        if (__OFADD__(v118, 1))
          goto LABEL_330;
        v436 = v118 + 1;
        v119 = v432 + 112 * v118;
        v120 = *(_QWORD *)v119;
        v121 = *(_QWORD *)(v119 + 8);
        v122 = *(_QWORD *)(v119 + 16);
        v452 = *(NSObject **)(v119 + 24);
        LODWORD(v448) = *(unsigned __int16 *)(v119 + 32);
        v123 = *(unsigned __int8 *)(v119 + 34);
        v54 = *(_QWORD *)(v119 + 72);
        v124 = *(_QWORD *)(v119 + 80);
        sub_1AE85CD5C();
        sub_1AE525B74(v120, v121, v122, v125, v126, v123);
        sub_1AE4F66C4();
        sub_1AE4F6804();
        sub_1AE4F6730();
        sub_1AE4F6708();
        sub_1AE4F66CC();
        v446 = (_QWORD *)v121;
        v447 = v120;
        v127 = v121;
        v128 = v452;
        LODWORD(v440) = v123;
        v449 = v122;
        sub_1AE525B74(v120, v127, v122, (uint64_t)v452, v448, v123);
        v439 = v0;
        sub_1AE4F66CC();
        v445 = v2;
        sub_1AE4F66C4();
        sub_1AE4F6A24();
        v442 = v124;
        sub_1AE4F6730();
        v441 = v17;
        sub_1AE4F6708();
        sub_1AE85CCE8();
        *(_QWORD *)&v457[0] = v129;
        sub_1AE64A2FC(v477);
        v130 = v477[0];
        v451 = (_QWORD *)v477[1];
        v131 = v477[3];
        v8 = v477[4];
        v2 = (unint64_t)(v477[2] + 64) >> 6;
        v443 = v54;
        sub_1AE4F6804();
        while (1)
        {
          if (v8)
          {
            sub_1AE508064();
            goto LABEL_60;
          }
          v132 = v131 + 1;
          if (__OFADD__(v131, 1))
            goto LABEL_315;
          if (v132 >= v2)
          {
            v8 = v449;
            goto LABEL_88;
          }
          v8 = v449;
          if (!v451[v132])
          {
            if (v131 + 2 >= v2)
              goto LABEL_88;
            sub_1AE85CD38();
            if (!v134)
            {
              if (v133 + 2 >= v2)
                goto LABEL_88;
              sub_1AE85CD38();
              if (!v136)
              {
                if (v135 + 3 >= v2)
                  goto LABEL_88;
                sub_1AE85CD38();
                if (!v138)
                {
                  if (v137 + 4 >= v2)
                    goto LABEL_88;
                  sub_1AE85CD38();
                  if (!v140)
                  {
                    v153 = v139 + 5;
                    if (v153 >= v2)
                      goto LABEL_88;
                    if (!v451[v153])
                      break;
                  }
                }
              }
            }
          }
LABEL_59:
          sub_1AE5067B4();
          v131 = v141;
LABEL_60:
          v142 = sub_1AE85CD14(*(_QWORD *)(v130 + 56));
          v143 = *(_QWORD *)&v457[0];
          v144 = sub_1AE5B77A4(*(uint64_t *)&v457[0]);
          v54 = v144 + v142;
          if (__OFADD__(v144, v142))
          {
            __break(1u);
LABEL_310:
            __break(1u);
LABEL_311:
            __break(1u);
LABEL_312:
            __break(1u);
LABEL_313:
            __break(1u);
LABEL_314:
            __break(1u);
LABEL_315:
            __break(1u);
LABEL_316:
            __break(1u);
LABEL_317:
            __break(1u);
LABEL_318:
            __break(1u);
LABEL_319:
            __break(1u);
LABEL_320:
            __break(1u);
LABEL_321:
            __break(1u);
LABEL_322:
            sub_1AE85CD20(v54);
            __break(1u);
            goto LABEL_323;
          }
          sub_1AE4F66CC();
          if (!swift_isUniquelyReferenced_nonNull_native()
            || (v145 = *(_QWORD *)(v143 + 24) >> 1, v145 < v54))
          {
            sub_1AE519C64();
            v143 = v146;
            *(_QWORD *)&v457[0] = v146;
            sub_1AE85CCFC();
          }
          v54 = v145 - *(_QWORD *)(v143 + 16);
          if (sub_1AE85CCB8())
          {
            if (v54 < v142)
              goto LABEL_311;
            if (v142 < 0)
              goto LABEL_361;
            sub_1AE509638();
            v149 = v149 || v147 >= v148;
            if (!v149)
              goto LABEL_361;
            swift_arrayInitWithCopy();
            if (v142)
            {
              v150 = *(_QWORD *)(v143 + 16);
              v15 = __OFADD__(v150, v142);
              v151 = v150 + v142;
              if (v15)
                goto LABEL_314;
              *(_QWORD *)(v143 + 16) = v151;
            }
          }
          else
          {
            if (v142 > 0)
              goto LABEL_310;
            v142 = 0;
          }
          v152 = sub_1AE4F9038();
          if (v142 == v54)
            *(_QWORD *)&v457[0] = v143;
          else
            nullsub_1(v152);
          v128 = v452;
        }
        v154 = v131 + 7;
        while (v154 < v2)
        {
          if (v451[v154++])
            goto LABEL_59;
        }
LABEL_88:
        swift_bridgeObjectRelease();
        sub_1AE507978();
        v157 = (uint64_t)v446;
        v156 = v447;
        v158 = v8;
        v8 = v448;
        sub_1AE85CDBC(v447, (uint64_t)v446, v158, (uint64_t)v128, v448);
        sub_1AE4F76D8();
        sub_1AE4F9038();
        sub_1AE4F665C();
        sub_1AE4F76D8();
        v2 = v439;
        sub_1AE4F665C();
        v159 = *(_QWORD *)&v457[0];
        sub_1AE519690(0);
        v0 = v160;
        v458 = v160;
        v161 = sub_1AE5B7810(v159);
        if (!v161)
        {
          sub_1AE4F67AC();
          sub_1AE85CDBC(v156, v157, v449, (uint64_t)v128, v8);
          sub_1AE506AB0();
          sub_1AE507824();
          sub_1AE505C28();
          sub_1AE4F76D8();
          sub_1AE4F665C();
          goto LABEL_97;
        }
        v162 = v161;
        v444 = v159;
        if (v161 < 1)
          goto LABEL_336;
        v163 = v444;
        v164 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
        sub_1AE4FB764();
        if ((v164 & 1) == 0)
          goto LABEL_359;
        v165 = 32;
        v166 = v448;
        do
        {
          memcpy(v457, (const void *)(v163 + v165), sizeof(v457));
          KnosisFact.splitSubentityIdentifier()();
          v167 = v462;
          if (v462)
          {
            v450 = v465;
            v451 = (_QWORD *)v466;
            v168 = v464;
            v169 = v463;
            v170 = v461;
            v171 = (uint64_t)v460;
            sub_1AE8DD2A0();
            v172 = *(_QWORD *)(v458 + 16);
            sub_1AE8DD5E0(v172);
            v453[0] = v171;
            v453[1] = v170;
            v453[2] = v167;
            v453[3] = v169;
            v453[4] = v168;
            v166 = v448;
            v454 = v450;
            v455 = (uint64_t)v451;
            v173 = v172;
            v163 = v444;
            sub_1AE8DD954(v173, (uint64_t)v453);
            nullsub_1(v174);
          }
          v165 += 144;
          --v162;
        }
        while (v162);
        sub_1AE4F6824();
        v175 = sub_1AE7D3660();
        sub_1AE85CDBC(v175, v176, v449, (uint64_t)v452, v166);
        sub_1AE506AB0();
        sub_1AE507824();
        sub_1AE505C28();
        sub_1AE4F76D8();
        swift_bridgeObjectRelease();
        v0 = v458;
LABEL_97:
        v17 = sub_1AE5B7810(v0);
        v2 = v459;
        v177 = sub_1AE5B7810(v459);
        v8 = v177 + v17;
        if (__OFADD__(v177, v17))
          goto LABEL_331;
        if ((sub_1AE5D8B40() & 1) == 0 || (v178 = *(_QWORD *)(v2 + 24) >> 1, v178 < v8))
        {
          sub_1AE85CCC0();
          sub_1AE51A068();
          v2 = v179;
          v459 = v179;
          sub_1AE85CCFC();
        }
        v54 = *(_QWORD *)(v2 + 16);
        v8 = v178 - v54;
        if (!sub_1AE5B7810(v0))
        {
          if (v17 <= 0)
          {
            v17 = 0;
            goto LABEL_114;
          }
          goto LABEL_332;
        }
        if (v8 < v17)
          goto LABEL_337;
        if (v17 < 0)
          goto LABEL_361;
        v54 = v2 + 56 * v54 + 32;
        if (v0 + 32 < (unint64_t)(v54 + 56 * v17) && v54 < (unint64_t)(v0 + 32 + 56 * v17))
          goto LABEL_361;
        sub_1AE501548(&qword_1EED9AD18);
        sub_1AE7D3660();
        swift_arrayInitWithCopy();
        if (v17)
        {
          v181 = *(_QWORD *)(v2 + 16);
          v15 = __OFADD__(v181, v17);
          v182 = v181 + v17;
          if (v15)
            goto LABEL_341;
          *(_QWORD *)(v2 + 16) = v182;
        }
LABEL_114:
        v183 = sub_1AE4F9038();
        if (v17 == v8)
        {
          v459 = v2;
        }
        else
        {
          v0 = (uint64_t)&v459;
          nullsub_1(v183);
        }
        v8 = (uint64_t)v434;
        v118 = v436;
        if ((char *)v436 == v435)
        {
          sub_1AE4F6824();
          v2 = v459;
          goto LABEL_120;
        }
      }
    }
    sub_1AE4F81B8();
LABEL_120:
    sub_1AE85CDDC();
    *(_QWORD *)&v457[0] = v184;
    v185 = sub_1AE5B7810(v2);
    if (v185)
    {
      v17 = v185;
      if (v185 < 1)
      {
        __break(1u);
LABEL_350:
        __break(1u);
LABEL_351:
        __break(1u);
LABEL_352:
        __break(1u);
LABEL_353:
        __break(1u);
LABEL_354:
        __break(1u);
LABEL_355:
        sub_1AE7E8FCC(0);
        __break(1u);
LABEL_356:
        sub_1AE7E8D90(0);
        __break(1u);
LABEL_357:
        sub_1AE85CDC4();
        __break(1u);
LABEL_358:
        sub_1AE7E8D90(0);
        __break(1u);
LABEL_359:
        sub_1AE7E8D90(0);
        __break(1u);
LABEL_360:
        sub_1AE85CDC4();
        __break(1u);
LABEL_361:
        sub_1AE4FCDB0();
        sub_1AE926B20();
        __break(1u);
        JUMPOUT(0x1AE859F90);
      }
      v54 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
      sub_1AE4F66C4();
      v186 = (_WORD *)(v2 + 72);
      do
      {
        if ((v54 & 1) == 0)
          goto LABEL_355;
        v188 = *((_QWORD *)v186 - 4);
        v187 = *((_QWORD *)v186 - 3);
        v189 = *((_QWORD *)v186 - 2);
        v190 = *((_QWORD *)v186 - 1);
        v191 = *v186;
        v186 += 28;
        v482[0] = v188;
        v482[1] = v187;
        v482[2] = v189;
        v482[3] = v190;
        v483 = v191;
        swift_bridgeObjectRetain();
        sub_1AE4F66CC();
        sub_1AE8DD294();
        v192 = *(_QWORD *)(*(_QWORD *)&v457[0] + 16);
        sub_1AE8DD5B0(v192);
        sub_1AE8DD92C(v192, (uint64_t)v482);
        nullsub_1(v193);
        --v17;
      }
      while (v17);
      sub_1AE4F6824();
      v8 = (uint64_t)v434;
    }
    else
    {
      sub_1AE4F665C();
    }
    v397 = *(_QWORD *)&v457[0];
    sub_1AE4F6730();
    sub_1AE85CDDC();
    *(_QWORD *)&v457[0] = v194;
    v2 = v431;
    if (!v435)
    {
      v281 = v194;
      sub_1AE4F81B8();
      goto LABEL_256;
    }
    v0 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
    v407 = v8 + 32;
    sub_1AE4F6730();
    v195 = 0;
    HIDWORD(v396) = v0;
LABEL_129:
    if ((v0 & 1) == 0)
      goto LABEL_360;
    v406 = v195 + 1;
    if (__OFADD__(v195, 1))
    {
      __break(1u);
LABEL_347:
      __break(1u);
      goto LABEL_348;
    }
    v196 = v407 + 112 * (_QWORD)v195;
    v197 = *(_QWORD *)v196;
    v445 = *(NSObject **)(v196 + 8);
    v446 = (_QWORD *)v197;
    v198 = *(_QWORD *)(v196 + 16);
    v199 = *(_QWORD *)(v196 + 24);
    v200 = *(unsigned __int16 *)(v196 + 32);
    v201 = *(unsigned __int8 *)(v196 + 34);
    v203 = *(_QWORD *)(v196 + 72);
    v202 = *(_QWORD *)(v196 + 80);
    sub_1AE85CD5C();
    sub_1AE525B74(v204, v205, v198, v199, v200, v201);
    sub_1AE4F66C4();
    sub_1AE4F67A4();
    sub_1AE4FB930();
    sub_1AE4F6708();
    sub_1AE4F66CC();
    v439 = v198;
    v436 = v199;
    LODWORD(v433) = v200;
    LODWORD(v432) = v201;
    sub_1AE525B74((uint64_t)v446, (uint64_t)v445, v198, v199, v200, v201);
    v444 = v0;
    sub_1AE4F66CC();
    v442 = v2;
    sub_1AE4F66C4();
    sub_1AE4F6A24();
    v441 = v202;
    sub_1AE4FB930();
    v440 = v17;
    sub_1AE4F6708();
    sub_1AE85CCE8();
    v460 = (_QWORD *)v206;
    v0 = v203;
    sub_1AE64A2FC(v478);
    v2 = v478[0];
    v452 = v478[1];
    v207 = v478[3];
    v8 = v478[4];
    v208 = (unint64_t)(v478[2] + 64) >> 6;
    v443 = v0;
    sub_1AE4F66CC();
    while (1)
    {
      if (v8)
      {
        sub_1AE508064();
        goto LABEL_146;
      }
      v209 = v207 + 1;
      if (__OFADD__(v207, 1))
        goto LABEL_329;
      if (v209 >= v208)
        goto LABEL_172;
      if (!v452[v209].isa)
      {
        if (v207 + 2 >= v208)
          goto LABEL_172;
        sub_1AE85CD50();
        if (!v211)
        {
          if (v210 + 2 >= v208)
            goto LABEL_172;
          sub_1AE85CD50();
          if (!v213)
          {
            if (v212 + 3 >= v208)
              goto LABEL_172;
            sub_1AE85CD50();
            if (!v215)
            {
              if (v214 + 4 >= v208)
                goto LABEL_172;
              sub_1AE85CD50();
              if (!v217)
              {
                v231 = v216 + 5;
                if (v231 >= v208)
                  goto LABEL_172;
                if (!v452[v231].isa)
                  break;
              }
            }
          }
        }
      }
LABEL_145:
      sub_1AE5067B4();
      v207 = v218;
LABEL_146:
      v54 = sub_1AE85CD14(*(_QWORD *)(v2 + 56));
      v219 = (uint64_t)v460;
      v220 = sub_1AE5B77A4((uint64_t)v460);
      v221 = v220 + v54;
      if (__OFADD__(v220, v54))
        goto LABEL_319;
      sub_1AE4F66CC();
      if (!swift_isUniquelyReferenced_nonNull_native()
        || (v222 = *(_QWORD *)(v219 + 24) >> 1, v222 < v221))
      {
        sub_1AE519C64();
        v219 = v223;
        v460 = (_QWORD *)v223;
        sub_1AE85CCFC();
      }
      v224 = v222 - *(_QWORD *)(v219 + 16);
      if (sub_1AE85CCB8())
      {
        if (v224 < v54)
          goto LABEL_324;
        if (v54 < 0)
          goto LABEL_361;
        sub_1AE509638();
        if (!v149 && v225 < v226)
          goto LABEL_361;
        swift_arrayInitWithCopy();
        if (v54)
        {
          v228 = *(_QWORD *)(v219 + 16);
          v15 = __OFADD__(v228, v54);
          v229 = v228 + v54;
          if (!v15)
          {
            *(_QWORD *)(v219 + 16) = v229;
            goto LABEL_163;
          }
          __break(1u);
LABEL_329:
          __break(1u);
LABEL_330:
          __break(1u);
LABEL_331:
          __break(1u);
LABEL_332:
          __break(1u);
LABEL_333:
          __break(1u);
          goto LABEL_334;
        }
      }
      else
      {
        if (v54 > 0)
          goto LABEL_320;
        v54 = 0;
      }
LABEL_163:
      v230 = sub_1AE4F9038();
      if (v54 == v224)
      {
        v460 = (_QWORD *)v219;
      }
      else
      {
        v0 = (uint64_t)&v460;
        nullsub_1(v230);
      }
    }
    v232 = v207 + 7;
    while (v232 < v208)
    {
      if (v452[v232++].isa)
        goto LABEL_145;
    }
LABEL_172:
    sub_1AE4F9038();
    sub_1AE50A24C();
    sub_1AE50A7A0();
    sub_1AE85CD30();
    sub_1AE506AB0();
    sub_1AE4F9038();
    sub_1AE507824();
    sub_1AE85CD28();
    v2 = (uint64_t)v460;
    v234 = sub_1AE65C728();
    v460 = (_QWORD *)v234;
    v448 = (_QWORD *)sub_1AE5B7810(v2);
    if (!v448)
    {
      sub_1AE4F665C();
LABEL_232:
      sub_1AE85CDDC();
      v263 = v262;
      v460 = (_QWORD *)v262;
      v264 = sub_1AE5B7810(v234);
      if (v264)
      {
        v265 = v264;
        if (v264 < 1)
          goto LABEL_352;
        v266 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
        sub_1AE509AC4();
        v267 = 88;
        do
        {
          if ((v266 & 1) == 0)
            goto LABEL_356;
          v268 = *(_OWORD *)(v234 + v267);
          v269 = *(_OWORD *)(v234 + v267 + 16);
          v480 = *(_WORD *)(v234 + v267 + 32);
          v479[0] = v268;
          v479[1] = v269;
          sub_1AE5C7880((uint64_t)v479);
          sub_1AE8DD294();
          v270 = v460[2];
          sub_1AE8DD5B0(v270);
          sub_1AE8DD92C(v270, (uint64_t)v479);
          nullsub_1(v271);
          v267 += 144;
          --v265;
        }
        while (v265);
        swift_release_n();
        sub_1AE50A7A0();
        sub_1AE85CD30();
        sub_1AE506AB0();
        sub_1AE505C28();
        sub_1AE507824();
        sub_1AE85CD28();
        v263 = (uint64_t)v460;
      }
      else
      {
        sub_1AE4F77C8();
        sub_1AE50A7A0();
        sub_1AE85CD30();
        sub_1AE506AB0();
        sub_1AE505C28();
        sub_1AE507824();
        sub_1AE85CD28();
      }
      v17 = sub_1AE5B7810(v263);
      v272 = *(_QWORD *)&v457[0];
      v273 = sub_1AE5B7810(*(uint64_t *)&v457[0]);
      v274 = v273 + v17;
      if (__OFADD__(v273, v17))
        goto LABEL_350;
      if ((sub_1AE5D8B40() & 1) == 0 || (v275 = *(_QWORD *)(v272 + 24) >> 1, v275 < v274))
      {
        sub_1AE85CCC0();
        sub_1AE519DF4();
        v272 = v276;
        *(_QWORD *)&v457[0] = v276;
        sub_1AE85CCFC();
      }
      v54 = *(_QWORD *)(v272 + 16);
      v277 = v275 - v54;
      if (sub_1AE5B7810(v263))
      {
        if (v277 < v17)
          goto LABEL_353;
        sub_1AE624084();
        if (v17 >= 1)
        {
          v278 = *(_QWORD *)(v272 + 16);
          v15 = __OFADD__(v278, v17);
          v279 = v278 + v17;
          if (v15)
            goto LABEL_354;
          *(_QWORD *)(v272 + 16) = v279;
        }
      }
      else
      {
        if (v17 > 0)
          goto LABEL_351;
        v17 = 0;
      }
      v280 = sub_1AE4F9038();
      if (v17 == v277)
        *(_QWORD *)&v457[0] = v272;
      else
        nullsub_1(v280);
      v2 = v431;
      v195 = v406;
      v0 = HIDWORD(v396);
      if (v406 == v435)
      {
        sub_1AE4F6824();
        v281 = *(_QWORD *)&v457[0];
LABEL_256:
        v8 = v428 + 1;
        *(_QWORD *)&v457[0] = v281;
        sub_1AE60EFEC();
        sub_1AE525C94(v424, v423, v421, v419, v418, v417);
        swift_bridgeObjectRelease();
        sub_1AE4F76D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v0 = (uint64_t)v474;
        sub_1AE60EFEC();
        v108 = v8;
        v107 = v413;
        if (v8 == v413)
          goto LABEL_327;
        continue;
      }
      goto LABEL_129;
    }
    break;
  }
  LODWORD(v450) = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  v235 = 0;
  v449 = v2 + 32;
  v447 = v2;
  while (2)
  {
    v0 = v450;
    sub_1AE66B86C(v235, v450 & 1, v2);
    if ((v0 & 1) == 0)
      goto LABEL_358;
    memcpy(v481, (const void *)(v449 + 144 * v235), sizeof(v481));
    v236 = *((_QWORD *)&v481[8] + 1);
    v484[0] = *((_QWORD *)&v481[8] + 1);
    v15 = __OFADD__(v235, 1);
    v8 = v235 + 1;
    if (v15)
      goto LABEL_335;
    v451 = (_QWORD *)v8;
    sub_1AE525A98((uint64_t)v481);
    sub_1AE525A98((uint64_t)v481);
    sub_1AE61E280((uint64_t)v484);
    sub_1AE85CCE8();
    v459 = v237;
    v238 = v236 + 64;
    v239 = 1 << *(_BYTE *)(v236 + 32);
    if (v239 < 64)
      v240 = ~(-1 << v239);
    else
      v240 = -1;
    v8 = v240 & *(_QWORD *)(v236 + 64);
    v452 = ((unint64_t)(v239 + 63) >> 6);
    sub_1AE4F67A4();
    v54 = 0;
    while (2)
    {
      if (v8)
      {
        sub_1AE508064();
        v242 = v241 | (v54 << 6);
LABEL_202:
        v0 = *(_QWORD *)(*(_QWORD *)(v236 + 56) + 8 * v242);
        v246 = sub_1AE5B77A4(v0);
        v247 = v459;
        v248 = sub_1AE5B77A4(v459);
        v249 = v248 + v246;
        if (__OFADD__(v248, v246))
          goto LABEL_312;
        sub_1AE4F66CC();
        if (!swift_isUniquelyReferenced_nonNull_native()
          || (v250 = *(_QWORD *)(v247 + 24) >> 1, v250 < v249))
        {
          sub_1AE519C64();
          v247 = v251;
          v459 = v251;
          sub_1AE85CCFC();
        }
        v2 = *(_QWORD *)(v247 + 16);
        v252 = v250 - v2;
        if (sub_1AE85CCB8())
        {
          if (v252 < v246)
            goto LABEL_316;
          if (v246 < 0)
            goto LABEL_361;
          sub_1AE509638();
          if (!v149 && v253 < v254)
            goto LABEL_361;
          swift_arrayInitWithCopy();
          if (v246)
          {
            v256 = *(_QWORD *)(v247 + 16);
            v15 = __OFADD__(v256, v246);
            v257 = v256 + v246;
            if (v15)
              goto LABEL_317;
            *(_QWORD *)(v247 + 16) = v257;
          }
        }
        else
        {
          if (v246 > 0)
            goto LABEL_313;
          v246 = 0;
        }
        v258 = sub_1AE4F9038();
        if (v246 == v252)
        {
          v459 = v247;
        }
        else
        {
          v0 = (uint64_t)&v459;
          nullsub_1(v258);
        }
        continue;
      }
      break;
    }
    v15 = __OFADD__(v54++, 1);
    if (v15)
      goto LABEL_318;
    if (v54 >= (uint64_t)v452)
    {
LABEL_226:
      v235 = (uint64_t)v451;
      sub_1AE4F6A6C();
      sub_1AE61E2A8((uint64_t)v484);
      sub_1AE525BB8((uint64_t)v481);
      v259 = sub_1AE85CCB8();
      sub_1AE4F9038();
      v2 = v447;
      if (v259)
      {
        sub_1AE7E9794();
        v260 = v460[2];
        sub_1AE7E98C0(v260);
        v261 = sub_1AE7E99C4(v260, v481);
        nullsub_1(v261);
      }
      else
      {
        sub_1AE525BB8((uint64_t)v481);
      }
      if ((_QWORD *)v235 == v448)
      {
        sub_1AE4F665C();
        v234 = (uint64_t)v460;
        goto LABEL_232;
      }
      continue;
    }
    break;
  }
  v243 = *(_QWORD *)(v238 + 8 * v54);
  if (v243)
  {
LABEL_201:
    v8 = (v243 - 1) & v243;
    v242 = __clz(__rbit64(v243)) + (v54 << 6);
    goto LABEL_202;
  }
  sub_1AE85CCF0();
  if (v245 == v15)
    goto LABEL_226;
  v243 = *(_QWORD *)(v238 + 8 * v244);
  if (v243)
    goto LABEL_200;
  sub_1AE85CCF0();
  if (v245 == v15)
    goto LABEL_226;
  v243 = *(_QWORD *)(v238 + 8 * v244);
  if (v243)
    goto LABEL_200;
  sub_1AE85CCF0();
  if (v245 == v15)
    goto LABEL_226;
  v243 = *(_QWORD *)(v238 + 8 * v244);
  if (v243)
    goto LABEL_200;
  sub_1AE85CCF0();
  if (v245 == v15)
    goto LABEL_226;
  v243 = *(_QWORD *)(v238 + 8 * v244);
  if (v243)
    goto LABEL_200;
  sub_1AE85CCF0();
  if (v245 == v15)
    goto LABEL_226;
  v243 = *(_QWORD *)(v238 + 8 * v244);
  if (v243)
  {
LABEL_200:
    v54 = v244;
    goto LABEL_201;
  }
  while (1)
  {
    v54 = v244 + 1;
    if (__OFADD__(v244, 1))
      break;
    if (v54 >= (uint64_t)v452)
      goto LABEL_226;
    v243 = *(_QWORD *)(v238 + 8 * v54);
    ++v244;
    if (v243)
      goto LABEL_201;
  }
LABEL_340:
  __break(1u);
LABEL_341:
  __break(1u);
LABEL_342:
  __break(1u);
LABEL_343:
  __break(1u);
LABEL_344:
  __break(1u);
LABEL_345:
  __break(1u);
  swift_once();
  v33 = sub_1AE4FB608(v2, (uint64_t)qword_1ED3193D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v398 + 16))(v8, v33, v2);
  v34 = sub_1AE4F66BC();
  *(_QWORD *)(v34 + 16) = v0;
  v35 = (id)v0;
  v36 = (id)v0;
  v37 = sub_1AE925B54();
  v38 = sub_1AE9265EC();
  v39 = sub_1AE4F66BC();
  *(_BYTE *)(v39 + 16) = 32;
  v40 = sub_1AE4F66BC();
  *(_BYTE *)(v40 + 16) = 8;
  v41 = sub_1AE4F66BC();
  *(_QWORD *)(v41 + 16) = sub_1AE85B710;
  *(_QWORD *)(v41 + 24) = v34;
  v42 = sub_1AE4F66BC();
  *(_QWORD *)(v42 + 16) = sub_1AE733BB0;
  *(_QWORD *)(v42 + 24) = v41;
  sub_1AE501548(qword_1ED31B2E0);
  v43 = sub_1AE4F66BC();
  *(_OWORD *)(v43 + 16) = xmmword_1AE93D190;
  *(_QWORD *)(v43 + 32) = sub_1AE733BA4;
  *(_QWORD *)(v43 + 40) = v39;
  *(_QWORD *)(v43 + 48) = sub_1AE734F64;
  *(_QWORD *)(v43 + 56) = v40;
  *(_QWORD *)(v43 + 64) = sub_1AE733BB8;
  *(_QWORD *)(v43 + 72) = v42;
  swift_setDeallocating();
  swift_retain();
  sub_1AE509AC4();
  swift_retain();
  swift_retain();
  sub_1AE60DD4C();
  sub_1AE85EB10();
  v452 = v37;
  if (os_log_type_enabled(v37, v38))
  {
    v44 = (uint8_t *)sub_1AE4F66A0();
    v451 = (_QWORD *)sub_1AE4F66A0();
    *(_QWORD *)&v481[0] = v451;
    *(_WORD *)v44 = 258;
    v44[2] = 32;
    sub_1AE4F6A6C();
    v44[3] = 8;
    swift_release();
    *(_QWORD *)&v457[0] = v410;
    sub_1AE4FB8E0();
    sub_1AE501548((uint64_t *)&unk_1ED319C60);
    v45 = sub_1AE925E90();
    sub_1AE520ED4(v45, v46, (uint64_t)v481, v47, v48, v49, v50, v51, v395, v396, v397, v398, v399, v400, v401, v402, v403, (uint64_t)v404, v405,
      (uint64_t)v406);
    *(_QWORD *)&v457[0] = v52;
    sub_1AE92676C();
    sub_1AE4F682C();
    sub_1AE4F77C8();
    sub_1AE507978();
    sub_1AE4F6710();
    sub_1AE4F6834();
    sub_1AE508348(&dword_1AE4F2000, v452, v38, "KGRenderer: getEntityFacts failed: %s", v44);
    sub_1AE5081C8();
    sub_1AE4F9064();
  }
  v282 = v410;

  sub_1AE4F682C();
  sub_1AE4F77C8();
  sub_1AE507978();
  swift_release();
  sub_1AE4F6A6C();

  (*(void (**)(uint64_t, uint64_t))(v398 + 8))(v8, v399);
LABEL_308:
  sub_1AE4F7740();
}

uint64_t sub_1AE859FA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[13];
  char v49;
  int v50;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD *)(a1 + 80);
  v11 = *(_QWORD *)(a1 + 88);
  v12 = *(_QWORD *)(a1 + 96);
  v13 = *(unsigned __int8 *)(a1 + 104);
  v48[1] = *(_QWORD *)(a1 + 8);
  v48[2] = v2;
  v48[3] = v3;
  v48[4] = v5;
  v48[5] = v4;
  v48[6] = v6;
  v48[7] = v7;
  v48[8] = v8;
  v48[9] = v9;
  v48[10] = v10;
  v48[11] = v11;
  v48[12] = v12;
  v50 = v13;
  v49 = v13;
  v14 = sub_1AE50894C(6, v29, v12, v11, v10, v9, v8, v7, v6, v4);
  v15 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v48[0] = v15;
  sub_1AE85CC40(v14, (uint64_t)sub_1AE85B6AC, v17, isUniquelyReferenced_nonNull_native, v48);
  if (v1)
  {
    result = sub_1AE4FDCF0();
    __break(1u);
  }
  else
  {
    v18 = v48[0];
    sub_1AE4FDCF0();
    sub_1AE4FD6B4();
    v19 = sub_1AE50894C(4, v30, v32, v34, v36, v38, v40, v42, v44, v46);
    v20 = swift_isUniquelyReferenced_nonNull_native();
    v48[0] = v18;
    sub_1AE85CC40(v19, (uint64_t)sub_1AE85B6AC, v21, v20, v48);
    v22 = v48[0];
    sub_1AE4FDCF0();
    sub_1AE4FD6B4();
    v23 = sub_1AE50894C(7, v31, v33, v35, v37, v39, v41, v43, v45, v47);
    v24 = swift_isUniquelyReferenced_nonNull_native();
    v48[0] = v22;
    sub_1AE85CC40(v23, (uint64_t)sub_1AE85B6AC, v25, v24, v48);
    sub_1AE4FDCF0();
    v26 = sub_1AE4F66CC();
    v27 = sub_1AE85AFFC(v26);
    swift_bridgeObjectRelease_n();
    return v27;
  }
  return result;
}

uint64_t sub_1AE85A13C(uint64_t a1, char *a2)
{
  uint64_t v2;
  char v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  char v8[16];
  __int128 v9[6];
  uint64_t v10;
  char v11;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_BYTE *)(a1 + 104);
  v8[0] = *a2;
  v4 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v4;
  v5 = *(_OWORD *)(a1 + 48);
  v9[2] = *(_OWORD *)(a1 + 32);
  v9[3] = v5;
  v6 = *(_OWORD *)(a1 + 80);
  v9[4] = *(_OWORD *)(a1 + 64);
  v9[5] = v6;
  v10 = v2;
  v11 = v3;
  return sub_1AE85A6BC(v8, v9);
}

uint64_t sub_1AE85A490@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _BYTE __dst[144];

  v2 = *(_QWORD *)(result + 16);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (!v3)
  {
LABEL_23:
    *a2 = v4;
    return result;
  }
  v21 = a2;
  swift_bridgeObjectRetain();
  memcpy(__dst, (const void *)(v2 + 32), sizeof(__dst));
  KnosisFact.extendedTriples()();
  v6 = (_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v5 + 16);
  v8 = *(_QWORD *)(v4 + 16);
  v9 = v8 + v7;
  if (__OFADD__(v8, v7))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    result = swift_bridgeObjectRelease();
    a2 = v21;
    goto LABEL_23;
  }
  v10 = v5;
  v11 = 176;
  while (1)
  {
    if (!swift_isUniquelyReferenced_nonNull_native() || v9 > *(_QWORD *)(v4 + 24) >> 1)
    {
      sub_1AE519D38();
      v4 = v12;
    }
    if (!*v6)
      break;
    v13 = *(_QWORD *)(v4 + 16);
    if ((*(_QWORD *)(v4 + 24) >> 1) - v13 < v7)
      goto LABEL_25;
    v14 = v4 + 112 * v13 + 32;
    if (v10 + 32 < v14 + 112 * v7 && v14 < v10 + 32 + 112 * v7)
      goto LABEL_27;
    swift_arrayInitWithCopy();
    if (v7)
    {
      v16 = *(_QWORD *)(v4 + 16);
      v17 = __OFADD__(v16, v7);
      v18 = v16 + v7;
      if (v17)
        goto LABEL_26;
      *(_QWORD *)(v4 + 16) = v18;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    if (!--v3)
      goto LABEL_22;
    memcpy(__dst, (const void *)(v2 + v11), sizeof(__dst));
    KnosisFact.extendedTriples()();
    v10 = v19;
    v6 = (_QWORD *)(v19 + 16);
    v7 = *(_QWORD *)(v19 + 16);
    v20 = *(_QWORD *)(v4 + 16);
    v11 += 144;
    v9 = v20 + v7;
    if (__OFADD__(v20, v7))
      goto LABEL_21;
  }
  if (!v7)
    goto LABEL_18;
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  result = sub_1AE926B20();
  __break(1u);
  return result;
}

uint64_t sub_1AE85A684(void *a1)
{
  id v1;

  v1 = a1;
  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  return sub_1AE925E90();
}

uint64_t sub_1AE85A6BC(char *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t Context;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_QWORD *@<X8>);
  char v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  _QWORD v70[18];
  _QWORD v71[5];
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD v76[9];
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int16 v82;
  uint64_t v83;

  v3 = v2;
  v55 = type metadata accessor for AnswerRenderIterator(0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  v54 = v7;
  v8 = *a1;
  v67 = a2[1];
  v68 = *a2;
  v64 = a2[3];
  v66 = a2[2];
  v61 = a2[5];
  v62 = a2[4];
  v60 = *((_QWORD *)a2 + 12);
  v58 = *((_BYTE *)a2 + 104);
  sub_1AE501548(&qword_1EEDA2AF8);
  v9 = MEMORY[0x1E0DEE9D8];
  v69 = sub_1AE925C98();
  Context = type metadata accessor for QueryContext();
  v11 = v3 + *(int *)(Context + 44);
  v12 = *(_QWORD *)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v14 = *(_BYTE *)(v11 + 16);
  v56 = v3;
  v15 = *(_QWORD *)(v11 + 24);
  v77 = *(_QWORD **)(v3 + *(int *)(Context + 36));
  LOBYTE(v70[0]) = v8;
  v70[1] = -50;
  v70[2] = v9;
  v70[3] = v12;
  v70[4] = v13;
  LOBYTE(v70[5]) = v14;
  v70[6] = v15;
  v76[0] = v68;
  v76[1] = v67;
  v76[2] = v66;
  v76[3] = v64;
  v76[4] = v62;
  v76[5] = v61;
  *(_QWORD *)&v76[6] = v60;
  BYTE8(v76[6]) = v58;
  sub_1AE526540(v12, v13, v14);
  sub_1AE4F6708();
  v16 = v83;
  sub_1AE742238(v70, (uint64_t *)v76, (uint64_t)v71);
  sub_1AE4F6718();
  if (v16)
  {
    swift_bridgeObjectRelease();
    return sub_1AE506138();
  }
  sub_1AE506138();
  v18 = v71[0];
  if (!v71[0])
  {
    swift_bridgeObjectRelease();
    sub_1AE4F9038();
    return v69;
  }
  sub_1AE4F9038();
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
  {
    sub_1AE4F81B8();
    v53 = 0;
LABEL_32:
    sub_1AE6263E0(v53);
    return v69;
  }
  v83 = 0;
  v57 = 0;
  v20 = v18 + 56;
  for (i = v19 - 1; ; --i)
  {
    v22 = *(_QWORD *)v20;
    v23 = *(_QWORD *)(v20 + 8);
    v24 = *(_QWORD *)(v20 + 48);
    v25 = *(_QWORD *)(v20 + 56);
    v26 = *(_QWORD *)(v20 - 8);
    v27 = *(_QWORD *)(v20 - 16);
    v71[0] = *(_QWORD *)(v20 - 24);
    v71[1] = v27;
    v71[2] = v26;
    v59 = v22;
    v71[3] = v22;
    v71[4] = v23;
    v28 = *(_OWORD *)(v20 + 32);
    v65 = v20;
    v72 = *(_OWORD *)(v20 + 16);
    v73 = v28;
    v74 = v24;
    v75 = v25;
    sub_1AE4F6A24();
    sub_1AE4F6A24();
    sub_1AE4F6A24();
    sub_1AE4F6A24();
    sub_1AE4F6A24();
    sub_1AE4F6A24();
    v29 = v83;
    sub_1AE7A6FB0();
    if (v29)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AE4F81B8();
      return sub_1AE85CD44();
    }
    v63 = i;
    v83 = 0;
    memcpy(v70, v76, sizeof(v70));
    v30 = *(_QWORD *)(*(_QWORD *)(v56 + *(int *)(v55 + 20)) + 16);
    sub_1AE56CC34(v56, v54, type metadata accessor for AnswerRenderIterator);
    if (v30)
    {
      v78 = v70[7];
      v79 = v70[8];
      v80 = v70[9];
      v81 = v70[10];
      v82 = v70[11];
      sub_1AE4F6730();
      sub_1AE4F6708();
      sub_1AE5518E8();
      v32 = v31;
      swift_bridgeObjectRelease();
      sub_1AE4F81B8();
      sub_1AE85CD70();
      v33 = v23;
      if ((v32 & 1) == 0)
      {
        sub_1AE525BB8((uint64_t)v70);
        goto LABEL_26;
      }
    }
    else
    {
      sub_1AE85CD70();
      v33 = v23;
    }
    swift_bridgeObjectRetain();
    sub_1AE85CD44();
    swift_isUniquelyReferenced_nonNull_native();
    v77 = (_QWORD *)v69;
    v34 = sub_1AE536EDC(v59, v33);
    if (__OFADD__(*(_QWORD *)(v69 + 16), (v35 & 1) == 0))
      break;
    v36 = v34;
    v37 = v35;
    sub_1AE501548(&qword_1EEDA4838);
    v38 = sub_1AE926A54();
    v39 = v77;
    if ((v38 & 1) != 0)
    {
      v40 = sub_1AE536EDC(v59, v33);
      if ((v37 & 1) != (v41 & 1))
        goto LABEL_36;
      v36 = v40;
    }
    sub_1AE4FDCF0();
    if ((v37 & 1) == 0)
    {
      sub_1AE85CCD8((uint64_t)&v39[v36 >> 6]);
      v42 = (uint64_t *)(v39[6] + 16 * v36);
      *v42 = v59;
      v42[1] = v33;
      *(_QWORD *)(v39[7] + 8 * v36) = MEMORY[0x1E0DEE9D8];
      v43 = v39[2];
      v44 = v43 + 1;
      v45 = __OFADD__(v43, 1);
      sub_1AE4F67A4();
      if (v45)
        goto LABEL_35;
      v39[2] = v44;
    }
    swift_bridgeObjectRetain();
    v46 = v39[7];
    swift_bridgeObjectRelease();
    v47 = *(_QWORD *)(v46 + 8 * v36);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v46 + 8 * v36) = v47;
    v69 = (uint64_t)v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1AE5063B4();
      sub_1AE519C64();
      v47 = v51;
      *(_QWORD *)(v46 + 8 * v36) = v51;
    }
    v50 = *(_QWORD *)(v47 + 16);
    v49 = *(_QWORD *)(v47 + 24);
    if (v50 >= v49 >> 1)
    {
      sub_1AE506008(v49);
      sub_1AE519C64();
      v47 = v52;
      *(_QWORD *)(v46 + 8 * v36) = v52;
    }
    i = v63;
    *(_QWORD *)(v47 + 16) = v50 + 1;
    memcpy((void *)(v47 + 144 * v50 + 32), v70, 0x90uLL);
    swift_bridgeObjectRelease();
    v57 = sub_1AE7A43FC;
LABEL_26:
    swift_bridgeObjectRelease();
    sub_1AE4F9038();
    swift_bridgeObjectRelease();
    sub_1AE4F81B8();
    sub_1AE4F6718();
    swift_bridgeObjectRelease();
    if (!i)
    {
      swift_bridgeObjectRelease();
      v53 = (uint64_t)v57;
      goto LABEL_32;
    }
    v20 = v65 + 88;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

void sub_1AE85AC74(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AE8575D0(a1);
  sub_1AE53D160(v1, type metadata accessor for AnswerRenderIterator);
}

uint64_t sub_1AE85ACA8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int16 v56;
  uint64_t v57;
  _QWORD *v58;

  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v58 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (uint64_t)v1;
  v3 = swift_bridgeObjectRetain();
  v4 = 0;
  v1 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v46 = v3;
  while (1)
  {
    v48 = v2;
    v47 = v4;
    v5 = *(_QWORD *)(v3 + v4 + 48);
    v50 = *(_QWORD *)(v3 + v4 + 40);
    v51 = *(_QWORD *)(v3 + v4 + 56);
    v6 = *(_QWORD *)(v3 + v4 + 64);
    v52 = *(_WORD *)(v3 + v4 + 72);
    v53 = *(_QWORD *)(v3 + v4 + 80);
    v7 = *(_QWORD *)(v3 + v4 + 96);
    v8 = *(_QWORD *)(v3 + v4 + 112);
    v54 = *(_QWORD *)(v3 + v4 + 88);
    v55 = *(_QWORD *)(v3 + v4 + 104);
    v56 = *(_WORD *)(v3 + v4 + 120);
    v9 = *(_QWORD *)(v3 + v4 + 136);
    v57 = *(_QWORD *)(v3 + v4 + 128);
    v49 = *(_QWORD *)(v3 + v4 + 32);
    v10 = v1;
    v11 = sub_1AE536D68();
    v13 = v1;
    v14 = v1[2];
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
      break;
    v17 = v11;
    v18 = v12;
    v19 = v13[3];
    sub_1AE4F6730();
    sub_1AE4FB764();
    sub_1AE4F67A4();
    sub_1AE4F6708();
    sub_1AE4FB930();
    v20 = v19 < v16;
    v21 = v18;
    v22 = v17;
    if (v20)
    {
      sub_1AE6354DC();
      v10 = v58;
      v23 = sub_1AE536D68();
      if ((v21 & 1) != (v24 & 1))
        goto LABEL_21;
      v22 = v23;
    }
    if ((v21 & 1) != 0)
    {
      v25 = v10[7];
      v26 = *(_QWORD *)(v25 + 8 * v22);
      v27 = sub_1AE5D8B40();
      v45 = v25;
      *(_QWORD *)(v25 + 8 * v22) = v26;
      v3 = v46;
      v28 = v10;
      if ((v27 & 1) == 0)
      {
        sub_1AE505FE4();
        v40 = v39;
        sub_1AE519D38();
        v3 = v40;
        v26 = v41;
        *(_QWORD *)(v45 + 8 * v22) = v41;
      }
      v29 = *(_QWORD *)(v26 + 16);
      v30 = v29 + 1;
      v31 = v9;
      if (v29 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        v42 = v3;
        sub_1AE519D38();
        v30 = v29 + 1;
        v3 = v42;
        v26 = v43;
        v31 = v9;
        *(_QWORD *)(v45 + 8 * v22) = v43;
      }
      v32 = v48;
      *(_QWORD *)(v26 + 16) = v30;
      v33 = v26 + 112 * v29;
      *(_QWORD *)(v33 + 32) = v49;
      *(_QWORD *)(v33 + 40) = v50;
      *(_QWORD *)(v33 + 48) = v5;
      *(_QWORD *)(v33 + 56) = v51;
      *(_QWORD *)(v33 + 64) = v6;
      *(_WORD *)(v33 + 72) = v52;
      *(_QWORD *)(v33 + 80) = v53;
      *(_QWORD *)(v33 + 88) = v54;
      *(_QWORD *)(v33 + 96) = v7;
      *(_QWORD *)(v33 + 104) = v55;
      *(_QWORD *)(v33 + 112) = v8;
      *(_WORD *)(v33 + 120) = v56;
      *(_QWORD *)(v33 + 128) = v57;
      *(_QWORD *)(v33 + 136) = v31;
      v1 = v28;
    }
    else
    {
      sub_1AE501548((uint64_t *)&unk_1EED9AAA0);
      v34 = sub_1AE4F66BC();
      *(_OWORD *)(v34 + 16) = xmmword_1AE934250;
      *(_QWORD *)(v34 + 32) = v49;
      *(_QWORD *)(v34 + 40) = v50;
      *(_QWORD *)(v34 + 48) = v5;
      *(_QWORD *)(v34 + 56) = v51;
      *(_QWORD *)(v34 + 64) = v6;
      *(_WORD *)(v34 + 72) = v52;
      *(_QWORD *)(v34 + 80) = v53;
      *(_QWORD *)(v34 + 88) = v54;
      *(_QWORD *)(v34 + 96) = v7;
      *(_QWORD *)(v34 + 104) = v55;
      *(_QWORD *)(v34 + 112) = v8;
      *(_WORD *)(v34 + 120) = v56;
      *(_QWORD *)(v34 + 128) = v57;
      *(_QWORD *)(v34 + 136) = v9;
      sub_1AE85CCD8((uint64_t)&v10[v22 >> 6]);
      *(_QWORD *)(v10[6] + 8 * v22) = v49;
      *(_QWORD *)(v10[7] + 8 * v22) = v35;
      v36 = v10[2];
      v37 = __OFADD__(v36, 1);
      v38 = v36 + 1;
      v3 = v46;
      if (v37)
        goto LABEL_20;
      v1 = v10;
      v10[2] = v38;
      v32 = v48;
    }
    v4 = v47 + 112;
    v2 = v32 - 1;
    if (!v2)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE85AFFC(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t j;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  size_t v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE __src[144];
  _QWORD v40[18];
  _BYTE __dst[152];
  uint64_t v42;

  sub_1AE501548(&qword_1EED9ECA0);
  result = sub_1AE926AF0();
  v3 = (_QWORD *)result;
  v4 = 0;
  v35 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v32 = v6;
  v33 = (unint64_t)(v8 + 63) >> 6;
  v34 = result + 64;
  v31 = (_QWORD *)result;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * i);
    v17 = v16[1];
    v37 = *v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * i);
    sub_1AE85BC64();
    swift_bridgeObjectRetain_n();
    v38 = v17;
    swift_bridgeObjectRetain();
    v19 = sub_1AE926400();
    v42 = v19;
    v20 = *(_QWORD *)(v18 + 16);
    if (v20)
    {
      v21 = v20 - 1;
      for (j = 32; ; j += 144)
      {
        memcpy(__dst, (const void *)(v18 + j), 0x90uLL);
        sub_1AE525A98((uint64_t)__dst);
        sub_1AE5576B0();
        memcpy(v40, __src, sizeof(v40));
        sub_1AE525BB8((uint64_t)v40);
        if (!v21)
          break;
        --v21;
      }
      swift_bridgeObjectRelease();
      v23 = v42;
    }
    else
    {
      v23 = v19;
      swift_bridgeObjectRelease();
    }
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      sub_1AE501548(&qword_1EED9AAC8);
      v25 = (_QWORD *)swift_allocObject();
      v26 = j__malloc_size(v25);
      v25[2] = v24;
      v25[3] = 2 * ((uint64_t)(v26 - 32) / 144);
      v36 = sub_1AE5950F8(v40, (uint64_t)(v25 + 4), v24, v23);
      swift_bridgeObjectRetain();
      result = sub_1AE592EFC();
      if (v36 != (_QWORD *)v24)
        goto LABEL_34;
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v3 = v31;
    }
    else
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v27 = (_QWORD *)(v3[6] + 16 * i);
    *v27 = v37;
    v27[1] = v38;
    *(_QWORD *)(v3[7] + 8 * i) = v25;
    v28 = v3[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    v3[2] = v30;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_35;
    if (v13 >= v33)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v32 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v33)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v32 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v33)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v32 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v10 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v33)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v32 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v33)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v32 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1AE85B37C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  __int128 v40;
  _OWORD v41[2];

  sub_1AE7BB674(v41);
  v40 = v41[1];
  sub_1AE4F66CC();
  v7 = swift_retain();
  v8 = sub_1AE7BB6B4(v7);
  if (v9)
  {
    v11 = v8;
    v12 = v9;
    v13 = v10;
    while (1)
    {
      v15 = sub_1AE4F7A90();
      v16 = (v14 & 1) == 0;
      v17 = v40 + v16;
      if (__OFADD__((_QWORD)v40, v16))
        break;
      v18 = v14;
      if (*((uint64_t *)&v40 + 1) >= v17)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EEDA4838);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE6357F4(v17, a4 & 1);
        v19 = sub_1AE4F7A90();
        if ((v18 & 1) != (v20 & 1))
          goto LABEL_36;
        v15 = v19;
      }
      v21 = (_QWORD *)*a5;
      if ((v18 & 1) != 0)
      {
        v22 = *(_QWORD *)(v21[7] + 8 * v15);
        v23 = *(_QWORD *)(v13 + 16);
        v24 = *(_QWORD *)(v22 + 16);
        if (__OFADD__(v24, v23))
          goto LABEL_31;
        sub_1AE4FB75C();
        if (!swift_isUniquelyReferenced_nonNull_native() || v24 + v23 > *(_QWORD *)(v22 + 24) >> 1)
        {
          sub_1AE519C64();
          v22 = v25;
        }
        if (*(_QWORD *)(v13 + 16))
        {
          if ((*(_QWORD *)(v22 + 24) >> 1) - *(_QWORD *)(v22 + 16) < v23)
            goto LABEL_34;
          sub_1AE509638();
          v28 = v28 || v26 >= v27;
          if (!v28)
            goto LABEL_37;
          swift_arrayInitWithCopy();
          if (v23)
          {
            v29 = *(_QWORD *)(v22 + 16);
            v30 = __OFADD__(v29, v23);
            v31 = v29 + v23;
            if (v30)
              goto LABEL_35;
            *(_QWORD *)(v22 + 16) = v31;
          }
        }
        else if (v23)
        {
          goto LABEL_33;
        }
        sub_1AE4F6718();
        swift_bridgeObjectRelease();
        v36 = v21[7];
        v32 = swift_bridgeObjectRelease();
        *(_QWORD *)(v36 + 8 * v15) = v22;
      }
      else
      {
        sub_1AE85CCD8((uint64_t)&v21[v15 >> 6]);
        v33 = (uint64_t *)(v21[6] + 16 * v15);
        *v33 = v11;
        v33[1] = v12;
        *(_QWORD *)(v21[7] + 8 * v15) = v13;
        v34 = v21[2];
        v30 = __OFADD__(v34, 1);
        v35 = v34 + 1;
        if (v30)
          goto LABEL_32;
        v21[2] = v35;
      }
      v11 = sub_1AE7BB6B4(v32);
      v12 = v37;
      v13 = v38;
      a4 = 1;
      if (!v37)
        goto LABEL_29;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    sub_1AE926DE4();
    __break(1u);
LABEL_37:
    sub_1AE4FCDB0();
    result = sub_1AE926B20();
    __break(1u);
  }
  else
  {
LABEL_29:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1AE592EFC();
    return swift_release();
  }
  return result;
}

void sub_1AE85B654()
{
  uint64_t *v0;
  uint64_t v1;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v3;

  v1 = *v0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1AE7AA51C();
    *v0 = v3;
  }
}

unint64_t sub_1AE85B690(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(_QWORD *)(a2 + 16) <= result)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1AE85B6AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = sub_1AE7D26D0(&v6, *a1, a1[1], a1[2]);
  v4 = v6;
  *a2 = result;
  a2[1] = v5;
  a2[2] = v4;
  return result;
}

uint64_t sub_1AE85B6EC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1AE85B710()
{
  uint64_t v0;

  return sub_1AE85A684(*(void **)(v0 + 16));
}

uint64_t sub_1AE85B730()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AE85B75C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  _QWORD v36[2];
  __int128 v37;
  _QWORD *v38;
  char v39;
  uint64_t v40[3];
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;

  v44 = sub_1AE501548((uint64_t *)&unk_1ED318F20);
  sub_1AE52FB78((unint64_t *)&qword_1ED30F950, (uint64_t *)&unk_1ED318F20, MEMORY[0x1E0DEB3D0]);
  v45 = v2;
  v43[0] = a1;
  v3 = sub_1AE4F9858(v43, v44);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = sub_1AE52F6A8(v40);
  v8 = -1 << *(_BYTE *)(*(_QWORD *)v5 + 32);
  v9 = ~v8;
  v10 = (uint64_t *)(*(_QWORD *)v5 + 56);
  v11 = *v10;
  v12 = -v8;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  else
    v13 = -1;
  *v7 = *(_QWORD *)v5;
  v7[1] = (uint64_t)v10;
  v7[2] = v9;
  v7[3] = 0;
  v7[4] = v13 & v11;
  swift_bridgeObjectRetain();
  sub_1AE595318((uint64_t)v40, AssociatedTypeWitness);
  sub_1AE926760();
  if ((v39 & 1) != 0)
  {
    v15 = MEMORY[0x1E0DEE9E0];
LABEL_20:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v40);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v43);
    return v15;
  }
  else
  {
    v16 = (uint64_t)v38;
    v15 = MEMORY[0x1E0DEE9E0];
    *(_QWORD *)&v14 = 136315138;
    v37 = v14;
    v36[1] = MEMORY[0x1E0DEE9B8] + 8;
    while (1)
    {
      v36[0] = v15;
      while (1)
      {
        v38 = (_QWORD *)v16;
        v17 = sub_1AE773734((uint64_t *)&v38);
        v19 = v18;
        if (v18)
          break;
        sub_1AE595318((uint64_t)v40, AssociatedTypeWitness);
        sub_1AE926760();
        v16 = (uint64_t)v38;
        if ((v39 & 1) != 0)
        {
          v15 = v36[0];
          goto LABEL_20;
        }
      }
      v20 = v17;
      v21 = v36[0];
      swift_isUniquelyReferenced_nonNull_native();
      v38 = (_QWORD *)v21;
      v22 = sub_1AE536D68();
      if (__OFADD__(*(_QWORD *)(v21 + 16), (v23 & 1) == 0))
        break;
      v24 = v22;
      v25 = v23;
      sub_1AE501548(&qword_1EEDA28D8);
      if ((sub_1AE926A54() & 1) != 0)
      {
        v26 = sub_1AE536D68();
        if ((v25 & 1) != (v27 & 1))
          goto LABEL_23;
        v24 = v26;
      }
      v28 = v38;
      if ((v25 & 1) != 0)
      {
        v29 = (uint64_t)v38;
        v30 = (uint64_t *)(v38[7] + 16 * v24);
        *v30 = v20;
        v30[1] = v19;
        swift_bridgeObjectRelease();
      }
      else
      {
        v38[(v24 >> 6) + 8] |= 1 << v24;
        *(_QWORD *)(v28[6] + 8 * v24) = v16;
        v31 = (uint64_t *)(v28[7] + 16 * v24);
        *v31 = v20;
        v31[1] = v19;
        v32 = v28[2];
        v33 = __OFADD__(v32, 1);
        v34 = v32 + 1;
        if (v33)
          goto LABEL_22;
        v29 = (uint64_t)v28;
        v28[2] = v34;
      }
      swift_bridgeObjectRelease();
      sub_1AE595318((uint64_t)v40, AssociatedTypeWitness);
      sub_1AE926760();
      v16 = (uint64_t)v38;
      v15 = v29;
      if ((v39 & 1) != 0)
        goto LABEL_20;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

unint64_t sub_1AE85BC64()
{
  unint64_t result;

  result = qword_1EEDA4840;
  if (!qword_1EEDA4840)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KnosisFact, &type metadata for KnosisFact);
    atomic_store(result, (unint64_t *)&qword_1EEDA4840);
  }
  return result;
}

_QWORD *sub_1AE85BCA0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  int *Context;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  unint64_t v18;
  unsigned __int8 v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    Context = (int *)type metadata accessor for QueryContext();
    v10 = Context[7];
    v11 = (char *)v7 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1AE9248DC();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_retain();
    swift_retain();
    v14(v11, v12, v13);
    v15 = Context[8];
    v16 = (_QWORD *)((char *)v7 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = *(_QWORD *)((char *)a2 + v15 + 88);
    v19 = *((_BYTE *)a2 + v15 + 104);
    if (v18 >> 1 == 0xFFFFFFFF && (v19 & 0x1E) == 0)
    {
      memcpy(v16, v17, 0x69uLL);
    }
    else
    {
      v21 = *v17;
      v22 = v17[1];
      v23 = v17[2];
      v42 = v17[4];
      v43 = v17[3];
      v40 = v17[6];
      v41 = v17[5];
      v39 = v17[7];
      v44 = v17[8];
      v45 = v17[9];
      v46 = v17[10];
      v47 = v17[12];
      sub_1AE5263DC(*v17, v22, v23, v43, v42, v41, v40, v39, v44, v45, v46, v18, v47, v19);
      *v16 = v21;
      v16[1] = v22;
      v16[2] = v23;
      v16[3] = v43;
      v16[4] = v42;
      v16[5] = v41;
      v16[6] = v40;
      v16[7] = v39;
      v16[8] = v44;
      v16[9] = v45;
      v16[10] = v46;
      v16[11] = v18;
      v16[12] = v47;
      *((_BYTE *)v16 + 104) = v19;
    }
    *(_QWORD *)((char *)v7 + Context[9]) = *(_QWORD *)((char *)a2 + Context[9]);
    *(_QWORD *)((char *)v7 + Context[10]) = *(_QWORD *)((char *)a2 + Context[10]);
    v24 = Context[11];
    v25 = (char *)v7 + v24;
    v26 = (char *)a2 + v24;
    v27 = *(_QWORD *)((char *)a2 + v24);
    v28 = *(_QWORD *)((char *)a2 + v24 + 8);
    v29 = *((_BYTE *)a2 + v24 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AE526540(v27, v28, v29);
    *(_QWORD *)v25 = v27;
    *((_QWORD *)v25 + 1) = v28;
    v25[16] = v29;
    *((_QWORD *)v25 + 3) = *((_QWORD *)v26 + 3);
    v30 = Context[12];
    v31 = (_QWORD *)((char *)v7 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v31[2] = v32[2];
    *((_BYTE *)v7 + Context[13]) = *((_BYTE *)a2 + Context[13]);
    *((_BYTE *)v7 + Context[14]) = *((_BYTE *)a2 + Context[14]);
    v34 = a3[6];
    *(_QWORD *)((char *)v7 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *(_QWORD *)((char *)v7 + v34) = *(_QWORD *)((char *)a2 + v34);
    v35 = a3[8];
    *(_QWORD *)((char *)v7 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v36 = (char *)v7 + v35;
    v37 = (char *)a2 + v35;
    *(_QWORD *)v36 = *(_QWORD *)v37;
    v36[8] = v37[8];
    *(_QWORD *)((char *)v7 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1AE85BF3C(uint64_t a1)
{
  int *Context;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 v7;

  swift_release();
  swift_release();
  Context = (int *)type metadata accessor for QueryContext();
  v3 = a1 + Context[7];
  v4 = sub_1AE9248DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = a1 + Context[8];
  v6 = *(_QWORD *)(v5 + 88);
  v7 = *(_BYTE *)(v5 + 104);
  if (v6 >> 1 != 0xFFFFFFFF || (v7 & 0x1E) != 0)
    sub_1AE583000(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 72), *(_QWORD *)(v5 + 80), v6, *(_QWORD *)(v5 + 96), v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE579F84(*(_QWORD *)(a1 + Context[11]), *(_QWORD *)(a1 + Context[11] + 8), *(_BYTE *)(a1 + Context[11] + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1AE85C06C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *Context;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  unint64_t v16;
  unsigned __int8 v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  Context = (int *)type metadata accessor for QueryContext();
  v8 = Context[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1AE9248DC();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_retain();
  swift_retain();
  v12(v9, v10, v11);
  v13 = Context[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = *(_QWORD *)((char *)a2 + v13 + 88);
  v17 = *((_BYTE *)a2 + v13 + 104);
  if (v16 >> 1 == 0xFFFFFFFF && (v17 & 0x1E) == 0)
  {
    memcpy(v14, v15, 0x69uLL);
  }
  else
  {
    v19 = *v15;
    v20 = v15[1];
    v21 = v15[2];
    v40 = v15[4];
    v41 = v15[3];
    v38 = v15[6];
    v39 = v15[5];
    v37 = v15[7];
    v42 = v15[8];
    v43 = v15[9];
    v44 = v15[10];
    v45 = v15[12];
    sub_1AE5263DC(*v15, v20, v21, v41, v40, v39, v38, v37, v42, v43, v44, v16, v45, v17);
    *v14 = v19;
    v14[1] = v20;
    v14[2] = v21;
    v14[3] = v41;
    v14[4] = v40;
    v14[5] = v39;
    v14[6] = v38;
    v14[7] = v37;
    v14[8] = v42;
    v14[9] = v43;
    v14[10] = v44;
    v14[11] = v16;
    v14[12] = v45;
    *((_BYTE *)v14 + 104) = v17;
  }
  *(_QWORD *)((char *)a1 + Context[9]) = *(_QWORD *)((char *)a2 + Context[9]);
  *(_QWORD *)((char *)a1 + Context[10]) = *(_QWORD *)((char *)a2 + Context[10]);
  v22 = Context[11];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *(_QWORD *)((char *)a2 + v22);
  v26 = *(_QWORD *)((char *)a2 + v22 + 8);
  v27 = *((_BYTE *)a2 + v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE526540(v25, v26, v27);
  *(_QWORD *)v23 = v25;
  *((_QWORD *)v23 + 1) = v26;
  v23[16] = v27;
  *((_QWORD *)v23 + 3) = *((_QWORD *)v24 + 3);
  v28 = Context[12];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v29[2] = v30[2];
  *((_BYTE *)a1 + Context[13]) = *((_BYTE *)a2 + Context[13]);
  *((_BYTE *)a1 + Context[14]) = *((_BYTE *)a2 + Context[14]);
  v32 = a3[6];
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  *(_QWORD *)((char *)a1 + v32) = *(_QWORD *)((char *)a2 + v32);
  v33 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  v34[8] = v35[8];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1AE85C2E0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *Context;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  unsigned __int8 v17;
  BOOL v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  Context = (int *)type metadata accessor for QueryContext();
  v7 = Context[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AE9248DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = Context[8];
  v12 = (char *)a1 + v11;
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = *(_QWORD *)((char *)a1 + v11 + 88);
  v15 = *((_BYTE *)a1 + v11 + 104) & 0x1E;
  v16 = *(_QWORD *)((char *)a2 + v11 + 88);
  v17 = *((_BYTE *)a2 + v11 + 104);
  v19 = (v17 & 0x1E) == 0 && v16 >> 1 == 0xFFFFFFFF;
  if (v14 >> 1 == 0xFFFFFFFF && v15 == 0)
  {
    if (!v19)
    {
      v39 = v13[1];
      v40 = v13[2];
      v41 = v13[4];
      v68 = v41;
      v70 = v13[3];
      v42 = v13[6];
      v64 = v42;
      v66 = v13[5];
      v62 = v13[7];
      v72 = v13[8];
      v74 = v13[9];
      v76 = v13[10];
      v78 = v13[12];
      v43 = *v13;
      sub_1AE5263DC(v43, v39, v40, v70, v41, v66, v42, v62, v72, v74, v76, v16, v78, v17);
      *(_QWORD *)v12 = v43;
      *((_QWORD *)v12 + 1) = v39;
      *((_QWORD *)v12 + 2) = v40;
      *((_QWORD *)v12 + 3) = v70;
      *((_QWORD *)v12 + 4) = v68;
      *((_QWORD *)v12 + 5) = v66;
      *((_QWORD *)v12 + 6) = v64;
      *((_QWORD *)v12 + 7) = v62;
      *((_QWORD *)v12 + 8) = v72;
      *((_QWORD *)v12 + 9) = v74;
      *((_QWORD *)v12 + 10) = v76;
      *((_QWORD *)v12 + 11) = v16;
      *((_QWORD *)v12 + 12) = v78;
      v12[104] = v17;
      goto LABEL_17;
    }
  }
  else
  {
    if (!v19)
    {
      v21 = v13[1];
      v69 = v21;
      v71 = *v13;
      v22 = v13[2];
      v23 = v13[3];
      v24 = v13[5];
      v65 = v24;
      v67 = v13[4];
      v25 = v13[7];
      v61 = v25;
      v63 = v13[6];
      v73 = v13[8];
      v75 = v13[9];
      v77 = v13[10];
      v26 = v13[12];
      sub_1AE5263DC(v71, v21, v22, v23, v67, v24, v63, v25, v73, v75, v77, v16, v26, v17);
      v27 = *(_QWORD *)v12;
      v28 = *((_QWORD *)v12 + 1);
      v29 = *((_QWORD *)v12 + 2);
      v30 = *((_QWORD *)v12 + 3);
      v31 = *((_QWORD *)v12 + 4);
      v32 = *((_QWORD *)v12 + 5);
      v33 = *((_QWORD *)v12 + 6);
      v34 = *((_QWORD *)v12 + 7);
      v35 = *((_OWORD *)v12 + 4);
      v36 = *((_OWORD *)v12 + 5);
      v37 = *((_QWORD *)v12 + 12);
      v38 = v12[104];
      *(_QWORD *)v12 = v71;
      *((_QWORD *)v12 + 1) = v69;
      *((_QWORD *)v12 + 2) = v22;
      *((_QWORD *)v12 + 3) = v23;
      *((_QWORD *)v12 + 4) = v67;
      *((_QWORD *)v12 + 5) = v65;
      *((_QWORD *)v12 + 6) = v63;
      *((_QWORD *)v12 + 7) = v61;
      *((_QWORD *)v12 + 8) = v73;
      *((_QWORD *)v12 + 9) = v75;
      *((_QWORD *)v12 + 10) = v77;
      *((_QWORD *)v12 + 11) = v16;
      *((_QWORD *)v12 + 12) = v26;
      v12[104] = v17;
      sub_1AE583000(v27, v28, v29, v30, v31, v32, v33, v34, v35, *((uint64_t *)&v35 + 1), v36, *((uint64_t *)&v36 + 1), v37, v38);
      goto LABEL_17;
    }
    sub_1AE73E8EC((uint64_t)v12);
  }
  memcpy(v12, v13, 0x69uLL);
LABEL_17:
  *(_QWORD *)((char *)a1 + Context[9]) = *(_QWORD *)((char *)a2 + Context[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + Context[10]) = *(_QWORD *)((char *)a2 + Context[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = Context[11];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = *(_QWORD *)((char *)a2 + v44);
  v48 = *(_QWORD *)((char *)a2 + v44 + 8);
  v49 = *((_BYTE *)a2 + v44 + 16);
  sub_1AE526540(v47, v48, v49);
  v50 = *(_QWORD *)v45;
  v51 = *((_QWORD *)v45 + 1);
  *(_QWORD *)v45 = v47;
  *((_QWORD *)v45 + 1) = v48;
  v52 = v45[16];
  v45[16] = v49;
  sub_1AE579F84(v50, v51, v52);
  *((_QWORD *)v45 + 3) = *((_QWORD *)v46 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = Context[12];
  v54 = (_QWORD *)((char *)a1 + v53);
  v55 = (char *)a2 + v53;
  *v54 = *(_QWORD *)((char *)a2 + v53);
  v54[1] = *(_QWORD *)((char *)a2 + v53 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54[2] = *((_QWORD *)v55 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + Context[13]) = *((_BYTE *)a2 + Context[13]);
  *((_BYTE *)a1 + Context[14]) = *((_BYTE *)a2 + Context[14]);
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v56 = a3[8];
  v57 = (char *)a1 + v56;
  v58 = (char *)a2 + v56;
  v59 = v58[8];
  *(_QWORD *)v57 = *(_QWORD *)v58;
  v57[8] = v59;
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE85C6BC(uint64_t a1, uint64_t a2, int *a3)
{
  int *Context;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  Context = (int *)type metadata accessor for QueryContext();
  v7 = Context[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1AE9248DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  memcpy((void *)(a1 + Context[8]), (const void *)(a2 + Context[8]), 0x69uLL);
  *(_QWORD *)(a1 + Context[9]) = *(_QWORD *)(a2 + Context[9]);
  *(_QWORD *)(a1 + Context[10]) = *(_QWORD *)(a2 + Context[10]);
  v11 = Context[11];
  v12 = (_OWORD *)(a1 + v11);
  v13 = (_OWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = Context[12];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(v17 + 16);
  *(_BYTE *)(a1 + Context[13]) = *(_BYTE *)(a2 + Context[13]);
  *(_BYTE *)(a1 + Context[14]) = *(_BYTE *)(a2 + Context[14]);
  v18 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v19 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

_QWORD *sub_1AE85C7F4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *Context;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _OWORD *v13;
  unint64_t v14;
  unsigned __int8 v15;
  unint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  Context = (int *)type metadata accessor for QueryContext();
  v7 = Context[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AE9248DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = Context[8];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = *(_QWORD *)((char *)a1 + v11 + 88);
  v15 = *((_BYTE *)v12 + 104);
  if (v14 >> 1 == 0xFFFFFFFF && (v15 & 0x1E) == 0)
    goto LABEL_11;
  v17 = *((_QWORD *)v13 + 11);
  v18 = *((_BYTE *)v13 + 104);
  if (v17 >> 1 == 0xFFFFFFFF && (v18 & 0x1E) == 0)
  {
    sub_1AE73E8EC((uint64_t)v12);
LABEL_11:
    memcpy(v12, v13, 0x69uLL);
    goto LABEL_12;
  }
  v20 = *((_QWORD *)v13 + 10);
  v21 = *((_QWORD *)v13 + 12);
  v22 = *v12;
  v23 = v12[1];
  v24 = v12[2];
  v25 = v12[3];
  v26 = v12[4];
  v27 = v12[5];
  v28 = v12[6];
  v29 = v12[7];
  v30 = *((_OWORD *)v12 + 4);
  v31 = v12[10];
  v32 = v12[12];
  v33 = v13[1];
  *(_OWORD *)v12 = *v13;
  *((_OWORD *)v12 + 1) = v33;
  v34 = v13[3];
  *((_OWORD *)v12 + 2) = v13[2];
  *((_OWORD *)v12 + 3) = v34;
  *((_OWORD *)v12 + 4) = v13[4];
  v12[10] = v20;
  v12[11] = v17;
  v12[12] = v21;
  *((_BYTE *)v12 + 104) = v18;
  sub_1AE583000(v22, v23, v24, v25, v26, v27, v28, v29, v30, *((uint64_t *)&v30 + 1), v31, v14, v32, v15);
LABEL_12:
  *(_QWORD *)((char *)a1 + Context[9]) = *(_QWORD *)((char *)a2 + Context[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + Context[10]) = *(_QWORD *)((char *)a2 + Context[10]);
  swift_bridgeObjectRelease();
  v35 = Context[11];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  LOBYTE(v35) = *((_BYTE *)a2 + v35 + 16);
  v38 = *(_QWORD *)v36;
  v39 = *((_QWORD *)v36 + 1);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  v40 = v36[16];
  v36[16] = v35;
  sub_1AE579F84(v38, v39, v40);
  *((_QWORD *)v36 + 3) = *((_QWORD *)v37 + 3);
  swift_bridgeObjectRelease();
  v41 = Context[12];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (char *)a2 + v41;
  v44 = *(_QWORD *)((char *)a2 + v41 + 8);
  *v42 = *(_QWORD *)((char *)a2 + v41);
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v42[2] = *((_QWORD *)v43 + 2);
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + Context[13]) = *((_BYTE *)a2 + Context[13]);
  *((_BYTE *)a1 + Context[14]) = *((_BYTE *)a2 + Context[14]);
  *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  v45 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  *(_QWORD *)v46 = *(_QWORD *)v47;
  v46[8] = v47[8];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE85CA54()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE85CA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1AE508C18();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1AE85CAD8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE85CAE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1AE508C18();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1AE85CB58()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for QueryContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1AE85CBEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEDA4850;
  if (!qword_1EEDA4850)
  {
    v1 = type metadata accessor for AnswerRenderIterator(255);
    result = MEMORY[0x1AF454B70](&unk_1AE9646F0, v1);
    atomic_store(result, (unint64_t *)&qword_1EEDA4850);
  }
  return result;
}

uint64_t sub_1AE85CC40(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  return sub_1AE85B37C(a1, a2, 0, a4, a5);
}

double sub_1AE85CC4C()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0;
  *(_BYTE *)(v0 + 80) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  return result;
}

uint64_t sub_1AE85CC68()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE85CC7C(char a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_1AE66B86C(v2, a1 & 1, v1);
}

unint64_t sub_1AE85CCA0()
{
  unint64_t v0;
  uint64_t *v1;

  return sub_1AE85B690(v0, *v1);
}

void sub_1AE85CCB0()
{
  void *v0;

}

uint64_t sub_1AE85CCB8()
{
  uint64_t v0;

  return sub_1AE5B7810(v0);
}

void sub_1AE85CCD8(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 64) |= v1;
}

void sub_1AE85CCE8()
{
  sub_1AE519630(0);
}

uint64_t sub_1AE85CD08()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE85CD14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AE5B77A4(*(_QWORD *)(a1 + 8 * v1));
}

uint64_t sub_1AE85CD20(uint64_t a1)
{
  return sub_1AE7E8EA0(a1);
}

uint64_t sub_1AE85CD28()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE85CD30()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE85CD44()
{
  uint64_t v0;

  return sub_1AE6263E0(*(_QWORD *)(v0 + 40));
}

void sub_1AE85CD70()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_1AE53D160(v1, v0);
}

uint64_t sub_1AE85CD7C()
{
  return j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
}

id sub_1AE85CD88()
{
  void *v0;

  return v0;
}

uint64_t sub_1AE85CD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned __int8 v5;

  return sub_1AE525B74(a1, a2, a3, a4, a5, v5);
}

uint64_t sub_1AE85CD98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AE801F1C(a1, a2, v2);
}

uint64_t sub_1AE85CDA0(uint64_t a1)
{
  return nullsub_1(a1);
}

void sub_1AE85CDA8()
{
  sub_1AE85B654();
}

BOOL sub_1AE85CDB0()
{
  NSObject *v0;
  os_log_type_t v1;

  return os_log_type_enabled(v0, v1);
}

uint64_t sub_1AE85CDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1AE525C94(a1, a2, a3, a4, a5, *(_DWORD *)(v5 + 360));
}

uint64_t sub_1AE85CDC4()
{
  return sub_1AE7E8EA0(0);
}

uint64_t sub_1AE85CDD0()
{
  return swift_bridgeObjectRelease_n();
}

void sub_1AE85CDDC()
{
  sub_1AE51966C(0);
}

uint64_t sub_1AE85CDE4()
{
  return type metadata accessor for AnswerRenderIterator(0);
}

uint64_t IndexResult.init(facts:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  a2[1] = 0;
  a2[2] = 0;
  *a2 = result;
  return result;
}

uint64_t IndexResult.init(errMsg:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = 0;
  a3[1] = result;
  a3[2] = a2;
  return result;
}

unint64_t IndexResult.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  if (v1)
    v2 = v1;
  else
    v2 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  MEMORY[0x1AF453400](v2, &type metadata for KnosisInternalFact);
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  return 0xD000000000000013;
}

uint64_t destroy for IndexResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s20IntelligencePlatform11IndexResultVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IndexResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for IndexResult(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for IndexResult()
{
  return &type metadata for IndexResult;
}

BOOL sub_1AE85D040()
{
  uint64_t v0;

  sub_1AE4FB9BC();
  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16) == 0;
}

uint64_t sub_1AE85D078(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t (*v25)();
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  BOOL v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  int64_t v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72[4];
  _QWORD *v73;

  result = sub_1AE85D040();
  if ((result & 1) != 0)
    return result;
  if (sub_1AE85D040())
    sub_1AE85DDD4(a1);
  sub_1AE4FB9BC();
  v64 = *(_QWORD *)(a1 + 16) + 64;
  sub_1AE4F95DC();
  v6 = v5 & v4;
  v7 = v1 + 16;
  v65 = (uint64_t *)(v1 + 24);
  v66 = (unint64_t)(v8 + 63) >> 6;
  v67 = v9;
  swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v70 = (v6 - 1) & v6;
      v11 = __clz(__rbit64(v6)) | (v10 << 6);
      goto LABEL_21;
    }
    v12 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_43;
    if (v12 >= v66)
      return swift_release();
    v13 = *(_QWORD *)(v64 + 8 * v12);
    ++v10;
    if (!v13)
    {
      v10 = v12 + 1;
      if (v12 + 1 >= v66)
        return swift_release();
      v13 = *(_QWORD *)(v64 + 8 * v10);
      if (!v13)
      {
        v10 = v12 + 2;
        if (v12 + 2 >= v66)
          return swift_release();
        v13 = *(_QWORD *)(v64 + 8 * v10);
        if (!v13)
          break;
      }
    }
LABEL_20:
    v70 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v10 << 6);
LABEL_21:
    v15 = (uint64_t *)(*(_QWORD *)(v67 + 48) + 16 * v11);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(_QWORD *)(v67 + 56) + 40 * v11;
    v19 = *(_QWORD *)(v18 + 8);
    v69 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 16);
    v21 = *(_QWORD *)(v18 + 24);
    v22 = *(_BYTE *)(v18 + 32);
    sub_1AE4FB9BC();
    v23 = *(_QWORD *)(*(_QWORD *)v7 + 16);
    sub_1AE4F6804();
    v71 = v19;
    sub_1AE4F6708();
    sub_1AE4FB764();
    if (v23 && (sub_1AE4FCB28(), (v24 & 1) != 0))
    {
      sub_1AE508500();
      sub_1AE4FB9BC();
      sub_1AE4F6804();
      v25 = sub_1AE535F84(v72, v17, v16);
      if (*(_QWORD *)(v26 + 8))
      {
        v33 = sub_1AE4FB764();
        sub_1AE889508(v33);
        v35 = v34;
        sub_1AE4F6710();
        v36 = sub_1AE8822F0(v35);
        sub_1AE506AB8(v36, v37, v38, v39, v40, v41, v42, v43, v63);
        sub_1AE85F744();
        sub_1AE509C98();
        sub_1AE4F6710();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        sub_1AE506AB8((uint64_t)v25, v26, v27, v28, v29, v30, v31, v32, v63);
        sub_1AE85F744();
        sub_1AE4F6710();
        swift_bridgeObjectRelease();
        sub_1AE509C98();
      }
      v6 = v70;
    }
    else
    {
      v68 = v10;
      sub_1AE508500();
      sub_1AE4FB9BC();
      sub_1AE4F6804();
      swift_isUniquelyReferenced_nonNull_native();
      v73 = *(_QWORD **)v7;
      *(_QWORD *)v7 = 0x8000000000000000;
      sub_1AE4FCB28();
      sub_1AE85F74C();
      if (v46)
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      v47 = v44;
      v48 = v45;
      sub_1AE501548(&qword_1EED9B1D0);
      if ((sub_1AE85F768() & 1) != 0)
      {
        v49 = sub_1AE4FCB28();
        if ((v48 & 1) != (v50 & 1))
          goto LABEL_46;
        v47 = v49;
      }
      v51 = v73;
      if ((v48 & 1) != 0)
      {
        v52 = v73[7] + 40 * v47;
        swift_bridgeObjectRelease();
        sub_1AE4F6648();
        *(_QWORD *)v52 = v69;
        *(_QWORD *)(v52 + 8) = v71;
        *(_QWORD *)(v52 + 16) = v20;
        *(_QWORD *)(v52 + 24) = v21;
        *(_BYTE *)(v52 + 32) = v22;
      }
      else
      {
        v73[(v47 >> 6) + 8] |= 1 << v47;
        v53 = (uint64_t *)(v51[6] + 16 * v47);
        *v53 = v17;
        v53[1] = v16;
        v54 = v51[7] + 40 * v47;
        *(_QWORD *)v54 = v69;
        *(_QWORD *)(v54 + 8) = v71;
        *(_QWORD *)(v54 + 16) = v20;
        *(_QWORD *)(v54 + 24) = v21;
        *(_BYTE *)(v54 + 32) = v22;
        v55 = v51[2];
        v46 = __OFADD__(v55, 1);
        v56 = v55 + 1;
        if (v46)
          goto LABEL_44;
        v51[2] = v56;
        sub_1AE4F6804();
      }
      *(_QWORD *)v7 = v51;
      sub_1AE4F67AC();
      sub_1AE4F6648();
      sub_1AE508500();
      sub_1AE4FB9BC();
      v57 = *v65;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v65 = v57;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1AE5056EC();
        v57 = v61;
        *v65 = v61;
      }
      v59 = *(_QWORD *)(v57 + 16);
      if (v59 >= *(_QWORD *)(v57 + 24) >> 1)
      {
        sub_1AE5056EC();
        v57 = v62;
        *v65 = v62;
      }
      *(_QWORD *)(v57 + 16) = v59 + 1;
      v60 = v57 + 16 * v59;
      *(_QWORD *)(v60 + 32) = v17;
      *(_QWORD *)(v60 + 40) = v16;
      sub_1AE508500();
      v10 = v68;
      v6 = v70;
    }
  }
  v14 = v12 + 3;
  if (v14 >= v66)
    return swift_release();
  v13 = *(_QWORD *)(v64 + 8 * v14);
  if (v13)
  {
    v10 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v10 >= v66)
      return swift_release();
    v13 = *(_QWORD *)(v64 + 8 * v10);
    ++v14;
    if (v13)
      goto LABEL_20;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE85D50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = MEMORY[0x1E0DEE9D8];
  v2 = sub_1AE925C98();
  sub_1AE4FB9BC();
  *(_QWORD *)(v0 + 16) = v2;
  swift_bridgeObjectRelease();
  sub_1AE4FB9BC();
  *(_QWORD *)(v0 + 24) = v1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE85D598(uint64_t a1)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t result;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE v98[5];
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;

  inited = swift_initStackObject();
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(inited + 16) = sub_1AE925C98();
  v101 = (uint64_t *)(inited + 16);
  *(_QWORD *)(inited + 24) = v4;
  sub_1AE4FB9BC();
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
    goto LABEL_42;
  v7 = sub_1AE85DAAC();
  v92 = inited + 24;
  if (v7 < sub_1AE85DAAC())
  {
    v81 = v1;
    v85 = inited;
    v8 = v1 + 16;
    sub_1AE4F67A4();
    v77 = v5;
    v9 = v5 + 40;
    v88 = v1 + 16;
    while (1)
    {
      v10 = *(_QWORD *)(v9 - 8);
      sub_1AE4FB9BC();
      v11 = *(_QWORD *)(*(_QWORD *)v8 + 16);
      sub_1AE4FB764();
      if (!v11)
        goto LABEL_12;
      sub_1AE4FB764();
      sub_1AE4FD6FC();
      if ((v12 & 1) == 0)
        break;
      sub_1AE505964();
      sub_1AE85F744();
      sub_1AE4F6804();
      sub_1AE4F67A4();
      sub_1AE4F6710();
      sub_1AE4FB9BC();
      sub_1AE4FB764();
      swift_isUniquelyReferenced_nonNull_native();
      v103 = *v101;
      *v101 = 0x8000000000000000;
      sub_1AE4FD6FC();
      sub_1AE85F74C();
      if (v14)
      {
        __break(1u);
        goto LABEL_44;
      }
      v15 = v13;
      sub_1AE501548(&qword_1EED9B1D0);
      v16 = sub_1AE85F768();
      if ((v16 & 1) != 0)
      {
        v16 = sub_1AE4FD6FC();
        if ((v15 & 1) != (v17 & 1))
          goto LABEL_47;
      }
      if ((v15 & 1) != 0)
      {
        sub_1AE50782C();
        v24 = sub_1AE4F6648();
        sub_1AE508DAC(v24, v25, v26, v27, v28, v29, v30, v31, v77, v81, v85, v88, v92, v95, *(int *)v98, v98[4]);
      }
      else
      {
        sub_1AE4FF424(v16, v17, v18, v19, v20, v21, v22, v23, v77, v81, v85, v88, v92, v95, *(int *)v98, v98[4]);
        if (v14)
          goto LABEL_45;
        *(_QWORD *)(v103 + 16) = v32;
        sub_1AE4FB764();
      }
      v33 = *v101;
      *v101 = v103;
      sub_1AE4F6710();
      sub_1AE4F6648();
      sub_1AE85F744();
      sub_1AE4FB9BC();
      v34 = sub_1AE85F77C();
      if ((v34 & 1) == 0)
      {
        sub_1AE501E84();
        v33 = v34;
      }
      if (*(_QWORD *)(v33 + 16) >= *(_QWORD *)(v33 + 24) >> 1)
        sub_1AE501E84();
      sub_1AE506ECC(v34, v35, v36, v37, v38, v39, v40, v41, v78, v82, v86, v89, v93, v96, v99, v10);
      sub_1AE85F744();
      v8 = v88;
LABEL_20:
      v9 += 16;
      if (!--v6)
        goto LABEL_41;
    }
    sub_1AE4F6710();
LABEL_12:
    sub_1AE85F744();
    sub_1AE4F6710();
    goto LABEL_20;
  }
  sub_1AE4FB9BC();
  v42 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 16);
  if (!v42)
  {
LABEL_42:
    sub_1AE85DDD4(inited);
    return swift_release();
  }
  v83 = v1;
  v85 = inited;
  v43 = a1 + 16;
  v79 = swift_bridgeObjectRetain();
  v44 = v79 + 40;
  v90 = a1 + 16;
  while (1)
  {
    v45 = *(_QWORD *)(v44 - 8);
    sub_1AE4FB9BC();
    v46 = *(_QWORD *)(*(_QWORD *)v43 + 16);
    sub_1AE4FB764();
    if (!v46)
      goto LABEL_32;
    sub_1AE4FB764();
    sub_1AE4FD6FC();
    if ((v47 & 1) == 0)
    {
      sub_1AE4F6710();
LABEL_32:
      sub_1AE508078();
      sub_1AE4F6710();
      goto LABEL_40;
    }
    sub_1AE505964();
    sub_1AE508078();
    sub_1AE4F6804();
    sub_1AE4F67A4();
    sub_1AE4F6710();
    sub_1AE4FB9BC();
    sub_1AE4FB764();
    swift_isUniquelyReferenced_nonNull_native();
    v102 = *v101;
    *v101 = 0x8000000000000000;
    sub_1AE4FD6FC();
    sub_1AE85F74C();
    if (v14)
      break;
    v49 = v48;
    sub_1AE501548(&qword_1EED9B1D0);
    v50 = sub_1AE85F768();
    if ((v50 & 1) != 0)
    {
      v50 = sub_1AE4FD6FC();
      if ((v49 & 1) != (v51 & 1))
        goto LABEL_47;
    }
    if ((v49 & 1) != 0)
    {
      sub_1AE50782C();
      v58 = sub_1AE4F6648();
      sub_1AE508DAC(v58, v59, v60, v61, v62, v63, v64, v65, v79, v83, v85, v90, v92, v95, *(int *)v98, v98[4]);
    }
    else
    {
      sub_1AE4FF424(v50, v51, v52, v53, v54, v55, v56, v57, v79, v83, v85, v90, v92, v95, *(int *)v98, v98[4]);
      if (v14)
        goto LABEL_46;
      *(_QWORD *)(v102 + 16) = v66;
      sub_1AE4FB764();
    }
    v67 = *v101;
    *v101 = v102;
    sub_1AE4F6710();
    sub_1AE4F6648();
    sub_1AE508078();
    sub_1AE4FB9BC();
    v68 = sub_1AE85F77C();
    if ((v68 & 1) == 0)
    {
      sub_1AE501E84();
      v67 = v68;
    }
    if (*(_QWORD *)(v67 + 16) >= *(_QWORD *)(v67 + 24) >> 1)
      sub_1AE501E84();
    sub_1AE506ECC(v68, v69, v70, v71, v72, v73, v74, v75, v80, v84, v87, v91, v94, v97, v100, v45);
    sub_1AE508078();
    v43 = v90;
LABEL_40:
    v44 += 16;
    if (!--v42)
    {
LABEL_41:
      inited = v85;
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

void sub_1AE85DA44(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AE889438();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1AE85EBC4(v5);
  *a1 = v2;
}

uint64_t sub_1AE85DAAC()
{
  uint64_t v0;

  sub_1AE4FB9BC();
  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t sub_1AE85DADC()
{
  sub_1AE4FB9BC();
  swift_retain();
  sub_1AE507328();
  sub_1AE4F7804();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE85DB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1AE4FB9BC();
  swift_retain();
  sub_1AE507328();
  sub_1AE85F760();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = (uint64_t *)(v0 + 16);
  v3 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  v4 = MEMORY[0x1E0DEE9D8];
  do
  {
    v5 = *(v3 - 1);
    v6 = *v3;
    sub_1AE4FB9BC();
    v7 = *v2;
    v8 = *(_QWORD *)(*v2 + 16);
    sub_1AE4F6804();
    if (!v8)
      goto LABEL_11;
    sub_1AE4F6804();
    v9 = sub_1AE536EDC(v5, v6);
    if ((v10 & 1) == 0)
    {
      sub_1AE4F67AC();
LABEL_11:
      sub_1AE85F760();
      sub_1AE4F67AC();
      goto LABEL_12;
    }
    v11 = *(_QWORD *)(v7 + 56) + 40 * v9;
    v13 = *(_QWORD *)v11;
    v12 = *(_QWORD *)(v11 + 8);
    v14 = *(_QWORD *)(v11 + 16);
    v15 = *(_QWORD *)(v11 + 24);
    v16 = *(_BYTE *)(v11 + 32);
    sub_1AE85F760();
    sub_1AE4F66CC();
    sub_1AE4F6708();
    sub_1AE509C98();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE85F770();
      v4 = v19;
    }
    v17 = *(_QWORD *)(v4 + 16);
    if (v17 >= *(_QWORD *)(v4 + 24) >> 1)
    {
      sub_1AE85F770();
      v4 = v20;
    }
    *(_QWORD *)(v4 + 16) = v17 + 1;
    v18 = v4 + 40 * v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_QWORD *)(v18 + 40) = v12;
    *(_QWORD *)(v18 + 48) = v14;
    *(_QWORD *)(v18 + 56) = v15;
    *(_BYTE *)(v18 + 64) = v16;
LABEL_12:
    v3 += 2;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1AE85DCC8(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD v8[2];
  char v9;

  v2 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v2;
  v9 = *(_BYTE *)(a1 + 32);
  v3 = v8[0];
  sub_1AE4FB9BC();
  if (!*(_QWORD *)(*(_QWORD *)(v1 + 16) + 16))
    goto LABEL_5;
  sub_1AE4FB75C();
  sub_1AE536EDC(*(uint64_t *)&v8[0], *((uint64_t *)&v8[0] + 1));
  if ((v4 & 1) == 0)
  {
    sub_1AE4F6648();
LABEL_5:
    sub_1AE4F7804();
    sub_1AE4FB9BC();
    sub_1AE4FB75C();
    sub_1AE8DD234();
    v5 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 16);
    sub_1AE8DD574(v5);
    v6 = *(_QWORD *)(v1 + 24);
    *(_QWORD *)(v6 + 16) = v5 + 1;
    *(_OWORD *)(v6 + 16 * v5 + 32) = v3;
    sub_1AE4F7804();
    goto LABEL_6;
  }
  sub_1AE4F7804();
  sub_1AE4F6648();
LABEL_6:
  sub_1AE4FB9BC();
  sub_1AE4FB75C();
  sub_1AE85F710((uint64_t)v8);
  sub_1AE654F38(v8, v3, *((_QWORD *)&v3 + 1));
  sub_1AE4F7804();
  return sub_1AE4F6648();
}

uint64_t sub_1AE85DDD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1AE4FB9BC();
  v3 = *(_QWORD *)(a1 + 16);
  sub_1AE4FB9BC();
  *(_QWORD *)(v1 + 16) = v3;
  sub_1AE4F66C4();
  sub_1AE4F81B8();
  sub_1AE4FB9BC();
  v4 = *(_QWORD *)(a1 + 24);
  sub_1AE4FB9BC();
  *(_QWORD *)(v1 + 24) = v4;
  sub_1AE4FB75C();
  return sub_1AE4F665C();
}

uint64_t sub_1AE85DE68(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  char v11;
  uint64_t v12[5];
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *a2;
  v12[0] = *(_QWORD *)a1;
  v12[1] = v2;
  v12[2] = v3;
  v12[3] = v4;
  v12[4] = v5;
  v9 = *(_OWORD *)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 40);
  v14 = v9;
  v15 = v6;
  v16 = v7;
  v11 = v8;
  return sub_1AE85E568(v12, &v11, 1);
}

unint64_t sub_1AE85DEC4(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t result;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;

  v2 = v1;
  result = sub_1AE85DAAC();
  if (result > a1)
  {
    v23 = a1;
    if (a1)
      goto LABEL_7;
    if (qword_1ED3193F0 != -1)
      goto LABEL_23;
    while (1)
    {
      v5 = sub_1AE925B6C();
      sub_1AE4FB608(v5, (uint64_t)qword_1ED3193D8);
      v6 = sub_1AE925B54();
      v7 = sub_1AE9265EC();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_1AE4F2000, v6, v7, "limit 0 on operator should be avoided", v8, 2u);
        MEMORY[0x1AF454C78](v8, -1, -1);
      }

      a1 = v23;
LABEL_7:
      v9 = v2 + 24;
      sub_1AE4FB9BC();
      swift_retain();
      sub_1AE8764EC((uint64_t *)(v2 + 24), v2);
      swift_endAccess();
      v10 = sub_1AE85DAAC();
      v25 = v10;
      if (v10 < a1)
        goto LABEL_20;
      if (v10 == a1)
        break;
      if (v10 > v23)
      {
        v11 = (_QWORD *)(v2 + 16);
        v2 = v23;
        v12 = 16 * v23;
        v26 = v11;
        v24 = v9;
        while (v2 < *(_QWORD *)(*(_QWORD *)v9 + 16))
        {
          v13 = *(_QWORD *)v9 + v12;
          v14 = *(_QWORD *)(v13 + 32);
          v15 = *(_QWORD *)(v13 + 40);
          sub_1AE4FB9BC();
          swift_bridgeObjectRetain();
          sub_1AE4F66CC();
          v16 = sub_1AE536EDC(v14, v15);
          LOBYTE(v14) = v17;
          sub_1AE4F9038();
          if ((v14 & 1) != 0)
          {
            swift_isUniquelyReferenced_nonNull_native();
            v27 = *v11;
            *v11 = 0x8000000000000000;
            sub_1AE501548(&qword_1EED9B1D0);
            sub_1AE926A54();
            swift_bridgeObjectRelease();
            v18 = (uint64_t *)(*(_QWORD *)(v27 + 56) + 40 * v16);
            v19 = *v18;
            v20 = v18[1];
            sub_1AE926A6C();
            *v26 = v27;
            v9 = v24;
            swift_bridgeObjectRelease();
          }
          else
          {
            v19 = 0;
            v20 = 0;
          }
          ++v2;
          swift_endAccess();
          swift_bridgeObjectRelease();
          sub_1AE53F134(v19, v20);
          v12 += 16;
          v11 = v26;
          if (v25 == v2)
            goto LABEL_16;
        }
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
      __break(1u);
LABEL_23:
      swift_once();
    }
LABEL_16:
    if (*(_QWORD *)(*(_QWORD *)v9 + 16) >= (int64_t)v23)
    {
      v21 = *(_QWORD *)v9 + 32;
      v22 = swift_bridgeObjectRetain();
      *(_QWORD *)v9 = sub_1AE803784(v22, v21, 0, (2 * v23) | 1);
      return swift_bridgeObjectRelease();
    }
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1AE85E1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v19 = MEMORY[0x1E0DEE9D8];
  sub_1AE4FB9BC();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = v1 + 64;
  sub_1AE4F95DC();
  v5 = v4 & v3;
  v7 = (unint64_t)(v6 + 63) >> 6;
  sub_1AE4FB75C();
  v8 = 0;
  if (!v5)
    goto LABEL_3;
LABEL_2:
  v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v14 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 40 * i + 16);
    sub_1AE4F66CC();
    swift_bridgeObjectRetain_n();
    sub_1AE889508(v14);
    v16 = v15;
    sub_1AE4F81B8();
    v18 = v16;
    swift_retain();
    sub_1AE85DA44(&v18);
    sub_1AE4F81B8();
    sub_1AE4F9038();
    swift_release();
    sub_1AE60F530();
    if (v5)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (v8 >= v7)
      goto LABEL_20;
    v12 = *(_QWORD *)(v2 + 8 * v8);
    if (!v12)
      break;
LABEL_13:
    v5 = (v12 - 1) & v12;
  }
  v13 = v8 + 1;
  if (v8 + 1 >= v7)
    goto LABEL_20;
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
    goto LABEL_12;
  v13 = v8 + 2;
  if (v8 + 2 >= v7)
    goto LABEL_20;
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
    goto LABEL_12;
  v13 = v8 + 3;
  if (v8 + 3 >= v7)
  {
LABEL_20:
    swift_release();
    return v19;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
LABEL_12:
    v8 = v13;
    goto LABEL_13;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_20;
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_13;
  }
LABEL_22:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1AE85E39C()
{
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  sub_1AE4FB9BC();
  sub_1AE4FB75C();
  sub_1AE925C68();
  sub_1AE925F74();
  sub_1AE4F6648();
  sub_1AE4F665C();
  sub_1AE925F74();
  return 0xD000000000000017;
}

uint64_t sub_1AE85E45C(uint64_t result, char *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  uint64_t v13[5];
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = *a2;
    v4 = swift_bridgeObjectRetain() + 56;
    do
    {
      v5 = *(_QWORD *)(v4 - 16);
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)v4;
      v8 = *(_QWORD *)(v4 + 8);
      v9 = *(_QWORD *)(v4 + 48);
      v10 = *(_QWORD *)(v4 + 56);
      v13[0] = *(_QWORD *)(v4 - 24);
      v13[1] = v5;
      v13[2] = v6;
      v13[3] = v7;
      v13[4] = v8;
      v11 = *(_OWORD *)(v4 + 32);
      v14 = *(_OWORD *)(v4 + 16);
      v15 = v11;
      v16 = v9;
      v17 = v10;
      v12 = v3;
      sub_1AE4F6708();
      sub_1AE4F6804();
      sub_1AE4F66C4();
      sub_1AE4F6730();
      swift_bridgeObjectRetain();
      sub_1AE4F67A4();
      sub_1AE85E568(v13, &v12, 0);
      sub_1AE4F67AC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AE4F81B8();
      sub_1AE4F665C();
      v4 += 88;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AE85E568(uint64_t *a1, char *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[2];
  char v36;

  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v30 = a1[1];
  v31 = a1[5];
  v26 = a1[6];
  v27 = v6;
  v7 = a1[8];
  v32 = a1[7];
  v8 = a1[9];
  v28 = *a1;
  v29 = a1[10];
  v9 = *a2;
  if (*a2)
  {
    v10 = sub_1AE926D60();
    sub_1AE4F9038();
    if (v8)
      v11 = v7;
    else
      v11 = 0;
    v12 = 0xE000000000000000;
    if (v8)
      v12 = v8;
    if ((v10 & 1) != 0)
    {
      v13 = v5;
    }
    else
    {
      v6 = v11;
      v13 = v12;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = v5;
  }
  swift_bridgeObjectRetain();
  sub_1AE4FB9BC();
  if (*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16))
  {
    sub_1AE4F6730();
    sub_1AE536EDC(v6, v13);
    if ((v14 & 1) != 0)
    {
      sub_1AE507C94();
      v17 = *v15;
      v16 = v15[1];
      v18 = v15[2];
      v19 = v15[3];
      sub_1AE50A7B8();
      sub_1AE4FB75C();
      sub_1AE4F66CC();
      sub_1AE4F81B8();
      *(_QWORD *)&v33 = v17;
      *((_QWORD *)&v33 + 1) = v16;
      *(_QWORD *)&v34 = v18;
      *((_QWORD *)&v34 + 1) = v19;
      goto LABEL_16;
    }
    sub_1AE4F81B8();
  }
  sub_1AE50A7B8();
  sub_1AE4F6730();
  sub_1AE501548(&qword_1EEDA4858);
  *(_QWORD *)&v33 = v6;
  *((_QWORD *)&v33 + 1) = v13;
  v34 = (unint64_t)sub_1AE925C98();
  sub_1AE4FB9BC();
  sub_1AE4F6730();
  sub_1AE8DD234();
  v20 = *(_QWORD *)(*(_QWORD *)(v3 + 24) + 16);
  sub_1AE8DD574(v20);
  v21 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v21 + 16) = v20 + 1;
  v22 = v21 + 16 * v20;
  *(_QWORD *)(v22 + 32) = v6;
  *(_QWORD *)(v22 + 40) = v13;
  sub_1AE50A7B8();
LABEL_16:
  if ((a3 & 1) != 0)
    *((_QWORD *)&v34 + 1) = v4;
  sub_1AE501548((uint64_t *)&unk_1EED9C8C0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE934250;
  *(_QWORD *)(inited + 32) = v28;
  *(_QWORD *)(inited + 40) = v30;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v27;
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = v31;
  *(_QWORD *)(inited + 80) = v26;
  *(_QWORD *)(inited + 88) = v32;
  *(_QWORD *)(inited + 96) = v7;
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 112) = v29;
  sub_1AE4FB764();
  sub_1AE4F66C4();
  sub_1AE4F67A4();
  sub_1AE4F6804();
  sub_1AE4F6708();
  sub_1AE4F66CC();
  sub_1AE8822F0(inited);
  swift_setDeallocating();
  sub_1AE85EB1C();
  v35[0] = v33;
  v35[1] = v34;
  v36 = v9;
  sub_1AE4FB9BC();
  sub_1AE654F38(v35, v6, v13);
  sub_1AE508500();
  return sub_1AE4F81B8();
}

uint64_t sub_1AE85E84C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double *v10;
  unint64_t v11;
  double v12;
  double v13;
  char v14;
  double *v15;
  unint64_t v16;
  double v17;
  double v18;
  char v20;

  v4 = *a1;
  v5 = a1[1];
  v7 = *a2;
  v6 = a2[1];
  v8 = a3 + 16;
  sub_1AE50895C();
  if (*(_QWORD *)(*(_QWORD *)(a3 + 16) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1AE536EDC(v4, v5);
    if ((v9 & 1) != 0)
    {
      sub_1AE507C94();
      v12 = *v10;
      v11 = *((_QWORD *)v10 + 1);
      v13 = v10[3];
      sub_1AE4F7804();
      sub_1AE4F6708();
      sub_1AE4F6730();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
  }
  sub_1AE4F7804();
  sub_1AE501548(&qword_1EEDA4858);
  sub_1AE925C98();
  v12 = 0.0;
  v13 = 0.0;
  v11 = 0xE000000000000000;
LABEL_6:
  sub_1AE50895C();
  if (*(_QWORD *)(*(_QWORD *)v8 + 16))
  {
    sub_1AE4F6804();
    sub_1AE536EDC(v7, v6);
    if ((v14 & 1) != 0)
    {
      sub_1AE507C94();
      v17 = *v15;
      v16 = *((_QWORD *)v15 + 1);
      v18 = v15[3];
      sub_1AE4F7804();
      sub_1AE4F67A4();
      sub_1AE4F66CC();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
  }
  sub_1AE4F7804();
  sub_1AE501548(&qword_1EEDA4858);
  sub_1AE925C98();
  v17 = 0.0;
  v18 = 0.0;
  v16 = 0xE000000000000000;
LABEL_11:
  if (v13 == v18)
  {
    if (*(_QWORD *)&v17 == *(_QWORD *)&v12 && v16 == v11)
      v20 = 0;
    else
      v20 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v18 < v13;
  }
  return v20 & 1;
}

uint64_t sub_1AE85EA60()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AE85EA84()
{
  sub_1AE85EA60();
  sub_1AE4FBE44();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResultGraph()
{
  return objc_opt_self();
}

unint64_t sub_1AE85EABC()
{
  return sub_1AE85E39C();
}

uint64_t sub_1AE85EADC()
{
  swift_arrayDestroy();
  sub_1AE4FBE44();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE85EB04()
{
  return sub_1AE85EB5C((uint64_t *)&unk_1EEDA4860);
}

uint64_t sub_1AE85EB10()
{
  return sub_1AE85EB5C(&qword_1ED319E58);
}

uint64_t sub_1AE85EB1C()
{
  swift_arrayDestroy();
  sub_1AE4FBE44();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE85EB44()
{
  return sub_1AE85EB5C(&qword_1EED94CC8);
}

uint64_t sub_1AE85EB50()
{
  return sub_1AE85EB5C(&qword_1ED30FC40);
}

uint64_t sub_1AE85EB5C(uint64_t *a1)
{
  sub_1AE501548(a1);
  swift_arrayDestroy();
  sub_1AE4FBE44();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE85EB9C()
{
  swift_arrayDestroy();
  sub_1AE4FBE44();
  return swift_deallocClassInstance();
}

void sub_1AE85EBC4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char v17;
  double *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  double *v41;
  double v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  double *v118;
  char *v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;

  v3 = a1[1];
  v4 = sub_1AE926D0C();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1AE85F3C8(0, v3, 1, a1);
      return;
    }
    goto LABEL_164;
  }
  v111 = v4;
  sub_1AE519600(v3 / 2);
  v109 = a1;
  v110 = v5;
  v119 = v6;
  v112 = v3;
  if (v3 <= 0)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    v49 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_127:
    if (v49 < 2)
    {
LABEL_140:
      swift_bridgeObjectRelease();
      if (v112 >= -1)
      {
        *(_QWORD *)(v110 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_169;
    }
    v98 = *v109;
    while (1)
    {
      v99 = v49 - 2;
      if (v49 < 2)
        break;
      if (!v98)
        goto LABEL_173;
      v100 = v9;
      v101 = *(_QWORD *)(v9 + 32 + 16 * v99);
      v102 = *(_QWORD *)(v9 + 32 + 16 * (v49 - 1) + 8);
      sub_1AE85F51C((char *)(v98 + 88 * v101), (char *)(v98 + 88 * *(_QWORD *)(v9 + 32 + 16 * (v49 - 1))), v98 + 88 * v102, v119);
      if (v1)
        goto LABEL_123;
      if (v102 < v101)
        goto LABEL_159;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v103 = v100;
      else
        sub_1AE8893F4();
      if (v99 >= *(_QWORD *)(v103 + 16))
        goto LABEL_160;
      v104 = (_QWORD *)(v103 + 32 + 16 * v99);
      *v104 = v101;
      v104[1] = v102;
      v105 = *(_QWORD *)(v103 + 16);
      if (v49 > v105)
        goto LABEL_161;
      v106 = v103;
      memmove((void *)(v103 + 32 + 16 * (v49 - 1)), (const void *)(v103 + 32 + 16 * v49), 16 * (v105 - v49));
      v9 = v106;
      *(_QWORD *)(v106 + 16) = v105 - 1;
      v49 = v105 - 1;
      if (v105 <= 2)
        goto LABEL_140;
    }
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
    goto LABEL_166;
  }
  v7 = 0;
  v8 = *a1;
  v107 = *a1 + 80;
  v108 = *a1 + 16;
  v9 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v10 = v7;
    v11 = v7 + 1;
    v115 = v9;
    v116 = v7;
    if (v7 + 1 >= v3)
      goto LABEL_47;
    v12 = v8 + 88 * v11;
    v13 = *(double *)(v12 + 16);
    v14 = v8 + 88 * v7;
    v15 = *(double *)(v14 + 16);
    if (v13 < v15)
    {
      v16 = v7 + 2;
      if (v7 + 2 >= v3)
        goto LABEL_38;
      v17 = 1;
      goto LABEL_19;
    }
    if (v13 == v15)
    {
      if (*(_QWORD *)v12 != *(_QWORD *)v14 || *(_QWORD *)(v12 + 8) != *(_QWORD *)(v14 + 8))
      {
        v17 = sub_1AE926D60();
        v16 = v10 + 2;
        if (v10 + 2 >= v3)
          goto LABEL_34;
        goto LABEL_19;
      }
      v16 = v7 + 2;
      if (v7 + 2 >= v3)
        goto LABEL_46;
    }
    else
    {
      v16 = v7 + 2;
      if (v7 + 2 >= v3)
        goto LABEL_46;
    }
    v17 = 0;
LABEL_19:
    v19 = (double *)(v108 + 88 * v16);
    v20 = v16;
    do
    {
      v16 = v20;
      v21 = v8 + 88 * v11;
      v22 = *(double *)(v21 + 16);
      if (*v19 >= v22)
      {
        if (*v19 != v22
          || (*((_QWORD *)v19 - 2) == *(_QWORD *)v21 ? (v23 = *((_QWORD *)v19 - 1) == *(_QWORD *)(v21 + 8)) : (v23 = 0),
              v23))
        {
          if ((v17 & 1) == 0)
            goto LABEL_31;
          v10 = v116;
LABEL_37:
          if (v16 >= v10)
          {
LABEL_38:
            if (v10 >= v16)
            {
LABEL_46:
              v11 = v16;
              goto LABEL_47;
            }
            v24 = v10;
            v25 = 88 * v16;
            v113 = v16;
            v26 = v16;
            v27 = v24;
            v28 = 88 * v24;
            do
            {
              if (v27 != --v26)
              {
                if (!v8)
                  goto LABEL_172;
                v29 = v8 + v25;
                v30 = *(_QWORD *)(v8 + v28);
                v31 = *(_QWORD *)(v8 + v28 + 8);
                v32 = *(_QWORD *)(v8 + v28 + 16);
                v33 = *(_QWORD *)(v8 + v28 + 24);
                v123 = *(_QWORD *)(v8 + v28 + 32);
                v127 = *(_QWORD *)(v8 + v28 + 72);
                v125 = *(_QWORD *)(v8 + v28 + 80);
                v120 = *(_OWORD *)(v8 + v28 + 40);
                v117 = *(_OWORD *)(v8 + v28 + 56);
                memmove((void *)(v8 + v28), (const void *)(v8 + v25 - 88), 0x58uLL);
                *(_QWORD *)(v29 - 88) = v30;
                *(_QWORD *)(v29 - 80) = v31;
                *(_QWORD *)(v29 - 72) = v32;
                *(_QWORD *)(v29 - 64) = v33;
                *(_QWORD *)(v29 - 56) = v123;
                *(_OWORD *)(v29 - 48) = v120;
                *(_OWORD *)(v29 - 32) = v117;
                *(_QWORD *)(v29 - 16) = v127;
                *(_QWORD *)(v29 - 8) = v125;
              }
              ++v27;
              v25 -= 88;
              v28 += 88;
            }
            while (v27 < v26);
            v3 = v112;
            v11 = v113;
LABEL_45:
            v10 = v116;
            goto LABEL_47;
          }
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
          return;
        }
        if (((v17 ^ sub_1AE926D60()) & 1) != 0)
          goto LABEL_33;
      }
      else if ((v17 & 1) == 0)
      {
        v11 = v16;
        goto LABEL_45;
      }
LABEL_31:
      v20 = v16 + 1;
      v19 += 11;
      v11 = v16;
    }
    while (v16 + 1 < v3);
    ++v16;
LABEL_33:
    v10 = v116;
LABEL_34:
    v11 = v16;
    if ((v17 & 1) != 0)
      goto LABEL_37;
LABEL_47:
    if (v11 >= v3)
      goto LABEL_69;
    if (__OFSUB__(v11, v10))
      goto LABEL_163;
    if (v11 - v10 >= v111)
      goto LABEL_69;
    if (__OFADD__(v10, v111))
      goto LABEL_167;
    if (v10 + v111 >= v3)
      v34 = v3;
    else
      v34 = v10 + v111;
    if (v34 < v10)
      goto LABEL_168;
    if (v11 != v34)
    {
      v35 = (double *)(v107 + 88 * v11);
      v114 = v34;
      do
      {
        v121 = v11;
        v36 = v8 + 88 * v11;
        v37 = *(_QWORD *)v36;
        v38 = *(_QWORD *)(v36 + 8);
        v39 = *(double *)(v36 + 16);
        v40 = v10;
        v118 = v35;
        v41 = v35;
        do
        {
          v42 = *(v41 - 19);
          if (v39 >= v42)
          {
            if (v39 != v42)
              break;
            v43 = v37 == *((_QWORD *)v41 - 21) && v38 == *((_QWORD *)v41 - 20);
            if (v43 || (sub_1AE926D60() & 1) == 0)
              break;
          }
          if (!v8)
            goto LABEL_170;
          v37 = *((_QWORD *)v41 - 10);
          v38 = *((_QWORD *)v41 - 9);
          v39 = *(v41 - 8);
          v44 = *((_QWORD *)v41 - 7);
          v45 = *((_QWORD *)v41 - 6);
          v46 = *v41;
          v128 = *((_QWORD *)v41 - 1);
          v126 = *(_OWORD *)(v41 - 5);
          v124 = *(_OWORD *)(v41 - 3);
          memcpy(v41 - 10, v41 - 21, 0x58uLL);
          *(v41 - 11) = v46;
          v41 -= 11;
          *((_QWORD *)v41 - 10) = v37;
          *((_QWORD *)v41 - 9) = v38;
          *(v41 - 8) = v39;
          *((_QWORD *)v41 - 7) = v44;
          *((_QWORD *)v41 - 6) = v45;
          *(_OWORD *)(v41 - 5) = v126;
          *(_OWORD *)(v41 - 3) = v124;
          ++v40;
          *((_QWORD *)v41 - 1) = v128;
        }
        while (v121 != v40);
        v11 = v121 + 1;
        v10 = v116;
        v35 = v118 + 11;
      }
      while (v121 + 1 != v114);
      v11 = v114;
    }
LABEL_69:
    if (v11 < v10)
      goto LABEL_162;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v9 = v115;
    else
      sub_1AE889310(0, *(_QWORD *)(v115 + 16) + 1, 1, (char *)v115);
    v48 = *(_QWORD *)(v9 + 16);
    v47 = *(_QWORD *)(v9 + 24);
    v49 = v48 + 1;
    v122 = v11;
    if (v48 >= v47 >> 1)
      sub_1AE889310(v47 > 1, v48 + 1, 1, (char *)v9);
    *(_QWORD *)(v9 + 16) = v49;
    v50 = v9 + 32;
    v51 = (uint64_t *)(v9 + 32 + 16 * v48);
    *v51 = v116;
    v51[1] = v122;
    if (v48)
      break;
    v49 = 1;
LABEL_117:
    v3 = v112;
    v7 = v122;
    if (v122 >= v112)
      goto LABEL_127;
  }
  while (1)
  {
    v52 = v49 - 1;
    if (v49 >= 4)
    {
      v57 = v50 + 16 * v49;
      v58 = *(_QWORD *)(v57 - 64);
      v59 = *(_QWORD *)(v57 - 56);
      v63 = __OFSUB__(v59, v58);
      v60 = v59 - v58;
      if (v63)
        goto LABEL_147;
      v62 = *(_QWORD *)(v57 - 48);
      v61 = *(_QWORD *)(v57 - 40);
      v63 = __OFSUB__(v61, v62);
      v55 = v61 - v62;
      v56 = v63;
      if (v63)
        goto LABEL_148;
      v64 = v49 - 2;
      v65 = (uint64_t *)(v50 + 16 * (v49 - 2));
      v67 = *v65;
      v66 = v65[1];
      v63 = __OFSUB__(v66, v67);
      v68 = v66 - v67;
      if (v63)
        goto LABEL_149;
      v63 = __OFADD__(v55, v68);
      v69 = v55 + v68;
      if (v63)
        goto LABEL_151;
      if (v69 >= v60)
      {
        v87 = (uint64_t *)(v50 + 16 * v52);
        v89 = *v87;
        v88 = v87[1];
        v63 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v63)
          goto LABEL_157;
        v80 = v55 < v90;
        goto LABEL_106;
      }
    }
    else
    {
      if (v49 != 3)
      {
        v81 = *(_QWORD *)(v9 + 32);
        v82 = *(_QWORD *)(v9 + 40);
        v63 = __OFSUB__(v82, v81);
        v74 = v82 - v81;
        v75 = v63;
        goto LABEL_100;
      }
      v54 = *(_QWORD *)(v9 + 32);
      v53 = *(_QWORD *)(v9 + 40);
      v63 = __OFSUB__(v53, v54);
      v55 = v53 - v54;
      v56 = v63;
    }
    if ((v56 & 1) != 0)
      goto LABEL_150;
    v64 = v49 - 2;
    v70 = (uint64_t *)(v50 + 16 * (v49 - 2));
    v72 = *v70;
    v71 = v70[1];
    v73 = __OFSUB__(v71, v72);
    v74 = v71 - v72;
    v75 = v73;
    if (v73)
      goto LABEL_152;
    v76 = (uint64_t *)(v50 + 16 * v52);
    v78 = *v76;
    v77 = v76[1];
    v63 = __OFSUB__(v77, v78);
    v79 = v77 - v78;
    if (v63)
      goto LABEL_155;
    if (__OFADD__(v74, v79))
      goto LABEL_156;
    if (v74 + v79 >= v55)
    {
      v80 = v55 < v79;
LABEL_106:
      if (v80)
        v52 = v64;
      goto LABEL_108;
    }
LABEL_100:
    if ((v75 & 1) != 0)
      goto LABEL_153;
    v83 = (uint64_t *)(v50 + 16 * v52);
    v85 = *v83;
    v84 = v83[1];
    v63 = __OFSUB__(v84, v85);
    v86 = v84 - v85;
    if (v63)
      goto LABEL_154;
    if (v86 < v74)
      goto LABEL_117;
LABEL_108:
    v91 = v52 - 1;
    if (v52 - 1 >= v49)
    {
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
      goto LABEL_158;
    }
    if (!v8)
      goto LABEL_171;
    v92 = v9;
    v93 = (uint64_t *)(v50 + 16 * v91);
    v94 = *v93;
    v95 = (_QWORD *)(v50 + 16 * v52);
    v96 = v95[1];
    sub_1AE85F51C((char *)(v8 + 88 * *v93), (char *)(v8 + 88 * *v95), v8 + 88 * v96, v119);
    if (v1)
      break;
    if (v96 < v94)
      goto LABEL_144;
    if (v52 > *(_QWORD *)(v92 + 16))
      goto LABEL_145;
    *v93 = v94;
    *(_QWORD *)(v50 + 16 * v91 + 8) = v96;
    v97 = *(_QWORD *)(v92 + 16);
    if (v52 >= v97)
      goto LABEL_146;
    v49 = v97 - 1;
    memmove((void *)(v50 + 16 * v52), v95 + 2, 16 * (v97 - 1 - v52));
    v9 = v92;
    *(_QWORD *)(v92 + 16) = v97 - 1;
    if (v97 <= 2)
      goto LABEL_117;
  }
LABEL_123:
  swift_bridgeObjectRelease();
  if (v112 < -1)
    goto LABEL_165;
  *(_QWORD *)(v110 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1AE85F3C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  double *v5;
  double *v6;
  double v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  double v11;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v17;
  double *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v17 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v19 = *a4;
    v5 = (double *)(*a4 + 88 * a3 + 80);
    while (2)
    {
      v6 = (double *)(v19 + 88 * v4);
      v7 = *v6;
      v8 = *((_QWORD *)v6 + 1);
      v9 = v6[2];
      v10 = v17;
      v18 = v5;
      do
      {
        v11 = *(v5 - 19);
        if (v9 >= v11)
        {
          if (v9 != v11)
            break;
          if (*(_QWORD *)&v7 == *((_QWORD *)v5 - 21) && v8 == *((_QWORD *)v5 - 20))
            break;
          result = sub_1AE926D60();
          if ((result & 1) == 0)
            break;
        }
        if (!v19)
        {
          __break(1u);
          return result;
        }
        v7 = *(v5 - 10);
        v8 = *((_QWORD *)v5 - 9);
        v9 = *(v5 - 8);
        v14 = *((_QWORD *)v5 - 7);
        v13 = *((_QWORD *)v5 - 6);
        v15 = *v5;
        v22 = *((_QWORD *)v5 - 1);
        v20 = *(_OWORD *)(v5 - 3);
        v21 = *(_OWORD *)(v5 - 5);
        result = (uint64_t)memcpy(v5 - 10, v5 - 21, 0x58uLL);
        *(v5 - 11) = v15;
        v5 -= 11;
        *(v5 - 10) = v7;
        *((_QWORD *)v5 - 9) = v8;
        *(v5 - 8) = v9;
        *((_QWORD *)v5 - 7) = v14;
        *((_QWORD *)v5 - 6) = v13;
        *(_OWORD *)(v5 - 5) = v21;
        *(_OWORD *)(v5 - 3) = v20;
        ++v10;
        *((_QWORD *)v5 - 1) = v22;
      }
      while (v4 != v10);
      ++v4;
      v5 = v18 + 11;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1AE85F51C(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  double v14;
  char *v15;
  BOOL v17;
  char *v18;
  char *v19;
  char *v20;
  double v21;
  double v22;
  BOOL v23;
  BOOL v25;
  BOOL v26;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 88;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 88;
  if (v9 >= v11)
  {
    sub_1AE51FD38(a2, (uint64_t)(a3 - (_QWORD)a2) / 88, a4);
    v12 = (unint64_t)&v4[88 * v11];
    if (v7 >= v6 || v10 < 88)
      goto LABEL_49;
    v18 = (char *)(a3 - 88);
    while (1)
    {
      v19 = v18 + 88;
      v20 = (char *)(v12 - 88);
      v21 = *(double *)(v12 - 72);
      v22 = *((double *)v6 - 9);
      if (v21 < v22
        || v21 == v22
        && (*(_QWORD *)(v12 - 88) == *((_QWORD *)v6 - 11)
          ? (v25 = *(_QWORD *)(v12 - 80) == *((_QWORD *)v6 - 10))
          : (v25 = 0),
            !v25 && (sub_1AE926D60() & 1) != 0))
      {
        v23 = v19 != v6 || v18 >= v6;
        v20 = v6 - 88;
        v6 -= 88;
        if (!v23)
          goto LABEL_32;
      }
      else
      {
        v26 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 88;
        if (!v26)
          goto LABEL_32;
      }
      memmove(v18, v20, 0x58uLL);
LABEL_32:
      v18 -= 88;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_49;
    }
  }
  sub_1AE51FD38(a1, (a2 - a1) / 88, a4);
  v12 = (unint64_t)&v4[88 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 88)
  {
    while (1)
    {
      v13 = *((double *)v6 + 2);
      v14 = *((double *)v4 + 2);
      if (v13 >= v14)
      {
        if (v13 != v14)
          break;
        v17 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v17 || (sub_1AE926D60() & 1) == 0)
          break;
      }
      v15 = v6;
      v17 = v7 == v6;
      v6 += 88;
      if (!v17)
        goto LABEL_6;
LABEL_7:
      v7 += 88;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_48;
    }
    v15 = v4;
    v17 = v7 == v4;
    v4 += 88;
    if (v17)
      goto LABEL_7;
LABEL_6:
    memmove(v7, v15, 0x58uLL);
    goto LABEL_7;
  }
LABEL_48:
  v6 = v7;
LABEL_49:
  sub_1AE51FD38(v4, (uint64_t)(v12 - (_QWORD)v4) / 88, v6);
  return 1;
}

uint64_t sub_1AE85F710(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE85F744()
{
  return swift_endAccess();
}

uint64_t sub_1AE85F760()
{
  return swift_endAccess();
}

uint64_t sub_1AE85F768()
{
  return sub_1AE926A54();
}

void sub_1AE85F770()
{
  sub_1AE51A1D4();
}

uint64_t sub_1AE85F77C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

unint64_t sub_1AE85F788()
{
  return 0xD00000000000001ALL;
}

void sub_1AE85F7A8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 48);
}

uint64_t sub_1AE85F7B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AE85F7E4()
{
  return sub_1AE500734(0x797469746E65);
}

uint64_t sub_1AE85F7F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AE85F840(a1);
}

unint64_t sub_1AE85F808()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_1AE85F824()
{
  return 0xD000000000000010;
}

uint64_t sub_1AE85F840@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int16 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int16 v54;
  uint64_t v55;

  sub_1AE572374();
  sub_1AE5724EC(0x7461636964657270, 0xE900000000000065, v2, v3, v4, v5, v6, v7, v19, v21, v23, v26, v28, v30, v32, v34, v36, v39, v42,
    v45);
  sub_1AE572398();
  HIDWORD(v24) = v54;
  sub_1AE5724EC(0xD000000000000015, 0x80000001AE97B790, v8, v9, v10, v11, v12, v13, v20, v49, v24, v53, v52, v51, v50, v55, v37, v40, v43,
    v46);
  sub_1AE571708();
  v15 = v14;
  v17 = v16;
  result = swift_release();
  *(_QWORD *)a1 = v35;
  *(_QWORD *)(a1 + 8) = v33;
  *(_QWORD *)(a1 + 16) = v31;
  *(_QWORD *)(a1 + 24) = v29;
  *(_QWORD *)(a1 + 32) = v27;
  *(_WORD *)(a1 + 40) = v25;
  *(_QWORD *)(a1 + 48) = v22;
  *(_QWORD *)(a1 + 56) = v38;
  *(_QWORD *)(a1 + 64) = v41;
  *(_QWORD *)(a1 + 72) = v44;
  *(_QWORD *)(a1 + 80) = v47;
  *(_WORD *)(a1 + 88) = v48;
  *(_QWORD *)(a1 + 96) = v15;
  *(_QWORD *)(a1 + 104) = v17;
  return result;
}

unint64_t sub_1AE85F9F8()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1AE85FA14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AE4FBC68(*(_QWORD *)(v1 + 16), a1);
  return sub_1AE4FBC60();
}

uint64_t sub_1AE85FA3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AE4FBC68(*(_QWORD *)(v1 + 64), a1);
  return sub_1AE4FBC60();
}

uint64_t sub_1AE85FA64()
{
  return sub_1AE500734(0x656C706F6570);
}

void type metadata accessor for EntitySubgraphViewTripleRecord()
{
  sub_1AE4F67D4();
}

void type metadata accessor for IFContextSubgraphViewTripleRecord()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE85FAA4(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_1AE4F665C();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_1AE4F665C();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  sub_1AE4F665C();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  sub_1AE4F665C();
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for PeopleSubgraphViewTripleRecord()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE85FB8C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE85FBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *sub_1AE85FC18(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = a2[4];
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[4] = v4;
  return a1;
}

uint64_t sub_1AE85FC98(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t type metadata accessor for SearchableSubgraphView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SearchableSubgraphView);
}

uint64_t sub_1AE85FCF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE5D00D8(a1, a2, a3, (uint64_t (*)(void))sub_1AE85FD0C, (uint64_t (*)(void))sub_1AE85FD48);
}

unint64_t sub_1AE85FD0C()
{
  unint64_t result;

  result = qword_1EEDA4870;
  if (!qword_1EEDA4870)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE964928, &unk_1E5DC2F08);
    atomic_store(result, (unint64_t *)&qword_1EEDA4870);
  }
  return result;
}

unint64_t sub_1AE85FD48()
{
  unint64_t result;

  result = qword_1EEDA4878;
  if (!qword_1EEDA4878)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE964970, &unk_1E5DC2F08);
    atomic_store(result, (unint64_t *)&qword_1EEDA4878);
  }
  return result;
}

uint64_t sub_1AE85FD84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE5D00D8(a1, a2, a3, (uint64_t (*)(void))sub_1AE85FD98, (uint64_t (*)(void))sub_1AE85FDD4);
}

unint64_t sub_1AE85FD98()
{
  unint64_t result;

  result = qword_1EEDA4880;
  if (!qword_1EEDA4880)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9649CC, &unk_1E5DADB48);
    atomic_store(result, (unint64_t *)&qword_1EEDA4880);
  }
  return result;
}

unint64_t sub_1AE85FDD4()
{
  unint64_t result;

  result = qword_1EEDA4888;
  if (!qword_1EEDA4888)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE964A14, &unk_1E5DADB48);
    atomic_store(result, (unint64_t *)&qword_1EEDA4888);
  }
  return result;
}

uint64_t sub_1AE85FE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE5D00D8(a1, a2, a3, (uint64_t (*)(void))sub_1AE85FE24, (uint64_t (*)(void))sub_1AE85FE60);
}

unint64_t sub_1AE85FE24()
{
  unint64_t result;

  result = qword_1EED93E30;
  if (!qword_1EED93E30)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE964A70, &unk_1E5DC2C48);
    atomic_store(result, (unint64_t *)&qword_1EED93E30);
  }
  return result;
}

unint64_t sub_1AE85FE60()
{
  unint64_t result;

  result = qword_1EED94958;
  if (!qword_1EED94958)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE964AB8, &unk_1E5DC2C48);
    atomic_store(result, (unint64_t *)&qword_1EED94958);
  }
  return result;
}

uint64_t sub_1AE85FE9C(void *__src)
{
  uint64_t v1;
  uint64_t result;
  _BYTE __dst[105];
  uint64_t v4;

  memcpy(__dst, __src, sizeof(__dst));
  swift_getObjectType();
  sub_1AE9262B0();
  result = sub_1AE924CCC();
  if (!v1)
    return v4;
  return result;
}

uint64_t sub_1AE85FF74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X5>, const void *a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  const void *v39;
  int v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[5];
  _BYTE v53[112];
  _BYTE v54[120];

  v45 = a3;
  v39 = a7;
  v37 = a1;
  v35 = a9;
  v15 = sub_1AE925080();
  v43 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v42 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v35 - v18;
  if (a4 == 1)
  {
    v41 = 0;
    v46 = 0;
    v36 = 0;
    v40 = 1;
  }
  else
  {
    v40 = v45 & 1;
    v36 = a5 & 1;
    v41 = a2;
    v46 = a4;
  }
  v20 = *a6;
  v21 = a6[1];
  v38 = v20;
  v22 = *(uint64_t (**)(uint64_t, uint64_t))(a10 + 32);
  swift_bridgeObjectRetain();
  sub_1AE86033C(a2, v45, a4);
  v23 = v22(a8, a10);
  v25 = v24;
  v52[3] = sub_1AE924C9C();
  v52[4] = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8(v52);
  memcpy(v53, v39, 0x69uLL);
  sub_1AE860350(v53, v54);
  sub_1AE860350(v54, &v51);
  v47 = v38;
  v48 = v21;
  v49 = v23;
  v50 = v25;
  TriplesQuery.Clause.Impl.graphIdentifierSQLExpression(config:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE924AC8();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v52);
  if (v46)
  {
    v45 = a10;
    v26 = v46;
    v27 = swift_bridgeObjectRetain();
    v28 = v44;
    sub_1AE8B5744(v27, v26, v36);
    v29 = v28;
    MEMORY[0x1AF454B70](MEMORY[0x1E0D24298], v15);
    v30 = v42;
    sub_1AE924CFC();
    swift_bridgeObjectRelease();
    v31 = v43;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v15);
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v19, v30, v15);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v31 = v43;
    v29 = v44;
    v30 = v42;
  }
  if ((v40 & 1) == 0)
  {
    if (v41 < 0)
    {
      __break(1u);
      return result;
    }
    MEMORY[0x1AF454B70](MEMORY[0x1E0D242B0], v15);
    sub_1AE924F0C();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v15);
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v19, v30, v15);
  }
  MEMORY[0x1AF454B70](MEMORY[0x1E0D24290], v15);
  v33 = sub_1AE924B28();
  if (v29)
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v19, v15);
  v34 = v33;
  result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v19, v15);
  *v35 = v34;
  return result;
}

uint64_t sub_1AE8602D0(void *a1)
{
  return sub_1AE85FE9C(a1);
}

uint64_t sub_1AE860308@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1AE85FF74(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_BYTE *)(v2 + 56), *(uint64_t **)(v2 + 64), *(const void **)(v2 + 72), *(_QWORD *)(v2 + 16), a2, *(_QWORD *)(v2 + 24));
}

uint64_t sub_1AE86033C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

void *sub_1AE860350(const void *a1, void *a2)
{
  _s6ClauseV11MatchClauseVwtk(a2, a1);
  return a2;
}

_QWORD *sub_1AE860394(_QWORD *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    v9 = a2[2];
    *a1 = v5;
    a1[1] = v8;
    v10 = a2[3];
    a1[2] = v9;
    a1[3] = v10;
    v11 = a3[6];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1AE501548(&qword_1ED319190);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = a3[7];
    v16 = a3[8];
    v17 = (_QWORD *)((char *)a1 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    *(_QWORD *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    v20 = a3[9];
    v21 = (_QWORD *)((char *)a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AE860488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1AE501548(&qword_1ED319190);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE860510(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_1AE501548(&qword_1ED319190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  v12 = a3[8];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v16 = a3[9];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1AE8605DC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v6;
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AE501548(&qword_1ED319190);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[7];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[9];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1AE8606F4(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AE501548(&qword_1ED319190);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  return a1;
}

_QWORD *sub_1AE860784(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  v7 = a2[2];
  v8 = a2[3];
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  swift_bridgeObjectRelease();
  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1AE501548(&qword_1ED319190);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  v18 = a3[9];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE86085C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE860868(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1AE501548(&qword_1ED319190);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1AE8608E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1AE8608EC(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = sub_1AE501548(&qword_1ED319190);
    return (_QWORD *)_s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SearchableViewDatabaseTable()
{
  uint64_t result;

  result = qword_1ED31B8F8;
  if (!qword_1ED31B8F8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1AE860994()
{
  unint64_t v0;

  sub_1AE56C1D4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1AE860A18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  float v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[9];
  uint64_t v30;

  v3 = MEMORY[0x1E0DEE9D8];
  v30 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = *(_QWORD *)(sub_1AE925644() - 8);
    v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    v23 = v8;
    v24 = a2;
    do
    {
      v9 = sub_1AE925614();
      if (*(_QWORD *)(a2 + 16))
      {
        v10 = sub_1AE53F5F0(v9);
        if ((v11 & 1) != 0)
        {
          v12 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 72 * v10);
          v13 = *v12;
          v14 = v12[2];
          v27 = v12[3];
          v28 = v12[1];
          v15 = v12[4];
          v16 = v12[6];
          v25 = v12[7];
          v26 = v12[5];
          v17 = v12[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v18 = sub_1AE925614();
          sub_1AE925608();
          v20 = v19;
          v29[0] = v13;
          v29[1] = v28;
          v29[2] = v14;
          v29[3] = v27;
          v29[4] = v15;
          v29[5] = v26;
          v29[6] = v16;
          v29[7] = v25;
          v29[8] = v17;
          type metadata accessor for SemanticSearchService.SemanticSearchResult();
          swift_allocObject();
          v21 = SemanticSearchService.SemanticSearchResult.init(assetId:similarity:semanticSearchItem:)(v18, (uint64_t)v29, v20);
          MEMORY[0x1AF4533D0](v21);
          if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1AE926220();
          sub_1AE92625C();
          sub_1AE9261FC();
          v8 = v23;
          a2 = v24;
        }
      }
      v7 += v8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v3 = v30;
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1AE860BF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v16 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_21;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      v7 = 0;
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
      v15 = a2;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x1AF453B80](v7, a1);
LABEL_7:
        v10 = v7 + 1;
        if (__OFADD__(v7, 1))
          goto LABEL_20;
        v11 = *(_QWORD *)(v9 + 80);
        if (v11 && (*(_QWORD *)(v9 + 72) == a2 ? (v12 = v11 == a3) : (v12 = 0), !v12 && (sub_1AE926D60() & 1) != 0))
        {
          sub_1AE9269B8();
          sub_1AE9269E8();
          v8 = a1 & 0xFFFFFFFFFFFFFF8;
          sub_1AE9269F4();
          sub_1AE9269C4();
          a2 = v15;
        }
        else
        {
          swift_release();
        }
        ++v7;
        if (v10 == v6)
        {
          v13 = v16;
          goto LABEL_23;
        }
      }
      if (v7 < *(_QWORD *)(v8 + 16))
        break;
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      v6 = sub_1AE926AD8();
      if (!v6)
        goto LABEL_22;
    }
    v9 = *(_QWORD *)(a1 + 8 * v7 + 32);
    swift_retain();
    goto LABEL_7;
  }
LABEL_22:
  v13 = MEMORY[0x1E0DEE9D8];
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1AE860DA0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v16 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_21;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      v7 = 0;
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
      v15 = a2;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x1AF453B80](v7, a1);
LABEL_7:
        v10 = v7 + 1;
        if (__OFADD__(v7, 1))
          goto LABEL_20;
        v11 = *(_QWORD *)(v9 + 64);
        if (v11 && (*(_QWORD *)(v9 + 56) == a2 ? (v12 = v11 == a3) : (v12 = 0), !v12 && (sub_1AE926D60() & 1) != 0))
        {
          sub_1AE9269B8();
          sub_1AE9269E8();
          v8 = a1 & 0xFFFFFFFFFFFFFF8;
          sub_1AE9269F4();
          sub_1AE9269C4();
          a2 = v15;
        }
        else
        {
          swift_release();
        }
        ++v7;
        if (v10 == v6)
        {
          v13 = v16;
          goto LABEL_23;
        }
      }
      if (v7 < *(_QWORD *)(v8 + 16))
        break;
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      v6 = sub_1AE926AD8();
      if (!v6)
        goto LABEL_22;
    }
    v9 = *(_QWORD *)(a1 + 8 * v7 + 32);
    swift_retain();
    goto LABEL_7;
  }
LABEL_22:
  v13 = MEMORY[0x1E0DEE9D8];
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1AE860F50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  float v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;

  v5 = sub_1AE925644();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v25 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - v10;
  v12 = MEMORY[0x1E0DEE9D8];
  v26 = MEMORY[0x1E0DEE9D8];
  v24 = *(_QWORD *)(a1 + 16);
  if (v24)
  {
    v20 = v2;
    v21 = v5;
    v13 = 0;
    v22 = a2;
    v23 = a1;
    while (v13 < *(_QWORD *)(a1 + 16))
    {
      v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v15 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, a1 + v14 + v15 * v13, v5);
      sub_1AE925608();
      if (*(float *)(*(_QWORD *)(a2 + 40) + 24) >= v16)
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      }
      else
      {
        v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v17(v25, v11, v5);
        v18 = v26;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE5226C0();
          v18 = v26;
        }
        v19 = *(_QWORD *)(v18 + 16);
        if (v19 >= *(_QWORD *)(v18 + 24) >> 1)
        {
          sub_1AE5226C0();
          v18 = v26;
        }
        *(_QWORD *)(v18 + 16) = v19 + 1;
        v5 = v21;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v17)(v18 + v14 + v19 * v15, v25, v21);
        v26 = v18;
        a2 = v22;
        a1 = v23;
      }
      if (v24 == ++v13)
      {
        v12 = v26;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_release();
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

void sub_1AE861144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int16 v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = BYTE2(a2);
  v6 = BYTE3(a2);
  v7 = BYTE4(a2);
  v8 = BYTE5(a2);
  sub_1AE5925D0((uint64_t)&v3, a3 / 4);
}

BOOL static SemanticSearchServiceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SemanticSearchServiceError.hash(into:)()
{
  return sub_1AE926ED4();
}

uint64_t SemanticSearchServiceError.hashValue.getter()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  return sub_1AE926F10();
}

uint64_t static SemanticSearchService.SemanticSearchOptions.defaultSemanticSearchOptions.getter()
{
  type metadata accessor for SemanticSearchService.SemanticSearchOptions();
  return swift_initStaticObject();
}

uint64_t type metadata accessor for SemanticSearchService.SemanticSearchOptions()
{
  return objc_opt_self();
}

uint64_t SemanticSearchService.__allocating_init(options:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SemanticSearchService.init(options:)(a1);
  return v2;
}

void SemanticSearchService.init(options:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  id *v17;
  void *v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _BYTE *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42[2];

  v2 = v1;
  v42[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1AE9255FC();
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  v8 = v7 - v6;
  sub_1AE924780();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F666C();
  v10 = sub_1AE9255D8();
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F686C();
  v39 = v12;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v35 - v14;
  if (qword_1ED31C9B0 != -1)
    swift_once();
  v16 = (char *)qword_1ED31C9A0;
  *(_QWORD *)(v2 + 16) = qword_1ED31C9A0;
  v17 = (id *)(v2 + 16);
  v18 = *(void **)&v16[OBJC_IVAR___GDSwiftViewService_accessRequester];
  v19 = v16;
  swift_unknownObjectRetain();
  v20 = (void *)sub_1AE925E18();
  v42[0] = 0;
  v21 = objc_msgSend(v18, sel_requestAssertionForViewName_error_, v20, v42);
  swift_unknownObjectRelease();

  v22 = v42[0];
  if (!v21)
  {
    v33 = v42[0];
    sub_1AE9246B4();

    swift_willThrow();
LABEL_8:
    swift_release();

    type metadata accessor for SemanticSearchService();
    swift_deallocPartialClassInstance();
    goto LABEL_9;
  }
  *(_QWORD *)(v2 + 40) = a1;
  v23 = objc_allocWithZone(MEMORY[0x1E0CB3578]);
  swift_retain();
  v24 = v22;
  v25 = objc_msgSend(v23, sel_init);
  *(_QWORD *)(v2 + 48) = v25;
  v17 = (id *)(v2 + 48);
  v26 = v25;
  v27 = sub_1AE863DC8();
  sub_1AE863878(v27, v28, v26);

  v29 = objc_msgSend((id)objc_opt_self(), sel_contextualEmbeddingWithLanguage_, *MEMORY[0x1E0CCDEF8]);
  if (!v29)
  {
    sub_1AE8638BC();
    swift_allocError();
    *v34 = 0;
    swift_willThrow();
    swift_unknownObjectRelease();
    swift_release();

    goto LABEL_8;
  }
  *(_QWORD *)(v2 + 24) = v29;
  v36 = v29;
  v30 = objc_msgSend(v21, sel_viewArtifactURL);
  sub_1AE924744();

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v37 + 104))(v8, *MEMORY[0x1E0DC6700], v38);
  objc_msgSend(*(id *)(v2 + 24), sel_sentenceVectorDimension);
  sub_1AE9255C0();
  v31 = v40;
  v32 = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 16))(v39, v15, v41);
  sub_1AE9255B4();
  swift_allocObject();
  *(_QWORD *)(v2 + 32) = sub_1AE925578();
  sub_1AE92559C();

  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
LABEL_9:
  sub_1AE4F667C();
}

id *SemanticSearchService.deinit()
{
  id *v0;

  sub_1AE9255A8();

  swift_release();
  swift_release();

  return v0;
}

uint64_t SemanticSearchService.__deallocating_deinit()
{
  SemanticSearchService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE861788()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 24);
  v2 = objc_msgSend(v1, sel_maximumSequenceLength);
  swift_bridgeObjectRetain();
  sub_1AE76B318((uint64_t)v2);
  v3 = MEMORY[0x1AF4530E8]();
  v5 = v4;
  sub_1AE4F81B8();
  v6 = *MEMORY[0x1E0CCDEF8];
  v14[0] = 0;
  v7 = sub_1AE863CF4(v3, v5, v6, (uint64_t)v14, v1);
  if (v7)
  {
    v8 = v7;
    v9 = v14[0];
    sub_1AE924834();
    v11 = v10;

    __asm { BR              X10 }
  }
  v12 = v14[0];
  sub_1AE9246B4();

  swift_willThrow();
  return v3;
}

uint64_t sub_1AE8619A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  _QWORD *v55;
  __n128 *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  void (*v72)(unint64_t, char *);
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  __n128 *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  void (*v92)(unint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  unsigned int v109;
  unsigned int v110;
  void (*v111)(_QWORD *, _QWORD, uint64_t);
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;

  sub_1AE501548(&qword_1ED30EB60);
  sub_1AE4F6630();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v96 - v6;
  v8 = sub_1AE4F675C();
  v9 = *(uint64_t **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F686C();
  v106 = v10;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v96 - v12;
  v14 = sub_1AE924C60();
  v116 = *(_QWORD *)(v14 - 8);
  v117 = v14;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F9024();
  v115 = v16;
  sub_1AE7B4B78();
  v119 = sub_1AE925674();
  v107 = *(_QWORD *)(v119 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE4F9024();
  v118 = v18;
  sub_1AE7B4B78();
  sub_1AE925668();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE4F9024();
  v120 = v20;
  sub_1AE7B4B78();
  v21 = sub_1AE9255F0();
  v121 = *(_QWORD *)(v21 - 8);
  v122 = v21;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v22);
  sub_1AE4F686C();
  v104 = v23;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v24);
  v103 = (char *)&v96 - v25;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v26);
  if (a1)
  {
    v101 = v7;
    v28 = *(_QWORD *)(a1 + 16);
    v102 = v13;
    if (v28 && (v29 = (char *)&v96 - v27, (v114 = *(_QWORD *)(v28 + 16)) != 0))
    {
      v97 = a1;
      v99 = v5;
      v98 = v9;
      v100 = v8;
      v112 = *MEMORY[0x1E0DC67F0];
      v111 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v107 + 104);
      v110 = *MEMORY[0x1E0DC6770];
      v109 = *MEMORY[0x1E0DC6810];
      swift_bridgeObjectRetain();
      v30 = 0;
      v31 = MEMORY[0x1E0DEE9D8];
      v108 = xmmword_1AE934250;
      v113 = v28;
      v32 = v115;
      do
      {
        v33 = *(_QWORD *)(v28 + 8 * v30 + 32);
        v35 = v118;
        v34 = v119;
        *v118 = 0;
        v35[1] = 0;
        v111(v35, v112, v34);
        sub_1AE92565C();
        sub_1AE501548(&qword_1EEDA48C8);
        v36 = sub_1AE501548((uint64_t *)&unk_1EEDA48D0);
        v37 = *(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80);
        v38 = (v37 + 32) & ~v37;
        v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = v108;
        v40 = v39 + v38;
        v41 = (uint64_t *)(v40 + *(int *)(v36 + 48));
        v42 = sub_1AE863E1C();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v40, v110, v42);
        v123 = 37;
        v124 = 0xE100000000000000;
        MEMORY[0x1AF45409C](v33);
        sub_1AE5BC024();
        v43 = v117;
        sub_1AE926D18();
        sub_1AE925F74();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v32, v43);
        sub_1AE925F74();
        v44 = v124;
        *v41 = v123;
        v41[1] = v44;
        v45 = sub_1AE863E14();
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v41, v109, v45);
        sub_1AE507F1C((uint64_t)v41, 0);
        sub_1AE9255E4();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE863E00();
          v31 = v47;
        }
        v46 = *(_QWORD *)(v31 + 16);
        v28 = v113;
        if (v46 >= *(_QWORD *)(v31 + 24) >> 1)
        {
          sub_1AE863E00();
          v31 = v48;
        }
        ++v30;
        *(_QWORD *)(v31 + 16) = v46 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v121 + 32))(v31+ ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80))+ *(_QWORD *)(v121 + 72) * v46, v29, v122);
      }
      while (v114 != v30);
      v50 = v31;
      swift_bridgeObjectRelease();
      v8 = v100;
      v9 = v98;
      v5 = v99;
      a1 = v97;
    }
    else
    {
      v50 = MEMORY[0x1E0DEE9D8];
    }
    v49 = a1;
    v51 = a1 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_startFilter;
    v52 = (uint64_t)v101;
    sub_1AE863DE8(v51);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v52, 1, v8) != 1)
    {
      v99 = v5;
      v54 = (void (*)(char *, uint64_t, uint64_t))v9[4];
      v100 = v8;
      v54(v102, v52, v8);
      v55 = v118;
      *v118 = 0;
      v55[1] = 0;
      sub_1AE507338();
      sub_1AE92565C();
      sub_1AE501548(&qword_1EEDA48C8);
      sub_1AE501548((uint64_t *)&unk_1EEDA48D0);
      v56 = (__n128 *)sub_1AE4FD708();
      sub_1AE863E3C(v56, (__n128)xmmword_1AE934250);
      v57 = sub_1AE863E1C();
      sub_1AE863D84(v57);
      v58 = *(void **)(v105 + 48);
      v59 = sub_1AE92487C();
      v60 = sub_1AE5067CC(v59, sel_stringFromDate_);
      sub_1AE863DF8();
      v61 = sub_1AE863DF0();
      v63 = v62;

      *v9 = v61;
      v9[1] = v63;
      v64 = sub_1AE863E14();
      sub_1AE4F6E28(v64);
      sub_1AE50783C();
      v65 = v103;
      sub_1AE9255E4();
      v53 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE863D6C();
        v53 = v95;
      }
      sub_1AE863E50();
      v5 = v99;
      if (v70)
      {
        sub_1AE509264();
        v69 = v66;
      }
      v71 = sub_1AE4FCC68(v66, v67, v68, v69);
      v72(v71, v65);
      v8 = v100;
      ((void (*)(char *, uint64_t))v9[1])(v102, v100);
      goto LABEL_21;
    }
  }
  else
  {
    v49 = 0;
    sub_1AE507F1C((uint64_t)v7, 1);
    v50 = MEMORY[0x1E0DEE9D8];
  }
  sub_1AE863E0C();
  if (!v49)
  {
    sub_1AE507F1C((uint64_t)v5, 1);
    v53 = v50;
    goto LABEL_28;
  }
  v53 = v50;
LABEL_21:
  sub_1AE5281B4(v49 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_endFilter, (uint64_t)v5);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v5, 1, v8) == 1)
  {
LABEL_28:
    sub_1AE657280((uint64_t)v5);
    return v53;
  }
  v73 = v9;
  v74 = v8;
  ((void (*)(uint64_t, char *, uint64_t))v9[4])(v106, v5, v8);
  v75 = v53;
  v76 = v118;
  *v118 = 0;
  v76[1] = 0;
  sub_1AE507338();
  sub_1AE92565C();
  sub_1AE501548(&qword_1EEDA48C8);
  sub_1AE501548((uint64_t *)&unk_1EEDA48D0);
  v77 = (__n128 *)sub_1AE4FD708();
  sub_1AE863E3C(v77, (__n128)xmmword_1AE934250);
  v78 = sub_1AE863E1C();
  sub_1AE863D84(v78);
  v79 = *(void **)(v105 + 48);
  v80 = sub_1AE92487C();
  v81 = sub_1AE5067CC(v80, sel_stringFromDate_);
  sub_1AE863DF8();
  v82 = sub_1AE863DF0();
  v84 = v83;

  *v9 = v82;
  v9[1] = v84;
  v85 = sub_1AE863E14();
  sub_1AE4F6E28(v85);
  sub_1AE50783C();
  v86 = v104;
  v53 = v75;
  sub_1AE9255E4();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AE863D6C();
    v53 = v94;
  }
  sub_1AE863E50();
  if (v70)
  {
    sub_1AE509264();
    v90 = v87;
  }
  v91 = sub_1AE4FCC68(v87, v88, v89, v90);
  v92(v91, v86);
  ((void (*)(uint64_t, uint64_t))v73[1])(v106, v74);
  return v53;
}

uint64_t sub_1AE8621D0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t i;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;

  v5 = (_QWORD *)sub_1AE4F675C();
  v6 = *(v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  v9 = v8 - v7;
  v10 = *a1;
  v11 = *(void **)(v2 + 48);
  sub_1AE9248D0();
  v12 = sub_1AE92487C();
  (*(void (**)(uint64_t, _QWORD *))(v6 + 8))(v9, v5);
  v13 = objc_msgSend(v11, sel_stringFromDate_, v12);
  sub_1AE863DF8();
  v14 = sub_1AE863DF0();
  v16 = v15;

  if (!v10)
  {
    v25 = sub_1AE4FB75C();
    v26 = sub_1AE860BF0(v25, v14, v16);
    if ((unint64_t)v26 >> 62)
    {
      if (v26 < 0)
        v16 = v26;
      else
        v16 = v26 & 0xFFFFFFFFFFFFFF8;
      sub_1AE4FB75C();
      v27 = sub_1AE505584();
      if (v27)
      {
LABEL_25:
        sub_1AE4FC0D8();
        if (v9)
          sub_1AE4F9510();
        result = sub_1AE508DC8();
        v28 = v27 - 1;
        if (v27 == 1)
          goto LABEL_44;
        if (v27 >= 2)
        {
          sub_1AE503C80(1);
          sub_1AE503C80(v28);
          v29 = 0;
          do
          {
            sub_1AE50A7C0();
            v30 = *(_QWORD *)(v16 + 80);
            if (v30 && MEMORY[0x51])
            {
              v31 = *(_QWORD *)(v16 + 72) == MEMORY[0x49] && v30 == MEMORY[0x51];
              if (!v31 && (sub_1AE505B70() & 1) != 0)
                v16 = 1;
            }
            else if (MEMORY[0x41])
            {
              if (*(_QWORD *)(v16 + 64))
                v16 = 1;
            }
            else
            {
              v16 = 1;
            }
            swift_release();
            ++v29;
          }
          while (v28 != v29);
          goto LABEL_44;
        }
LABEL_101:
        __break(1u);
        goto LABEL_102;
      }
    }
    else
    {
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_1AE4FB75C();
      if (v27)
        goto LABEL_25;
    }
LABEL_66:
    sub_1AE501F64();
    return MEMORY[0x1E0DEE9D8];
  }
  if (v10 == 1)
  {
    v17 = sub_1AE4FB75C();
    v18 = sub_1AE860DA0(v17, v14, v16);
    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0)
        v16 = v18;
      else
        v16 = v18 & 0xFFFFFFFFFFFFFF8;
      sub_1AE4FB75C();
      v19 = sub_1AE505584();
      if (v19)
        goto LABEL_5;
    }
    else
    {
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_1AE4FB75C();
      if (v19)
      {
LABEL_5:
        sub_1AE4FC0D8();
        if (v9)
          sub_1AE4F9510();
        result = sub_1AE508DC8();
        v21 = v19 - 1;
        if (v19 == 1)
          goto LABEL_44;
        if (v19 >= 2)
        {
          sub_1AE503C80(1);
          sub_1AE503C80(v21);
          v22 = 0;
          do
          {
            sub_1AE50A7C0();
            if (MEMORY[0x41])
            {
              v23 = *(_QWORD *)(v16 + 64);
              if (v23)
              {
                v24 = MEMORY[0x39] == *(_QWORD *)(v16 + 56) && MEMORY[0x41] == v23;
                if (!v24 && (sub_1AE505B70() & 1) != 0)
                  v16 = 1;
              }
              else
              {
                v16 = 1;
              }
            }
            else if (!*(_QWORD *)(v16 + 64))
            {
              v16 = 1;
            }
            swift_release();
            ++v22;
          }
          while (v21 != v22);
LABEL_44:
          sub_1AE501F64();
LABEL_92:
          sub_1AE501548(&qword_1EED99648);
          v40 = sub_1AE4F66BC();
          *(_OWORD *)(v40 + 16) = xmmword_1AE95A550;
          *(_QWORD *)(v40 + 32) = v16;
          v41 = v40;
          sub_1AE9261FC();
          return v41;
        }
        __break(1u);
        goto LABEL_101;
      }
    }
    goto LABEL_66;
  }
  swift_bridgeObjectRelease();
  v41 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v16 = a2;
    else
      v16 = a2 & 0xFFFFFFFFFFFFFF8;
    sub_1AE4FB75C();
    v32 = sub_1AE505584();
    if (v32)
    {
LABEL_47:
      if (v32 < 1)
      {
        __break(1u);
LABEL_99:
        sub_1AE4F9510();
      }
      for (i = 0; i != v32; ++i)
      {
        if ((a2 & 0xC000000000000001) != 0)
          sub_1AE4F9510();
        v9 = *(_QWORD *)(a2 + 8 * i + 32);
        swift_retain();
        if (*(_QWORD *)(v9 + 64))
        {
          v16 = (uint64_t)&v41;
          sub_1AE9269B8();
          sub_1AE9269E8();
          sub_1AE9269F4();
          sub_1AE9269C4();
        }
        else
        {
          swift_release();
        }
      }
      sub_1AE4F6648();
      v34 = v41;
      if (v41 < 0)
        goto LABEL_93;
      goto LABEL_72;
    }
  }
  else
  {
    v32 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1AE4FB75C();
    if (v32)
      goto LABEL_47;
  }
  sub_1AE4F6648();
  v34 = MEMORY[0x1E0DEE9D8];
  if ((MEMORY[0x1E0DEE9D8] & 0x8000000000000000) != 0)
    goto LABEL_93;
LABEL_72:
  if ((v34 & 0x4000000000000000) != 0)
  {
LABEL_93:
    swift_retain();
    v35 = sub_1AE926AD8();
    if (!v35)
      goto LABEL_94;
    goto LABEL_74;
  }
  v35 = *(_QWORD *)(v34 + 16);
  swift_retain();
  if (!v35)
  {
LABEL_94:
    sub_1AE4FC7FC();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_74:
  sub_1AE4FC0D8();
  if (v9)
    goto LABEL_99;
  result = sub_1AE508DC8();
  v36 = v35 - 1;
  if (v35 == 1)
  {
LABEL_91:
    sub_1AE4FC7FC();
    goto LABEL_92;
  }
  if (v35 >= 2)
  {
    sub_1AE503C80(1);
    sub_1AE503C80(v36);
    v37 = 0;
    do
    {
      sub_1AE50A7C0();
      if (MEMORY[0x41])
      {
        v38 = *(_QWORD *)(v16 + 64);
        if (v38)
        {
          v39 = MEMORY[0x39] == *(_QWORD *)(v16 + 56) && MEMORY[0x41] == v38;
          if (!v39 && (sub_1AE505B70() & 1) != 0)
            v16 = 1;
        }
        else
        {
          v16 = 1;
        }
      }
      else if (!*(_QWORD *)(v16 + 64))
      {
        v16 = 1;
      }
      swift_release();
      ++v37;
    }
    while (v36 != v37);
    goto LABEL_91;
  }
LABEL_102:
  __break(1u);
  return result;
}

void sub_1AE862724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  int64x2_t v38;
  int64x2_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, unint64_t, uint64_t);
  uint64_t v52;
  _OWORD v53[2];
  uint64_t v54;
  _OWORD v55[2];
  uint64_t v56;
  uint64_t v57;

  v5 = v4;
  v6 = v3;
  v8 = sub_1AE925644();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F666C();
  v12 = v11 - v10;
  sub_1AE861788();
  if (!v4)
  {
    sub_1AE8619A4(a3);
    v13 = sub_1AE925590();
    swift_bridgeObjectRelease();
    sub_1AE4F67AC();
    swift_retain();
    v14 = sub_1AE860F50(v13, v6);
    ViewService.semanticSearchView.getter(v53);
    v47 = a3;
    v56 = v54;
    v55[0] = v53[0];
    v55[1] = v53[1];
    v15 = *(_QWORD *)(v14 + 16);
    v16 = MEMORY[0x1E0DEE9D8];
    v46 = v14;
    if (v15)
    {
      v44 = v6;
      v45 = 0;
      v57 = MEMORY[0x1E0DEE9D8];
      sub_1AE521CF0();
      v17 = v14 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v18 = *(_QWORD *)(v9 + 72);
      v51 = *(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16);
      v52 = v18;
      do
      {
        v51(v12, v17, v8);
        v19 = sub_1AE925614();
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
        v16 = v57;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE521CF0();
          v16 = v57;
        }
        v20 = *(_QWORD *)(v16 + 16);
        if (v20 >= *(_QWORD *)(v16 + 24) >> 1)
        {
          sub_1AE521CF0();
          v16 = v57;
        }
        *(_QWORD *)(v16 + 16) = v20 + 1;
        *(_QWORD *)(v16 + 8 * v20 + 32) = v19;
        v17 += v52;
        --v15;
      }
      while (v15);
      v6 = v44;
      v5 = v45;
    }
    sub_1AE898B48(v16);
    v22 = v21;
    ObjectType = swift_getObjectType();
    MEMORY[0x1E0C80A78](ObjectType);
    v43[-2] = v55;
    v43[-1] = v22;
    sub_1AE501548(&qword_1EEDA48E0);
    sub_1AE924CCC();
    sub_1AE6A1880((uint64_t)v55);
    v24 = v47;
    if (v5)
    {
      swift_bridgeObjectRelease();
      sub_1AE4F67AC();
    }
    else
    {
      sub_1AE4F67AC();
      v25 = v57;
      v26 = *(_QWORD *)(v57 + 16);
      if (v26)
      {
        v44 = v6;
        v45 = 0;
        *(_QWORD *)&v53[0] = MEMORY[0x1E0DEE9D8];
        sub_1AE52268C();
        v27 = *(_QWORD *)&v53[0];
        v43[1] = v25;
        v28 = (uint64_t *)(v25 + 48);
        do
        {
          v29 = *(v28 - 2);
          v30 = *(v28 - 1);
          v31 = *v28;
          v32 = v28[2];
          v51 = (void (*)(uint64_t, unint64_t, uint64_t))v28[1];
          v52 = v30;
          v33 = v28[4];
          v50 = v28[3];
          v34 = v28[5];
          v35 = v28[6];
          v48 = v29;
          v49 = v34;
          v36 = *(_QWORD *)(v27 + 16);
          v37 = *(_QWORD *)(v27 + 24);
          *(_QWORD *)&v53[0] = v27;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v36 >= v37 >> 1)
          {
            sub_1AE52268C();
            v27 = *(_QWORD *)&v53[0];
          }
          v28 += 9;
          v38 = vdupq_n_s64(v48);
          *(_QWORD *)(v27 + 16) = v36 + 1;
          v39 = (int64x2_t *)(v27 + 80 * v36);
          v39[2] = v38;
          v39[3].i64[0] = v52;
          v39[3].i64[1] = v31;
          v39[4].i64[0] = (uint64_t)v51;
          v39[4].i64[1] = v32;
          v39[5].i64[0] = v50;
          v39[5].i64[1] = v33;
          v39[6].i64[0] = v49;
          v39[6].i64[1] = v35;
          --v26;
        }
        while (v26);
        swift_bridgeObjectRelease();
        v24 = v47;
      }
      else
      {
        sub_1AE4F81B8();
        v27 = MEMORY[0x1E0DEE9D8];
      }
      sub_1AE62C404(v27);
      v41 = v40;
      swift_bridgeObjectRetain();
      v42 = sub_1AE860A18(v46, v41);
      sub_1AE4F81B8();
      swift_bridgeObjectRelease();
      if (v24
        && *(_BYTE *)(v24
                    + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_orderAndLimit) != 3)
      {
        LOBYTE(v53[0]) = *(_BYTE *)(v24
                                  + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_orderAndLimit);
        sub_1AE8621D0((unsigned __int8 *)v53, v42);
        sub_1AE4F67AC();
      }
    }
  }
  sub_1AE4F667C();
}

uint64_t SemanticSearchService.SemanticSearchResult.__allocating_init(assetId:similarity:semanticSearchItem:)(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v6;

  v6 = sub_1AE4F66BC();
  SemanticSearchService.SemanticSearchResult.init(assetId:similarity:semanticSearchItem:)(a1, a2, a3);
  return v6;
}

uint64_t sub_1AE862BE4()
{
  return sub_1AE92556C();
}

uint64_t SemanticSearchService.SemanticSearchOptions.__allocating_init(maxResults:similarityThreshold:)(uint64_t a1, float a2)
{
  uint64_t result;

  result = sub_1AE4F66BC();
  *(_QWORD *)(result + 16) = a1;
  *(float *)(result + 24) = a2;
  return result;
}

uint64_t SemanticSearchService.SemanticSearchOptions.init(maxResults:similarityThreshold:)(uint64_t a1, float a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(float *)(v2 + 24) = a2;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

uint64_t SemanticSearchService.SemanticSearchOptions.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t SemanticSearchService.SemanticSearchFilters.__allocating_init(entityIds:startFilter:endFilter:orderAndLimit:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  SemanticSearchService.SemanticSearchFilters.init(entityIds:startFilter:endFilter:orderAndLimit:)(a1, a2, a3, a4);
  return v8;
}

void SemanticSearchService.SemanticSearchFilters.init(entityIds:startFilter:endFilter:orderAndLimit:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v4;
  char v6;

  v6 = *a4;
  *(_QWORD *)(v4 + 16) = a1;
  sub_1AE5298B4(a2, v4 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_startFilter);
  sub_1AE5298B4(a3, v4 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_endFilter);
  *(_BYTE *)(v4 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_orderAndLimit) = v6;
  sub_1AE4F6624();
}

IntelligencePlatform::SemanticSearchService::SemanticSearchFilters::OrderAndLimit_optional __swiftcall SemanticSearchService.SemanticSearchFilters.OrderAndLimit.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  IntelligencePlatform::SemanticSearchService::SemanticSearchFilters::OrderAndLimit_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1AE926B44();
  result.value = sub_1AE4F6648();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static SemanticSearchService.SemanticSearchFilters.OrderAndLimit.allCases.getter()
{
  return &unk_1E5DA96C8;
}

uint64_t SemanticSearchService.SemanticSearchFilters.OrderAndLimit.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1954047342;
  if (*v0 != 1)
    v1 = 0x7473726966;
  if (*v0)
    return v1;
  else
    return 1953718636;
}

void sub_1AE862DCC(unsigned __int8 *a1, char *a2)
{
  sub_1AE510FB4(*a1, *a2);
}

void sub_1AE862DD8()
{
  sub_1AE512CF0();
}

uint64_t sub_1AE862DE0()
{
  return sub_1AE5E87FC();
}

void sub_1AE862DE8()
{
  sub_1AE54FA88();
}

IntelligencePlatform::SemanticSearchService::SemanticSearchFilters::OrderAndLimit_optional sub_1AE862DF0(Swift::String *a1)
{
  return SemanticSearchService.SemanticSearchFilters.OrderAndLimit.init(rawValue:)(*a1);
}

uint64_t sub_1AE862DFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = SemanticSearchService.SemanticSearchFilters.OrderAndLimit.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1AE862E20(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5DA96C8;
}

BOOL sub_1AE862E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v11;

  sub_1AE501548(&qword_1ED30EB60);
  sub_1AE4F6630();
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - v5;
  v7 = *(_QWORD *)(v0 + 16);
  if (v7 && *(_QWORD *)(v7 + 16))
    return 0;
  sub_1AE5281B4(v0 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_startFilter, (uint64_t)&v11 - v5);
  sub_1AE4F675C();
  v8 = sub_1AE509C04((uint64_t)v6);
  sub_1AE657280((uint64_t)v6);
  if (v8 != 1)
    return 0;
  sub_1AE863DE8(v0 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_endFilter);
  v9 = sub_1AE509C04((uint64_t)v4);
  sub_1AE863E0C();
  return v9 == 1
      && *(_BYTE *)(v0
                  + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_orderAndLimit) == 3;
}

uint64_t sub_1AE862F38()
{
  uint64_t v0;
  unint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char v34;
  void (*v35)(char *, uint64_t);
  void *v36;
  uint64_t v37;
  id v38;
  void (*v39)(uint64_t, uint64_t);
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  char *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[2];

  v2 = (void *)0xEB00000000203A72;
  sub_1AE501548(&qword_1ED30EB60);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F686C();
  v54 = v4;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v52 - v6;
  v56 = sub_1AE4F675C();
  v58 = *(_QWORD *)(v56 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F686C();
  v55 = v9;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v10);
  v53 = (char *)&v52 - v11;
  sub_1AE7B4B78();
  v12 = sub_1AE924C60();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F666C();
  v16 = v15 - v14;
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v18 = sub_1AE863DC8();
  sub_1AE863878(v18, v19, v17);
  v57 = v0;
  v20 = *(_QWORD *)(v0 + 16);
  if (v20)
  {
    v52 = v17;
    strcpy((char *)v60, "EntityIds: ");
    HIDWORD(v60[1]) = -352321536;
    v21 = *(_QWORD *)(v20 + 16);
    v22 = MEMORY[0x1E0DEE9D8];
    if (v21)
    {
      v59 = MEMORY[0x1E0DEE9D8];
      sub_1AE521580();
      v22 = v59;
      v23 = (uint64_t *)(v20 + 32);
      do
      {
        v24 = *v23++;
        MEMORY[0x1AF45409C](v24);
        v59 = v22;
        v25 = *(_QWORD *)(v22 + 16);
        if (v25 >= *(_QWORD *)(v22 + 24) >> 1)
        {
          sub_1AE521580();
          v22 = v59;
        }
        *(_QWORD *)(v22 + 16) = v25 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 32))(v22+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v25, v16, v12);
        --v21;
      }
      while (v21);
    }
    MEMORY[0x1AF453400](v22, v12);
    sub_1AE925F74();
    sub_1AE4F6648();
    sub_1AE4F665C();
    v26 = v60[0];
    v20 = v60[1];
    sub_1AE519C48();
    v28 = v27;
    v1 = *(_QWORD *)(v27 + 16);
    v2 = (void *)(v1 + 1);
    v30 = v56;
    v29 = v57;
    if (v1 >= *(_QWORD *)(v27 + 24) >> 1)
    {
      sub_1AE50074C();
      v28 = v45;
    }
    v17 = v52;
    *(_QWORD *)(v28 + 16) = v2;
    v31 = v28 + 16 * v1;
    *(_QWORD *)(v31 + 32) = v26;
    *(_QWORD *)(v31 + 40) = v20;
  }
  else
  {
    v28 = MEMORY[0x1E0DEE9D8];
    v30 = v56;
    v29 = v57;
  }
  sub_1AE5281B4(v29 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_startFilter, (uint64_t)v7);
  if (sub_1AE863DDC((uint64_t)v7) == 1)
  {
    sub_1AE657280((uint64_t)v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v53, v7, v30);
    strcpy((char *)v60, "StartFilter: ");
    HIWORD(v60[1]) = -4864;
    v32 = sub_1AE92487C();
    v33 = sub_1AE507CA4(v32);

    sub_1AE925E3C();
    sub_1AE863E30();
    sub_1AE863DB8();
    sub_1AE4F665C();
    if ((sub_1AE863D9C() & 1) == 0)
    {
      sub_1AE4FB7A4();
      v28 = v46;
    }
    sub_1AE863DA8();
    if (v34)
    {
      sub_1AE50074C();
      v28 = v47;
    }
    sub_1AE506EE4();
    v35(v53, v30);
  }
  v36 = v54;
  sub_1AE863DE8(v29 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_endFilter);
  if (sub_1AE863DDC((uint64_t)v36) == 1)
  {
    sub_1AE863E0C();
  }
  else
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v58 + 32))(v55, v36, v30);
    strcpy((char *)v60, "EndFilter: ");
    HIDWORD(v60[1]) = -352321536;
    v37 = sub_1AE92487C();
    v38 = sub_1AE507CA4(v37);

    sub_1AE925E3C();
    sub_1AE863E30();
    sub_1AE863DB8();
    sub_1AE4F665C();
    if ((sub_1AE863D9C() & 1) == 0)
    {
      sub_1AE4FB7A4();
      v28 = v48;
    }
    sub_1AE863DA8();
    if (v34)
    {
      sub_1AE50074C();
      v28 = v49;
    }
    sub_1AE506EE4();
    v39(v55, v30);
  }
  v40 = *(unsigned __int8 *)(v29
                           + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_orderAndLimit);
  if (v40 != 3)
  {
    v60[0] = 0;
    v60[1] = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    v60[0] = 0x646E41726564724FLL;
    v60[1] = 0xEF203A74696D694CLL;
    if (v40)
    {
      if (v40 == 1)
        v42 = 0xE400000000000000;
      else
        v42 = 0xE500000000000000;
    }
    else
    {
      v42 = 0xE400000000000000;
    }
    sub_1AE925F74();
    sub_1AE4F6648();
    if ((sub_1AE863D9C() & 1) == 0)
    {
      sub_1AE4FB7A4();
      v28 = v50;
    }
    sub_1AE863DA8();
    if (v34)
    {
      sub_1AE50074C();
      v28 = v51;
    }
    *(_QWORD *)(v28 + 16) = v42;
    v43 = v28 + 16 * v1;
    *(_QWORD *)(v43 + 32) = v60;
    *(_QWORD *)(v43 + 40) = v20;
    goto LABEL_38;
  }
  if (*(_QWORD *)(v28 + 16))
  {
LABEL_38:
    v60[0] = v28;
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE5BA550((unint64_t *)&qword_1ED318BD0, &qword_1ED319DE0, MEMORY[0x1E0DEAF20]);
    v41 = sub_1AE925DC4();
    sub_1AE4F67AC();

    return v41;
  }

  sub_1AE4F67AC();
  return 4271950;
}

uint64_t SemanticSearchService.SemanticSearchFilters.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1AE657280(v0 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_startFilter);
  sub_1AE657280(v0 + OBJC_IVAR____TtCC20IntelligencePlatform21SemanticSearchService21SemanticSearchFilters_endFilter);
  return v0;
}

uint64_t SemanticSearchService.SemanticSearchFilters.__deallocating_deinit()
{
  SemanticSearchService.SemanticSearchFilters.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE863538()
{
  return sub_1AE862F38();
}

uint64_t SemanticSearchService.SemanticSearchResult.assetId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

float SemanticSearchService.SemanticSearchResult.similarity.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 24);
}

uint64_t SemanticSearchService.SemanticSearchResult.semanticSearchItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 96);
  v3 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 64) = v2;
  swift_bridgeObjectRetain();
  sub_1AE4FB75C();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SemanticSearchService.SemanticSearchResult.init(assetId:similarity:semanticSearchItem:)(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(v3 + 16) = a1;
  *(float *)(v3 + 24) = a3;
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 80) = v6;
  *(_QWORD *)(v3 + 96) = v4;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

uint64_t sub_1AE8635E4()
{
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926D18();
  sub_1AE925F74();
  sub_1AE4F665C();
  sub_1AE925F74();
  sub_1AE9263D0();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  sub_1AE4FB75C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SemanticSearchItem.description.getter();
  sub_1AE925F74();
  sub_1AE4F665C();
  swift_bridgeObjectRelease();
  sub_1AE4F81B8();
  sub_1AE4F6648();
  sub_1AE4F67AC();
  return 0;
}

void SemanticSearchService.SemanticSearchResult.deinit()
{
  sub_1AE508970();
  sub_1AE4F6648();
  sub_1AE4F665C();
  sub_1AE4F81B8();
  sub_1AE4F6624();
}

uint64_t SemanticSearchService.SemanticSearchResult.__deallocating_deinit()
{
  sub_1AE508970();
  sub_1AE4F6648();
  sub_1AE4F665C();
  sub_1AE4F81B8();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE8637A8()
{
  return sub_1AE8635E4();
}

uint64_t type metadata accessor for SemanticSearchService()
{
  return objc_opt_self();
}

void sub_1AE8637E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_1AE924534();
  if (v4)
  {
    v5 = sub_1AE92454C();
    if (__OFSUB__(a1, v5))
    {
LABEL_13:
      __break(1u);
      return;
    }
    v4 += a1 - v5;
  }
  v6 = __OFSUB__(a2, a1);
  v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = sub_1AE924540();
  if (v4)
  {
    if (v8 >= v7)
      v9 = v7;
    else
      v9 = v8;
    v10 = v9 / 4;
  }
  else
  {
    v10 = 0;
  }
  sub_1AE5925D0(v4, v10);
}

void sub_1AE863878(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1AE925E18();
  objc_msgSend(a3, sel_setDateFormat_, v4);

}

unint64_t sub_1AE8638BC()
{
  unint64_t result;

  result = qword_1EEDA4890;
  if (!qword_1EEDA4890)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SemanticSearchServiceError, &type metadata for SemanticSearchServiceError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4890);
  }
  return result;
}

void sub_1AE8638F8(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1AE864D04(*(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1AE863914()
{
  unint64_t result;

  result = qword_1EEDA4898;
  if (!qword_1EEDA4898)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SemanticSearchServiceError, &type metadata for SemanticSearchServiceError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4898);
  }
  return result;
}

unint64_t sub_1AE863954()
{
  unint64_t result;

  result = qword_1EEDA48A0;
  if (!qword_1EEDA48A0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SemanticSearchService.SemanticSearchFilters.OrderAndLimit, &type metadata for SemanticSearchService.SemanticSearchFilters.OrderAndLimit);
    atomic_store(result, (unint64_t *)&qword_1EEDA48A0);
  }
  return result;
}

uint64_t sub_1AE863990()
{
  return sub_1AE5BA550(&qword_1EEDA48A8, &qword_1EEDA48B0, MEMORY[0x1E0DEAF50]);
}

uint64_t storeEnumTagSinglePayload for SemanticSearchServiceError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE863A08 + 4 * byte_1AE964BB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE863A3C + 4 * byte_1AE964BB0[v4]))();
}

uint64_t sub_1AE863A3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE863A44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE863A4CLL);
  return result;
}

uint64_t sub_1AE863A58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE863A60);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE863A64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE863A6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SemanticSearchServiceError()
{
  return &type metadata for SemanticSearchServiceError;
}

uint64_t method lookup function for SemanticSearchService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SemanticSearchService.__allocating_init(options:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SemanticSearchService.search(query:searchFilters:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of SemanticSearchService.countVectorDbContent()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t method lookup function for SemanticSearchService.SemanticSearchOptions()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SemanticSearchService.SemanticSearchOptions.__allocating_init(maxResults:similarityThreshold:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1AE863AF8()
{
  return type metadata accessor for SemanticSearchService.SemanticSearchFilters();
}

uint64_t type metadata accessor for SemanticSearchService.SemanticSearchFilters()
{
  uint64_t result;

  result = qword_1EEDA48B8;
  if (!qword_1EEDA48B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1AE863B38()
{
  unint64_t v0;

  sub_1AE52A140();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for SemanticSearchService.SemanticSearchFilters()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SemanticSearchService.SemanticSearchFilters.__allocating_init(entityIds:startFilter:endFilter:orderAndLimit:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of SemanticSearchService.SemanticSearchFilters.isEmpty.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of SemanticSearchService.SemanticSearchFilters.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t storeEnumTagSinglePayload for SemanticSearchService.SemanticSearchFilters.OrderAndLimit(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE863C34 + 4 * byte_1AE964BBF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE863C68 + 4 * byte_1AE964BBA[v4]))();
}

uint64_t sub_1AE863C68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE863C70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE863C78);
  return result;
}

uint64_t sub_1AE863C84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE863C8CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE863C90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE863C98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SemanticSearchService.SemanticSearchFilters.OrderAndLimit()
{
  return &type metadata for SemanticSearchService.SemanticSearchFilters.OrderAndLimit;
}

uint64_t type metadata accessor for SemanticSearchService.SemanticSearchResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for SemanticSearchService.SemanticSearchResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SemanticSearchService.SemanticSearchResult.__allocating_init(assetId:similarity:semanticSearchItem:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of SemanticSearchService.SemanticSearchResult.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

id sub_1AE863CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  id v9;

  v8 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(a5, sel_sentenceEmbeddingVectorDataForString_language_error_, v8, a3, a4);

  return v9;
}

void sub_1AE863D6C()
{
  sub_1AE51BDE8();
}

uint64_t sub_1AE863D84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 104))(v2, v1, a1);
}

uint64_t sub_1AE863D9C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE863DB8()
{
  return sub_1AE925F74();
}

unint64_t sub_1AE863DC8()
{
  return 0xD000000000000013;
}

uint64_t sub_1AE863DDC(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

uint64_t sub_1AE863DE8(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE5281B4(a1, v1);
}

uint64_t sub_1AE863DF0()
{
  return sub_1AE925E3C();
}

void sub_1AE863DF8()
{
  void *v0;

}

void sub_1AE863E00()
{
  sub_1AE51BDE8();
}

uint64_t sub_1AE863E0C()
{
  uint64_t v0;

  return sub_1AE657280(v0);
}

uint64_t sub_1AE863E14()
{
  return sub_1AE925680();
}

uint64_t sub_1AE863E1C()
{
  return sub_1AE925650();
}

void sub_1AE863E24(uint64_t a1, uint64_t a2)
{
  sub_1AE8637E8(a1, a2);
}

void sub_1AE863E30()
{
  void *v0;

}

__n128 *sub_1AE863E3C(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t ViewService.semanticSearchView.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(id, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v16;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  v5 = (void *)sub_1AE925E18();
  v17[0] = 0;
  v6 = objc_msgSend(v4, sel_requestAssertionForViewName_error_, v5, v17);

  v7 = v17[0];
  if (v6)
  {
    v8 = *(_QWORD **)(v1 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    v9 = v8[5];
    v10 = v8[6];
    sub_1AE4F9858(v8 + 2, v9);
    v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 8);
    v12 = v7;
    v13 = v11(v6, v9, v10);
    if (v2)
      return swift_unknownObjectRelease();
    else
      return sub_1AE864C40(v6, v13, v14, a1);
  }
  else
  {
    v16 = v17[0];
    sub_1AE9246B4();

    return swift_willThrow();
  }
}

uint64_t ViewService.SemanticSearchView.getSemanticSearchItems(subjectIds:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  swift_getObjectType();
  sub_1AE501548(&qword_1EEDA48E0);
  result = sub_1AE924CCC();
  if (!v0)
    return v2;
  return result;
}

uint64_t SemanticSearchItem.subject.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SemanticSearchItem.subject.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SemanticSearchItem.subject.modify())(_QWORD)
{
  return nullsub_1;
}

void SemanticSearchItem.textualization.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void SemanticSearchItem.textualization.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v0;
  sub_1AE4F6624();
}

uint64_t (*SemanticSearchItem.textualization.modify())(_QWORD)
{
  return nullsub_1;
}

void SemanticSearchItem.starttime.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void SemanticSearchItem.starttime.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v0;
  sub_1AE4F6624();
}

uint64_t (*SemanticSearchItem.starttime.modify())(_QWORD)
{
  return nullsub_1;
}

void SemanticSearchItem.endtime.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void SemanticSearchItem.endtime.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v0;
  sub_1AE4F6624();
}

uint64_t (*SemanticSearchItem.endtime.modify())(_QWORD)
{
  return nullsub_1;
}

void SemanticSearchItem.entities.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void SemanticSearchItem.entities.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v0;
  sub_1AE4F6624();
}

uint64_t (*SemanticSearchItem.entities.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SemanticSearchItem.description.getter()
{
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  return 0x203A74786554;
}

uint64_t sub_1AE86439C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x696C617574786574 && a2 == 0xEE006E6F6974617ALL;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6D69747472617473 && a2 == 0xE900000000000065;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x656D6974646E65 && a2 == 0xE700000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x7365697469746E65 && a2 == 0xE800000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1AE926D60();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1AE8645D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE86460C + 4 * byte_1AE964F30[a1]))(0x7463656A627573, 0xE700000000000000);
}

uint64_t sub_1AE86460C()
{
  return 0x696C617574786574;
}

uint64_t sub_1AE864630()
{
  return 0x6D69747472617473;
}

uint64_t sub_1AE86464C()
{
  return 0x656D6974646E65;
}

uint64_t sub_1AE864660()
{
  return 0x7365697469746E65;
}

uint64_t sub_1AE864678()
{
  unsigned __int8 *v0;

  return sub_1AE8645D8(*v0);
}

uint64_t sub_1AE864680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE86439C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8646A4()
{
  sub_1AE864F1C();
  return sub_1AE926F94();
}

uint64_t sub_1AE8646CC()
{
  sub_1AE864F1C();
  return sub_1AE926FA0();
}

void SemanticSearchItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1AE501548(&qword_1EEDA48E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F666C();
  v7 = v6 - v5;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE864F1C();
  sub_1AE926F4C();
  sub_1AE926CDC();
  if (!v1)
  {
    sub_1AE5009A4();
    sub_1AE5009A4();
    sub_1AE5009A4();
    sub_1AE5009A4();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  sub_1AE4F667C();
}

void SemanticSearchItem.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v5 = sub_1AE501548(&qword_1EEDA48F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  v9 = v8 - v7;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE864F1C();
  sub_1AE926F34();
  if (v2)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_1AE4F6718();
    sub_1AE4F76D8();
  }
  else
  {
    v10 = sub_1AE926C04();
    v11 = sub_1AE503C8C();
    v13 = v12;
    v28 = v11;
    v29 = v10;
    sub_1AE509358();
    v14 = sub_1AE503C8C();
    v16 = v15;
    v26 = v14;
    v27 = a2;
    sub_1AE509358();
    v17 = sub_1AE503C8C();
    v19 = v18;
    v25 = v17;
    sub_1AE509358();
    v20 = sub_1AE503C8C();
    v22 = v21;
    v23 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v24 = v20;
    v23(v9, v5);
    sub_1AE4F66CC();
    swift_bridgeObjectRelease();
    *v27 = v29;
    v27[1] = v28;
    v27[2] = v13;
    v27[3] = v26;
    v27[4] = v16;
    v27[5] = v25;
    v27[6] = v19;
    v27[7] = v24;
    v27[8] = v22;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_1AE4F6718();
    sub_1AE4F6728();
  }
  swift_bridgeObjectRelease();
  sub_1AE4F667C();
}

void sub_1AE864AAC(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  SemanticSearchItem.init(from:)(a1, a2);
}

void sub_1AE864AC0(_QWORD *a1)
{
  SemanticSearchItem.encode(to:)(a1);
}

uint64_t sub_1AE864AD4()
{
  sub_1AE8654B8();
  return sub_1AE924DA4();
}

uint64_t sub_1AE864B28()
{
  sub_1AE86547C();
  return sub_1AE924F90();
}

uint64_t sub_1AE864B78()
{
  sub_1AE86547C();
  return sub_1AE924F84();
}

uint64_t sub_1AE864BBC()
{
  sub_1AE86547C();
  return sub_1AE924F78();
}

uint64_t sub_1AE864C00()
{
  sub_1AE865440();
  return sub_1AE924D44();
}

uint64_t sub_1AE864C40@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;

  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v8 = objc_msgSend(a1, sel_viewArtifactTableName);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1AE925E3C();
    v12 = v11;
    swift_unknownObjectRelease();

  }
  else
  {
    swift_unknownObjectRelease();
    v12 = 0x80000001AE9894A0;
    v10 = 0xD000000000000017;
  }
  result = swift_unknownObjectRelease();
  *a4 = a1;
  a4[1] = v10;
  a4[2] = v12;
  a4[3] = a2;
  a4[4] = a3;
  return result;
}

void sub_1AE864D04(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[5];
  uint64_t v17[7];

  v3 = sub_1AE501548(&qword_1EEDA4948);
  v14 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F666C();
  v6 = v5 - v4;
  v7 = sub_1AE501548(&qword_1EEDA4950);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F666C();
  v11 = v10 - v9;
  swift_bridgeObjectRetain();
  sub_1AE925368();
  v17[6] = a1;
  v16[3] = sub_1AE925374();
  v16[4] = MEMORY[0x1E0D24668];
  sub_1AE52F6A8(v16);
  sub_1AE925380();
  v17[3] = sub_1AE924C9C();
  v17[4] = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8(v17);
  sub_1AE501548(&qword_1EEDA4958);
  sub_1AE5BA550(&qword_1EEDA4960, &qword_1EEDA4958, MEMORY[0x1E0DEB3D0]);
  sub_1AE926058();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v16);
  sub_1AE925320();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v17);
  sub_1AE5BA550(&qword_1EEDA4968, &qword_1EEDA4948, MEMORY[0x1E0D24290]);
  sub_1AE8654F4();
  v12 = sub_1AE924B28();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v6, v3);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  if (!v15)
    *a2 = v12;
  sub_1AE4F667C();
}

unint64_t sub_1AE864F1C()
{
  unint64_t result;

  result = qword_1EEDA48F0;
  if (!qword_1EEDA48F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE965244, &type metadata for SemanticSearchItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA48F0);
  }
  return result;
}

unint64_t sub_1AE864F5C()
{
  unint64_t result;

  result = qword_1EEDA4900;
  if (!qword_1EEDA4900)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SemanticSearchItem, &type metadata for SemanticSearchItem);
    atomic_store(result, (unint64_t *)&qword_1EEDA4900);
  }
  return result;
}

unint64_t sub_1AE864F9C()
{
  unint64_t result;

  result = qword_1EEDA4908;
  if (!qword_1EEDA4908)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SemanticSearchItem, &type metadata for SemanticSearchItem);
    atomic_store(result, (unint64_t *)&qword_1EEDA4908);
  }
  return result;
}

unint64_t sub_1AE864FDC()
{
  unint64_t result;

  result = qword_1EEDA4910;
  if (!qword_1EEDA4910)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SemanticSearchItem, &type metadata for SemanticSearchItem);
    atomic_store(result, (unint64_t *)&qword_1EEDA4910);
  }
  return result;
}

uint64_t destroy for SemanticSearchItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SemanticSearchItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SemanticSearchItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SemanticSearchItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SemanticSearchItem(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 72))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SemanticSearchItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SemanticSearchItem()
{
  return &type metadata for SemanticSearchItem;
}

ValueMetadata *type metadata accessor for ViewService.SemanticSearchView()
{
  return &type metadata for ViewService.SemanticSearchView;
}

uint64_t storeEnumTagSinglePayload for SemanticSearchItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AE865300 + 4 * byte_1AE964F3A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AE865334 + 4 * byte_1AE964F35[v4]))();
}

uint64_t sub_1AE865334(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE86533C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE865344);
  return result;
}

uint64_t sub_1AE865350(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE865358);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AE86535C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE865364(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SemanticSearchItem.CodingKeys()
{
  return &type metadata for SemanticSearchItem.CodingKeys;
}

unint64_t sub_1AE865384()
{
  unint64_t result;

  result = qword_1EEDA4918;
  if (!qword_1EEDA4918)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96521C, &type metadata for SemanticSearchItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4918);
  }
  return result;
}

unint64_t sub_1AE8653C4()
{
  unint64_t result;

  result = qword_1EEDA4920;
  if (!qword_1EEDA4920)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96518C, &type metadata for SemanticSearchItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4920);
  }
  return result;
}

unint64_t sub_1AE865404()
{
  unint64_t result;

  result = qword_1EEDA4928;
  if (!qword_1EEDA4928)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9651B4, &type metadata for SemanticSearchItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4928);
  }
  return result;
}

unint64_t sub_1AE865440()
{
  unint64_t result;

  result = qword_1EEDA4930;
  if (!qword_1EEDA4930)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SemanticSearchItem, &type metadata for SemanticSearchItem);
    atomic_store(result, (unint64_t *)&qword_1EEDA4930);
  }
  return result;
}

unint64_t sub_1AE86547C()
{
  unint64_t result;

  result = qword_1EEDA4938;
  if (!qword_1EEDA4938)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SemanticSearchItem, &type metadata for SemanticSearchItem);
    atomic_store(result, (unint64_t *)&qword_1EEDA4938);
  }
  return result;
}

unint64_t sub_1AE8654B8()
{
  unint64_t result;

  result = qword_1EEDA4940;
  if (!qword_1EEDA4940)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SemanticSearchItem, &type metadata for SemanticSearchItem);
    atomic_store(result, (unint64_t *)&qword_1EEDA4940);
  }
  return result;
}

unint64_t sub_1AE8654F4()
{
  unint64_t result;

  result = qword_1EEDA4970;
  if (!qword_1EEDA4970)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SemanticSearchItem, &type metadata for SemanticSearchItem);
    atomic_store(result, (unint64_t *)&qword_1EEDA4970);
  }
  return result;
}

void sub_1AE865530(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;
  char v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *);
  uint64_t v27;

  v27 = a2;
  v26 = a1;
  v23[1] = a4;
  v25 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)v23 - v9;
  sub_1AE92670C();
  sub_1AE4FE978();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v23 - v13;
  v15 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4FD234();
  v16 = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(v16 - 8);
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v23 - v18;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v4, v23[2], v25);
  sub_1AE926070();
  swift_getAssociatedConformanceWitness();
  do
  {
    sub_1AE926760();
    sub_1AE503C9C((uint64_t)v14);
    if (v20)
      break;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, AssociatedTypeWitness);
    v21 = v26(v10);
    if (v5)
    {
      sub_1AE4FE238();
      break;
    }
    v22 = v21;
    sub_1AE4FE238();
  }
  while ((v22 & 1) != 0);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v16);
  sub_1AE4F667C();
}

void sub_1AE865720(uint64_t (*a1)(uint64_t *, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t AssociatedTypeWitness;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t AssociatedConformanceWitness;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t TupleTypeMetadata2;
  uint64_t (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t *, _QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v47 = a6;
  v48 = a7;
  v53 = a5;
  v45 = a1;
  v46 = a2;
  v39 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v51 = sub_1AE92670C();
  v43 = *(_QWORD *)(v51 - 8);
  v13 = MEMORY[0x1E0C80A78](v51);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (uint64_t *)((char *)&v38 - v17);
  v49 = *(char **)(a3 - 8);
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4FD234();
  v19 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v40 = *(_QWORD *)(AssociatedTypeWitness - 8);
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v38 - v22;
  v24 = (void (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v49 + 2);
  v52 = v19;
  v24(v7, v50, v19);
  sub_1AE926070();
  v25 = TupleTypeMetadata2;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v49 = v23;
  v50 = AssociatedTypeWitness;
  v44 = AssociatedConformanceWitness;
  sub_1AE926760();
  v43 = *(_QWORD *)(v43 + 32);
  ((void (*)(uint64_t *, char *, uint64_t))v43)(v18, v15, v51);
  sub_1AE503C9C((uint64_t)v18);
  if (v27)
  {
LABEL_7:
    v35 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v36 = (uint64_t)v49;
    v37 = v50;
  }
  else
  {
    v42 = *(uint64_t (**)(char *, char *, uint64_t))(v39 + 32);
    while (1)
    {
      v28 = (char *)v18 + *(int *)(v25 + 48);
      v54 = *v18;
      v29 = v42(v12, v28, a4);
      MEMORY[0x1E0C80A78](v29);
      *(&v38 - 6) = v52;
      *(&v38 - 5) = a4;
      v30 = v47;
      *(&v38 - 4) = v53;
      *(&v38 - 3) = v30;
      *(&v38 - 2) = v48;
      *(&v38 - 1) = (uint64_t)v12;
      v31 = v45(&v54, sub_1AE865C5C);
      if (v8)
        break;
      v32 = v31;
      v33 = sub_1AE4FD730();
      v34(v33);
      if ((v32 & 1) != 0)
      {
        sub_1AE926760();
        ((void (*)(uint64_t *, char *, uint64_t))v43)(v18, v15, v51);
        sub_1AE503C9C((uint64_t)v18);
        if (!v27)
          continue;
      }
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v49, v50);
    v36 = sub_1AE4FD730();
  }
  v35(v36, v37);
  sub_1AE4F667C();
}

uint64_t sub_1AE865A10(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *);
  uint64_t v31;

  v27 = a3;
  v31 = a2;
  v30 = a1;
  v26[1] = a7;
  v29 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)v26 - v11;
  v13 = sub_1AE92670C();
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v26 - v15;
  v17 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](v14);
  v19 = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_getAssociatedTypeWitness();
  v28 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v26 - v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v27, v29);
  sub_1AE926070();
  swift_getAssociatedConformanceWitness();
  do
  {
    sub_1AE926760();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v16, 1, AssociatedTypeWitness) == 1)break;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v16, AssociatedTypeWitness);
    v23 = v30(v12);
    if (v7)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v22, v20);
    }
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
  }
  while ((v24 & 1) != 0);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v22, v20);
}

uint64_t sub_1AE865C5C(uint64_t (*a1)(char *), uint64_t a2)
{
  uint64_t *v2;

  return sub_1AE865A10(a1, a2, v2[7], v2[2], v2[3], v2[4], v2[5]);
}

void Sequence<>.bufferToContext()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[3];

  v6[2] = Sequence<>.bufferToDictionaryGroupedBySubject()(a1, a2, a3);
  swift_getAssociatedTypeWitness();
  v4 = sub_1AE500764();
  sub_1AE5962D8();
  v5 = sub_1AE4FF478();
  v6[0] = MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF38], v4);
  v6[1] = a3;
  MEMORY[0x1AF454B70](&protocol conformance descriptor for <> [A : B], v5, v6);
  TripleProviderProtocol.context()(v5);
}

uint64_t sub_1AE865D24(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t Sequence<>.bufferToDictionaryGroupedBySubject()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(&v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v3, a1);
  v11 = a1;
  v12 = a2;
  v13 = a3;
  sub_1AE5962D8();
  return sub_1AE925CD4();
}

uint64_t sub_1AE865E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return v5(AssociatedTypeWitness, a4);
}

uint64_t sub_1AE865E70(uint64_t a1)
{
  uint64_t *v1;

  return sub_1AE865E00(a1, v1[2], v1[3], v1[4]);
}

void Sequence<>.bufferToContext<A>(objectMapping:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];

  v10[2] = Sequence<>.bufferToDictionaryGroupedBySubject()(a2, a4, a6);
  swift_getAssociatedTypeWitness();
  v8 = sub_1AE500764();
  sub_1AE5962D8();
  v9 = sub_1AE4FF478();
  v10[0] = MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF38], v8);
  v10[1] = a6;
  MEMORY[0x1AF454B70](&protocol conformance descriptor for <> [A : B], v9, v10);
  TripleProviderProtocol.context<A>(objectMapping:)(a1);
}

uint64_t sub_1AE865F5C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

void static LogSignpost.begin(logger:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  char *v22;
  uint64_t v23;
  NSObject *v24;
  os_signpost_type_t v25;
  const char *v26;
  char v27;
  char v28;
  uint8_t *v29;
  os_signpost_id_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;

  sub_1AE4FC4D4();
  v37 = v5;
  v35 = v6;
  v8 = v7;
  v10 = v9;
  v36 = v11;
  v12 = sub_1AE508FBC();
  sub_1AE506C14();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE50900C();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v33 - v15;
  v17 = sub_1AE4F6854();
  sub_1AE508180();
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F683C();
  v19 = sub_1AE5035E4();
  v33 = *(_QWORD *)(v19 - 8);
  v34 = v19;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v20);
  sub_1AE4F910C();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v22 = v16;
  v21(v1, v8, v17);
  v23 = v37;
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v24 = sub_1AE925B00();
  v25 = sub_1AE926670();
  if ((sub_1AE926700() & 1) == 0)
  {

    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))(v0, v22, v12);
    sub_1AE5086D0();
    sub_1AE4FCE84();
    v31 = sub_1AE925B30();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v22, v12);
    *(_QWORD *)v10 = v35;
    *(_QWORD *)(v10 + 8) = v23;
    *(_BYTE *)(v10 + 16) = v36;
    *(_QWORD *)(v10 + 24) = v31;
    v32 = sub_1AE4FBB00();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v10 + *(int *)(v32 + 24), v4, v34);
    sub_1AE4F8180();
    return;
  }
  if ((v36 & 1) == 0)
  {
    v26 = v35;
    if (v35)
    {
LABEL_9:
      v29 = (uint8_t *)sub_1AE4F66A0();
      *(_WORD *)v29 = 0;
      v30 = sub_1AE925AD0();
      sub_1AE5079F0(&dword_1AE4F2000, v24, v25, v30, v26, "", v29);
      sub_1AE4F9064();
    }
    __break(1u);
    goto LABEL_12;
  }
  if ((unint64_t)v35 >> 32)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1AE867854();
  if (!v27)
  {
    sub_1AE867848();
    if (!(!v27 & v28))
    {
      v26 = (const char *)&v38;
      goto LABEL_9;
    }
    goto LABEL_13;
  }
LABEL_14:
  __break(1u);
}

void withThrowingSignpost<A>(_:closure:)(const char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_signpost_type_t v28;
  const char *v29;
  char v30;
  char v31;
  uint8_t *v32;
  os_signpost_id_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  int v49;
  char v50;

  v47 = a5;
  v48 = a1;
  v45 = a2;
  v46 = a6;
  v49 = a3;
  v10 = sub_1AE925AE8();
  v43 = *(_QWORD *)(v10 - 8);
  v44 = v10;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE50900C();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v39 - v13;
  v15 = sub_1AE925B6C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F666C();
  v19 = v18 - v17;
  v20 = sub_1AE925B0C();
  v41 = *(_QWORD *)(v20 - 8);
  v42 = v20;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v21);
  sub_1AE4F666C();
  v24 = v23 - v22;
  v40 = type metadata accessor for LogSignpost();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v25);
  sub_1AE4F683C();
  if (qword_1ED31C728 != -1)
    swift_once();
  v26 = sub_1AE4FB608(v15, (uint64_t)qword_1ED31C710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v19, v26, v15);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v27 = sub_1AE925B00();
  v28 = sub_1AE926670();
  if ((sub_1AE926700() & 1) == 0)
    goto LABEL_12;
  v39[0] = a4;
  v39[1] = v7;
  if ((v49 & 1) == 0)
  {
    if (v48)
    {
      v29 = v48;
LABEL_11:
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      v33 = sub_1AE925AD0();
      _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v27, v28, v33, v29, "", v32, 2u);
      MEMORY[0x1AF454C78](v32, -1, -1);
      a4 = (void (*)(uint64_t))v39[0];
LABEL_12:

      v35 = v43;
      v34 = v44;
      (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v6, v14, v44);
      sub_1AE925B3C();
      swift_allocObject();
      v36 = sub_1AE925B30();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v34);
      v37 = v45;
      *(_QWORD *)v8 = v48;
      *(_QWORD *)(v8 + 8) = v37;
      *(_BYTE *)(v8 + 16) = v49;
      *(_QWORD *)(v8 + 24) = v36;
      v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v8 + *(int *)(v40 + 24), v24, v42);
      a4(v38);
      sub_1AE867334();
      sub_1AE50B9EC(v8);
      return;
    }
    __break(1u);
    goto LABEL_14;
  }
  if ((unint64_t)v48 >> 32)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1AE867854();
  if (!v30)
  {
    sub_1AE867848();
    if (!(!v30 & v31))
    {
      v29 = &v50;
      goto LABEL_11;
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
}

Swift::Void __swiftcall LogSignpost.end()()
{
  char v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  char v9;
  _WORD *v10;
  os_signpost_id_t v11;
  uint64_t v12;
  uint64_t v13;
  os_signpost_type_t v14;
  unint64_t v15;

  sub_1AE4FC4D4();
  sub_1AE8678CC();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE502114(v3, v13);
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE5035E4();
  sub_1AE508180();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1AE4FBB00();
  sub_1AE50A19C(v6);
  sub_1AE4F6E44();
  sub_1AE925B00();
  sub_1AE8678B0();
  v7 = sub_1AE926664();
  if ((sub_1AE8678C0(v7) & 1) == 0)
  {
    sub_1AE507978();

    sub_1AE508514();
    sub_1AE8678A0();
    sub_1AE4F8180();
    return;
  }
  if ((v0 & 1) == 0)
  {
    if (v15)
    {
LABEL_8:
      swift_retain();
      sub_1AE925B48();
      sub_1AE507978();
      if (sub_1AE508080() != *MEMORY[0x1E0DF2190])
        sub_1AE508984();
      v10 = (_WORD *)sub_1AE4F66A0();
      v11 = sub_1AE867890(v10);
      sub_1AE867860(&dword_1AE4F2000, v12, v14, v11);
      sub_1AE4F9064();
    }
    __break(1u);
    goto LABEL_13;
  }
  if (HIDWORD(v15))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1AE867854();
  if (!v8)
  {
    sub_1AE867848();
    if (!(!v8 & v9))
      goto LABEL_8;
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
}

void LogSignpost.end(message:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  NSObject *v18;
  uint64_t v19;
  const char *v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_WORD **, uint64_t *, uint64_t *);
  uint64_t v35;
  os_signpost_id_t v36;
  _QWORD v37[2];
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _WORD *v54;
  uint64_t v55;
  uint64_t v56;

  sub_1AE4FC4D4();
  v2 = v1;
  v3 = sub_1AE8678CC();
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1AE508FBC();
  v6 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  sub_1AE4F686C();
  v49 = v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v37 - v9;
  v11 = sub_1AE5035E4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F666C();
  v15 = v14 - v13;
  v16 = sub_1AE4FBB00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, v0 + *(int *)(v16 + 24), v11);
  v48 = *(_QWORD *)v0;
  v17 = *(_BYTE *)(v0 + 16);
  swift_retain();
  v18 = sub_1AE925B00();
  sub_1AE925B24();
  v43 = sub_1AE926664();
  v44 = v2;
  v50 = sub_1AE925AB8();
  if ((sub_1AE926700() & 1) == 0)
  {
    swift_release();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v51);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
    sub_1AE4F8180();
    return;
  }
  v38 = v18;
  v39 = v15;
  v41 = v10;
  v42 = v6;
  v40 = v12;
  v37[1] = v11;
  v19 = v51;
  if ((v17 & 1) != 0)
  {
    if (HIDWORD(v48))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    sub_1AE867854();
    if (v22)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    sub_1AE867848();
    v21 = v50;
    if (!v22 & v23)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    v20 = (const char *)&v55;
  }
  else
  {
    v20 = (const char *)v48;
    if (!v48)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v21 = v50;
  }
  v24 = v44[2];
  v25 = v44[5];
  v26 = (_QWORD *)v44[6];
  swift_retain();
  v27 = v45;
  sub_1AE925B48();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t))(v46 + 88))(v27, v47) == *MEMORY[0x1E0DF2190])
  {
    v28 = v19;
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v49, v41, v19);
    if ((v21 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (!HIDWORD(v21))
    {
      v29 = (uint8_t *)sub_1AE4F66A0();
      if (!v26)
      {
        v30 = 0;
        goto LABEL_17;
      }
      if ((unint64_t)(v26 - 0x200000000000000) >> 61 == 7)
      {
        v30 = sub_1AE4F66A0();
LABEL_17:
        v48 = v25;
        v44 = v26;
        if (!v25)
          goto LABEL_20;
        if ((unint64_t)(v25 - 0x400000000000000) >> 59 == 31)
        {
          v25 = sub_1AE4F66A0();
LABEL_20:
          v56 = v24;
          v52 = v25;
          v53 = v30;
          v31 = v29;
          *(_WORD *)v29 = 0;
          v54 = v29 + 2;
          v32 = *(_QWORD *)(v24 + 16);
          if (v32)
          {
            swift_bridgeObjectRetain();
            v33 = v24 + 40;
            do
            {
              v34 = *(void (**)(_WORD **, uint64_t *, uint64_t *))(v33 - 8);
              swift_retain();
              v34(&v54, &v53, &v52);
              swift_release();
              v33 += 16;
              --v32;
            }
            while (v32);
            sub_1AE61E2A8((uint64_t)&v56);
            v28 = v19;
          }
          v35 = v49;
          v36 = sub_1AE925AD0();
          _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v38, (os_signpost_type_t)v43, v36, v20, "[Error] Interval already ended", v31, v50);
          (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v35, v28);
          if (v30)
          {
            sub_1AE501548(&qword_1ED319410);
            swift_arrayDestroy();
            sub_1AE4F9064();
          }
          if (v25)
          {
            swift_arrayDestroy();
            sub_1AE4F9064();
          }
          sub_1AE4F9064();
        }
        goto LABEL_32;
      }
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    __break(1u);
    goto LABEL_31;
  }
LABEL_37:
  __break(1u);
}

void static LogSignpost.emit(_:_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_BYTE **, uint64_t *, uint64_t *);
  uint64_t v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;

  sub_1AE4FC4D4();
  v3 = v2;
  v39 = v4;
  v38 = v5;
  v7 = v6;
  v40 = sub_1AE508FBC();
  sub_1AE506C14();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F686C();
  v37 = v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v37 - v11;
  v13 = sub_1AE4F6854();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F666C();
  v17 = v16 - v15;
  v18 = sub_1AE5035E4();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F910C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v17, v7, v13);
  sub_1AE925AF4();
  sub_1AE925ADC();
  v20 = (void *)sub_1AE925B00();
  sub_1AE92667C();
  v21 = sub_1AE925AB8();
  if ((sub_1AE926700() & 1) == 0)
  {

    (*(void (**)(char *, uint64_t))(v0 + 8))(v12, v40);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v1, v18);
    sub_1AE4F8180();
    return;
  }
  v22 = v37;
  v23 = v38;
  v24 = v40;
  if ((v39 & 1) == 0)
  {
    if (v38)
      goto LABEL_9;
    __break(1u);
  }
  if (HIDWORD(v23))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1AE867854();
  if (!v25)
  {
    sub_1AE867848();
    if (!v25 & v26)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
LABEL_9:
    v27 = *(_QWORD *)(v3 + 16);
    v28 = *(_BYTE *)(v3 + 24);
    v29 = *(_BYTE *)(v3 + 25);
    v31 = *(_QWORD *)(v3 + 40);
    v30 = *(_QWORD *)(v3 + 48);
    (*(void (**)(uint64_t, char *, uint64_t))(v0 + 16))(v22, v12, v24);
    if ((v21 & 0x8000000000000000) == 0)
    {
      if (HIDWORD(v21))
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      v32 = (_BYTE *)sub_1AE4F66A0();
      if (v30)
      {
        if ((unint64_t)(v30 - 0x1000000000000000) >> 61 != 7)
        {
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
        v30 = sub_1AE4F66A0();
      }
      if (v31)
      {
        if ((unint64_t)(v31 - 0x400000000000000) >> 59 != 31)
        {
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        v33 = sub_1AE4F66A0();
      }
      else
      {
        v33 = 0;
      }
      v41 = v33;
      v42 = v30;
      *v32 = v28;
      v32[1] = v29;
      v43 = v32 + 2;
      v44 = v27;
      v34 = *(_QWORD *)(v27 + 16);
      if (v34)
      {
        swift_bridgeObjectRetain();
        v35 = v27 + 40;
        do
        {
          v36 = *(void (**)(_BYTE **, uint64_t *, uint64_t *))(v35 - 8);
          swift_retain();
          v36(&v43, &v42, &v41);
          swift_release();
          v35 += 16;
          --v34;
        }
        while (v34);
        sub_1AE61E2A8((uint64_t)&v44);
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_24;
  }
LABEL_29:
  __break(1u);
}

void withSignpost<A>(_:closure:)()
{
  uint64_t v0;
  uint64_t v1;
  const char *v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_signpost_type_t v29;
  const char *v30;
  char v31;
  char v32;
  uint8_t *v33;
  os_signpost_id_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  int v48;
  uint64_t v49;

  sub_1AE4FC4D4();
  v46 = v3;
  v47 = v2;
  v5 = v4;
  v44 = v6;
  v45 = v7;
  v48 = v8;
  v43 = sub_1AE508FBC();
  sub_1AE506C14();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v39 - v13;
  v15 = sub_1AE4F6854();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1AE5035E4();
  v41 = *(_QWORD *)(v19 - 8);
  v42 = v19;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v20);
  sub_1AE4F666C();
  v23 = v22 - v21;
  v40 = sub_1AE4FBB00();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED31C728 != -1)
    swift_once();
  v27 = sub_1AE4FB608(v15, (uint64_t)qword_1ED31C710);
  (*(void (**)(char *, uint64_t, uint64_t))(v0 + 16))(v18, v27, v15);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v28 = sub_1AE925B00();
  v29 = sub_1AE926670();
  if ((sub_1AE926700() & 1) == 0)
  {

    v35 = v43;
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v12, v14, v43);
    sub_1AE5086D0();
    sub_1AE4FCE84();
    v36 = sub_1AE925B30();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v14, v35);
    v37 = v44;
    *(_QWORD *)v26 = v47;
    *((_QWORD *)v26 + 1) = v37;
    v26[16] = v48;
    *((_QWORD *)v26 + 3) = v36;
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 32))(&v26[*(int *)(v40 + 24)], v23, v42);
    v5(v38);
    sub_1AE867334();
    sub_1AE50B9EC((uint64_t)v26);
    sub_1AE4F8180();
    return;
  }
  v39[1] = v5;
  if ((v48 & 1) == 0)
  {
    if (v47)
    {
      v30 = v47;
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_14;
  }
  if ((unint64_t)v47 >> 32)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1AE867854();
  if (!v31)
  {
    sub_1AE867848();
    if (!(!v31 & v32))
    {
      v30 = (const char *)&v49;
LABEL_11:
      v33 = (uint8_t *)sub_1AE4F66A0();
      *(_WORD *)v33 = 0;
      v34 = sub_1AE925AD0();
      sub_1AE5079F0(&dword_1AE4F2000, v28, v29, v34, v30, "", v33);
      sub_1AE4F9064();
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
}

uint64_t withThrowingSignpostAsync<A>(_:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 56) = a6;
  *(_BYTE *)(v6 + 176) = a4;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a3;
  *(_QWORD *)(v6 + 24) = a1;
  v7 = sub_1AE508FBC();
  *(_QWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  v8 = sub_1AE4F6854();
  *(_QWORD *)(v6 + 96) = v8;
  *(_QWORD *)(v6 + 104) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 + 112) = sub_1AE4FC554();
  v9 = sub_1AE5035E4();
  *(_QWORD *)(v6 + 120) = v9;
  *(_QWORD *)(v6 + 128) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 136) = sub_1AE4FC554();
  *(_QWORD *)(v6 + 144) = sub_1AE4FBB00();
  *(_QWORD *)(v6 + 152) = sub_1AE4FC554();
  return sub_1AE4F90B4();
}

uint64_t sub_1AE866FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_signpost_type_t v6;
  uint64_t result;
  const char *v8;
  uint8_t *v9;
  os_signpost_id_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD);

  if (qword_1ED31C728 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = sub_1AE4FB608(v3, (uint64_t)qword_1ED31C710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v5 = sub_1AE925B00();
  v6 = sub_1AE926670();
  result = sub_1AE926700();
  if ((result & 1) == 0)
  {

    v11 = *(_QWORD *)(v0 + 152);
    v21 = *(_QWORD *)(v0 + 128);
    v22 = *(_QWORD *)(v0 + 144);
    v23 = *(_QWORD *)(v0 + 120);
    v24 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 64);
    v14 = *(_QWORD *)(v0 + 72);
    v16 = *(_QWORD *)(v0 + 40);
    v15 = *(int **)(v0 + 48);
    v17 = *(_BYTE *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v14 + 16))(*(_QWORD *)(v0 + 80), v12, v13);
    sub_1AE5086D0();
    sub_1AE4FCE84();
    v19 = sub_1AE925B30();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    *(_QWORD *)v11 = v18;
    *(_QWORD *)(v11 + 8) = v16;
    *(_BYTE *)(v11 + 16) = v17;
    *(_QWORD *)(v11 + 24) = v19;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v11 + *(int *)(v22 + 24), v24, v23);
    v25 = (uint64_t (*)(_QWORD))((char *)v15 + *v15);
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v20;
    *v20 = v0;
    v20[1] = sub_1AE867218;
    return v25(*(_QWORD *)(v0 + 24));
  }
  v8 = *(const char **)(v0 + 32);
  if ((*(_BYTE *)(v0 + 176) & 1) == 0)
  {
    if (v8)
      goto LABEL_11;
    __break(1u);
  }
  if ((unint64_t)v8 >> 32)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v8 >> 11 != 27)
  {
    if (v8 >> 16 <= 0x10)
    {
      v8 = (const char *)(v0 + 16);
LABEL_11:
      v9 = (uint8_t *)sub_1AE4F66A0();
      *(_WORD *)v9 = 0;
      v10 = sub_1AE925AD0();
      sub_1AE5079F0(&dword_1AE4F2000, v5, v6, v10, v8, "", v9);
      sub_1AE4F9064();
    }
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1AE867218()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return sub_1AE4F90B4();
}

uint64_t sub_1AE867274()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE867878();
  sub_1AE50B9EC(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_1AE4FC4C0(*(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_1AE8672D4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE867878();
  sub_1AE50B9EC(v0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return sub_1AE4FC4C0(*(uint64_t (**)(void))(v1 + 8));
}

void sub_1AE867334()
{
  char v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  char v9;
  _WORD *v10;
  os_signpost_id_t v11;
  uint64_t v12;
  uint64_t v13;
  os_signpost_type_t v14;
  unint64_t v15;

  sub_1AE4FC4D4();
  sub_1AE8678CC();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE502114(v3, v13);
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE5035E4();
  sub_1AE508180();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1AE4FBB00();
  sub_1AE50A19C(v6);
  sub_1AE4F6E44();
  sub_1AE925B00();
  sub_1AE8678B0();
  v7 = sub_1AE926664();
  if ((sub_1AE8678C0(v7) & 1) == 0)
  {
    sub_1AE507978();

    sub_1AE508514();
    sub_1AE8678A0();
    sub_1AE4F8180();
    return;
  }
  if ((v0 & 1) == 0)
  {
    if (v15)
    {
LABEL_8:
      swift_retain();
      sub_1AE925B48();
      sub_1AE507978();
      if (sub_1AE508080() != *MEMORY[0x1E0DF2190])
        sub_1AE508984();
      v10 = (_WORD *)sub_1AE4F66A0();
      v11 = sub_1AE867890(v10);
      sub_1AE867860(&dword_1AE4F2000, v12, v14, v11);
      sub_1AE4F9064();
    }
    __break(1u);
    goto LABEL_13;
  }
  if (HIDWORD(v15))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1AE867854();
  if (!v8)
  {
    sub_1AE867848();
    if (!(!v8 & v9))
      goto LABEL_8;
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
}

_QWORD *initializeBufferWithCopyOfBuffer for LogSignpost(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_QWORD *)(a1 + 24) = a2[3];
    v5 = *(int *)(a3 + 24);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_1AE925B0C();
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_retain();
    v9(v6, v7, v8);
  }
  return v3;
}

uint64_t assignWithCopy for LogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1AE925B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for LogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1AE925B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for LogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1AE925B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1AE8676F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1AE5035E4();
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1AE867760(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_1AE5035E4();
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1AE8677C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AE925B0C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1AE867860(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4)
{
  const char *v4;
  uint8_t *v5;
  NSObject *v6;
  uint64_t v7;

  _os_signpost_emit_with_name_impl(a1, v6, a3, a4, *(const char **)(v7 - 96), v4, v5, 2u);
}

void sub_1AE867878()
{
  sub_1AE867334();
}

uint64_t sub_1AE867890(_WORD *a1)
{
  *a1 = 0;
  return sub_1AE925AD0();
}

uint64_t sub_1AE8678A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE8678B0()
{
  return sub_1AE925B24();
}

uint64_t sub_1AE8678C0(int a1)
{
  uint64_t v1;

  *(_DWORD *)(v1 - 124) = a1;
  return sub_1AE926700();
}

uint64_t sub_1AE8678CC()
{
  return sub_1AE925B18();
}

void sub_1AE8678D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1AE505988();
  sub_1AE501548(&qword_1EEDA4990);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE500770();
  sub_1AE502134();
  sub_1AE4FCC94();
  if (!v0)
  {
    sub_1AE869520();
    MEMORY[0x1E0C80A78](v3);
    sub_1AE4FF484();
    sub_1AE6A0C3C((void (*)(uint64_t))sub_1AE8694AC, 1, v1);
    v4 = sub_1AE501548(&qword_1EED9FBA0);
    sub_1AE4FE248(v4);
    if (v5)
    {
      v6 = sub_1AE4F9038();
      sub_1AE509278(v6, &qword_1EEDA4990);
    }
    else
    {
      v7 = sub_1AE50AE6C();
      if ((_DWORD)v7 == 1)
      {
        sub_1AE501548((uint64_t *)&unk_1ED319C60);
        sub_1AE507CB8();
        sub_1AE4F9038();
        goto LABEL_9;
      }
      sub_1AE50A7D0(v7, v8, type metadata accessor for CustomGraphPerson);
      sub_1AE4F9038();
    }
    v9 = type metadata accessor for CustomGraphPerson(0);
    sub_1AE503CB8(v9);
  }
LABEL_9:
  sub_1AE4FBD6C();
}

void sub_1AE8679DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1AE505988();
  sub_1AE501548(&qword_1EED9F890);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE500770();
  sub_1AE502134();
  sub_1AE4FCC94();
  if (!v0)
  {
    sub_1AE869520();
    MEMORY[0x1E0C80A78](v3);
    sub_1AE4FF484();
    sub_1AE6A0C58((void (*)(uint64_t))sub_1AE8694F4, 1, v1);
    v4 = sub_1AE501548(&qword_1EED9AE90);
    sub_1AE4FE248(v4);
    if (v5)
    {
      v6 = sub_1AE4F9038();
      sub_1AE509278(v6, &qword_1EED9F890);
    }
    else
    {
      v7 = sub_1AE50AE6C();
      if ((_DWORD)v7 == 1)
      {
        sub_1AE501548((uint64_t *)&unk_1ED319C60);
        sub_1AE507CB8();
        sub_1AE4F9038();
        goto LABEL_9;
      }
      sub_1AE50A7D0(v7, v8, type metadata accessor for CustomGraphSongEvent);
      sub_1AE4F9038();
    }
    v9 = type metadata accessor for CustomGraphSongEvent(0);
    sub_1AE503CB8(v9);
  }
LABEL_9:
  sub_1AE4FBD6C();
}

void sub_1AE867AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1AE505988();
  sub_1AE501548(&qword_1EED9F888);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE500770();
  sub_1AE502134();
  sub_1AE4FCC94();
  if (!v0)
  {
    sub_1AE869520();
    MEMORY[0x1E0C80A78](v3);
    sub_1AE4FF484();
    sub_1AE6A0F14((void (*)(uint64_t))sub_1AE8694DC, 1, v1);
    v4 = sub_1AE501548(&qword_1EED9F490);
    sub_1AE4FE248(v4);
    if (v5)
    {
      v6 = sub_1AE4F9038();
      sub_1AE509278(v6, &qword_1EED9F888);
    }
    else
    {
      v7 = sub_1AE50AE6C();
      if ((_DWORD)v7 == 1)
      {
        sub_1AE501548((uint64_t *)&unk_1ED319C60);
        sub_1AE507CB8();
        sub_1AE4F9038();
        goto LABEL_9;
      }
      sub_1AE50A7D0(v7, v8, type metadata accessor for CustomGraphActivityEvent);
      sub_1AE4F9038();
    }
    v9 = type metadata accessor for CustomGraphActivityEvent(0);
    sub_1AE503CB8(v9);
  }
LABEL_9:
  sub_1AE4FBD6C();
}

uint64_t sub_1AE867BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  unsigned __int8 v15;
  uint64_t v16;

  swift_retain();
  v5 = sub_1AE89EAE4(a1);
  result = swift_release();
  if (!v2)
  {
    v16 = v5;
    MEMORY[0x1E0C80A78](result);
    sub_1AE6A0F30((uint64_t (*)(void))sub_1AE86947C, 1, (uint64_t)v14);
    if (v15 == 255)
    {
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(a2 + 48) = 0;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)a2 = 0u;
    }
    else
    {
      v7 = v14[0];
      if ((v15 & 1) != 0)
      {
        v16 = v14[0];
        sub_1AE501548((uint64_t *)&unk_1ED319C60);
        swift_willThrowTypedImpl();
        return swift_bridgeObjectRelease();
      }
      else
      {
        v8 = v14[1];
        v9 = v14[2];
        v10 = v14[3];
        v11 = v14[4];
        v12 = v14[5];
        v13 = v14[6];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)a2 = v7;
        *(_QWORD *)(a2 + 8) = v8;
        *(_QWORD *)(a2 + 16) = v9;
        *(_QWORD *)(a2 + 24) = v10;
        *(_QWORD *)(a2 + 32) = v11;
        *(_QWORD *)(a2 + 40) = v12;
        *(_QWORD *)(a2 + 48) = v13;
      }
    }
  }
  return result;
}

uint64_t sub_1AE867D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[11];
  unsigned __int8 v21;
  _OWORD v22[2];
  uint64_t v23;
  uint64_t v24;

  v6 = *(_OWORD *)(v2 + 32);
  v22[0] = *(_OWORD *)(v2 + 16);
  v22[1] = v6;
  v23 = *(_QWORD *)(v2 + 48);
  sub_1AE6A183C((uint64_t)v22);
  v7 = sub_1AE89EB64(a1);
  result = sub_1AE6A1880((uint64_t)v22);
  if (!v3)
  {
    v24 = v7;
    MEMORY[0x1E0C80A78](result);
    sub_1AE6A10B4((uint64_t (*)(void))sub_1AE8693B8, 1, (uint64_t)v20);
    if (v21 == 255)
    {
      result = sub_1AE4F81B8();
      *(_QWORD *)(a2 + 80) = 0;
      *(_OWORD *)(a2 + 48) = 0u;
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)a2 = 0u;
    }
    else
    {
      v9 = v20[0];
      if ((v21 & 1) != 0)
      {
        v24 = v20[0];
        sub_1AE501548((uint64_t *)&unk_1ED319C60);
        swift_willThrowTypedImpl();
        return sub_1AE4F81B8();
      }
      else
      {
        v10 = v20[1];
        v11 = v20[2];
        v12 = v20[3];
        v13 = v20[4];
        v14 = v20[5];
        v18 = v20[7];
        v19 = v20[6];
        v17 = v20[8];
        v16 = v20[9];
        v15 = v20[10];
        result = sub_1AE4F81B8();
        *(_QWORD *)a2 = v9;
        *(_QWORD *)(a2 + 8) = v10;
        *(_QWORD *)(a2 + 16) = v11;
        *(_QWORD *)(a2 + 24) = v12;
        *(_QWORD *)(a2 + 32) = v13;
        *(_QWORD *)(a2 + 40) = v14;
        *(_QWORD *)(a2 + 48) = v19;
        *(_QWORD *)(a2 + 56) = v18;
        *(_QWORD *)(a2 + 64) = v17;
        *(_QWORD *)(a2 + 72) = v16;
        *(_QWORD *)(a2 + 80) = v15;
      }
    }
  }
  return result;
}

uint64_t sub_1AE867EEC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t (*v21)(__int128 *);
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int16 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = v3;
  v21 = (uint64_t (*)(__int128 *))result;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = a3;
    swift_bridgeObjectRetain();
    v7 = 0;
    v20 = v6;
    while (1)
    {
      v34 = v5;
      v8 = *(_QWORD *)(v6 + v7 + 56);
      v9 = *(_QWORD *)(v6 + v7 + 64);
      v10 = *(_QWORD *)(v6 + v7 + 104);
      v11 = *(_QWORD *)(v6 + v7 + 112);
      v12 = *(_QWORD *)(v6 + v7 + 128);
      v13 = *(_QWORD *)(v6 + v7 + 136);
      v14 = *(_WORD *)(v6 + v7 + 120);
      v15 = *(_QWORD *)(v6 + v7 + 96);
      v16 = *(_WORD *)(v6 + v7 + 72);
      v17 = *(_QWORD *)(v6 + v7 + 48);
      v22 = *(_OWORD *)(v6 + v7 + 32);
      v23 = v17;
      v24 = v8;
      v25 = v9;
      v26 = v16;
      v27 = *(_OWORD *)(v6 + v7 + 80);
      v28 = v15;
      v29 = v10;
      v30 = v11;
      v31 = v14;
      v32 = v12;
      v33 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = v21(&v22);
      if (v4)
        break;
      v19 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
      {
        v7 += 112;
        v5 = v34 - 1;
        v6 = v20;
        if (v34 != 1)
          continue;
      }
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AE86806C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t (*v22)(__int128 *);
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = v3;
  v22 = (uint64_t (*)(__int128 *))result;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = a3;
    swift_bridgeObjectRetain();
    v7 = 0;
    v21 = v6;
    while (1)
    {
      v36 = v5;
      v8 = *(_QWORD *)(v6 + v7 + 56);
      v9 = *(_QWORD *)(v6 + v7 + 64);
      v10 = *(_QWORD *)(v6 + v7 + 104);
      v11 = *(_QWORD *)(v6 + v7 + 112);
      v12 = *(_QWORD *)(v6 + v7 + 144);
      v13 = *(_QWORD *)(v6 + v7 + 128);
      v14 = *(_QWORD *)(v6 + v7 + 136);
      v15 = *(_WORD *)(v6 + v7 + 120);
      v16 = *(_QWORD *)(v6 + v7 + 96);
      v17 = *(_WORD *)(v6 + v7 + 72);
      v18 = *(_QWORD *)(v6 + v7 + 48);
      v23 = *(_OWORD *)(v6 + v7 + 32);
      v24 = v18;
      v25 = v8;
      v26 = v9;
      v27 = v17;
      v28 = *(_OWORD *)(v6 + v7 + 80);
      v29 = v16;
      v30 = v10;
      v31 = v11;
      v32 = v15;
      v33 = v13;
      v34 = v14;
      v35 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = v22(&v23);
      if (v4)
        break;
      v20 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
      {
        v7 += 120;
        v5 = v36 - 1;
        v6 = v21;
        if (v36 != 1)
          continue;
      }
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AE8681F4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X2>, uint64_t a3@<X3>, void (*a4)(uint64_t, _QWORD *, uint64_t)@<X4>, uint64_t (*a5)(_QWORD)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v13 = swift_bridgeObjectRetain();
  v14 = a2(v13);
  result = sub_1AE868418(a1, v14, a3, a4);
  if (!v6)
  {
    v16 = a5(0);
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a6, 0, 1, v16);
  }
  return result;
}

double sub_1AE868290@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  swift_bridgeObjectRetain();
  sub_1AE69D760();
  *(_QWORD *)&result = sub_1AE868320(a1, a2).n128_u64[0];
  return result;
}

double sub_1AE8682D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  swift_bridgeObjectRetain();
  sub_1AE69D7C4();
  *(_QWORD *)&result = sub_1AE868398(a1, a2).n128_u64[0];
  return result;
}

__n128 sub_1AE868320@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _QWORD v8[2];
  __n128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v12 = a1;
  sub_1AE6E30E4((void (*)(uint64_t *__return_ptr, uint64_t, _QWORD, uint64_t, uint64_t))sub_1AE869494, (uint64_t)v8);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v5 = v8[1];
    v6 = v10;
    result = v9;
    v7 = v11;
    *(_QWORD *)a2 = v8[0];
    *(_QWORD *)(a2 + 8) = v5;
    *(__n128 *)(a2 + 16) = result;
    *(_QWORD *)(a2 + 32) = v6;
    *(_OWORD *)(a2 + 40) = v7;
  }
  return result;
}

__n128 sub_1AE868398@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _QWORD v10[4];
  _QWORD v11[2];
  __int128 v12;
  __n128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  v17 = a1;
  v10[2] = &v17;
  sub_1AE6E44A8(v11, sub_1AE8693F8, v10);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v5 = v11[1];
    v6 = v15;
    v7 = v12;
    result = v13;
    v8 = v14;
    v9 = v16;
    *(_QWORD *)a2 = v11[0];
    *(_QWORD *)(a2 + 8) = v5;
    *(_OWORD *)(a2 + 16) = v7;
    *(__n128 *)(a2 + 32) = result;
    *(_OWORD *)(a2 + 48) = v8;
    *(_QWORD *)(a2 + 64) = v6;
    *(_OWORD *)(a2 + 72) = v9;
  }
  return result;
}

uint64_t sub_1AE868418(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _QWORD *, uint64_t))
{
  _QWORD v5[4];
  uint64_t v6;

  v6 = a1;
  v5[2] = &v6;
  a4(a3, v5, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE868468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  _QWORD v14[4];
  uint64_t v15;

  v15 = a5;
  v14[2] = &v15;
  swift_retain();
  return a7(a6, v14, a1, a2, a3, a4);
}

_QWORD *ViewService.siriPersonView.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(id, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = *(void **)(v0 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  v3 = (void *)sub_1AE925E18();
  v17[0] = 0;
  v4 = objc_msgSend(v2, sel_requestAssertionForViewName_error_, v3, v17);

  v5 = v17[0];
  if (v4)
  {
    v6 = *(_QWORD **)(v0 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    v7 = v6[5];
    v8 = v6[6];
    sub_1AE4F9858(v6 + 2, v7);
    v9 = *(uint64_t (**)(id, uint64_t, uint64_t))(v8 + 8);
    v10 = v5;
    v11 = v9(v4, v7, v8);
    if (v1)
    {
      return (_QWORD *)swift_unknownObjectRelease();
    }
    else
    {
      v15 = v11;
      v16 = v12;
      type metadata accessor for SubgraphView();
      swift_allocObject();
      return SubgraphView.init(accessAssertion:database:tableName:batchSize:)((uint64_t)v4, v15, v16, 0x7372655069726973, 0xEA00000000006E6FLL, 10);
    }
  }
  else
  {
    v14 = v17[0];
    sub_1AE9246B4();

    return (_QWORD *)swift_willThrow();
  }
}

void SiriPersonView.fetchValues(entityIdentifier:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  void *v33;
  __int128 *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  __int128 v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;

  v3 = v2;
  sub_1AE501548(&qword_1EED9BAD8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CustomGraphPerson(0);
  sub_1AE4F66F0();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v1 + 8);
  v105 = MEMORY[0x1E0DEE9D8];
  v85 = *(_QWORD *)(a1 + 16);
  if (!v85)
    return;
  v84 = (int *)v9;
  v13 = a1 + 32;
  v79 = v11;
  v76 = v11 + 16;
  v83 = 162;
  v82 = 1336;
  v81 = 2889;
  v74 = a1;
  sub_1AE4FB75C();
  v14 = 0;
  v77 = xmmword_1AE934260;
  v90 = v12;
  v80 = v7;
  v78 = v13;
  while (1)
  {
    v15 = *(_QWORD *)(v13 + 8 * v14);
    EntityClass.init(intValue:)(SHIBYTE(v15), (uint64_t)&v92);
    if (!v93)
    {
      sub_1AE52F844();
      v33 = (void *)sub_1AE4F6778();
      *v34 = v77;
      v34[1] = 0u;
      v34[2] = 0u;
      v34[3] = 0u;
      *(__int128 *)((char *)v34 + 57) = 0u;
LABEL_20:
      swift_willThrow();

      v3 = 0;
      goto LABEL_61;
    }
    if (v83 < 27)
      break;
    if (!_Records_GDEntityClass_records)
      goto LABEL_70;
    if (*(_QWORD *)(_Records_GDEntityClass_records + 0x278) >= v82)
      goto LABEL_68;
    if (*(_QWORD *)(_Records_GDEntityClass_records + 0x280) >= v81)
      goto LABEL_69;
    v91 = v93;
    v86 = v14;
    v87 = v15;
    if (!_Records_GDEntityClass_classIds[0])
      goto LABEL_71;
    v88 = v3;
    v16 = v92;
    v18 = v94;
    v17 = v95;
    LODWORD(v89) = v96;
    v19 = *(unsigned __int8 *)(_Records_GDEntityClass_records + 0x270);
    v20 = sub_1AE925F8C();
    if (!_Records_GDEntityClass_labels)
      goto LABEL_72;
    v22 = v20;
    v23 = v21;
    v24 = sub_1AE925F8C();
    v26 = v25;
    v100 = v22;
    v101 = v23;
    v102 = v24;
    v103 = v25;
    v104 = v19;
    if (v24 != v18 || v17 != v25)
    {
      v28 = v24;
      if ((sub_1AE926D60() & 1) == 0)
      {
        v92 = v16;
        v93 = v91;
        v94 = v18;
        v95 = v17;
        LOBYTE(v96) = v89;
        EntityClass.ancestorClassesSet.getter();
        sub_1AE5519D8();
        LODWORD(v75) = v29;
        sub_1AE4F9038();
        if ((v75 & 1) == 0)
        {
          sub_1AE52F844();
          v33 = (void *)sub_1AE4F6778();
          *(_QWORD *)v54 = v22;
          *(_QWORD *)(v54 + 8) = v23;
          *(_QWORD *)(v54 + 16) = v28;
          *(_QWORD *)(v54 + 24) = v26;
          *(_QWORD *)(v54 + 32) = v19;
          *(_QWORD *)(v54 + 40) = v16;
          *(_QWORD *)(v54 + 48) = v91;
          *(_QWORD *)(v54 + 56) = v18;
          *(_QWORD *)(v54 + 64) = v17;
          *(_BYTE *)(v54 + 72) = v89;
          v13 = v78;
          v14 = v86;
          goto LABEL_20;
        }
      }
    }
    sub_1AE52F880(v16, v91);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_retain();
    v30 = (uint64_t)v80;
    v31 = v88;
    sub_1AE8678D4();
    v3 = v31;
    if (v31)
    {
      sub_1AE4FCF54();
      sub_1AE4F77C8();
LABEL_64:
      swift_bridgeObjectRelease();
      return;
    }
    sub_1AE4F77C8();
    v32 = v84;
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v30, 1, (uint64_t)v84) == 1)
    {
      sub_1AE52FBE8(v30, &qword_1EED9BAD8);
    }
    else
    {
      v35 = (uint64_t)v79;
      sub_1AE73D7CC(v30, (uint64_t)v79, type metadata accessor for CustomGraphPerson);
      if (*(_QWORD *)&v76[v32[28]])
      {
        v36 = *(_QWORD *)(v35 + v32[27]);
        v37 = *(_QWORD *)(v36 + 16);
        v88 = 0;
        if (v37)
        {
          sub_1AE4F6A24();
          v75 = v36;
          v38 = (uint64_t *)(v36 + 56);
          v39 = MEMORY[0x1E0DEE9D8];
          do
          {
            v40 = v38[1];
            if (v40)
            {
              v41 = *v38;
              v91 = *(v38 - 1);
              v43 = v38[2];
              v42 = v38[3];
              v44 = v38[4];
              v45 = v41 == 0x6361746E6F434E43 && v40 == 0xE900000000000074;
              if ((v45 || (sub_1AE926D60() & 1) != 0) && v44)
              {
                sub_1AE4FB75C();
                sub_1AE4F6A24();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v89 = v43;
                swift_bridgeObjectRetain();
                sub_1AE4F67A4();
                v46 = v42;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1AE519C48();
                  v39 = v50;
                }
                v47 = *(_QWORD *)(v39 + 16);
                v48 = v39;
                if (v47 >= *(_QWORD *)(v39 + 24) >> 1)
                {
                  sub_1AE519C48();
                  v48 = v51;
                }
                *(_QWORD *)(v48 + 16) = v47 + 1;
                v39 = v48;
                v49 = v48 + 16 * v47;
                *(_QWORD *)(v49 + 32) = v46;
                *(_QWORD *)(v49 + 40) = v44;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1AE501A7C();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
            }
            v38 += 11;
            --v37;
          }
          while (v37);
          v87 = v39;
          sub_1AE4F6824();
          v3 = v88;
          v52 = (uint64_t)v79;
          v53 = MEMORY[0x1E0DEE9D8];
          v32 = v84;
        }
        else
        {
          v52 = v35;
          v53 = MEMORY[0x1E0DEE9D8];
          v87 = MEMORY[0x1E0DEE9D8];
        }
        v99 = v53;
        v55 = *(_QWORD *)(v52 + v32[24]);
        v56 = *(_QWORD *)(v55 + 16);
        if (v56)
        {
          v57 = v55 + 32;
          v73 = v55;
          sub_1AE4F6A24();
          v58 = 0;
          v72 = v56;
          v71 = v57;
          while (1)
          {
            v59 = (_QWORD *)(v57 + (v58 << 6));
            v60 = v59[5];
            v91 = *(_QWORD *)(v60 + 16);
            if (v91)
              break;
LABEL_54:
            if (++v58 == v56)
            {
              v88 = v3;
              sub_1AE4F6824();
              v91 = v99;
              goto LABEL_57;
            }
          }
          v75 = v58;
          v61 = v59[2];
          v88 = v59[4];
          swift_bridgeObjectRetain();
          sub_1AE4F6A24();
          v89 = v61;
          sub_1AE4FB75C();
          v62 = 0;
          while (1)
          {
            v63 = *(_QWORD *)(v60 + 8 * v62 + 32);
            swift_retain();
            sub_1AE867BEC(v63, (uint64_t)&v92);
            if (v3)
              break;
            sub_1AE4F77C8();
            v64 = v93;
            if (v93)
            {
              v65 = v92;
              v66 = v94;
              v67 = v95;
              v68 = v97;
              v69 = v98;
              if (v95 | v98)
              {
                sub_1AE4FB75C();
                sub_1AE4F67A4();
                sub_1AE698E20(v65, v64);
                v70 = objc_allocWithZone((Class)GDSiriPersonOrganization);
                sub_1AE868F98(v66, v67, v68, v69);
                MEMORY[0x1AF4533D0]();
                if (*(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_1AE4F9788();
                sub_1AE509780();
                sub_1AE9261FC();
              }
              else
              {
                sub_1AE698E20(v92, v93);
              }
            }
            if (v91 == ++v62)
            {
              swift_bridgeObjectRelease();
              sub_1AE501A7C();
              sub_1AE4F6824();
              v56 = v72;
              v57 = v71;
              v58 = v75;
              goto LABEL_54;
            }
          }
          sub_1AE4F6824();
          swift_bridgeObjectRelease();
          sub_1AE501A7C();
          sub_1AE4F6824();
          sub_1AE4F77C8();
          sub_1AE508DD4();
          sub_1AE4FCF54();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_64;
        }
        v91 = v53;
LABEL_57:
        objc_allocWithZone((Class)GDSiriPerson);
        swift_bridgeObjectRetain();
        sub_1AE4FB75C();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1AE4F67A4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1AE869034();
        MEMORY[0x1AF4533D0]();
        if (*(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1AE4F9788();
        sub_1AE509780();
        sub_1AE9261FC();
        sub_1AE508DD4();
        sub_1AE4F81B8();
        swift_bridgeObjectRelease();
        v3 = v88;
      }
      else
      {
        sub_1AE869218(v35);
      }
    }
    v13 = v78;
    v14 = v86;
LABEL_61:
    if (++v14 == v85)
    {
      sub_1AE4FCF54();
      return;
    }
  }
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
}

id sub_1AE868F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v6;
  void *v7;
  id v8;

  if (!a2)
  {
    v6 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  v6 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v7 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
LABEL_6:
  v8 = objc_msgSend(v4, sel_initWithOrganizationName_phoneticOrganizationName_, v6, v7);

  return v8;
}

id sub_1AE869034()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;

  v11 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v0 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v1 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  sub_1AE869440();
  v4 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v12, sel_initWithContactIdentifiers_givenNames_phoneticGivenNames_middleNames_phoneticMiddleNames_lastNames_phoneticLastNames_prefixes_nickNames_organizations_, v11, v0, v1, v10, v9, v8, v2, v7, v3, v4);

  return v5;
}

uint64_t sub_1AE869218(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CustomGraphPerson(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for SiriPersonView()
{
  return &type metadata for SiriPersonView;
}

uint64_t sub_1AE869264@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AE8681F4(*a1, (uint64_t (*)(uint64_t))sub_1AE69D73C, (uint64_t)sub_1AE8694C4, (void (*)(uint64_t, _QWORD *, uint64_t))sub_1AE6E6A18, type metadata accessor for CustomGraphPerson, a2);
}

uint64_t sub_1AE8692A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_1AE868468(a1, a2, a3, a4, *a5, (uint64_t)sub_1AE86950C, (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE59B214);
}

uint64_t sub_1AE8692C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1AE867EEC(a1, a2, *a3);
}

uint64_t sub_1AE8692E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AE8681F4(*a1, (uint64_t (*)(uint64_t))sub_1AE69D748, (uint64_t)sub_1AE8694C4, (void (*)(uint64_t, _QWORD *, uint64_t))sub_1AE6DCAA4, type metadata accessor for CustomGraphSongEvent, a2);
}

uint64_t sub_1AE86931C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AE8681F4(*a1, (uint64_t (*)(uint64_t))sub_1AE69D754, (uint64_t)sub_1AE8694C4, (void (*)(uint64_t, _QWORD *, uint64_t))sub_1AE6AD4B8, type metadata accessor for CustomGraphActivityEvent, a2);
}

double sub_1AE869358@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AE868290(*a1, a2);
}

uint64_t sub_1AE869374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_1AE868468(a1, a2, a3, a4, *a5, (uint64_t)sub_1AE7AD864, (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE59B214);
}

double sub_1AE86939C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AE8682D8(*a1, a2);
}

double sub_1AE8693B8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AE86939C(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1AE8693D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_1AE868468(a1, a2, a3, a4, *a5, (uint64_t)sub_1AE869428, (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE59B340);
}

uint64_t sub_1AE8693F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1AE8693D0(a1, a2, a3, a4, *(uint64_t **)(v4 + 16));
}

uint64_t sub_1AE869410(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1AE86806C(a1, a2, *a3);
}

uint64_t sub_1AE869428(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AE869410(a1, a2, *(uint64_t **)(v2 + 16));
}

unint64_t sub_1AE869440()
{
  unint64_t result;

  result = qword_1EEDA4988;
  if (!qword_1EEDA4988)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEDA4988);
  }
  return result;
}

double sub_1AE86947C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AE869358(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1AE869494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1AE869374(a1, a2, a3, a4, *(uint64_t **)(v4 + 16));
}

uint64_t sub_1AE8694AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AE869264(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1AE8694C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1AE8692A0(a1, a2, a3, a4, *(uint64_t **)(v4 + 16));
}

uint64_t sub_1AE8694DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AE86931C(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1AE8694F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AE8692E0(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_1AE86950C(uint64_t a1, uint64_t a2)
{
  return sub_1AE7AD864(a1, a2);
}

void sub_1AE869520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 64) = v1;
  *(_QWORD *)(v2 - 56) = v0;
}

uint64_t static ViewService.SiriRemembersView.databaseMigrator()()
{
  uint64_t v0;

  v0 = sub_1AE924EDC();
  MEMORY[0x1E0C80A78](v0);
  sub_1AE924EF4();
  sub_1AE500790();
  sub_1AE4FDA58();
  sub_1AE4FEB5C();
  sub_1AE4FF4A0();
  sub_1AE500790();
  sub_1AE4FDA58();
  sub_1AE4FEB5C();
  sub_1AE4FF4A0();
  sub_1AE500790();
  sub_1AE4FDA58();
  sub_1AE4FEB5C();
  sub_1AE4FF4A0();
  sub_1AE500790();
  sub_1AE4FDA58();
  sub_1AE4FEB5C();
  sub_1AE4FF4A0();
  sub_1AE500790();
  sub_1AE4FDA58();
  sub_1AE4FEB5C();
  sub_1AE4FF4A0();
  sub_1AE500790();
  sub_1AE4FDA58();
  sub_1AE4FEB5C();
  sub_1AE4FF4A0();
  sub_1AE500790();
  sub_1AE4FDA58();
  sub_1AE4FEB5C();
  sub_1AE4FF4A0();
  sub_1AE500790();
  sub_1AE4FDA58();
  sub_1AE4FEB5C();
  sub_1AE4FF4A0();
  sub_1AE500790();
  sub_1AE4FDA58();
  sub_1AE4FEB5C();
  return sub_1AE4FF4A0();
}

void sub_1AE869720(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD v56[2];
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;

  v62 = sub_1AE9252D8();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v61 = (char *)v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1AE924B88();
  v66 = *(_QWORD *)(v68 - 8);
  v3 = MEMORY[0x1E0C80A78](v68);
  v58 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v63 = (char *)v56 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v64 = (char *)v56 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v65 = (char *)v56 - v10;
  MEMORY[0x1E0C80A78](v9);
  v67 = (char *)v56 - v11;
  v12 = sub_1AE924BAC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v59 = (char *)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v56 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)v56 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v71 = (char *)v56 - v23;
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v56 - v24;
  *(_QWORD *)&v73 = MEMORY[0x1E0DEE9D8];
  sub_1AE585700(&qword_1EED9C420, v26, MEMORY[0x1E0D23C20]);
  v28 = v27;
  v29 = sub_1AE501548(&qword_1EED9C428);
  sub_1AE58573C(&qword_1EED9C430, &qword_1EED9C428);
  v70 = v30;
  sub_1AE926838();
  v69 = a1;
  v31 = v72;
  sub_1AE9254AC();
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v25, v12);
  }
  else
  {
    v72 = v21;
    v57 = v18;
    v32 = *(void (**)(char *, uint64_t))(v13 + 8);
    v32(v25, v12);
    v33 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v73 = MEMORY[0x1E0DEE9D8];
    sub_1AE926838();
    sub_1AE9254AC();
    v34 = v33;
    v35 = v32;
    v32(v71, v12);
    *(_QWORD *)&v73 = v34;
    v36 = v72;
    sub_1AE926838();
    sub_1AE9254AC();
    v56[1] = v28;
    v35(v36, v12);
    v75 = 0;
    v73 = 0u;
    v74 = 0u;
    v76 = v34;
    sub_1AE585700(&qword_1EED9C3F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D23BA0], MEMORY[0x1E0D23BB0]);
    v37 = sub_1AE501548(&qword_1EED9C400);
    sub_1AE58573C(&qword_1EED9C408, &qword_1EED9C400);
    v38 = v67;
    v71 = (char *)v37;
    v72 = v39;
    v40 = v68;
    sub_1AE926838();
    sub_1AE9254A0();
    v56[0] = v35;
    v41 = v38;
    v42 = *(void (**)(char *, uint64_t))(v66 + 8);
    v42(v41, v40);
    sub_1AE52FBE8((uint64_t)&v73, &qword_1ED319E60);
    v75 = 0;
    v73 = 0u;
    v74 = 0u;
    v76 = MEMORY[0x1E0DEE9D8];
    v43 = v65;
    sub_1AE926838();
    sub_1AE9254A0();
    v44 = v40;
    v45 = v40;
    v46 = v42;
    v47 = v45;
    v46(v43, v44);
    sub_1AE52FBE8((uint64_t)&v73, &qword_1ED319E60);
    v75 = 0;
    v73 = 0u;
    v74 = 0u;
    v76 = MEMORY[0x1E0DEE9D8];
    v48 = v64;
    sub_1AE926838();
    sub_1AE9254A0();
    v67 = (char *)v29;
    v46(v48, v47);
    sub_1AE52FBE8((uint64_t)&v73, &qword_1ED319E60);
    v75 = 0;
    v73 = 0u;
    v74 = 0u;
    v76 = MEMORY[0x1E0DEE9D8];
    v49 = v63;
    sub_1AE926838();
    sub_1AE9254A0();
    v46(v49, v47);
    sub_1AE52FBE8((uint64_t)&v73, &qword_1ED319E60);
    *(_QWORD *)&v73 = MEMORY[0x1E0DEE9D8];
    v50 = v57;
    sub_1AE926838();
    sub_1AE9254AC();
    v65 = (char *)v46;
    ((void (*)(char *, uint64_t))v56[0])(v50, v12);
    v51 = v61;
    sub_1AE9252CC();
    v52 = v62;
    sub_1AE925494();
    v66 = 0;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v51, v52);
    v53 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v73 = MEMORY[0x1E0DEE9D8];
    v54 = v59;
    sub_1AE926838();
    v55 = v66;
    sub_1AE9254AC();
    v66 = v55;
    ((void (*)(char *, uint64_t))v56[0])(v54, v12);
    if (!v55)
    {
      v75 = 0;
      v73 = 0u;
      v74 = 0u;
      v76 = v53;
      sub_1AE926838();
      sub_1AE9254A0();
      ((void (*)(char *, uint64_t))v65)(v58, v68);
      sub_1AE52FBE8((uint64_t)&v73, &qword_1ED319E60);
    }
  }
}

void sub_1AE86A0F0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_1AE501548(&qword_1EED9C410);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE501548(&qword_1EED9C418);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE9253C8();
  v6 = sub_1AE925404();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  v7 = sub_1AE925464();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v7);
  sub_1AE924E70();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v2, &qword_1EED9C410);
  sub_1AE9253C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1AE924E34();
  swift_release();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
}

void sub_1AE86A280()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_1AE501548(&qword_1EED9C410);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE501548(&qword_1EED9C418);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE9253C8();
  v6 = sub_1AE925404();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  v7 = sub_1AE925464();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v7);
  sub_1AE924E70();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v2, &qword_1EED9C410);
  sub_1AE9253F8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1AE924E34();
  swift_release();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
}

void sub_1AE86A408()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = sub_1AE92541C();
  v16 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v1 = (char *)&v14 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1AE501548(&qword_1EED9C418);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1AE501548(&qword_1EED9C410);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AE925464();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v8);
  sub_1AE924E28();
  swift_release();
  sub_1AE52FBE8((uint64_t)v7, &qword_1EED9C410);
  sub_1AE9253C8();
  v9 = sub_1AE925404();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v9);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v4, &qword_1EED9C418);
  v15 = v8;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v8);
  sub_1AE924E88();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v7, &qword_1EED9C410);
  sub_1AE9253C8();
  v14 = v9;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v9);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v4, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v8);
  sub_1AE924EA0();
  swift_release();
  sub_1AE52FBE8((uint64_t)v7, &qword_1EED9C410);
  sub_1AE925410();
  sub_1AE924E94();
  swift_release();
  swift_release();
  v16 = *(_QWORD *)(v16 + 8);
  v10 = v17;
  ((void (*)(char *, uint64_t))v16)(v1, v17);
  sub_1AE9253C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v9);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v4, &qword_1EED9C418);
  v11 = v15;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v15);
  sub_1AE924EA0();
  swift_release();
  sub_1AE52FBE8((uint64_t)v7, &qword_1EED9C410);
  sub_1AE925410();
  sub_1AE924E94();
  swift_release();
  swift_release();
  v12 = (void (*)(char *, uint64_t))v16;
  ((void (*)(char *, uint64_t))v16)(v1, v10);
  sub_1AE9253C8();
  v13 = v14;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v14);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v4, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1AE924EA0();
  swift_release();
  sub_1AE52FBE8((uint64_t)v7, &qword_1EED9C410);
  sub_1AE925410();
  sub_1AE924E94();
  swift_release();
  swift_release();
  v12(v1, v17);
  sub_1AE9253E0();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v4, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v7, &qword_1EED9C410);
  sub_1AE9253C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v4, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v7, &qword_1EED9C410);
  sub_1AE9253EC();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v4, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v7, &qword_1EED9C410);
  sub_1AE9253EC();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v4, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v7, &qword_1EED9C410);
  sub_1AE9253F8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v4, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v7, &qword_1EED9C410);
  sub_1AE9253D4();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v4, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v7, &qword_1EED9C410);
  sub_1AE9253C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1AE924E34();
  swift_release();
  sub_1AE52FBE8((uint64_t)v4, &qword_1EED9C418);
  sub_1AE9253EC();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v4, 0, 1, v13);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v4, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 1, 1, v11);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v7, &qword_1EED9C410);
}

void sub_1AE86AC14()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_1AE92541C();
  v11 = *(_QWORD *)(v0 - 8);
  v12 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE501548(&qword_1EED9C418);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1AE501548(&qword_1EED9C410);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE925464();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1AE924E28();
  swift_release();
  sub_1AE52FBE8((uint64_t)v8, &qword_1EED9C410);
  sub_1AE9253C8();
  v10 = sub_1AE925404();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v10);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v8, &qword_1EED9C410);
  sub_1AE9253C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v10);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1AE924EA0();
  swift_release();
  sub_1AE52FBE8((uint64_t)v8, &qword_1EED9C410);
  sub_1AE925410();
  sub_1AE924E94();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v12);
  sub_1AE9253C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v10);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v8, &qword_1EED9C410);
  sub_1AE9253C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v10);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v8, &qword_1EED9C410);
  sub_1AE9253F8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v10);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v8, &qword_1EED9C410);
  sub_1AE9253F8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v10);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v8, &qword_1EED9C410);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v9);
  sub_1AE924E40();
  sub_1AE52FBE8((uint64_t)v8, &qword_1EED9C410);
}

uint64_t sub_1AE86B0CC()
{
  sub_1AE924FF0();
  sub_1AE924FFC();
  return swift_release();
}

void sub_1AE86B12C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v22 = a1;
  v1 = sub_1AE92541C();
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  MEMORY[0x1E0C80A78](v1);
  v24 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE501548(&qword_1EED9C438);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  v9 = sub_1AE501548(&qword_1EED9C410);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1AE501548(&qword_1EED9C418);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE9253EC();
  v23 = sub_1AE925404();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v14, 0, 1, v23);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v14, &qword_1EED9C418);
  v27 = sub_1AE925464();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 1, 1, v27);
  sub_1AE924EA0();
  swift_release();
  sub_1AE52FBE8((uint64_t)v11, &qword_1EED9C410);
  v21 = *MEMORY[0x1E0D247C0];
  v15 = v21;
  v16 = sub_1AE92544C();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104);
  v20(v8, v15, v16);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 0, 1, v16);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v6, 1, 1, v16);
  sub_1AE924E7C();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v6, &qword_1EED9C438);
  sub_1AE52FBE8((uint64_t)v8, &qword_1EED9C438);
  sub_1AE9253EC();
  v17 = v23;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v14, 0, 1, v23);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v14, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 1, 1, v27);
  sub_1AE924EA0();
  swift_release();
  sub_1AE52FBE8((uint64_t)v11, &qword_1EED9C410);
  v20(v8, v21, v16);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 0, 1, v16);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v6, 1, 1, v16);
  sub_1AE924E7C();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v6, &qword_1EED9C438);
  sub_1AE52FBE8((uint64_t)v8, &qword_1EED9C438);
  sub_1AE9253C8();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v14, 0, 1, v17);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v14, &qword_1EED9C418);
  v18 = v27;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 1, 1, v27);
  sub_1AE924EA0();
  swift_release();
  sub_1AE52FBE8((uint64_t)v11, &qword_1EED9C410);
  v19 = v24;
  sub_1AE925410();
  sub_1AE924E94();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v19, v26);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 1, 1, v18);
  sub_1AE924E1C();
  sub_1AE52FBE8((uint64_t)v11, &qword_1EED9C410);
}

uint64_t sub_1AE86B618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  void (*v15)(char *, uint64_t);
  _QWORD v16[2];

  v1 = sub_1AE924FCC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)v16 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v16 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v16 - v12;
  result = sub_1AE925488();
  if (!v0)
  {
    sub_1AE924FC0();
    sub_1AE9254B8();
    v15 = *(void (**)(char *, uint64_t))(v2 + 8);
    v15(v13, v1);
    sub_1AE924FC0();
    sub_1AE9254B8();
    v15(v11, v1);
    sub_1AE924FC0();
    sub_1AE9254B8();
    v15(v8, v1);
    sub_1AE924FC0();
    sub_1AE9254B8();
    v15(v5, v1);
    return sub_1AE925488();
  }
  return result;
}

void sub_1AE86B878()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[5];

  v0 = sub_1AE501548(&qword_1EED9C410);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE501548(&qword_1EED9C418);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1AF45202C](0x727453726F6E6F64, 0xEB000000006D6165, 0x727453726F6E6F64, 0xEF747865546D6165);
  sub_1AE9253EC();
  v6 = sub_1AE925404();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1AE924DF8();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  v9[3] = MEMORY[0x1E0DEB418];
  v9[4] = MEMORY[0x1E0D24A00];
  v9[0] = 0;
  sub_1AE924EAC();
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v9);
  v7 = sub_1AE925464();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v7);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v2, &qword_1EED9C410);
}

uint64_t sub_1AE86BA30()
{
  return MEMORY[0x1AF452020](0x727453726F6E6F64, 0xEF747865546D6165);
}

uint64_t sub_1AE86BA70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1AE924FCC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE924FC0();
  sub_1AE9254B8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1AE86BB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  v1 = sub_1AE924FCC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1AE925488();
  if (!v0)
  {
    sub_1AE924FC0();
    sub_1AE9254B8();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

void sub_1AE86BC08()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v0 = sub_1AE501548(&qword_1EED9C410);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v11[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE501548(&qword_1EED9C418);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE9253D4();
  v6 = sub_1AE925404();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1AE924DF8();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  v7 = MEMORY[0x1E0DEB418];
  v8 = MEMORY[0x1E0D24A00];
  v12 = MEMORY[0x1E0DEB418];
  v13 = MEMORY[0x1E0D24A00];
  v11[0] = 0;
  sub_1AE924EAC();
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v11);
  v9 = sub_1AE925464();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v9);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v2, &qword_1EED9C410);
  sub_1AE9253EC();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1AE924DF8();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  v12 = v7;
  v13 = v8;
  v11[0] = 15;
  sub_1AE924EAC();
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v11);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v9);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v2, &qword_1EED9C410);
}

void sub_1AE86BE54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v5[2];
  _OWORD v6[2];
  uint64_t v7;

  v0 = sub_1AE924B88();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = 0;
  memset(v6, 0, sizeof(v6));
  v5[1] = MEMORY[0x1E0DEE9D8];
  sub_1AE585700(&qword_1EED9C3F8, v4, MEMORY[0x1E0D23BB0]);
  sub_1AE501548(&qword_1EED9C400);
  sub_1AE58573C(&qword_1EED9C408, &qword_1EED9C400);
  sub_1AE926838();
  sub_1AE9254A0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1AE52FBE8((uint64_t)v6, &qword_1ED319E60);
}

uint64_t sub_1AE86BFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  id v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_1AE924FCC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1AE925488();
  if (!v0)
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel_platform);
    v7 = BMDevicePlatform.deviceMetadataDevicePlatform.getter((uint64_t)v6);
    sub_1AE501548((uint64_t *)&unk_1ED30FD78);
    v8 = swift_allocObject();
    v9 = MEMORY[0x1E0DEDBC8];
    *(_OWORD *)(v8 + 16) = xmmword_1AE934250;
    v10 = MEMORY[0x1E0D24A48];
    *(_QWORD *)(v8 + 56) = v9;
    *(_QWORD *)(v8 + 64) = v10;
    *(_DWORD *)(v8 + 32) = v7;
    sub_1AE924FB4();
    sub_1AE9254B8();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

uint64_t sub_1AE86C104()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v0 = sub_1AE501548(&qword_1EED9C410);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v10[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE501548(&qword_1EED9C418);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE9253E0();
  v6 = sub_1AE925404();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1AE924DF8();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  v7 = sub_1AE925464();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v7);
  sub_1AE924EA0();
  swift_release();
  sub_1AE52FBE8((uint64_t)v2, &qword_1EED9C410);
  v11 = MEMORY[0x1E0DEAFA0];
  v12 = MEMORY[0x1E0D249A8];
  LOBYTE(v10[0]) = 1;
  sub_1AE924EAC();
  swift_release();
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v10);
  sub_1AE9253EC();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1AE924DF8();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v7);
  sub_1AE924EA0();
  swift_release();
  sub_1AE52FBE8((uint64_t)v2, &qword_1EED9C410);
  v11 = MEMORY[0x1E0DEB418];
  v12 = MEMORY[0x1E0D24A00];
  v10[0] = 0;
  sub_1AE924EAC();
  swift_release();
  swift_release();
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v10);
}

uint64_t sub_1AE86C358()
{
  return sub_1AE925488();
}

uint64_t sub_1AE86C3A0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v10[5];

  v0 = sub_1AE501548(&qword_1EED9C410);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v10[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE501548(&qword_1EED9C418);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE9253EC();
  v6 = sub_1AE925404();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1AE924DF8();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  v7 = sub_1AE925464();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v7);
  sub_1AE924EA0();
  swift_release();
  sub_1AE52FBE8((uint64_t)v2, &qword_1EED9C410);
  v10[3] = MEMORY[0x1E0DEB418];
  v10[4] = MEMORY[0x1E0D24A00];
  v10[0] = 0;
  sub_1AE924EAC();
  swift_release();
  swift_release();
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v10);
}

uint64_t sub_1AE86C51C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v35 = sub_1AE924FCC();
  v3 = *(_QWORD *)(v35 - 8);
  v4 = MEMORY[0x1E0C80A78](v35);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v29 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v29 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v29 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v29 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v29 - v19;
  sub_1AE924FC0();
  v34 = a1;
  sub_1AE9254B8();
  if (v1)
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v20, v35);
  v32 = v15;
  v33 = v18;
  v30 = v6;
  v31 = v12;
  v22 = *(void (**)(char *, uint64_t))(v3 + 8);
  v23 = v35;
  v22(v20, v35);
  sub_1AE925488();
  sub_1AE925488();
  v24 = v33;
  sub_1AE924FC0();
  sub_1AE9254B8();
  v22(v24, v23);
  v25 = v32;
  sub_1AE924FC0();
  sub_1AE9254B8();
  v22(v25, v23);
  v26 = v31;
  sub_1AE924FC0();
  sub_1AE9254B8();
  v22(v26, v23);
  v27 = (uint64_t (*)(char *, uint64_t))v22;
  sub_1AE924FC0();
  sub_1AE9254B8();
  v22(v9, v23);
  v28 = v30;
  sub_1AE924FC0();
  sub_1AE9254B8();
  return v27(v28, v23);
}

uint64_t sub_1AE86C864()
{
  return MEMORY[0x1AF452020](0x7453656372756F73, 0xED0000736D616572);
}

void sub_1AE86C8A4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[5];

  v0 = sub_1AE501548(&qword_1EED9C410);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE501548(&qword_1EED9C418);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE9253C8();
  v6 = sub_1AE925404();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1AE924DF8();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  v9[3] = MEMORY[0x1E0DEA968];
  v9[4] = MEMORY[0x1E0D24968];
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1AE924EAC();
  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v9);
  v7 = sub_1AE925464();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v7);
  sub_1AE924EA0();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v2, &qword_1EED9C410);
}

void sub_1AE86CA24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v22 = sub_1AE924BAC();
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v23 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE924B88();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v19 - v8;
  v27 = 0;
  v25 = 0u;
  v26 = 0u;
  v28 = MEMORY[0x1E0DEE9D8];
  sub_1AE585700(&qword_1EED9C3F8, v10, MEMORY[0x1E0D23BB0]);
  v12 = v11;
  v13 = sub_1AE501548(&qword_1EED9C400);
  sub_1AE58573C(&qword_1EED9C408, &qword_1EED9C400);
  v15 = v14;
  sub_1AE926838();
  v21 = a1;
  v16 = v24;
  sub_1AE9254A0();
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    v19[1] = v15;
    v19[2] = v13;
    v24 = v12;
    v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v9, v3);
    sub_1AE52FBE8((uint64_t)&v25, &qword_1ED319E60);
    *(_QWORD *)&v25 = MEMORY[0x1E0DEE9D8];
    sub_1AE585700(&qword_1EED9C420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D23C10], MEMORY[0x1E0D23C20]);
    sub_1AE501548(&qword_1EED9C428);
    sub_1AE58573C(&qword_1EED9C430, &qword_1EED9C428);
    v18 = v22;
    sub_1AE926838();
    sub_1AE9254AC();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v18);
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1AE926838();
    sub_1AE9254A0();
    v17(v7, v3);
  }
  sub_1AE52FBE8((uint64_t)&v25, &qword_1ED319E60);
}

void sub_1AE86CD94()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  v0 = sub_1AE501548(&qword_1EED9C410);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE501548(&qword_1EED9C418);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE9253C8();
  v6 = sub_1AE925404();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1AE924E34();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
  v7 = *MEMORY[0x1E0D247F8];
  v8 = sub_1AE925464();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v2, v7, v8);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 0, 1, v8);
  sub_1AE924E70();
  swift_release();
  swift_release();
  sub_1AE52FBE8((uint64_t)v2, &qword_1EED9C410);
  sub_1AE9253D4();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v6);
  sub_1AE924E34();
  swift_release();
  sub_1AE52FBE8((uint64_t)v5, &qword_1EED9C418);
}

unint64_t static ViewService.SiriRemembersView.ProcessedInteraction.databaseTableName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_1AE86CF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v0 = sub_1AE925464();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - v5;
  v7 = sub_1AE9251B8();
  sub_1AE595770(v7, qword_1EEDA4998);
  sub_1AE4FB608(v7, (uint64_t)qword_1EEDA4998);
  v8 = *MEMORY[0x1E0D247F8];
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v9(v6, v8, v0);
  v9(v4, v8, v0);
  return sub_1AE9251AC();
}

uint64_t static ViewService.SiriRemembersView.ProcessedInteraction.persistenceConflictPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED318830 != -1)
    swift_once();
  v2 = sub_1AE9251B8();
  v3 = sub_1AE4FB608(v2, (uint64_t)qword_1EEDA4998);
  return sub_1AE4FD010(a1, v3, v2, *(uint64_t (**)(void))(*(_QWORD *)(v2 - 8) + 16));
}

void ViewService.SiriRemembersView.ProcessedInteraction.id.getter()
{
  swift_bridgeObjectRetain();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

uint64_t ViewService.SiriRemembersView.ProcessedInteraction.date.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1AE870644();
  sub_1AE4F675C();
  v0 = sub_1AE4F7714();
  return sub_1AE4FD010(v0, v1, v2, v3);
}

uint64_t type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction()
{
  uint64_t result;

  result = qword_1ED30EF08;
  if (!qword_1ED30EF08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ViewService.SiriRemembersView.ProcessedInteraction.init(id:date:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (uint64_t)a4 + *(int *)(sub_1AE870644() + 20);
  v6 = sub_1AE4F675C();
  return sub_1AE4FD010(v5, a3, v6, *(uint64_t (**)(void))(*(_QWORD *)(v6 - 8) + 32));
}

uint64_t sub_1AE86D1BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE86D280(char a1)
{
  if ((a1 & 1) != 0)
    return 1702125924;
  else
    return 25705;
}

uint64_t sub_1AE86D2A4()
{
  char *v0;

  return sub_1AE86D280(*v0);
}

uint64_t sub_1AE86D2AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE86D1BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE86D2D0()
{
  sub_1AE86D460();
  return sub_1AE926F94();
}

uint64_t sub_1AE86D2F8()
{
  sub_1AE86D460();
  return sub_1AE926FA0();
}

uint64_t ViewService.SiriRemembersView.ProcessedInteraction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1AE501548(&qword_1EED99578);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE86D460();
  sub_1AE926F4C();
  sub_1AE926C88();
  if (!v1)
  {
    type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction();
    sub_1AE4F675C();
    sub_1AE58FEAC(&qword_1ED30EB50, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1AE926CC4();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_1AE86D460()
{
  unint64_t result;

  result = qword_1EED93F30;
  if (!qword_1EED93F30)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE965928, &_s20ProcessedInteractionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED93F30);
  }
  return result;
}

void ViewService.SiriRemembersView.ProcessedInteraction.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_1AE4F675C();
  v14 = *(_QWORD *)(v4 - 8);
  v15 = v4;
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F9024();
  v13 = v5;
  v16 = sub_1AE501548(&qword_1ED30EE60);
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F666C();
  v6 = type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F666C();
  v10 = (uint64_t *)(v9 - v8);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE86D460();
  sub_1AE926F34();
  if (v2)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  }
  else
  {
    *v10 = sub_1AE926BB0();
    v10[1] = v11;
    sub_1AE58FEAC(&qword_1ED318D00, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1AE926BEC();
    sub_1AE8705F4();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))((char *)v10 + *(int *)(v6 + 20), v13, v15);
    sub_1AE86FB80((uint64_t)v10, a2, (void (*)(_QWORD))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
    sub_1AE555C64((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
  }
}

void sub_1AE86D6AC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ViewService.SiriRemembersView.ProcessedInteraction.init(from:)(a1, a2);
}

uint64_t sub_1AE86D6C0(_QWORD *a1)
{
  return ViewService.SiriRemembersView.ProcessedInteraction.encode(to:)(a1);
}

uint64_t sub_1AE86D6D4()
{
  sub_1AE58FEAC(&qword_1ED30EB28, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
  return sub_1AE924DA4();
}

uint64_t sub_1AE86D740()
{
  sub_1AE58FEAC(&qword_1EEDA49F0, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
  return sub_1AE924F90();
}

uint64_t sub_1AE86D7A8()
{
  sub_1AE58FEAC(&qword_1EEDA49F0, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
  return sub_1AE924F84();
}

uint64_t sub_1AE86D804()
{
  sub_1AE58FEAC(&qword_1EEDA49F0, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
  return sub_1AE924F78();
}

uint64_t sub_1AE86D860()
{
  sub_1AE58FEAC(&qword_1EED98FF8, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
  return sub_1AE924D44();
}

unint64_t sub_1AE86D8B8()
{
  static ViewService.SiriRemembersView.ProcessedInteraction.databaseTableName.getter();
  return 0xD000000000000015;
}

void sub_1AE86D8D4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_1AE86D92C(v0);
}

uint64_t sub_1AE86D8FC()
{
  sub_1AE4FB9BC();
  return swift_bridgeObjectRetain();
}

void sub_1AE86D92C(uint64_t a1)
{
  uint64_t v1;

  sub_1AE4FB9BC();
  *(_QWORD *)(v1 + 16) = a1;
  swift_bridgeObjectRelease();
  sub_1AE506B30();
}

uint64_t sub_1AE86D964()
{
  uint64_t v0;

  sub_1AE4FB9BC();
  return *(unsigned __int8 *)(v0 + 24);
}

void sub_1AE86D990(char a1)
{
  uint64_t v1;

  sub_1AE4FB9BC();
  *(_BYTE *)(v1 + 24) = a1;
  sub_1AE506B30();
}

void sub_1AE86D9C0()
{
  sub_1AE4FB9BC();
  sub_1AE4F6664();
}

uint64_t ViewService.SiriRemembersView.ProcessingStateCache.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(result + 24) = 0;
  return result;
}

uint64_t ViewService.SiriRemembersView.ProcessingStateCache.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(v0 + 24) = 0;
  return result;
}

uint64_t ViewService.SiriRemembersView.ProcessingStateCache.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ViewService.SiriRemembersView.ProcessingStateCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

BOOL static BMSiriRemembersInteraction.ProcessingState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void BMSiriRemembersInteraction.ProcessingState.hash(into:)()
{
  sub_1AE926ED4();
  sub_1AE4F6664();
}

uint64_t BMSiriRemembersInteraction.ProcessingState.hashValue.getter()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  return sub_1AE926F10();
}

void BMSiriRemembersInteraction.processingState(db:)(_BYTE *a1@<X8>)
{
  NSObject *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v15[5];
  uint64_t v16[5];
  uint64_t v17[5];

  v4 = sub_1AE501548(&qword_1ED30D8D0);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F666C();
  sub_1AE501548((uint64_t *)&unk_1ED30EF18);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F683C();
  if (qword_1ED31B508 != -1)
    swift_once();
  v6 = sub_1AE4F6854();
  sub_1AE4F77E8(v6, (uint64_t)qword_1ED31B4F0);
  v7 = sub_1AE5086D8();
  if (os_log_type_enabled(v1, v7))
  {
    v8 = (uint8_t *)sub_1AE4F66A0();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1AE4F2000, v1, v7, "ProcessingState: checking database", v8, 2u);
    sub_1AE4F9064();
  }

  v9 = sub_1AE561DEC(v1, (SEL *)&selRef_identifier);
  if (v10)
  {
    v11 = v9;
    v12 = v10;
    v13 = sub_1AE870644();
    v16[3] = sub_1AE925374();
    v16[4] = MEMORY[0x1E0D24668];
    sub_1AE52F6A8(v16);
    sub_1AE925380();
    v15[3] = MEMORY[0x1E0DEA968];
    v15[4] = MEMORY[0x1E0D24960];
    v15[0] = v11;
    v15[1] = v12;
    v17[3] = sub_1AE924C9C();
    v17[4] = MEMORY[0x1E0D23DC0];
    sub_1AE52F6A8(v17);
    sub_1AE9251D0();
    sub_1AE524534((uint64_t)v15, &qword_1ED319E60);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v16);
    sub_1AE58FEAC(&qword_1ED30D8D8, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
    sub_1AE924AC8();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v17);
    sub_1AE56CE14(&qword_1ED30D8C8, &qword_1ED30D8D0);
    sub_1AE58FEAC(&qword_1ED30D8E0, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
    sub_1AE924B34();
    sub_1AE4FD9B8();
    v14 = 2 * (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, 1, v13) != 1);
    sub_1AE524534(v2, (uint64_t *)&unk_1ED30EF18);
  }
  else
  {
    v14 = 0;
  }
  *a1 = v14;
}

void BMSiriRemembersInteraction.processingState(db:cache:)(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1AE501548(&qword_1ED30EB60);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  v8 = v7 - v6;
  sub_1AE561DEC(v2, (SEL *)&selRef_identifier);
  if (!v9)
    goto LABEL_3;
  sub_1AE4FB9BC();
  swift_bridgeObjectRetain();
  sub_1AE516320();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = sub_1AE4F675C();
  v11 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v8, 1, v10);
  sub_1AE524534(v8, &qword_1ED30EB60);
  if (v11 != 1)
  {
    if (qword_1ED31B508 != -1)
      swift_once();
    v16 = sub_1AE4F6854();
    sub_1AE4F77E8(v16, (uint64_t)qword_1ED31B4F0);
    v17 = sub_1AE5086D8();
    if (sub_1AE503578(v17))
    {
      *(_WORD *)sub_1AE4F66A0() = 0;
      sub_1AE5FBC68(&dword_1AE4F2000, v18, v19, "ProcessingState: ProcessingStateCache: hit");
      sub_1AE4F9064();
    }

    *a2 = 2;
  }
  else
  {
LABEL_3:
    sub_1AE4FB9BC();
    if (*(_BYTE *)(a1 + 24) == 1)
    {
      if (qword_1ED31B508 != -1)
        swift_once();
      v12 = sub_1AE4F6854();
      sub_1AE4F77E8(v12, (uint64_t)qword_1ED31B4F0);
      v13 = sub_1AE5086D8();
      if (sub_1AE503578(v13))
      {
        *(_WORD *)sub_1AE4F66A0() = 0;
        sub_1AE5FBC68(&dword_1AE4F2000, v14, v15, "ProcessingState: ProcessingStateCache: full coverage assuming unprocessed");
        sub_1AE4F9064();
      }

      *a2 = 0;
    }
    else
    {
      BMSiriRemembersInteraction.processingState(db:)(a2);
    }
  }
}

void ViewService.SiriRemembersView.Interaction.init(interaction:biomeEventTimestamp:syncedStreamName:isLocal:devicePlatform:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, _QWORD *a6@<X8>, double a7@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  void (*v36)(uint64_t, char *, uint64_t);
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t *v66;
  uint64_t *v67;
  id v68;
  uint64_t v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  void (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  _QWORD *v85;
  int v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;

  v86 = a5;
  v84 = a4;
  v83 = a2;
  v85 = a6;
  sub_1AE501548(&qword_1ED30EB60);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F666C();
  v13 = v12 - v11;
  v14 = sub_1AE4F675C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F686C();
  v89 = v16;
  sub_1AE4F9350();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v68 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v68 - v22;
  v24 = sub_1AE870608(v21, (SEL *)&selRef_identifier);
  if (!v25)
  {
    sub_1AE4F6728();
    sub_1AE86FB08();
    sub_1AE4F6778();
    sub_1AE503CCC();
    *(_QWORD *)v39 = v40 + 6;
    v41 = "BMSiriRemembersInteraction.identifier";
LABEL_17:
    *(_QWORD *)(v39 + 8) = (unint64_t)(v41 - 32) | 0x8000000000000000;
    *(_BYTE *)(v39 + 16) = 1;
    swift_willThrow();

    goto LABEL_18;
  }
  v26 = v25;
  v81 = v24;
  v27 = sub_1AE870608(v24, (SEL *)&selRef_domain);
  if (!v28)
  {
    sub_1AE4F6718();
    sub_1AE4F6728();
    sub_1AE86FB08();
    sub_1AE4F6778();
    sub_1AE503CCC();
    *(_QWORD *)v39 = v42 + 2;
    v41 = "BMSiriRemembersInteraction.domain";
    goto LABEL_17;
  }
  v79 = v27;
  v82 = v28;
  v29 = sub_1AE870608(v27, (SEL *)&selRef_type);
  if (!v30)
  {
    sub_1AE506EFC();
    sub_1AE4F6718();
    sub_1AE4F6728();
    sub_1AE86FB08();
    sub_1AE4F6778();
    sub_1AE503CCC();
    *(_QWORD *)v39 = v43;
    v41 = "BMSiriRemembersInteraction.type";
    goto LABEL_17;
  }
  v77 = v29;
  v80 = v30;
  v31 = sub_1AE870608(v29, (SEL *)&selRef_appBundleId);
  if (!v32)
  {
    sub_1AE4F7774();
    sub_1AE506EFC();
    sub_1AE4F6718();
    sub_1AE4F6728();
    sub_1AE86FB08();
    sub_1AE4F6778();
    sub_1AE503CCC();
    *(_QWORD *)v39 = v44 + 7;
    v41 = "BMSiriRemembersInteraction.appBundleId";
    goto LABEL_17;
  }
  v76 = v31;
  v78 = v32;
  v33 = (uint64_t)sub_1AE5009B4(v31, sel_hasIsDonatedBySiri);
  if ((v33 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1AE4F7774();
    sub_1AE506EFC();
    sub_1AE4F6718();
    sub_1AE4F6728();
    sub_1AE86FB08();
    sub_1AE4F6778();
    sub_1AE503CCC();
    *(_QWORD *)v39 = v45 + 11;
    v41 = "BMSiriRemembersInteraction.isDonatedBySiri";
    goto LABEL_17;
  }
  v75 = a3;
  v34 = sub_1AE5009B4(v33, sel_startDate);
  if (!v34)
  {
    sub_1AE506534(v13, 1);
    goto LABEL_16;
  }
  v35 = v34;
  sub_1AE9248A0();

  v36 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
  v36(v13, v20, v14);
  sub_1AE506534(v13, 0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v13, 1, v14) == 1)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    sub_1AE4F7774();
    sub_1AE506EFC();
    sub_1AE4F6718();
    swift_bridgeObjectRelease();
    sub_1AE524534(v13, &qword_1ED30EB60);
    sub_1AE86FB08();
    sub_1AE4F6778();
    sub_1AE503CCC();
    *(_QWORD *)v39 = v46 + 5;
    v41 = "BMSiriRemembersInteraction.startDate";
    goto LABEL_17;
  }
  v74 = (void (*)(char *, uint64_t, uint64_t))v36;
  v37 = ((uint64_t (*)(char *, uint64_t, uint64_t))v36)(v23, v13, v14);
  v38 = sub_1AE5009B4(v37, sel_hasContentHash);
  if ((_DWORD)v38)
  {
    v38 = sub_1AE5009B4((uint64_t)v38, sel_contentHash);
    v68 = v38;
  }
  else
  {
    v68 = 0;
  }
  v47 = sub_1AE5009B4((uint64_t)v38, sel_isDonatedBySiri);
  v73 = (int)v47;
  v48 = sub_1AE5009B4((uint64_t)v47, sel_interactionSource);
  v72 = (int)v48;
  v49 = sub_1AE5009B4((uint64_t)v48, sel_direction);
  v71 = (int)v49;
  v70 = sub_1AE5009B4((uint64_t)v49, sel_status);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v89, v23, v14);
  v50 = objc_msgSend(a1, sel_durationInSeconds);
  v52 = v51;
  v53 = sub_1AE870608((uint64_t)v50, (SEL *)&selRef_fields);
  if (v54)
  {
    v55 = v54;
    v69 = v53;
  }
  else
  {
    v56 = sub_1AE5009B4(v53, sel_interactionFields);
    sub_1AE507850();
    v57 = sub_1AE9261CC();

    v69 = Array<A>.fieldsJSON()(v57);
    v55 = v58;
    v53 = swift_bridgeObjectRelease();
  }
  LODWORD(v75) = sub_1AE5009B4(v53, sel_userDonatorType);
  v87 = 94;
  v88 = 0xE100000000000000;
  sub_1AE925F74();
  sub_1AE870610();

  sub_1AE4F6728();
  v59 = v87;
  v60 = v88;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
  v61 = v85;
  *v85 = 0;
  *((_BYTE *)v61 + 8) = 1;
  v61[2] = v81;
  v61[3] = v26;
  v62 = v82;
  v61[4] = v79;
  v61[5] = v62;
  v63 = v80;
  v61[6] = v77;
  v61[7] = v63;
  v64 = v78;
  v61[8] = v76;
  v61[9] = v64;
  *((_BYTE *)v61 + 80) = v73;
  LODWORD(v64) = v71;
  *((_DWORD *)v61 + 21) = v72;
  *((_DWORD *)v61 + 22) = v64;
  *((_DWORD *)v61 + 23) = v70;
  v65 = (int *)type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  v74((char *)v61 + v65[13], v89, v14);
  *(_QWORD *)((char *)v61 + v65[14]) = v52;
  v66 = (_QWORD *)((char *)v61 + v65[15]);
  *v66 = v69;
  v66[1] = v55;
  *(_QWORD *)((char *)v61 + v65[16]) = v68;
  *(double *)((char *)v61 + v65[17]) = a7;
  *((_BYTE *)v61 + v65[18]) = v84 & 1;
  *(_DWORD *)((char *)v61 + v65[19]) = v86;
  *(_DWORD *)((char *)v61 + v65[20]) = v75;
  v67 = (_QWORD *)((char *)v61 + v65[21]);
  *v67 = v59;
  v67[1] = v60;
LABEL_18:
  sub_1AE4FEE48();
}

uint64_t Array<A>.fieldsJSON()(unint64_t a1)
{
  void *v2;
  uint64_t v4;

  v2 = (void *)MEMORY[0x1AF454348]();
  sub_1AE86F4C0(a1, &v4);
  objc_autoreleasePoolPop(v2);
  return v4;
}

Swift::Void __swiftcall ViewService.SiriRemembersView.Interaction.didInsert(with:for:)(Swift::Int64 with, Swift::String_optional a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = with;
  *(_BYTE *)(v2 + 8) = 0;
}

void ViewService.SiriRemembersView.Interaction.updatedInteraction(from:biomeEventTimestamp:syncedStreamName:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t *v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  int v91;
  int v92;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;

  v106 = a3;
  v105 = a2;
  sub_1AE501548(&qword_1ED30EB60);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F9024();
  v103 = v10;
  v11 = sub_1AE4F675C();
  v113 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F686C();
  v90 = v12;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v13);
  v111 = (uint64_t)&v90 - v14;
  v15 = (int *)type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F686C();
  v104 = v17;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v18);
  v107 = (char *)&v90 - v19;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v20);
  v95 = (uint64_t)&v90 - v21;
  sub_1AE4F9350();
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v90 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v90 - v27;
  v29 = sub_1AE508090(v26, (SEL *)&selRef_fields);
  v112 = v11;
  v118 = v30;
  if (v30)
  {
    v110 = v29;
  }
  else
  {
    v31 = sub_1AE501F44(v29, sel_interactionFields);
    sub_1AE507850();
    v32 = sub_1AE9261CC();

    if (v32 >> 62)
    {
      swift_bridgeObjectRetain();
      v33 = sub_1AE926AD8();
      sub_1AE4F6728();
    }
    else
    {
      v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v29 = sub_1AE4F6728();
    if (v33)
    {
      v34 = sub_1AE501F44(v29, sel_interactionFields);
      v35 = sub_1AE9261CC();

      v110 = Array<A>.fieldsJSON()(v35);
      v118 = v36;
      v29 = sub_1AE4F6728();
    }
    else
    {
      v110 = 0;
      v118 = 0;
    }
  }
  v37 = *(id *)(v5 + v15[16]);
  v38 = sub_1AE501F44(v29, sel_hasContentHash);
  if ((_DWORD)v38)
    v37 = sub_1AE501F44((uint64_t)v38, sel_contentHash);
  v100 = *(_QWORD *)v5;
  v99 = *(unsigned __int8 *)(v5 + 8);
  v39 = *(_QWORD *)(v5 + 24);
  v98 = *(_QWORD *)(v5 + 16);
  v101 = v39;
  v40 = swift_bridgeObjectRetain();
  v109 = sub_1AE508090(v40, (SEL *)&selRef_domain);
  v42 = v41;
  sub_1AE86FB80(v5, (uint64_t)v28, (void (*)(_QWORD))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  v108 = v42;
  v102 = v37;
  if (!v42)
  {
    v43 = *((_QWORD *)v28 + 4);
    v108 = *((_QWORD *)v28 + 5);
    v109 = v43;
    swift_bridgeObjectRetain();
  }
  sub_1AE555C64((uint64_t)v28, type metadata accessor for ViewService.SiriRemembersView.Interaction);
  v45 = sub_1AE508090(v44, (SEL *)&selRef_type);
  v47 = v46;
  sub_1AE86FB80(v5, (uint64_t)v25, (void (*)(_QWORD))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  if (v47)
  {
    v96 = v47;
    v97 = v45;
  }
  else
  {
    v48 = *((_QWORD *)v25 + 7);
    v97 = *((_QWORD *)v25 + 6);
    v96 = v48;
    swift_bridgeObjectRetain();
  }
  v49 = v107;
  sub_1AE555C64((uint64_t)v25, type metadata accessor for ViewService.SiriRemembersView.Interaction);
  v51 = sub_1AE508090(v50, (SEL *)&selRef_appBundleId);
  v53 = v52;
  v54 = v95;
  sub_1AE86FB80(v5, v95, (void (*)(_QWORD))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  v107 = v53;
  if (!v53)
  {
    v51 = *(_QWORD *)(v54 + 64);
    v107 = *(char **)(v54 + 72);
    v55 = swift_bridgeObjectRetain();
  }
  sub_1AE870628(v55, type metadata accessor for ViewService.SiriRemembersView.Interaction);
  v57 = sub_1AE501F44(v56, sel_hasIsDonatedBySiri);
  v58 = v112;
  v59 = (uint64_t)v49;
  v95 = v51;
  if ((_DWORD)v57)
  {
    v57 = sub_1AE501F44((uint64_t)v57, sel_isDonatedBySiri);
    v94 = (int)v57;
  }
  else
  {
    v94 = *(unsigned __int8 *)(v5 + 80);
  }
  v93 = *(_DWORD *)(v5 + 84);
  v60 = sub_1AE501F44((uint64_t)v57, sel_direction);
  if ((_DWORD)v60)
  {
    v60 = sub_1AE501F44((uint64_t)v60, sel_direction);
    v92 = (int)v60;
  }
  else
  {
    v92 = *(_DWORD *)(v5 + 88);
  }
  v61 = sub_1AE501F44((uint64_t)v60, sel_status);
  if ((_DWORD)v61)
  {
    v61 = sub_1AE501F44((uint64_t)v61, sel_status);
    v91 = (int)v61;
  }
  else
  {
    v91 = *(_DWORD *)(v5 + 92);
  }
  v62 = v104;
  v63 = sub_1AE501F44((uint64_t)v61, sel_startDate);
  if (v63)
  {
    v64 = v63;
    v65 = v90;
    sub_1AE9248A0();

    v66 = v103;
    sub_1AE7357F8(v103, v65, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 32));
    v67 = 0;
  }
  else
  {
    v67 = 1;
    v66 = v103;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v66, v67, 1, v58);
  sub_1AE86FB80(v5, v59, (void (*)(_QWORD))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  v68 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v66, 1, v58);
  if ((_DWORD)v68 == 1)
  {
    v69 = sub_1AE7357F8(v111, v59 + v15[13], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 16));
    sub_1AE870628(v69, type metadata accessor for ViewService.SiriRemembersView.Interaction);
    sub_1AE524534(v66, &qword_1ED30EB60);
  }
  else
  {
    sub_1AE870628(v68, type metadata accessor for ViewService.SiriRemembersView.Interaction);
    v70 = sub_1AE7357F8(v111, v66, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v113 + 32));
  }
  if (sub_1AE501F44(v70, sel_hasDurationInSeconds))
  {
    objc_msgSend(a1, sel_durationInSeconds);
    v72 = v71;
  }
  else
  {
    v72 = *(_QWORD *)(v5 + v15[14]);
  }
  sub_1AE86FB80(v5, v62, (void (*)(_QWORD))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  if (!v118)
  {
    v73 = (uint64_t *)(v62 + v15[15]);
    v74 = v73[1];
    v110 = *v73;
    v118 = v74;
    swift_bridgeObjectRetain();
  }
  sub_1AE555C64(v62, type metadata accessor for ViewService.SiriRemembersView.Interaction);
  v75 = *(_BYTE *)(v5 + v15[18]);
  LODWORD(v104) = *(_DWORD *)(v5 + v15[19]);
  v77 = sub_1AE501F44(v76, sel_userDonatorType);
  v78 = (uint64_t *)(v5 + v15[21]);
  v80 = *v78;
  v79 = v78[1];
  v116 = 94;
  v117 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  sub_1AE870610();
  v82 = v116;
  v81 = v117;
  v116 = v80;
  v117 = v79;
  v114 = v82;
  v115 = v81;
  sub_1AE4F7630();
  if ((sub_1AE9267CC() & 1) != 0)
  {
    sub_1AE4F6728();
  }
  else
  {
    v116 = v80;
    v117 = v79;
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE4F6728();
    v80 = v116;
    v79 = v117;
  }
  *(_QWORD *)a4 = v100;
  *(_BYTE *)(a4 + 8) = v99;
  v83 = v101;
  *(_QWORD *)(a4 + 16) = v98;
  *(_QWORD *)(a4 + 24) = v83;
  v84 = v108;
  *(_QWORD *)(a4 + 32) = v109;
  *(_QWORD *)(a4 + 40) = v84;
  v85 = v96;
  *(_QWORD *)(a4 + 48) = v97;
  *(_QWORD *)(a4 + 56) = v85;
  v86 = v107;
  *(_QWORD *)(a4 + 64) = v95;
  *(_QWORD *)(a4 + 72) = v86;
  *(_BYTE *)(a4 + 80) = v94;
  LODWORD(v86) = v92;
  *(_DWORD *)(a4 + 84) = v93;
  *(_DWORD *)(a4 + 88) = (_DWORD)v86;
  *(_DWORD *)(a4 + 92) = v91;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 32))(a4 + v15[13], v111, v112);
  *(_QWORD *)(a4 + v15[14]) = v72;
  v87 = (uint64_t *)(a4 + v15[15]);
  v88 = v118;
  *v87 = v110;
  v87[1] = v88;
  *(_QWORD *)(a4 + v15[16]) = v102;
  *(double *)(a4 + v15[17]) = a5;
  *(_BYTE *)(a4 + v15[18]) = v75;
  *(_DWORD *)(a4 + v15[19]) = v104;
  *(_DWORD *)(a4 + v15[20]) = v77;
  v89 = (uint64_t *)(a4 + v15[21]);
  *v89 = v80;
  v89[1] = v79;
  sub_1AE4FEE48();
}

uint64_t sub_1AE86EE9C()
{
  return sub_1AE925194();
}

uint64_t sub_1AE86EEB0()
{
  return sub_1AE925170();
}

uint64_t sub_1AE86EEC4()
{
  sub_1AE58FEAC(&qword_1EED93F20, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  return sub_1AE924D44();
}

uint64_t ViewService.SiriRemembersView.Entity.init(entity:createdAt:updatedAt:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  id v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v8 = sub_1AE561DEC(a1, (SEL *)&selRef_identifier);
  if (!v9)
  {
    sub_1AE86FB08();
    sub_1AE4F6778();
    *(_QWORD *)v18 = 0xD000000000000035;
    v19 = 0x80000001AE989B20;
LABEL_7:
    *(_QWORD *)(v18 + 8) = v19;
    *(_BYTE *)(v18 + 16) = 1;
    swift_willThrow();

    v20 = sub_1AE4F675C();
    v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8);
    v21(a3, v20);
    return ((uint64_t (*)(uint64_t, uint64_t))v21)(a2, v20);
  }
  v10 = v8;
  v11 = v9;
  v41 = a2;
  v12 = sub_1AE870630(v8, (SEL *)&selRef_type);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    sub_1AE86FB08();
    sub_1AE4F6778();
    *(_QWORD *)v18 = 0xD00000000000002FLL;
    v19 = 0x80000001AE989B60;
    goto LABEL_7;
  }
  v14 = v13;
  v39 = v12;
  v40 = a3;
  v15 = sub_1AE870630(v12, (SEL *)&selRef_fields);
  if (v16)
  {
    v17 = v16;
    v38 = v15;
  }
  else
  {
    v23 = sub_1AE87061C();
    sub_1AE507850();
    v24 = sub_1AE870638();

    v38 = Array<A>.fieldsJSON()(v24);
    v17 = v25;
    v15 = swift_bridgeObjectRelease();
  }
  v26 = sub_1AE870630(v15, (SEL *)&selRef_fieldsTokens);
  if (v27)
  {
    v28 = v26;
    v29 = v27;
  }
  else
  {
    v30 = sub_1AE87061C();
    sub_1AE507850();
    v31 = sub_1AE870638();

    Array<A>.fieldsTokens()(v31);
    v28 = v32;
    v29 = v33;
    swift_bridgeObjectRelease();
  }

  *(_QWORD *)a4 = 0;
  *(_BYTE *)(a4 + 8) = 1;
  *(_QWORD *)(a4 + 16) = v10;
  *(_QWORD *)(a4 + 24) = v11;
  *(_QWORD *)(a4 + 32) = v39;
  *(_QWORD *)(a4 + 40) = v14;
  *(_QWORD *)(a4 + 48) = v38;
  *(_QWORD *)(a4 + 56) = v17;
  *(_QWORD *)(a4 + 64) = v28;
  *(_QWORD *)(a4 + 72) = v29;
  v34 = type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  v35 = a4 + *(int *)(v34 + 36);
  v36 = sub_1AE4F675C();
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 32);
  v37(v35, v41, v36);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v37)(a4 + *(int *)(v34 + 40), v40, v36);
}

void Array<A>.fieldsTokens()(unint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void (*v7)(uint64_t, unint64_t);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v2 = (void *)MEMORY[0x1AF454348]();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1AE926AD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v3)
  {
LABEL_13:
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE56CE14(&qword_1ED318BD0, &qword_1ED319DE0);
    sub_1AE925DC4();
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v2);
    return;
  }
  v13 = MEMORY[0x1E0DEE9D8];
  sub_1AE52154C();
  if ((v3 & 0x8000000000000000) == 0)
  {
    v12 = v2;
    v4 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1AF453B80](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      v7 = sub_1AE568B08(0, 0xE000000000000000);
      v9 = v8;

      v10 = *(_QWORD *)(v13 + 16);
      if (v10 >= *(_QWORD *)(v13 + 24) >> 1)
        sub_1AE52154C();
      ++v4;
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v9;
    }
    while (v3 != v4);
    v2 = v12;
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1AE86F34C()
{
  sub_1AE58FEAC(qword_1ED30DA50, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Entity);
  return sub_1AE924D44();
}

uint64_t sub_1AE86F3A8()
{
  sub_1AE87056C();
  return sub_1AE924F90();
}

uint64_t sub_1AE86F3F8()
{
  sub_1AE87056C();
  return sub_1AE924F84();
}

uint64_t sub_1AE86F43C()
{
  sub_1AE87056C();
  return sub_1AE924F78();
}

uint64_t sub_1AE86F480()
{
  sub_1AE870530();
  return sub_1AE924D44();
}

uint64_t sub_1AE86F4C0@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  _QWORD *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t result;
  void *v52;
  uint64_t *v53;
  char *v54;
  uint64_t *v55;
  uint64_t v56;
  int64_t v57;
  unint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  unint64_t v61;
  uint64_t v62;
  int64_t v63;
  _OWORD *v64;
  uint64_t v65;
  _OWORD *v66;
  uint64_t *v67;
  __int128 v68;
  _OWORD v69[2];
  _QWORD *v70;
  uint64_t v71;
  _QWORD v72[6];

  v3 = v2;
  v72[4] = *MEMORY[0x1E0C80C00];
  v6 = sub_1AE925E78();
  MEMORY[0x1E0C80A78](v6);
  v54 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_64;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v56 = v3;
  v55 = a2;
  if (v8)
  {
    v70 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1AE5226F4();
    if (v8 < 0)
      __break(1u);
    v3 = 0;
    v9 = v70;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1AF453B80](v3, a1);
      else
        v10 = *(id *)(a1 + 8 * v3 + 32);
      v11 = v10;
      v12 = sub_1AE568C08();

      v70 = v9;
      v13 = v9[2];
      v14 = v13 + 1;
      if (v13 >= v9[3] >> 1)
      {
        sub_1AE5226F4();
        v14 = v13 + 1;
        v9 = v70;
      }
      ++v3;
      v9[2] = v14;
      v9[v13 + 4] = v12;
    }
    while (v8 != v3);
  }
  else
  {
    v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v14)
      goto LABEL_54;
  }
  v15 = 0;
  v60 = v9 + 4;
  v64 = v69;
  a2 = (uint64_t *)MEMORY[0x1E0DEE9E0];
  v66 = v72;
  v59 = v9;
  v58 = v14;
LABEL_15:
  if (v15 >= v9[2])
    goto LABEL_62;
  v16 = v60[v15];
  v17 = *(_QWORD *)(v16 + 64);
  v61 = v15 + 1;
  v62 = v16 + 64;
  v18 = 1 << *(_BYTE *)(v16 + 32);
  if (v18 < 64)
    v19 = ~(-1 << v18);
  else
    v19 = -1;
  a1 = v19 & v17;
  v63 = (unint64_t)(v18 + 63) >> 6;
  v57 = v63 - 1;
  v65 = v16;
  swift_bridgeObjectRetain();
  v20 = 0;
  if (a1)
  {
LABEL_20:
    v21 = __clz(__rbit64(a1));
    a1 &= a1 - 1;
    v22 = v21 | (v20 << 6);
LABEL_21:
    v23 = *(_QWORD *)(v65 + 56);
    v24 = (_QWORD *)(*(_QWORD *)(v65 + 48) + 16 * v22);
    v25 = v24[1];
    *(_QWORD *)&v68 = *v24;
    *((_QWORD *)&v68 + 1) = v25;
    sub_1AE524160(v23 + 32 * v22, (uint64_t)v64);
    swift_bridgeObjectRetain();
    goto LABEL_40;
  }
  while (1)
  {
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      goto LABEL_61;
    if (v26 < v63)
    {
      v27 = *(_QWORD *)(v62 + 8 * v26);
      if (v27)
        goto LABEL_25;
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 < v63)
      {
        v27 = *(_QWORD *)(v62 + 8 * v28);
        if (v27)
          goto LABEL_28;
        v20 = v26 + 1;
        if (v26 + 2 < v63)
        {
          v27 = *(_QWORD *)(v62 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
LABEL_25:
            a1 = (v27 - 1) & v27;
            v22 = __clz(__rbit64(v27)) + (v26 << 6);
            v20 = v26;
            goto LABEL_21;
          }
          v28 = v26 + 3;
          v20 = v26 + 2;
          if (v26 + 3 < v63)
          {
            v27 = *(_QWORD *)(v62 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_63;
                if (v26 >= v63)
                {
                  v20 = v57;
                  goto LABEL_39;
                }
                v27 = *(_QWORD *)(v62 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_25;
              }
            }
LABEL_28:
            v26 = v28;
            goto LABEL_25;
          }
        }
      }
    }
LABEL_39:
    a1 = 0;
    memset(v69, 0, sizeof(v69));
    v68 = 0u;
LABEL_40:
    sub_1AE8705A8((uint64_t)&v68, (uint64_t)&v70);
    v29 = v71;
    if (!v71)
    {
      swift_release();
      v15 = v61;
      v9 = v59;
      if (v61 == v58)
        goto LABEL_54;
      goto LABEL_15;
    }
    v3 = (uint64_t)v70;
    sub_1AE53F2F4(v66, &v68);
    swift_isUniquelyReferenced_nonNull_native();
    v67 = a2;
    v30 = sub_1AE536EDC(v3, v29);
    if (__OFADD__(a2[2], (v31 & 1) == 0))
      break;
    v32 = v30;
    v33 = v31;
    sub_1AE501548((uint64_t *)&unk_1EEDA4A00);
    if ((sub_1AE926A54() & 1) != 0)
    {
      v34 = sub_1AE536EDC(v3, v29);
      if ((v33 & 1) != (v35 & 1))
      {
        result = sub_1AE926DE4();
        __break(1u);
        return result;
      }
      v32 = v34;
    }
    a2 = v67;
    if ((v33 & 1) != 0)
    {
      v3 = v67[7] + 32 * v32;
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v3);
      sub_1AE53F2F4(&v68, (_OWORD *)v3);
    }
    else
    {
      v67[(v32 >> 6) + 8] |= 1 << v32;
      v36 = (uint64_t *)(a2[6] + 16 * v32);
      *v36 = v3;
      v36[1] = v29;
      sub_1AE53F2F4(&v68, (_OWORD *)(a2[7] + 32 * v32));
      v37 = a2[2];
      v38 = __OFADD__(v37, 1);
      v39 = v37 + 1;
      if (v38)
      {
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        swift_bridgeObjectRetain();
        v8 = sub_1AE926AD8();
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
      a2[2] = v39;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1)
      goto LABEL_20;
  }
  __break(1u);
LABEL_54:
  swift_bridgeObjectRelease();
  v40 = (void *)objc_opt_self();
  v41 = (void *)sub_1AE925C44();
  swift_bridgeObjectRelease();
  v70 = 0;
  v42 = objc_msgSend(v40, sel_dataWithJSONObject_options_error_, v41, 2, &v70, v54);

  v43 = v70;
  if (v42)
  {
    v44 = sub_1AE924834();
    v46 = v45;

    sub_1AE925E6C();
    v47 = sub_1AE925E54();
    if (v48)
    {
      v49 = v47;
      v50 = v48;
      result = sub_1AE50BDB4(v44, v46);
    }
    else
    {
      result = sub_1AE50BDB4(v44, v46);
      v50 = 0xE200000000000000;
      v49 = 32123;
    }
    v53 = v55;
    *v55 = v49;
    v53[1] = v50;
  }
  else
  {
    v52 = v43;
    sub_1AE9246B4();

    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1AE86FB08()
{
  unint64_t result;

  result = qword_1EEDA49B0;
  if (!qword_1EEDA49B0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SiriRemembersView.SiriRemembersViewError, &type metadata for ViewService.SiriRemembersView.SiriRemembersViewError);
    atomic_store(result, (unint64_t *)&qword_1EEDA49B0);
  }
  return result;
}

unint64_t sub_1AE86FB44()
{
  unint64_t result;

  result = qword_1EEDA49B8;
  if (!qword_1EEDA49B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEDA49B8);
  }
  return result;
}

void sub_1AE86FB80(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  void (*v4)(uint64_t);

  a3(0);
  v3 = sub_1AE4F7714();
  v4(v3);
  sub_1AE4F6664();
}

void sub_1AE86FBBC()
{
  sub_1AE58FEAC(&qword_1EEDA49C0, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
}

void sub_1AE86FBE8()
{
  sub_1AE58FEAC(&qword_1EEDA49C8, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
}

void sub_1AE86FC14()
{
  sub_1AE58FEAC(&qword_1ED30D8D8, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction);
}

unint64_t sub_1AE86FC44()
{
  unint64_t result;

  result = qword_1EEDA49D0;
  if (!qword_1EEDA49D0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for BMSiriRemembersInteraction.ProcessingState, &type metadata for BMSiriRemembersInteraction.ProcessingState);
    atomic_store(result, (unint64_t *)&qword_1EEDA49D0);
  }
  return result;
}

void sub_1AE86FC80()
{
  sub_1AE58FEAC(&qword_1EED93F18, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Interaction);
}

void sub_1AE86FCAC()
{
  sub_1AE58FEAC(&qword_1ED30EE30, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Interaction);
}

void sub_1AE86FCD8()
{
  sub_1AE58FEAC(&qword_1ED30DA48, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Entity);
}

void sub_1AE86FD04()
{
  sub_1AE58FEAC(&qword_1ED310240, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Entity);
}

unint64_t sub_1AE86FD34()
{
  unint64_t result;

  result = qword_1EEDA49D8;
  if (!qword_1EEDA49D8)
  {
    result = MEMORY[0x1AF454B70]("\r&G7ФC7", &type metadata for ViewService.SiriRemembersView.InteractionEntity);
    atomic_store(result, (unint64_t *)&qword_1EEDA49D8);
  }
  return result;
}

unint64_t sub_1AE86FD74()
{
  unint64_t result;

  result = qword_1ED30EE38;
  if (!qword_1ED30EE38)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SiriRemembersView.InteractionEntity, &type metadata for ViewService.SiriRemembersView.InteractionEntity);
    atomic_store(result, (unint64_t *)&qword_1ED30EE38);
  }
  return result;
}

unint64_t sub_1AE86FDB4()
{
  unint64_t result;

  result = qword_1ED30EF00;
  if (!qword_1ED30EF00)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SiriRemembersView.InteractionEntity, &type metadata for ViewService.SiriRemembersView.InteractionEntity);
    atomic_store(result, (unint64_t *)&qword_1ED30EF00);
  }
  return result;
}

void sub_1AE86FDF0(uint64_t *a1@<X8>)
{
  *a1 = sub_1AE86D8FC();
  sub_1AE4F6664();
}

void sub_1AE86FE18(_BYTE *a1@<X8>)
{
  *a1 = sub_1AE86D964() & 1;
  sub_1AE4F6664();
}

void sub_1AE86FE40(char *a1)
{
  sub_1AE86D990(*a1);
  sub_1AE4F6664();
}

uint64_t *_s20ProcessedInteractionVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1AE9248DC();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t _s20ProcessedInteractionVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1AE9248DC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *_s20ProcessedInteractionVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1AE9248DC();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *_s20ProcessedInteractionVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AE9248DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *_s20ProcessedInteractionVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1AE9248DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s20ProcessedInteractionVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AE9248DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t _s20ProcessedInteractionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE870104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1AE4F675C();
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t _s20ProcessedInteractionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE870180(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1AE4F675C();
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1AE8701E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AE9248DC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ViewService.SiriRemembersView.ProcessingStateCache()
{
  return objc_opt_self();
}

uint64_t method lookup function for ViewService.SiriRemembersView.ProcessingStateCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ViewService.SiriRemembersView.ProcessingStateCache.cache.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ViewService.SiriRemembersView.ProcessingStateCache.cache.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ViewService.SiriRemembersView.ProcessingStateCache.cache.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ViewService.SiriRemembersView.ProcessingStateCache.fullCoverage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ViewService.SiriRemembersView.ProcessingStateCache.fullCoverage.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ViewService.SiriRemembersView.ProcessingStateCache.fullCoverage.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ViewService.SiriRemembersView.ProcessingStateCache.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t _s15ProcessingStateOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE870324 + 4 * byte_1AE965315[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE870358 + 4 * asc_1AE965310[v4]))();
}

uint64_t sub_1AE870358(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE870360(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE870368);
  return result;
}

uint64_t sub_1AE870374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE87037CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE870380(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE870388(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BMSiriRemembersInteraction.ProcessingState()
{
  return &type metadata for BMSiriRemembersInteraction.ProcessingState;
}

uint64_t _s20ProcessedInteractionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE8703F0 + 4 * byte_1AE96531F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE870424 + 4 * byte_1AE96531A[v4]))();
}

uint64_t sub_1AE870424(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE87042C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE870434);
  return result;
}

uint64_t sub_1AE870440(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE870448);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE87044C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE870454(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s20ProcessedInteractionV10CodingKeysOMa()
{
  return &_s20ProcessedInteractionV10CodingKeysON;
}

unint64_t sub_1AE870474()
{
  unint64_t result;

  result = qword_1EEDA49E0;
  if (!qword_1EEDA49E0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE965900, &_s20ProcessedInteractionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA49E0);
  }
  return result;
}

unint64_t sub_1AE8704B4()
{
  unint64_t result;

  result = qword_1ED30EB20;
  if (!qword_1ED30EB20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE965870, &_s20ProcessedInteractionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED30EB20);
  }
  return result;
}

unint64_t sub_1AE8704F4()
{
  unint64_t result;

  result = qword_1ED30EB18;
  if (!qword_1ED30EB18)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE965898, &_s20ProcessedInteractionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED30EB18);
  }
  return result;
}

unint64_t sub_1AE870530()
{
  unint64_t result;

  result = qword_1EED93F28;
  if (!qword_1EED93F28)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SiriRemembersView.InteractionEntity, &type metadata for ViewService.SiriRemembersView.InteractionEntity);
    atomic_store(result, (unint64_t *)&qword_1EED93F28);
  }
  return result;
}

unint64_t sub_1AE87056C()
{
  unint64_t result;

  result = qword_1EEDA49E8;
  if (!qword_1EEDA49E8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SiriRemembersView.InteractionEntity, &type metadata for ViewService.SiriRemembersView.InteractionEntity);
    atomic_store(result, (unint64_t *)&qword_1EEDA49E8);
  }
  return result;
}

uint64_t sub_1AE8705A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EEDA49F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE8705F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v1, v0);
}

uint64_t sub_1AE870608(uint64_t a1, SEL *a2)
{
  void *v2;

  return sub_1AE561DEC(v2, a2);
}

uint64_t sub_1AE870610()
{
  return sub_1AE925F74();
}

id sub_1AE87061C()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 471));
}

void sub_1AE870628(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1AE555C64(v2, a2);
}

uint64_t sub_1AE870630(uint64_t a1, SEL *a2)
{
  void *v2;

  return sub_1AE561DEC(v2, a2);
}

uint64_t sub_1AE870638()
{
  return sub_1AE9261CC();
}

uint64_t sub_1AE870644()
{
  return type metadata accessor for ViewService.SiriRemembersView.ProcessedInteraction();
}

uint64_t ViewService.SiriRemembersView.SourceStreams.init(syncedStreamName:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  sub_1AE8761D8();
  sub_1AE870610();
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t ViewService.SiriRemembersView.Interaction.init(rowid:id:domain:type:bundleId:isDonatedBySiri:donorStream:direction:handlingStatus:startDate:durationSeconds:fields:contentHash:biomeEventTimestamp:isLocal:devicePlatform:userDonatorType:sourceStreams:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, __int128 a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, int a20,int a21,uint64_t *a22)
{
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  _QWORD *v31;
  _QWORD *v32;

  v25 = *a22;
  v26 = a22[1];
  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 8) = a2 & 1;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a12;
  *(_QWORD *)(a9 + 72) = a13;
  *(_BYTE *)(a9 + 80) = a14;
  *(_QWORD *)(a9 + 84) = *(_QWORD *)((char *)&a14 + 4);
  *(_DWORD *)(a9 + 92) = HIDWORD(a14);
  v27 = (int *)sub_1AE876168();
  v28 = a9 + v27[13];
  v29 = sub_1AE4F675C();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v28, a15, v29);
  *(double *)(a9 + v27[14]) = a10;
  v31 = (_QWORD *)(a9 + v27[15]);
  *v31 = a16;
  v31[1] = a17;
  *(_QWORD *)(a9 + v27[16]) = a18;
  *(double *)(a9 + v27[17]) = a11;
  *(_BYTE *)(a9 + v27[18]) = a19;
  *(_DWORD *)(a9 + v27[19]) = a20;
  *(_DWORD *)(a9 + v27[20]) = a21;
  v32 = (_QWORD *)(a9 + v27[21]);
  *v32 = v25;
  v32[1] = v26;
  return result;
}

uint64_t ViewService.SiriRemembersView.SourceStreams.adding(syncedStreamName:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *v1;
  v3 = v1[1];
  sub_1AE925F74();
  sub_1AE870610();
  sub_1AE4F7630();
  if ((sub_1AE9267CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    result = swift_bridgeObjectRelease();
  }
  *a1 = v4;
  a1[1] = v3;
  return result;
}

uint64_t static ViewService.SiriRemembersView.Interaction.databaseDateEncodingStrategy.getter()
{
  return sub_1AE58AF50();
}

uint64_t ViewService.SiriRemembersView.Entity.init(rowid:id:type:fields:fieldsTokens:createdAt:updatedAt:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v18)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 8) = a2 & 1;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  v14 = type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  v15 = a9 + *(int *)(v14 + 36);
  v16 = sub_1AE4F675C();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v18(v15, a12, v16);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(a9 + *(int *)(v14 + 40), a13, v16);
}

uint64_t static ViewService.SiriRemembersView.Entity.databaseDateEncodingStrategy.getter()
{
  return sub_1AE58AF50();
}

uint64_t ViewService.siriRemembersView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v10;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  sub_1AE8761B4();
  v4 = (void *)sub_1AE925E18();
  v11[0] = 0;
  v5 = objc_msgSend(v3, sel_requestAssertionForViewName_error_, v4, v11);

  v6 = v11[0];
  if (v5)
  {
    *(_QWORD *)(a1 + *(int *)(type metadata accessor for ViewService.SiriRemembersView(0) + 20)) = v5;
    v7 = v6;
    v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_viewArtifactURL);
    sub_1AE924744();

    return swift_unknownObjectRelease();
  }
  else
  {
    v10 = v11[0];
    sub_1AE9246B4();

    return swift_willThrow();
  }
}

uint64_t static ViewService.SiriRemembersView.name.getter()
{
  return sub_1AE8761B4();
}

uint64_t ViewService.SiriRemembersView.databaseURL.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1AE4FD9B0();
  v0 = sub_1AE4FBC98();
  return sub_1AE4FD010(v0, v1, v2, v3);
}

uint64_t BMSiriRemembersInteractionInteractionDirection.description.getter(uint64_t a1)
{
  return sub_1AE870E8C(a1, MEMORY[0x1E0D01DE0]);
}

uint64_t sub_1AE870ADC()
{
  sub_1AE58FEAC(&qword_1ED30F9B8, type metadata accessor for BMSiriRemembersInteractionInteractionDirection);
  return sub_1AE9261A8();
}

uint64_t sub_1AE870B50()
{
  sub_1AE58FEAC(&qword_1ED30F9B8, type metadata accessor for BMSiriRemembersInteractionInteractionDirection);
  return sub_1AE926160();
}

uint64_t sub_1AE870BB4()
{
  unsigned int *v0;

  return BMSiriRemembersInteractionInteractionDirection.description.getter(*v0);
}

uint64_t BMSiriRemembersInteractionInteractionStatus.description.getter(uint64_t a1)
{
  return sub_1AE870E8C(a1, MEMORY[0x1E0D01DF0]);
}

uint64_t sub_1AE870BC8()
{
  sub_1AE58FEAC(&qword_1ED30F990, type metadata accessor for BMSiriRemembersInteractionInteractionStatus);
  return sub_1AE9261A8();
}

uint64_t sub_1AE870C3C()
{
  sub_1AE58FEAC(&qword_1ED30F990, type metadata accessor for BMSiriRemembersInteractionInteractionStatus);
  return sub_1AE926160();
}

uint64_t sub_1AE870CA0()
{
  unsigned int *v0;

  return BMSiriRemembersInteractionInteractionStatus.description.getter(*v0);
}

uint64_t BMSiriRemembersInteractionInteractionSource.description.getter(uint64_t a1)
{
  return sub_1AE870E8C(a1, MEMORY[0x1E0D01DE8]);
}

uint64_t sub_1AE870CB4()
{
  sub_1AE58FEAC(qword_1ED30F978, type metadata accessor for BMSiriRemembersInteractionInteractionSource);
  return sub_1AE9261A8();
}

uint64_t sub_1AE870D28()
{
  sub_1AE58FEAC(qword_1ED30F978, type metadata accessor for BMSiriRemembersInteractionInteractionSource);
  return sub_1AE926160();
}

uint64_t sub_1AE870D8C()
{
  unsigned int *v0;

  return BMSiriRemembersInteractionInteractionSource.description.getter(*v0);
}

uint64_t BMDeviceMetadataDevicePlatform.description.getter(uint64_t a1)
{
  return sub_1AE870E8C(a1, MEMORY[0x1E0D01D68]);
}

uint64_t sub_1AE870DA0()
{
  sub_1AE58FEAC(&qword_1ED30EE50, type metadata accessor for BMDeviceMetadataDevicePlatform);
  return sub_1AE9261A8();
}

uint64_t sub_1AE870E14()
{
  sub_1AE58FEAC(&qword_1ED30EE50, type metadata accessor for BMDeviceMetadataDevicePlatform);
  return sub_1AE926160();
}

uint64_t sub_1AE870E78()
{
  unsigned int *v0;

  return BMDeviceMetadataDevicePlatform.description.getter(*v0);
}

uint64_t BMSiriRemembersInteractionUserDonatorType.description.getter(uint64_t a1)
{
  return sub_1AE870E8C(a1, MEMORY[0x1E0D01DF8]);
}

uint64_t sub_1AE870E8C(uint64_t a1, uint64_t (*a2)(void))
{
  id v2;
  uint64_t v3;

  v2 = (id)a2();
  v3 = sub_1AE925E3C();

  return v3;
}

uint64_t sub_1AE870ED4()
{
  sub_1AE58FEAC(&qword_1ED30EE58, type metadata accessor for BMSiriRemembersInteractionUserDonatorType);
  return sub_1AE9261A8();
}

uint64_t sub_1AE870F48()
{
  sub_1AE58FEAC(&qword_1ED30EE58, type metadata accessor for BMSiriRemembersInteractionUserDonatorType);
  return sub_1AE926160();
}

uint64_t sub_1AE870FAC()
{
  unsigned int *v0;

  return BMSiriRemembersInteractionUserDonatorType.description.getter(*v0);
}

void ViewService.SiriRemembersView.SourceStreams.rawValue.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void ViewService.SiriRemembersView.SourceStreams.rawValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  sub_1AE4F6624();
}

uint64_t (*ViewService.SiriRemembersView.SourceStreams.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ViewService.SiriRemembersView.SourceStreams.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t static ViewService.SiriRemembersView.SourceStreams.encoded(syncedStreamName:)()
{
  uint64_t v1;

  sub_1AE8761D8();
  sub_1AE870610();
  return v1;
}

uint64_t type metadata accessor for ViewService.SiriRemembersView.Interaction(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1ED319C38);
}

uint64_t sub_1AE87105C()
{
  sub_1AE8760D4();
  return sub_1AE926190();
}

uint64_t sub_1AE8710B8()
{
  sub_1AE8760D4();
  return sub_1AE926148();
}

uint64_t sub_1AE871104@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  _QWORD v5[2];

  result = ViewService.SiriRemembersView.SourceStreams.init(rawValue:)(*a1, a1[1], v5);
  v4 = v5[1];
  *a2 = v5[0];
  a2[1] = v4;
  return result;
}

void sub_1AE871140(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  ViewService.SiriRemembersView.SourceStreams.rawValue.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AE871164()
{
  sub_1AE872DF0();
  sub_1AE8760D4();
  return sub_1AE92514C();
}

uint64_t sub_1AE8711C0()
{
  sub_1AE872E2C();
  sub_1AE8760D4();
  return sub_1AE925158();
}

uint64_t sub_1AE871224()
{
  sub_1AE876098();
  return sub_1AE92511C();
}

uint64_t sub_1AE87125C()
{
  sub_1AE876098();
  return sub_1AE925134();
}

uint64_t static ViewService.SiriRemembersView.Interaction.databaseTableName.getter()
{
  return 0x7463617265746E69;
}

uint64_t sub_1AE8712BC(uint64_t a1)
{
  return sub_1AE872E84(a1, MEMORY[0x1E0D24470], (uint64_t)&unk_1EED93F00, MEMORY[0x1E0D24468]);
}

uint64_t type metadata accessor for ViewService.SiriRemembersView.Entity(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1ED319C48);
}

uint64_t sub_1AE8712EC(uint64_t a1)
{
  return sub_1AE872E84(a1, MEMORY[0x1E0D24460], (uint64_t)&unk_1ED30EEA8, MEMORY[0x1E0D24458]);
}

uint64_t static ViewService.SiriRemembersView.Interaction.databaseDateDecodingStrategy.getter()
{
  return sub_1AE58AF50();
}

uint64_t sub_1AE87132C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1AE501548(&qword_1ED30D8A0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE501548(&qword_1EED93EA8);
  sub_1AE595770(v3, qword_1EED93EB0);
  sub_1AE4FB608(v3, (uint64_t)qword_1EED93EB0);
  type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  v4 = sub_1AE9249F0();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v4);
  sub_1AE58FEAC(&qword_1ED30EE30, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  sub_1AE86FDB4();
  sub_1AE924AEC();
  return sub_1AE876110((uint64_t)v2);
}

uint64_t static ViewService.SiriRemembersView.Interaction.interactionEntities.getter()
{
  return sub_1AE58B12C();
}

uint64_t sub_1AE871464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v0 = sub_1AE501548(&qword_1EED93EA8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1AE501548(&qword_1EED94B70);
  sub_1AE595770(v4, qword_1EED94B88);
  v8[1] = sub_1AE4FB608(v4, (uint64_t)qword_1EED94B88);
  type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  if (qword_1EED94B78 != -1)
    swift_once();
  v5 = sub_1AE4FB608(v0, (uint64_t)qword_1EED93EB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  if (qword_1ED30D8C0 != -1)
    swift_once();
  v6 = sub_1AE501548((uint64_t *)&unk_1ED30DA10);
  sub_1AE4FB608(v6, (uint64_t)qword_1ED30D8A8);
  sub_1AE58FEAC(&qword_1ED30EE30, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  sub_1AE56CE14(&qword_1EED94B58, &qword_1EED93EA8);
  sub_1AE56CE14(qword_1EED94B60, (uint64_t *)&unk_1ED30DA10);
  sub_1AE924AF8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t static ViewService.SiriRemembersView.Interaction.entities.getter()
{
  return sub_1AE58B12C();
}

uint64_t ViewService.SiriRemembersView.Interaction.rowid.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ViewService.SiriRemembersView.Interaction.rowid.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*ViewService.SiriRemembersView.Interaction.rowid.modify())(_QWORD)
{
  return nullsub_1;
}

void ViewService.SiriRemembersView.Interaction.id.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void ViewService.SiriRemembersView.Interaction.domain.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void ViewService.SiriRemembersView.Interaction.type.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void ViewService.SiriRemembersView.Interaction.bundleId.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

uint64_t ViewService.SiriRemembersView.Interaction.isDonatedBySiri.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t ViewService.SiriRemembersView.Interaction.donorStream.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 84);
}

uint64_t ViewService.SiriRemembersView.Interaction.direction.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 88);
}

uint64_t ViewService.SiriRemembersView.Interaction.handlingStatus.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 92);
}

uint64_t ViewService.SiriRemembersView.Interaction.startDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1AE876168();
  sub_1AE4F675C();
  v0 = sub_1AE4FBC98();
  return sub_1AE4FD010(v0, v1, v2, v3);
}

double ViewService.SiriRemembersView.Interaction.durationSeconds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(sub_1AE876168() + 56));
}

void ViewService.SiriRemembersView.Interaction.fields.getter()
{
  sub_1AE876168();
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

uint64_t ViewService.SiriRemembersView.Interaction.contentHash.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(sub_1AE876168() + 64));
}

double ViewService.SiriRemembersView.Interaction.biomeEventTimestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(sub_1AE876168() + 68));
}

uint64_t ViewService.SiriRemembersView.Interaction.isLocal.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(sub_1AE876168() + 72));
}

uint64_t ViewService.SiriRemembersView.Interaction.devicePlatform.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(sub_1AE876168() + 76));
}

uint64_t ViewService.SiriRemembersView.Interaction.userDonatorType.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(sub_1AE876168() + 80));
}

uint64_t ViewService.SiriRemembersView.Interaction.sourceStreams.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(sub_1AE876168() + 84));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE871880(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  char v22;

  v2 = a1 == 0x6469776F72 && a2 == 0xE500000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 25705 && a2 == 0xE200000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 1701869940 && a2 == 0xE400000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x6574616E6F447369 && a2 == 0xEF69726953794264;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x727453726F6E6F64 && a2 == 0xEB000000006D6165;
              if (v11 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL;
                if (v12 || (sub_1AE926D60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 0x676E696C646E6168 && a2 == 0xEE00737574617453;
                  if (v13 || (sub_1AE926D60() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    v14 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
                    if (v14 || (sub_1AE926D60() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      v15 = a1 == 0x6E6F697461727564 && a2 == 0xEF73646E6F636553;
                      if (v15 || (sub_1AE926D60() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        v16 = a1 == 0x73646C656966 && a2 == 0xE600000000000000;
                        if (v16 || (sub_1AE926D60() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else
                        {
                          v17 = a1 == 0x48746E65746E6F63 && a2 == 0xEB00000000687361;
                          if (v17 || (sub_1AE926D60() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 12;
                          }
                          else if (a1 == 0xD000000000000013 && a2 == 0x80000001AE974FC0
                                 || (sub_1AE926D60() & 1) != 0)
                          {
                            swift_bridgeObjectRelease();
                            return 13;
                          }
                          else
                          {
                            v18 = a1 == 0x6C61636F4C7369 && a2 == 0xE700000000000000;
                            if (v18 || (sub_1AE926D60() & 1) != 0)
                            {
                              swift_bridgeObjectRelease();
                              return 14;
                            }
                            else
                            {
                              v19 = a1 == 0x6C50656369766564 && a2 == 0xEE006D726F667461;
                              if (v19 || (sub_1AE926D60() & 1) != 0)
                              {
                                swift_bridgeObjectRelease();
                                return 15;
                              }
                              else
                              {
                                v20 = a1 == 0x616E6F4472657375 && a2 == 0xEF65707954726F74;
                                if (v20 || (sub_1AE926D60() & 1) != 0)
                                {
                                  swift_bridgeObjectRelease();
                                  return 16;
                                }
                                else if (a1 == 0x7453656372756F73 && a2 == 0xED0000736D616572)
                                {
                                  swift_bridgeObjectRelease();
                                  return 17;
                                }
                                else
                                {
                                  v22 = sub_1AE926D60();
                                  swift_bridgeObjectRelease();
                                  if ((v22 & 1) != 0)
                                    return 17;
                                  else
                                    return 18;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE872040()
{
  return 18;
}

uint64_t sub_1AE872048(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE872078 + 4 * byte_1AE965980[a1]))(0x6469776F72, 0xE500000000000000);
}

uint64_t sub_1AE872078()
{
  return 25705;
}

uint64_t sub_1AE872084()
{
  return 0x6E69616D6F64;
}

uint64_t sub_1AE872098()
{
  return 1701869940;
}

uint64_t sub_1AE8720A8()
{
  return 0x6449656C646E7562;
}

uint64_t sub_1AE8720C0()
{
  return 0x6574616E6F447369;
}

uint64_t sub_1AE8720E4()
{
  return 0x727453726F6E6F64;
}

uint64_t sub_1AE872104()
{
  return 0x6F69746365726964;
}

uint64_t sub_1AE872124()
{
  return 0x676E696C646E6168;
}

uint64_t sub_1AE872148()
{
  return 0x7461447472617473;
}

uint64_t sub_1AE872164()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1AE872188()
{
  return 0x73646C656966;
}

uint64_t sub_1AE87219C()
{
  return 0x48746E65746E6F63;
}

unint64_t sub_1AE8721BC()
{
  return 0xD000000000000013;
}

uint64_t sub_1AE8721D8()
{
  return 0x6C61636F4C7369;
}

uint64_t sub_1AE8721F0()
{
  return 0x6C50656369766564;
}

uint64_t sub_1AE872214()
{
  return 0x616E6F4472657375;
}

uint64_t sub_1AE872238()
{
  return 0x7453656372756F73;
}

uint64_t sub_1AE87225C()
{
  unsigned __int8 *v0;

  return sub_1AE872048(*v0);
}

uint64_t sub_1AE872264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE871880(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE872288@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE872040();
  *a1 = result;
  return result;
}

uint64_t sub_1AE8722AC()
{
  sub_1AE872DB4();
  return sub_1AE926F94();
}

uint64_t sub_1AE8722D4()
{
  sub_1AE872DB4();
  return sub_1AE926FA0();
}

uint64_t ViewService.SiriRemembersView.Interaction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = sub_1AE501548((uint64_t *)&unk_1EED947B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F666C();
  v7 = v6 - v5;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE872DB4();
  sub_1AE4FC7AC();
  sub_1AE876244();
  sub_1AE926C7C();
  if (!v1)
  {
    sub_1AE4FE26C(1);
    sub_1AE4FE26C(2);
    sub_1AE4FE26C(3);
    sub_1AE4FE26C(4);
    sub_1AE507858(5);
    v8 = sub_1AE876224(6);
    type metadata accessor for BMSiriRemembersInteractionInteractionSource(v8);
    sub_1AE58FEAC(qword_1ED30F968, type metadata accessor for BMSiriRemembersInteractionInteractionSource);
    sub_1AE5007A0();
    v9 = sub_1AE876224(7);
    type metadata accessor for BMSiriRemembersInteractionInteractionDirection(v9);
    sub_1AE58FEAC(qword_1EED94710, type metadata accessor for BMSiriRemembersInteractionInteractionDirection);
    sub_1AE5007A0();
    v10 = sub_1AE876224(8);
    type metadata accessor for BMSiriRemembersInteractionInteractionStatus(v10);
    sub_1AE58FEAC(&qword_1EED94708, type metadata accessor for BMSiriRemembersInteractionInteractionStatus);
    sub_1AE5007A0();
    type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
    sub_1AE4F675C();
    sub_1AE58FEAC(&qword_1ED30EB50, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1AE501DAC();
    sub_1AE507CC0(10);
    sub_1AE876244();
    sub_1AE926C40();
    sub_1AE926CB8();
    sub_1AE507CC0(13);
    sub_1AE507858(14);
    v11 = sub_1AE876224(15);
    type metadata accessor for BMDeviceMetadataDevicePlatform(v11);
    sub_1AE58FEAC(&qword_1EED94738, type metadata accessor for BMDeviceMetadataDevicePlatform);
    sub_1AE5007A0();
    v12 = sub_1AE876224(16);
    type metadata accessor for BMSiriRemembersInteractionUserDonatorType(v12);
    sub_1AE58FEAC(&qword_1EED94740, type metadata accessor for BMSiriRemembersInteractionUserDonatorType);
    sub_1AE5007A0();
    sub_1AE872DF0();
    sub_1AE501DAC();
  }
  return sub_1AE4FDC10(v7, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

void ViewService.SiriRemembersView.Interaction.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;

  sub_1AE4F67EC();
  v3 = v2;
  v5 = v4;
  v6 = sub_1AE4F675C();
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F666C();
  v10 = v9 - v8;
  v28 = sub_1AE501548((uint64_t *)&unk_1ED30F9F0);
  MEMORY[0x1E0C80A78](v28);
  sub_1AE4F666C();
  v13 = v12 - v11;
  v31 = (int *)type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F683C();
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
  v15 = v3[3];
  v16 = v3[4];
  sub_1AE4F9858(v3, v15);
  sub_1AE872DB4();
  sub_1AE926F34();
  if (v0)
  {
    sub_1AE5067D8();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
    if ((_DWORD)v5)
    {
      swift_bridgeObjectRelease();
      if (!v13)
      {
LABEL_5:
        if (!(_DWORD)v10)
          goto LABEL_6;
        goto LABEL_11;
      }
    }
    else if (!v13)
    {
      goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    if (!(_DWORD)v10)
    {
LABEL_6:
      if (!(_DWORD)v16)
        goto LABEL_7;
      goto LABEL_12;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    if (!(_DWORD)v16)
    {
LABEL_7:
      if (!(_DWORD)v15)
        goto LABEL_14;
      goto LABEL_13;
    }
LABEL_12:
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v1 + v31[13], v30);
    if (!(_DWORD)v15)
      goto LABEL_14;
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  *(_QWORD *)v1 = sub_1AE926BA4();
  *(_BYTE *)(v1 + 8) = v17 & 1;
  *(_QWORD *)(v1 + 16) = sub_1AE4FD744(1);
  *(_QWORD *)(v1 + 24) = v18;
  *(_QWORD *)(v1 + 32) = sub_1AE4FD744(2);
  *(_QWORD *)(v1 + 40) = v19;
  *(_QWORD *)(v1 + 48) = sub_1AE4FD744(3);
  *(_QWORD *)(v1 + 56) = v20;
  *(_QWORD *)(v1 + 64) = sub_1AE4FD744(4);
  *(_QWORD *)(v1 + 72) = v21;
  LOBYTE(v32) = 5;
  *(_BYTE *)(v1 + 80) = sub_1AE926BBC() & 1;
  type metadata accessor for BMSiriRemembersInteractionInteractionSource(0);
  sub_1AE58FEAC(&qword_1ED30F988, type metadata accessor for BMSiriRemembersInteractionInteractionSource);
  sub_1AE503CDC();
  *(_DWORD *)(v1 + 84) = v32;
  type metadata accessor for BMSiriRemembersInteractionInteractionDirection(0);
  sub_1AE58FEAC(qword_1ED30F9C0, type metadata accessor for BMSiriRemembersInteractionInteractionDirection);
  sub_1AE503CDC();
  *(_DWORD *)(v1 + 88) = v32;
  type metadata accessor for BMSiriRemembersInteractionInteractionStatus(0);
  sub_1AE58FEAC(qword_1ED30F998, type metadata accessor for BMSiriRemembersInteractionInteractionStatus);
  sub_1AE503CDC();
  *(_DWORD *)(v1 + 92) = v32;
  LOBYTE(v32) = 9;
  sub_1AE58FEAC(&qword_1ED318D00, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1AE4FCCA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v1 + v31[13], v10, v30);
  sub_1AE507348(10);
  *(_QWORD *)(v1 + v31[14]) = v22;
  sub_1AE876184(11);
  v23 = sub_1AE926B68();
  v24 = (uint64_t *)(v1 + v31[15]);
  *v24 = v23;
  v24[1] = v25;
  sub_1AE876184(12);
  *(_QWORD *)(v1 + v31[16]) = sub_1AE926BE0();
  sub_1AE507348(13);
  *(_QWORD *)(v1 + v31[17]) = v26;
  sub_1AE876184(14);
  *(_BYTE *)(v1 + v31[18]) = sub_1AE926BBC() & 1;
  type metadata accessor for BMDeviceMetadataDevicePlatform(0);
  sub_1AE58FEAC(&qword_1ED30EDA8, type metadata accessor for BMDeviceMetadataDevicePlatform);
  sub_1AE4FCCA4();
  *(_DWORD *)(v1 + v31[19]) = v32;
  type metadata accessor for BMSiriRemembersInteractionUserDonatorType(0);
  sub_1AE58FEAC(&qword_1ED318940, type metadata accessor for BMSiriRemembersInteractionUserDonatorType);
  sub_1AE4FCCA4();
  *(_DWORD *)(v1 + v31[20]) = v32;
  sub_1AE872E2C();
  sub_1AE4FCCA4();
  sub_1AE508DE0();
  v27 = (_QWORD *)(v1 + v31[21]);
  *v27 = v32;
  v27[1] = v33;
  sub_1AE86FB80(v1, v5, (void (*)(_QWORD))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
  sub_1AE53D160(v1, type metadata accessor for ViewService.SiriRemembersView.Interaction);
LABEL_14:
  sub_1AE4F667C();
}

void sub_1AE872CB8()
{
  ViewService.SiriRemembersView.Interaction.init(from:)();
}

uint64_t sub_1AE872CCC(_QWORD *a1)
{
  return ViewService.SiriRemembersView.Interaction.encode(to:)(a1);
}

uint64_t sub_1AE872CE0()
{
  return 0x7463617265746E69;
}

uint64_t sub_1AE872D00()
{
  sub_1AE58FEAC(qword_1ED30EDE0, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  return sub_1AE924DA4();
}

uint64_t static ViewService.SiriRemembersView.Entity.databaseTableName.getter()
{
  return 0x7365697469746E65;
}

uint64_t sub_1AE872D84(uint64_t a1)
{
  return sub_1AE872E84(a1, MEMORY[0x1E0D24470], (uint64_t)&unk_1ED30DA30, MEMORY[0x1E0D24468]);
}

uint64_t type metadata accessor for ViewService.SiriRemembersView(uint64_t a1)
{
  return sub_1AE536C28(a1, qword_1ED30EBC8);
}

unint64_t sub_1AE872DB4()
{
  unint64_t result;

  result = qword_1ED30EE90;
  if (!qword_1ED30EE90)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966498, &_s17SiriRemembersViewV11InteractionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED30EE90);
  }
  return result;
}

unint64_t sub_1AE872DF0()
{
  unint64_t result;

  result = qword_1ED30EB68;
  if (!qword_1ED30EB68)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SiriRemembersView.SourceStreams, &type metadata for ViewService.SiriRemembersView.SourceStreams);
    atomic_store(result, (unint64_t *)&qword_1ED30EB68);
  }
  return result;
}

unint64_t sub_1AE872E2C()
{
  unint64_t result;

  result = qword_1ED30EEE8;
  if (!qword_1ED30EEE8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SiriRemembersView.SourceStreams, &type metadata for ViewService.SiriRemembersView.SourceStreams);
    atomic_store(result, (unint64_t *)&qword_1ED30EEE8);
  }
  return result;
}

uint64_t sub_1AE872E68(uint64_t a1)
{
  return sub_1AE872E84(a1, MEMORY[0x1E0D24460], (uint64_t)&unk_1ED30EF28, MEMORY[0x1E0D24458]);
}

uint64_t sub_1AE872E84(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, unsigned int *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = a2(0);
  sub_1AE876258(v6);
  v7 = sub_1AE876264();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v7, *a4, v4);
}

uint64_t static ViewService.SiriRemembersView.Entity.databaseDateDecodingStrategy.getter()
{
  return sub_1AE58AF50();
}

uint64_t sub_1AE872EF0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1AE501548(&qword_1ED30D8A0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE501548(&qword_1EEDA4A60);
  sub_1AE595770(v3, qword_1EEDA4A10);
  sub_1AE4FB608(v3, (uint64_t)qword_1EEDA4A10);
  type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  v4 = sub_1AE9249F0();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 1, 1, v4);
  sub_1AE58FEAC(&qword_1ED310240, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Entity);
  sub_1AE86FDB4();
  sub_1AE924AEC();
  return sub_1AE876110((uint64_t)v2);
}

uint64_t static ViewService.SiriRemembersView.Entity.interactionEntities.getter()
{
  return sub_1AE58B12C();
}

uint64_t sub_1AE873028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v0 = sub_1AE501548(&qword_1EEDA4A60);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1AE501548((uint64_t *)&unk_1EEDA4A68);
  sub_1AE595770(v4, qword_1EEDA4A28);
  v8[1] = sub_1AE4FB608(v4, (uint64_t)qword_1EEDA4A28);
  type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  if (qword_1EED998C8 != -1)
    swift_once();
  v5 = sub_1AE4FB608(v0, (uint64_t)qword_1EEDA4A10);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  if (qword_1EED998E8 != -1)
    swift_once();
  v6 = sub_1AE501548((uint64_t *)&unk_1EEDA4A78);
  sub_1AE4FB608(v6, (uint64_t)qword_1EEDA4A40);
  sub_1AE58FEAC(&qword_1ED310240, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Entity);
  sub_1AE56CE14(&qword_1EEDA4AC8, &qword_1EEDA4A60);
  sub_1AE56CE14(qword_1EEDA4AD0, (uint64_t *)&unk_1EEDA4A78);
  sub_1AE924AF8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t static ViewService.SiriRemembersView.Entity.interactions.getter()
{
  return sub_1AE58B12C();
}

uint64_t (*ViewService.SiriRemembersView.Entity.rowid.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t ViewService.SiriRemembersView.Entity.createdAt.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1AE505EE4();
  sub_1AE4F675C();
  v0 = sub_1AE4FBC98();
  return sub_1AE4FD010(v0, v1, v2, v3);
}

uint64_t ViewService.SiriRemembersView.Entity.updatedAt.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1AE505EE4();
  sub_1AE4F675C();
  v0 = sub_1AE4FBC98();
  return sub_1AE4FD010(v0, v1, v2, v3);
}

uint64_t sub_1AE8732A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 0x6469776F72 && a2 == 0xE500000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 25705 && a2 == 0xE200000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1701869940 && a2 == 0xE400000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x73646C656966 && a2 == 0xE600000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6F5473646C656966 && a2 == 0xEC000000736E656BLL;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x4164657461657263 && a2 == 0xE900000000000074;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x4164657461647075 && a2 == 0xE900000000000074)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = sub_1AE926D60();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE87356C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE87359C + 4 * byte_1AE965992[a1]))(0x6469776F72, 0xE500000000000000);
}

uint64_t sub_1AE87359C()
{
  return 25705;
}

uint64_t sub_1AE8735A8()
{
  return 1701869940;
}

uint64_t sub_1AE8735B8()
{
  return 0x73646C656966;
}

uint64_t sub_1AE8735CC()
{
  return 0x6F5473646C656966;
}

uint64_t sub_1AE8735EC()
{
  return 0x4164657461657263;
}

uint64_t sub_1AE873614()
{
  unsigned __int8 *v0;

  return sub_1AE87356C(*v0);
}

uint64_t sub_1AE87361C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8732A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE873640()
{
  sub_1AE873830();
  return sub_1AE926F94();
}

uint64_t sub_1AE873668()
{
  sub_1AE873830();
  return sub_1AE926FA0();
}

void ViewService.SiriRemembersView.Entity.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE4F67EC();
  v3 = v2;
  v4 = sub_1AE501548(qword_1ED30DA60);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE873830();
  sub_1AE4FC7AC();
  sub_1AE926C7C();
  if (!v0)
  {
    sub_1AE4FB9C4();
    sub_1AE4FB9C4();
    sub_1AE4FB9C4();
    sub_1AE4FB9C4();
    type metadata accessor for ViewService.SiriRemembersView.Entity(0);
    sub_1AE4F675C();
    sub_1AE58FEAC(&qword_1ED30EB50, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1AE87619C();
    sub_1AE87619C();
  }
  sub_1AE4FDC10(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_1AE4F667C();
}

unint64_t sub_1AE873830()
{
  unint64_t result;

  result = qword_1ED30D8E8;
  if (!qword_1ED30D8E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966448, &_s17SiriRemembersViewV6EntityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED30D8E8);
  }
  return result;
}

void ViewService.SiriRemembersView.Entity.init(from:)()
{
  void (*v0)(_QWORD, _QWORD, _QWORD);
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD, _QWORD, _QWORD);
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void (*v39)(_QWORD, _QWORD, _QWORD);
  uint64_t v40;

  sub_1AE4F67EC();
  v39 = v0;
  v2 = v1;
  v34 = v3;
  v40 = sub_1AE4F675C();
  v36 = *(_QWORD *)(v40 - 8);
  sub_1AE4F6630();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v33 - v8;
  v35 = sub_1AE501548(&qword_1ED30FA00);
  v10 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  sub_1AE4F683C();
  v37 = type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F666C();
  v14 = v13 - v12;
  *(_QWORD *)v14 = 0;
  v15 = v14;
  *(_BYTE *)(v14 + 8) = 1;
  v16 = v2[3];
  v38 = v2;
  v17 = sub_1AE4F9858(v2, v16);
  sub_1AE873830();
  v18 = v39;
  sub_1AE926F34();
  if (!v18)
  {
    v39 = (void (*)(_QWORD, _QWORD, _QWORD))v9;
    v33 = v7;
    v19 = v34;
    v20 = sub_1AE926BA4();
    v21 = v40;
    *(_QWORD *)v15 = v20;
    *(_BYTE *)(v15 + 8) = v24 & 1;
    *(_QWORD *)(v15 + 16) = sub_1AE509280();
    *(_QWORD *)(v15 + 24) = v25;
    *(_QWORD *)(v15 + 32) = sub_1AE509280();
    *(_QWORD *)(v15 + 40) = v26;
    *(_QWORD *)(v15 + 48) = sub_1AE509280();
    *(_QWORD *)(v15 + 56) = v27;
    *(_QWORD *)(v15 + 64) = sub_1AE509280();
    *(_QWORD *)(v15 + 72) = v28;
    sub_1AE58FEAC(&qword_1ED318D00, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1AE505C30();
    v29 = sub_1AE506158();
    v31 = v39;
    v39 = *(void (**)(_QWORD, _QWORD, _QWORD))(v30 + 32);
    v39(v29, v31, v21);
    v32 = v33;
    sub_1AE505C30();
    sub_1AE876204();
    v39(v15 + *(int *)(v37 + 40), v32, v21);
    sub_1AE86FB80(v15, v19, (void (*)(_QWORD))type metadata accessor for ViewService.SiriRemembersView.Entity);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v38);
    sub_1AE53D160(v15, type metadata accessor for ViewService.SiriRemembersView.Entity);
    goto LABEL_13;
  }
  sub_1AE876170();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v38);
  if (!(_DWORD)v7)
  {
    if (!(_DWORD)v16)
      goto LABEL_6;
LABEL_10:
    swift_bridgeObjectRelease();
    if (!v17)
    {
LABEL_7:
      if (!(_DWORD)v10)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  if ((_DWORD)v16)
    goto LABEL_10;
LABEL_6:
  if (!v17)
    goto LABEL_7;
LABEL_11:
  swift_bridgeObjectRelease();
  if ((_DWORD)v10)
  {
LABEL_12:
    v22 = sub_1AE506158();
    sub_1AE4FBA8C(v22, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  }
LABEL_13:
  sub_1AE4F667C();
}

void sub_1AE873C48()
{
  ViewService.SiriRemembersView.Entity.init(from:)();
}

void sub_1AE873C5C()
{
  ViewService.SiriRemembersView.Entity.encode(to:)();
}

uint64_t sub_1AE873C70()
{
  sub_1AE58FEAC(&qword_1ED30EB98, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Entity);
  return sub_1AE924DA4();
}

unint64_t static ViewService.SiriRemembersView.InteractionEntity.databaseTableName.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1AE873CF8()
{
  return sub_1AE873D18();
}

uint64_t sub_1AE873D08()
{
  return sub_1AE873D18();
}

uint64_t sub_1AE873D18()
{
  uint64_t v0;

  v0 = sub_1AE925374();
  sub_1AE876258(v0);
  sub_1AE876264();
  sub_1AE8744EC();
  return sub_1AE92538C();
}

uint64_t sub_1AE873D80()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_1AE501548(&qword_1ED30D8A0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE501548((uint64_t *)&unk_1EEDA4A78);
  sub_1AE595770(v3, qword_1EEDA4A40);
  sub_1AE4FB608(v3, (uint64_t)qword_1EEDA4A40);
  type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
  sub_1AE501548(&qword_1ED30EDF8);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AE934250;
  if (qword_1EED998D8 != -1)
    swift_once();
  v5 = sub_1AE925374();
  v6 = sub_1AE4FB608(v5, (uint64_t)&unk_1EEE12018);
  v7 = MEMORY[0x1E0D24648];
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = v7;
  v8 = sub_1AE52F6A8((uint64_t *)(v4 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v8, v6, v5);
  sub_1AE9249FC();
  v9 = sub_1AE9249F0();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 0, 1, v9);
  sub_1AE86FDB4();
  sub_1AE58FEAC(&qword_1ED30EE30, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Interaction);
  sub_1AE924B04();
  return sub_1AE876110((uint64_t)v2);
}

uint64_t static ViewService.SiriRemembersView.InteractionEntity.interaction.getter()
{
  return sub_1AE58B12C();
}

uint64_t sub_1AE873F6C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_1AE501548(&qword_1ED30D8A0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1AE501548((uint64_t *)&unk_1ED30DA10);
  sub_1AE595770(v3, qword_1ED30D8A8);
  sub_1AE4FB608(v3, (uint64_t)qword_1ED30D8A8);
  type metadata accessor for ViewService.SiriRemembersView.Entity(0);
  sub_1AE501548(&qword_1ED30EDF8);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AE934250;
  if (qword_1ED30DA20 != -1)
    swift_once();
  v5 = sub_1AE925374();
  v6 = sub_1AE4FB608(v5, (uint64_t)&unk_1ED327490);
  v7 = MEMORY[0x1E0D24648];
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = v7;
  v8 = sub_1AE52F6A8((uint64_t *)(v4 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v8, v6, v5);
  sub_1AE9249FC();
  v9 = sub_1AE9249F0();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v2, 0, 1, v9);
  sub_1AE86FDB4();
  sub_1AE58FEAC(&qword_1ED310240, (void (*)(uint64_t))type metadata accessor for ViewService.SiriRemembersView.Entity);
  sub_1AE924B04();
  return sub_1AE876110((uint64_t)v2);
}

uint64_t static ViewService.SiriRemembersView.InteractionEntity.entity.getter()
{
  return sub_1AE58B12C();
}

uint64_t ViewService.SiriRemembersView.InteractionEntity.interactionRowid.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ViewService.SiriRemembersView.InteractionEntity.entityRowid.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void ViewService.SiriRemembersView.InteractionEntity.parameter.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

uint64_t ViewService.SiriRemembersView.InteractionEntity.init(interactionRowid:entityRowid:parameter:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_1AE874194(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v7;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001AE97BE80 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x6F52797469746E65 && a2 == 0xEB00000000646977;
    if (v5 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6574656D61726170 && a2 == 0xE900000000000072)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AE874300(char a1)
{
  if (!a1)
    return 0xD000000000000010;
  if (a1 == 1)
    return 0x6F52797469746E65;
  return 0x6574656D61726170;
}

uint64_t sub_1AE874368()
{
  char *v0;

  return sub_1AE874300(*v0);
}

uint64_t sub_1AE874370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE874194(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE874394()
{
  sub_1AE8744EC();
  return sub_1AE926F94();
}

uint64_t sub_1AE8743BC()
{
  sub_1AE8744EC();
  return sub_1AE926FA0();
}

void ViewService.SiriRemembersView.InteractionEntity.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE4F67EC();
  v3 = v2;
  v4 = sub_1AE501548((uint64_t *)&unk_1EED947C8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE8744EC();
  sub_1AE926F4C();
  sub_1AE595A10();
  if (!v0)
  {
    sub_1AE595A10();
    sub_1AE4FB9C4();
  }
  sub_1AE4FDC10(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_1AE4F667C();
}

unint64_t sub_1AE8744EC()
{
  unint64_t result;

  result = qword_1ED30EEF0;
  if (!qword_1ED30EEF0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9663F8, &_s17SiriRemembersViewV17InteractionEntityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED30EEF0);
  }
  return result;
}

void ViewService.SiriRemembersView.InteractionEntity.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  v5 = sub_1AE501548((uint64_t *)&unk_1EEDA4A88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  v9 = v8 - v7;
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE8744EC();
  sub_1AE926F34();
  if (!v0)
  {
    v10 = sub_1AE876214();
    v11 = sub_1AE876214();
    v12 = sub_1AE926BB0();
    v13 = v9;
    v15 = v14;
    sub_1AE4FBA8C(v13, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *v4 = v10;
    v4[1] = v11;
    v4[2] = v12;
    v4[3] = v15;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  sub_1AE4F667C();
}

unint64_t sub_1AE874660()
{
  unint64_t result;

  result = qword_1ED30EED0;
  if (!qword_1ED30EED0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SiriRemembersView.SourceStreams, &type metadata for ViewService.SiriRemembersView.SourceStreams);
    atomic_store(result, (unint64_t *)&qword_1ED30EED0);
  }
  return result;
}

unint64_t sub_1AE8746A0()
{
  unint64_t result;

  result = qword_1ED30EED8;
  if (!qword_1ED30EED8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SiriRemembersView.SourceStreams, &type metadata for ViewService.SiriRemembersView.SourceStreams);
    atomic_store(result, (unint64_t *)&qword_1ED30EED8);
  }
  return result;
}

void sub_1AE8746DC()
{
  ViewService.SiriRemembersView.InteractionEntity.init(from:)();
}

void sub_1AE8746F0()
{
  ViewService.SiriRemembersView.InteractionEntity.encode(to:)();
}

unint64_t sub_1AE874704()
{
  static ViewService.SiriRemembersView.InteractionEntity.databaseTableName.getter();
  return 0xD000000000000013;
}

uint64_t sub_1AE874720()
{
  sub_1AE87605C();
  return sub_1AE924DA4();
}

uint64_t *_s17SiriRemembersViewVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AE924780();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t _s17SiriRemembersViewVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_unknownObjectRelease();
}

uint64_t _s17SiriRemembersViewVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_unknownObjectRetain();
  return a1;
}

uint64_t _s17SiriRemembersViewVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t _s17SiriRemembersViewVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s17SiriRemembersViewVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_unknownObjectRelease();
  return a1;
}

uint64_t _s17SiriRemembersViewVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AE8749D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AE4FD9B0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_1AE500AB0(a1, a2, v6);
  }
  else
  {
    sub_1AE595D30(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
    sub_1AE4F6624();
  }
}

uint64_t _s17SiriRemembersViewVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AE874A3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1AE4FD9B0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_1AE4F66D4(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    sub_1AE4F6624();
  }
}

uint64_t sub_1AE874A9C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AE924780();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ViewService.SiriRemembersView.SiriRemembersViewError()
{
  sub_1AE4F67D4();
}

void type metadata accessor for ViewService.SiriRemembersView.SourceStreams()
{
  sub_1AE4F67D4();
}

_QWORD *_s17SiriRemembersViewV11InteractionVwCP(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v9 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v9;
    v10 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v10;
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v11 = *(uint64_t *)((char *)a2 + 84);
    *(_DWORD *)(a1 + 92) = *((_DWORD *)a2 + 23);
    v12 = a3[13];
    v28 = a1 + v12;
    v13 = (uint64_t)a2 + v12;
    *(_QWORD *)(a1 + 84) = v11;
    v14 = sub_1AE9248DC();
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v28, v13, v14);
    v16 = a3[15];
    *(_QWORD *)((char *)v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    v17 = (_QWORD *)((char *)v4 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = a3[17];
    *(_QWORD *)((char *)v4 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    *(_QWORD *)((char *)v4 + v20) = *(uint64_t *)((char *)a2 + v20);
    v21 = a3[19];
    *((_BYTE *)v4 + a3[18]) = *((_BYTE *)a2 + a3[18]);
    *(_DWORD *)((char *)v4 + v21) = *(_DWORD *)((char *)a2 + v21);
    v22 = a3[21];
    *(_DWORD *)((char *)v4 + a3[20]) = *(_DWORD *)((char *)a2 + a3[20]);
    v23 = (_QWORD *)((char *)v4 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s17SiriRemembersViewV11InteractionVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 52);
  v5 = sub_1AE9248DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s17SiriRemembersViewV11InteractionVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  v11 = a3[13];
  v26 = a1 + v11;
  v12 = a2 + v11;
  *(_QWORD *)(a1 + 84) = v10;
  v13 = sub_1AE9248DC();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v26, v12, v13);
  v15 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  v20 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_DWORD *)(a1 + v20) = *(_DWORD *)(a2 + v20);
  v21 = a3[21];
  *(_DWORD *)(a1 + a3[20]) = *(_DWORD *)(a2 + a3[20]);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17SiriRemembersViewV11InteractionVwca(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  *(_DWORD *)(a1 + 84) = *((_DWORD *)a2 + 21);
  *(_DWORD *)(a1 + 88) = *((_DWORD *)a2 + 22);
  *(_DWORD *)(a1 + 92) = *((_DWORD *)a2 + 23);
  v7 = a3[13];
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_1AE9248DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
  v11 = a3[15];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)((char *)a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
  *(_QWORD *)(a1 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
  *(_BYTE *)(a1 + a3[18]) = *((_BYTE *)a2 + a3[18]);
  *(_DWORD *)(a1 + a3[19]) = *(_DWORD *)((char *)a2 + a3[19]);
  *(_DWORD *)(a1 + a3[20]) = *(_DWORD *)((char *)a2 + a3[20]);
  v14 = a3[21];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17SiriRemembersViewV11InteractionVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  v9 = a3[13];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)(a1 + 84) = v8;
  v12 = sub_1AE9248DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_DWORD *)(a1 + v15) = *(_DWORD *)(a2 + v15);
  v16 = a3[21];
  *(_DWORD *)(a1 + a3[20]) = *(_DWORD *)(a2 + a3[20]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  return a1;
}

uint64_t _s17SiriRemembersViewV11InteractionVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 84) = *(_QWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  v10 = a3[13];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1AE9248DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  v19 = a3[17];
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  v20 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_DWORD *)(a1 + v20) = *(_DWORD *)(a2 + v20);
  v21 = a3[21];
  *(_DWORD *)(a1 + a3[20]) = *(_DWORD *)(a2 + a3[20]);
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17SiriRemembersViewV11InteractionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AE875270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_1AE595D30(*(_QWORD *)(a1 + 24));
    sub_1AE4F6624();
  }
  else
  {
    v6 = sub_1AE4F675C();
    sub_1AE500AB0(a1 + *(int *)(a3 + 52), a2, v6);
  }
}

uint64_t _s17SiriRemembersViewV11InteractionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AE8752D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE736928();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_1AE4F6624();
  }
  else
  {
    v4 = v2;
    v5 = sub_1AE4F675C();
    sub_1AE4F66D4(v1 + *(int *)(v4 + 52), v0, v0, v5);
  }
}

uint64_t sub_1AE87531C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AE9248DC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ViewService.SiriRemembersView.Interaction.Columns()
{
  sub_1AE4F67D4();
}

_QWORD *_s17SiriRemembersViewV6EntityVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v9 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v9;
    v10 = a2[9];
    v11 = *(int *)(a3 + 36);
    v17 = a1 + v11;
    v12 = (uint64_t)a2 + v11;
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v10;
    v13 = sub_1AE9248DC();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v17, v12, v13);
    v14((uint64_t)v4 + *(int *)(a3 + 40), (uint64_t)a2 + *(int *)(a3 + 40), v13);
  }
  return v4;
}

uint64_t _s17SiriRemembersViewV6EntityVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_1AE9248DC();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 40), v5);
}

uint64_t _s17SiriRemembersViewV6EntityVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v12 = sub_1AE9248DC();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v13(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v12);
  return a1;
}

uint64_t _s17SiriRemembersViewV6EntityVwca(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_1AE9248DC();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 40), (uint64_t)a2 + *(int *)(a3 + 40), v10);
  return a1;
}

uint64_t _s17SiriRemembersViewV6EntityVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = *(_OWORD *)(a2 + 64);
  v8 = *(int *)(a3 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v11 = sub_1AE9248DC();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v11);
  return a1;
}

uint64_t _s17SiriRemembersViewV6EntityVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 36);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1AE9248DC();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40);
  v14(v11, v12, v13);
  v14(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v13);
  return a1;
}

uint64_t _s17SiriRemembersViewV6EntityVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AE875918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_1AE595D30(*(_QWORD *)(a1 + 24));
    sub_1AE4F6624();
  }
  else
  {
    v6 = sub_1AE4F675C();
    sub_1AE500AB0(a1 + *(int *)(a3 + 36), a2, v6);
  }
}

uint64_t _s17SiriRemembersViewV6EntityVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AE875978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE736928();
  if (v3)
  {
    *(_QWORD *)(v1 + 24) = (v0 - 1);
    sub_1AE4F6624();
  }
  else
  {
    v4 = v2;
    v5 = sub_1AE4F675C();
    sub_1AE4F66D4(v1 + *(int *)(v4 + 36), v0, v0, v5);
  }
}

uint64_t sub_1AE8759C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AE9248DC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ViewService.SiriRemembersView.Entity.Columns()
{
  sub_1AE4F67D4();
}

uint64_t _s17SiriRemembersViewV17InteractionEntityVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s17SiriRemembersViewV17InteractionEntityVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s17SiriRemembersViewV17InteractionEntityVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17SiriRemembersViewV17InteractionEntityVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for ViewService.SiriRemembersView.InteractionEntity()
{
  sub_1AE4F67D4();
}

void type metadata accessor for ViewService.SiriRemembersView.InteractionEntity.Columns()
{
  sub_1AE4F67D4();
}

uint64_t _s17SiriRemembersViewV17InteractionEntityV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE875B7C + 4 * byte_1AE96599E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE875BB0 + 4 * byte_1AE965999[v4]))();
}

uint64_t sub_1AE875BB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE875BB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE875BC0);
  return result;
}

uint64_t sub_1AE875BCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE875BD4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE875BD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE875BE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17SiriRemembersViewV17InteractionEntityV10CodingKeysOMa()
{
  return &_s17SiriRemembersViewV17InteractionEntityV10CodingKeysON;
}

uint64_t _s17SiriRemembersViewV6EntityV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1AE875C48 + 4 * byte_1AE9659A8[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1AE875C7C + 4 * byte_1AE9659A3[v4]))();
}

uint64_t sub_1AE875C7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE875C84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE875C8CLL);
  return result;
}

uint64_t sub_1AE875C98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE875CA0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1AE875CA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE875CAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17SiriRemembersViewV6EntityV10CodingKeysOMa()
{
  return &_s17SiriRemembersViewV6EntityV10CodingKeysON;
}

uint64_t _s17SiriRemembersViewV11InteractionV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEF)
  {
    if (a2 + 17 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 17) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 18;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v5 = v6 - 18;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s17SiriRemembersViewV11InteractionV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1AE875D9C + 4 * byte_1AE9659B2[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1AE875DD0 + 4 * byte_1AE9659AD[v4]))();
}

uint64_t sub_1AE875DD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE875DD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE875DE0);
  return result;
}

uint64_t sub_1AE875DEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE875DF4);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1AE875DF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE875E00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17SiriRemembersViewV11InteractionV10CodingKeysOMa()
{
  return &_s17SiriRemembersViewV11InteractionV10CodingKeysON;
}

unint64_t sub_1AE875E20()
{
  unint64_t result;

  result = qword_1EEDA4A98;
  if (!qword_1EEDA4A98)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966260, &_s17SiriRemembersViewV11InteractionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA4A98);
  }
  return result;
}

unint64_t sub_1AE875E60()
{
  unint64_t result;

  result = qword_1EEDA4AA0;
  if (!qword_1EEDA4AA0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966318, &_s17SiriRemembersViewV6EntityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA4AA0);
  }
  return result;
}

unint64_t sub_1AE875EA0()
{
  unint64_t result;

  result = qword_1EEDA4AA8;
  if (!qword_1EEDA4AA8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9663D0, &_s17SiriRemembersViewV17InteractionEntityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA4AA8);
  }
  return result;
}

unint64_t sub_1AE875EE0()
{
  unint64_t result;

  result = qword_1ED30EDF0;
  if (!qword_1ED30EDF0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966340, &_s17SiriRemembersViewV17InteractionEntityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED30EDF0);
  }
  return result;
}

unint64_t sub_1AE875F20()
{
  unint64_t result;

  result = qword_1ED30EEF8;
  if (!qword_1ED30EEF8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966368, &_s17SiriRemembersViewV17InteractionEntityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED30EEF8);
  }
  return result;
}

unint64_t sub_1AE875F60()
{
  unint64_t result;

  result = qword_1ED30EB80;
  if (!qword_1ED30EB80)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966288, &_s17SiriRemembersViewV6EntityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED30EB80);
  }
  return result;
}

unint64_t sub_1AE875FA0()
{
  unint64_t result;

  result = qword_1ED30EB78;
  if (!qword_1ED30EB78)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9662B0, &_s17SiriRemembersViewV6EntityV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED30EB78);
  }
  return result;
}

unint64_t sub_1AE875FE0()
{
  unint64_t result;

  result = qword_1ED30EDC0;
  if (!qword_1ED30EDC0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9661D0, &_s17SiriRemembersViewV11InteractionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED30EDC0);
  }
  return result;
}

unint64_t sub_1AE876020()
{
  unint64_t result;

  result = qword_1ED30EE98;
  if (!qword_1ED30EE98)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9661F8, &_s17SiriRemembersViewV11InteractionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED30EE98);
  }
  return result;
}

unint64_t sub_1AE87605C()
{
  unint64_t result;

  result = qword_1EEDA4AB0;
  if (!qword_1EEDA4AB0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SiriRemembersView.InteractionEntity, &type metadata for ViewService.SiriRemembersView.InteractionEntity);
    atomic_store(result, (unint64_t *)&qword_1EEDA4AB0);
  }
  return result;
}

unint64_t sub_1AE876098()
{
  unint64_t result;

  result = qword_1EEDA4AB8;
  if (!qword_1EEDA4AB8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SiriRemembersView.SourceStreams, &type metadata for ViewService.SiriRemembersView.SourceStreams);
    atomic_store(result, (unint64_t *)&qword_1EEDA4AB8);
  }
  return result;
}

unint64_t sub_1AE8760D4()
{
  unint64_t result;

  result = qword_1ED30EEE0;
  if (!qword_1ED30EEE0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SiriRemembersView.SourceStreams, &type metadata for ViewService.SiriRemembersView.SourceStreams);
    atomic_store(result, (unint64_t *)&qword_1ED30EEE0);
  }
  return result;
}

uint64_t sub_1AE876110(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1ED30D8A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AE876168()
{
  return type metadata accessor for ViewService.SiriRemembersView.Interaction(0);
}

uint64_t sub_1AE876184@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_1AE87619C()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE8761B4()
{
  return 0x656D655269726973;
}

uint64_t sub_1AE8761D8()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE876204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 128));
}

uint64_t sub_1AE876214()
{
  return sub_1AE926C04();
}

uint64_t sub_1AE876224@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = a1;
  return 0;
}

uint64_t *sub_1AE876258(uint64_t a1)
{
  uint64_t *v1;

  return sub_1AE595770(a1, v1);
}

uint64_t sub_1AE876264()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE4FB608(v1, v0);
}

void sub_1AE876270(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[11];
  uint64_t v32;

  v3 = a1;
  v23 = *(_QWORD *)(a1 + 16);
  if (v23)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 56);
    v6 = MEMORY[0x1E0DEE9D8];
    while (v4 < *(_QWORD *)(v3 + 16))
    {
      v7 = v6;
      v8 = *(v5 - 2);
      v9 = *(v5 - 1);
      v10 = v5[1];
      v12 = v5[2];
      v11 = v5[3];
      v14 = v5[4];
      v13 = v5[5];
      v15 = v5[6];
      v16 = v5[7];
      v27 = *v5;
      v28 = *(v5 - 3);
      v31[0] = v28;
      v31[1] = v8;
      v31[2] = v9;
      v31[3] = v27;
      v31[4] = v10;
      v31[5] = v12;
      v31[6] = v11;
      v26 = v11;
      v31[7] = v14;
      v31[8] = v13;
      v31[9] = v15;
      v31[10] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = sub_1AE877718(v31, a2, a3);
      if (v30)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      v6 = v7;
      if ((v17 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v32 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1AE521774();
          v6 = v32;
        }
        v19 = *(_QWORD *)(v6 + 16);
        v20 = v19 + 1;
        if (v19 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          sub_1AE521774();
          v20 = v19 + 1;
          v6 = v32;
        }
        *(_QWORD *)(v6 + 16) = v20;
        v21 = (_QWORD *)(v6 + 88 * v19);
        v21[4] = v28;
        v21[5] = v8;
        v21[6] = v9;
        v21[7] = v27;
        v21[8] = v29;
        v21[9] = v12;
        v21[10] = v26;
        v21[11] = v14;
        v21[12] = v13;
        v21[13] = v15;
        v21[14] = v16;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      ++v4;
      v5 += 11;
      v3 = a1;
      if (v23 == v4)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1AE8764EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8[2];

  v4 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AE7AA52C();
    v4 = v7;
  }
  v5 = *(_QWORD *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v5;
  swift_retain();
  sub_1AE877C70(v8, a2);
  *a1 = v4;
  return swift_release_n();
}

void sub_1AE876588()
{
  sub_1AE503D00();
  __break(1u);
}

void sub_1AE8765C8()
{
  sub_1AE503D00();
  __break(1u);
}

uint64_t sub_1AE876608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  (*(void (**)(void))(*(_QWORD *)v0 + 232))();
  sub_1AE5078E0();
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = &unk_1E5DB0040;
  *(_OWORD *)(v0 + 40) = xmmword_1AE934390;
  *(_OWORD *)(v0 + 56) = xmmword_1AE9664F0;
  *(_QWORD *)(v0 + 72) = 0x80000001AE989C80;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  sub_1AE5158B8(v3, v4);
  return v0;
}

uint64_t sub_1AE8766B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v6 = (_QWORD *)(a2 + 32);
  sub_1AE4FB9BC();
  if (*(_QWORD *)(a2 + 32))
  {
    v7 = sub_1AE4F96E8(115);
    sub_1AE4FD75C();
    if (v7)
    {
      sub_1AE4FB9BC();
      v8 = *(_QWORD *)(v7 + 24);
      if (v8)
      {
        v9 = *(_QWORD *)(v8 + 16);
        v10 = *(_QWORD *)(v8 + 24);
        v11 = qword_1ED30FB60;
        swift_retain();
        sub_1AE4FB764();
        if (v11 != -1)
          swift_once();
        v12 = qword_1ED3274B8;
        if (*(_QWORD *)(qword_1ED3274B8 + 16))
        {
          sub_1AE4FB764();
          v13 = sub_1AE536EDC(v9, v10);
          if ((v14 & 1) != 0)
          {
            sub_1AE57C238(*(_QWORD *)(v12 + 56) + 40 * v13, (uint64_t)&v25);
          }
          else
          {
            v27 = 0;
            v25 = 0u;
            v26 = 0u;
          }
          sub_1AE4F6710();
        }
        else
        {
          v27 = 0;
          v25 = 0u;
          v26 = 0u;
        }
        sub_1AE4F6710();
        if (*((_QWORD *)&v26 + 1))
        {
          sub_1AE50AF58(&v25, (uint64_t)v28);
          v15 = v29;
          v16 = v30;
          sub_1AE4F9858(v28, v29);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 32))(a1, v8, v15, v16);
          sub_1AE507978();
          swift_release();
          return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v28);
        }
        sub_1AE507978();
        swift_release();
        sub_1AE582F80((uint64_t)&v25);
      }
      else
      {
        sub_1AE507978();
      }
    }
  }
  else
  {
    sub_1AE4FD75C();
  }
  sub_1AE4FB9BC();
  if (!*v6)
  {
    result = sub_1AE4FD75C();
    goto LABEL_26;
  }
  v18 = sub_1AE4F96E8(112);
  result = sub_1AE4FD75C();
  if (v18)
  {
    sub_1AE4FB9BC();
    if (*v6)
    {
      v19 = sub_1AE4FCCB0();
      sub_1AE4FD75C();
      if (v19)
      {
        sub_1AE4FB9BC();
        v20 = *(_QWORD *)(v18 + 16);
        sub_1AE4F6804();
        sub_1AE4FC564();
        v21 = *(_QWORD *)(v20 + 16);
        sub_1AE4F67AC();
        if (v21)
        {
          result = sub_1AE4F682C();
LABEL_29:
          v22 = 6;
          goto LABEL_27;
        }
        sub_1AE4FB9BC();
        v23 = *(_QWORD *)(v19 + 16);
        swift_bridgeObjectRetain();
        sub_1AE4F682C();
        v24 = *(_QWORD *)(v23 + 16);
        result = swift_bridgeObjectRelease();
        if (v24)
          goto LABEL_29;
        goto LABEL_26;
      }
    }
    else
    {
      sub_1AE4FD75C();
    }
    result = sub_1AE4FC564();
  }
LABEL_26:
  v22 = 2;
LABEL_27:
  *a3 = v22;
  return result;
}

uint64_t sub_1AE876944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  char v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t result;

  if (((1 << *(_BYTE *)(a6 + 64)) & 0x1FA) == 0)
  {
LABEL_26:
    result = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 88) = xmmword_1AE934380;
    *(_BYTE *)(a1 + 104) = 0;
    return result;
  }
  v8 = (_QWORD *)(a6 + 32);
  sub_1AE4FB9BC();
  if (*(_QWORD *)(a6 + 32))
  {
    v9 = sub_1AE4F96E8(115);
    sub_1AE50928C();
    if (v9)
    {
      sub_1AE4FB9BC();
      v10 = *(_QWORD *)(v9 + 16);
      sub_1AE4F6804();
      sub_1AE4F682C();
      v9 = sub_1AE898358(v10);
    }
  }
  else
  {
    sub_1AE50928C();
    v9 = 0;
  }
  sub_1AE4FB9BC();
  if (!*v8)
  {
    sub_1AE508078();
LABEL_13:
    v11 = 0;
    goto LABEL_14;
  }
  v11 = sub_1AE4F96E8(112);
  if (!v11)
  {
    sub_1AE508078();
    goto LABEL_14;
  }
  sub_1AE508078();
  sub_1AE4FB9BC();
  v12 = *(_QWORD *)(v11 + 16);
  sub_1AE4FB930();
  swift_release();
  if (!*(_QWORD *)(v12 + 16))
  {
    sub_1AE4F66E8();
    goto LABEL_13;
  }
  v11 = sub_1AE898358(v12);
LABEL_14:
  sub_1AE4FB9BC();
  if (*v8 && (v13 = sub_1AE4FCCB0()) != 0)
  {
    v14 = v13;
    swift_endAccess();
    sub_1AE4FB9BC();
    v15 = *(_QWORD *)(v14 + 16);
    sub_1AE4FB930();
    sub_1AE4FC564();
    if (*(_QWORD *)(v15 + 16))
    {
      v16 = sub_1AE898358(v15);
      goto LABEL_20;
    }
    sub_1AE4F66E8();
  }
  else
  {
    swift_endAccess();
  }
  v16 = 0;
LABEL_20:
  sub_1AE501548((uint64_t *)&unk_1EED94CD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE93D190;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v11;
  *(_QWORD *)(inited + 48) = v16;
  v18 = sub_1AE89DEDC(inited);
  swift_setDeallocating();
  sub_1AE4FB930();
  sub_1AE4F6708();
  sub_1AE4F6804();
  sub_1AE85EB44();
  if ((v18 & 1) != 0)
  {
    sub_1AE4F66E8();
    sub_1AE4F76D8();
    sub_1AE4F67AC();
    if (qword_1ED3193F0 != -1)
      swift_once();
    v19 = sub_1AE925B6C();
    sub_1AE4FB608(v19, (uint64_t)qword_1ED3193D8);
    v20 = sub_1AE925B54();
    v21 = sub_1AE9265EC();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1AE4F2000, v20, v21, "Sort operator must have subject and predicate args", v22, 2u);
      MEMORY[0x1AF454C78](v22, -1, -1);
    }

    goto LABEL_26;
  }
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = v11;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = v16;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 80) = 0;
  result = 1;
  *(_BYTE *)(a1 + 104) = 32;
  return result;
}

void sub_1AE876C5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t (*v62)(void);
  uint64_t v63;
  double v64;
  char v65;
  char v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __int128 v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;

  v2 = v1;
  v4 = (_QWORD *)sub_1AE88163C();
  v5 = (_QWORD *)sub_1AE88163C();
  sub_1AE4F6804();
  swift_bridgeObjectRetain();
  v6 = sub_1AE4F6730();
  v121 = v4;
  sub_1AE876270(v6, v4, v5);
  v8 = v7;
  v9 = *(_QWORD *)(v7 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  v119 = v1;
  if (v9)
  {
    v116 = a1;
    sub_1AE4FB75C();
    v11 = (uint64_t *)(v8 + 56);
    v12 = MEMORY[0x1E0DEE9D8];
    v13 = 0.0;
    do
    {
      v136 = v9;
      v14 = *(v11 - 2);
      v15 = *(v11 - 1);
      v16 = *v11;
      v17 = v11[1];
      v18 = v11[6];
      v19 = v11[7];
      v139 = *(v11 - 3);
      v140 = v14;
      v141 = v15;
      v142 = v16;
      v143 = v17;
      v144 = *((_OWORD *)v11 + 1);
      v145 = *((_OWORD *)v11 + 2);
      v146 = v18;
      v147 = v19;
      sub_1AE4F6A24();
      sub_1AE4F6A24();
      sub_1AE4F6A24();
      sub_1AE4F6A24();
      sub_1AE4F6A24();
      sub_1AE4F6A24();
      sub_1AE877940(v121, v5, v13, 0.0);
      v13 = v20;
      swift_bridgeObjectRelease();
      sub_1AE4F81B8();
      sub_1AE4F76D8();
      sub_1AE4F6648();
      sub_1AE4F66E8();
      sub_1AE4F67AC();
      v21 = v139;
      v22 = v141;
      v23 = v142;
      v24 = v144;
      v130 = *((_QWORD *)&v145 + 1);
      v133 = v145;
      if ((sub_1AE4F77E0() & 1) == 0)
      {
        sub_1AE519F94();
        v12 = v28;
      }
      v25 = *(_QWORD *)(v12 + 16);
      v26 = v12;
      if (v25 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_1AE519F94();
        v26 = v29;
      }
      *(_QWORD *)(v26 + 16) = v25 + 1;
      v12 = v26;
      v27 = v26 + 88 * v25;
      *(_QWORD *)(v27 + 32) = v21;
      *(_QWORD *)(v27 + 40) = v14;
      *(_QWORD *)(v27 + 48) = v22;
      *(_QWORD *)(v27 + 56) = v23;
      *(_QWORD *)(v27 + 64) = v17;
      *(_OWORD *)(v27 + 72) = v24;
      *(_QWORD *)(v27 + 88) = v133;
      *(_QWORD *)(v27 + 96) = v130;
      *(_QWORD *)(v27 + 104) = v18;
      *(_QWORD *)(v27 + 112) = v19;
      v11 += 11;
      v9 = v136 - 1;
    }
    while (v136 != 1);
    sub_1AE4F6648();
    a1 = v116;
    v2 = v119;
    v10 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v13 = 0.0;
    v12 = MEMORY[0x1E0DEE9D8];
  }
  v115 = v12;
  sub_1AE4F6648();
  v30 = v121[2];
  swift_bridgeObjectRelease();
  if (v30)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v31 = v5[2];
    swift_bridgeObjectRelease();
    if (!v31)
    {
      v32 = sub_1AE88163C();
      v33 = *(_QWORD *)(v32 + 16);
      if (v33)
      {
        v117 = a1;
        sub_1AE521774();
        v34 = v10;
        v35 = (uint64_t *)(v32 + 40);
        while (_Records_GDEntityPredicate_records)
        {
          if (*((uint64_t *)_Records_GDEntityPredicate_records + 1) >= 2674)
            goto LABEL_72;
          if (*((uint64_t *)_Records_GDEntityPredicate_records + 2) >= 3558)
            goto LABEL_73;
          v137 = v33;
          if (!_Records_GDEntityPredicate_predicateIds)
            goto LABEL_76;
          v37 = *(v35 - 1);
          v36 = *v35;
          sub_1AE4F6A24();
          v38 = sub_1AE925F8C();
          if (!_Records_GDEntityPredicate_labels)
            goto LABEL_75;
          v40 = v38;
          v41 = v39;
          sub_1AE925F8C();
          swift_bridgeObjectRelease();
          v139 = v37;
          v140 = v36;
          sub_1AE4F6A24();
          sub_1AE878F70();
          sub_1AE4F6730();
          sub_1AE925F74();
          sub_1AE4F81B8();
          sub_1AE4F6730();
          sub_1AE878F70();
          sub_1AE4F81B8();
          sub_1AE4F6730();
          sub_1AE925F74();
          sub_1AE4F81B8();
          v141 = 0;
          v142 = v37;
          v143 = v36;
          *(_QWORD *)&v144 = 0;
          *((_QWORD *)&v144 + 1) = v40;
          *(_QWORD *)&v145 = v41;
          *((_QWORD *)&v145 + 1) = v37;
          v146 = v36;
          v147 = MEMORY[0x1E0DEE9D8];
          sub_1AE877940(MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8], v13, 0.0);
          v13 = v42;
          sub_1AE4F6648();
          v43 = v37;
          v44 = v144;
          v45 = v145;
          v46 = *(_QWORD *)(v34 + 16);
          v47 = v147;
          if (v46 >= *(_QWORD *)(v34 + 24) >> 1)
          {
            sub_1AE521774();
            v43 = v139;
            v45 = v145;
            v44 = v144;
          }
          v35 += 2;
          *(_QWORD *)(v34 + 16) = v46 + 1;
          v48 = v34 + 88 * v46;
          *(_QWORD *)(v48 + 32) = v43;
          *(_QWORD *)(v48 + 40) = v36;
          *(_QWORD *)(v48 + 48) = 0;
          *(_QWORD *)(v48 + 56) = v37;
          *(_QWORD *)(v48 + 64) = v36;
          *(_OWORD *)(v48 + 72) = v44;
          *(_OWORD *)(v48 + 88) = v45;
          *(_QWORD *)(v48 + 104) = v36;
          *(_QWORD *)(v48 + 112) = v47;
          v33 = v137 - 1;
          v2 = v119;
          if (v137 == 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v115 = v34;
            v10 = MEMORY[0x1E0DEE9D8];
            a1 = v117;
            goto LABEL_25;
          }
        }
        goto LABEL_74;
      }
      swift_bridgeObjectRelease();
      sub_1AE4F6648();
      v115 = MEMORY[0x1E0DEE9D8];
    }
  }
LABEL_25:
  if (*(_QWORD *)(a1 + 8))
  {
    v112 = *(_QWORD *)(a1 + 8);
  }
  else
  {
    type metadata accessor for ResultGraph();
    v49 = swift_allocObject();
    *(_QWORD *)(v49 + 16) = sub_1AE925C98();
    *(_QWORD *)(v49 + 24) = v10;
    v112 = v49;
  }
  v50 = v115;
  v51 = *(_QWORD *)(v115 + 16);
  if (v51)
  {
    v139 = v10;
    sub_1AE4F66E0();
    swift_retain();
    sub_1AE4F6708();
    sub_1AE52154C();
    v52 = v10;
    v53 = (uint64_t *)(v115 + 64);
    do
    {
      v55 = *(v53 - 1);
      v54 = *v53;
      v139 = v52;
      v57 = *(_QWORD *)(v52 + 16);
      v56 = *(_QWORD *)(v52 + 24);
      sub_1AE4F6730();
      if (v57 >= v56 >> 1)
      {
        sub_1AE52154C();
        v52 = v139;
      }
      *(_QWORD *)(v52 + 16) = v57 + 1;
      v58 = v52 + 16 * v57;
      *(_QWORD *)(v58 + 32) = v55;
      *(_QWORD *)(v58 + 40) = v54;
      v53 += 11;
      --v51;
    }
    while (v51);
    v50 = v115;
    sub_1AE4F76D8();
  }
  else
  {
    sub_1AE4F66E0();
    swift_retain();
    v52 = MEMORY[0x1E0DEE9D8];
  }
  v120 = sub_1AE898358(v52);
  v59 = *(_QWORD *)(v50 + 16);
  v60 = v50;
  if (v59)
  {
    v61 = 0;
    v62 = *(uint64_t (**)(void))(*(_QWORD *)v2 + 224);
    v63 = 48;
    while (v61 < *(_QWORD *)(v60 + 16))
    {
      v64 = *(double *)(v60 + v63);
      v65 = v62();
      v66 = sub_1AE4F77E0();
      if ((v65 & 1) != 0)
      {
        if ((v66 & 1) == 0)
        {
          sub_1AE7AA53C();
          v60 = v68;
        }
        if (v61 >= *(_QWORD *)(v60 + 16))
          goto LABEL_70;
        v67 = v64 - v13;
      }
      else
      {
        if ((v66 & 1) == 0)
        {
          sub_1AE7AA53C();
          v60 = v69;
        }
        if (v61 >= *(_QWORD *)(v60 + 16))
          goto LABEL_71;
        v67 = 1.0 / (v64 - v13 + 1.0);
      }
      ++v61;
      *(double *)(v60 + v63) = v67;
      v63 += 88;
      if (v59 == v61)
        goto LABEL_48;
    }
    __break(1u);
  }
  else
  {
LABEL_48:
    v70 = sub_1AE85E1E0();
    v71 = *(_QWORD *)(v70 + 16);
    v72 = MEMORY[0x1E0DEE9D8];
    if (!v71)
    {
LABEL_60:
      swift_bridgeObjectRelease();
      v97 = *(_QWORD *)(v72 + 16);
      if (v97)
      {
        v139 = MEMORY[0x1E0DEE9D8];
        v114 = v72;
        sub_1AE521774();
        v98 = v139;
        v99 = (uint64_t *)(v114 + 56);
        do
        {
          v125 = *(v99 - 3);
          v100 = v99[1];
          v101 = v99[2];
          v132 = v99[3];
          v135 = *v99;
          v102 = v99[4];
          v127 = *(v99 - 2);
          v129 = v99[5];
          v103 = v99[6];
          v104 = v99[7];
          v105 = *(_QWORD *)(v98 + 16);
          v123 = *(_QWORD *)(v98 + 24);
          v139 = v98;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1AE4F67A4();
          sub_1AE4FB764();
          swift_bridgeObjectRetain();
          if (v105 >= v123 >> 1)
          {
            sub_1AE507360();
            v98 = v139;
          }
          *(_QWORD *)(v98 + 16) = v105 + 1;
          v106 = (_QWORD *)(v98 + 88 * v105);
          v106[4] = v125;
          v106[5] = v127;
          v106[6] = 0;
          v106[7] = v135;
          v106[8] = v100;
          v106[9] = v101;
          v106[10] = v132;
          v106[11] = v102;
          v106[12] = v129;
          v106[13] = v103;
          v106[14] = v104;
          v99 += 11;
          --v97;
        }
        while (v97);
        v107 = v98;
        swift_release();
      }
      else
      {
        sub_1AE4FC564();
        v107 = MEMORY[0x1E0DEE9D8];
      }
      sub_1AE85D50C();
      LOBYTE(v139) = 0;
      v108 = sub_1AE4F6730();
      sub_1AE85DA40(v108, &v139);
      sub_1AE4F81B8();
      LOBYTE(v139) = 0;
      sub_1AE85DA40(v107, &v139);
      sub_1AE4F6648();
      sub_1AE4FB9BC();
      sub_1AE4F66E0();
      sub_1AE8764EC((uint64_t *)(v112 + 24), v112);
      swift_endAccess();
      sub_1AE85E1E0();
      sub_1AE4F81B8();
      swift_bridgeObjectRelease();
      sub_1AE4FC564();
      return;
    }
    v73 = 0;
    v118 = *(_QWORD *)(v70 + 16);
    v74 = v71 - 1;
    v75 = v70 + 56;
    v131 = v70;
    v110 = v70 + 56;
    v111 = v74;
LABEL_50:
    v113 = v72;
    v76 = (uint64_t *)(v75 + 88 * v73);
    v77 = v73;
    while (v77 < *(_QWORD *)(v70 + 16))
    {
      v78 = *(v76 - 2);
      v122 = *(v76 - 3);
      v79 = *(v76 - 1);
      v80 = *v76;
      v81 = v76[1];
      v82 = v76[2];
      v83 = v76[4];
      v126 = v76[5];
      v128 = v76[3];
      v138 = v77 + 1;
      v124 = v77;
      v85 = v76[6];
      v84 = v76[7];
      sub_1AE4FB764();
      sub_1AE4F6804();
      sub_1AE4F67A4();
      sub_1AE4F6A24();
      v134 = v78;
      swift_bridgeObjectRetain();
      sub_1AE4FB75C();
      sub_1AE4FB930();
      sub_1AE551594(v80, v81, v120);
      LOBYTE(v78) = v86;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v78 & 1) == 0)
      {
        v109 = v81;
        v87 = v80;
        v73 = v138;
        v72 = v113;
        v139 = v113;
        if ((sub_1AE4F77E0() & 1) == 0)
        {
          sub_1AE507360();
          v72 = v139;
        }
        v88 = v87;
        v89 = v85;
        v91 = v84;
        v90 = v109;
        v93 = v126;
        v92 = v128;
        v94 = *(_QWORD *)(v72 + 16);
        v95 = v94 + 1;
        if (v94 >= *(_QWORD *)(v72 + 24) >> 1)
        {
          sub_1AE507360();
          v95 = v94 + 1;
          v91 = v84;
          v90 = v109;
          v93 = v126;
          v92 = v128;
          v89 = v85;
          v72 = v139;
        }
        *(_QWORD *)(v72 + 16) = v95;
        v96 = (_QWORD *)(v72 + 88 * v94);
        v96[4] = v122;
        v96[5] = v134;
        v96[6] = v79;
        v96[7] = v88;
        v96[8] = v90;
        v96[9] = v82;
        v96[10] = v92;
        v96[11] = v83;
        v96[12] = v93;
        v96[13] = v89;
        v96[14] = v91;
        v70 = v131;
        v75 = v110;
        if (v111 != v124)
          goto LABEL_50;
        goto LABEL_60;
      }
      sub_1AE4F67AC();
      sub_1AE4F6710();
      sub_1AE4F66E8();
      sub_1AE4F6648();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v76 += 11;
      v77 = v138;
      v70 = v131;
      if (v118 == v138)
      {
        v72 = v113;
        goto LABEL_60;
      }
    }
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
}

uint64_t sub_1AE877718(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t result;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  if (a1[7])
  {
    v4 = a1[6];
    v5 = a1[7];
  }
  else
  {
    v4 = 0;
    v5 = 0xE000000000000000;
  }
  v6 = a1[10];
  v7 = a2[2];
  if (!v7)
    goto LABEL_20;
  v8 = a2[4];
  v9 = a2[5];
  v10 = v8 == v4 && v9 == v5;
  if (v10 || (result = sub_1AE926D60(), (result & 1) != 0))
  {
LABEL_10:
    swift_bridgeObjectRetain();
    v12 = 1;
LABEL_46:
    swift_bridgeObjectRelease();
    return v12;
  }
  if (v7 == 1)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v17 = *(_QWORD *)(v6 + 16);
    if (!v17)
      return 0;
    v28 = v6 + 32;
    v18 = a3[2];
    swift_bridgeObjectRetain();
    v19 = 0;
    while (1)
    {
      v20 = *(_QWORD *)(v28 + 88 * v19 + 56);
      v21 = v20 ? *(_QWORD *)(v28 + 88 * v19 + 48) : 0;
      v22 = v20 ? *(_QWORD *)(v28 + 88 * v19 + 56) : 0xE000000000000000;
      if (v18)
      {
        v23 = a3[4] == v21 && a3[5] == v22;
        if (v23 || (result = sub_1AE926D60(), (result & 1) != 0))
        {
LABEL_45:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v12 = 1;
          goto LABEL_46;
        }
        if (v18 != 1)
          break;
      }
LABEL_43:
      ++v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v19 == v17)
      {
        v12 = 0;
        goto LABEL_46;
      }
    }
    v24 = a3 + 7;
    v25 = 1;
    while (1)
    {
      v26 = v25 + 1;
      if (__OFADD__(v25, 1))
        break;
      if (*(v24 - 1) == v21 && *v24 == v22)
        goto LABEL_45;
      result = sub_1AE926D60();
      if ((result & 1) != 0)
        goto LABEL_45;
      v24 += 2;
      ++v25;
      if (v26 == v18)
        goto LABEL_43;
    }
    __break(1u);
  }
  else
  {
    v13 = a2 + 7;
    v14 = 1;
    while (1)
    {
      v15 = v14 + 1;
      if (__OFADD__(v14, 1))
        break;
      if (*(v13 - 1) == v4 && *v13 == v5)
        goto LABEL_10;
      result = sub_1AE926D60();
      if ((result & 1) != 0)
        goto LABEL_10;
      v13 += 2;
      ++v14;
      if (v15 == v7)
        goto LABEL_20;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1AE877940(_QWORD *a1, _QWORD *a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v7 = a2[2];
  v8 = a1[2];
  if (v7)
  {
    if (!v8
      || (!*(_QWORD *)(v4 + 56)
        ? (v10 = 0, v11 = 0xE000000000000000)
        : (v10 = *(_QWORD *)(v4 + 48), v11 = *(_QWORD *)(v4 + 56)),
          v14 = sub_1AE56E69C(v10, v11, a1),
          sub_1AE4FB75C(),
          *(double *)&result = COERCE_DOUBLE(sub_1AE4F76D8()),
          (v14 & 1) != 0))
    {
      result = *(uint64_t *)(v4 + 80);
      v40 = *(_QWORD *)(result + 16);
      if (v40)
      {
        v36 = v4;
        v16 = result + 32;
        v17 = a2[4];
        v18 = a2[5];
        swift_bridgeObjectRetain_n();
        v19 = 0;
        v37 = a2 + 7;
        v38 = v18;
        while (1)
        {
          v20 = v16;
          v21 = (_QWORD *)(v16 + 88 * v19);
          v22 = v21[8];
          v41 = v21[9];
          v25 = v21 + 6;
          v23 = v21[6];
          v24 = v25[1];
          v26 = v24 ? v23 : 0;
          v27 = v24 ? v24 : 0xE000000000000000;
          if (v17 == v26 && v18 == v27)
            break;
          *(double *)&result = COERCE_DOUBLE(sub_1AE50A1B4());
          if ((result & 1) != 0)
            break;
          v39 = v22;
          if (v7 != 1)
          {
            v29 = v37;
            v30 = 1;
            while (1)
            {
              v31 = v30 + 1;
              if (__OFADD__(v30, 1))
                break;
              v32 = *(v29 - 1) == v26 && *v29 == v27;
              if (v32 || (*(double *)&result = COERCE_DOUBLE(sub_1AE50A1B4()), (result & 1) != 0))
              {
                v4 = v36;
                v22 = v39;
                goto LABEL_35;
              }
              v29 += 2;
              ++v30;
              if (v31 == v7)
                goto LABEL_32;
            }
            __break(1u);
            return result;
          }
LABEL_32:
          ++v19;
          sub_1AE4FB764();
          sub_1AE4F76D8();
          v18 = v38;
          v16 = v20;
          if (v19 == v40)
          {
            *(double *)&result = COERCE_DOUBLE(swift_bridgeObjectRelease_n());
            v4 = v36;
            goto LABEL_42;
          }
        }
        v4 = v36;
LABEL_35:
        v33 = v41;
        sub_1AE4F6730();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        sub_1AE4F67A4();
        sub_1AE4F6708();
        sub_1AE4F6804();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AE4F76D8();
        *(double *)&result = COERCE_DOUBLE(swift_bridgeObjectRelease());
        if (v41)
          goto LABEL_40;
      }
    }
  }
  else if (!v8
         || (!*(_QWORD *)(v4 + 56)
           ? (v12 = 0, v13 = 0xE000000000000000)
           : (v12 = *(_QWORD *)(v4 + 48), v13 = *(_QWORD *)(v4 + 56)),
             v34 = sub_1AE56E69C(v12, v13, a1),
             sub_1AE4FB75C(),
             *(double *)&result = COERCE_DOUBLE(swift_bridgeObjectRelease()),
             (v34 & 1) != 0))
  {
    v22 = *(_QWORD *)(v4 + 64);
    v33 = *(_QWORD *)(v4 + 72);
    *(double *)&result = COERCE_DOUBLE(sub_1AE4F6730());
    if (v33)
    {
LABEL_40:
      *(double *)&result = COERCE_DOUBLE(sub_1AE56416C(v22, v33));
      if ((v35 & 1) == 0)
        a4 = *(double *)&result;
    }
  }
LABEL_42:
  *(double *)(v4 + 16) = a4;
  return result;
}

uint64_t type metadata accessor for Sort()
{
  return objc_opt_self();
}

uint64_t sub_1AE877BFC()
{
  return 0x6373615F74726F73;
}

uint64_t type metadata accessor for SortAsc()
{
  return objc_opt_self();
}

uint64_t sub_1AE877C34()
{
  return 0x7365645F74726F73;
}

uint64_t type metadata accessor for SortDesc()
{
  return objc_opt_self();
}

uint64_t sub_1AE877C70(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  double v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  double v39;
  BOOL v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  double v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  double v73;
  char v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  unint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  char v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  char *v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  _QWORD *v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t result;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164[2];
  uint64_t v165[4];
  uint64_t *v166;

  v5 = a1[1];
  swift_retain_n();
  v6 = sub_1AE926D0C();
  if (v6 >= v5)
  {
    if (v5 < 0)
      goto LABEL_171;
    if (v5)
      sub_1AE8788F4(0, v5, 1, a1, a2);
    swift_release_n();
    return swift_release();
  }
  v7 = v6;
  v154 = v2;
  sub_1AE51960C(v5 / 2);
  v145 = v8;
  v150 = v9;
  v153 = a2;
  v148 = v5;
  v143 = a1;
  if (v5 <= 0)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    v78 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_133:
    v152 = v12;
    if (v78 >= 2)
    {
      v133 = *v143;
      do
      {
        v134 = v78 - 2;
        if (v78 < 2)
          goto LABEL_166;
        if (!v133)
          goto LABEL_181;
        v135 = *(_QWORD *)(v152 + 32 + 16 * v134);
        v136 = *(_QWORD *)(v152 + 32 + 16 * (v78 - 1) + 8);
        v137 = (char *)(v133 + 16 * *(_QWORD *)(v152 + 32 + 16 * (v78 - 1)));
        swift_retain();
        sub_1AE878C70((char *)(v133 + 16 * v135), v137, v133 + 16 * v136, v150, v153);
        if (v154)
          goto LABEL_129;
        if (v136 < v135)
          goto LABEL_167;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE8893F4();
          v152 = v140;
        }
        if (v134 >= *(_QWORD *)(v152 + 16))
          goto LABEL_168;
        v138 = (_QWORD *)(v152 + 32 + 16 * v134);
        *v138 = v135;
        v138[1] = v136;
        v139 = *(_QWORD *)(v152 + 16);
        if (v78 > v139)
          goto LABEL_169;
        memmove((void *)(v152 + 32 + 16 * (v78 - 1)), (const void *)(v152 + 32 + 16 * v78), 16 * (v139 - v78));
        *(_QWORD *)(v152 + 16) = v139 - 1;
        v78 = v139 - 1;
        v5 = v148;
      }
      while (v139 > 2);
    }
    swift_bridgeObjectRelease();
    if (v5 < -1)
      goto LABEL_177;
    goto LABEL_147;
  }
  v144 = v7;
  v10 = 0;
  v11 = *a1;
  v166 = (uint64_t *)(a2 + 16);
  v142 = v11 + 40;
  v12 = MEMORY[0x1E0DEE9D8];
  v155 = v11;
  while (1)
  {
    v13 = v10 + 1;
    v151 = v12;
    v147 = v10;
    if (v10 + 1 >= v5)
      goto LABEL_40;
    v14 = v10;
    v15 = (uint64_t *)(v11 + 16 * v13);
    v16 = v15[1];
    v165[0] = *v15;
    v165[1] = v16;
    v17 = (uint64_t *)(v11 + 16 * v10);
    v18 = v17[1];
    v164[0] = *v17;
    v164[1] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v159 = sub_1AE85E84C(v165, v164, a2);
    if (v154)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_130:
      if (v5 < -1)
        goto LABEL_173;
LABEL_147:
      *(_QWORD *)(v145 + 16) = 0;
      swift_release_n();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = v14 + 2;
    if (v14 + 2 >= v5)
      goto LABEL_32;
    v19 = (uint64_t *)(v142 + 16 * v14);
    while (1)
    {
      v156 = v13;
      v20 = *(v19 - 1);
      v21 = *v19;
      v23 = *(v19 - 3);
      v22 = *(v19 - 2);
      v24 = v166;
      swift_beginAccess();
      v25 = *v24;
      v26 = *(_QWORD *)(v25 + 16);
      swift_bridgeObjectRetain();
      if (v26)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v27 = sub_1AE536EDC(v20, v21);
        if ((v28 & 1) != 0)
        {
          v29 = *(_QWORD *)(v25 + 56) + 40 * v27;
          v30 = *(_QWORD *)(v29 + 8);
          v162 = *(_QWORD *)v29;
          v31 = *(double *)(v29 + 24);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      swift_endAccess();
      sub_1AE501548(&qword_1EEDA4858);
      sub_1AE925C98();
      v162 = 0;
      v31 = 0.0;
      v30 = 0xE000000000000000;
LABEL_14:
      v32 = v166;
      swift_beginAccess();
      v33 = *v32;
      if (*(_QWORD *)(v33 + 16))
      {
        swift_bridgeObjectRetain();
        v34 = sub_1AE536EDC(v23, v22);
        if ((v35 & 1) != 0)
        {
          v36 = *(_QWORD *)(v33 + 56) + 40 * v34;
          v37 = *(_QWORD *)v36;
          v38 = *(_QWORD *)(v36 + 8);
          v39 = *(double *)(v36 + 24);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      sub_1AE501548(&qword_1EEDA4858);
      sub_1AE925C98();
      v37 = 0;
      v39 = 0.0;
      v38 = 0xE000000000000000;
LABEL_19:
      if (v31 == v39)
      {
        v40 = v37 == v162 && v38 == v30;
        v41 = v40 ? 0 : sub_1AE926D60();
        v12 = v151;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = v39 < v31;
        v12 = v151;
      }
      v13 = v156;
      if (((v159 ^ v41) & 1) != 0)
        break;
      v19 += 2;
      v13 = v156 + 1;
      if (v156 + 1 >= v148)
      {
        v5 = v148;
        v13 = v148;
        goto LABEL_32;
      }
    }
    v5 = v148;
LABEL_32:
    v11 = v155;
    if ((v159 & 1) != 0)
      break;
LABEL_40:
    v49 = v147;
    if (v13 < v5)
    {
      if (__OFSUB__(v13, v147))
        goto LABEL_172;
      if (v13 - v147 < v144)
      {
        v50 = v147 + v144;
        if (__OFADD__(v147, v144))
          goto LABEL_174;
        if (v50 >= v5)
          v50 = v5;
        if (v50 < v147)
        {
LABEL_175:
          __break(1u);
          goto LABEL_176;
        }
        if (v13 == v50)
          goto LABEL_76;
        v51 = (uint64_t *)(v11 + 16 * v13);
        v146 = v50;
LABEL_49:
        v157 = v13;
        v52 = (uint64_t *)(v11 + 16 * v13);
        v54 = *v52;
        v53 = v52[1];
        v55 = v147;
        v149 = v51;
        while (1)
        {
          v56 = *(v51 - 2);
          v57 = *(v51 - 1);
          v58 = v166;
          swift_beginAccess();
          v59 = *v58;
          v60 = *(_QWORD *)(v59 + 16);
          swift_bridgeObjectRetain();
          if (v60)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v61 = sub_1AE536EDC(v54, v53);
            if ((v62 & 1) != 0)
            {
              v63 = *(_QWORD *)(v59 + 56) + 40 * v61;
              v64 = *(_QWORD *)(v63 + 8);
              v160 = *(_QWORD *)v63;
              v65 = *(double *)(v63 + 24);
              swift_endAccess();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_56;
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          swift_endAccess();
          sub_1AE501548(&qword_1EEDA4858);
          v160 = 0;
          sub_1AE925C98();
          v65 = 0.0;
          v64 = 0xE000000000000000;
LABEL_56:
          v66 = v166;
          swift_beginAccess();
          v67 = *v66;
          if (*(_QWORD *)(v67 + 16))
          {
            swift_bridgeObjectRetain();
            v68 = sub_1AE536EDC(v56, v57);
            if ((v69 & 1) != 0)
            {
              v70 = *(_QWORD *)(v67 + 56) + 40 * v68;
              v71 = *(_QWORD *)v70;
              v72 = *(_QWORD *)(v70 + 8);
              v73 = *(double *)(v70 + 24);
              swift_endAccess();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_61;
            }
            swift_bridgeObjectRelease();
          }
          swift_endAccess();
          sub_1AE501548(&qword_1EEDA4858);
          sub_1AE925C98();
          v71 = 0;
          v73 = 0.0;
          v72 = 0xE000000000000000;
LABEL_61:
          if (v65 == v73)
          {
            if (v71 == v160 && v72 == v64)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_73:
              v11 = v155;
LABEL_74:
              v13 = v157 + 1;
              v51 = v149 + 2;
              if (v157 + 1 == v146)
              {
                v13 = v146;
                v12 = v151;
                v49 = v147;
                break;
              }
              goto LABEL_49;
            }
            v75 = sub_1AE926D60();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v75 & 1) == 0)
              goto LABEL_73;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v73 >= v65)
              goto LABEL_73;
          }
          v11 = v155;
          if (!v155)
            goto LABEL_178;
          v54 = *v51;
          v53 = v51[1];
          *(_OWORD *)v51 = *((_OWORD *)v51 - 1);
          *(v51 - 1) = v53;
          *(v51 - 2) = v54;
          v51 -= 2;
          if (v157 == ++v55)
            goto LABEL_74;
        }
      }
    }
LABEL_76:
    if (v13 < v49)
      goto LABEL_170;
    v158 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE889310(0, *(_QWORD *)(v12 + 16) + 1, 1, (char *)v12);
      v12 = v131;
    }
    v77 = *(_QWORD *)(v12 + 16);
    v76 = *(_QWORD *)(v12 + 24);
    v78 = v77 + 1;
    v11 = v155;
    if (v77 >= v76 >> 1)
    {
      sub_1AE889310(v76 > 1, v77 + 1, 1, (char *)v12);
      v11 = v155;
      v12 = v132;
    }
    *(_QWORD *)(v12 + 16) = v78;
    v79 = v12 + 32;
    v80 = (uint64_t *)(v12 + 32 + 16 * v77);
    *v80 = v49;
    v80[1] = v158;
    if (v77)
    {
      while (1)
      {
        v81 = v78 - 1;
        if (v78 >= 4)
        {
          v86 = v79 + 16 * v78;
          v87 = *(_QWORD *)(v86 - 64);
          v88 = *(_QWORD *)(v86 - 56);
          v92 = __OFSUB__(v88, v87);
          v89 = v88 - v87;
          if (v92)
            goto LABEL_155;
          v91 = *(_QWORD *)(v86 - 48);
          v90 = *(_QWORD *)(v86 - 40);
          v92 = __OFSUB__(v90, v91);
          v84 = v90 - v91;
          v85 = v92;
          if (v92)
            goto LABEL_156;
          v93 = v78 - 2;
          v94 = (uint64_t *)(v79 + 16 * (v78 - 2));
          v96 = *v94;
          v95 = v94[1];
          v92 = __OFSUB__(v95, v96);
          v97 = v95 - v96;
          if (v92)
            goto LABEL_157;
          v92 = __OFADD__(v84, v97);
          v98 = v84 + v97;
          if (v92)
            goto LABEL_159;
          if (v98 >= v89)
          {
            v116 = (uint64_t *)(v79 + 16 * v81);
            v118 = *v116;
            v117 = v116[1];
            v92 = __OFSUB__(v117, v118);
            v119 = v117 - v118;
            if (v92)
              goto LABEL_165;
            v109 = v84 < v119;
            goto LABEL_113;
          }
        }
        else
        {
          if (v78 != 3)
          {
            v110 = *(_QWORD *)(v12 + 32);
            v111 = *(_QWORD *)(v12 + 40);
            v92 = __OFSUB__(v111, v110);
            v103 = v111 - v110;
            v104 = v92;
            goto LABEL_107;
          }
          v83 = *(_QWORD *)(v12 + 32);
          v82 = *(_QWORD *)(v12 + 40);
          v92 = __OFSUB__(v82, v83);
          v84 = v82 - v83;
          v85 = v92;
        }
        if ((v85 & 1) != 0)
          goto LABEL_158;
        v93 = v78 - 2;
        v99 = (uint64_t *)(v79 + 16 * (v78 - 2));
        v101 = *v99;
        v100 = v99[1];
        v102 = __OFSUB__(v100, v101);
        v103 = v100 - v101;
        v104 = v102;
        if (v102)
          goto LABEL_160;
        v105 = (uint64_t *)(v79 + 16 * v81);
        v107 = *v105;
        v106 = v105[1];
        v92 = __OFSUB__(v106, v107);
        v108 = v106 - v107;
        if (v92)
          goto LABEL_162;
        if (__OFADD__(v103, v108))
          goto LABEL_164;
        if (v103 + v108 >= v84)
        {
          v109 = v84 < v108;
LABEL_113:
          if (v109)
            v81 = v93;
          goto LABEL_115;
        }
LABEL_107:
        if ((v104 & 1) != 0)
          goto LABEL_161;
        v112 = (uint64_t *)(v79 + 16 * v81);
        v114 = *v112;
        v113 = v112[1];
        v92 = __OFSUB__(v113, v114);
        v115 = v113 - v114;
        if (v92)
          goto LABEL_163;
        if (v115 < v103)
          goto LABEL_124;
LABEL_115:
        v120 = v81 - 1;
        if (v81 - 1 >= v78)
        {
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
          goto LABEL_175;
        }
        if (!v11)
          goto LABEL_179;
        v121 = v79;
        v122 = (uint64_t *)(v79 + 16 * v120);
        v123 = *v122;
        v124 = v121;
        v125 = v81;
        v126 = (_QWORD *)(v121 + 16 * v81);
        v127 = v126[1];
        v128 = (char *)(v11 + 16 * *v122);
        v161 = v11 + 16 * v127;
        v163 = (char *)(v11 + 16 * *v126);
        swift_retain();
        sub_1AE878C70(v128, v163, v161, v150, v153);
        if (v154)
        {
LABEL_129:
          swift_bridgeObjectRelease();
          v5 = v148;
          goto LABEL_130;
        }
        if (v127 < v123)
          goto LABEL_152;
        if (v125 > *(_QWORD *)(v12 + 16))
          goto LABEL_153;
        v129 = v125;
        *v122 = v123;
        *(_QWORD *)(v124 + 16 * v120 + 8) = v127;
        v130 = *(_QWORD *)(v12 + 16);
        if (v129 >= v130)
          goto LABEL_154;
        v79 = v124;
        v154 = 0;
        v78 = v130 - 1;
        memmove(v126, v126 + 2, 16 * (v130 - 1 - v129));
        *(_QWORD *)(v12 + 16) = v130 - 1;
        v11 = v155;
        if (v130 <= 2)
          goto LABEL_124;
      }
    }
    v78 = 1;
LABEL_124:
    v5 = v148;
    v10 = v158;
    a2 = v153;
    if (v158 >= v148)
      goto LABEL_133;
  }
  v42 = v147;
  if (v13 >= v147)
  {
    if (v147 < v13)
    {
      v43 = 16 * v13;
      v44 = 16 * v147;
      v45 = v13;
      do
      {
        if (v42 != --v45)
        {
          if (!v155)
            goto LABEL_180;
          v46 = v155 + v43;
          v47 = *(_QWORD *)(v155 + v44);
          v48 = *(_QWORD *)(v155 + v44 + 8);
          *(_OWORD *)(v155 + v44) = *(_OWORD *)(v155 + v43 - 16);
          *(_QWORD *)(v46 - 16) = v47;
          *(_QWORD *)(v46 - 8) = v48;
        }
        ++v42;
        v43 -= 16;
        v44 += 16;
      }
      while (v42 < v45);
    }
    goto LABEL_40;
  }
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  swift_release_n();
  __break(1u);
LABEL_179:
  swift_release_n();
  __break(1u);
LABEL_180:
  swift_release_n();
  __break(1u);
LABEL_181:
  result = swift_release_n();
  __break(1u);
  return result;
}

uint64_t sub_1AE8788F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  double v27;
  char v29;
  uint64_t result;
  uint64_t v31;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;

  if (a3 == a2)
    return swift_release();
  v5 = (uint64_t *)(a5 + 16);
  v35 = (uint64_t *)(a5 + 16);
  v36 = *a4;
  v6 = (uint64_t *)(*a4 + 16 * a3);
  while (2)
  {
    v37 = a3;
    v7 = (uint64_t *)(v36 + 16 * a3);
    v8 = *v7;
    v9 = v7[1];
    v10 = a1;
    v34 = v6;
    while (1)
    {
      v11 = *(v6 - 2);
      v12 = *(v6 - 1);
      swift_beginAccess();
      v13 = *v5;
      v14 = *(_QWORD *)(*v5 + 16);
      swift_bridgeObjectRetain();
      if (v14)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v15 = sub_1AE536EDC(v8, v9);
        if ((v16 & 1) != 0)
        {
          v17 = *(_QWORD *)(v13 + 56) + 40 * v15;
          v18 = *(_QWORD *)v17;
          v19 = *(_QWORD *)(v17 + 8);
          v20 = *(double *)(v17 + 24);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      swift_endAccess();
      sub_1AE501548(&qword_1EEDA4858);
      sub_1AE925C98();
      v18 = 0;
      v20 = 0.0;
      v19 = 0xE000000000000000;
LABEL_10:
      swift_beginAccess();
      v21 = *v5;
      if (*(_QWORD *)(*v5 + 16))
      {
        swift_bridgeObjectRetain();
        v22 = sub_1AE536EDC(v11, v12);
        if ((v23 & 1) != 0)
        {
          v24 = *(_QWORD *)(v21 + 56) + 40 * v22;
          v26 = *(_QWORD *)v24;
          v25 = *(_QWORD *)(v24 + 8);
          v27 = *(double *)(v24 + 24);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      sub_1AE501548(&qword_1EEDA4858);
      sub_1AE925C98();
      v26 = 0;
      v27 = 0.0;
      v25 = 0xE000000000000000;
LABEL_15:
      if (v20 != v27)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v31 = v37;
        v5 = v35;
        if (v27 >= v20)
          goto LABEL_27;
        goto LABEL_23;
      }
      if (v26 == v18 && v25 == v19)
        break;
      v29 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v31 = v37;
      v5 = v35;
      if ((v29 & 1) == 0)
        goto LABEL_27;
LABEL_23:
      if (!v36)
      {
        __break(1u);
        return result;
      }
      v8 = *v6;
      v9 = v6[1];
      *(_OWORD *)v6 = *((_OWORD *)v6 - 1);
      *(v6 - 1) = v9;
      *(v6 - 2) = v8;
      v6 -= 2;
      if (v31 == ++v10)
        goto LABEL_27;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = v37;
    v5 = v35;
LABEL_27:
    a3 = v31 + 1;
    v6 = v34 + 2;
    if (a3 != a2)
      continue;
    return swift_release();
  }
}

uint64_t sub_1AE878C70(char *a1, char *a2, unint64_t a3, char *a4, uint64_t a5)
{
  char *v5;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v14;
  char *v16;
  uint64_t *v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  _OWORD *v30;
  BOOL v31;
  char *v32;
  char *v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char v40;
  char v41;
  char *v42;
  BOOL v43;
  BOOL v44;
  char *v45;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;

  v7 = a3;
  v8 = a1;
  v9 = a2 - a1;
  v10 = (a2 - a1) / 16;
  v11 = a3 - (_QWORD)a2;
  v12 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v10 >= v12)
  {
    sub_1AE51F99C(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v16 = a2;
    v14 = &a4[16 * v12];
    if (v8 >= a2 || v11 < 16)
      goto LABEL_13;
    v32 = (char *)(v7 - 16);
    v33 = v5;
    v45 = v8;
    while (1)
    {
      v34 = (unint64_t)v14;
      v36 = *((_QWORD *)v14 - 1);
      v35 = v14 - 16;
      v50 = *((_QWORD *)v14 - 2);
      v51 = v36;
      v37 = v16;
      v39 = *((_QWORD *)v16 - 1);
      v38 = v16 - 16;
      v48 = *((_QWORD *)v16 - 2);
      v49 = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40 = sub_1AE85E84C(&v50, &v48, a5);
      if (v33)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AE51F99C(a4, (uint64_t)(v34 - (_QWORD)a4) / 16, v37);
        goto LABEL_15;
      }
      v41 = v40;
      v52 = 0;
      v42 = v32 + 16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v41 & 1) != 0)
      {
        v43 = v42 != v37 || v32 >= v37;
        v16 = v38;
        v14 = (char *)v34;
        if (!v43)
          goto LABEL_38;
      }
      else
      {
        v44 = v42 != (char *)v34 || (unint64_t)v32 >= v34;
        v38 = v35;
        v14 = v35;
        v16 = v37;
        if (!v44)
          goto LABEL_38;
      }
      *(_OWORD *)v32 = *(_OWORD *)v38;
LABEL_38:
      v21 = a4;
      v33 = v52;
      if (v16 <= v45)
        goto LABEL_14;
      v32 -= 16;
      if (v14 <= a4)
        goto LABEL_13;
    }
  }
  sub_1AE51F99C(a1, (a2 - a1) / 16, a4);
  v14 = &a4[16 * v10];
  if ((unint64_t)a2 < v7 && v9 >= 16)
  {
    v20 = (uint64_t *)a2;
    v21 = a4;
    v22 = a5;
    v52 = v14;
    while (1)
    {
      v23 = v7;
      v24 = v20[1];
      v25 = v20;
      v50 = *v20;
      v51 = v24;
      v26 = *((_QWORD *)v21 + 1);
      v48 = *(_QWORD *)v21;
      v49 = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27 = v22;
      v28 = sub_1AE85E84C(&v50, &v48, v22);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AE51F99C(v21, (v52 - v21) / 16, v8);
        goto LABEL_15;
      }
      v29 = v28;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0)
        break;
      v30 = v25;
      v20 = v25 + 2;
      if (v8 != (char *)v25)
        goto LABEL_21;
LABEL_22:
      v8 += 16;
      v14 = v52;
      v22 = v27;
      if (v21 < v52)
      {
        v7 = v23;
        if ((unint64_t)v20 < v23)
          continue;
      }
      v16 = v8;
      goto LABEL_14;
    }
    v30 = v21;
    v31 = v8 == v21;
    v21 += 16;
    v20 = v25;
    if (v31)
      goto LABEL_22;
LABEL_21:
    *(_OWORD *)v8 = *v30;
    goto LABEL_22;
  }
  v16 = v8;
LABEL_13:
  v21 = a4;
LABEL_14:
  sub_1AE51F99C(v21, (v14 - v21) / 16, v16);
LABEL_15:
  swift_release();
  return 1;
}

uint64_t sub_1AE878F70()
{
  return sub_1AE925F74();
}

uint64_t SourceConfidenceIdentifier.source.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SourceConfidenceIdentifier.signalType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

IntelligencePlatform::SourceConfidenceIdentifier __swiftcall SourceConfidenceIdentifier.init(_:_:)(Swift::String_optional a1, Swift::String_optional a2)
{
  Swift::String_optional *v2;
  IntelligencePlatform::SourceConfidenceIdentifier result;

  *v2 = a1;
  v2[1] = a2;
  result.signalType = a2;
  result.source = a1;
  return result;
}

uint64_t static SourceConfidenceIdentifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t result;
  BOOL v12;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  if (!v3)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = sub_1AE926D60(), result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8)
      {
        v12 = v4 == v7 && v5 == v8;
        if (v12 || (sub_1AE926D60() & 1) != 0)
          return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t SourceConfidenceIdentifier.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_1AE4FE284();
    sub_1AE4F6730();
    sub_1AE925F14();
    sub_1AE4F81B8();
    if (v1)
    {
LABEL_3:
      sub_1AE4FE284();
      sub_1AE4FB75C();
      sub_1AE4FFE74();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1AE4FE284();
    if (v1)
      goto LABEL_3;
  }
  return sub_1AE4FE284();
}

void SourceConfidenceIdentifier.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  sub_1AE926EC8();
  if (v1)
  {
    sub_1AE4FD764();
    sub_1AE4F6730();
    sub_1AE501214();
    sub_1AE4F81B8();
  }
  else
  {
    sub_1AE502144();
  }
  if (v2)
  {
    sub_1AE4FD764();
    sub_1AE4FB75C();
    sub_1AE4FFE74();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE502144();
  }
  sub_1AE926F10();
  sub_1AE4FE988();
}

void sub_1AE8791C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  sub_1AE926EC8();
  if (v1)
  {
    sub_1AE4FD764();
    sub_1AE4F6730();
    sub_1AE501214();
    sub_1AE4F81B8();
  }
  else
  {
    sub_1AE502144();
  }
  if (v2)
  {
    sub_1AE4FD764();
    sub_1AE4FB75C();
    sub_1AE4FFE74();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE502144();
  }
  sub_1AE926F10();
  sub_1AE4FE988();
}

unint64_t sub_1AE879244()
{
  unint64_t result;

  result = qword_1ED30ECC8;
  if (!qword_1ED30ECC8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SourceConfidenceIdentifier, &type metadata for SourceConfidenceIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED30ECC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SourceConfidenceIdentifier()
{
  return &type metadata for SourceConfidenceIdentifier;
}

uint64_t ViewService.sourceConfidenceView.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(id, uint64_t, uint64_t);
  id v12;
  uint64_t result;
  uint64_t v14;
  id v15;
  id v16[2];

  v16[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  v5 = (void *)sub_1AE925E18();
  v16[0] = 0;
  v6 = objc_msgSend(v4, sel_requestAssertionForViewName_error_, v5, v16);

  v7 = v16[0];
  if (v6)
  {
    v8 = *(_QWORD **)(v1 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    v9 = v8[5];
    v10 = v8[6];
    sub_1AE4F9858(v8 + 2, v9);
    v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 8);
    v12 = v7;
    result = v11(v6, v9, v10);
    if (v2)
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      *a1 = v6;
      a1[1] = 0xD000000000000010;
      a1[2] = 0x80000001AE989CC0;
      a1[3] = result;
      a1[4] = v14;
    }
  }
  else
  {
    v15 = v16[0];
    sub_1AE9246B4();

    return swift_willThrow();
  }
  return result;
}

Swift::Double __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewService.SourceConfidenceView.confidence(source:signalType:)(Swift::String source, Swift::String signalType)
{
  uint64_t v2;
  Swift::Double result;
  double v4;

  sub_1AE4FEA14();
  sub_1AE924CCC();
  if (!v2)
    return v4;
  return result;
}

uint64_t sub_1AE8794A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void (*a3)(char *, uint64_t, uint64_t)@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t *v38;
  char *v39;
  char v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  void (*v43)(uint64_t *, _QWORD);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v48;
  char *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD v55[2];
  uint64_t *v56;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;

  v62 = a5;
  v63 = a4;
  v65 = a3;
  v64 = a2;
  v60 = a1;
  v56 = a6;
  v70 = sub_1AE924C60();
  v72 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v71 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1AE9254D0();
  v68 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v67 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v75 = (char *)v55 - v10;
  v66 = sub_1AE501548((uint64_t *)&unk_1ED30EC90);
  MEMORY[0x1E0C80A78](v66);
  v12 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1AE501548(&qword_1ED30ECA0);
  v13 = MEMORY[0x1E0C80A78](v58);
  v57 = (_QWORD *)((char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v69 = (_QWORD *)((char *)v55 - v15);
  v16 = sub_1AE501548(&qword_1ED318B60);
  v59 = *(char **)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1AE501548(&qword_1ED319190);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1AE925350();
  sub_1AE501548((uint64_t *)&unk_1EEDA4AE0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE933BD0;
  *(_QWORD *)(inited + 32) = 0x656372756F73;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v24 = MEMORY[0x1E0DEA968];
  v25 = MEMORY[0x1E0D24968];
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 80) = v25;
  *(_QWORD *)(inited + 48) = v64;
  *(_QWORD *)(inited + 56) = v65;
  *(_QWORD *)(inited + 88) = 0x79546C616E676973;
  *(_QWORD *)(inited + 96) = 0xEA00000000006570;
  *(_QWORD *)(inited + 128) = v24;
  *(_QWORD *)(inited + 136) = v25;
  v26 = v62;
  *(_QWORD *)(inited + 104) = v63;
  *(_QWORD *)(inited + 112) = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE501548(&qword_1EED9C208);
  sub_1AE925C98();
  sub_1AE9252FC();
  swift_bridgeObjectRelease();
  sub_1AE5BDA68();
  v27 = v61;
  v28 = sub_1AE924B7C();
  (*((void (**)(char *, uint64_t))v59 + 1))(v18, v16);
  if (v27)
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v30 = v58;
  v59 = v22;
  v60 = v20;
  v61 = v19;
  if (!v28)
  {
    v73 = 0;
    v74 = 0xE000000000000000;
    sub_1AE92691C();
    sub_1AE925F74();
    sub_1AE925F74();
    sub_1AE925F74();
    sub_1AE925F74();
    v52 = v73;
    v53 = v74;
    sub_1AE5CB92C();
    swift_allocError();
    *(_QWORD *)v54 = v52;
    *(_QWORD *)(v54 + 8) = v53;
    *(_BYTE *)(v54 + 16) = 1;
    swift_willThrow();
    v19 = v61;
    v20 = v60;
    v22 = v59;
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  v62 = 0;
  v73 = v28;
  v31 = (uint64_t)v57;
  *v57 = v28;
  v32 = v30;
  sub_1AE92526C();
  sub_1AE512FA0(qword_1ED30FFE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D24538], MEMORY[0x1E0D24550]);
  v55[1] = v28;
  swift_retain_n();
  sub_1AE926484();
  v33 = (uint64_t)v69;
  sub_1AE87AFD4(v31, (uint64_t)v69);
  v64 = 0;
  v34 = v33 + *(int *)(v32 + 36);
  v35 = v68;
  v65 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
  LODWORD(v63) = 1;
  v36 = v67;
  v37 = v75;
  v38 = v69;
  while (1)
  {
    v65(v37, v34, v7);
    v39 = v36;
    sub_1AE9264A8();
    sub_1AE512FA0(&qword_1ED30FFF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D24898], MEMORY[0x1E0D248A0]);
    v40 = sub_1AE925E00();
    v41 = *(void (**)(char *, uint64_t))(v35 + 8);
    v42 = v39;
    v37 = v75;
    v41(v42, v7);
    v41(v37, v7);
    if ((v40 & 1) != 0)
      break;
    v43 = (void (*)(uint64_t *, _QWORD))sub_1AE92658C();
    sub_1AE64DBE0(v44, (uint64_t)v12);
    v43(&v73, 0);
    v73 = *v38;
    sub_1AE9264B4();
    v46 = *(_QWORD *)v12;
    v45 = *((_QWORD *)v12 + 1);
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v71, &v12[*(int *)(v66 + 48)], v70);
    if (v46 == 0x6E656469666E6F63 && v45 == 0xEA00000000006563)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v48 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v48 & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v70);
        goto LABEL_12;
      }
    }
    v49 = v71;
    v64 = sub_1AE9263A0();
    LODWORD(v63) = v50 & 1;
    (*(void (**)(char *, uint64_t))(v72 + 8))(v49, v70);
LABEL_12:
    v35 = v68;
    v36 = v67;
  }
  swift_release_n();
  sub_1AE52982C((uint64_t)v38, &qword_1ED30ECA0);
  result = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v59, v61);
  v51 = 0x3FE999999999999ALL;
  if ((v63 & 1) == 0)
    v51 = v64;
  *v56 = v51;
  return result;
}

uint64_t sub_1AE879CC0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1AE8794A4(a1, *(_QWORD *)(v2 + 24), *(void (**)(char *, uint64_t, uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), a2);
}

Swift::Double __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewService.SourceConfidenceView.confidence(source:)(Swift::String source)
{
  uint64_t v1;
  Swift::Double result;
  double v3;

  sub_1AE4FEA14();
  sub_1AE5007C0();
  if (!v1)
    return v3;
  return result;
}

uint64_t sub_1AE879D68@<X0>(double a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X2>, uint64_t a3@<X3>, double *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  double v23;
  unint64_t v24;
  double v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  double v32;
  double v33;
  unint64_t v34;
  double v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  void (*v42)(double *, _QWORD);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  char *v51;
  char v52;
  char v53;
  char *v54;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  double v62;
  char *v63;
  double *v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double v73;
  double v74;
  double *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t *v80;
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[5];
  uint64_t v87[5];
  double v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v81 = a2;
  v73 = a1;
  v64 = a4;
  v5 = sub_1AE924C60();
  v83 = *(_QWORD *)(v5 - 8);
  v84 = v5;
  MEMORY[0x1E0C80A78](v5);
  v82 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1AE9254D0();
  v76 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v79 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v85 = (char *)&v62 - v10;
  v78 = sub_1AE501548((uint64_t *)&unk_1ED30EC90);
  MEMORY[0x1E0C80A78](v78);
  v77 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1AE501548(&qword_1ED30ECA0);
  v12 = MEMORY[0x1E0C80A78](v71);
  v75 = (double *)((char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v80 = (uint64_t *)((char *)&v62 - v14);
  v15 = sub_1AE501548(&qword_1ED318B60);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1AE501548(&qword_1ED319190);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1AE925350();
  v87[3] = sub_1AE925374();
  v87[4] = MEMORY[0x1E0D24668];
  sub_1AE52F6A8(v87);
  sub_1AE925380();
  v86[3] = MEMORY[0x1E0DEA968];
  v86[4] = MEMORY[0x1E0D24960];
  v86[0] = v81;
  v86[1] = a3;
  v90 = sub_1AE924C9C();
  v91 = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8((uint64_t *)&v88);
  v72 = a3;
  swift_bridgeObjectRetain();
  sub_1AE9251D0();
  sub_1AE52982C((uint64_t)v86, &qword_1ED319E60);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v87);
  sub_1AE925320();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v88);
  sub_1AE5BDA68();
  v23 = v74;
  v24 = sub_1AE924B70();
  v25 = v23;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v23 != 0.0)
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v63 = v22;
  v69 = v20;
  v70 = v19;
  if (v24 >> 62)
    goto LABEL_32;
  v27 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
  v28 = v76;
  v29 = v70;
  v20 = v69;
  v30 = v85;
  v31 = v80;
  if (!v27)
  {
    swift_bridgeObjectRelease();
    v88 = 0.0;
    v89 = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    v88 = -2.31584178e77;
    v89 = 0x80000001AE989CE0;
    sub_1AE925F74();
    v19 = v29;
    v59 = *(_QWORD *)&v88;
    v60 = v89;
    sub_1AE5CB92C();
    swift_allocError();
    *(_QWORD *)v61 = v59;
    *(_QWORD *)(v61 + 8) = v60;
    *(_BYTE *)(v61 + 16) = 1;
    swift_willThrow();
    v22 = v63;
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  v62 = v25;
  v72 = 0;
  v32 = 0.0;
  v68 = v24 & 0xC000000000000001;
  v65 = v24 + 32;
  v33 = 0.0;
  v67 = v24;
  v66 = v27;
  do
  {
    v34 = v68;
    sub_1AE66B890(*(_QWORD *)&v32, v68 == 0, v24);
    if (v34)
    {
      v25 = COERCE_DOUBLE(MEMORY[0x1AF453B80](*(_QWORD *)&v32, v24));
    }
    else
    {
      v25 = *(double *)(v65 + 8 * *(_QWORD *)&v32);
      swift_retain();
    }
    v35 = v32;
    v36 = v71;
    *(_QWORD *)&v74 = *(_QWORD *)&v35 + 1;
    if (__OFADD__(*(_QWORD *)&v35, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
      v27 = sub_1AE926AD8();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    v88 = v25;
    *v75 = v25;
    sub_1AE92526C();
    v24 = sub_1AE512FA0(qword_1ED30FFE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D24538], MEMORY[0x1E0D24550]);
    v73 = v25;
    swift_retain();
    sub_1AE926484();
    sub_1AE87AFD4((uint64_t)v75, (uint64_t)v31);
    v37 = (char *)v31 + *(int *)(v36 + 36);
    v81 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    while (1)
    {
      v81(v30, v37, v7);
      v38 = v79;
      v31 = v80;
      sub_1AE9264A8();
      sub_1AE512FA0(&qword_1ED30FFF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D24898], MEMORY[0x1E0D248A0]);
      v39 = sub_1AE925E00();
      v40 = *(void (**)(char *, uint64_t))(v28 + 8);
      v41 = v38;
      v30 = v85;
      v40(v41, v7);
      v40(v30, v7);
      if ((v39 & 1) != 0)
        break;
      v42 = (void (*)(double *, _QWORD))sub_1AE92658C();
      v43 = v77;
      sub_1AE64DBE0(v44, (uint64_t)v77);
      v42(&v88, 0);
      v45 = *v31;
      v46 = v43;
      v88 = *(double *)&v45;
      sub_1AE9264B4();
      v47 = *(_QWORD *)v43;
      v48 = *((_QWORD *)v46 + 1);
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, &v46[*(int *)(v78 + 48)], v84);
      if (v47 == 0x6E656469666E6F63 && v48 == 0xEA00000000006563)
      {
        swift_bridgeObjectRelease();
LABEL_20:
        v51 = v82;
        v25 = COERCE_DOUBLE(sub_1AE9263A0());
        v53 = v52;
        v54 = v51;
        v28 = v76;
        (*(void (**)(char *, uint64_t))(v83 + 8))(v54, v84);
        if ((v53 & 1) == 0)
        {
          v33 = v33 + v25;
          if (__OFADD__(v72++, 1))
            goto LABEL_31;
        }
      }
      else
      {
        v50 = sub_1AE926D60();
        swift_bridgeObjectRelease();
        if ((v50 & 1) != 0)
          goto LABEL_20;
        (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v84);
      }
    }
    sub_1AE52982C((uint64_t)v31, &qword_1ED30ECA0);
    swift_release();
    v32 = v74;
    v56 = v70;
    v57 = v69;
    v24 = v67;
  }
  while (*(_QWORD *)&v74 != v66);
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v63, v56);
  if (v33 == 0.0)
    v58 = 0.8;
  else
    v58 = v33 / (double)v72;
  *v64 = v58;
  return result;
}

uint64_t sub_1AE87A5A0@<X0>(double a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;

  return sub_1AE879D68(a1, *(void (**)(char *, char *, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t ViewService.SourceConfidenceView.confidenceMap(source:)()
{
  uint64_t v0;
  uint64_t v2;

  sub_1AE87A680();
  v2 = sub_1AE925C98();
  sub_1AE4FEA14();
  sub_1AE5007C0();
  if (v0)
    swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_1AE87A680()
{
  unint64_t result;

  result = qword_1ED30EC80;
  if (!qword_1ED30EC80)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SourceConfidenceIdentifier, &type metadata for SourceConfidenceIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED30EC80);
  }
  return result;
}

uint64_t sub_1AE87A6BC(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  void (*v45)(uint64_t *, _QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  char v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD v60[2];
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[5];
  uint64_t v84[5];
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;

  v68 = a5;
  v79 = a3;
  v74 = a1;
  v6 = sub_1AE924C60();
  v81 = *(_QWORD *)(v6 - 8);
  v82 = v6;
  MEMORY[0x1E0C80A78](v6);
  v80 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AE9254D0();
  v78 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v77 = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v89 = (char *)v60 - v11;
  v76 = sub_1AE501548((uint64_t *)&unk_1ED30EC90);
  MEMORY[0x1E0C80A78](v76);
  v13 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_1AE501548(&qword_1ED30ECA0);
  v14 = MEMORY[0x1E0C80A78](v69);
  v72 = (_QWORD *)((char *)v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v17 = (_QWORD *)((char *)v60 - v16);
  v18 = sub_1AE501548(&qword_1ED318B60);
  v73 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1AE501548(&qword_1ED319190);
  v62 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1AE925350();
  v84[3] = sub_1AE925374();
  v84[4] = MEMORY[0x1E0D24668];
  sub_1AE52F6A8(v84);
  sub_1AE925380();
  v83[3] = MEMORY[0x1E0DEA968];
  v83[4] = MEMORY[0x1E0D24960];
  v83[0] = v79;
  v83[1] = a4;
  v87 = sub_1AE924C9C();
  v88 = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8(&v85);
  v71 = a4;
  swift_bridgeObjectRetain();
  sub_1AE9251D0();
  sub_1AE52982C((uint64_t)v83, &qword_1ED319E60);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v84);
  sub_1AE925320();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v85);
  sub_1AE5BDA68();
  v24 = v75;
  v25 = sub_1AE924B70();
  v26 = v24;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v20, v18);
  v27 = v62;
  if (v24)
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v23, v21);
  v61 = v23;
  v67 = v21;
  if (v25 >> 62)
    goto LABEL_32;
  v29 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
  v30 = v78;
  v31 = v67;
  v32 = v89;
  if (!v29)
  {
    swift_bridgeObjectRelease();
    v85 = 0;
    v86 = 0xE000000000000000;
    v21 = v31;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    v85 = 0xD00000000000002ELL;
    v86 = 0x80000001AE989CE0;
    sub_1AE925F74();
    v57 = v85;
    v58 = v86;
    sub_1AE5CB92C();
    swift_allocError();
    *(_QWORD *)v59 = v57;
    *(_QWORD *)(v59 + 8) = v58;
    *(_BYTE *)(v59 + 16) = 1;
    swift_willThrow();
    v27 = v62;
    v23 = v61;
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v23, v21);
  }
  v60[1] = v26;
  v73 = 0;
  v75 = 0;
  v33 = 0;
  v66 = v25 & 0xC000000000000001;
  v63 = v25 + 32;
  v65 = v25;
  v64 = v29;
  do
  {
    v34 = v66;
    sub_1AE66B890(v33, v66 == 0, v25);
    if (v34)
    {
      v26 = MEMORY[0x1AF453B80](v33, v25);
    }
    else
    {
      v26 = *(_QWORD *)(v63 + 8 * v33);
      swift_retain();
    }
    v35 = __OFADD__(v33, 1);
    v36 = v33 + 1;
    v37 = v69;
    v38 = v72;
    if (v35)
    {
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain();
      v29 = sub_1AE926AD8();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    v71 = v36;
    v85 = v26;
    *v72 = v26;
    v39 = v37;
    v79 = (void (*)(char *, char *, uint64_t))((char *)v38 + *(int *)(v37 + 36));
    sub_1AE92526C();
    sub_1AE512FA0(qword_1ED30FFE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D24538], MEMORY[0x1E0D24550]);
    v70 = v26;
    swift_retain();
    sub_1AE926484();
    sub_1AE87AFD4((uint64_t)v72, (uint64_t)v17);
    v40 = (char *)v17 + *(int *)(v39 + 36);
    v79 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
    while (1)
    {
      v41 = v77;
      v79(v32, v40, v8);
      v42 = v41;
      sub_1AE9264A8();
      sub_1AE512FA0(&qword_1ED30FFF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D24898], MEMORY[0x1E0D248A0]);
      LOBYTE(v41) = sub_1AE925E00();
      v43 = *(void (**)(char *, uint64_t))(v30 + 8);
      v44 = v42;
      v32 = v89;
      v43(v44, v8);
      v43(v32, v8);
      if ((v41 & 1) != 0)
        break;
      v45 = (void (*)(uint64_t *, _QWORD))sub_1AE92658C();
      sub_1AE64DBE0(v46, (uint64_t)v13);
      v45(&v85, 0);
      v85 = *v17;
      sub_1AE9264B4();
      v48 = *(_QWORD *)v13;
      v47 = *((_QWORD *)v13 + 1);
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v80, &v13[*(int *)(v76 + 48)], v82);
      v49 = v48 == 0x79546C616E676973 && v47 == 0xEA00000000006570;
      if (v49 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v52 = v80;
        v73 = sub_1AE925EC0();
        v75 = v53;
        (*(void (**)(char *, uint64_t))(v81 + 8))(v52, v82);
      }
      else
      {
        if (v48 == 0x6E656469666E6F63 && v47 == 0xEA00000000006563)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v51 = sub_1AE926D60();
          swift_bridgeObjectRelease();
          if ((v51 & 1) == 0)
          {
            (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
            goto LABEL_24;
          }
        }
        v54 = v80;
        v74 = sub_1AE9263A0();
        (*(void (**)(char *, uint64_t))(v81 + 8))(v54, v82);
      }
LABEL_24:
      v30 = v78;
    }
    sub_1AE52982C((uint64_t)v17, &qword_1ED30ECA0);
    v55 = v75;
    swift_bridgeObjectRetain();
    sub_1AE655334(0, 0, v73, v55);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = v71;
    v30 = v78;
    v56 = v67;
    v25 = v65;
  }
  while (v71 != v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v61, v56);
}

uint64_t sub_1AE87AFA8(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE87A6BC(a1, *(_QWORD *)(v1 + 16), *(void (**)(char *, char *, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

ValueMetadata *type metadata accessor for ViewService.SourceConfidenceView()
{
  return &type metadata for ViewService.SourceConfidenceView;
}

uint64_t sub_1AE87AFD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1ED30ECA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE87B01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int v12;
  int v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t result;
  int v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  _BYTE v42[112];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_1AE4F67EC();
  v44 = v1;
  v45 = v4;
  v37 = v5;
  v6 = v0;
  v7 = v3;
  v8 = *(_QWORD *)(v2 + 16);
  if (v8)
  {
    v9 = v2;
    v43 = MEMORY[0x1E0DEE9D8];
    sub_1AE52275C();
    v10 = v43;
    v11 = sub_1AE6043B4(v9);
    v13 = v12;
    v15 = v14 & 1;
    v36 = v9 + 56;
    v29 = v7;
    v16 = *(_QWORD *)(v7 + 24);
    v34 = *(_QWORD *)(v7 + 32);
    v35 = v16;
    result = swift_getObjectType();
    v33 = result;
    v32 = v42;
    v31 = xmmword_1AE934250;
    v30 = v9;
    while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(_BYTE *)(v9 + 32))
    {
      if (((*(_QWORD *)(v36 + (((unint64_t)v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        goto LABEL_16;
      if (*(_DWORD *)(v9 + 36) != v13)
        goto LABEL_17;
      v18 = v13;
      v39 = v8;
      v19 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v11);
      sub_1AE501548((uint64_t *)&unk_1ED30FDA0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v31;
      *(_QWORD *)(inited + 32) = v19;
      sub_1AE56B498();
      v41[0] = 0;
      v41[1] = v21;
      v22 = v32;
      *v32 = 0u;
      v22[1] = 0u;
      v22[2] = 0u;
      v22[3] = 0u;
      v22[4] = 0u;
      *((_QWORD *)v22 + 10) = 0;
      v42[88] = 65;
      MEMORY[0x1E0C80A78](v21);
      sub_1AE509294((uint64_t)&v29);
      *(_QWORD *)(v23 - 16) = v41;
      sub_1AE501548(&qword_1ED30D9C8);
      sub_1AE924CCC();
      if (v6)
      {
        swift_release();
        sub_1AE506F04();
        sub_1AE4F81B8();
        sub_1AE880EA0();
        return v10;
      }
      v38 = 0;
      sub_1AE506F04();
      sub_1AE4F81B8();
      v24 = v40;
      v43 = v10;
      v25 = *(_QWORD *)(v10 + 16);
      if (v25 >= *(_QWORD *)(v10 + 24) >> 1)
      {
        sub_1AE52275C();
        v10 = v43;
      }
      *(_QWORD *)(v10 + 16) = v25 + 1;
      v26 = v10 + 16 * v25;
      *(_QWORD *)(v26 + 32) = v19;
      *(_QWORD *)(v26 + 40) = v24;
      v9 = v30;
      result = sub_1AE880C44(v11, v18, v15 & 1, v30);
      v11 = result;
      v13 = v27;
      v15 = v28 & 1;
      v8 = v39 - 1;
      v6 = v38;
      if (v39 == 1)
      {
        sub_1AE5CDFE8(result, v27, v28 & 1);
        sub_1AE880EA0();
        return v10;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    sub_1AE6A1880(v3);
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1AE87B30C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (!v3)
    return v4;
  v5 = a1;
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1AE522728();
  v4 = v22;
  v6 = sub_1AE64A338(v5);
  if (v6 < 0 || (v8 = v6, v6 >= 1 << *(_BYTE *)(v5 + 32)))
  {
LABEL_18:
    __break(1u);
  }
  else
  {
    v9 = v5 + 64;
    v18 = v5 + 64;
    while ((*(_QWORD *)(v9 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
    {
      if (v7 != *(_DWORD *)(v5 + 36))
        goto LABEL_20;
      v19 = v3;
      v20 = v7;
      v10 = *(_QWORD *)(v5 + 56);
      v11 = v5;
      v12 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v8);
      v21 = *(_QWORD *)(v10 + 8 * v8);
      swift_bridgeObjectRetain_n();
      sub_1AE87B6B0(&v21);
      if (v2)
        goto LABEL_24;
      swift_bridgeObjectRelease();
      v13 = v21;
      v22 = v4;
      v14 = *(_QWORD *)(v4 + 16);
      if (v14 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_1AE522728();
        v4 = v22;
      }
      *(_QWORD *)(v4 + 16) = v14 + 1;
      v15 = v4 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v12;
      *(_QWORD *)(v15 + 40) = v13;
      if ((uint64_t)v8 >= -(-1 << *(_BYTE *)(v11 + 32)))
        goto LABEL_21;
      v9 = v18;
      if ((*(_QWORD *)(v18 + 8 * (v8 >> 6)) & (1 << v8)) == 0)
        goto LABEL_22;
      v5 = v11;
      if (v20 != *(_DWORD *)(v11 + 36))
        goto LABEL_23;
      v16 = sub_1AE926850();
      v3 = v19 - 1;
      if (v19 == 1)
        return v4;
      v8 = v16;
      v2 = 0;
      if ((v16 & 0x8000000000000000) == 0)
      {
        v7 = *(_DWORD *)(v5 + 36);
        if (v16 < 1 << *(_BYTE *)(v5 + 32))
          continue;
      }
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1AE87B504(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = (_BYTE *)(swift_bridgeObjectRetain() + 88);
    v7 = MEMORY[0x1E0DEE9D8];
    v28 = a2;
    while (1)
    {
      if ((*v6 & 1) == 0)
      {
        v8 = *((_QWORD *)v6 - 1);
        sub_1AE4FB930();
        swift_bridgeObjectRetain();
        sub_1AE4F6804();
        sub_1AE867D44(v8, (uint64_t)&v21);
        if (v3)
        {
          sub_1AE4FC564();
          sub_1AE4F76D8();
          swift_bridgeObjectRelease();
          sub_1AE4F6728();
          sub_1AE4F66E8();
          sub_1AE4F67AC();
          return v7;
        }
        sub_1AE4F6728();
        sub_1AE4F66E8();
        sub_1AE4F67AC();
        v9 = v22;
        if (v22)
        {
          v10 = v21;
          v19 = v24;
          v20 = v23;
          v11 = v26;
          v17 = v27;
          v18 = v25;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1AE880EC0();
            v7 = v14;
          }
          v12 = *(_QWORD *)(v7 + 16);
          if (v12 >= *(_QWORD *)(v7 + 24) >> 1)
          {
            sub_1AE880EC0();
            v7 = v15;
          }
          *(_QWORD *)(v7 + 16) = v12 + 1;
          v13 = v7 + 88 * v12;
          *(_QWORD *)(v13 + 32) = v10;
          *(_QWORD *)(v13 + 40) = v9;
          *(_OWORD *)(v13 + 48) = v20;
          *(_OWORD *)(v13 + 64) = v19;
          *(_OWORD *)(v13 + 80) = v18;
          *(_QWORD *)(v13 + 96) = v11;
          *(_OWORD *)(v13 + 104) = v17;
        }
      }
      v6 += 64;
      if (!--v5)
      {
        sub_1AE4FC564();
        swift_bridgeObjectRelease();
        return v7;
      }
    }
  }
  sub_1AE4FC564();
  return MEMORY[0x1E0DEE9D8];
}

void sub_1AE87B6B0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AE8894F8();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1AE87F8B8(v5);
  *a1 = v2;
}

uint64_t sub_1AE87B718(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v7)(uint64_t *, uint64_t (*)(uint64_t, uint64_t), _QWORD *);
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  _QWORD v12[5];
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v7 = (uint64_t (*)(uint64_t *, uint64_t (*)(uint64_t, uint64_t), _QWORD *))result;
    swift_bridgeObjectRetain();
    v12[4] = a3;
    v8 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v9 = *v8;
      v14 = *(v8 - 1);
      v13 = v9;
      MEMORY[0x1E0C80A78](v9);
      v12[2] = &v13;
      swift_bridgeObjectRetain();
      v10 = v7(&v14, sub_1AE869428, v12);
      if (v4)
        break;
      v11 = v10;
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
      {
        v8 += 2;
        if (--v5)
          continue;
      }
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AE87B81C(void *__src)
{
  _QWORD v3[14];
  uint64_t v4;
  unint64_t v5;
  _BYTE __dst[105];

  memcpy(__dst, __src, sizeof(__dst));
  sub_1AE92691C();
  v4 = 0;
  v5 = 0xE000000000000000;
  sub_1AE925F74();
  memcpy(v3, __dst, 0x69uLL);
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE880D28((uint64_t)__src, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AE58307C);
  return v4;
}

uint64_t sub_1AE87B8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[6];
  uint64_t v6;
  uint64_t v7;

  v6 = MEMORY[0x1E0DEE9E8];
  v5[2] = &v6;
  v5[3] = &v7;
  v5[4] = a1;
  v5[5] = a2;
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1AE87B30C(v2);
  sub_1AE87B718((uint64_t)sub_1AE880DA4, (uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE87B980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t *, char *), uint64_t a7)
{
  void *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a2;
  v28 = a3;
  v12 = sub_1AE501548(&qword_1EED9FB98);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v26 - v16;
  v18 = sub_1AE501548(&qword_1EEDA4BB0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1AE676F0C(a1, &v29);
  if (v7)
  {

  }
  else
  {
    v26[1] = a7;
    v22 = v29;
    v29 = a5;
    MEMORY[0x1E0C80A78](v21);
    v23 = v28;
    v26[-4] = v27;
    v26[-3] = v23;
    v26[-2] = &v29;
    sub_1AE6A1098((void (*)(uint64_t))sub_1AE880DDC, 0, (uint64_t)v17);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v17, 1, v18) != 1)
    {
      sub_1AE880B7C((uint64_t)v17, (uint64_t)v20);
      v29 = v22;
      sub_1AE56DBEC((uint64_t)v20, (uint64_t)v15, &qword_1EEDA4BB0);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v15, 0, 1, v18);
      v24 = a6(&v29, v15);
      sub_1AE52FBE8((uint64_t)v15, &qword_1EED9FB98);
      sub_1AE52FBE8((uint64_t)v20, &qword_1EEDA4BB0);
      return v24 & 1;
    }
    sub_1AE52FBE8((uint64_t)v17, &qword_1EED9FB98);
  }
  v24 = 1;
  return v24 & 1;
}

uint64_t ViewService.sportsSchedulesView.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(id, uint64_t, uint64_t);
  id v12;
  uint64_t result;
  uint64_t v14;
  id v15;
  id v16[2];

  v16[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  sub_1AE5007D0();
  v5 = (void *)sub_1AE925E18();
  v16[0] = 0;
  v6 = objc_msgSend(v4, sel_requestAssertionForViewName_error_, v5, v16);

  v7 = v16[0];
  if (v6)
  {
    v8 = *(_QWORD **)(v1 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    v9 = v8[5];
    v10 = v8[6];
    sub_1AE4F9858(v8 + 2, v9);
    v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 8);
    v12 = v7;
    result = v11(v6, v9, v10);
    if (v2)
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      *a1 = v6;
      a1[1] = 0x6870617267;
      a1[2] = 0xE500000000000000;
      a1[3] = result;
      a1[4] = v14;
    }
  }
  else
  {
    v15 = v16[0];
    sub_1AE9246B4();

    return swift_willThrow();
  }
  return result;
}

uint64_t static ViewService.SportsSchedulesView.name.getter()
{
  return sub_1AE5007D0();
}

void ViewService.SportsSchedulesView.enumerateGames(in:block:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(void);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(void);
  void (*v51)(void);
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, _DWORD *);
  Swift::String v63;
  Swift::Int64 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(void);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  _QWORD v88[13];
  uint64_t v89;
  void (*v90)(void);
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  _QWORD __src[2];
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  _OWORD v100[3];
  _DWORD *v101;

  v76 = a2;
  v77 = a3;
  v4 = sub_1AE924A20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F666C();
  v8 = v7 - v6;
  v9 = (_DWORD *)sub_1AE924C30();
  v85 = *((_QWORD *)v9 - 1);
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4FFEB4();
  v84 = v10 - v11;
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v76 - v14;
  MEMORY[0x1E0C80A78](v13);
  v82 = (uint64_t)&v76 - v16;
  v17 = v3[1];
  v92 = *v3;
  v93 = v17;
  v94 = *((_QWORD *)v3 + 4);
  sub_1AE924864();
  v19 = v18;
  sub_1AE501548((uint64_t *)&unk_1ED30D890);
  sub_1AE924864();
  if (v19 > v20)
  {
    __break(1u);
  }
  else
  {
    v78 = v8;
    v80 = v4;
    sub_1AE501548((uint64_t *)&unk_1ED30FFC0);
    v21 = sub_1AE880E40();
    *(double *)&v22 = sub_1AE4FF4AC(v21, (__n128)xmmword_1AE933BD0);
    __src[0] = 0;
    __src[1] = v23;
    v96 = v22;
    v97 = v22;
    v98 = v22;
    v99 = v22;
    v100[0] = v22;
    *(_OWORD *)((char *)v100 + 9) = v22;
    if (qword_1ED31B508 == -1)
      goto LABEL_3;
  }
  swift_once();
LABEL_3:
  v24 = sub_1AE925B6C();
  v25 = sub_1AE4FB608(v24, (uint64_t)qword_1ED31B4F0);
  swift_bridgeObjectRetain_n();
  v81 = v25;
  v26 = sub_1AE925B54();
  v27 = sub_1AE9265E0();
  v28 = os_log_type_enabled(v26, v27);
  v86 = v15;
  v101 = v9;
  v79 = v5;
  if (v28)
  {
    sub_1AE4F66A0();
    v88[0] = sub_1AE50A1C4();
    *v9 = 136315138;
    sub_1AE4FB930();
    v29 = sub_1AE87B81C(__src);
    sub_1AE520ED4(v29, v30, (uint64_t)v88, v31, v32, v33, v34, v35, v76, v77, v78, v79, v80, v81, v82, (uint64_t)v83, v84, v85, (uint64_t)v86,
      v87);
    v91 = v36;
    sub_1AE92676C();
    sub_1AE505EF0();
    sub_1AE4F81B8();
    sub_1AE507368(&dword_1AE4F2000, v26, v27, "SportsSchedulesView: enumerateGames query: %s");
    sub_1AE5081C8();
    sub_1AE4F9064();
  }

  sub_1AE505EF0();
  v91 = MEMORY[0x1E0DEE9E0];
  v37 = sub_1AE4FEA14();
  MEMORY[0x1E0C80A78](v37);
  sub_1AE509294((uint64_t)&v76);
  *(_QWORD *)(v38 - 16) = __src;
  sub_1AE501548(&qword_1ED30D9C8);
  v39 = v83;
  sub_1AE924CCC();
  if (v39)
  {
    sub_1AE4F66E8();
    swift_bridgeObjectRelease();
    v40 = v85;
    v41 = (uint64_t)v86;
    v42 = v84;
    v49 = v82;
    v90 = v39;
    v50 = v39;
    sub_1AE501548((uint64_t *)&unk_1ED319C60);
    if (swift_dynamicCast())
    {
      v84 = 0;

      (*(void (**)(uint64_t, uint64_t, _DWORD *))(v40 + 32))(v41, v49, v9);
      sub_1AE506490();
      v83 = v51;
      v51();
      v52 = sub_1AE925B54();
      v53 = sub_1AE9265EC();
      if (os_log_type_enabled(v52, v53))
      {
        sub_1AE4F66A0();
        v89 = sub_1AE50A1C4();
        *v9 = 136315138;
        sub_1AE87F884(&qword_1EEDA4B20);
        v54 = sub_1AE926D18();
        sub_1AE520ED4(v54, v55, (uint64_t)&v89, v56, v57, v58, v59, v60, v76, v77, v78, v79, v80, v81, v82, (uint64_t)v83, v84, v85, (uint64_t)v86,
          v87);
        v88[12] = v61;
        sub_1AE92676C();
        sub_1AE4F9038();
        (*(void (**)(uint64_t, _DWORD *))(v85 + 8))(v42, v101);
        sub_1AE507368(&dword_1AE4F2000, v52, v53, "SportsSchedulesView: enumerateGames database error: %s");
        sub_1AE5081C8();
        sub_1AE4F9064();
      }
      v62 = *(void (**)(uint64_t, _DWORD *))(v40 + 8);
      v62(v42, v9);

      if (qword_1ED31C9B0 != -1)
        swift_once();
      sub_1AE924C24();
      sub_1AE924A14();
      sub_1AE880E30(v79);
      v63._countAndFlagsBits = sub_1AE5007D0();
      ViewService.reportSQLiteError(for:sqliteErrorCode:)(v63, v64);
      if (!v65)
      {
        sub_1AE87F884(&qword_1EED9C218);
        sub_1AE4F6778();
        sub_1AE506490();
        v83();
        swift_willThrow();
      }
      v62(v41, v9);
    }

  }
  else
  {
    sub_1AE4F66E8();
    v43 = v88[0];
    v44 = *(_QWORD *)(v88[0] + 16);
    if (v44)
    {
      v88[0] = MEMORY[0x1E0DEE9D8];
      sub_1AE880E78();
      v45 = v88[0];
      v46 = *(_QWORD *)(v88[0] + 16);
      v47 = 32;
      do
      {
        v48 = *(_QWORD *)(v43 + v47);
        v88[0] = v45;
        if (v46 >= *(_QWORD *)(v45 + 24) >> 1)
        {
          sub_1AE5219D8();
          v45 = v88[0];
        }
        *(_QWORD *)(v45 + 16) = v46 + 1;
        *(_QWORD *)(v45 + 8 * v46 + 32) = v48;
        v47 += 120;
        ++v46;
        --v44;
      }
      while (v44);
    }
    sub_1AE4F66E8();
    swift_bridgeObjectRelease();
    sub_1AE898248();
    sub_1AE880ECC();
    v66 = sub_1AE87B01C();
    sub_1AE4F9038();
    sub_1AE62C418(v66);
    v68 = v67;
    v91 = v67;
    swift_bridgeObjectRetain();
    v69 = sub_1AE925B54();
    v70 = sub_1AE9265E0();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = (uint8_t *)sub_1AE4F66A0();
      *(_DWORD *)v71 = 134217984;
      v88[0] = *(_QWORD *)(v68 + 16);
      sub_1AE92676C();
      sub_1AE4F76D8();
      _os_log_impl(&dword_1AE4F2000, v69, v70, "SportsSchedulesView: triplesDict: %ld keys", v71, 0xCu);
      sub_1AE4F9064();
    }

    sub_1AE4F76D8();
    sub_1AE501548(&qword_1ED30D888);
    swift_initStackObject();
    sub_1AE880ECC();
    v72 = sub_1AE527D10();
    swift_beginAccess();
    v73 = v91;
    sub_1AE501548(qword_1ED30D930);
    swift_initStackObject();
    v74 = sub_1AE527CC8(v73);
    MEMORY[0x1E0C80A78](v74);
    v75 = v76;
    *(&v76 - 4) = v72;
    *(&v76 - 3) = v75;
    *(&v76 - 2) = v77;
    sub_1AE87B8EC((uint64_t)sub_1AE8803AC, (uint64_t)(&v76 - 6));
    swift_release();
    swift_release();
  }
  sub_1AE4FEE48();
}

uint64_t sub_1AE87C520(void *__src)
{
  uint64_t v1;
  uint64_t result;
  _BYTE __dst[105];
  uint64_t v4;

  memcpy(__dst, __src, sizeof(__dst));
  swift_getObjectType();
  sub_1AE501548(&qword_1ED30D9C8);
  result = sub_1AE924CCC();
  if (!v1)
    return v4;
  return result;
}

uint64_t sub_1AE87C5F0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t (*v46)(_QWORD, _QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v6 = v5;
  v49 = a5;
  v51 = a3;
  v55 = a2;
  v50 = type metadata accessor for CustomGraphSportsGameEvent(0);
  MEMORY[0x1E0C80A78](v50);
  v52 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1AE501548(&qword_1EED9FB98);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1AE501548(&qword_1EEDA4BB0);
  v13 = MEMORY[0x1E0C80A78](v54);
  v53 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v45 - v15;
  v17 = *a1;
  if (qword_1ED31B508 != -1)
    swift_once();
  v18 = sub_1AE925B6C();
  v48 = sub_1AE4FB608(v18, (uint64_t)qword_1ED31B4F0);
  v19 = sub_1AE925B54();
  v20 = sub_1AE9265E0();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v47 = v5;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v46 = a4;
    v24 = v23;
    v57 = v23;
    *(_DWORD *)v22 = 136315138;
    v56 = v17;
    sub_1AE501548(&qword_1EED9FE20);
    v25 = sub_1AE925E90();
    sub_1AE520ED4(v25, v26, (uint64_t)&v57, v27, v28, v29, v30, v31, v45, (unint64_t)v46, v47, v48, v49, v50, v51, v52, v53, v54, v55,
      v56);
    v56 = v32;
    sub_1AE92676C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AE4F2000, v19, v20, "SportsSchedulesView: enumerateGraphObjects: %s", v22, 0xCu);
    swift_arrayDestroy();
    v33 = v24;
    a4 = v46;
    MEMORY[0x1AF454C78](v33, -1, -1);
    v34 = v22;
    v6 = v47;
    MEMORY[0x1AF454C78](v34, -1, -1);
  }

  sub_1AE56DBEC(v55, (uint64_t)v12, &qword_1EED9FB98);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v12, 1, v54) == 1)
  {
    sub_1AE52FBE8((uint64_t)v12, &qword_1EED9FB98);
    LOBYTE(v35) = 1;
    return v35 & 1;
  }
  sub_1AE880B7C((uint64_t)v12, (uint64_t)v16);
  v35 = v53;
  sub_1AE56DBEC((uint64_t)v16, v53, &qword_1EEDA4BB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v57 = *(_QWORD *)v35;
    sub_1AE501548((uint64_t *)&unk_1ED319C60);
    swift_willThrowTypedImpl();
LABEL_11:
    sub_1AE52FBE8((uint64_t)v16, &qword_1EEDA4BB0);
    return v35 & 1;
  }
  v36 = (uint64_t)v16;
  v37 = v52;
  sub_1AE880BC4(v35, v52);
  v38 = v51;
  v35 = *(_QWORD *)(v37 + *(int *)(v50 + 48));
  swift_retain();
  v39 = swift_bridgeObjectRetain();
  v40 = sub_1AE87B504(v39, v38);
  swift_bridgeObjectRelease();
  if (v6)
  {
    sub_1AE880C08(v37);
    v16 = (char *)v36;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v42 = sub_1AE925B54();
  v43 = sub_1AE9265E0();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v44 = 134217984;
    v57 = *(_QWORD *)(v40 + 16);
    sub_1AE92676C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AE4F2000, v42, v43, "SportsSchedulesView: teams: %ld", v44, 0xCu);
    MEMORY[0x1AF454C78](v44, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  LOBYTE(v35) = a4(v37, v40);
  swift_bridgeObjectRelease();
  sub_1AE880C08(v37);
  sub_1AE52FBE8(v36, &qword_1EEDA4BB0);
  return v35 & 1;
}

void ViewService.SportsSchedulesView.enumerateAllGames(block:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  Swift::Int64 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[10];
  _OWORD v44[2];
  uint64_t v45;
  void *v46;

  sub_1AE4F67EC();
  v2 = sub_1AE924A20();
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F666C();
  v38 = v4 - v3;
  v5 = sub_1AE924C30();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4FFEB4();
  v9 = v7 - v8;
  v11 = MEMORY[0x1E0C80A78](v10);
  v41 = (uint64_t)&v35 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v35 - v13;
  v15 = *(_OWORD *)(v0 + 16);
  v44[0] = *(_OWORD *)v0;
  v44[1] = v15;
  v45 = *(_QWORD *)(v0 + 32);
  sub_1AE501548(&qword_1ED30D888);
  swift_initStackObject();
  sub_1AE6A183C((uint64_t)v44);
  sub_1AE527D10();
  swift_retain();
  sub_1AE69F44C();
  if (v1)
  {
    swift_release();
    v46 = v1;
    v16 = v1;
    sub_1AE501548((uint64_t *)&unk_1ED319C60);
    if (swift_dynamicCast())
    {

      v17 = v41;
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v41, v14, v5);
      if (qword_1ED31B508 != -1)
        swift_once();
      v18 = sub_1AE925B6C();
      sub_1AE4FB608(v18, (uint64_t)qword_1ED31B4F0);
      v19 = *(_DWORD **)(v6 + 16);
      sub_1AE880EB4(v9);
      v20 = sub_1AE925B54();
      v21 = sub_1AE9265EC();
      if (os_log_type_enabled(v20, v21))
      {
        sub_1AE4F66A0();
        v37 = v19;
        v43[0] = sub_1AE50A1C4();
        *v19 = 136315138;
        v36 = v19 + 1;
        sub_1AE87F884(&qword_1EEDA4B20);
        v22 = sub_1AE926D18();
        sub_1AE520ED4(v22, v23, (uint64_t)v43, v24, v25, v26, v27, v28, v35, (unint64_t)v36, (uint64_t)v37, v38, v39, v40, v41, v42, v43[0], v43[1], v43[2],
          v43[3]);
        v42 = v29;
        sub_1AE92676C();
        sub_1AE4F9038();
        sub_1AE880E68();
        sub_1AE507368(&dword_1AE4F2000, v20, v21, "SportsSchedulesView: enumerateAllGames database error: %s");
        sub_1AE5081C8();
        sub_1AE4F9064();
      }
      sub_1AE880E68();

      if (qword_1ED31C9B0 != -1)
        swift_once();
      v30 = v38;
      sub_1AE924C24();
      sub_1AE924A14();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v30, v40);
      v31._countAndFlagsBits = sub_1AE5007D0();
      ViewService.reportSQLiteError(for:sqliteErrorCode:)(v31, v32);
      if (!v33)
      {
        sub_1AE87F884(&qword_1EED9C218);
        sub_1AE4F6778();
        sub_1AE880EB4(v34);
        swift_willThrow();
      }
      ((void (*)(uint64_t, uint64_t))v6)(v17, v5);
    }

  }
  else
  {
    swift_release();
  }
  sub_1AE4F667C();
}

void sub_1AE87CE44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  sub_1AE4F67EC();
  v27 = v3;
  v28 = v0;
  v26 = v4;
  v6 = v5;
  sub_1AE880E88();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F666C();
  v10 = v9 - v8;
  sub_1AE501548(&qword_1EED9FB98);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F666C();
  v14 = v13 - v12;
  v15 = sub_1AE501548(&qword_1EEDA4BB0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE5056D0();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v25 - v18;
  sub_1AE56DBEC(v1, v14, &qword_1EED9FB98);
  v20 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v14, 1, v15);
  if ((_DWORD)v20 == 1)
  {
    sub_1AE509278(v20, &qword_1EED9FB98);
  }
  else
  {
    v21 = v26;
    sub_1AE880B7C(v14, (uint64_t)v19);
    sub_1AE56DBEC((uint64_t)v19, v2, &qword_1EEDA4BB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1AE501548((uint64_t *)&unk_1ED319C60);
      swift_willThrowTypedImpl();
    }
    else
    {
      sub_1AE880BC4(v2, v10);
      swift_retain();
      v22 = swift_bridgeObjectRetain();
      v23 = v28;
      v24 = sub_1AE87B504(v22, v6);
      sub_1AE4F76D8();
      if (!v23)
      {
        v21(v10, v24);
        sub_1AE4F81B8();
        sub_1AE880C08(v10);
        sub_1AE52FBE8((uint64_t)v19, &qword_1EEDA4BB0);
        goto LABEL_8;
      }
      sub_1AE880C08(v10);
    }
    sub_1AE52FBE8((uint64_t)v19, &qword_1EEDA4BB0);
  }
LABEL_8:
  sub_1AE4F667C();
}

uint64_t ViewService.SportsSchedulesView.enumerateTriples(for:block:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t inited;

  v1 = *a1;
  sub_1AE501548((uint64_t *)&unk_1ED30FDA0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE934250;
  *(_QWORD *)(inited + 32) = v1;
  sub_1AE56B498();
  sub_1AE4FEA14();
  sub_1AE924CCC();
  sub_1AE506F04();
  return sub_1AE4F67AC();
}

uint64_t sub_1AE87D148(uint64_t a1, uint64_t (*a2)(_OWORD *))
{
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[2];
  uint64_t v13;
  __int16 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_WORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_WORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v9;
  v13 = v2;
  v14 = v3;
  v10 = *(_OWORD *)(a1 + 64);
  v15 = *(_OWORD *)(a1 + 48);
  v16 = v10;
  v17 = v4;
  v18 = v5;
  v19 = v6;
  v20 = v7;
  v21 = v8;
  return a2(v12) & 1;
}

uint64_t sub_1AE87D1B8(uint64_t a1, uint64_t (*a2)(uint64_t *, void (*)()))
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  uint64_t v11;

  swift_getObjectType();
  sub_1AE501548(&qword_1EED99540);
  result = sub_1AE924CCC();
  if (!v2)
  {
    v5 = v11;
    v6 = *(_QWORD *)(v11 + 16);
    if (v6)
    {
      v7 = swift_bridgeObjectRetain();
      v8 = 0;
      do
      {
        v11 = *(_QWORD *)(v5 + 8 * v8 + 32);
        v9 = MEMORY[0x1E0C80A78](v7);
        MEMORY[0x1E0C80A78](v9);
        v7 = a2(&v11, sub_1AE880E1C);
        v10 = v6 - 1 != v8++;
      }
      while ((v7 & v10 & 1) != 0);
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void ViewService.SportsSchedulesView.enumerateTriples(block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  sub_1AE4F67EC();
  sub_1AE4FEA14();
  sub_1AE501548(&qword_1EED99540);
  sub_1AE924CCC();
  if (!v10)
  {
    if (*(_QWORD *)(a10 + 16))
    {
      v11 = sub_1AE4F6804();
      MEMORY[0x1E0C80A78](v11);
      sub_1AE880E50();
      sub_1AE880E94();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      sub_1AE4F67AC();
    }
  }
  sub_1AE506FAC();
  sub_1AE4F667C();
}

void sub_1AE87D450()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;

  sub_1AE4F67EC();
  v18 = v1;
  v2 = sub_1AE501548((uint64_t *)&unk_1EED9EFA0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4FFEB4();
  v6 = v4 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - v8;
  sub_1AE501548(&qword_1ED30FD70);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1AE934250;
  if (qword_1EED99900 != -1)
    swift_once();
  v11 = sub_1AE925374();
  v12 = sub_1AE4FB608(v11, (uint64_t)qword_1EEE12030);
  v13 = MEMORY[0x1E0D24650];
  *(_QWORD *)(v10 + 56) = v11;
  *(_QWORD *)(v10 + 64) = v13;
  v14 = sub_1AE52F6A8((uint64_t *)(v10 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v14, v12, v11);
  sub_1AE880634();
  MEMORY[0x1AF451CF0](v10);
  sub_1AE4F6710();
  sub_1AE925074();
  v15 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v15(v6, v2);
  sub_1AE56CE14(&qword_1EEDA4FA0, (uint64_t *)&unk_1EED9EFA0);
  sub_1AE52F66C();
  v16 = sub_1AE924B58();
  v15((uint64_t)v9, v2);
  if (!v0)
    *v18 = v16;
  sub_1AE4F667C();
}

void ViewService.SportsSchedulesView.enumerateTriples<A>(for:block:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_1AE4F67EC();
  v2 = v1;
  v10 = *(_QWORD *)(v1 - 8);
  v11 = v3;
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F666C();
  v6 = v5 - v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v6, v11, v2);
  sub_1AE926070();
  swift_getAssociatedConformanceWitness();
  do
  {
    v8 = sub_1AE926760();
    if ((v12 & 1) != 0)
      break;
    MEMORY[0x1E0C80A78](v8);
    sub_1AE880E50();
    v9 = sub_1AE880E94();
    if (v0)
      break;
  }
  while ((v9 & 1) != 0);
  sub_1AE880E30(v13);
  sub_1AE506FAC();
  sub_1AE4F667C();
}

void sub_1AE87D7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = a4;
  ViewService.SportsSchedulesView.enumerateTriples(for:block:)(&v4);
  sub_1AE4FD974();
}

uint64_t sub_1AE87D7CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, const void *a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  const void *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[5];
  _BYTE v45[112];
  _BYTE v46[120];

  v33 = a6;
  v30 = a1;
  v28 = a7;
  v11 = sub_1AE501548((uint64_t *)&unk_1ED30D878);
  v12 = MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - v13;
  v36 = v16;
  v37 = v15;
  v32 = a5;
  v31 = a3;
  if (a4 == 1)
  {
    v35 = 0;
    v17 = 0;
    v29 = 0;
    v34 = 1;
  }
  else
  {
    v34 = a3 & 1;
    v29 = a5 & 1;
    v35 = a2;
    v17 = a4;
  }
  v18 = aGraphFts[0];
  v19 = aGraphFts[1];
  v44[3] = sub_1AE924C9C();
  v44[4] = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8(v44);
  memcpy(v45, v33, 0x69uLL);
  sub_1AE860350(v45, v46);
  sub_1AE860350(v46, &v43);
  v39 = 0x6870617267;
  v40 = 0xE500000000000000;
  v41 = v18;
  v42 = v19;
  swift_bridgeObjectRetain();
  sub_1AE86033C(a2, v31, a4);
  TriplesQuery.Clause.Impl.graphIdentifierSQLExpression(config:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE880634();
  sub_1AE924AC8();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v44);
  if (v17)
  {
    v20 = swift_bridgeObjectRetain();
    v21 = v38;
    sub_1AE8B5744(v20, v17, v29);
    v22 = v21;
    sub_1AE56CE14(&qword_1EEDA4BB8, (uint64_t *)&unk_1ED30D878);
    v23 = v36;
    sub_1AE924CFC();
    swift_bridgeObjectRelease();
    v24 = v37;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v14, v23, v11);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v24 = v37;
    v22 = v38;
    v23 = v36;
  }
  if ((v34 & 1) == 0)
  {
    if (v35 < 0)
    {
      __break(1u);
      return result;
    }
    sub_1AE56CE14(qword_1EEDA4BD0, (uint64_t *)&unk_1ED30D878);
    sub_1AE924F0C();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v14, v23, v11);
  }
  sub_1AE56CE14(qword_1ED30D8F0, (uint64_t *)&unk_1ED30D878);
  sub_1AE8805F8();
  v26 = sub_1AE924B28();
  result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v11);
  if (!v22)
    *v28 = v26;
  return result;
}

uint64_t sub_1AE87DB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t (*a6)(uint64_t *), uint64_t a7)
{
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;
  char v18;
  _OWORD v19[6];
  uint64_t v20;
  char v21;
  uint64_t v22[4];

  v11 = *(_QWORD *)(a3 + 96);
  v12 = *(_BYTE *)(a3 + 104);
  v22[0] = 0x6870617267;
  v22[1] = 0xE500000000000000;
  v22[2] = aGraphFts[0];
  v22[3] = aGraphFts[1];
  v13 = *(_OWORD *)(a3 + 16);
  v19[0] = *(_OWORD *)a3;
  v19[1] = v13;
  v14 = *(_OWORD *)(a3 + 48);
  v19[2] = *(_OWORD *)(a3 + 32);
  v19[3] = v14;
  v15 = *(_OWORD *)(a3 + 80);
  v19[4] = *(_OWORD *)(a3 + 64);
  v19[5] = v15;
  v20 = v11;
  v21 = v12;
  v17 = a4;
  v18 = a5;
  swift_bridgeObjectRetain();
  sub_1AE880D28(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AE526458);
  sub_1AE87DC24(a1, v22, (uint64_t)v19, (uint64_t)&v17, a6, a7);
  sub_1AE880D28(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AE58307C);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE87DC24(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t *);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[5];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v51 = a6;
  v50 = a5;
  v64 = a1;
  v47 = sub_1AE501548((uint64_t *)&unk_1ED30D878);
  v48 = *(_QWORD *)(v47 - 8);
  v9 = MEMORY[0x1E0C80A78](v47);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v45 - v12;
  v63 = *a2;
  v62 = a2[1];
  v61 = a2[2];
  v60 = a2[3];
  v14 = *(_QWORD *)(a3 + 8);
  v59 = *(_QWORD *)a3;
  v15 = *(_QWORD *)(a3 + 16);
  v58 = *(_QWORD *)(a3 + 24);
  v57 = *(_QWORD *)(a3 + 32);
  v56 = *(_QWORD *)(a3 + 40);
  v55 = *(_QWORD *)(a3 + 48);
  v54 = *(_QWORD *)(a3 + 56);
  v53 = *(_QWORD *)(a3 + 64);
  v52 = *(_QWORD *)(a3 + 72);
  v16 = *(_QWORD *)(a3 + 88);
  v49 = *(_QWORD *)(a3 + 80);
  v45 = *(_QWORD *)(a3 + 96);
  v17 = *(unsigned __int8 *)(a3 + 104);
  v18 = *(_QWORD *)a4;
  v19 = *(_BYTE *)(a4 + 8);
  sub_1AE880634();
  v46 = v13;
  sub_1AE924AB0();
  if (v16 >> 1 != 0xFFFFFFFF || v17 >= 2)
  {
    v70[3] = sub_1AE924C9C();
    v70[4] = MEMORY[0x1E0D23DC0];
    sub_1AE52F6A8(v70);
    v71 = v59;
    v72 = v14;
    v73 = v15;
    v74 = v58;
    v75 = v57;
    v76 = v56;
    v77 = v55;
    v78 = v54;
    v79 = v53;
    v80 = v52;
    v81 = v49;
    v82 = v16;
    v83 = v45;
    LOBYTE(v84) = v17;
    v66 = v63;
    v67 = v62;
    v68 = v61;
    v69 = v60;
    TriplesQuery.Clause.Impl.graphIdentifierSQLExpression(config:)();
    sub_1AE56CE14(qword_1EEDA4BC0, (uint64_t *)&unk_1ED30D878);
    v21 = v47;
    v22 = v46;
    sub_1AE924DBC();
    v23 = v48;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v22, v21);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v70);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v22, v11, v21);
  }
  if (v18)
  {
    v24 = swift_bridgeObjectRetain();
    v25 = v65;
    sub_1AE8B5744(v24, v18, v19 & 1);
    v26 = v25;
    sub_1AE56CE14(&qword_1EEDA4BB8, (uint64_t *)&unk_1ED30D878);
    v27 = v47;
    v28 = v46;
    sub_1AE924CFC();
    swift_bridgeObjectRelease();
    v29 = v48;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v27);
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v28, v11, v27);
  }
  else
  {
    v27 = v47;
    v28 = v46;
    v26 = v65;
  }
  sub_1AE56CE14(qword_1ED30D8F0, (uint64_t *)&unk_1ED30D878);
  sub_1AE8805F8();
  v30 = sub_1AE924B1C();
  if (v26)
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v28, v27);
  v49 = v30;
  while (1)
  {
    v32 = sub_1AE88ED78((uint64_t)&v71);
    v65 = v73;
    if (!v73)
    {
LABEL_17:
      (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v47);
      return swift_release();
    }
    v34 = v71;
    v33 = v72;
    v61 = 0;
    v36 = v74;
    v35 = v75;
    v37 = v76;
    v64 = v77;
    v38 = v78;
    v63 = v79;
    v59 = v80;
    v62 = v81;
    v39 = v83;
    v58 = v82;
    v40 = v85;
    v60 = v84;
    v41 = (void *)MEMORY[0x1AF454348](v32);
    v52 = v34;
    v71 = v34;
    v72 = v33;
    v53 = v33;
    v73 = v65;
    v74 = v36;
    v54 = v36;
    v55 = v35;
    v75 = v35;
    v56 = v37;
    LOWORD(v76) = v37;
    v77 = v64;
    v78 = v38;
    v57 = v38;
    v79 = v63;
    v80 = v59;
    v81 = v62;
    LOWORD(v82) = v58;
    v83 = v39;
    v84 = v60;
    v85 = v40;
    v42 = v61;
    v43 = v50(&v71);
    if (v42)
      break;
    v44 = v43;
    objc_autoreleasePoolPop(v41);
    sub_1AE6942B0(v52, v53, v65);
    if ((v44 & 1) == 0)
      goto LABEL_17;
  }
  objc_autoreleasePoolPop(v41);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v47);
  swift_release();
  return sub_1AE6942B0(v52, v53, v65);
}

uint64_t sub_1AE87E2FC(uint64_t (*a1)(uint64_t *, void (*)()))
{
  uint64_t v1;

  return sub_1AE87D1B8(v1, a1);
}

void sub_1AE87E31C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  sub_1AE4FD974();
}

uint64_t sub_1AE87E338(void *a1)
{
  return sub_1AE87C520(a1);
}

uint64_t sub_1AE87E34C(uint64_t *a1)
{
  return ViewService.SportsSchedulesView.enumerateTriples(for:block:)(a1);
}

void sub_1AE87E360()
{
  ViewService.SportsSchedulesView.enumerateTriples<A>(for:block:)();
}

uint64_t static ViewService.SportsSchedulesView.SportsScheduleTriple.databaseTableName.getter()
{
  return 0x6870617267;
}

uint64_t sub_1AE87E3A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v0 = sub_1AE925464();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - v5;
  v7 = sub_1AE9251B8();
  sub_1AE595770(v7, qword_1EEDA4B00);
  sub_1AE4FB608(v7, (uint64_t)qword_1EEDA4B00);
  v8 = *MEMORY[0x1E0D247F8];
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v9(v6, v8, v0);
  v9(v4, v8, v0);
  return sub_1AE9251AC();
}

uint64_t static ViewService.SportsSchedulesView.SportsScheduleTriple.persistenceConflictPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EED998F8 != -1)
    swift_once();
  v2 = sub_1AE9251B8();
  v3 = sub_1AE4FB608(v2, (uint64_t)qword_1EEDA4B00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void ViewService.SportsSchedulesView.SportsScheduleTriple.subject.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t ViewService.SportsSchedulesView.SportsScheduleTriple.predicate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AE4FBC68(*(_QWORD *)(v1 + 16), a1);
  return sub_1AE4FBC60();
}

void ViewService.SportsSchedulesView.SportsScheduleTriple.relationshipId.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 48);
}

uint64_t ViewService.SportsSchedulesView.SportsScheduleTriple.relationshipPredicate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AE4FBC68(*(_QWORD *)(v1 + 64), a1);
  return sub_1AE4FBC60();
}

uint64_t ViewService.SportsSchedulesView.SportsScheduleTriple.object.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  sub_1AE4F66CC();
  return v1;
}

double ViewService.SportsSchedulesView.SportsScheduleTriple.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

uint64_t sub_1AE87E594()
{
  uint64_t v0;

  v0 = sub_1AE925374();
  sub_1AE595770(v0, qword_1EEE12030);
  sub_1AE4FB608(v0, (uint64_t)qword_1EEE12030);
  sub_1AE88040C();
  return sub_1AE92538C();
}

_QWORD *ViewService.SportsSchedulesView.SportsScheduleTriple.init(subject:predicate:relationshipId:relationshipPredicate:object:confidence:)@<X0>(_QWORD *result@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;

  v8 = *a2;
  v9 = *((_QWORD *)a2 + 2);
  v10 = *((_QWORD *)a2 + 3);
  v11 = *((_WORD *)a2 + 16);
  v12 = *a3;
  v13 = *a4;
  v14 = *((_QWORD *)a4 + 2);
  v15 = *((_QWORD *)a4 + 3);
  v16 = *((_WORD *)a4 + 16);
  *(_QWORD *)a7 = *result;
  *(_OWORD *)(a7 + 8) = v8;
  *(_QWORD *)(a7 + 24) = v9;
  *(_QWORD *)(a7 + 32) = v10;
  *(_WORD *)(a7 + 40) = v11;
  *(_QWORD *)(a7 + 48) = v12;
  *(_OWORD *)(a7 + 56) = v13;
  *(_QWORD *)(a7 + 72) = v14;
  *(_QWORD *)(a7 + 80) = v15;
  *(_WORD *)(a7 + 88) = v16;
  *(_QWORD *)(a7 + 96) = a5;
  *(_QWORD *)(a7 + 104) = a6;
  *(double *)(a7 + 112) = a8;
  return result;
}

uint64_t sub_1AE87E650(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7461636964657270 && a2 == 0xE900000000000065;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E6F6974616C6572 && a2 == 0xEE00644970696873;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x80000001AE97B790 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v10 = sub_1AE926D60();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 5;
          else
            return 6;
        }
      }
    }
  }
}

uint64_t sub_1AE87E8EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE87E920
                                                            + 4 * asc_1AE9665F0[a1]))(0x7463656A627573, 0xE700000000000000);
}

uint64_t sub_1AE87E920()
{
  return 0x7461636964657270;
}

uint64_t sub_1AE87E93C()
{
  return 0x6E6F6974616C6572;
}

unint64_t sub_1AE87E960()
{
  return 0xD000000000000015;
}

uint64_t sub_1AE87E97C()
{
  return 0x7463656A626FLL;
}

uint64_t sub_1AE87E990()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_1AE87E9AC()
{
  unsigned __int8 *v0;

  return sub_1AE87E8EC(*v0);
}

uint64_t sub_1AE87E9B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE87E650(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE87E9D8()
{
  sub_1AE88040C();
  return sub_1AE926F94();
}

uint64_t sub_1AE87EA00()
{
  sub_1AE88040C();
  return sub_1AE926FA0();
}

void ViewService.SportsSchedulesView.SportsScheduleTriple.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1AE501548(&qword_1EEDA4B28);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE88040C();
  sub_1AE926F4C();
  sub_1AE52A494();
  sub_1AE4FD9D4();
  if (!v1)
  {
    sub_1AE5C7844();
    sub_1AE4F979C();
    sub_1AE667C78();
    sub_1AE4FD9D4();
    sub_1AE4F979C();
    sub_1AE926C88();
    sub_1AE926CA0();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  sub_1AE4FCE0C();
}

void ViewService.SportsSchedulesView.SportsScheduleTriple.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;

  v5 = sub_1AE501548((uint64_t *)&unk_1EEDA4B40);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F90F4();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE88040C();
  sub_1AE926F34();
  if (v2)
  {
    v6 = 0;
  }
  else
  {
    sub_1AE52A458();
    sub_1AE880ED8();
    sub_1AE509798();
    sub_1AE5C77CC();
    sub_1AE50A7DC();
    v7 = sub_1AE667FBC();
    sub_1AE4F66CC();
    sub_1AE4F6804();
    sub_1AE880ED8();
    sub_1AE509798();
    if (!v7)
    {
      sub_1AE50A7DC();
      swift_bridgeObjectRetain();
      sub_1AE4F6804();
      sub_1AE4F7AA0();
      v8 = sub_1AE926BB0();
      v10 = v9;
      v13 = v8;
      swift_bridgeObjectRetain();
      sub_1AE4F7AA0();
      sub_1AE926BC8();
      v12 = v11;
      sub_1AE4FE28C();
      sub_1AE4F66CC();
      sub_1AE4F6804();
      sub_1AE4FB930();
      sub_1AE4F67AC();
      sub_1AE4F9038();
      sub_1AE4F66E8();
      *(_QWORD *)a2 = v14;
      *(_QWORD *)(a2 + 8) = v14;
      *(_QWORD *)(a2 + 16) = v15;
      *(_QWORD *)(a2 + 24) = v16;
      *(_QWORD *)(a2 + 32) = v17;
      *(_WORD *)(a2 + 40) = v18;
      *(_QWORD *)(a2 + 48) = v14;
      *(_QWORD *)(a2 + 56) = v14;
      *(_QWORD *)(a2 + 64) = v15;
      *(_QWORD *)(a2 + 72) = v16;
      *(_QWORD *)(a2 + 80) = v17;
      *(_WORD *)(a2 + 88) = v18;
      *(_QWORD *)(a2 + 96) = v13;
      *(_QWORD *)(a2 + 104) = v10;
      *(_QWORD *)(a2 + 112) = v12;
      sub_1AE4F9260();
      sub_1AE4F76D8();
      sub_1AE4F6728();
      sub_1AE4F66E8();
      sub_1AE4F67AC();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AE4FE28C();
    sub_1AE4F67AC();
    sub_1AE4F66E8();
    v6 = 1;
  }
  sub_1AE4F9260();
  if (v6)
  {
    sub_1AE4F6728();
    sub_1AE4F66E8();
  }
LABEL_6:
  sub_1AE506FAC();
  sub_1AE4FCE0C();
}

void sub_1AE87EFC8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ViewService.SportsSchedulesView.SportsScheduleTriple.init(from:)(a1, a2);
}

void sub_1AE87EFDC(_QWORD *a1)
{
  ViewService.SportsSchedulesView.SportsScheduleTriple.encode(to:)(a1);
}

uint64_t sub_1AE87EFF0()
{
  sub_1AE880AF0();
  return sub_1AE924DA4();
}

uint64_t sub_1AE87F040()
{
  uint64_t v0;

  v0 = aGraphFts[0];
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1AE87F088()
{
  return 0x6870617267;
}

void ViewService.SportsSchedulesView.enumerateGames(in:block:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[6];
  _QWORD v28[15];
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;
  _QWORD v32[2];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[3];
  uint64_t v38;

  v7 = *(_OWORD *)(v3 + 16);
  v30[0] = *(_OWORD *)v3;
  v30[1] = v7;
  v31 = *(_QWORD *)(v3 + 32);
  sub_1AE924864();
  v9 = v8;
  sub_1AE501548((uint64_t *)&unk_1ED30D890);
  sub_1AE924864();
  if (v9 > v10)
  {
    __break(1u);
  }
  else
  {
    v38 = a2;
    sub_1AE501548((uint64_t *)&unk_1ED30FFC0);
    v11 = sub_1AE880E40();
    *(double *)&v12 = sub_1AE4FF4AC(v11, (__n128)xmmword_1AE933BD0);
    v32[0] = 0;
    v32[1] = v13;
    v33 = v12;
    v34 = v12;
    v35 = v12;
    v36 = v12;
    v37[0] = v12;
    *(_OWORD *)((char *)v37 + 9) = v12;
    v14 = sub_1AE4FEA14();
    MEMORY[0x1E0C80A78](v14);
    sub_1AE509294((uint64_t)v28);
    *(_QWORD *)(v15 - 16) = v32;
    sub_1AE501548(&qword_1ED30D9C8);
    sub_1AE924CCC();
    sub_1AE4F66E8();
    if (!v4)
    {
      v16 = v29;
      v17 = *(_QWORD *)(v29 + 16);
      if (v17)
      {
        v28[0] = a3;
        v29 = MEMORY[0x1E0DEE9D8];
        sub_1AE880E78();
        v18 = v29;
        v19 = *(_QWORD *)(v29 + 16);
        v20 = 32;
        do
        {
          v21 = *(_QWORD *)(v16 + v20);
          v29 = v18;
          if (v19 >= *(_QWORD *)(v18 + 24) >> 1)
          {
            sub_1AE5219D8();
            v18 = v29;
          }
          *(_QWORD *)(v18 + 16) = v19 + 1;
          *(_QWORD *)(v18 + 8 * v19 + 32) = v21;
          v20 += 120;
          ++v19;
          --v17;
        }
        while (v17);
        sub_1AE4F66E8();
        a3 = v28[0];
      }
      else
      {
        sub_1AE4F66E8();
      }
      sub_1AE898248();
      sub_1AE6A183C((uint64_t)v30);
      v22 = sub_1AE87B01C();
      sub_1AE4F66E8();
      sub_1AE62C418(v22);
      v24 = v23;
      sub_1AE501548(&qword_1ED30D888);
      swift_initStackObject();
      sub_1AE6A183C((uint64_t)v30);
      v25 = sub_1AE527D10();
      sub_1AE501548(qword_1ED30D930);
      swift_initStackObject();
      v26 = sub_1AE527CC8(v24);
      MEMORY[0x1E0C80A78](v26);
      v27[2] = v25;
      v27[3] = v38;
      v27[4] = a3;
      sub_1AE87B8EC((uint64_t)sub_1AE880448, (uint64_t)v27);
      sub_1AE4FC564();
      swift_release();
    }
    sub_1AE4FEE48();
  }
}

uint64_t ViewService.SportsSchedulesView.enumerateAllGames(block:)()
{
  uint64_t v0;
  __int128 v1;
  _OWORD v3[2];
  uint64_t v4;

  v1 = *(_OWORD *)(v0 + 16);
  v3[0] = *(_OWORD *)v0;
  v3[1] = v1;
  v4 = *(_QWORD *)(v0 + 32);
  sub_1AE501548(&qword_1ED30D888);
  swift_initStackObject();
  sub_1AE6A183C((uint64_t)v3);
  sub_1AE527D10();
  swift_retain();
  sub_1AE69F794();
  return sub_1AE4FC564();
}

uint64_t sub_1AE87F3FC()
{
  char v0;

  sub_1AE87F414();
  return v0 & 1;
}

void sub_1AE87F414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t *, _QWORD *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t *, _QWORD *);
  _QWORD v53[11];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  sub_1AE4F67EC();
  v51 = v5;
  v52 = v6;
  v7 = sub_1AE880E88();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F683C();
  sub_1AE501548(&qword_1EED9FB98);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F90F4();
  v10 = sub_1AE501548(&qword_1EEDA4BB0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE5056D0();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - v13;
  sub_1AE56DBEC(v3, v2, &qword_1EED9FB98);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, 1, v10) == 1)
  {
    v15 = &qword_1EED9FB98;
    v16 = v2;
LABEL_9:
    sub_1AE52FBE8(v16, v15);
    goto LABEL_10;
  }
  sub_1AE880B7C(v2, (uint64_t)v14);
  sub_1AE56DBEC((uint64_t)v14, (uint64_t)v4, &qword_1EEDA4BB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v54 = *v4;
    sub_1AE501548((uint64_t *)&unk_1ED319C60);
    v17 = swift_willThrowTypedImpl();
LABEL_5:
    sub_1AE509278(v17, &qword_1EEDA4BB0);
LABEL_10:
    sub_1AE506FAC();
    sub_1AE4F667C();
    return;
  }
  sub_1AE880BC4((uint64_t)v4, v1);
  v18 = *(_QWORD *)(v1 + *(int *)(v7 + 48));
  if (*(_QWORD *)(v18 + 16) <= 2uLL || *(_BYTE *)(v18 + 88) == 1)
    goto LABEL_8;
  sub_1AE5067F0(*(_QWORD *)(v18 + 80));
  if (v0)
  {
    v17 = sub_1AE880EAC();
    goto LABEL_5;
  }
  v19 = v55;
  if (!v55)
  {
LABEL_8:
    sub_1AE880EAC();
    v15 = &qword_1EEDA4BB0;
    v16 = (uint64_t)v14;
    goto LABEL_9;
  }
  if (*(_QWORD *)(v18 + 16) >= 2uLL)
  {
    v20 = v54;
    v21 = v56;
    v22 = v62;
    if (*(_BYTE *)(v18 + 152) == 1)
    {
      sub_1AE506490();
    }
    else
    {
      v44 = v64;
      v45 = v63;
      v46 = v57;
      v47 = v58;
      v48 = v59;
      v49 = v60;
      v50 = v61;
      sub_1AE5067F0(*(_QWORD *)(v18 + 144));
      v25 = v55;
      v26 = v21;
      v27 = v20;
      if (v55)
      {
        v43 = v54;
        v42 = v56;
        v41 = v57;
        v40 = v58;
        v39 = v59;
        v38 = v60;
        v37 = v61;
        v28 = v63;
        v35 = v62;
        v29 = v64;
        v54 = v20;
        v55 = v19;
        v56 = v26;
        v57 = v46;
        v58 = v47;
        v59 = v48;
        v60 = v49;
        v61 = v50;
        v62 = v22;
        v63 = v45;
        v64 = v44;
        v53[0] = v43;
        v53[1] = v25;
        v53[2] = v42;
        v53[3] = v41;
        v53[4] = v40;
        v53[5] = v39;
        v53[6] = v38;
        v53[7] = v37;
        v53[8] = v35;
        v53[9] = v28;
        v53[10] = v29;
        v30 = v25;
        v36 = v27;
        v51 = v22;
        v52(v1, &v54, v53);
        v31 = sub_1AE880EAC();
        sub_1AE509278(v31, &qword_1EEDA4BB0);
        sub_1AE698BF0(v43, v30);
        sub_1AE50214C(v36, v19);
        goto LABEL_10;
      }
      sub_1AE507870();
      v34 = v33;
      v35 = v32;
      v24 = v19;
    }
    sub_1AE698BF0(v23, v24);
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1AE87F870@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AE880DF8(a1, a2);
}

void sub_1AE87F884(_QWORD *a1)
{
  if (!*a1)
  {
    sub_1AE924C30();
    sub_1AE5068A4();
  }
  sub_1AE4F6664();
}

void sub_1AE87F8B8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t *v14;
  _BOOL4 v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  __int16 v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  unint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  char v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  _QWORD *v113;
  char *v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  __int16 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v3 = a1[1];
  v4 = sub_1AE926D0C();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1AE88008C(0, (char *)v3, (char *)1, a1);
      return;
    }
    goto LABEL_150;
  }
  v106 = v4;
  sub_1AE519678(v3 / 2);
  v104 = a1;
  v105 = v5;
  v114 = v6;
  v107 = v3;
  if (v3 <= 0)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    v42 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_113:
    if (v42 < 2)
    {
LABEL_126:
      swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(_QWORD *)(v105 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_156;
    }
    v93 = *v104;
    while (1)
    {
      v94 = v42 - 2;
      if (v42 < 2)
        break;
      if (!v93)
        goto LABEL_159;
      v95 = v9;
      v96 = *(_QWORD *)(v9 + 32 + 16 * v94);
      v97 = *(_QWORD *)(v9 + 32 + 16 * (v42 - 1) + 8);
      sub_1AE8801E8((char *)(v93 + 120 * v96), (char *)(v93 + 120 * *(_QWORD *)(v9 + 32 + 16 * (v42 - 1))), v93 + 120 * v97, v114);
      if (v1)
        goto LABEL_109;
      if (v97 < v96)
        goto LABEL_145;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v98 = v95;
      }
      else
      {
        sub_1AE8893F4();
        v98 = v102;
      }
      if (v94 >= *(_QWORD *)(v98 + 16))
        goto LABEL_146;
      v99 = (_QWORD *)(v98 + 32 + 16 * v94);
      *v99 = v96;
      v99[1] = v97;
      v100 = *(_QWORD *)(v98 + 16);
      if (v42 > v100)
        goto LABEL_147;
      v101 = v98;
      memmove((void *)(v98 + 32 + 16 * (v42 - 1)), (const void *)(v98 + 32 + 16 * v42), 16 * (v100 - v42));
      v9 = v101;
      *(_QWORD *)(v101 + 16) = v100 - 1;
      v42 = v100 - 1;
      v3 = v107;
      if (v100 <= 2)
        goto LABEL_126;
    }
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
    return;
  }
  v7 = 0;
  v8 = *a1;
  v103 = v8 + 112;
  v9 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v10 = v7 + 1;
    v110 = v9;
    v111 = v7;
    if (v7 + 1 >= v3)
      goto LABEL_35;
    v11 = (unint64_t *)(v8 + 120 * v10);
    v12 = *v11;
    v13 = v11[6];
    v14 = (unint64_t *)(v8 + 120 * v7);
    if (v12 >= *v14)
    {
      if (v12 == *v14)
      {
        v15 = v13 < v14[6];
        v10 = v7 + 2;
        if (v7 + 2 >= v3)
          goto LABEL_26;
      }
      else
      {
        v10 = v7 + 2;
        if (v7 + 2 >= v3)
          goto LABEL_35;
        v15 = 0;
      }
    }
    else
    {
      v10 = v7 + 2;
      if (v7 + 2 >= v3)
        goto LABEL_28;
      v15 = 1;
    }
    v16 = v3 <= v10 + 1 ? v10 + 1 : v3;
    v17 = (unint64_t *)(v8 + 120 * v10);
    do
    {
      v18 = v12;
      v12 = *v17;
      v19 = v17[6];
      if (*v17 >= v18)
      {
        if (*v17 == v18)
        {
          if (((v15 ^ (v19 >= v13)) & 1) == 0)
            goto LABEL_26;
        }
        else if (v15)
        {
          goto LABEL_27;
        }
      }
      else if (!v15)
      {
        goto LABEL_35;
      }
      v17 += 15;
      ++v10;
      v13 = v19;
    }
    while (v10 < v3);
    v10 = v16;
LABEL_26:
    if (v15)
    {
LABEL_27:
      if (v10 < v7)
        goto LABEL_152;
LABEL_28:
      if (v7 < v10)
      {
        v20 = 120 * v10;
        v21 = v10;
        v22 = v10;
        v23 = v7;
        v24 = 120 * v7;
        do
        {
          if (v23 != --v22)
          {
            if (!v8)
              goto LABEL_158;
            v25 = *(_QWORD *)(v8 + v24 + 32);
            v26 = v8 + v20;
            v27 = *(_WORD *)(v8 + v24 + 40);
            v125 = *(_QWORD *)(v8 + v24 + 80);
            v123 = *(_WORD *)(v8 + v24 + 88);
            v121 = *(_QWORD *)(v8 + v24 + 96);
            v119 = *(_QWORD *)(v8 + v24 + 104);
            v28 = *(_QWORD *)(v8 + v24 + 112);
            v112 = *(_OWORD *)(v8 + v24 + 16);
            v108 = *(_OWORD *)(v8 + v24);
            v115 = *(_OWORD *)(v8 + v24 + 48);
            v117 = *(_OWORD *)(v8 + v24 + 64);
            memmove((void *)(v8 + v24), (const void *)(v8 + v20 - 120), 0x78uLL);
            *(_OWORD *)(v26 - 120) = v108;
            *(_OWORD *)(v26 - 104) = v112;
            *(_QWORD *)(v26 - 88) = v25;
            *(_WORD *)(v26 - 80) = v27;
            *(_OWORD *)(v26 - 72) = v115;
            *(_OWORD *)(v26 - 56) = v117;
            *(_QWORD *)(v26 - 40) = v125;
            *(_WORD *)(v26 - 32) = v123;
            *(_QWORD *)(v26 - 24) = v121;
            *(_QWORD *)(v26 - 16) = v119;
            *(_QWORD *)(v26 - 8) = v28;
          }
          ++v23;
          v20 -= 120;
          v24 += 120;
        }
        while (v23 < v22);
        v3 = v107;
        v10 = v21;
        v7 = v111;
      }
    }
LABEL_35:
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v7))
        goto LABEL_149;
      if (v10 - v7 < v106)
      {
        if (__OFADD__(v7, v106))
          goto LABEL_153;
        if (v7 + v106 >= v3)
          v29 = v3;
        else
          v29 = v7 + v106;
        if (v29 < v7)
          goto LABEL_154;
        if (v10 != v29)
        {
          v30 = (_QWORD *)(v103 + 120 * v10);
          v109 = v29;
          do
          {
            v31 = *(_QWORD *)(v8 + 120 * v10);
            v113 = v30;
            do
            {
              v32 = *(v30 - 29);
              if (v31 >= v32 && (v31 != v32 || *(v30 - 8) >= *(v30 - 23)))
                break;
              if (!v8)
                goto LABEL_155;
              v34 = v8;
              v120 = *(_OWORD *)(v30 - 13);
              v36 = *(v30 - 11);
              v35 = *(v30 - 10);
              v37 = *((_WORD *)v30 - 36);
              v38 = *((_WORD *)v30 - 12);
              v126 = *(v30 - 2);
              v122 = *(v30 - 4);
              v124 = *(v30 - 1);
              v39 = *v30;
              v116 = *((_OWORD *)v30 - 4);
              v118 = *((_OWORD *)v30 - 3);
              memcpy(v30 - 14, v30 - 29, 0x78uLL);
              *(v30 - 15) = v39;
              v30 -= 15;
              *(v30 - 14) = v31;
              *(_OWORD *)(v30 - 13) = v120;
              *(v30 - 11) = v36;
              *(v30 - 10) = v35;
              *((_WORD *)v30 - 36) = v37;
              *((_OWORD *)v30 - 4) = v116;
              *((_OWORD *)v30 - 3) = v118;
              *(v30 - 4) = v122;
              *((_WORD *)v30 - 12) = v38;
              ++v7;
              *(v30 - 2) = v126;
              *(v30 - 1) = v124;
              v8 = v34;
            }
            while (v10 != v7);
            ++v10;
            v7 = v111;
            v30 = v113 + 15;
          }
          while (v10 != v109);
          v10 = v109;
        }
      }
    }
    if (v10 < v7)
      goto LABEL_148;
    v127 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v9 = v110;
    }
    else
    {
      sub_1AE889310(0, *(_QWORD *)(v110 + 16) + 1, 1, (char *)v110);
      v9 = v91;
    }
    v41 = *(_QWORD *)(v9 + 16);
    v40 = *(_QWORD *)(v9 + 24);
    v42 = v41 + 1;
    if (v41 >= v40 >> 1)
    {
      sub_1AE889310(v40 > 1, v41 + 1, 1, (char *)v9);
      v9 = v92;
    }
    *(_QWORD *)(v9 + 16) = v42;
    v43 = v9 + 32;
    v44 = (uint64_t *)(v9 + 32 + 16 * v41);
    *v44 = v111;
    v44[1] = v127;
    if (v41)
      break;
    v42 = 1;
LABEL_103:
    v3 = v107;
    v7 = v127;
    if (v127 >= v107)
      goto LABEL_113;
  }
  while (1)
  {
    v45 = v42 - 1;
    if (v42 >= 4)
    {
      v50 = v43 + 16 * v42;
      v51 = *(_QWORD *)(v50 - 64);
      v52 = *(_QWORD *)(v50 - 56);
      v56 = __OFSUB__(v52, v51);
      v53 = v52 - v51;
      if (v56)
        goto LABEL_133;
      v55 = *(_QWORD *)(v50 - 48);
      v54 = *(_QWORD *)(v50 - 40);
      v56 = __OFSUB__(v54, v55);
      v48 = v54 - v55;
      v49 = v56;
      if (v56)
        goto LABEL_134;
      v57 = v42 - 2;
      v58 = (uint64_t *)(v43 + 16 * (v42 - 2));
      v60 = *v58;
      v59 = v58[1];
      v56 = __OFSUB__(v59, v60);
      v61 = v59 - v60;
      if (v56)
        goto LABEL_135;
      v56 = __OFADD__(v48, v61);
      v62 = v48 + v61;
      if (v56)
        goto LABEL_137;
      if (v62 >= v53)
      {
        v80 = (uint64_t *)(v43 + 16 * v45);
        v82 = *v80;
        v81 = v80[1];
        v56 = __OFSUB__(v81, v82);
        v83 = v81 - v82;
        if (v56)
          goto LABEL_143;
        v73 = v48 < v83;
        goto LABEL_92;
      }
    }
    else
    {
      if (v42 != 3)
      {
        v74 = *(_QWORD *)(v9 + 32);
        v75 = *(_QWORD *)(v9 + 40);
        v56 = __OFSUB__(v75, v74);
        v67 = v75 - v74;
        v68 = v56;
        goto LABEL_86;
      }
      v47 = *(_QWORD *)(v9 + 32);
      v46 = *(_QWORD *)(v9 + 40);
      v56 = __OFSUB__(v46, v47);
      v48 = v46 - v47;
      v49 = v56;
    }
    if ((v49 & 1) != 0)
      goto LABEL_136;
    v57 = v42 - 2;
    v63 = (uint64_t *)(v43 + 16 * (v42 - 2));
    v65 = *v63;
    v64 = v63[1];
    v66 = __OFSUB__(v64, v65);
    v67 = v64 - v65;
    v68 = v66;
    if (v66)
      goto LABEL_138;
    v69 = (uint64_t *)(v43 + 16 * v45);
    v71 = *v69;
    v70 = v69[1];
    v56 = __OFSUB__(v70, v71);
    v72 = v70 - v71;
    if (v56)
      goto LABEL_140;
    if (__OFADD__(v67, v72))
      goto LABEL_142;
    if (v67 + v72 >= v48)
    {
      v73 = v48 < v72;
LABEL_92:
      if (v73)
        v45 = v57;
      goto LABEL_94;
    }
LABEL_86:
    if ((v68 & 1) != 0)
      goto LABEL_139;
    v76 = (uint64_t *)(v43 + 16 * v45);
    v78 = *v76;
    v77 = v76[1];
    v56 = __OFSUB__(v77, v78);
    v79 = v77 - v78;
    if (v56)
      goto LABEL_141;
    if (v79 < v67)
      goto LABEL_103;
LABEL_94:
    v84 = v45 - 1;
    if (v45 - 1 >= v42)
    {
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
      goto LABEL_144;
    }
    if (!v8)
      goto LABEL_157;
    v85 = v9;
    v86 = (uint64_t *)(v43 + 16 * v84);
    v87 = *v86;
    v88 = (_QWORD *)(v43 + 16 * v45);
    v89 = v88[1];
    sub_1AE8801E8((char *)(v8 + 120 * *v86), (char *)(v8 + 120 * *v88), v8 + 120 * v89, v114);
    if (v1)
      break;
    if (v89 < v87)
      goto LABEL_130;
    if (v45 > *(_QWORD *)(v85 + 16))
      goto LABEL_131;
    *v86 = v87;
    *(_QWORD *)(v43 + 16 * v84 + 8) = v89;
    v90 = *(_QWORD *)(v85 + 16);
    if (v45 >= v90)
      goto LABEL_132;
    v42 = v90 - 1;
    memmove((void *)(v43 + 16 * v45), v88 + 2, 16 * (v90 - 1 - v45));
    v9 = v85;
    *(_QWORD *)(v85 + 16) = v90 - 1;
    if (v90 <= 2)
      goto LABEL_103;
  }
LABEL_109:
  swift_bridgeObjectRelease();
  if (v107 < -1)
    goto LABEL_151;
  *(_QWORD *)(v105 + 16) = 0;
  swift_bridgeObjectRelease();
}

char *sub_1AE88008C(char *result, char *a2, char *a3, uint64_t *a4)
{
  char *v4;
  _QWORD *v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v17 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v19 = *a4;
    v5 = (_QWORD *)(*a4 + 120 * (_QWORD)a3 + 112);
    while (2)
    {
      v6 = *(_QWORD *)(v19 + 120 * (_QWORD)v4);
      v7 = v17;
      v18 = v5;
      do
      {
        v8 = *(v5 - 29);
        if (v6 >= v8 && (v6 != v8 || *(v5 - 8) >= *(v5 - 23)))
          break;
        if (!v19)
        {
          __break(1u);
          return result;
        }
        v22 = *(_OWORD *)(v5 - 13);
        v11 = *(v5 - 11);
        v10 = *(v5 - 10);
        v12 = *((_WORD *)v5 - 36);
        v13 = *(v5 - 4);
        v14 = *((_WORD *)v5 - 12);
        v24 = *(v5 - 2);
        v23 = *(v5 - 1);
        v15 = *v5;
        v20 = *((_OWORD *)v5 - 4);
        v21 = *((_OWORD *)v5 - 3);
        result = (char *)memcpy(v5 - 14, v5 - 29, 0x78uLL);
        *(v5 - 15) = v15;
        v5 -= 15;
        *(v5 - 14) = v6;
        *(_OWORD *)(v5 - 13) = v22;
        *(v5 - 11) = v11;
        *(v5 - 10) = v10;
        *((_WORD *)v5 - 36) = v12;
        *((_OWORD *)v5 - 4) = v20;
        *((_OWORD *)v5 - 3) = v21;
        *(v5 - 4) = v13;
        *((_WORD *)v5 - 12) = v14;
        ++v7;
        *(v5 - 2) = v24;
        *(v5 - 1) = v23;
      }
      while (v4 != v7);
      ++v4;
      v5 = v18 + 15;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1AE8801E8(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v14;
  BOOL v15;
  char *v17;
  char *v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 120;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 120;
  if (v9 >= v11)
  {
    sub_1AE51FCD8(a2, (uint64_t)(a3 - (_QWORD)a2) / 120, a4);
    v12 = (unint64_t)&v4[120 * v11];
    if (v7 >= v6 || v10 < 120)
      goto LABEL_45;
    v17 = (char *)(a3 - 120);
    while (1)
    {
      v18 = v17 + 120;
      v19 = *(_QWORD *)(v12 - 120);
      v20 = v6 - 120;
      v21 = *((_QWORD *)v6 - 15);
      if (v19 >= v21 && (v19 == v21 ? (v22 = *(_QWORD *)(v12 - 72) >= *((_QWORD *)v6 - 9)) : (v22 = 1), v22))
      {
        v23 = v18 != (char *)v12 || (unint64_t)v17 >= v12;
        v20 = (char *)(v12 - 120);
        v12 -= 120;
        if (!v23)
          goto LABEL_41;
      }
      else
      {
        v24 = v18 != v6 || v17 >= v6;
        v6 -= 120;
        if (!v24)
          goto LABEL_41;
      }
      memmove(v17, v20, 0x78uLL);
LABEL_41:
      v17 -= 120;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_45;
    }
  }
  sub_1AE51FCD8(a1, (a2 - a1) / 120, a4);
  v12 = (unint64_t)&v4[120 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 120)
  {
    while (*(_QWORD *)v6 < *(_QWORD *)v4 || *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 6) < *((_QWORD *)v4 + 6))
    {
      v14 = v6;
      v15 = v7 == v6;
      v6 += 120;
      if (!v15)
        goto LABEL_14;
LABEL_15:
      v7 += 120;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_20;
    }
    v14 = v4;
    v15 = v7 == v4;
    v4 += 120;
    if (v15)
      goto LABEL_15;
LABEL_14:
    memmove(v7, v14, 0x78uLL);
    goto LABEL_15;
  }
LABEL_20:
  v6 = v7;
LABEL_45:
  sub_1AE51FCD8(v4, (uint64_t)(v12 - (_QWORD)v4) / 120, v6);
  return 1;
}

uint64_t sub_1AE8803AC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AE87C5F0(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(_QWORD, _QWORD))(v2 + 24), *(_QWORD *)(v2 + 32)) & 1;
}

uint64_t sub_1AE8803CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE87D148(a1, *(uint64_t (**)(_OWORD *))(v1 + 16)) & 1;
}

uint64_t sub_1AE8803E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE87DB20(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(uint64_t (**)(uint64_t *))(v1 + 48), *(_QWORD *)(v1 + 56));
}

unint64_t sub_1AE88040C()
{
  unint64_t result;

  result = qword_1EEDA4B30;
  if (!qword_1EEDA4B30)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966890, &_s19SportsSchedulesViewV20SportsScheduleTripleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA4B30);
  }
  return result;
}

uint64_t sub_1AE880448()
{
  char v0;

  sub_1AE87F414();
  return v0 & 1;
}

unint64_t sub_1AE880468(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE88048C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE88048C()
{
  unint64_t result;

  result = qword_1EEDA4B50;
  if (!qword_1EEDA4B50)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SportsSchedulesView, &type metadata for ViewService.SportsSchedulesView);
    atomic_store(result, (unint64_t *)&qword_1EEDA4B50);
  }
  return result;
}

unint64_t sub_1AE8804CC()
{
  unint64_t result;

  result = qword_1EEDA4B58;
  if (!qword_1EEDA4B58)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966714, &type metadata for ViewService.SportsSchedulesView.SportsScheduleTriple);
    atomic_store(result, (unint64_t *)&qword_1EEDA4B58);
  }
  return result;
}

unint64_t sub_1AE880508(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE88052C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE88052C()
{
  unint64_t result;

  result = qword_1EEDA4B60;
  if (!qword_1EEDA4B60)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SportsSchedulesView, &type metadata for ViewService.SportsSchedulesView);
    atomic_store(result, (unint64_t *)&qword_1EEDA4B60);
  }
  return result;
}

void sub_1AE880568()
{
  sub_1AE56CE14(&qword_1EEDA4B68, &qword_1ED30D9C8);
}

void sub_1AE880594()
{
  sub_1AE56CE14(&qword_1EEDA4B70, (uint64_t *)&unk_1EEDA4B78);
}

_UNKNOWN **sub_1AE8805C0()
{
  return &protocol witness table for ViewService.SportsSchedulesView.SportsScheduleTriple;
}

unint64_t sub_1AE8805CC(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AE8805F8();
  result = sub_1AE880634();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AE8805F8()
{
  unint64_t result;

  result = qword_1ED30D908;
  if (!qword_1ED30D908)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SportsSchedulesView.SportsScheduleTriple, &type metadata for ViewService.SportsSchedulesView.SportsScheduleTriple);
    atomic_store(result, (unint64_t *)&qword_1ED30D908);
  }
  return result;
}

unint64_t sub_1AE880634()
{
  unint64_t result;

  result = qword_1ED30D900;
  if (!qword_1ED30D900)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SportsSchedulesView.SportsScheduleTriple, &type metadata for ViewService.SportsSchedulesView.SportsScheduleTriple);
    atomic_store(result, (unint64_t *)&qword_1ED30D900);
  }
  return result;
}

void type metadata accessor for ViewService.SportsSchedulesView()
{
  sub_1AE4F67D4();
}

uint64_t _s19SportsSchedulesViewV20SportsScheduleTripleVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  v5 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v5;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19SportsSchedulesViewV20SportsScheduleTripleVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t _s19SportsSchedulesViewV20SportsScheduleTripleVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t _s19SportsSchedulesViewV20SportsScheduleTripleVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s19SportsSchedulesViewV20SportsScheduleTripleVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ViewService.SportsSchedulesView.SportsScheduleTriple()
{
  sub_1AE4F67D4();
}

void type metadata accessor for ViewService.SportsSchedulesView.SportsScheduleTriple.Columns()
{
  sub_1AE4F67D4();
}

uint64_t _s19SportsSchedulesViewV20SportsScheduleTripleV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1AE8809B0 + 4 * byte_1AE9665FB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1AE8809E4 + 4 * byte_1AE9665F6[v4]))();
}

uint64_t sub_1AE8809E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8809EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8809F4);
  return result;
}

uint64_t sub_1AE880A00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE880A08);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1AE880A0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE880A14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s19SportsSchedulesViewV20SportsScheduleTripleV10CodingKeysOMa()
{
  return &_s19SportsSchedulesViewV20SportsScheduleTripleV10CodingKeysON;
}

unint64_t sub_1AE880A34()
{
  unint64_t result;

  result = qword_1EEDA4B88;
  if (!qword_1EEDA4B88)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966868, &_s19SportsSchedulesViewV20SportsScheduleTripleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA4B88);
  }
  return result;
}

unint64_t sub_1AE880A74()
{
  unint64_t result;

  result = qword_1EEDA4B90;
  if (!qword_1EEDA4B90)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9667D8, &_s19SportsSchedulesViewV20SportsScheduleTripleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA4B90);
  }
  return result;
}

unint64_t sub_1AE880AB4()
{
  unint64_t result;

  result = qword_1EEDA4B98;
  if (!qword_1EEDA4B98)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966800, &_s19SportsSchedulesViewV20SportsScheduleTripleV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA4B98);
  }
  return result;
}

unint64_t sub_1AE880AF0()
{
  unint64_t result;

  result = qword_1EEDA4BA0;
  if (!qword_1EEDA4BA0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.SportsSchedulesView.SportsScheduleTriple, &type metadata for ViewService.SportsSchedulesView.SportsScheduleTriple);
    atomic_store(result, (unint64_t *)&qword_1EEDA4BA0);
  }
  return result;
}

void sub_1AE880B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void (*v4)(uint64_t, void (*)(), _QWORD *);
  _QWORD v5[4];

  v5[3] = a3;
  v4 = *(void (**)(uint64_t, void (*)(), _QWORD *))(v3 + 16);
  v5[2] = a2;
  v4(a1, sub_1AE880B60, v5);
  sub_1AE4FBFF0();
}

void sub_1AE880B60()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  sub_1AE4FD974();
}

uint64_t sub_1AE880B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EEDA4BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE880BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CustomGraphSportsGameEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE880C08(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CustomGraphSportsGameEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

int64_t sub_1AE880C44(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    v10 = *(_QWORD *)(v6 + 8 * v9);
    if (v10)
      return __clz(__rbit64(v10)) + (v9 << 6);
    v11 = (unint64_t)(result + 63) >> 6;
    v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      v10 = *(_QWORD *)(v6 + 8 * v9);
      if (v10)
        return __clz(__rbit64(v10)) + (v9 << 6);
      while (v5 + 3 < v11)
      {
        v10 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1AE880D28(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 104);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), v4);
  return a1;
}

uint64_t sub_1AE880D84(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t *, char *), uint64_t a7)
{
  return sub_1AE87B980(*a1, a2, a3, a4, *a5, a6, a7) & 1;
}

uint64_t sub_1AE880DA4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1AE880D84(a1, a2, a3, *(_QWORD *)(v3 + 16), *(uint64_t **)(v3 + 24), *(uint64_t (**)(uint64_t *, char *))(v3 + 32), *(_QWORD *)(v3 + 40)) & 1;
}

void sub_1AE880DC4()
{
  sub_1AE6A1324();
}

void sub_1AE880DDC()
{
  sub_1AE880DC4();
}

uint64_t sub_1AE880DF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1AE87D7CC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(const void **)(v2 + 48), a2);
}

void sub_1AE880E1C()
{
  sub_1AE880B60();
}

uint64_t sub_1AE880E30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_1AE880E40()
{
  return swift_allocObject();
}

uint64_t sub_1AE880E68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

void sub_1AE880E78()
{
  sub_1AE5219D8();
}

uint64_t sub_1AE880E88()
{
  return type metadata accessor for CustomGraphSportsGameEvent(0);
}

uint64_t sub_1AE880E94()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1AE880EA0()
{
  uint64_t v0;

  return sub_1AE6A1880(*(_QWORD *)(v0 - 352));
}

uint64_t sub_1AE880EAC()
{
  uint64_t v0;

  return sub_1AE880C08(v0);
}

uint64_t sub_1AE880EB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

void sub_1AE880EC0()
{
  sub_1AE51BDFC();
}

uint64_t sub_1AE880ECC()
{
  uint64_t v0;

  return sub_1AE6A183C(v0 + 256);
}

void sub_1AE880EEC()
{
  uint64_t v0;

  sub_1AE880F08();
  qword_1ED3274E8 = v0;
}

void sub_1AE880F08()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (sub_1AE88100C(0x726F775F706F7473, 0xEA00000000007364))
  {
    sub_1AE898878();
  }
  else
  {
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v0 = sub_1AE925B6C();
    sub_1AE4FB608(v0, (uint64_t)qword_1ED31BC90);
    v1 = sub_1AE925B54();
    v2 = sub_1AE9265F8();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_1AE4F2000, v1, v2, "Failed to load stop_words from resources.", v3, 2u);
      MEMORY[0x1AF454C78](v3, -1, -1);
    }

  }
}

uint64_t sub_1AE88100C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  void *v58;
  void *v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  void *v64;
  uint64_t v65;
  unint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v78 = *MEMORY[0x1E0C80C00];
  v4 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1AE924780();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v65 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v65 - v15;
  if (qword_1ED31C450 != -1)
    swift_once();
  sub_1AE523BFC(a1, a2, 1852797802, 0xE400000000000000, (void *)qword_1ED31C4B0);
  if (!v17)
  {
    sub_1AE4FD940((uint64_t)v6, 1);
    goto LABEL_11;
  }
  v18 = v17;
  sub_1AE924744();

  v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v19(v6, v14, v7);
  sub_1AE4FD940((uint64_t)v6, 0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, v7) == 1)
  {
LABEL_11:
    sub_1AE543420((uint64_t)v6);
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v45 = sub_1AE925B6C();
    sub_1AE4FB608(v45, (uint64_t)qword_1ED31BC90);
    swift_bridgeObjectRetain_n();
    v46 = sub_1AE925B54();
    v47 = sub_1AE9265F8();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)sub_1AE4F66A0();
      v73 = (id)sub_1AE4F66A0();
      *(_DWORD *)v48 = 136315138;
      swift_bridgeObjectRetain();
      sub_1AE520ED4(a1, a2, (uint64_t)&v73, v49, v50, v51, v52, v53, v65, v66, (uint64_t)v67, v68, v69, v70, v71, v72, (uint64_t)v73, v74, v75,
        v76);
      v77 = v54;
      sub_1AE92676C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AE4F2000, v46, v47, "Error: Unable to read file %s", v48, 0xCu);
      swift_arrayDestroy();
      sub_1AE4F9064();
    }

    swift_bridgeObjectRelease_n();
    return 0;
  }
  v19(v16, v6, v7);
  sub_1AE9247B0();
  v58 = (void *)MEMORY[0x1AF454348]();
  v59 = (void *)objc_opt_self();
  v60 = (void *)sub_1AE92481C();
  v73 = 0;
  v61 = objc_msgSend(v59, sel_JSONObjectWithData_options_error_, v60, 0, &v73);

  if (!v61)
  {
    v63 = v73;
    v64 = (void *)sub_1AE9246B4();

    swift_willThrow();
    objc_autoreleasePoolPop(v58);
    sub_1AE4FCDF8();
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v20 = sub_1AE925B6C();
    sub_1AE4FB608(v20, (uint64_t)qword_1ED31BC90);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v16, v7);
    v21 = v64;
    v22 = v64;
    v23 = sub_1AE925B54();
    v24 = sub_1AE9265EC();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = sub_1AE4F66A0();
      v67 = (void *)sub_1AE4F66A0();
      v73 = v67;
      *(_DWORD *)v26 = 136315394;
      sub_1AE523C6C();
      HIDWORD(v66) = v25;
      v27 = sub_1AE926D18();
      sub_1AE5032A4(v27, v28, v29, v30, v31, v32, v33, v34, v65, v66, (uint64_t)v67, v68, v69, v70, v71, v72, (uint64_t)v73, v74, v75,
        v76);
      v77 = v35;
      sub_1AE92676C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      *(_WORD *)(v26 + 12) = 2080;
      swift_getErrorValue();
      v36 = sub_1AE926E20();
      sub_1AE5032A4(v36, v37, v38, v39, v40, v41, v42, v43, v65, v66, (uint64_t)v67, v68, v69, v70, v71, v72, (uint64_t)v73, v74, v75,
        v76);
      v77 = v44;
      sub_1AE92676C();
      swift_bridgeObjectRelease();
      sub_1AE4FCDF0();
      sub_1AE4FCDF0();
      _os_log_impl(&dword_1AE4F2000, v23, BYTE4(v66), "Error: Unable to decode file %s with error %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      sub_1AE4F9064();
    }

    sub_1AE4FCDF0();
    sub_1AE4FCDF0();
    v55 = *(void (**)(char *, uint64_t))(v8 + 8);
    v55(v11, v7);
    sub_1AE4FCDF0();
    v55(v16, v7);
    return 0;
  }
  v62 = v73;
  sub_1AE9267E4();
  swift_unknownObjectRelease();
  sub_1AE501548(&qword_1ED30F918);
  if ((swift_dynamicCast() & 1) == 0)
    v77 = 0;
  objc_autoreleasePoolPop(v58);
  v56 = v77;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
  sub_1AE4FCDF8();
  return v56;
}

uint64_t sub_1AE88163C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE4F9094();
  v1 = *(_QWORD *)(v0 + 32);
  if (!v1 || !*(_QWORD *)(v1 + 16))
    return MEMORY[0x1E0DEE9D8];
  sub_1AE4FB75C();
  sub_1AE4F66CC();
  v2 = sub_1AE88D770();
  if ((v3 & 1) == 0)
  {
    sub_1AE4F6648();
    sub_1AE4F9038();
    return MEMORY[0x1E0DEE9D8];
  }
  v4 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v2);
  sub_1AE524998();
  sub_1AE4F6648();
  sub_1AE4F9038();
  sub_1AE4F9094();
  v5 = *(_QWORD *)(v4 + 16);
  sub_1AE4FB75C();
  sub_1AE50A24C();
  return v5;
}

void sub_1AE8816DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  sub_1AE4F9094();
  if (v0[4])
  {
    sub_1AE4F6A24();
    sub_1AE58F7E0();
    v2 = v1;
    sub_1AE4F9038();
    v6 = v2;
    sub_1AE881BE8(&v6);
    sub_1AE4F9038();
    v3 = sub_1AE8819A4(v6);
    sub_1AE4FC564();
    v6 = v3;
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE71D91C((uint64_t)&qword_1ED318BD0);
    sub_1AE88D628();
    sub_1AE4F76D8();
  }
  v6 = 0;
  v7 = 0xE000000000000000;
  sub_1AE92691C();
  v5 = v0[2];
  v4 = v0[3];
  sub_1AE4F6708();
  sub_1AE4F9038();
  v6 = v5;
  v7 = v4;
  sub_1AE4F7838();
  sub_1AE509ECC();
  sub_1AE4F665C();
  sub_1AE925F74();
  sub_1AE926D18();
  sub_1AE925F74();
  sub_1AE4F81B8();
  sub_1AE925F74();
  __asm { BR              X10 }
}

uint64_t sub_1AE8819A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = swift_bridgeObjectRetain() + 48;
  v3 = MEMORY[0x1E0DEE9D8];
  do
  {
    v9 = *(_QWORD *)(v2 - 16);
    v10 = *(_QWORD *)(v2 - 8);
    swift_bridgeObjectRetain_n();
    swift_retain();
    sub_1AE925F74();
    sub_1AE883A94();
    sub_1AE925F74();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE519C48();
      v3 = v6;
    }
    v4 = *(_QWORD *)(v3 + 16);
    if (v4 >= *(_QWORD *)(v3 + 24) >> 1)
    {
      sub_1AE519C48();
      v3 = v7;
    }
    *(_QWORD *)(v3 + 16) = v4 + 1;
    v5 = v3 + 16 * v4;
    *(_QWORD *)(v5 + 32) = v9;
    *(_QWORD *)(v5 + 40) = v10;
    v2 += 24;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t KnosisInternalFact.init(sid:pid:oid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t result;

  sub_1AE509358();
  sub_1AE4F7838();
  sub_1AE4FB764();
  sub_1AE925F74();
  sub_1AE4F6710();
  sub_1AE4FB764();
  sub_1AE4F7838();
  sub_1AE4F6710();
  sub_1AE4FB764();
  sub_1AE925F74();
  result = sub_1AE4F6710();
  *a7 = a1;
  a7[1] = a2;
  a7[2] = 0;
  a7[3] = a1;
  a7[4] = a2;
  a7[5] = 0;
  a7[6] = a3;
  a7[7] = a4;
  a7[8] = a5;
  a7[9] = a6;
  a7[10] = MEMORY[0x1E0DEE9D8];
  return result;
}

void sub_1AE881BE8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AE889404();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1AE8889BC(v5);
  *a1 = v2;
}

void sub_1AE881C50()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_1AE4F9094();
  v1 = *(_QWORD *)(v0 + 32);
  if (v1 && *(_QWORD *)(v1 + 16))
  {
    sub_1AE4F66CC();
    sub_1AE4FB75C();
    sub_1AE88D770();
    if ((v2 & 1) != 0)
      sub_1AE524998();
    sub_1AE4F6648();
    sub_1AE4F9038();
  }
  sub_1AE4FCDE0();
}

void sub_1AE881CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;

  sub_1AE4F9094();
  v4 = *(_QWORD *)(a1 + 32);
  sub_1AE4F9094();
  v5 = *(_QWORD *)(a2 + 32);
  if (v4)
  {
    if (!v5)
      goto LABEL_19;
    sub_1AE4F6708();
    sub_1AE4F6730();
    sub_1AE8104A8();
    v7 = v6;
    sub_1AE4F81B8();
    sub_1AE4F76D8();
    if ((v7 & 1) == 0)
      goto LABEL_19;
  }
  else if (v5)
  {
    goto LABEL_19;
  }
  v8 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (!v8)
      goto LABEL_19;
    swift_retain();
    v9 = sub_1AE50668C();
    v10 = sub_1AE881CC8(v9, v8);
    swift_release();
    swift_release();
    if ((v10 & 1) == 0)
      goto LABEL_19;
  }
  else if (v8)
  {
    goto LABEL_19;
  }
  v11 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if ((v11 || (sub_1AE926D60() & 1) != 0)
    && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48)
    && *(double *)(a1 + 56) == *(double *)(a2 + 56))
  {
    sub_1AE4F9094();
    v12 = *(_QWORD *)(a1 + 72);
    sub_1AE4F9094();
    v13 = *(_QWORD *)(a2 + 72);
    sub_1AE4F66C4();
    sub_1AE4FB75C();
    sub_1AE81066C(v12, v13);
    sub_1AE4F665C();
    sub_1AE4F6648();
  }
LABEL_19:
  sub_1AE88D55C();
}

void sub_1AE881E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  sub_1AE4F9094();
  if (!*(_QWORD *)(v0 + 32))
  {
LABEL_28:
    sub_1AE88D724();
    return;
  }
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1AE64A2FC(v15);
  v1 = v15[0];
  v2 = v15[1];
  v3 = v15[3];
  v4 = v15[4];
  v5 = (unint64_t)(v15[2] + 64) >> 6;
  sub_1AE4F6A24();
  while (1)
  {
    if (v4)
    {
      v6 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v7 = v6 | (v3 << 6);
      goto LABEL_23;
    }
    v8 = v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v8 >= v5)
      goto LABEL_27;
    v9 = *(_QWORD *)(v2 + 8 * v8);
    v10 = v3 + 1;
    if (!v9)
    {
      v10 = v3 + 2;
      if (v3 + 2 >= v5)
        goto LABEL_27;
      v9 = *(_QWORD *)(v2 + 8 * v10);
      if (!v9)
      {
        v10 = v3 + 3;
        if (v3 + 3 >= v5)
          goto LABEL_27;
        v9 = *(_QWORD *)(v2 + 8 * v10);
        if (!v9)
        {
          v10 = v3 + 4;
          if (v3 + 4 >= v5)
            goto LABEL_27;
          v9 = *(_QWORD *)(v2 + 8 * v10);
          if (!v9)
          {
            v10 = v3 + 5;
            if (v3 + 5 >= v5)
              goto LABEL_27;
            v9 = *(_QWORD *)(v2 + 8 * v10);
            if (!v9)
            {
              v10 = v3 + 6;
              if (v3 + 6 >= v5)
                goto LABEL_27;
              v9 = *(_QWORD *)(v2 + 8 * v10);
              if (!v9)
              {
                v11 = v3 + 7;
                while (v11 < v5)
                {
                  v9 = *(_QWORD *)(v2 + 8 * v11++);
                  if (v9)
                  {
                    v10 = v11 - 1;
                    goto LABEL_22;
                  }
                }
LABEL_27:
                sub_1AE50A24C();
                sub_1AE4F6648();
                goto LABEL_28;
              }
            }
          }
        }
      }
    }
LABEL_22:
    v4 = (v9 - 1) & v9;
    v7 = __clz(__rbit64(v9)) + (v10 << 6);
    v3 = v10;
LABEL_23:
    v12 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v7);
    sub_1AE4F9094();
    if (*(_QWORD *)(v12 + 24))
    {
      v13 = swift_retain();
      MEMORY[0x1AF4533D0](v13);
      if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1AE926220();
      sub_1AE92625C();
      sub_1AE9261FC();
    }
  }
  __break(1u);
}

uint64_t sub_1AE881FF4()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 80) & 1) != 0)
    return 1;
  else
    return *(_BYTE *)(v0 + 81) & 1;
}

void sub_1AE882010()
{
  sub_1AE884058((void (*)(_QWORD *__return_ptr))sub_1AE883C4C);
}

BOOL sub_1AE88201C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16) & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000) != 0)
    v2 = HIBYTE(v1) & 0xF;
  return v2 == 0;
}

uint64_t KnosisIndexType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE882064 + 4 * byte_1AE9668E9[*v0]))(1701736302, 0xE400000000000000);
}

unint64_t sub_1AE882064()
{
  return sub_1AE500A1C();
}

uint64_t sub_1AE882074()
{
  return sub_1AE88D4A4(0x47746E657665);
}

unint64_t sub_1AE88209C()
{
  return 0xD00000000000001ALL;
}

void *static KnosisIndexType.allCases.getter()
{
  return &unk_1E5DA72B8;
}

uint64_t sub_1AE8820E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE881C50();
  if (v4)
  {
    v5 = v4;
    sub_1AE4FB9BC();
    sub_1AE4F6804();
    sub_1AE50668C();
    sub_1AE60EE2C();
    swift_endAccess();
    swift_release();
  }
  else
  {
    type metadata accessor for KnosisQueryParam();
    v5 = sub_1AE4F66BC();
    v6 = sub_1AE4F6804();
    sub_1AE885910(v6);
  }
  sub_1AE50668C();
  sub_1AE8821A8(a1, a2, v5);
  return swift_release_n();
}

uint64_t sub_1AE8821A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;

  v7 = (uint64_t *)(v3 + 32);
  sub_1AE4FB9BC();
  if (!*(_QWORD *)(v3 + 32))
  {
    sub_1AE501548(&qword_1EEDA4D88);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AE934250;
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = a2;
    *(_QWORD *)(inited + 48) = a3;
    type metadata accessor for KnosisQueryParam();
    sub_1AE4FB75C();
    sub_1AE524998();
    *v7 = sub_1AE925C98();
    return sub_1AE4F6648();
  }
  result = sub_1AE4FB9BC();
  if (*v7)
  {
    sub_1AE4FB75C();
    v9 = sub_1AE524998();
    sub_1AE654F2C(v9, a1, a2, v10, v11, v12, v13, v14, v16, v17);
    swift_endAccess();
    return sub_1AE4F6648();
  }
  __break(1u);
  return result;
}

IntelligencePlatform::KnosisIndexType_optional __swiftcall KnosisIndexType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  IntelligencePlatform::KnosisIndexType_optional result;

  v2 = v1;
  v3 = sub_1AE926B44();
  sub_1AE4F6648();
  v4 = 9;
  if (v3 < 9)
    v4 = v3;
  *v2 = v4;
  sub_1AE4F6624();
  return result;
}

uint64_t sub_1AE8822F0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD *@<X8>);
  double *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = v1;
    v4 = 0;
    v5 = (double *)(swift_bridgeObjectRetain() + 56);
    while (1)
    {
      v40 = v2;
      v6 = *((_QWORD *)v5 - 3);
      v7 = *((_QWORD *)v5 - 2);
      v8 = *(v5 - 1);
      v9 = *((_QWORD *)v5 + 1);
      v10 = *((_QWORD *)v5 + 2);
      v34 = *((_QWORD *)v5 + 3);
      v35 = *v5;
      v11 = *((_QWORD *)v5 + 4);
      v33 = *((_QWORD *)v5 + 5);
      v12 = *((_QWORD *)v5 + 7);
      v36 = *((_QWORD *)v5 + 6);
      sub_1AE4F6A24();
      sub_1AE4F6A24();
      swift_bridgeObjectRetain_n();
      v39 = v9;
      sub_1AE4F6A24();
      v38 = v10;
      sub_1AE4F6A24();
      v37 = v11;
      sub_1AE4F6A24();
      sub_1AE6263E0((uint64_t)v4);
      swift_isUniquelyReferenced_nonNull_native();
      v13 = *(_QWORD *)(v3 + 16);
      *(_QWORD *)(v3 + 16) = 0x8000000000000000;
      v14 = sub_1AE88D788();
      if (__OFADD__(*(_QWORD *)(v13 + 16), (v15 & 1) == 0))
        break;
      v16 = v14;
      v17 = v15;
      sub_1AE501548(&qword_1EEDA4D50);
      if ((sub_1AE926A54() & 1) != 0)
      {
        v18 = sub_1AE88D788();
        if ((v17 & 1) != (v19 & 1))
          goto LABEL_24;
        v16 = v18;
      }
      *(_QWORD *)(v3 + 16) = v13;
      swift_bridgeObjectRelease();
      v20 = *(_QWORD **)(v3 + 16);
      if ((v17 & 1) == 0)
      {
        sub_1AE88D570((uint64_t)&v20[v16 >> 6]);
        v21 = (_QWORD *)(v20[6] + 16 * v16);
        *v21 = v6;
        v21[1] = v7;
        *(_QWORD *)(v20[7] + 8 * v16) = MEMORY[0x1E0DEE9D8];
        v22 = v20[2];
        v23 = v22 + 1;
        v24 = __OFADD__(v22, 1);
        sub_1AE4F66CC();
        if (v24)
          goto LABEL_23;
        v20[2] = v23;
      }
      swift_bridgeObjectRetain();
      v25 = v20[7];
      sub_1AE4F9038();
      v26 = *(_QWORD *)(v25 + 8 * v16);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v25 + 8 * v16) = v26;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1AE50599C();
        v26 = v31;
        *(_QWORD *)(v25 + 8 * v16) = v31;
      }
      v28 = *(_QWORD *)(v26 + 16);
      if (v28 >= *(_QWORD *)(v26 + 24) >> 1)
      {
        sub_1AE50599C();
        v26 = v32;
        *(_QWORD *)(v25 + 8 * v16) = v32;
      }
      *(_QWORD *)(v26 + 16) = v28 + 1;
      v29 = v26 + 88 * v28;
      *(_QWORD *)(v29 + 32) = v6;
      *(_QWORD *)(v29 + 40) = v7;
      *(double *)(v29 + 48) = v8;
      *(double *)(v29 + 56) = v35;
      *(_QWORD *)(v29 + 64) = v39;
      *(_QWORD *)(v29 + 72) = v38;
      *(_QWORD *)(v29 + 80) = v34;
      *(_QWORD *)(v29 + 88) = v37;
      *(_QWORD *)(v29 + 96) = v33;
      *(_QWORD *)(v29 + 104) = v36;
      *(_QWORD *)(v29 + 112) = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AE4F81B8();
      sub_1AE4F9038();
      sub_1AE4F6648();
      swift_bridgeObjectRelease_n();
      v30 = *(double *)(v3 + 24);
      if (v30 <= v8)
        v30 = v8;
      *(double *)(v3 + 24) = v30;
      v5 += 11;
      v4 = sub_1AE7A43FC;
      v2 = v40 - 1;
      if (v40 == 1)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t KnosisInternalFact.id.getter()
{
  sub_1AE4F66CC();
  return sub_1AE4F7714();
}

void KnosisInternalFact.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  sub_1AE4F6624();
}

uint64_t (*KnosisInternalFact.id.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KnosisInternalFact.description.getter()
{
  sub_1AE92691C();
  sub_1AE505D44();
  sub_1AE4FB930();
  sub_1AE7D3660();
  sub_1AE925F74();
  sub_1AE4F66E8();
  sub_1AE88D69C();
  sub_1AE4F6730();
  sub_1AE5FBF70();
  sub_1AE4F81B8();
  sub_1AE88D69C();
  sub_1AE4F66C4();
  sub_1AE925F74();
  sub_1AE4F76D8();
  sub_1AE88D6A8();
  sub_1AE925F74();
  sub_1AE4FB75C();
  sub_1AE88D414();
  sub_1AE4F81B8();
  sub_1AE4F7838();
  return 979659099;
}

void KnosisInternalFact.init(sid:pid:oid:qpid:qoid:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;

  KnosisInternalFact.init(sid:pid:oid:)(a1, a2, a3, a4, a5, a6, &v49);
  v14 = v50;
  v15 = v51;
  v16 = v52;
  v17 = v53;
  v18 = v56;
  v19 = v57;
  *a9 = v49;
  a9[1] = v14;
  a9[2] = v15;
  a9[3] = v16;
  a9[4] = v17;
  *(_OWORD *)(a9 + 5) = v54;
  *(_OWORD *)(a9 + 7) = v55;
  a9[9] = v18;
  a9[10] = v19;
  a9 += 10;
  sub_1AE4FB930();
  v20 = sub_1AE7D3660();
  v23 = KnosisInternalFact.init(sid:pid:oid:)(v20, v21, a7, a8, a10, a11, v22);
  v24 = v49;
  v25 = v50;
  sub_1AE88D520(v23, v26, v27, v28, v29, v30, v31, v32, v39, v41, v42, v44, v45, v47, v48, v49, v50, v51, v52,
    v53,
    v54,
    *((uint64_t *)&v54 + 1),
    v55);
  v33 = v56;
  v34 = v57;
  sub_1AE8DD27C();
  v35 = *(_QWORD *)(*a9 + 16);
  sub_1AE8DD5C8(v35);
  v36 = *a9;
  *(_QWORD *)(v36 + 16) = v35 + 1;
  v37 = v36 + 88 * v35;
  *(_QWORD *)(v37 + 32) = v24;
  *(_QWORD *)(v37 + 40) = v25;
  sub_1AE88D4EC(v37, v40, v43, v46);
  *(_QWORD *)(v38 + 104) = v33;
  *(_QWORD *)(v38 + 112) = v34;
  sub_1AE505C3C();
}

Swift::Void __swiftcall KnosisInternalFact.addQualifier(qpid:qoid:)(Swift::String qpid, Swift::String qoid)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  sub_1AE88D5D0();
  v6 = v5;
  sub_1AE4FB930();
  sub_1AE4F6730();
  sub_1AE4F66CC();
  v7 = sub_1AE7D3660();
  v10 = KnosisInternalFact.init(sid:pid:oid:)(v7, v8, v6, v4, v3, v2, v9);
  v11 = v35;
  v12 = v36;
  sub_1AE88D520(v10, v13, v14, v15, v16, v17, v18, v19, v25, v27, v28, v30, v31, v33, v34, v35, v36, v37, v38,
    v39,
    v40,
    v41,
    v42);
  sub_1AE8DD27C();
  v20 = *(_QWORD *)(*(_QWORD *)(v2 + 80) + 16);
  sub_1AE8DD5C8(v20);
  v21 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v21 + 16) = v20 + 1;
  v22 = v21 + 88 * v20;
  *(_QWORD *)(v22 + 32) = v11;
  *(_QWORD *)(v22 + 40) = v12;
  sub_1AE88D4EC(v22, v26, v29, v32);
  *(_QWORD *)(v23 + 104) = v43;
  *(_QWORD *)(v23 + 112) = v44;
  *(_QWORD *)(v2 + 80) = v24;
  sub_1AE505C3C();
}

uint64_t static KnosisInternalFact.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1AE926D60();
}

uint64_t KnosisInternalFact.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = v1[5];
  v4 = v1[7];
  v5 = v1[9];
  v7 = v1[10];
  sub_1AE4F81B0();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  sub_1AE926EF8();
  sub_1AE4F6804();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  if (v3)
  {
    sub_1AE88D49C();
    sub_1AE4FB930();
    sub_1AE5FB6B4();
    sub_1AE4F66E8();
    if (v4)
      goto LABEL_3;
LABEL_6:
    sub_1AE88D49C();
    if (v5)
      goto LABEL_4;
LABEL_7:
    sub_1AE88D49C();
    goto LABEL_8;
  }
  sub_1AE88D49C();
  if (!v4)
    goto LABEL_6;
LABEL_3:
  sub_1AE88D49C();
  sub_1AE4F6708();
  sub_1AE925F14();
  sub_1AE4F76D8();
  if (!v5)
    goto LABEL_7;
LABEL_4:
  sub_1AE88D49C();
  sub_1AE4F66C4();
  sub_1AE925F14();
  sub_1AE4F665C();
LABEL_8:
  sub_1AE4FB75C();
  sub_1AE5FB630(a1, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE882A48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x497463656A627573 && a2 == 0xE900000000000044;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x497463656A627573 && a2 == 0xEA00000000006173;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x7461636964657270 && a2 == 0xEB00000000644965;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x44497463656A626FLL && a2 == 0xE800000000000000;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x656966696C617571 && a2 == 0xEA00000000007372)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = sub_1AE926D60();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE882D28(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE882D50 + 4 * byte_1AE9668F2[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1AE882D50()
{
  return 0x65726F6373;
}

uint64_t sub_1AE882D64()
{
  return 0x497463656A627573;
}

uint64_t sub_1AE882D8C()
{
  return 0x7461636964657270;
}

uint64_t sub_1AE882DAC()
{
  return 0x44497463656A626FLL;
}

uint64_t sub_1AE882DC4()
{
  return 0x656966696C617571;
}

uint64_t sub_1AE882DE0()
{
  unsigned __int8 *v0;

  return sub_1AE882D28(*v0);
}

uint64_t sub_1AE882DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE882A48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE882E0C()
{
  sub_1AE88AD3C();
  return sub_1AE926F94();
}

uint64_t sub_1AE882E34()
{
  sub_1AE88AD3C();
  return sub_1AE926FA0();
}

uint64_t KnosisInternalFact.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = sub_1AE501548(&qword_1EEDA4BE0);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F90C8();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE88AD3C();
  sub_1AE926F4C();
  sub_1AE926C88();
  if (v7)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v4);
  sub_1AE926CA0();
  sub_1AE926C88();
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE88BF64((uint64_t)&qword_1EEDA04C8);
  sub_1AE88D75C();
  sub_1AE926C70();
  sub_1AE88D658();
  sub_1AE88D658();
  sub_1AE501548(&qword_1EEDA4858);
  sub_1AE88C0F0((uint64_t)&unk_1EEDA4BF0);
  sub_1AE88D75C();
  sub_1AE926CC4();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 8))(0, v4);
}

void KnosisInternalFact.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AE507374();
  v0 = sub_1AE926EC8();
  sub_1AE88D744(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  sub_1AE926F10();
  sub_1AE88D724();
}

uint64_t sub_1AE883100(_QWORD *a1)
{
  return KnosisInternalFact.encode(to:)(a1);
}

void sub_1AE88311C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AE507374();
  v0 = sub_1AE926EC8();
  sub_1AE88D744(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  sub_1AE926F10();
  sub_1AE88D724();
}

uint64_t static KnosisInternalFact.< infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  BOOL v26;
  char v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[6];
  v4 = a1[7];
  v6 = a1[8];
  v7 = a1[9];
  v9 = *a2;
  v8 = a2[1];
  v11 = a2[6];
  v10 = a2[7];
  v12 = a1[3] == a2[3] && a1[4] == a2[4];
  v13 = a2[9];
  v40 = a2[8];
  if (v12)
    goto LABEL_30;
  sub_1AE4F7714();
  v34 = v15;
  v35 = v14;
  v37 = v7;
  v38 = v13;
  v36 = v6;
  v16 = v8;
  v17 = v9;
  v18 = v3;
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v25 = sub_1AE926D60();
  v11 = v34;
  v10 = v35;
  v5 = v24;
  v4 = v22;
  v2 = v20;
  v3 = v18;
  v9 = v17;
  v8 = v16;
  v6 = v36;
  v7 = v37;
  v13 = v38;
  if ((v25 & 1) != 0)
  {
LABEL_30:
    if (!v4
      || !v10
      || (v5 == v11 ? (v26 = v4 == v10) : (v26 = 0), v26 || (v39 = v2, v27 = sub_1AE926D60(), v2 = v39, (v27 & 1) != 0)))
    {
      if (v7
        && v13
        && (v6 == v40 ? (v28 = v7 == v13) : (v28 = 0),
            !v28 && (sub_1AE88D688(), v30 = v29, v31 = sub_1AE926D60(), v2 = v30, (v31 & 1) == 0)))
      {
        sub_1AE88D688();
      }
      else if (v2 == v9 && v3 == v8)
      {
        return 0;
      }
    }
  }
  return sub_1AE926D60();
}

uint64_t sub_1AE883310(void *__src, const void *a2)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  _BYTE v11[88];
  _BYTE __dst[88];

  memcpy(v11, __src, sizeof(v11));
  memcpy(__dst, a2, sizeof(__dst));
  sub_1AE790D2C(v11, (int)__dst, v3, v4, v5, v6, v7, v8);
  return v9 & 1;
}

uint64_t sub_1AE883364(void *__src, const void *a2)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  _BYTE v11[88];
  _BYTE __dst[88];

  memcpy(v11, __src, sizeof(v11));
  memcpy(__dst, a2, sizeof(__dst));
  sub_1AE790E58(v11, (int)__dst, v3, v4, v5, v6, v7, v8);
  return v9 & 1;
}

uint64_t sub_1AE8833B8(void *__src, const void *a2)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  _BYTE v11[88];
  _BYTE __dst[88];

  memcpy(v11, __src, sizeof(v11));
  memcpy(__dst, a2, sizeof(__dst));
  sub_1AE790C00(v11, (int)__dst, v3, v4, v5, v6, v7, v8);
  return v9 & 1;
}

uint64_t sub_1AE88340C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE4F6730();
  sub_1AE88D414();
  sub_1AE4F81B8();
  sub_1AE925F74();
  v0 = sub_1AE4FB75C();
  sub_1AE889508(v0);
  v2 = v1;
  sub_1AE4F6648();
  MEMORY[0x1AF453400](v2, &type metadata for KnosisInternalFact);
  sub_1AE5058FC();
  sub_1AE50A24C();
  sub_1AE4F6648();
  sub_1AE88D6A8();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE4F6648();
  sub_1AE4F7838();
  return 0;
}

uint64_t KnosisQueryArg.description.getter()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  sub_1AE88D6B4();
  v2 = 0x7461636964657270;
  if (!v3)
    v2 = 0x7463656A626FLL;
  if (v0)
    return v2;
  else
    return v1;
}

uint64_t KnosisQueryArg.rawValue.getter()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  sub_1AE88D6B4();
  v2 = 0x7461636964657270;
  if (!v3)
    v2 = 0x7463656A626FLL;
  if (v0)
    return v2;
  else
    return v1;
}

IntelligencePlatform::KnosisQueryArg_optional __swiftcall KnosisQueryArg.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  IntelligencePlatform::KnosisQueryArg_optional result;

  v2 = v1;
  v3 = sub_1AE926B44();
  sub_1AE4F6648();
  v4 = 3;
  if (v3 < 3)
    v4 = v3;
  *v2 = v4;
  sub_1AE4F6624();
  return result;
}

void sub_1AE883654()
{
  sub_1AE50FE18();
}

void sub_1AE883660()
{
  sub_1AE512B78();
}

uint64_t sub_1AE883668(uint64_t a1)
{
  char *v1;

  return sub_1AE5E9244(a1, *v1);
}

void sub_1AE883670()
{
  sub_1AE54FECC();
}

IntelligencePlatform::KnosisQueryArg_optional sub_1AE883678(Swift::String *a1)
{
  return KnosisQueryArg.init(rawValue:)(*a1);
}

uint64_t sub_1AE883684@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = KnosisQueryArg.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AE8836A8()
{
  sub_1AE88C3B0();
  return sub_1AE926190();
}

uint64_t sub_1AE883704()
{
  sub_1AE88C3B0();
  return sub_1AE926148();
}

void sub_1AE883754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int128 v13;

  v11 = *((_QWORD *)a6 + 2);
  v12 = *((_DWORD *)a6 + 6);
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 88) = a7;
  *(_QWORD *)(v10 + 96) = a8;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = a5;
  *(_QWORD *)(v10 + 56) = 0;
  v13 = *a6;
  *(_QWORD *)(v10 + 64) = 0;
  *(_QWORD *)(v10 + 72) = v11;
  *(_OWORD *)(v10 + 56) = v13;
  *(_DWORD *)(v10 + 80) = v12;
  sub_1AE53F134(0, 0);
  *(_BYTE *)(v10 + 104) = a9;
  *(_BYTE *)(v10 + 105) = a10;
  sub_1AE4F6624();
}

unint64_t sub_1AE8837BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE92691C();
  sub_1AE505D44();
  sub_1AE4F6730();
  sub_1AE88D414();
  sub_1AE4F81B8();
  sub_1AE88D6A8();
  sub_1AE925F74();
  sub_1AE88D5A8();
  sub_1AE5058FC();
  sub_1AE4F76D8();
  sub_1AE88D6A8();
  sub_1AE925F74();
  sub_1AE88D5A8();
  sub_1AE5058FC();
  sub_1AE4F665C();
  if (*(_QWORD *)(v0 + 48))
  {
    sub_1AE524998();
    sub_1AE8816DC();
    sub_1AE5058FC();
    sub_1AE4F81B8();
    sub_1AE5FBF70();
    sub_1AE50A24C();
    sub_1AE4F81B8();
  }
  v1 = *(_QWORD *)(v0 + 64);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 56);
    sub_1AE4F66C4();
    sub_1AE4F6708();
    sub_1AE92691C();
    sub_1AE505D44();
    IntentRequest.description.getter();
    sub_1AE925F74();
    sub_1AE4F66E8();
    sub_1AE53F134(v2, v1);
    sub_1AE509ECC();
    sub_1AE4F665C();
  }
  if (*(_BYTE *)(v0 + 104) == 1)
    sub_1AE925F74();
  if (*(_BYTE *)(v0 + 105) == 1)
    sub_1AE925F74();
  sub_1AE4F7838();
  return 0xD000000000000010;
}

uint64_t sub_1AE883A18()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1AE53F134(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return v0;
}

uint64_t sub_1AE883A54()
{
  sub_1AE883A18();
  return swift_deallocClassInstance();
}

unint64_t sub_1AE883A74()
{
  return sub_1AE8837BC();
}

uint64_t sub_1AE883A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_1AE4F9094();
  if (*(_QWORD *)(v0 + 24))
  {
    v1 = sub_1AE524998();
    v2 = sub_1AE8816DC(v1);
    sub_1AE50A24C();
  }
  else
  {
    sub_1AE4F9094();
    v4 = *(_QWORD *)(v0 + 16);
    v2 = *(_QWORD *)(v4 + 16);
    if (v2)
    {
      if (v2 == 1)
      {
        v2 = *(_QWORD *)(v4 + 32);
        sub_1AE4FB75C();
      }
      else
      {
        sub_1AE4FB75C();
        sub_1AE501548(&qword_1ED319DE0);
        sub_1AE71D91C((uint64_t)&qword_1ED318BD0);
        sub_1AE88D628();
        sub_1AE4F6648();
        sub_1AE5FBF70();
        sub_1AE4F81B8();
        sub_1AE4F7838();
        return 91;
      }
    }
  }
  return v2;
}

uint64_t sub_1AE883BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 56) = 0x3FF0000000000000;
  *(_BYTE *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = sub_1AE925C98();
  *(_WORD *)(v3 + 80) = 514;
  *(_QWORD *)(v3 + 96) = 0;
  *(_QWORD *)(v3 + 104) = 0;
  *(_QWORD *)(v3 + 88) = 0;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  sub_1AE4FB9BC();
  *(_QWORD *)(v3 + 32) = a3;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1AE883C4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t Param;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  int64_t v43;

  v39 = *v1;
  Param = type metadata accessor for KnosisQueryParam();
  v3 = (_QWORD *)sub_1AE925C98();
  sub_1AE4F9094();
  v38 = v1;
  if (v1[4])
  {
    Param = v1[4];
  }
  else
  {
    sub_1AE925C98();
    sub_1AE595C08();
  }
  v40 = Param + 64;
  v4 = 1 << *(_BYTE *)(Param + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(Param + 64);
  v41 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  if (!v6)
    goto LABEL_8;
LABEL_7:
  v42 = (v6 - 1) & v6;
  v43 = v7;
  for (i = __clz(__rbit64(v6)) | (v7 << 6); ; i = __clz(__rbit64(v10)) + (v11 << 6))
  {
    v13 = Param;
    v14 = (uint64_t *)(*(_QWORD *)(Param + 48) + 16 * i);
    v15 = *v14;
    v16 = v14[1];
    sub_1AE4FB764();
    swift_retain();
    sub_1AE884058((void (*)(_QWORD *__return_ptr))sub_1AE885A58);
    v18 = v17;
    swift_isUniquelyReferenced_nonNull_native();
    v19 = sub_1AE536EDC(v15, v16);
    if (__OFADD__(v3[2], (v20 & 1) == 0))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      result = sub_1AE926DE4();
      __break(1u);
      return result;
    }
    v21 = v19;
    v22 = v20;
    sub_1AE501548(&qword_1ED30FD18);
    if ((sub_1AE926A54() & 1) != 0)
    {
      v23 = sub_1AE536EDC(v15, v16);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_40;
      v21 = v23;
    }
    if ((v22 & 1) != 0)
    {
      v25 = v3[7];
      swift_release();
      *(_QWORD *)(v25 + 8 * v21) = v18;
    }
    else
    {
      sub_1AE88D570((uint64_t)&v3[v21 >> 6]);
      v26 = (uint64_t *)(v3[6] + 16 * v21);
      *v26 = v15;
      v26[1] = v16;
      *(_QWORD *)(v3[7] + 8 * v21) = v18;
      v27 = v3[2];
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        goto LABEL_37;
      v3[2] = v29;
      sub_1AE4FB764();
    }
    swift_release();
    sub_1AE4F6710();
    swift_bridgeObjectRelease();
    Param = v13;
    v6 = v42;
    v7 = v43;
    if (v42)
      goto LABEL_7;
LABEL_8:
    v9 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_38;
    if (v9 >= v41)
      goto LABEL_32;
    v10 = *(_QWORD *)(v40 + 8 * v9);
    v11 = v7 + 1;
    if (!v10)
    {
      v11 = v7 + 2;
      if (v7 + 2 >= v41)
        goto LABEL_32;
      v10 = *(_QWORD *)(v40 + 8 * v11);
      if (!v10)
      {
        v11 = v7 + 3;
        if (v7 + 3 >= v41)
          goto LABEL_32;
        v10 = *(_QWORD *)(v40 + 8 * v11);
        if (!v10)
          break;
      }
    }
LABEL_21:
    v42 = (v10 - 1) & v10;
    v43 = v11;
  }
  v12 = v7 + 4;
  if (v7 + 4 < v41)
  {
    v10 = *(_QWORD *)(v40 + 8 * v12);
    if (!v10)
    {
      while (1)
      {
        v11 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_39;
        if (v11 >= v41)
          goto LABEL_32;
        v10 = *(_QWORD *)(v40 + 8 * v11);
        ++v12;
        if (v10)
          goto LABEL_21;
      }
    }
    v11 = v7 + 4;
    goto LABEL_21;
  }
LABEL_32:
  sub_1AE4FB730();
  v30 = sub_1AE4F66BC();
  sub_1AE4F66CC();
  v31 = sub_1AE4F7714();
  sub_1AE883BA0(v31, v32, (uint64_t)v3);
  if (v38[5])
  {
    swift_retain();
    sub_1AE884058((void (*)(_QWORD *__return_ptr))sub_1AE883C4C);
    v34 = v33;
    sub_1AE4FC564();
  }
  else
  {
    v34 = 0;
  }
  *(_QWORD *)(v30 + 40) = v34;
  swift_release();
  *(_QWORD *)(v30 + 48) = v38[6];
  *(_QWORD *)(v30 + 56) = v38[7];
  *(_BYTE *)(v30 + 64) = *((_BYTE *)v38 + 64);
  *(_WORD *)(v30 + 80) = *((_WORD *)v38 + 40);
  sub_1AE4F9094();
  v35 = v38[9];
  sub_1AE4FB9BC();
  *(_QWORD *)(v30 + 72) = v35;
  sub_1AE4FB75C();
  sub_1AE4F9038();
  *(_QWORD *)(v30 + 88) = v38[11];
  swift_bridgeObjectRetain();
  result = sub_1AE4F6648();
  a1[3] = v39;
  *a1 = v30;
  return result;
}

void sub_1AE88404C()
{
  sub_1AE884058((void (*)(_QWORD *__return_ptr))sub_1AE885A58);
}

void sub_1AE884058(void (*a1)(_QWORD *__return_ptr))
{
  _QWORD v1[4];

  a1(v1);
  swift_dynamicCast();
  sub_1AE52FDA4();
}

uint64_t sub_1AE8840B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  char v16;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1936159329 && a2 == 0xE400000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1954047342 && a2 == 0xE400000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x74696D696CLL && a2 == 0xE500000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x746867696577 && a2 == 0xE600000000000000;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x7079547865646E69 && a2 == 0xE900000000000065;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x736D61726170 && a2 == 0xE600000000000000;
              if (v11 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x6465747563657865 && a2 == 0xE800000000000000;
                if (v12 || (sub_1AE926D60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 0x6365784570696B73 && a2 == 0xE800000000000000;
                  if (v13 || (sub_1AE926D60() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    v14 = a1 == 0x6449746C75736572 && a2 == 0xE900000000000073;
                    if (v14 || (sub_1AE926D60() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else if (a1 == 0x656D614E706F76 && a2 == 0xE700000000000000)
                    {
                      swift_bridgeObjectRelease();
                      return 10;
                    }
                    else
                    {
                      v16 = sub_1AE926D60();
                      swift_bridgeObjectRelease();
                      if ((v16 & 1) != 0)
                        return 10;
                      else
                        return 11;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE8844C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE8844EC + 4 * byte_1AE9668F9[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1AE8844EC()
{
  return 1936159329;
}

uint64_t sub_1AE8844F8()
{
  return 1954047342;
}

uint64_t sub_1AE884504()
{
  return 0x74696D696CLL;
}

uint64_t sub_1AE884518()
{
  return 0x746867696577;
}

uint64_t sub_1AE88452C()
{
  return 0x7079547865646E69;
}

uint64_t sub_1AE884548()
{
  return 0x736D61726170;
}

uint64_t sub_1AE88455C()
{
  return 0x6465747563657865;
}

uint64_t sub_1AE884574()
{
  return 0x6449746C75736572;
}

uint64_t sub_1AE884594()
{
  return 0x656D614E706F76;
}

uint64_t sub_1AE8845AC()
{
  return 0x6365784570696B73;
}

uint64_t sub_1AE8845C4()
{
  unsigned __int8 *v0;

  return sub_1AE8844C0(*v0);
}

uint64_t sub_1AE8845CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8840B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8845F0()
{
  sub_1AE88BC88();
  return sub_1AE926F94();
}

uint64_t sub_1AE884618()
{
  sub_1AE88BC88();
  return sub_1AE926FA0();
}

void sub_1AE884640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 40) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v2 = *(_QWORD *)(v1 + 40);
      sub_1AE524998();
      sub_1AE4FB730();
      v1 = v2;
    }
    while (v2);
  }
  sub_1AE4FB730();
  sub_1AE4F6624();
}

uint64_t sub_1AE8846B4()
{
  sub_1AE884640();
  return swift_deallocClassInstance();
}

void sub_1AE8846D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE4F67EC();
  v1 = v0;
  v3 = v2;
  v4 = sub_1AE501548(&qword_1EEDA4C48);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F90C8();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE88BC88();
  sub_1AE926F4C();
  v5 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1AE61B5C0();
  sub_1AE926C88();
  if (!v5)
  {
    swift_bridgeObjectRelease();
    sub_1AE4FB9BC();
    sub_1AE501548(&qword_1EEDA4C58);
    sub_1AE88BCC4();
    sub_1AE88D598();
    sub_1AE88D514();
    sub_1AE88C240((uint64_t)&unk_1EEDA4C70);
    sub_1AE88D598();
    sub_1AE88D514();
    sub_1AE61B5C0();
    sub_1AE926CB8();
    sub_1AE61B5C0();
    sub_1AE926CA0();
    sub_1AE88BD48();
    sub_1AE88D598();
    sub_1AE926CC4();
    sub_1AE4FB9BC();
    sub_1AE501548(&qword_1ED30F918);
    sub_1AE88C2AC((uint64_t)&qword_1EED9B248);
    sub_1AE88D4BC();
    sub_1AE926CC4();
    sub_1AE88D46C(7);
    sub_1AE88D46C(8);
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE88BF64((uint64_t)&qword_1EEDA04C8);
    sub_1AE88D4BC();
    sub_1AE926C70();
    sub_1AE4F6804();
    sub_1AE61B5C0();
    sub_1AE926C40();
  }
  sub_1AE505EFC();
  swift_bridgeObjectRelease();
  sub_1AE4F667C();
}

void sub_1AE8849D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_allocObject();
  sub_1AE884A18(a1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1AE4FC4F8();
}

void sub_1AE884A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_1AE4F67EC();
  v12 = v10;
  v14 = v13;
  sub_1AE501548(&qword_1EEDA4D68);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F90F4();
  *(_QWORD *)(v12 + 32) = 0;
  *(_QWORD *)(v12 + 40) = 0;
  *(_QWORD *)(v12 + 48) = 0;
  *(_QWORD *)(v12 + 56) = 0x3FF0000000000000;
  *(_BYTE *)(v12 + 64) = 0;
  *(_QWORD *)(v12 + 72) = sub_1AE925C98();
  *(_WORD *)(v12 + 80) = 514;
  *(_QWORD *)(v12 + 88) = 0;
  *(_QWORD *)(v12 + 96) = 0;
  *(_QWORD *)(v12 + 104) = 0;
  v21 = (uint64_t)v14;
  sub_1AE4F9858(v14, v14[3]);
  sub_1AE88BC88();
  sub_1AE926F34();
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v12 + 16) = sub_1AE926BB0();
    *(_QWORD *)(v12 + 24) = v16;
    sub_1AE501548(&qword_1EEDA4C58);
    sub_1AE88C1BC();
    sub_1AE88D640();
    sub_1AE4FB9BC();
    *(_QWORD *)(v12 + 32) = v22;
    swift_bridgeObjectRelease();
    sub_1AE88C240((uint64_t)&unk_1ED30FC00);
    sub_1AE88D640();
    *(_QWORD *)(v12 + 40) = v22;
    swift_release();
    *(_QWORD *)(v12 + 48) = sub_1AE926BE0();
    sub_1AE926BC8();
    *(_QWORD *)(v12 + 56) = v17;
    LOBYTE(a10) = 5;
    sub_1AE88C270();
    sub_1AE88D638();
    *(_BYTE *)(v12 + 64) = 4;
    sub_1AE501548(&qword_1ED30F918);
    sub_1AE88C2AC((uint64_t)&qword_1ED30F920);
    sub_1AE88D638();
    sub_1AE4FB9BC();
    *(_QWORD *)(v12 + 72) = a10;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v12 + 80) = sub_1AE88D484(7);
    *(_BYTE *)(v12 + 81) = sub_1AE88D484(8);
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE88BF64((uint64_t)&qword_1ED318F18);
    sub_1AE88D640();
    *(_QWORD *)(v12 + 88) = a10;
    swift_bridgeObjectRelease();
    v18 = sub_1AE926B68();
    v20 = v19;
    sub_1AE88D750();
    *(_QWORD *)(v12 + 96) = v18;
    *(_QWORD *)(v12 + 104) = v20;
    swift_bridgeObjectRelease();
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v21);
  sub_1AE4F667C();
}

void sub_1AE884E5C()
{
  sub_1AE8816DC();
}

void sub_1AE884E7C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_1AE8849D4(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1AE884EA4()
{
  sub_1AE8846D4();
}

void sub_1AE884EC4(uint64_t *a1, uint64_t *a2)
{
  sub_1AE881CC8(*a1, *a2);
}

uint64_t sub_1AE884ED0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x676E69727473 && a2 == 0xE600000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x74616F6C66 && a2 == 0xE500000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1701669236 && a2 == 0xE400000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x64726F7779656BLL && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_1AE926D60();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_1AE88505C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE88508C + 4 * byte_1AE966904[a1]))(0x676E69727473, 0xE600000000000000);
}

uint64_t sub_1AE88508C()
{
  return 0x74616F6C66;
}

uint64_t sub_1AE8850A0()
{
  return 1701669236;
}

uint64_t sub_1AE8850B0()
{
  return 0x64726F7779656BLL;
}

void sub_1AE8850C8()
{
  char v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  sub_1AE4F67EC();
  v8 = v0;
  v2 = v1;
  sub_1AE501548(&qword_1EEDA4CE8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA4CF0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA4CF8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F90C8();
  v6 = sub_1AE501548(&qword_1EEDA4D00);
  MEMORY[0x1E0C80A78](v6);
  sub_1AE501548(&qword_1EEDA4D08);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F6744();
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE88BDFC();
  sub_1AE926F4C();
  __asm { BR              X10 }
}

void sub_1AE885230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_1AE88BEEC();
  sub_1AE4F6974();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_1AE4FBA8C(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8));
  sub_1AE4F667C();
}

_QWORD *sub_1AE885304()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30[9];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  sub_1AE4F67EC();
  v37 = v3;
  v38 = v4;
  v36 = v1;
  v6 = v5;
  v32 = sub_1AE501548(&qword_1EEDA4C98);
  v30[8] = *(_QWORD *)(v32 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  v35 = v8;
  v31 = sub_1AE501548(&qword_1EEDA4CA0);
  v34 = *(_QWORD *)(v31 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F9024();
  v33 = v10;
  v11 = sub_1AE501548(&qword_1EEDA4CA8);
  v30[6] = *(_QWORD *)(v11 - 8);
  v30[7] = v11;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE507460(v13, v30[0]);
  v30[5] = sub_1AE501548(&qword_1EEDA4CB0);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F90C8();
  v15 = sub_1AE501548(&qword_1EEDA4CB8);
  v16 = *(_QWORD **)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9858(v6, v6[3]);
  sub_1AE88BDFC();
  v19 = v36;
  sub_1AE926F34();
  if (!v19)
  {
    v30[1] = v0;
    v30[2] = v2;
    v36 = v16;
    v30[4] = (uint64_t)v6;
    v20 = sub_1AE926C1C();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v30[3] = 0;
      v22 = *(unsigned __int8 *)(v20 + 32);
      sub_1AE50AF34(1, v21, v20, v20 + 32, 0, (2 * v21) | 1);
      v24 = v23;
      v26 = v25;
      swift_bridgeObjectRelease();
      if (v24 == v26 >> 1)
        __asm { BR              X9 }
    }
    v27 = sub_1AE926988();
    swift_allocError();
    v16 = v28;
    sub_1AE501548(&qword_1EED99C38);
    *v16 = &unk_1E5DB8108;
    sub_1AE926B5C();
    sub_1AE92697C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v16, *MEMORY[0x1E0DEC450], v27);
    swift_willThrow();
    sub_1AE4FBA84();
    ((void (*)(char *, uint64_t))v36[1])(v18, v15);
  }
  sub_1AE50AC10();
  return v16;
}

void sub_1AE885620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE88D7C8();
  v2 = *(_QWORD *)(v1 - 120);
  sub_1AE506ADC();
  if (!v0)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 160) + 8))(v2, *(_QWORD *)(v1 - 152));
    sub_1AE4FBA84();
    sub_1AE88D380();
    JUMPOUT(0x1AE88570CLL);
  }
  sub_1AE4FBA84();
  sub_1AE88D380();
  JUMPOUT(0x1AE8855F4);
}

void sub_1AE885658()
{
  uint64_t v0;

  sub_1AE88D7BC();
  sub_1AE506ADC();
  if (v0)
    JUMPOUT(0x1AE885680);
  JUMPOUT(0x1AE8856D4);
}

void sub_1AE885694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE88D77C();
  sub_1AE506ADC();
  *(_QWORD *)(v2 - 184) = v1;
  if (v1)
  {
    sub_1AE4FBA84();
    sub_1AE88D380();
    JUMPOUT(0x1AE8855F4);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 144) + 8))(v0, *(_QWORD *)(v2 - 128));
  sub_1AE4FBA84();
  sub_1AE88D380();
  JUMPOUT(0x1AE88570CLL);
}

uint64_t sub_1AE885714()
{
  unsigned __int8 *v0;

  return sub_1AE88505C(*v0);
}

uint64_t sub_1AE88571C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE884ED0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE885740()
{
  sub_1AE88BDFC();
  return sub_1AE926F94();
}

uint64_t sub_1AE885768()
{
  sub_1AE88BDFC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE885790()
{
  sub_1AE88BEB0();
  return sub_1AE926F94();
}

uint64_t sub_1AE8857B8()
{
  sub_1AE88BEB0();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8857E0()
{
  sub_1AE88BE38();
  return sub_1AE926F94();
}

uint64_t sub_1AE885808()
{
  sub_1AE88BE38();
  return sub_1AE926FA0();
}

uint64_t sub_1AE885830()
{
  sub_1AE88BEEC();
  return sub_1AE926F94();
}

uint64_t sub_1AE885858()
{
  sub_1AE88BEEC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE885880()
{
  sub_1AE88BE74();
  return sub_1AE926F94();
}

uint64_t sub_1AE8858A8()
{
  sub_1AE88BE74();
  return sub_1AE926FA0();
}

_QWORD *sub_1AE8858D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _QWORD *result;

  result = sub_1AE885304();
  if (!v1)
    *a1 = (_BYTE)result;
  return result;
}

void sub_1AE8858F8()
{
  sub_1AE8850C8();
}

void sub_1AE885910(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 32) = 0;
  sub_1AE4FB9BC();
  *(_QWORD *)(v1 + 16) = a1;
  swift_bridgeObjectRelease();
  sub_1AE4FCDE0();
}

void sub_1AE885968(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 32) = 0;
  sub_1AE4FB9BC();
  *(_QWORD *)(v1 + 24) = a1;
  swift_release();
  sub_1AE4FCDE0();
}

uint64_t sub_1AE8859C0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 24) = 0;
  *(_BYTE *)(v3 + 32) = 0;
  sub_1AE4FB9BC();
  *(_QWORD *)(v3 + 16) = a1;
  swift_bridgeObjectRelease();
  sub_1AE4FB9BC();
  *(_QWORD *)(v3 + 24) = a2;
  swift_release();
  *(_BYTE *)(v3 + 32) = a3;
  return v3;
}

uint64_t sub_1AE885A58@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;

  v2 = v1;
  v4 = *v1;
  sub_1AE4F9094();
  v5 = v1[2];
  sub_1AE4F9094();
  if (v1[3])
  {
    sub_1AE4F6730();
    swift_retain();
    sub_1AE884058((void (*)(_QWORD *__return_ptr))sub_1AE883C4C);
    v7 = v6;
    swift_release();
  }
  else
  {
    sub_1AE4F6730();
    v7 = 0;
  }
  v8 = *((_BYTE *)v2 + 32);
  v9 = sub_1AE4F66BC();
  result = sub_1AE8859C0(v5, v7, v8);
  a1[3] = v4;
  *a1 = v9;
  return result;
}

uint64_t sub_1AE885B28(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  v5 = swift_retain();
  a4(v8, v5);
  sub_1AE4FC564();
  sub_1AE4F9858(v8, v8[3]);
  v6 = sub_1AE926D54();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v8);
  return v6;
}

void sub_1AE885B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1AE4F9094();
  v4 = *(_QWORD *)(a1 + 16);
  sub_1AE4F9094();
  sub_1AE4F66C4();
  v5 = sub_1AE4F6730();
  sub_1AE5DCE38(v5, v4);
  v7 = v6;
  sub_1AE4F665C();
  sub_1AE4F81B8();
  if ((v7 & 1) != 0 && *(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32))
  {
    sub_1AE4F9094();
    v8 = *(_QWORD *)(a1 + 24);
    sub_1AE4F9094();
    v9 = *(_QWORD *)(a2 + 24);
    if (v8)
    {
      if (v9)
      {
        type metadata accessor for QueryNode();
        swift_retain();
        v10 = sub_1AE524998();
        sub_1AE881CC8(v10, v9);
        sub_1AE50A24C();
        sub_1AE4FB730();
      }
    }
  }
  sub_1AE88D55C();
}

uint64_t sub_1AE885C68(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x736D726574 && a2 == 0xE500000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x646C696863 && a2 == 0xE500000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7079546D61726170 && a2 == 0xE900000000000065)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AE885DB8(char a1)
{
  if (!a1)
    return 0x736D726574;
  if (a1 == 1)
    return 0x646C696863;
  return 0x7079546D61726170;
}

uint64_t sub_1AE885E0C()
{
  char *v0;

  return sub_1AE885DB8(*v0);
}

uint64_t sub_1AE885E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE885C68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE885E38()
{
  sub_1AE88BD84();
  return sub_1AE926F94();
}

uint64_t sub_1AE885E60()
{
  sub_1AE88BD84();
  return sub_1AE926FA0();
}

uint64_t sub_1AE885E88()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1AE885EAC()
{
  sub_1AE885E88();
  return swift_deallocClassInstance();
}

void sub_1AE885ECC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE50649C();
  sub_1AE501548(&qword_1EEDA4C80);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4FD100();
  sub_1AE88BD84();
  sub_1AE4FC7AC();
  sub_1AE4FB9BC();
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE88BF64((uint64_t)&qword_1EEDA04C8);
  sub_1AE88D6D8();
  sub_1AE926CC4();
  if (!v0)
  {
    sub_1AE4FB9BC();
    type metadata accessor for QueryNode();
    sub_1AE88C240((uint64_t)&unk_1EEDA4C70);
    sub_1AE88D6D8();
    sub_1AE926C70();
    sub_1AE88BDC0();
    sub_1AE926CC4();
  }
  sub_1AE6291A0();
  sub_1AE4FCE34();
}

void sub_1AE886054(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_allocObject();
  sub_1AE886098(a1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  sub_1AE4FC4F8();
}

void sub_1AE886098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE4F67EC();
  v12 = v10;
  v14 = v13;
  sub_1AE501548(&qword_1EEDA4D58);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F683C();
  *(_QWORD *)(v12 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v12 + 24) = 0;
  *(_BYTE *)(v12 + 32) = 0;
  sub_1AE4F9858(v14, v14[3]);
  sub_1AE88BD84();
  sub_1AE926F34();
  if (v11)
  {
    swift_release();
  }
  else
  {
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE88BF64((uint64_t)&qword_1ED318F18);
    sub_1AE88D638();
    sub_1AE4FB9BC();
    *(_QWORD *)(v12 + 16) = v16;
    swift_bridgeObjectRelease();
    type metadata accessor for QueryNode();
    sub_1AE88C240((uint64_t)&unk_1ED30FC00);
    sub_1AE88D640();
    sub_1AE4FB9BC();
    *(_QWORD *)(v12 + 24) = a10;
    swift_release();
    sub_1AE88C180();
    sub_1AE88D638();
    sub_1AE88D588();
    *(_BYTE *)(v12 + 32) = a10;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v14);
  sub_1AE4F667C();
}

void sub_1AE8862B4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_1AE886054(a1);
  if (!v2)
    *a2 = v4;
}

void sub_1AE8862DC()
{
  sub_1AE885ECC();
}

uint64_t sub_1AE8862FC(uint64_t *a1, uint64_t *a2)
{
  char v2;

  sub_1AE885B88(*a1, *a2);
  return v2 & 1;
}

uint64_t sub_1AE88631C()
{
  return sub_1AE883A94();
}

uint64_t KnosisIndexType.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE886364 + 4 * byte_1AE966910[*v0]))(1701736302, 0xE400000000000000);
}

unint64_t sub_1AE886364()
{
  return sub_1AE500A1C();
}

uint64_t sub_1AE886374()
{
  return sub_1AE88D4A4(0x47746E657665);
}

unint64_t sub_1AE88639C()
{
  return 0xD00000000000001ALL;
}

void sub_1AE8863D8(char *a1)
{
  sub_1AE50FFE0(*a1);
}

void sub_1AE8863E4()
{
  unsigned __int8 *v0;

  sub_1AE512BE0(*v0);
}

void sub_1AE8863EC(uint64_t a1)
{
  char *v1;

  sub_1AE5E80C4(a1, *v1);
}

void sub_1AE8863F4(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54F694(a1, *v1);
}

IntelligencePlatform::KnosisIndexType_optional sub_1AE8863FC(Swift::String *a1)
{
  return KnosisIndexType.init(rawValue:)(*a1);
}

uint64_t sub_1AE886408@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = KnosisIndexType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AE88642C()
{
  sub_1AE88C374();
  return sub_1AE926190();
}

uint64_t sub_1AE886488()
{
  sub_1AE88C374();
  return sub_1AE926148();
}

void sub_1AE8864D4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5DA72B8;
}

uint64_t sub_1AE8864E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1936159329 && a2 == 0xE400000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x746963696C706D69 && a2 == 0xEB00000000677241;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6465746165706572 && a2 == 0xEB00000000677241;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 7432043 && a2 == 0xE300000000000000;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x7551646573726170 && a2 == 0xEF65646F4E797265;
              if (v11 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0xD000000000000011 && a2 == 0x80000001AE989EA0 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else if (a1 == 0x656D614E706F76 && a2 == 0xE700000000000000)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else
              {
                v13 = sub_1AE926D60();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 8;
                else
                  return 9;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE8868A8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE8868D4 + 4 * byte_1AE966919[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1AE8868D4()
{
  return 1936159329;
}

uint64_t sub_1AE8868E0()
{
  return 0x746963696C706D69;
}

uint64_t sub_1AE886914()
{
  return 0x7470697263736564;
}

uint64_t sub_1AE886934()
{
  return 7432043;
}

uint64_t sub_1AE886944()
{
  return 0x7551646573726170;
}

unint64_t sub_1AE886968()
{
  return 0xD000000000000011;
}

uint64_t sub_1AE886984()
{
  return 0x656D614E706F76;
}

void sub_1AE88699C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE50649C();
  sub_1AE501548(&qword_1EEDA4D28);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4FD100();
  sub_1AE88C028();
  sub_1AE4FC7AC();
  LOBYTE(v3) = 0;
  sub_1AE4FB9C4();
  if (!v1)
  {
    v3 = *(_QWORD *)(v0 + 16);
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE88BF64((uint64_t)&qword_1EEDA04C8);
    sub_1AE926CC4();
    LOBYTE(v3) = 2;
    sub_1AE4FB9C4();
    LOBYTE(v3) = 3;
    sub_1AE926C94();
    LOBYTE(v3) = 4;
    sub_1AE4FB9C4();
    LOBYTE(v3) = 5;
    sub_1AE4FB9C4();
    sub_1AE88D378(v0 + 80, (uint64_t)&v5);
    sub_1AE88D378((uint64_t)&v5, (uint64_t)&v3);
    type metadata accessor for QueryNode();
    sub_1AE88C240((uint64_t)&unk_1EEDA4C70);
    sub_1AE4F97B8();
    sub_1AE88D378(v0 + 88, (uint64_t)&v4);
    sub_1AE88D378((uint64_t)&v4, (uint64_t)&v3);
    sub_1AE4F97B8();
    LOBYTE(v3) = 8;
    sub_1AE5009A4();
  }
  sub_1AE6291A0();
  sub_1AE4FCE34();
}

void sub_1AE886BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_1AE4F67EC();
  v13 = v12;
  v15 = v14;
  sub_1AE501548(&qword_1ED30FD60);
  sub_1AE88D704();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F90F4();
  v17 = v13[3];
  v18 = sub_1AE4F9858(v13, v17);
  sub_1AE88C028();
  sub_1AE926F34();
  if (!v10)
  {
    v19 = sub_1AE508DF0();
    v21 = v20;
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE88BF64((uint64_t)&qword_1ED318F18);
    sub_1AE4F6730();
    sub_1AE926BEC();
    v39 = v21;
    sub_1AE4F6730();
    v36 = sub_1AE508DF0();
    v17 = v22;
    sub_1AE509358();
    sub_1AE88D7D4();
    v38 = v17;
    v35 = sub_1AE926BBC();
    v33 = sub_1AE508DF0();
    v34 = v19;
    LOBYTE(a10) = 5;
    v24 = v23;
    sub_1AE509358();
    v25 = sub_1AE508DF0();
    LOBYTE(v17) = 1;
    v37 = v26;
    v31 = v25;
    type metadata accessor for QueryNode();
    sub_1AE88C240((uint64_t)&unk_1ED30FC00);
    v28 = v27;
    sub_1AE4F81B0();
    sub_1AE88D5F8();
    sub_1AE88D6F8();
    if (!v28)
    {
      swift_retain();
      sub_1AE88D5F8();
      sub_1AE88D6F8();
      swift_retain();
      sub_1AE88D7D4();
      v32 = sub_1AE926B68();
      v30 = v29;
      sub_1AE501224();
      sub_1AE4F66CC();
      swift_bridgeObjectRelease();
      sub_1AE50AC10();
      swift_bridgeObjectRelease();
      sub_1AE4F6A6C();
      sub_1AE4FFCA0();
      swift_bridgeObjectRelease();
      sub_1AE4F81B8();
      sub_1AE4F67AC();
      sub_1AE88D72C();
      sub_1AE4F76D8();
      *(_QWORD *)v15 = v34;
      *(_QWORD *)(v15 + 8) = v39;
      *(_QWORD *)(v15 + 16) = v11;
      *(_QWORD *)(v15 + 24) = v36;
      *(_QWORD *)(v15 + 32) = v38;
      *(_BYTE *)(v15 + 40) = v35 & 1;
      *(_QWORD *)(v15 + 48) = v33;
      *(_QWORD *)(v15 + 56) = v24;
      *(_QWORD *)(v15 + 64) = v31;
      *(_QWORD *)(v15 + 72) = v37;
      *(_QWORD *)(v15 + 80) = a10;
      *(_QWORD *)(v15 + 88) = a10;
      *(_QWORD *)(v15 + 96) = v32;
      *(_QWORD *)(v15 + 104) = v30;
      goto LABEL_9;
    }
    sub_1AE501224();
    sub_1AE508374();
    sub_1AE50788C();
    sub_1AE88D50C();
    sub_1AE5087F4();
    swift_bridgeObjectRelease();
    sub_1AE50AC10();
    sub_1AE508374();
    swift_bridgeObjectRelease();
    sub_1AE88D50C();
LABEL_13:
    sub_1AE5087F4();
    if ((v17 & 1) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  sub_1AE50AC10();
  sub_1AE88D6EC();
  if (v18)
    goto LABEL_13;
  if ((_DWORD)v17)
LABEL_7:
    sub_1AE506248();
LABEL_8:
  swift_bridgeObjectRelease();
  sub_1AE4FFCA0();
  sub_1AE4F6A6C();
LABEL_9:
  sub_1AE4F667C();
}

uint64_t sub_1AE887024(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x726F74617265706FLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE8870B4()
{
  return 0x726F74617265706FLL;
}

void sub_1AE8870D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v6[2];

  sub_1AE50649C();
  v2 = v1;
  sub_1AE501548(&qword_1EEDA4E90);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4FD100();
  sub_1AE88CEF0();
  sub_1AE4FC7AC();
  v6[1] = v2;
  sub_1AE501548(&qword_1ED30FC18);
  sub_1AE88CF2C((uint64_t)&unk_1EEDA4E98);
  sub_1AE88D434();
  sub_1AE4FBA8C((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1AE501D88();
  sub_1AE4FCE34();
}

void sub_1AE88719C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE50649C();
  sub_1AE88D7E8();
  sub_1AE501548(&qword_1ED30FD58);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE506F10();
  sub_1AE88CEF0();
  sub_1AE4F69D4();
  if (!v0)
  {
    sub_1AE501548(&qword_1ED30FC18);
    sub_1AE88CF2C((uint64_t)&unk_1ED30FC20);
    sub_1AE502178();
    sub_1AE509858();
  }
  sub_1AE4F90EC();
  sub_1AE88D4DC();
  sub_1AE4FCE34();
}

uint64_t sub_1AE88726C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6F697469646E6F63 && a2 == 0xEC00000051474B6ELL;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1936159329 && a2 == 0xE400000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 7432043 && a2 == 0xE300000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x7367616C66 && a2 == 0xE500000000000000;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x46747865746E6F63 && a2 == 0xEF73657275746165;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0xD000000000000012 && a2 == 0x80000001AE989E80 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v11 = a1 == 0x674B646573726170 && a2 == 0xE900000000000071;
              if (v11 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else if (a1 == 0x614E746E65746E69 && a2 == 0xEA0000000000656DLL)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else
              {
                v13 = sub_1AE926D60();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 8;
                else
                  return 9;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE887610(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE88763C + 4 * byte_1AE966922[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1AE88763C()
{
  return 0x6F697469646E6F63;
}

uint64_t sub_1AE88765C()
{
  return 1936159329;
}

uint64_t sub_1AE887668()
{
  return 7432043;
}

uint64_t sub_1AE887678()
{
  return 0x7367616C66;
}

uint64_t sub_1AE88768C()
{
  return 0x46747865746E6F63;
}

unint64_t sub_1AE8876B0()
{
  return 0xD000000000000012;
}

uint64_t sub_1AE8876CC()
{
  return 0x674B646573726170;
}

uint64_t sub_1AE8876E8()
{
  return 0x614E746E65746E69;
}

void sub_1AE887704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE50649C();
  sub_1AE501548(&qword_1EEDA4D10);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4FD100();
  sub_1AE88BF28();
  sub_1AE4FC7AC();
  LOBYTE(v3) = 0;
  sub_1AE4FB9C4();
  if (!v1)
  {
    LOBYTE(v3) = 1;
    sub_1AE4FB9C4();
    v3 = *(_QWORD *)(v0 + 32);
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE88BF64((uint64_t)&qword_1EEDA04C8);
    sub_1AE88D3C8();
    LOBYTE(v3) = 3;
    sub_1AE4FB9C4();
    v3 = *(_QWORD *)(v0 + 56);
    sub_1AE88D3C8();
    sub_1AE88D378(v0 + 64, (uint64_t)&v6);
    sub_1AE88D378((uint64_t)&v6, (uint64_t)&v3);
    sub_1AE88BFEC();
    sub_1AE926C70();
    sub_1AE88D378(v0 + 72, (uint64_t)&v5);
    sub_1AE88D378((uint64_t)&v5, (uint64_t)&v3);
    type metadata accessor for QueryNode();
    sub_1AE88C240((uint64_t)&unk_1EEDA4C70);
    sub_1AE4F97B8();
    sub_1AE88D378(v0 + 80, (uint64_t)&v4);
    sub_1AE88D378((uint64_t)&v4, (uint64_t)&v3);
    sub_1AE4F97B8();
    LOBYTE(v3) = 8;
    sub_1AE5009A4();
  }
  sub_1AE6291A0();
  sub_1AE4FCE34();
}

void sub_1AE887954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  int v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_1AE4F67EC();
  v13 = v12;
  v15 = v14;
  v16 = sub_1AE501548(&qword_1ED30FD48);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F683C();
  v18 = sub_1AE4F9858(v13, v13[3]);
  sub_1AE88BF28();
  sub_1AE926F34();
  if (v10)
  {
    sub_1AE4F907C();
    v18 = 0;
    v11 = 0;
    goto LABEL_5;
  }
  v19 = sub_1AE88D3B4();
  v21 = v20;
  sub_1AE509358();
  v36 = v21;
  v33 = v15;
  v34 = sub_1AE88D3B4();
  v35 = v19;
  v23 = v22;
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE88BF64((uint64_t)&qword_1ED318F18);
  sub_1AE4F6804();
  sub_1AE88D5E0();
  sub_1AE88D738();
  LOBYTE(a10) = 3;
  sub_1AE4F6804();
  v32 = sub_1AE88D3B4();
  v25 = v24;
  sub_1AE509358();
  sub_1AE88D5E0();
  sub_1AE88D738();
  v26 = sub_1AE88BFB0();
  sub_1AE4F6708();
  sub_1AE88D53C();
  if (v26)
  {
    sub_1AE503D1C();
    sub_1AE5087F4();
    sub_1AE506248();
    sub_1AE737420();
    sub_1AE737848();
    sub_1AE4F76D8();
    sub_1AE88D6EC();
  }
  else
  {
    type metadata accessor for QueryNode();
    sub_1AE88C240((uint64_t)&unk_1ED30FC00);
    v28 = v27;
    sub_1AE4F66CC();
    sub_1AE88D610();
    sub_1AE88D53C();
    swift_retain();
    sub_1AE88D610();
    sub_1AE88D53C();
    if (!v28)
    {
      sub_1AE50668C();
      v31 = sub_1AE926B68();
      v30 = v29;
      sub_1AE503D1C();
      sub_1AE4F66CC();
      sub_1AE4F907C();
      swift_bridgeObjectRelease();
      sub_1AE4F682C();
      swift_release();
      sub_1AE508374();
      swift_bridgeObjectRelease();
      sub_1AE4F81B8();
      sub_1AE88D72C();
      sub_1AE4F67AC();
      swift_bridgeObjectRelease();
      *v33 = v35;
      v33[1] = v36;
      v33[2] = v34;
      v33[3] = v23;
      v33[4] = v17;
      v33[5] = v32;
      v33[6] = v25;
      v33[7] = a10;
      v33[8] = a10;
      v33[9] = a10;
      v33[10] = a10;
      v33[11] = v31;
      v33[12] = v30;
      goto LABEL_11;
    }
    sub_1AE503D1C();
    sub_1AE5087F4();
    sub_1AE506248();
    sub_1AE737420();
    sub_1AE737848();
    sub_1AE5FC314();
    sub_1AE508374();
    swift_release();
    v18 = 0;
    v11 = 1;
  }
  sub_1AE4F907C();
  sub_1AE5087F4();
  sub_1AE506248();
  sub_1AE737420();
  sub_1AE737848();
  sub_1AE5FC314();
  if (v26)
  {
LABEL_5:
    if (v11)
      goto LABEL_6;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
LABEL_6:
    sub_1AE4F682C();
    if ((v18 & 1) == 0)
      goto LABEL_11;
    goto LABEL_10;
  }
LABEL_9:
  if (v18)
LABEL_10:
    sub_1AE4FFCA0();
LABEL_11:
  sub_1AE4F667C();
}

uint64_t sub_1AE887E2C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6F52746E65746E69 && a2 == 0xEC00000073657475)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE887EC8()
{
  return 0x6F52746E65746E69;
}

void sub_1AE887EE8()
{
  uint64_t v0;

  sub_1AE50649C();
  sub_1AE501548(&qword_1EEDA4D30);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v0);
  sub_1AE4FD100();
  sub_1AE88BB84();
  sub_1AE4FC7AC();
  sub_1AE501548(&qword_1ED30FC28);
  sub_1AE88C064();
  sub_1AE88D450();
  sub_1AE509858();
  sub_1AE501D88();
  sub_1AE4FCE34();
}

void sub_1AE887F8C()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE50649C();
  sub_1AE88D7E8();
  sub_1AE501548(&qword_1ED30FD68);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE506F10();
  sub_1AE88BB84();
  sub_1AE4F69D4();
  if (!v0)
  {
    sub_1AE501548(&qword_1ED30FC28);
    sub_1AE88BBC0();
    sub_1AE502178();
    sub_1AE509858();
  }
  sub_1AE4F90EC();
  sub_1AE88D4DC();
  sub_1AE4FCE34();
}

uint64_t sub_1AE88803C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6F746172656E6567 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE8880CC()
{
  return 0x6F746172656E6567;
}

void sub_1AE8880E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v6[2];

  sub_1AE50649C();
  v2 = v1;
  sub_1AE501548(&qword_1EEDA4E78);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4FD100();
  sub_1AE88CDE8();
  sub_1AE4FC7AC();
  v6[1] = v2;
  sub_1AE501548(&qword_1EEDA4E60);
  sub_1AE88CE60((uint64_t)&unk_1EEDA4E80);
  sub_1AE88D434();
  sub_1AE4FBA8C((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1AE501D88();
  sub_1AE4FCE34();
}

void sub_1AE8881B4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE50649C();
  sub_1AE88D7E8();
  sub_1AE501548(&qword_1EEDA4E50);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE506F10();
  sub_1AE88CDE8();
  sub_1AE4F69D4();
  if (!v0)
  {
    sub_1AE501548(&qword_1EEDA4E60);
    sub_1AE88CE60((uint64_t)&unk_1EEDA4E68);
    sub_1AE502178();
    sub_1AE509858();
  }
  sub_1AE4F90EC();
  sub_1AE88D4DC();
  sub_1AE4FCE34();
}

uint64_t sub_1AE888284(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE888308()
{
  return 0x7365727574616566;
}

void sub_1AE888320()
{
  uint64_t v0;

  sub_1AE50649C();
  sub_1AE501548(&qword_1EEDA4ED8);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v0);
  sub_1AE4FD100();
  sub_1AE88D1DC();
  sub_1AE4FC7AC();
  sub_1AE501548(&qword_1ED30F918);
  sub_1AE88C2AC((uint64_t)&qword_1EED9B248);
  sub_1AE88D450();
  sub_1AE509858();
  sub_1AE501D88();
  sub_1AE4FCE34();
}

void sub_1AE8883DC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE50649C();
  sub_1AE88D7E8();
  sub_1AE501548(&qword_1EEDA4EC8);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE506F10();
  sub_1AE88D1DC();
  sub_1AE4F69D4();
  if (!v0)
  {
    sub_1AE501548(&qword_1ED30F918);
    sub_1AE88C2AC((uint64_t)&qword_1ED30F920);
    sub_1AE502178();
    sub_1AE509858();
  }
  sub_1AE4F90EC();
  sub_1AE88D4DC();
  sub_1AE4FCE34();
}

uint64_t sub_1AE8884A4()
{
  unsigned __int8 *v0;

  return sub_1AE8868A8(*v0);
}

uint64_t sub_1AE8884AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8864E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8884D0()
{
  sub_1AE88C028();
  return sub_1AE926F94();
}

uint64_t sub_1AE8884F8()
{
  sub_1AE88C028();
  return sub_1AE926FA0();
}

void sub_1AE888520(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v9;
  uint64_t v11[14];

  sub_1AE886BD4(a1, a2, a3, a4, a5, a6, a7, a8, v11[0], v11[1]);
  if (!v9)
    memcpy(a9, v11, 0x70uLL);
}

void sub_1AE888568()
{
  const void *v0;
  _BYTE v1[112];

  memcpy(v1, v0, sizeof(v1));
  sub_1AE88699C();
}

uint64_t sub_1AE8885BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE887024(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE8885E4()
{
  sub_1AE88CEF0();
  return sub_1AE926F94();
}

uint64_t sub_1AE88860C()
{
  sub_1AE88CEF0();
  return sub_1AE926FA0();
}

void sub_1AE888634(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1AE88719C();
  if (!v1)
    *a1 = v3;
}

void sub_1AE88865C()
{
  sub_1AE8870D0();
}

uint64_t sub_1AE888674()
{
  unsigned __int8 *v0;

  return sub_1AE887610(*v0);
}

uint64_t sub_1AE88867C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE88726C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8886A0()
{
  sub_1AE88BF28();
  return sub_1AE926F94();
}

uint64_t sub_1AE8886C8()
{
  sub_1AE88BF28();
  return sub_1AE926FA0();
}

void sub_1AE8886F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t __src[13];

  sub_1AE887954(a1, a2, a3, a4, a5, a6, a7, a8, v11, __src[0]);
  if (!v9)
    memcpy(a9, __src, 0x68uLL);
}

void sub_1AE888738()
{
  const void *v0;
  _BYTE __dst[104];

  memcpy(__dst, v0, sizeof(__dst));
  sub_1AE887704();
}

uint64_t sub_1AE88878C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE887E2C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE8887B4()
{
  sub_1AE88BB84();
  return sub_1AE926F94();
}

uint64_t sub_1AE8887DC()
{
  sub_1AE88BB84();
  return sub_1AE926FA0();
}

void sub_1AE888804(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1AE887F8C();
  if (!v1)
    *a1 = v3;
}

void sub_1AE88882C()
{
  sub_1AE887EE8();
}

uint64_t sub_1AE888848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE88803C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE888870()
{
  sub_1AE88CDE8();
  return sub_1AE926F94();
}

uint64_t sub_1AE888898()
{
  sub_1AE88CDE8();
  return sub_1AE926FA0();
}

void sub_1AE8888C0(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1AE8881B4();
  if (!v1)
    *a1 = v3;
}

void sub_1AE8888E8()
{
  sub_1AE8880E8();
}

uint64_t sub_1AE888904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE888284(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE88892C()
{
  sub_1AE88D1DC();
  return sub_1AE926F94();
}

uint64_t sub_1AE888954()
{
  sub_1AE88D1DC();
  return sub_1AE926FA0();
}

void sub_1AE88897C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1AE8883DC();
  if (!v1)
    *a1 = v3;
}

void sub_1AE8889A4()
{
  sub_1AE888320();
}

void sub_1AE8889BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;

  v3 = a1[1];
  v4 = sub_1AE926D0C();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1AE889078(0, v3, 1, a1);
      return;
    }
    goto LABEL_144;
  }
  v5 = v4;
  sub_1AE519624(v3 / 2);
  v108 = v6;
  v109 = v3;
  v111 = v7;
  v106 = a1;
  if (v3 <= 0)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    v44 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_110:
    v95 = v10;
    if (v44 < 2)
    {
LABEL_121:
      swift_bridgeObjectRelease();
      if (v109 >= -1)
      {
        *(_QWORD *)(v108 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_149;
    }
    v96 = *v106;
    while (1)
    {
      v97 = v44 - 2;
      if (v44 < 2)
        break;
      if (!v96)
        goto LABEL_153;
      v98 = v95;
      v99 = *(_QWORD *)(v95 + 32 + 16 * v97);
      v100 = *(_QWORD *)(v95 + 32 + 16 * (v44 - 1) + 8);
      sub_1AE889154((char *)(v96 + 24 * v99), (char *)(v96 + 24 * *(_QWORD *)(v95 + 32 + 16 * (v44 - 1))), v96 + 24 * v100, v111);
      if (v1)
        goto LABEL_106;
      if (v100 < v99)
        goto LABEL_139;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE8893F4();
        v98 = v103;
      }
      if (v97 >= *(_QWORD *)(v98 + 16))
        goto LABEL_140;
      v101 = (_QWORD *)(v98 + 32 + 16 * v97);
      *v101 = v99;
      v101[1] = v100;
      v102 = *(_QWORD *)(v98 + 16);
      if (v44 > v102)
        goto LABEL_141;
      memmove((void *)(v98 + 32 + 16 * (v44 - 1)), (const void *)(v98 + 32 + 16 * v44), 16 * (v102 - v44));
      v95 = v98;
      *(_QWORD *)(v98 + 16) = v102 - 1;
      v44 = v102 - 1;
      if (v102 <= 2)
        goto LABEL_121;
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  v107 = v5;
  v8 = 0;
  v9 = *a1;
  v104 = *a1 - 24;
  v105 = *a1 + 8;
  v10 = MEMORY[0x1E0DEE9D8];
  v110 = v9;
  while (1)
  {
    v11 = v8++;
    if (v8 >= v3)
      goto LABEL_32;
    v12 = (uint64_t *)(v9 + 24 * v8);
    v13 = *v12;
    v14 = v12[1];
    v15 = (_QWORD *)(v9 + 24 * v11);
    if (v13 == *v15 && v14 == v15[1])
    {
      v18 = v11 + 2;
      if (v11 + 2 >= v109)
        goto LABEL_31;
      v17 = 0;
    }
    else
    {
      v17 = sub_1AE926D60();
      v18 = v11 + 2;
      if (v11 + 2 >= v109)
        goto LABEL_23;
    }
    v19 = (_QWORD *)(v105 + 24 * v18);
    do
    {
      v20 = (_QWORD *)(v9 + 24 * v8);
      if (*(v19 - 1) == *v20 && *v19 == v20[1])
      {
        if ((v17 & 1) != 0)
          goto LABEL_24;
      }
      else if (((v17 ^ sub_1AE926D60()) & 1) != 0)
      {
        goto LABEL_23;
      }
      v19 += 3;
      v22 = v18 + 1;
      v8 = v18;
      v18 = v22;
    }
    while (v22 < v109);
    v18 = v22;
LABEL_23:
    v8 = v18;
    if ((v17 & 1) != 0)
    {
LABEL_24:
      if (v18 < v11)
        goto LABEL_148;
      if (v11 < v18)
      {
        v23 = 24 * v18;
        v24 = 24 * v11;
        v25 = v18;
        v26 = v11;
        do
        {
          if (v26 != --v25)
          {
            if (!v9)
              goto LABEL_152;
            v27 = v9 + v24;
            v28 = v9 + v23;
            v29 = *(_QWORD *)(v9 + v24);
            v30 = *(_OWORD *)(v9 + v24 + 8);
            v31 = *(_OWORD *)(v9 + v23 - 24);
            *(_QWORD *)(v27 + 16) = *(_QWORD *)(v9 + v23 - 8);
            *(_OWORD *)v27 = v31;
            *(_QWORD *)(v28 - 24) = v29;
            *(_OWORD *)(v28 - 16) = v30;
          }
          ++v26;
          v23 -= 24;
          v24 += 24;
        }
        while (v26 < v25);
      }
LABEL_31:
      v8 = v18;
    }
LABEL_32:
    if (v8 < v109)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_143;
      if (v8 - v11 < v107)
      {
        if (__OFADD__(v11, v107))
          goto LABEL_146;
        if (v11 + v107 >= v109)
          v32 = v109;
        else
          v32 = v11 + v107;
        if (v32 < v11)
          goto LABEL_147;
        if (v8 != v32)
        {
          v33 = v104 + 24 * v8;
          do
          {
            v34 = (uint64_t *)(v9 + 24 * v8);
            v35 = *v34;
            v36 = v34[1];
            v37 = v11;
            v38 = v33;
            do
            {
              v39 = v35 == *(_QWORD *)v38 && v36 == *(_QWORD *)(v38 + 8);
              if (v39 || (sub_1AE926D60() & 1) == 0)
                break;
              if (!v9)
                goto LABEL_150;
              v40 = *(_OWORD *)(v38 + 32);
              v41 = *(_QWORD *)(v38 + 16);
              v35 = *(_QWORD *)(v38 + 24);
              *(_OWORD *)(v38 + 24) = *(_OWORD *)v38;
              *(_QWORD *)(v38 + 40) = v41;
              *(_QWORD *)v38 = v35;
              *(_OWORD *)(v38 + 8) = v40;
              v36 = v40;
              v38 -= 24;
              ++v37;
            }
            while (v8 != v37);
            ++v8;
            v33 += 24;
          }
          while (v8 != v32);
          v8 = v32;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE889310(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
      v10 = v93;
    }
    v43 = *(_QWORD *)(v10 + 16);
    v42 = *(_QWORD *)(v10 + 24);
    v44 = v43 + 1;
    if (v43 >= v42 >> 1)
    {
      sub_1AE889310(v42 > 1, v43 + 1, 1, (char *)v10);
      v10 = v94;
    }
    *(_QWORD *)(v10 + 16) = v44;
    v45 = v10 + 32;
    v46 = (uint64_t *)(v10 + 32 + 16 * v43);
    *v46 = v11;
    v46[1] = v8;
    if (v43)
      break;
    v44 = 1;
    v9 = v110;
LABEL_101:
    v3 = v109;
    if (v8 >= v109)
      goto LABEL_110;
  }
  v9 = v110;
  while (1)
  {
    v47 = v44 - 1;
    if (v44 >= 4)
    {
      v52 = v45 + 16 * v44;
      v53 = *(_QWORD *)(v52 - 64);
      v54 = *(_QWORD *)(v52 - 56);
      v58 = __OFSUB__(v54, v53);
      v55 = v54 - v53;
      if (v58)
        goto LABEL_127;
      v57 = *(_QWORD *)(v52 - 48);
      v56 = *(_QWORD *)(v52 - 40);
      v58 = __OFSUB__(v56, v57);
      v50 = v56 - v57;
      v51 = v58;
      if (v58)
        goto LABEL_128;
      v59 = v44 - 2;
      v60 = (uint64_t *)(v45 + 16 * (v44 - 2));
      v62 = *v60;
      v61 = v60[1];
      v58 = __OFSUB__(v61, v62);
      v63 = v61 - v62;
      if (v58)
        goto LABEL_129;
      v58 = __OFADD__(v50, v63);
      v64 = v50 + v63;
      if (v58)
        goto LABEL_131;
      if (v64 >= v55)
      {
        v82 = (uint64_t *)(v45 + 16 * v47);
        v84 = *v82;
        v83 = v82[1];
        v58 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v58)
          goto LABEL_137;
        v75 = v50 < v85;
        goto LABEL_90;
      }
    }
    else
    {
      if (v44 != 3)
      {
        v76 = *(_QWORD *)(v10 + 32);
        v77 = *(_QWORD *)(v10 + 40);
        v58 = __OFSUB__(v77, v76);
        v69 = v77 - v76;
        v70 = v58;
        goto LABEL_84;
      }
      v49 = *(_QWORD *)(v10 + 32);
      v48 = *(_QWORD *)(v10 + 40);
      v58 = __OFSUB__(v48, v49);
      v50 = v48 - v49;
      v51 = v58;
    }
    if ((v51 & 1) != 0)
      goto LABEL_130;
    v59 = v44 - 2;
    v65 = (uint64_t *)(v45 + 16 * (v44 - 2));
    v67 = *v65;
    v66 = v65[1];
    v68 = __OFSUB__(v66, v67);
    v69 = v66 - v67;
    v70 = v68;
    if (v68)
      goto LABEL_132;
    v71 = (uint64_t *)(v45 + 16 * v47);
    v73 = *v71;
    v72 = v71[1];
    v58 = __OFSUB__(v72, v73);
    v74 = v72 - v73;
    if (v58)
      goto LABEL_134;
    if (__OFADD__(v69, v74))
      goto LABEL_136;
    if (v69 + v74 >= v50)
    {
      v75 = v50 < v74;
LABEL_90:
      if (v75)
        v47 = v59;
      goto LABEL_92;
    }
LABEL_84:
    if ((v70 & 1) != 0)
      goto LABEL_133;
    v78 = (uint64_t *)(v45 + 16 * v47);
    v80 = *v78;
    v79 = v78[1];
    v58 = __OFSUB__(v79, v80);
    v81 = v79 - v80;
    if (v58)
      goto LABEL_135;
    if (v81 < v69)
      goto LABEL_101;
LABEL_92:
    v86 = v47 - 1;
    if (v47 - 1 >= v44)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v9)
      goto LABEL_151;
    v87 = v9;
    v88 = (uint64_t *)(v45 + 16 * v86);
    v89 = *v88;
    v90 = (_QWORD *)(v45 + 16 * v47);
    v91 = v90[1];
    sub_1AE889154((char *)(v87 + 24 * *v88), (char *)(v87 + 24 * *v90), v87 + 24 * v91, v111);
    if (v1)
      break;
    if (v91 < v89)
      goto LABEL_124;
    if (v47 > *(_QWORD *)(v10 + 16))
      goto LABEL_125;
    *v88 = v89;
    *(_QWORD *)(v45 + 16 * v86 + 8) = v91;
    v92 = *(_QWORD *)(v10 + 16);
    if (v47 >= v92)
      goto LABEL_126;
    v44 = v92 - 1;
    memmove((void *)(v45 + 16 * v47), v90 + 2, 16 * (v92 - 1 - v47));
    *(_QWORD *)(v10 + 16) = v92 - 1;
    v75 = v92 > 2;
    v9 = v110;
    if (!v75)
      goto LABEL_101;
  }
LABEL_106:
  swift_bridgeObjectRelease();
  if (v109 < -1)
    goto LABEL_145;
  *(_QWORD *)(v108 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1AE889078(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 24 * a3 - 24;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 24 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = v8;
      do
      {
        if (result == *(_QWORD *)v12 && v10 == *(_QWORD *)(v12 + 8))
          break;
        result = sub_1AE926D60();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        v14 = *(_OWORD *)(v12 + 32);
        v15 = *(_QWORD *)(v12 + 16);
        result = *(_QWORD *)(v12 + 24);
        *(_OWORD *)(v12 + 24) = *(_OWORD *)v12;
        *(_QWORD *)(v12 + 40) = v15;
        *(_QWORD *)v12 = result;
        *(_OWORD *)(v12 + 8) = v14;
        v10 = v14;
        v12 -= 24;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 24;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1AE889154(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v14;
  char *v15;
  __int128 v16;
  unint64_t v19;
  char *v20;
  char *v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  __int128 v25;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  if (v9 >= v11)
  {
    sub_1AE51F9F4(a2, (uint64_t)(a3 - (_QWORD)a2) / 24, a4);
    v12 = &v4[24 * v11];
    if (v7 >= v6 || v10 < 24)
      goto LABEL_47;
    v19 = a3 - 24;
    while (1)
    {
      v20 = (char *)(v19 + 24);
      v21 = v12 - 24;
      v22 = *((_QWORD *)v12 - 3) == *((_QWORD *)v6 - 3) && *((_QWORD *)v12 - 2) == *((_QWORD *)v6 - 2);
      if (v22 || (sub_1AE926D60() & 1) == 0)
      {
        v24 = v20 != v12 || v19 >= (unint64_t)v12;
        v12 -= 24;
        if (!v24)
          goto LABEL_43;
      }
      else
      {
        v23 = v20 != v6 || v19 >= (unint64_t)v6;
        v21 = v6 - 24;
        v6 -= 24;
        if (!v23)
          goto LABEL_43;
      }
      v25 = *(_OWORD *)v21;
      *(_QWORD *)(v19 + 16) = *((_QWORD *)v21 + 2);
      *(_OWORD *)v19 = v25;
LABEL_43:
      v19 -= 24;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_47;
    }
  }
  sub_1AE51F9F4(a1, (a2 - a1) / 24, a4);
  v12 = &v4[24 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while (1)
    {
      v14 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (!v14 && (sub_1AE926D60() & 1) != 0)
        break;
      v15 = v4;
      v14 = v7 == v4;
      v4 += 24;
      if (!v14)
        goto LABEL_15;
LABEL_16:
      v7 += 24;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_21;
    }
    v15 = v6;
    v14 = v7 == v6;
    v6 += 24;
    if (v14)
      goto LABEL_16;
LABEL_15:
    v16 = *(_OWORD *)v15;
    *((_QWORD *)v7 + 2) = *((_QWORD *)v15 + 2);
    *(_OWORD *)v7 = v16;
    goto LABEL_16;
  }
LABEL_21:
  v6 = v7;
LABEL_47:
  sub_1AE51F9F4(v4, (v12 - v4) / 24, v6);
  return 1;
}

void sub_1AE889310(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1AE501548(&qword_1EEDA4C40);
    v10 = (char *)sub_1AE4F66BC();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  sub_1AE4F6648();
  sub_1AE4F6624();
}

void sub_1AE8893F4()
{
  char v0;
  int64_t v1;
  char v2;
  char *v3;

  v0 = sub_1AE509648();
  sub_1AE889310(v0, v1, v2, v3);
}

void sub_1AE889404()
{
  sub_1AE5228E4();
}

void sub_1AE889418()
{
  sub_1AE509648();
  sub_1AE522900();
}

void sub_1AE889428()
{
  sub_1AE509648();
  sub_1AE5228C8();
}

void sub_1AE889438()
{
  sub_1AE509648();
  sub_1AE522C00();
}

void sub_1AE889448()
{
  sub_1AE509648();
  sub_1AE523034();
}

void sub_1AE889458()
{
  sub_1AE509648();
  sub_1AE5230E0();
}

void sub_1AE889468()
{
  sub_1AE509648();
  sub_1AE5231E4();
}

void sub_1AE889478()
{
  sub_1AE509648();
  sub_1AE523200();
}

void sub_1AE889488()
{
  sub_1AE509648();
  JUMPOUT(0x1AF453F1CLL);
}

void sub_1AE889498()
{
  sub_1AE509648();
  sub_1AE5232BC();
}

void sub_1AE8894A8()
{
  sub_1AE509648();
  sub_1AE522930();
}

void sub_1AE8894B8()
{
  sub_1AE509648();
  sub_1AE52291C();
}

void sub_1AE8894C8()
{
  sub_1AE509648();
  sub_1AE52351C();
}

void sub_1AE8894D8()
{
  sub_1AE509648();
  sub_1AE523538();
}

void sub_1AE8894E8()
{
  sub_1AE509648();
  sub_1AE523AB4();
}

void sub_1AE8894F8()
{
  sub_1AE509648();
  sub_1AE523B60();
}

void sub_1AE889508(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  BOOL v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t i;
  _QWORD *v43;
  uint64_t v44;

  v2 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  v44 = 0;
  v9 = 0;
  v43 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  for (i = MEMORY[0x1E0DEE9D8] + 32; ; i += 88)
  {
    if (!v7)
      goto LABEL_6;
LABEL_5:
    v10 = *(_QWORD *)(v7 + 16);
    if (v8 == v10)
    {
LABEL_6:
      while (v5)
      {
        v11 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        v12 = v11 | (v9 << 6);
LABEL_18:
        v17 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
        sub_1AE4F6708();
        sub_1AE4F81B8();
        v8 = 0;
        v7 = v17;
        if (v17)
          goto LABEL_5;
      }
      v13 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        break;
      }
      if (v13 >= v6)
      {
LABEL_50:
        sub_1AE592EFC();
        sub_1AE4F81B8();
        v31 = v43[3];
        if (v31 < 2)
          return;
        v32 = v31 >> 1;
        v30 = __OFSUB__(v32, v44);
        v33 = v32 - v44;
        if (!v30)
        {
          v43[2] = v33;
          return;
        }
        goto LABEL_58;
      }
      v14 = *(_QWORD *)(v2 + 8 * v13);
      if (v14)
      {
LABEL_17:
        v5 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v13 << 6);
        v9 = v13;
        goto LABEL_18;
      }
      v15 = v9 + 2;
      if (v9 + 2 >= v6)
        goto LABEL_50;
      v14 = *(_QWORD *)(v2 + 8 * v15);
      if (v14)
      {
LABEL_13:
        v13 = v15;
        goto LABEL_17;
      }
      v16 = v9 + 3;
      if (v9 + 3 >= v6)
        goto LABEL_50;
      v14 = *(_QWORD *)(v2 + 8 * v16);
      if (!v14)
      {
        v15 = v9 + 4;
        if (v9 + 4 >= v6)
          goto LABEL_50;
        v14 = *(_QWORD *)(v2 + 8 * v15);
        if (v14)
          goto LABEL_13;
        v16 = v9 + 5;
        if (v9 + 5 >= v6)
          goto LABEL_50;
        v14 = *(_QWORD *)(v2 + 8 * v16);
        if (!v14)
        {
          v15 = v9 + 6;
          if (v9 + 6 >= v6)
            goto LABEL_50;
          v14 = *(_QWORD *)(v2 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              v13 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_57;
              if (v13 >= v6)
                goto LABEL_50;
              v14 = *(_QWORD *)(v2 + 8 * v13);
              ++v15;
              if (v14)
                goto LABEL_17;
            }
          }
          goto LABEL_13;
        }
      }
      v13 = v16;
      goto LABEL_17;
    }
    if (v8 >= v10)
      break;
    v18 = v7 + 88 * v8;
    v19 = *(_QWORD *)(v18 + 48);
    v20 = *(_QWORD *)(v18 + 64);
    v35 = *(_QWORD *)(v18 + 56);
    v36 = *(_QWORD *)(v18 + 32);
    v38 = *(_QWORD *)(v18 + 104);
    v39 = *(_QWORD *)(v18 + 40);
    v40 = *(_OWORD *)(v18 + 88);
    v41 = *(_OWORD *)(v18 + 72);
    v37 = *(_QWORD *)(v18 + 112);
    if (v44)
    {
      swift_bridgeObjectRetain();
      sub_1AE4F6804();
      sub_1AE4F6708();
      sub_1AE4F66C4();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = v43;
    }
    else
    {
      v34 = *(_QWORD *)(v18 + 64);
      sub_1AE88D408();
      if (v23)
        goto LABEL_59;
      v24 = v22 & 0xFFFFFFFFFFFFFFFELL;
      if (v24 <= 1)
        v25 = 1;
      else
        v25 = v24;
      sub_1AE501548((uint64_t *)&unk_1EED9C8C0);
      v21 = (_QWORD *)sub_1AE4F66BC();
      v26 = (uint64_t)(j__malloc_size(v21) - 32) / 88;
      v21[2] = v25;
      v21[3] = 2 * v26;
      v27 = v21 + 4;
      v28 = v43[3] >> 1;
      i = (uint64_t)&v21[11 * v28 + 4];
      v44 = (v26 & 0x7FFFFFFFFFFFFFFFLL) - v28;
      if (v43[2])
      {
        v29 = v21 < v43 || v27 >= &v43[11 * v28 + 4];
        if (!v29 && v21 == v43)
        {
          v20 = v34;
        }
        else
        {
          memmove(v27, v43 + 4, 88 * v28);
          v20 = v34;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1AE4F6708();
        v43[2] = 0;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v20 = v34;
        sub_1AE4F66C4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_release();
    }
    v30 = __OFSUB__(v44--, 1);
    if (v30)
      goto LABEL_56;
    ++v8;
    *(_QWORD *)i = v36;
    *(_QWORD *)(i + 8) = v39;
    *(_QWORD *)(i + 16) = v19;
    *(_QWORD *)(i + 24) = v35;
    *(_QWORD *)(i + 32) = v20;
    *(_OWORD *)(i + 40) = v41;
    *(_OWORD *)(i + 56) = v40;
    *(_QWORD *)(i + 72) = v38;
    *(_QWORD *)(i + 80) = v37;
    v43 = v21;
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
}

void sub_1AE889980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  int v28;
  char v29;
  BOOL v30;
  char *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const void *v49;
  size_t v50;
  int64_t v51;
  BOOL v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;

  sub_1AE4FC4D4();
  sub_1AE595C08();
  sub_1AE9257E8();
  sub_1AE88D704();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F686C();
  v83 = v5;
  MEMORY[0x1E0C80A78](v6);
  v89 = (char *)&v65 - v7;
  v8 = sub_1AE9257D0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1AE507460(v10, v65);
  v84 = sub_1AE501548(&qword_1EED94B00);
  v11 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  sub_1AE4F686C();
  v82 = v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v65 - v14;
  type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4FD234();
  v85 = v11;
  v17 = *(unsigned __int8 *)(v11 + 80);
  sub_1AE88CFF8(v0, v1, type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1);
  v18 = sub_1AE925860();
  v20 = v19;
  sub_1AE590014();
  v21 = MEMORY[0x1E0DEE9D8];
  v81 = *(_QWORD *)(v18 + 16);
  if (v20 != v81)
  {
    v22 = 0;
    v69 = (v17 + 32) & ~v17;
    v90 = MEMORY[0x1E0DEE9D8] + v69;
    v79 = *MEMORY[0x1E0DC70D8];
    v68 = *MEMORY[0x1E0DC70D0];
    v66 = *MEMORY[0x1E0DC70C8];
    v78 = 162;
    v77 = 1336;
    v67 = v17 | 7;
    v75 = v8;
    v76 = 2889;
    v80 = v20;
    v23 = MEMORY[0x1E0DEE9D8];
    v73 = v15;
    v74 = v9;
    v71 = v2;
    v72 = v3;
    v70 = v18;
    while (1)
    {
      if ((v80 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
        return;
      }
      if (v20 >= *(_QWORD *)(v18 + 16))
        goto LABEL_75;
      v91 = v23;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v88, v18+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v20, v8);
      v24 = sub_1AE9257B8();
      sub_1AE9257B8();
      sub_1AE92646C();
      v25 = v83;
      v26 = sub_1AE4F7714();
      v27(v26);
      v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v25, v3);
      v87 = v20;
      if (v28 == v79)
      {
        if (v78 < 1)
          goto LABEL_77;
        if (!_Records_GDEntityClass_records)
          goto LABEL_93;
        sub_1AE78B388();
        if (v29 == v30)
          goto LABEL_78;
        sub_1AE88D718();
        if (v29 == v30)
          goto LABEL_79;
        if (!_Records_GDEntityClass_classIds[0])
          goto LABEL_94;
        v32 = v22;
        v33 = *v31;
        sub_1AE4FD008();
        if (!_Records_GDEntityClass_labels)
          goto LABEL_95;
        goto LABEL_35;
      }
      if (v28 == v68)
        break;
      if (v28 == v66)
      {
        if (v78 < 61)
          goto LABEL_86;
        if (!_Records_GDEntityClass_records)
          goto LABEL_99;
        sub_1AE78B388();
        if (v29 == v30)
          goto LABEL_88;
        sub_1AE88D718();
        if (v29 == v30)
          goto LABEL_90;
        if (!_Records_GDEntityClass_classIds[0])
          goto LABEL_100;
        v32 = v22;
        v33 = *(_BYTE *)(v35 + 1440);
        sub_1AE4FD008();
        if (!_Records_GDEntityClass_labels)
          goto LABEL_101;
LABEL_35:
        v86 = sub_1AE88D5B8();
        v37 = v36;
        goto LABEL_36;
      }
      if (v78 < 1)
        goto LABEL_87;
      if (!_Records_GDEntityClass_records)
        goto LABEL_102;
      sub_1AE78B388();
      if (v29 == v30)
        goto LABEL_89;
      sub_1AE88D718();
      if (v29 == v30)
        goto LABEL_91;
      if (!_Records_GDEntityClass_classIds[0])
        goto LABEL_103;
      v32 = v22;
      v33 = *v59;
      sub_1AE4FD008();
      if (!_Records_GDEntityClass_labels)
        goto LABEL_104;
      v86 = sub_1AE88D5B8();
      v37 = v60;
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v83, v3);
LABEL_36:
      (*(void (**)(char *, uint64_t))(v2 + 8))(v89, v3);
      v21 = v88;
      v38 = sub_1AE9257AC();
      type metadata accessor for VisualUnderstandingService.ObservationSequence();
      v39 = (_QWORD *)sub_1AE4F66BC();
      v39[5] = &unk_1E5DC5708;
      v39[6] = sub_1AE595960();
      v39[2] = v38;
      v39[3] = 0;
      v40 = (uint64_t)v82;
      v41 = *(int *)(v84 + 80);
      *v82 = v24;
      *(_QWORD *)(v40 + 8) = v8;
      v42 = v86;
      *(_QWORD *)(v40 + 16) = v15;
      *(_QWORD *)(v40 + 24) = v42;
      *(_QWORD *)(v40 + 32) = v37;
      *(_BYTE *)(v40 + 40) = v33;
      sub_1AE9257C4();
      v9 = v74;
      v8 = v75;
      (*(void (**)(unint64_t, uint64_t))(v74 + 8))(v21, v75);
      *(_QWORD *)(v40 + v41) = v39;
      v15 = v73;
      sub_1AE88C33C(v40, (uint64_t)v73, &qword_1EED94B00);
      if (v32)
      {
        v43 = v32;
        v21 = v91;
        v3 = v72;
        v18 = v70;
        v44 = v87;
        goto LABEL_68;
      }
      sub_1AE88D408();
      v44 = v87;
      if (v29)
        goto LABEL_80;
      sub_1AE88D67C();
      if (v29 ^ v30 | v52)
        v46 = 1;
      else
        v46 = v45;
      sub_1AE501548(&qword_1EEDA4D98);
      v47 = *(_QWORD *)(v85 + 72);
      v48 = v69;
      v49 = (const void *)swift_allocObject();
      v50 = sub_1AE88D5C8(v49);
      if (!v47)
        goto LABEL_81;
      v51 = v50 - v48;
      v52 = v50 - v48 == 0x8000000000000000 && v47 == -1;
      if (v52)
        goto LABEL_85;
      v53 = v51 / v47;
      *(_QWORD *)(v21 + 16) = v46;
      *(_QWORD *)(v21 + 24) = 2 * (v51 / v47);
      v54 = v21 + v48;
      v55 = v91;
      v56 = *(_QWORD *)(v91 + 24);
      v57 = (v56 >> 1) * v47;
      v3 = v72;
      if (*(_QWORD *)(v91 + 16))
      {
        if (v21 >= v91 && v54 < v91 + v69 + v57)
        {
          if (v21 != v91)
          {
            swift_arrayInitWithTakeBackToFront();
LABEL_65:
            v55 = v91;
          }
          *(_QWORD *)(v55 + 16) = 0;
          goto LABEL_67;
        }
        swift_arrayInitWithTakeFrontToBack();
        goto LABEL_65;
      }
LABEL_67:
      v90 = v54 + v57;
      v43 = (v53 & 0x7FFFFFFFFFFFFFFFLL) - (v56 >> 1);
      swift_release();
      v18 = v70;
LABEL_68:
      v30 = __OFSUB__(v43, 1);
      v22 = v43 - 1;
      v2 = v71;
      if (v30)
        goto LABEL_76;
      v20 = v44 + 1;
      v61 = v90;
      sub_1AE88C33C((uint64_t)v15, v90, &qword_1EED94B00);
      v90 = v61 + *(_QWORD *)(v85 + 72);
      v23 = v21;
      if (v81 == v20)
        goto LABEL_70;
    }
    if (v78 < 27)
      goto LABEL_82;
    if (!_Records_GDEntityClass_records)
      goto LABEL_96;
    sub_1AE78B388();
    if (v29 == v30)
      goto LABEL_83;
    sub_1AE88D718();
    if (v29 == v30)
      goto LABEL_84;
    if (!_Records_GDEntityClass_classIds[0])
      goto LABEL_97;
    v32 = v22;
    v33 = *(_BYTE *)(v34 + 624);
    sub_1AE4FD008();
    if (!_Records_GDEntityClass_labels)
      goto LABEL_98;
    goto LABEL_35;
  }
  v22 = 0;
LABEL_70:
  sub_1AE4F6648();
  v62 = *(_QWORD *)(v21 + 24);
  if (v62 >= 2)
  {
    v63 = v62 >> 1;
    v30 = __OFSUB__(v63, v22);
    v64 = v63 - v22;
    if (v30)
      goto LABEL_92;
    *(_QWORD *)(v21 + 16) = v64;
  }
  sub_1AE4F8180();
}

void sub_1AE88A080(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *i;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  int64_t v9;
  uint64_t v10;
  const void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  BOOL v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v2 = a1 + 16;
  swift_retain();
  v3 = 0;
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  for (i = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32); ; i += 2)
  {
    sub_1AE4FB9BC();
    v6 = (_QWORD *)sub_1AE595318(v2, *(_QWORD *)(a1 + 40));
    sub_1AE7D3660();
    sub_1AE926760();
    swift_endAccess();
    if ((v23 & 1) != 0)
      break;
    if (!v3)
    {
      sub_1AE88D408();
      if (v8)
        goto LABEL_24;
      v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if (v9 <= 1)
        v10 = 1;
      else
        v10 = v9;
      sub_1AE501548((uint64_t *)&unk_1EED9A4B0);
      v11 = (const void *)sub_1AE4F66BC();
      v12 = (uint64_t)(sub_1AE88D5C8(v11) - 32) / 16;
      v6[2] = v10;
      v6[3] = 2 * v12;
      v13 = (unint64_t)(v6 + 4);
      v14 = v4[3];
      v15 = v14 >> 1;
      if (v4[2])
      {
        if (v6 != v4 || v13 >= (unint64_t)&v4[2 * v15 + 4])
          memmove(v6 + 4, v4 + 4, 16 * v15);
        v4[2] = 0;
      }
      i = (_QWORD *)(v13 + 16 * v15);
      v3 = (v12 & 0x7FFFFFFFFFFFFFFFLL) - (v14 >> 1);
      sub_1AE4FB730();
      v4 = v6;
    }
    v17 = __OFSUB__(v3--, 1);
    if (v17)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *i = v21;
    i[1] = v22;
  }
  sub_1AE50A24C();
  v18 = v4[3];
  if (v18 < 2)
    return;
  v19 = v18 >> 1;
  v17 = __OFSUB__(v19, v3);
  v20 = v19 - v3;
  if (!v17)
  {
    v4[2] = v20;
    return;
  }
LABEL_25:
  __break(1u);
}

void sub_1AE88A208()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  char v8;
  BOOL v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  sub_1AE4FC4D4();
  swift_retain();
  v0 = sub_1AE8CE0BC();
  v1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((v2 & 1) == 0)
  {
    v3 = v0;
    v4 = 0;
    v5 = (uint64_t *)(MEMORY[0x1E0DEE9D8] + 32);
    while (1)
    {
      if (!v4)
      {
        sub_1AE88D408();
        if (v6)
          goto LABEL_26;
        sub_1AE88D67C();
        if (v6 ^ v9 | v8)
          v10 = 1;
        else
          v10 = v7;
        sub_1AE501548(&qword_1ED31B988);
        v11 = (_QWORD *)sub_1AE4F66BC();
        v12 = (uint64_t)(j__malloc_size(v11) - 32) / 8;
        v11[2] = v10;
        v11[3] = 2 * v12;
        v13 = (unint64_t)(v11 + 4);
        v14 = v1[3];
        v15 = v14 >> 1;
        if (v1[2])
        {
          if (v11 != v1 || v13 >= (unint64_t)&v1[v15 + 4])
            memmove(v11 + 4, v1 + 4, 8 * v15);
          v1[2] = 0;
        }
        v5 = (uint64_t *)(v13 + 8 * v15);
        v4 = (v12 & 0x7FFFFFFFFFFFFFFFLL) - (v14 >> 1);
        sub_1AE4FB730();
        v1 = v11;
      }
      v9 = __OFSUB__(v4--, 1);
      if (v9)
        break;
      *v5++ = v3;
      v3 = sub_1AE8CE0BC();
      if ((v17 & 1) != 0)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v4 = 0;
LABEL_21:
  sub_1AE4FC564();
  v18 = v1[3];
  if (v18 < 2)
  {
LABEL_24:
    sub_1AE4F8180();
    return;
  }
  v19 = v18 >> 1;
  v9 = __OFSUB__(v19, v4);
  v20 = v19 - v4;
  if (!v9)
  {
    v1[2] = v20;
    goto LABEL_24;
  }
LABEL_27:
  __break(1u);
}

void sub_1AE88A330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  const void *v18;
  size_t v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  BOOL v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_1AE4FC4D4();
  v3 = v2;
  sub_1AE501548(&qword_1EED94B08);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE500100();
  v5 = sub_1AE501548(&qword_1EED94B00);
  v6 = sub_1AE88D7A8(v5);
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F6744();
  sub_1AE88D794();
  v7 = MEMORY[0x1E0DEE9D8];
  v9 = MEMORY[0x1E0DEE9D8] + v8;
  sub_1AE88D648(v10);
  v11 = 0;
  while (1)
  {
    sub_1AE4FB9BC();
    v12 = sub_1AE595318(v3 + 32, *(_QWORD *)(v3 + 56));
    sub_1AE926760();
    swift_endAccess();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v0, 1, v32) == 1)
    {
      sub_1AE4FB730();
      sub_1AE524534(v0, &qword_1EED94B08);
      v28 = *(_QWORD *)(v7 + 24);
      if (v28 >= 2)
      {
        v29 = v28 >> 1;
        v27 = __OFSUB__(v29, v11);
        v30 = v29 - v11;
        if (v27)
          goto LABEL_35;
        *(_QWORD *)(v7 + 16) = v30;
      }
      sub_1AE4F8180();
      return;
    }
    sub_1AE88C33C(v0, v1, &qword_1EED94B00);
    if (v11)
    {
      v12 = v7;
    }
    else
    {
      sub_1AE88D408();
      if (v14)
        goto LABEL_32;
      v15 = v13 & 0xFFFFFFFFFFFFFFFELL;
      if (v15 <= 1)
        v16 = 1;
      else
        v16 = v15;
      sub_1AE501548(&qword_1EEDA4D98);
      v17 = *(_QWORD *)(v33 + 72);
      v18 = (const void *)swift_allocObject();
      v19 = sub_1AE88D5C8(v18);
      if (!v17)
        goto LABEL_33;
      v20 = v19 - v31;
      if (v19 - v31 == 0x8000000000000000 && v17 == -1)
        goto LABEL_34;
      v22 = v20 / v17;
      *(_QWORD *)(v12 + 16) = v16;
      *(_QWORD *)(v12 + 24) = 2 * (v20 / v17);
      v23 = v12 + v31;
      v24 = *(_QWORD *)(v7 + 24);
      v25 = (v24 >> 1) * v17;
      if (*(_QWORD *)(v7 + 16))
      {
        if (v12 < v7 || v23 >= v7 + v31 + v25)
        {
          sub_1AE88D664();
        }
        else if (v12 != v7)
        {
          sub_1AE88D670();
        }
        *(_QWORD *)(v7 + 16) = 0;
      }
      v9 = v23 + v25;
      v11 = (v22 & 0x7FFFFFFFFFFFFFFFLL) - (v24 >> 1);
      swift_release();
    }
    v27 = __OFSUB__(v11--, 1);
    if (v27)
      break;
    sub_1AE88C33C(v1, v9, &qword_1EED94B00);
    v9 += *(_QWORD *)(v33 + 72);
    v7 = v12;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

void sub_1AE88A55C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  const void *v18;
  size_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1AE4FC4D4();
  v3 = v2;
  sub_1AE501548(&qword_1EED94D00);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE500100();
  v5 = type metadata accessor for VisualUnderstandingService.MappingChange(0);
  v6 = sub_1AE88D7A8(v5);
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F90C8();
  sub_1AE88D794();
  v7 = MEMORY[0x1E0DEE9D8];
  v9 = MEMORY[0x1E0DEE9D8] + v8;
  sub_1AE88D648(v10);
  v11 = 0;
  while (1)
  {
    sub_1AE4FB9BC();
    v12 = sub_1AE595318(v3 + 32, *(_QWORD *)(v3 + 56));
    sub_1AE926760();
    swift_endAccess();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v0, 1, v31) == 1)
    {
      sub_1AE4FB730();
      sub_1AE524534(v0, &qword_1EED94D00);
      v27 = *(_QWORD *)(v7 + 24);
      if (v27 >= 2)
      {
        v28 = v27 >> 1;
        v15 = __OFSUB__(v28, v11);
        v29 = v28 - v11;
        if (v15)
          goto LABEL_35;
        *(_QWORD *)(v7 + 16) = v29;
      }
      sub_1AE4F8180();
      return;
    }
    sub_1AE88C2F8(v0, v1);
    if (v11)
    {
      v12 = v7;
    }
    else
    {
      sub_1AE88D408();
      if (v13)
        goto LABEL_32;
      sub_1AE88D67C();
      if (v13 ^ v15 | v21)
        v16 = 1;
      else
        v16 = v14;
      sub_1AE501548(&qword_1EEDA4D90);
      v17 = *(_QWORD *)(v32 + 72);
      v18 = (const void *)swift_allocObject();
      v19 = sub_1AE88D5C8(v18);
      if (!v17)
        goto LABEL_33;
      v20 = v19 - v30;
      v21 = v19 - v30 == 0x8000000000000000 && v17 == -1;
      if (v21)
        goto LABEL_34;
      v22 = v20 / v17;
      *(_QWORD *)(v12 + 16) = v16;
      *(_QWORD *)(v12 + 24) = 2 * (v20 / v17);
      v23 = v12 + v30;
      v24 = *(_QWORD *)(v7 + 24);
      v25 = (v24 >> 1) * v17;
      if (*(_QWORD *)(v7 + 16))
      {
        if (v12 < v7 || v23 >= v7 + v30 + v25)
        {
          sub_1AE88D664();
        }
        else if (v12 != v7)
        {
          sub_1AE88D670();
        }
        *(_QWORD *)(v7 + 16) = 0;
      }
      v9 = v23 + v25;
      v11 = (v22 & 0x7FFFFFFFFFFFFFFFLL) - (v24 >> 1);
      swift_release();
    }
    v15 = __OFSUB__(v11--, 1);
    if (v15)
      break;
    sub_1AE88C2F8(v1, v9);
    v9 += *(_QWORD *)(v32 + 72);
    v7 = v12;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

void sub_1AE88A770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  _QWORD *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  __int16 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;

  v1 = sub_1AE595C08();
  v2 = type metadata accessor for AnswerRenderIterator(v1);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4FD234();
  v4 = sub_1AE4F7714();
  sub_1AE88CFF8(v4, v5, v6);
  v7 = *(int *)(v2 + 24);
  v8 = *(_QWORD *)(*(_QWORD *)(v0 + v7) + 16);
  v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v9 = 0;
  if (v8)
  {
    v35 = v2;
    v36 = *(int *)(v2 + 24);
    v10 = (uint64_t *)(v0 + *(int *)(v2 + 32));
    v11 = MEMORY[0x1E0DEE9D8] + 32;
    v37 = v0;
    v39 = v10;
    while ((v10[1] & 1) == 0)
    {
      v13 = *v10;
      if (*v10 >= v8 - 1)
        goto LABEL_35;
      *((_BYTE *)v10 + 8) = 0;
      v12 = v13 + 1;
      *v10 = v13 + 1;
      if (v13 == -1)
      {
        v12 = 0;
        goto LABEL_11;
      }
      v14 = *(_QWORD *)(v0 + *(int *)(v35 + 28));
      if (v14 == -1 || v14 && !(v12 % v14))
        goto LABEL_11;
LABEL_12:
      if (v12 < 0)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
      v15 = *(_QWORD *)(v0 + v7);
      if ((unint64_t)v12 >= *(_QWORD *)(v15 + 16))
        goto LABEL_40;
      v16 = v15 + 112 * v12;
      v17 = *(_QWORD *)(v16 + 104);
      v18 = *(_QWORD *)(v16 + 112);
      v19 = *(_QWORD *)(v16 + 120);
      v41 = *(_BYTE *)(v16 + 128);
      v20 = *(_QWORD *)(v16 + 136);
      v50 = *(_OWORD *)(v16 + 80);
      v48 = *(_QWORD *)(v16 + 40);
      v49 = *(_QWORD *)(v16 + 32);
      v46 = *(_QWORD *)(v16 + 56);
      v47 = *(_QWORD *)(v16 + 48);
      v44 = *(_BYTE *)(v16 + 66);
      v45 = *(_WORD *)(v16 + 64);
      v42 = *(_QWORD *)(v16 + 72);
      v43 = *(_QWORD *)(v16 + 96);
      if (v9)
      {
        sub_1AE525B74(*(_QWORD *)(v16 + 32), *(_QWORD *)(v16 + 40), *(_QWORD *)(v16 + 48), *(_QWORD *)(v16 + 56), *(unsigned __int16 *)(v16 + 64), *(_BYTE *)(v16 + 66));
        sub_1AE4F81B0();
        sub_1AE4F66C4();
        sub_1AE4F6730();
        sub_1AE4FB75C();
        swift_bridgeObjectRetain();
        v21 = v20;
        goto LABEL_31;
      }
      v38 = *(_QWORD *)(v16 + 136);
      sub_1AE88D408();
      if (v22)
        goto LABEL_42;
      sub_1AE88D67C();
      if (v22 ^ v25 | v24)
        v26 = 1;
      else
        v26 = v23;
      sub_1AE501548(&qword_1EED9AAB8);
      v27 = (_QWORD *)sub_1AE4F66BC();
      v28 = (uint64_t)(j__malloc_size(v27) - 32) / 112;
      v27[2] = v26;
      v27[3] = 2 * v28;
      v29 = v40[3] >> 1;
      v11 = (uint64_t)&v27[14 * v29 + 4];
      v9 = (v28 & 0x7FFFFFFFFFFFFFFFLL) - v29;
      if (!v40[2])
      {
        sub_1AE88D424();
        swift_bridgeObjectRetain();
        sub_1AE4F66C4();
        sub_1AE4F6730();
        v21 = v38;
        sub_1AE4FB764();
        sub_1AE4F6708();
        swift_release();
        v40 = v27;
        v7 = v36;
        v0 = v37;
        goto LABEL_31;
      }
      if (v27 < v40 || v27 + 4 >= &v40[14 * v29 + 4])
      {
        sub_1AE88D424();
      }
      else
      {
        sub_1AE88D424();
        if (v27 == v40)
        {
          v31 = v36;
          goto LABEL_30;
        }
      }
      v31 = v36;
      memmove(v27 + 4, v40 + 4, 112 * v29);
LABEL_30:
      swift_bridgeObjectRetain();
      sub_1AE4F6708();
      swift_bridgeObjectRetain();
      sub_1AE4FB764();
      sub_1AE4F66CC();
      v40[2] = 0;
      swift_release();
      v40 = v27;
      v0 = v37;
      v7 = v31;
      v21 = v38;
LABEL_31:
      v25 = __OFSUB__(v9--, 1);
      if (v25)
        goto LABEL_41;
      *(_QWORD *)v11 = v49;
      *(_QWORD *)(v11 + 8) = v48;
      *(_QWORD *)(v11 + 16) = v47;
      *(_QWORD *)(v11 + 24) = v46;
      *(_WORD *)(v11 + 32) = v45;
      *(_BYTE *)(v11 + 34) = v44;
      *(_QWORD *)(v11 + 40) = v42;
      *(_OWORD *)(v11 + 48) = v50;
      *(_QWORD *)(v11 + 64) = v43;
      *(_QWORD *)(v11 + 72) = v17;
      *(_QWORD *)(v11 + 80) = v18;
      *(_QWORD *)(v11 + 88) = v19;
      *(_BYTE *)(v11 + 96) = v41;
      *(_QWORD *)(v11 + 104) = v21;
      v11 += 112;
      v8 = *(_QWORD *)(v15 + 16);
      v10 = v39;
      if (!v8)
        goto LABEL_35;
    }
    v12 = 0;
    *v10 = 0;
    *((_BYTE *)v10 + 8) = 0;
LABEL_11:
    sub_1AE85777C();
    goto LABEL_12;
  }
LABEL_35:
  sub_1AE590014();
  v32 = v40[3];
  if (v32 >= 2)
  {
    v33 = v32 >> 1;
    v25 = __OFSUB__(v33, v9);
    v34 = v33 - v9;
    if (v25)
      goto LABEL_43;
    v40[2] = v34;
  }
}

void sub_1AE88AB3C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  swift_bridgeObjectRetain();
  v2 = 0;
  v3 = 0;
  v4 = 0;
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v7 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
  while (1)
  {
    while (v3)
    {
      v8 = *(_QWORD *)(v3 + 16);
      if (v2 == v8)
        break;
      if (v2 >= v8)
        goto LABEL_31;
      v11 = (_QWORD *)(v3 + 40 * v2);
      v12 = v11[4];
      v13 = v11[5];
      v14 = v11[7];
      v28 = v11[8];
      v29 = v11[6];
      if (v4)
      {
        sub_1AE4F6708();
        v15 = v6;
      }
      else
      {
        sub_1AE88D408();
        if (v17)
          goto LABEL_34;
        v18 = v16 & 0xFFFFFFFFFFFFFFFELL;
        if (v18 <= 1)
          v19 = 1;
        else
          v19 = v18;
        sub_1AE501548(&qword_1EED9AC88);
        v15 = (_QWORD *)sub_1AE4F66BC();
        v20 = (uint64_t)(j__malloc_size(v15) - 32) / 40;
        v15[2] = v19;
        v15[3] = 2 * v20;
        v21 = v15 + 4;
        v22 = v6[3] >> 1;
        v7 = &v15[5 * v22 + 4];
        v4 = (v20 & 0x7FFFFFFFFFFFFFFFLL) - v22;
        if (v6[2])
        {
          if (v15 != v6 || v21 >= &v6[5 * v22 + 4])
            memmove(v21, v6 + 4, 40 * v22);
          sub_1AE4F6708();
          v6[2] = 0;
        }
        else
        {
          sub_1AE4F6708();
        }
        swift_release();
      }
      v24 = __OFSUB__(v4--, 1);
      if (v24)
        goto LABEL_32;
      ++v2;
      *v7 = v12;
      v7[1] = v13;
      v7[2] = v29;
      v7[3] = v14;
      v7[4] = v28;
      v7 += 5;
      v6 = v15;
    }
    v9 = *(_QWORD *)(a1 + 16);
    if (v5 == v9)
      break;
    if (v5 >= v9)
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v10 = *(_QWORD *)(a1 + 8 * v5 + 32);
    sub_1AE4F6708();
    sub_1AE4F9038();
    v2 = 0;
    v3 = v10;
    ++v5;
  }
  sub_1AE4F6648();
  sub_1AE4F9038();
  v25 = v6[3];
  if (v25 < 2)
    return;
  v26 = v25 >> 1;
  v24 = __OFSUB__(v26, v4);
  v27 = v26 - v4;
  if (!v24)
  {
    v6[2] = v27;
    return;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

unint64_t sub_1AE88AD3C()
{
  unint64_t result;

  result = qword_1EEDA4BE8;
  if (!qword_1EEDA4BE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967248, &type metadata for KnosisInternalFact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4BE8);
  }
  return result;
}

unint64_t sub_1AE88AD78()
{
  unint64_t result;

  result = qword_1EEDA4BF8;
  if (!qword_1EEDA4BF8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KnosisInternalFact, &type metadata for KnosisInternalFact);
    atomic_store(result, (unint64_t *)&qword_1EEDA4BF8);
  }
  return result;
}

unint64_t sub_1AE88ADB8()
{
  unint64_t result;

  result = qword_1EEDA4C00;
  if (!qword_1EEDA4C00)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KnosisInternalFact, &type metadata for KnosisInternalFact);
    atomic_store(result, (unint64_t *)&qword_1EEDA4C00);
  }
  return result;
}

unint64_t sub_1AE88ADF8()
{
  unint64_t result;

  result = qword_1EEDA4C08;
  if (!qword_1EEDA4C08)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KnosisQueryArg, &type metadata for KnosisQueryArg);
    atomic_store(result, (unint64_t *)&qword_1EEDA4C08);
  }
  return result;
}

unint64_t sub_1AE88AE38()
{
  unint64_t result;

  result = qword_1ED30EBA8;
  if (!qword_1ED30EBA8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KnosisIndexType, &type metadata for KnosisIndexType);
    atomic_store(result, (unint64_t *)&qword_1ED30EBA8);
  }
  return result;
}

void sub_1AE88AE74()
{
  sub_1AE71D91C((uint64_t)&unk_1EEDA4C10);
}

uint64_t destroy for KnosisInternalFact()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for KnosisInternalFact(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for KnosisInternalFact(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for KnosisInternalFact(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for KnosisInternalFact()
{
  sub_1AE4F67D4();
}

void type metadata accessor for KnosisQueryArg()
{
  sub_1AE4F67D4();
}

uint64_t type metadata accessor for QueryTree()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for QueryNode()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for KnosisQueryParam()
{
  return objc_opt_self();
}

void type metadata accessor for KnosisIndexType()
{
  sub_1AE4F67D4();
}

void type metadata accessor for KnosisQueryParam.ParamType()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE88B180(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE88B1C4(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t sub_1AE88B238(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

void type metadata accessor for KnosisInternalEntity()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE88B298()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1AE88B2F8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1AE88B3B4(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1AE88B4D8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t sub_1AE88B4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  v5 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE88B58C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1AE88B5CC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for IntentRoute()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE88B630()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE88B688(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE88B73C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE88B858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE88B904(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1AE88B944(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Operator()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for KnosisInternalFact.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1AE88B9F8 + 4 * byte_1AE966930[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1AE88BA2C + 4 * byte_1AE96692B[v4]))();
}

uint64_t sub_1AE88BA2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE88BA34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE88BA3CLL);
  return result;
}

uint64_t sub_1AE88BA48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE88BA50);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1AE88BA54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE88BA5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KnosisInternalFact.CodingKeys()
{
  return &type metadata for KnosisInternalFact.CodingKeys;
}

void type metadata accessor for IntentMap()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE88BA88()
{
  unint64_t result;

  result = qword_1EEDA4C20;
  if (!qword_1EEDA4C20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966F38, &type metadata for KnosisInternalFact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4C20);
  }
  return result;
}

unint64_t sub_1AE88BAC8()
{
  unint64_t result;

  result = qword_1EEDA4C28;
  if (!qword_1EEDA4C28)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9670B8, &unk_1E5DB8108);
    atomic_store(result, (unint64_t *)&qword_1EEDA4C28);
  }
  return result;
}

unint64_t sub_1AE88BB08()
{
  unint64_t result;

  result = qword_1EEDA4C30;
  if (!qword_1EEDA4C30)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966EA8, &type metadata for KnosisInternalFact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4C30);
  }
  return result;
}

unint64_t sub_1AE88BB48()
{
  unint64_t result;

  result = qword_1EEDA4C38;
  if (!qword_1EEDA4C38)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966ED0, &type metadata for KnosisInternalFact.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4C38);
  }
  return result;
}

unint64_t sub_1AE88BB84()
{
  unint64_t result;

  result = qword_1ED30FBE0;
  if (!qword_1ED30FBE0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967C4C, &type metadata for IntentMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30FBE0);
  }
  return result;
}

unint64_t sub_1AE88BBC0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1ED30FC30;
  if (!qword_1ED30FC30)
  {
    v1 = sub_1AE523CF0(&qword_1ED30FC28);
    sub_1AE88C0F0((uint64_t)&unk_1ED30FC50);
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED30FC30);
  }
  return result;
}

unint64_t sub_1AE88BC4C()
{
  unint64_t result;

  result = qword_1ED30FA80;
  if (!qword_1ED30FA80)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966FD8, &unk_1E5DB2AA8);
    atomic_store(result, (unint64_t *)&qword_1ED30FA80);
  }
  return result;
}

unint64_t sub_1AE88BC88()
{
  unint64_t result;

  result = qword_1EEDA4C50;
  if (!qword_1EEDA4C50)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967BFC, &type metadata for QueryNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4C50);
  }
  return result;
}

unint64_t sub_1AE88BCC4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEDA4C60;
  if (!qword_1EEDA4C60)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA4C58);
    sub_1AE88C240((uint64_t)&unk_1EEDA4C68);
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEDA4C60);
  }
  return result;
}

unint64_t sub_1AE88BD48()
{
  unint64_t result;

  result = qword_1EEDA4C78;
  if (!qword_1EEDA4C78)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KnosisIndexType, &type metadata for KnosisIndexType);
    atomic_store(result, (unint64_t *)&qword_1EEDA4C78);
  }
  return result;
}

unint64_t sub_1AE88BD84()
{
  unint64_t result;

  result = qword_1EEDA4C88;
  if (!qword_1EEDA4C88)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967BAC, &type metadata for KnosisQueryParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4C88);
  }
  return result;
}

unint64_t sub_1AE88BDC0()
{
  unint64_t result;

  result = qword_1EEDA4C90;
  if (!qword_1EEDA4C90)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967028, &unk_1E5DB8108);
    atomic_store(result, (unint64_t *)&qword_1EEDA4C90);
  }
  return result;
}

unint64_t sub_1AE88BDFC()
{
  unint64_t result;

  result = qword_1EEDA4CC0;
  if (!qword_1EEDA4CC0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967B5C, &type metadata for KnosisQueryParam.ParamType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4CC0);
  }
  return result;
}

unint64_t sub_1AE88BE38()
{
  unint64_t result;

  result = qword_1EEDA4CC8;
  if (!qword_1EEDA4CC8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967B0C, &type metadata for KnosisQueryParam.ParamType.KeywordCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4CC8);
  }
  return result;
}

unint64_t sub_1AE88BE74()
{
  unint64_t result;

  result = qword_1EEDA4CD0;
  if (!qword_1EEDA4CD0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967ABC, &type metadata for KnosisQueryParam.ParamType.TimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4CD0);
  }
  return result;
}

unint64_t sub_1AE88BEB0()
{
  unint64_t result;

  result = qword_1EEDA4CD8;
  if (!qword_1EEDA4CD8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967A6C, &type metadata for KnosisQueryParam.ParamType.FloatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4CD8);
  }
  return result;
}

unint64_t sub_1AE88BEEC()
{
  unint64_t result;

  result = qword_1EEDA4CE0;
  if (!qword_1EEDA4CE0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967A1C, &type metadata for KnosisQueryParam.ParamType.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4CE0);
  }
  return result;
}

unint64_t sub_1AE88BF28()
{
  unint64_t result;

  result = qword_1ED30FA68;
  if (!qword_1ED30FA68)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9679CC, &type metadata for IntentRoute.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30FA68);
  }
  return result;
}

void sub_1AE88BF64(uint64_t a1)
{
  if (!sub_1AE608038(a1))
  {
    sub_1AE523CF0(&qword_1ED319DE0);
    sub_1AE737E74();
  }
  sub_1AE4FE870();
}

unint64_t sub_1AE88BFB0()
{
  unint64_t result;

  result = qword_1ED30FB88;
  if (!qword_1ED30FB88)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9679A4, &unk_1E5DBE3B0);
    atomic_store(result, (unint64_t *)&qword_1ED30FB88);
  }
  return result;
}

unint64_t sub_1AE88BFEC()
{
  unint64_t result;

  result = qword_1EEDA4D20;
  if (!qword_1EEDA4D20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96797C, &unk_1E5DBE3B0);
    atomic_store(result, (unint64_t *)&qword_1EEDA4D20);
  }
  return result;
}

unint64_t sub_1AE88C028()
{
  unint64_t result;

  result = qword_1ED30FBB0;
  if (!qword_1ED30FBB0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96792C, &type metadata for Operator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30FBB0);
  }
  return result;
}

unint64_t sub_1AE88C064()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEDA4D38;
  if (!qword_1EEDA4D38)
  {
    v1 = sub_1AE523CF0(&qword_1ED30FC28);
    sub_1AE88C0F0((uint64_t)&unk_1EEDA4D40);
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEDA4D38);
  }
  return result;
}

void sub_1AE88C0F0(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;

  if (!sub_1AE608038(a1))
  {
    v5 = v4;
    v6 = v3;
    v7 = sub_1AE523CF0(v2);
    v8 = v6();
    atomic_store(MEMORY[0x1AF454B70](v5, v7, &v8), v1);
  }
  sub_1AE4FE870();
}

unint64_t sub_1AE88C144()
{
  unint64_t result;

  result = qword_1EEDA4D48;
  if (!qword_1EEDA4D48)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966FB0, &unk_1E5DB2AA8);
    atomic_store(result, (unint64_t *)&qword_1EEDA4D48);
  }
  return result;
}

unint64_t sub_1AE88C180()
{
  unint64_t result;

  result = qword_1EEDA4D60;
  if (!qword_1EEDA4D60)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967050, &unk_1E5DB8108);
    atomic_store(result, (unint64_t *)&qword_1EEDA4D60);
  }
  return result;
}

unint64_t sub_1AE88C1BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEDA4D70;
  if (!qword_1EEDA4D70)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA4C58);
    sub_1AE88C240((uint64_t)&unk_1EEDA4D78);
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEDA4D70);
  }
  return result;
}

void sub_1AE88C240(uint64_t a1)
{
  void (*v1)(void);

  if (!sub_1AE608038(a1))
  {
    v1();
    sub_1AE737E74();
  }
  sub_1AE4F6664();
}

unint64_t sub_1AE88C270()
{
  unint64_t result;

  result = qword_1EEDA4D80;
  if (!qword_1EEDA4D80)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KnosisIndexType, &type metadata for KnosisIndexType);
    atomic_store(result, (unint64_t *)&qword_1EEDA4D80);
  }
  return result;
}

void sub_1AE88C2AC(uint64_t a1)
{
  if (!sub_1AE608038(a1))
  {
    sub_1AE523CF0(&qword_1ED30F918);
    sub_1AE737E74();
  }
  sub_1AE4FE870();
}

uint64_t sub_1AE88C2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VisualUnderstandingService.MappingChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AE88C33C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1AE501548(a3);
  sub_1AE4FE8EC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_1AE4F6664();
}

unint64_t sub_1AE88C374()
{
  unint64_t result;

  result = qword_1EEDA4DA0;
  if (!qword_1EEDA4DA0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KnosisIndexType, &type metadata for KnosisIndexType);
    atomic_store(result, (unint64_t *)&qword_1EEDA4DA0);
  }
  return result;
}

unint64_t sub_1AE88C3B0()
{
  unint64_t result;

  result = qword_1EEDA4DA8;
  if (!qword_1EEDA4DA8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KnosisQueryArg, &type metadata for KnosisQueryArg);
    atomic_store(result, (unint64_t *)&qword_1EEDA4DA8);
  }
  return result;
}

void type metadata accessor for VirtualOperators()
{
  sub_1AE4F67D4();
}

ValueMetadata *type metadata accessor for Operator.CodingKeys()
{
  return &type metadata for Operator.CodingKeys;
}

uint64_t _s20IntelligencePlatform15KnosisIndexTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1AE88C454 + 4 * byte_1AE96693A[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1AE88C488 + 4 * byte_1AE966935[v4]))();
}

uint64_t sub_1AE88C48C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE88C494);
  return result;
}

_BYTE *sub_1AE88C49C(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE88C4A4);
  return sub_1AE5FC14C((_BYTE *)a1, a2 + 8);
}

ValueMetadata *type metadata accessor for IntentRoute.CodingKeys()
{
  return &type metadata for IntentRoute.CodingKeys;
}

uint64_t _s20IntelligencePlatform16KnosisQueryParamC9ParamTypeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AE88C510 + 4 * byte_1AE966944[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AE88C544 + 4 * byte_1AE96693F[v4]))();
}

uint64_t sub_1AE88C548(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE88C550);
  return result;
}

_BYTE *sub_1AE88C558(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE88C560);
  return sub_1AE5FC14C((_BYTE *)a1, a2 + 3);
}

ValueMetadata *type metadata accessor for KnosisQueryParam.ParamType.CodingKeys()
{
  return &type metadata for KnosisQueryParam.ParamType.CodingKeys;
}

ValueMetadata *type metadata accessor for KnosisQueryParam.ParamType.StringCodingKeys()
{
  return &type metadata for KnosisQueryParam.ParamType.StringCodingKeys;
}

ValueMetadata *type metadata accessor for KnosisQueryParam.ParamType.FloatCodingKeys()
{
  return &type metadata for KnosisQueryParam.ParamType.FloatCodingKeys;
}

ValueMetadata *type metadata accessor for KnosisQueryParam.ParamType.TimeCodingKeys()
{
  return &type metadata for KnosisQueryParam.ParamType.TimeCodingKeys;
}

ValueMetadata *type metadata accessor for KnosisQueryParam.ParamType.KeywordCodingKeys()
{
  return &type metadata for KnosisQueryParam.ParamType.KeywordCodingKeys;
}

uint64_t _s20IntelligencePlatform14KnosisQueryArgOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE88C60C + 4 * byte_1AE96694E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE88C640 + 4 * byte_1AE966949[v4]))();
}

uint64_t sub_1AE88C644(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE88C64CLL);
  return result;
}

_BYTE *sub_1AE88C654(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE88C65CLL);
  return sub_1AE5FC14C((_BYTE *)a1, a2 + 2);
}

ValueMetadata *type metadata accessor for KnosisQueryParam.CodingKeys()
{
  return &type metadata for KnosisQueryParam.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for QueryNode.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1AE88C6C8 + 4 * byte_1AE966958[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1AE88C6FC + 4 * byte_1AE966953[v4]))();
}

uint64_t sub_1AE88C6FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE88C704(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE88C70CLL);
  return result;
}

uint64_t sub_1AE88C718(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE88C720);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1AE88C724(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE88C72C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for QueryNode.CodingKeys()
{
  return &type metadata for QueryNode.CodingKeys;
}

ValueMetadata *type metadata accessor for IntentMap.CodingKeys()
{
  return &type metadata for IntentMap.CodingKeys;
}

void type metadata accessor for ContextGeneratorFeatures()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE88C76C()
{
  unint64_t result;

  result = qword_1EEDA4DB0;
  if (!qword_1EEDA4DB0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9673DC, &type metadata for IntentMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4DB0);
  }
  return result;
}

unint64_t sub_1AE88C7AC()
{
  unint64_t result;

  result = qword_1EEDA4DB8;
  if (!qword_1EEDA4DB8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967494, &type metadata for QueryNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4DB8);
  }
  return result;
}

unint64_t sub_1AE88C7EC()
{
  unint64_t result;

  result = qword_1EEDA4DC0;
  if (!qword_1EEDA4DC0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96754C, &type metadata for KnosisQueryParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4DC0);
  }
  return result;
}

unint64_t sub_1AE88C82C()
{
  unint64_t result;

  result = qword_1EEDA4DC8;
  if (!qword_1EEDA4DC8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967744, &type metadata for KnosisQueryParam.ParamType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4DC8);
  }
  return result;
}

unint64_t sub_1AE88C86C()
{
  unint64_t result;

  result = qword_1EEDA4DD0;
  if (!qword_1EEDA4DD0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9677FC, &type metadata for IntentRoute.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4DD0);
  }
  return result;
}

unint64_t sub_1AE88C8AC()
{
  unint64_t result;

  result = qword_1EEDA4DD8;
  if (!qword_1EEDA4DD8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9678B4, &type metadata for Operator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4DD8);
  }
  return result;
}

unint64_t sub_1AE88C8EC()
{
  unint64_t result;

  result = qword_1ED30FBC0;
  if (!qword_1ED30FBC0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967824, &type metadata for Operator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30FBC0);
  }
  return result;
}

unint64_t sub_1AE88C92C()
{
  unint64_t result;

  result = qword_1ED30FBB8;
  if (!qword_1ED30FBB8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96784C, &type metadata for Operator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30FBB8);
  }
  return result;
}

unint64_t sub_1AE88C96C()
{
  unint64_t result;

  result = qword_1ED30FA78;
  if (!qword_1ED30FA78)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96776C, &type metadata for IntentRoute.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30FA78);
  }
  return result;
}

unint64_t sub_1AE88C9AC()
{
  unint64_t result;

  result = qword_1ED30FA70;
  if (!qword_1ED30FA70)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967794, &type metadata for IntentRoute.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30FA70);
  }
  return result;
}

unint64_t sub_1AE88C9EC()
{
  unint64_t result;

  result = qword_1EEDA4DE0;
  if (!qword_1EEDA4DE0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967664, &type metadata for KnosisQueryParam.ParamType.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4DE0);
  }
  return result;
}

unint64_t sub_1AE88CA2C()
{
  unint64_t result;

  result = qword_1EEDA4DE8;
  if (!qword_1EEDA4DE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96768C, &type metadata for KnosisQueryParam.ParamType.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4DE8);
  }
  return result;
}

unint64_t sub_1AE88CA6C()
{
  unint64_t result;

  result = qword_1EEDA4DF0;
  if (!qword_1EEDA4DF0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967614, &type metadata for KnosisQueryParam.ParamType.FloatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4DF0);
  }
  return result;
}

unint64_t sub_1AE88CAAC()
{
  unint64_t result;

  result = qword_1EEDA4DF8;
  if (!qword_1EEDA4DF8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96763C, &type metadata for KnosisQueryParam.ParamType.FloatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4DF8);
  }
  return result;
}

unint64_t sub_1AE88CAEC()
{
  unint64_t result;

  result = qword_1EEDA4E00;
  if (!qword_1EEDA4E00)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9675C4, &type metadata for KnosisQueryParam.ParamType.TimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4E00);
  }
  return result;
}

unint64_t sub_1AE88CB2C()
{
  unint64_t result;

  result = qword_1EEDA4E08;
  if (!qword_1EEDA4E08)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9675EC, &type metadata for KnosisQueryParam.ParamType.TimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4E08);
  }
  return result;
}

unint64_t sub_1AE88CB6C()
{
  unint64_t result;

  result = qword_1EEDA4E10;
  if (!qword_1EEDA4E10)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967574, &type metadata for KnosisQueryParam.ParamType.KeywordCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4E10);
  }
  return result;
}

unint64_t sub_1AE88CBAC()
{
  unint64_t result;

  result = qword_1EEDA4E18;
  if (!qword_1EEDA4E18)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96759C, &type metadata for KnosisQueryParam.ParamType.KeywordCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4E18);
  }
  return result;
}

unint64_t sub_1AE88CBEC()
{
  unint64_t result;

  result = qword_1EEDA4E20;
  if (!qword_1EEDA4E20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9676B4, &type metadata for KnosisQueryParam.ParamType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4E20);
  }
  return result;
}

unint64_t sub_1AE88CC2C()
{
  unint64_t result;

  result = qword_1EEDA4E28;
  if (!qword_1EEDA4E28)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9676DC, &type metadata for KnosisQueryParam.ParamType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4E28);
  }
  return result;
}

unint64_t sub_1AE88CC6C()
{
  unint64_t result;

  result = qword_1EEDA4E30;
  if (!qword_1EEDA4E30)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9674BC, &type metadata for KnosisQueryParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4E30);
  }
  return result;
}

unint64_t sub_1AE88CCAC()
{
  unint64_t result;

  result = qword_1EEDA4E38;
  if (!qword_1EEDA4E38)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9674E4, &type metadata for KnosisQueryParam.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4E38);
  }
  return result;
}

unint64_t sub_1AE88CCEC()
{
  unint64_t result;

  result = qword_1EEDA4E40;
  if (!qword_1EEDA4E40)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967404, &type metadata for QueryNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4E40);
  }
  return result;
}

unint64_t sub_1AE88CD2C()
{
  unint64_t result;

  result = qword_1EEDA4E48;
  if (!qword_1EEDA4E48)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96742C, &type metadata for QueryNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4E48);
  }
  return result;
}

unint64_t sub_1AE88CD6C()
{
  unint64_t result;

  result = qword_1ED30FBF0;
  if (!qword_1ED30FBF0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96734C, &type metadata for IntentMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30FBF0);
  }
  return result;
}

unint64_t sub_1AE88CDAC()
{
  unint64_t result;

  result = qword_1ED30FBE8;
  if (!qword_1ED30FBE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967374, &type metadata for IntentMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30FBE8);
  }
  return result;
}

unint64_t sub_1AE88CDE8()
{
  unint64_t result;

  result = qword_1EEDA4E58;
  if (!qword_1EEDA4E58)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967ED0, &type metadata for ContextGeneratorFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4E58);
  }
  return result;
}

unint64_t sub_1AE88CE24()
{
  unint64_t result;

  result = qword_1EEDA4E70;
  if (!qword_1EEDA4E70)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967EA8, &unk_1E5DC0CE0);
    atomic_store(result, (unint64_t *)&qword_1EEDA4E70);
  }
  return result;
}

void sub_1AE88CE60(uint64_t a1)
{
  void (*v1)(void);

  if (!sub_1AE608038(a1))
  {
    sub_1AE88D5D0();
    sub_1AE523CF0(&qword_1EEDA4E60);
    v1();
    sub_1AE88D548();
  }
  sub_1AE52FDA4();
}

unint64_t sub_1AE88CEB4()
{
  unint64_t result;

  result = qword_1EEDA4E88;
  if (!qword_1EEDA4E88)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967E80, &unk_1E5DC0CE0);
    atomic_store(result, (unint64_t *)&qword_1EEDA4E88);
  }
  return result;
}

unint64_t sub_1AE88CEF0()
{
  unint64_t result;

  result = qword_1ED30FAF8;
  if (!qword_1ED30FAF8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967E30, &type metadata for VirtualOperators.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30FAF8);
  }
  return result;
}

void sub_1AE88CF2C(uint64_t a1)
{
  void (*v1)(void);

  if (!sub_1AE608038(a1))
  {
    sub_1AE88D5D0();
    sub_1AE523CF0(&qword_1ED30FC18);
    v1();
    sub_1AE88D548();
  }
  sub_1AE52FDA4();
}

unint64_t sub_1AE88CF80()
{
  unint64_t result;

  result = qword_1ED30FBC8;
  if (!qword_1ED30FBC8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966F88, &unk_1E5DC7F60);
    atomic_store(result, (unint64_t *)&qword_1ED30FBC8);
  }
  return result;
}

unint64_t sub_1AE88CFBC()
{
  unint64_t result;

  result = qword_1EEDA4EA0;
  if (!qword_1EEDA4EA0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE966F60, &unk_1E5DC7F60);
    atomic_store(result, (unint64_t *)&qword_1EEDA4EA0);
  }
  return result;
}

void sub_1AE88CFF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_1AE4FE8EC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_1AE4F6664();
}

ValueMetadata *type metadata accessor for VirtualOperators.CodingKeys()
{
  return &type metadata for VirtualOperators.CodingKeys;
}

ValueMetadata *type metadata accessor for ContextGeneratorFeatures.CodingKeys()
{
  return &type metadata for ContextGeneratorFeatures.CodingKeys;
}

void type metadata accessor for ContextGeneratorTypeFeatures()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE88D060()
{
  unint64_t result;

  result = qword_1EEDA4EA8;
  if (!qword_1EEDA4EA8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967D50, &type metadata for ContextGeneratorFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4EA8);
  }
  return result;
}

unint64_t sub_1AE88D0A0()
{
  unint64_t result;

  result = qword_1EEDA4EB0;
  if (!qword_1EEDA4EB0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967E08, &type metadata for VirtualOperators.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4EB0);
  }
  return result;
}

unint64_t sub_1AE88D0E0()
{
  unint64_t result;

  result = qword_1ED30FB08;
  if (!qword_1ED30FB08)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967D78, &type metadata for VirtualOperators.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30FB08);
  }
  return result;
}

unint64_t sub_1AE88D120()
{
  unint64_t result;

  result = qword_1ED30FB00;
  if (!qword_1ED30FB00)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967DA0, &type metadata for VirtualOperators.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30FB00);
  }
  return result;
}

unint64_t sub_1AE88D160()
{
  unint64_t result;

  result = qword_1EEDA4EB8;
  if (!qword_1EEDA4EB8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967CC0, &type metadata for ContextGeneratorFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4EB8);
  }
  return result;
}

unint64_t sub_1AE88D1A0()
{
  unint64_t result;

  result = qword_1EEDA4EC0;
  if (!qword_1EEDA4EC0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967CE8, &type metadata for ContextGeneratorFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4EC0);
  }
  return result;
}

unint64_t sub_1AE88D1DC()
{
  unint64_t result;

  result = qword_1EEDA4ED0;
  if (!qword_1EEDA4ED0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967FD8, &type metadata for ContextGeneratorTypeFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4ED0);
  }
  return result;
}

uint64_t _s20IntelligencePlatform9IntentMapV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE88D258 + 4 * byte_1AE96695D[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE88D278 + 4 * byte_1AE966962[v4]))();
}

_BYTE *sub_1AE88D258(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE88D278(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE88D280(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE88D288(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE88D290(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE88D298(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ContextGeneratorTypeFeatures.CodingKeys()
{
  return &type metadata for ContextGeneratorTypeFeatures.CodingKeys;
}

unint64_t sub_1AE88D2B8()
{
  unint64_t result;

  result = qword_1EEDA4EE0;
  if (!qword_1EEDA4EE0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967FB0, &type metadata for ContextGeneratorTypeFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4EE0);
  }
  return result;
}

unint64_t sub_1AE88D2F8()
{
  unint64_t result;

  result = qword_1EEDA4EE8;
  if (!qword_1EEDA4EE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967F20, &type metadata for ContextGeneratorTypeFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4EE8);
  }
  return result;
}

unint64_t sub_1AE88D338()
{
  unint64_t result;

  result = qword_1EEDA4EF0;
  if (!qword_1EEDA4EF0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967F48, &type metadata for ContextGeneratorTypeFeatures.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4EF0);
  }
  return result;
}

void sub_1AE88D378(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1AE88C33C(a1, a2, v2);
}

uint64_t sub_1AE88D380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1AE88D390()
{
  return 0x79676F6C6F746E6FLL;
}

uint64_t sub_1AE88D3B4()
{
  return sub_1AE926BB0();
}

uint64_t sub_1AE88D3C8()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE88D3E8()
{
  return 0x49747865746E6F63;
}

uint64_t sub_1AE88D414()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE88D424()
{
  uint64_t v0;

  return sub_1AE525B74(*(_QWORD *)(v0 - 136), *(_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 152), *(_QWORD *)(v0 - 160), *(unsigned int *)(v0 - 164), *(_DWORD *)(v0 - 168));
}

uint64_t sub_1AE88D434()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE88D450()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE88D46C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return sub_1AE926C4C();
}

uint64_t sub_1AE88D484@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return sub_1AE926B74();
}

uint64_t sub_1AE88D49C()
{
  return sub_1AE926EE0();
}

uint64_t sub_1AE88D4A4(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x6172000000000000;
}

uint64_t sub_1AE88D4BC()
{
  uint64_t v0;

  return v0 - 72;
}

uint64_t sub_1AE88D4DC()
{
  uint64_t v0;

  return v0;
}

__n128 sub_1AE88D4EC@<Q0>(uint64_t a1@<X8>, __n128 a2, __int128 a3, __int128 a4)
{
  uint64_t v4;
  __n128 result;

  *(_QWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = a4;
  *(_OWORD *)(a1 + 72) = a3;
  result = a2;
  *(__n128 *)(a1 + 88) = a2;
  return result;
}

uint64_t sub_1AE88D50C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE88D514()
{
  return sub_1AE926C70();
}

__n128 sub_1AE88D520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,__int128 a23)
{
  return (__n128)a23;
}

uint64_t sub_1AE88D53C()
{
  return sub_1AE926B98();
}

void sub_1AE88D548()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE88D570(uint64_t a1@<X8>)
{
  char v1;

  *(_QWORD *)(a1 + 64) |= 1 << v1;
}

uint64_t sub_1AE88D588()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_1AE88D598()
{
  uint64_t v0;

  return v0 - 128;
}

uint64_t sub_1AE88D5A8()
{
  return sub_1AE926D18();
}

uint64_t sub_1AE88D5B8()
{
  return sub_1AE925F8C();
}

size_t sub_1AE88D5C8(const void *ptr)
{
  return j__malloc_size(ptr);
}

uint64_t sub_1AE88D5E0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE88D5F8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE88D610()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE88D628()
{
  return sub_1AE925DC4();
}

uint64_t sub_1AE88D638()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE88D640()
{
  return sub_1AE926B98();
}

uint64_t sub_1AE88D648@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = a1 | 7;
  *(_QWORD *)(v2 - 128) = v1;
  return swift_retain();
}

uint64_t sub_1AE88D658()
{
  return sub_1AE926C40();
}

uint64_t sub_1AE88D664()
{
  return swift_arrayInitWithTakeFrontToBack();
}

uint64_t sub_1AE88D670()
{
  return swift_arrayInitWithTakeBackToFront();
}

uint64_t sub_1AE88D688()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE88D69C()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE88D6A8()
{
  return 8236;
}

uint64_t sub_1AE88D6F8()
{
  return sub_1AE926B98();
}

uint64_t sub_1AE88D72C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE88D738()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE88D744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return KnosisInternalFact.hash(into:)((uint64_t)&a9);
}

uint64_t sub_1AE88D750()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 168), *(_QWORD *)(v1 - 176));
}

uint64_t sub_1AE88D75C()
{
  uint64_t v0;

  return v0 - 88;
}

uint64_t sub_1AE88D770()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v1, v0);
}

unint64_t sub_1AE88D77C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_1AE88BE38();
}

uint64_t sub_1AE88D788()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v0, v1);
}

void sub_1AE88D794()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = v0;
}

uint64_t sub_1AE88D7A8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = result;
  return result;
}

unint64_t sub_1AE88D7BC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_1AE88BE74();
}

unint64_t sub_1AE88D7C8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_1AE88BEB0();
}

uint64_t sub_1AE88D7D4()
{
  uint64_t v0;

  return v0 - 72;
}

uint64_t sub_1AE88D7F4()
{
  return 6452595;
}

unint64_t sub_1AE88D804()
{
  return 0xD000000000000020;
}

uint64_t sub_1AE88D820(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  double v6;
  unint64_t v7;
  double *v8;
  double v9;

  result = sub_1AE5BB1CC(1, a1);
  if (*(_QWORD *)(a1 + 16))
  {
    v6 = *(double *)(a1 + 32);
    v7 = (v5 >> 1) - v4;
    if (v5 >> 1 == v4)
    {
LABEL_6:
      swift_bridgeObjectRetain();
      return swift_unknownObjectRelease();
    }
    if ((uint64_t)(v5 >> 1) > v4)
    {
      v8 = (double *)(v3 + 8 * v4);
      do
      {
        v9 = *v8++;
        v6 = v6 - v9;
        --v7;
      }
      while (v7);
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Sub()
{
  return objc_opt_self();
}

__n128 Subentity.id.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  return result;
}

uint64_t Subentity.facts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Subentity.entityClass.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_UNKNOWN **sub_1AE88D90C()
{
  return &protocol witness table for Subfact;
}

unint64_t sub_1AE88D91C(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE88D940();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE88D940()
{
  unint64_t result;

  result = qword_1EED99500;
  if (!qword_1EED99500)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for Subentity, &type metadata for Subentity);
    atomic_store(result, (unint64_t *)&qword_1EED99500);
  }
  return result;
}

_UNKNOWN **sub_1AE88D97C()
{
  return &protocol witness table for Subfact;
}

unint64_t sub_1AE88D990(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE88D9B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE88D9B4()
{
  unint64_t result;

  result = qword_1EED994F8;
  if (!qword_1EED994F8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for Subentity, &type metadata for Subentity);
    atomic_store(result, (unint64_t *)&qword_1EED994F8);
  }
  return result;
}

uint64_t destroy for Subentity()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Subentity(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Subentity(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for Subentity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for Subentity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Subentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Subentity()
{
  return &type metadata for Subentity;
}

_QWORD *SubentityIdentifier.init(parentId:relationshipId:)@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  if (*result)
  {
    v3 = *a2;
    if (*a2)
    {
      *a3 = *result;
      a3[1] = v3;
      return result;
    }
    sub_1AE59CA7C();
    sub_1AE4F6778();
  }
  else
  {
    sub_1AE59C9B0();
    sub_1AE4F6778();
    *(_OWORD *)v4 = 0u;
    *(_OWORD *)(v4 + 16) = 0u;
    *(_OWORD *)(v4 + 32) = 0u;
    *(_WORD *)(v4 + 48) = 512;
  }
  return (_QWORD *)swift_willThrow();
}

void SubentityIdentifier.parentId.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void SubentityIdentifier.relationshipId.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
}

uint64_t SubentityIdentifier.hash(into:)()
{
  sub_1AE926EF8();
  return sub_1AE926EF8();
}

BOOL static SubentityIdentifier.== infix(_:_:)(const void *a1, const void *a2)
{
  return memcmp(a1, a2, 0x10uLL) == 0;
}

uint64_t sub_1AE88DD1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6449746E65726170 && a2 == 0xE800000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xEE00644970696873)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE88DE2C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F6974616C6572;
  else
    return 0x6449746E65726170;
}

uint64_t sub_1AE88DE70()
{
  char *v0;

  return sub_1AE88DE2C(*v0);
}

uint64_t sub_1AE88DE78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE88DD1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE88DE9C()
{
  sub_1AE88DFFC();
  return sub_1AE926F94();
}

uint64_t sub_1AE88DEC4()
{
  sub_1AE88DFFC();
  return sub_1AE926FA0();
}

void SubentityIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v4 = sub_1AE501548(&qword_1EEDA4EF8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE88DFFC();
  sub_1AE926F4C();
  v11 = v8;
  v10 = 0;
  sub_1AE52A494();
  sub_1AE501234();
  if (!v2)
  {
    v11 = v9;
    v10 = 1;
    sub_1AE667C78();
    sub_1AE501234();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1AE4F667C();
}

unint64_t sub_1AE88DFFC()
{
  unint64_t result;

  result = qword_1EEDA4F00;
  if (!qword_1EEDA4F00)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9682B8, &type metadata for SubentityIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4F00);
  }
  return result;
}

uint64_t SubentityIdentifier.hashValue.getter()
{
  sub_1AE926EC8();
  sub_1AE926EF8();
  sub_1AE926EF8();
  return sub_1AE926F10();
}

void SubentityIdentifier.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1AE501548(&qword_1EEDA4F08);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE88DFFC();
  sub_1AE926F34();
  if (!v2)
  {
    sub_1AE52A458();
    sub_1AE5007F4();
    sub_1AE667FBC();
    sub_1AE5007F4();
    sub_1AE4F9250();
    *a2 = v6;
    a2[1] = v6;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  sub_1AE4F667C();
}

uint64_t sub_1AE88E1B8()
{
  sub_1AE926EC8();
  sub_1AE926EF8();
  sub_1AE926EF8();
  return sub_1AE926F10();
}

unint64_t sub_1AE88E210()
{
  unint64_t result;

  result = qword_1EEDA4F10;
  if (!qword_1EEDA4F10)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SubentityIdentifier, &type metadata for SubentityIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EEDA4F10);
  }
  return result;
}

void sub_1AE88E250(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  SubentityIdentifier.init(from:)(a1, a2);
}

void sub_1AE88E264(_QWORD *a1)
{
  SubentityIdentifier.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SubentityIdentifier()
{
  return &type metadata for SubentityIdentifier;
}

uint64_t storeEnumTagSinglePayload for SubentityIdentifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE88E2D4 + 4 * byte_1AE968115[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE88E308 + 4 * asc_1AE968110[v4]))();
}

uint64_t sub_1AE88E308(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE88E310(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE88E318);
  return result;
}

uint64_t sub_1AE88E324(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE88E32CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE88E330(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE88E338(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubentityIdentifier.CodingKeys()
{
  return &type metadata for SubentityIdentifier.CodingKeys;
}

unint64_t sub_1AE88E358()
{
  unint64_t result;

  result = qword_1EEDA4F18;
  if (!qword_1EEDA4F18)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968290, &type metadata for SubentityIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4F18);
  }
  return result;
}

unint64_t sub_1AE88E398()
{
  unint64_t result;

  result = qword_1EEDA4F20;
  if (!qword_1EEDA4F20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968200, &type metadata for SubentityIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4F20);
  }
  return result;
}

unint64_t sub_1AE88E3D8()
{
  unint64_t result;

  result = qword_1EEDA4F28;
  if (!qword_1EEDA4F28)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968228, &type metadata for SubentityIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA4F28);
  }
  return result;
}

uint64_t dispatch thunk of SubentityProtocol.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t Subfact.Object.asString.getter()
{
  uint64_t *v0;
  uint64_t v1;

  if ((v0[2] & 1) != 0)
    return 0;
  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void Subfact.Object.asEntityIdentifier.getter(uint64_t a1@<X8>)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;

  v2 = *((unsigned __int8 *)v1 + 16);
  if (v2 == 1)
    v3 = *v1;
  else
    v3 = 0;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v2 ^ 1;
}

uint64_t sub_1AE88E484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 0;
  return swift_bridgeObjectRetain();
}

_QWORD *sub_1AE88E494@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  return result;
}

uint64_t Subfact.predicate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_WORD *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Subfact.object.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1AE59CC30(v2, v3, v4);
}

_UNKNOWN **sub_1AE88E4FC()
{
  return &protocol witness table for Subfact.Object;
}

_UNKNOWN **sub_1AE88E508()
{
  return &protocol witness table for Subfact.Object;
}

uint64_t destroy for Subfact(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1AE59CC40(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for Subfact(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE59CC30(v5, v6, v7);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = v7;
  return a1;
}

uint64_t assignWithCopy for Subfact(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v2[2];
  *(_QWORD *)(a1 + 24) = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *((_WORD *)v2 + 16);
  v4 = v2[5];
  v5 = v2[6];
  LOBYTE(v2) = *((_BYTE *)v2 + 56);
  sub_1AE59CC30(v4, v5, (char)v2);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = (_BYTE)v2;
  sub_1AE59CC40(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Subfact(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 56);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v6;
  sub_1AE59CC40(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Subfact(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Subfact(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Subfact()
{
  return &type metadata for Subfact;
}

ValueMetadata *type metadata accessor for Subfact.Object()
{
  return &type metadata for Subfact.Object;
}

void sub_1AE88E77C()
{
  sub_1AE4F7934();
  sub_1AE892B00();
  sub_1AE56CE14(&qword_1EEDA5038, &qword_1EEDA5040);
  sub_1AE5059A8();
}

void sub_1AE88E7B4(char a1)
{
  uint64_t v1;

  if ((a1 & 1) == 0)
  {
    sub_1AE56CE14(&qword_1EEDA5048, &qword_1EEDA5040);
    sub_1AE4FCCC4();
  }
  *(_QWORD *)v1 = 0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_WORD *)(v1 + 24) = 256;
  sub_1AE4FBA48();
}

void sub_1AE88E874()
{
  sub_1AE892B00();
  sub_1AE56CE14(&qword_1EEDA5000, &qword_1EEDA5008);
  sub_1AE5059A8();
}

uint64_t sub_1AE88E8B4(uint64_t result)
{
  uint64_t v1;

  if ((result & 1) == 0)
  {
    sub_1AE56CE14(&qword_1EEDA5010, &qword_1EEDA5008);
    sub_1AE4FCCC4();
  }
  *(_QWORD *)v1 = 0;
  *(_BYTE *)(v1 + 8) = 1;
  return result;
}

uint64_t sub_1AE88E954()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = *v0;
  if ((MEMORY[0x1AF452068](*v0, MEMORY[0x1E0D248E8]) & 1) != 0)
    return 0;
  MEMORY[0x1AF451EC4](v2, MEMORY[0x1E0D248E0]);
  sub_1AE92526C();
  swift_retain();
  sub_1AE9254DC();
  sub_1AE892B14();
  result = sub_1AE4F682C();
  if (!v1)
  {
    result = v4;
    if (!v4)
    {
      sub_1AE924E58();
      return 0;
    }
  }
  return result;
}

void sub_1AE88EA24()
{
  sub_1AE4F7934();
  sub_1AE892B00();
  sub_1AE56CE14(&qword_1EED949B0, &qword_1EED949B8);
  sub_1AE5059A8();
}

void sub_1AE88EA5C(char a1)
{
  uint64_t v1;

  if ((a1 & 1) == 0)
  {
    sub_1AE56CE14(qword_1EED949A0, &qword_1EED949B8);
    sub_1AE4FCCC4();
  }
  *(_QWORD *)v1 = 0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  sub_1AE4FBA48();
}

uint64_t sub_1AE88EAF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *v1;
  sub_1AE56CE14(&qword_1EEDA4FB8, &qword_1EEDA4FC0);
  result = MEMORY[0x1AF452068](v4, v5);
  if ((result & 1) != 0)
  {
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  else
  {
    sub_1AE56CE14(&qword_1EEDA4FC8, &qword_1EEDA4FC0);
    MEMORY[0x1AF451EC4](v4, v7);
    swift_retain();
    sub_1AE9254DC();
    swift_release();
    result = swift_release();
    if (!v2)
    {
      if (v10)
      {
        *(_QWORD *)a1 = v8;
        *(_QWORD *)(a1 + 8) = v9;
        *(_QWORD *)(a1 + 16) = v10;
        *(_QWORD *)(a1 + 24) = v11;
        *(_QWORD *)(a1 + 32) = v12;
        *(_WORD *)(a1 + 40) = v13;
        *(_QWORD *)(a1 + 48) = v14;
        *(_QWORD *)(a1 + 56) = v15;
        *(_QWORD *)(a1 + 64) = v16;
        *(_QWORD *)(a1 + 72) = v17;
        *(_QWORD *)(a1 + 80) = v18;
        *(_WORD *)(a1 + 88) = v19;
      }
      else
      {
        result = sub_1AE924E58();
        *(_QWORD *)a1 = v8;
        *(_QWORD *)(a1 + 8) = v9;
        *(_QWORD *)(a1 + 16) = 0;
        *(_QWORD *)(a1 + 24) = v11;
        *(_QWORD *)(a1 + 32) = v12;
        *(_QWORD *)(a1 + 40) = v13;
        *(_QWORD *)(a1 + 48) = v14;
        *(_QWORD *)(a1 + 56) = v15;
        *(_QWORD *)(a1 + 64) = v16;
        *(_QWORD *)(a1 + 72) = v17;
        *(_QWORD *)(a1 + 80) = v18;
        *(_QWORD *)(a1 + 88) = v19;
      }
      *(_QWORD *)(a1 + 96) = v20;
      *(_QWORD *)(a1 + 104) = v21;
    }
  }
  return result;
}

void sub_1AE88ECAC()
{
  sub_1AE4F7934();
  sub_1AE892B00();
  sub_1AE56CE14(&qword_1EEDA5018, &qword_1EEDA5020);
  sub_1AE5059A8();
}

void sub_1AE88ECE4(char a1)
{
  uint64_t v1;

  if ((a1 & 1) == 0)
  {
    sub_1AE56CE14(qword_1EEDA5028, &qword_1EEDA5020);
    sub_1AE4FCCC4();
  }
  *(_QWORD *)v1 = 0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  sub_1AE4FBA48();
}

uint64_t sub_1AE88ED78@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *v1;
  sub_1AE56CE14(&qword_1EEDA4FE8, &qword_1EEDA4FF0);
  result = MEMORY[0x1AF452068](v4, v5);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(a1 + 112) = 0;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  else
  {
    sub_1AE56CE14(&qword_1EEDA4FF8, &qword_1EEDA4FF0);
    MEMORY[0x1AF451EC4](v4, v7);
    swift_retain();
    sub_1AE9254DC();
    swift_release();
    result = swift_release();
    if (!v2)
    {
      result = v12;
      if (v10)
      {
        *(_QWORD *)a1 = v8;
        *(_QWORD *)(a1 + 8) = v9;
        *(_QWORD *)(a1 + 16) = v10;
        *(_QWORD *)(a1 + 24) = v11;
        *(_QWORD *)(a1 + 32) = v12;
        *(_WORD *)(a1 + 40) = v13;
        *(_QWORD *)(a1 + 48) = v14;
        *(_QWORD *)(a1 + 56) = v15;
        *(_QWORD *)(a1 + 64) = v16;
        *(_QWORD *)(a1 + 72) = v17;
        *(_QWORD *)(a1 + 80) = v18;
        *(_WORD *)(a1 + 88) = v19;
      }
      else
      {
        result = sub_1AE924E58();
        *(_QWORD *)a1 = v8;
        *(_QWORD *)(a1 + 8) = v9;
        *(_QWORD *)(a1 + 16) = 0;
        *(_QWORD *)(a1 + 24) = v11;
        *(_QWORD *)(a1 + 32) = v12;
        *(_QWORD *)(a1 + 40) = v13;
        *(_QWORD *)(a1 + 48) = v14;
        *(_QWORD *)(a1 + 56) = v15;
        *(_QWORD *)(a1 + 64) = v16;
        *(_QWORD *)(a1 + 72) = v17;
        *(_QWORD *)(a1 + 80) = v18;
        *(_QWORD *)(a1 + 88) = v19;
      }
      *(_QWORD *)(a1 + 96) = v20;
      *(_QWORD *)(a1 + 104) = v21;
      *(_QWORD *)(a1 + 112) = v22;
    }
  }
  return result;
}

uint64_t sub_1AE88EF4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[7];

  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_QWORD *)(v1 + 16) = a1;
  swift_retain();
  sub_1AE88EAF0((uint64_t)v10);
  if (v2)
  {
    swift_release();
    sub_1AE4F682C();
  }
  else
  {
    sub_1AE4F682C();
    swift_beginAccess();
    v3 = *(_QWORD *)(v1 + 24);
    v4 = *(_QWORD *)(v1 + 32);
    v5 = *(_QWORD *)(v1 + 40);
    v6 = v10[1];
    *(_OWORD *)(v1 + 24) = v10[0];
    *(_OWORD *)(v1 + 40) = v6;
    v7 = v10[3];
    *(_OWORD *)(v1 + 56) = v10[2];
    *(_OWORD *)(v1 + 72) = v7;
    v8 = v10[5];
    *(_OWORD *)(v1 + 88) = v10[4];
    *(_OWORD *)(v1 + 104) = v8;
    *(_OWORD *)(v1 + 120) = v10[6];
    sub_1AE6942B0(v3, v4, v5);
  }
  return sub_1AE5032E4();
}

uint64_t sub_1AE88F030@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD v31[7];
  uint64_t v32;

  swift_beginAccess();
  v3 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  v6 = v1[8];
  v7 = v1[9];
  v8 = v1[10];
  v9 = v1[12];
  v10 = v1[13];
  v11 = v1[14];
  v12 = v1[15];
  v13 = v1[16];
  v14 = v1[3];
  v24 = v1[11];
  v32 = v1[4];
  v29 = v4;
  v30 = v3;
  v27 = v6;
  v28 = v5;
  v25 = v8;
  v26 = v7;
  sub_1AE89242C(v14, v32, v3);
  sub_1AE88EAF0((uint64_t)v31);
  if (v23)
    return sub_1AE6942B0(v14, v32, v30);
  v16 = v1[3];
  v17 = v1[4];
  v18 = v1[5];
  v19 = v31[1];
  *(_OWORD *)(v1 + 3) = v31[0];
  *(_OWORD *)(v1 + 5) = v19;
  v20 = v31[3];
  *(_OWORD *)(v1 + 7) = v31[2];
  *(_OWORD *)(v1 + 9) = v20;
  v21 = v31[5];
  *(_OWORD *)(v1 + 11) = v31[4];
  *(_OWORD *)(v1 + 13) = v21;
  *(_OWORD *)(v1 + 15) = v31[6];
  result = sub_1AE6942B0(v16, v17, v18);
  v22 = v32;
  *a1 = v14;
  a1[1] = v22;
  a1[2] = v30;
  a1[3] = v29;
  a1[4] = v28;
  a1[5] = v27;
  a1[6] = v26;
  a1[7] = v25;
  a1[8] = v24;
  a1[9] = v9;
  a1[10] = v10;
  a1[11] = v11;
  a1[12] = v12;
  a1[13] = v13;
  return result;
}

uint64_t sub_1AE88F1AC@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  swift_beginAccess();
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v8 = v1[8];
  v9 = v1[9];
  v10 = v1[10];
  v11 = v1[11];
  v12 = v1[12];
  v13 = v1[13];
  v14 = v1[14];
  v15 = v1[15];
  v16 = v1[16];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v12;
  a1[10] = v13;
  a1[11] = v14;
  a1[12] = v15;
  a1[13] = v16;
  return sub_1AE89242C(v3, v4, v5);
}

_QWORD *SubgraphView.__allocating_init(accessAssertion:database:tableName:batchSize:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  result[7] = a6;
  return result;
}

_QWORD *SubgraphView.init(accessAssertion:database:tableName:batchSize:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = a6;
  return v6;
}

uint64_t SubgraphView.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SubgraphView.__deallocating_deinit()
{
  SubgraphView.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE88F2F8()
{
  swift_getObjectType();
  return sub_1AE924CC0();
}

uint64_t sub_1AE88F384(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t *, _QWORD))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  result = a2();
  if (!v4)
  {
    v7 = result;
    sub_1AE501548(&qword_1EEDA4FB0);
    swift_initStackObject();
    sub_1AE88EF4C(v7);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = 0;
    *(_BYTE *)(v8 + 24) = 1;
    v20 = v8 + 16;
    swift_beginAccess();
    sub_1AE88F1AC(&v17);
    v9 = v19;
    if (v19)
    {
      v10 = 0;
      v11 = 1;
      do
      {
        v12 = v17;
        v13 = sub_1AE6942B0(v17, v18, v9);
        if ((v11 & 1) != 0)
        {
          *(_QWORD *)(v8 + 16) = v12;
          *(_BYTE *)(v8 + 24) = 0;
          v10 = v12;
        }
        v17 = v10;
        MEMORY[0x1E0C80A78](v13);
        if ((a4(&v17, sub_1AE892414) & 1) == 0)
          break;
        swift_beginAccess();
        while (1)
        {
          sub_1AE88F1AC(&v17);
          if (!v19)
            break;
          v14 = v17;
          v15 = *(_QWORD *)(v8 + 16);
          v16 = *(_BYTE *)(v8 + 24);
          sub_1AE6942B0(v17, v18, v19);
          if ((v16 & 1) != 0 || v14 != v15)
            break;
          sub_1AE88F030(&v17);
          sub_1AE6942B0(v17, v18, v19);
        }
        sub_1AE88F1AC(&v17);
        if (!v19)
          break;
        v10 = v17;
        sub_1AE6942B0(v17, v18, v19);
        *(_QWORD *)(v8 + 16) = v10;
        *(_BYTE *)(v8 + 24) = 0;
        sub_1AE88F1AC(&v17);
        v11 = 0;
        v9 = v19;
      }
      while (v19);
    }
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1AE88F660(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = v4;
  v12 = (_QWORD *)(a4 + 16);
  swift_beginAccess();
  while (1)
  {
    result = sub_1AE88F1AC(&v15);
    v7 = v17;
    if (!v17)
      break;
    v19 = v5;
    v8 = v15;
    if ((*(_BYTE *)(a4 + 24) & 1) != 0 || v15 != *v12)
      return sub_1AE6942B0(v15, v16, v17);
    v9 = v19;
    v19 = v18;
    v14 = v16;
    v10 = a1(&v15);
    result = sub_1AE6942B0(v8, v14, v7);
    if (!v9)
    {
      sub_1AE88F030(&v15);
      v5 = 0;
      result = sub_1AE6942B0(v15, v16, v17);
      if ((v10 & 1) != 0)
        continue;
    }
    return result;
  }
  return result;
}

uint64_t sub_1AE88F7F4()
{
  swift_getObjectType();
  return sub_1AE924CC0();
}

uint64_t sub_1AE88F8A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t *), uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t (*)(uint64_t (*a1)(uint64_t *)), uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t *, uint64_t (*)(uint64_t (*)(uint64_t *)), uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t *);

  v29 = a6;
  v28 = a5;
  v26 = a4;
  v33 = a3;
  v25 = a1;
  v10 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v27 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = (char *)&v24 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, a7);
  sub_1AE926070();
  swift_getAssociatedConformanceWitness();
  sub_1AE926760();
  if ((v31 & 1) == 0)
  {
    v17 = v25;
    v18 = v30;
    do
    {
      v30 = v18;
      v19 = v33(v17, &v30);
      if (v7)
        break;
      v20 = v19;
      sub_1AE501548(&qword_1EEDA4FB0);
      swift_initStackObject();
      v21 = sub_1AE88EF4C(v20);
      sub_1AE88F1AC(&v30);
      v22 = v32;
      sub_1AE6942B0(v30, v31, v32);
      if (v22)
      {
        v30 = v18;
        v23 = v28(&v30, sub_1AE69430C, v21);
        swift_release();
        if ((v23 & 1) == 0)
          return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v15, AssociatedTypeWitness);
      }
      else
      {
        swift_release();
      }
      sub_1AE926760();
      v18 = v30;
    }
    while ((v31 & 1) == 0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v15, AssociatedTypeWitness);
}

uint64_t sub_1AE88FBAC(uint64_t (*a1)(uint64_t *))
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8[2];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  do
  {
    result = sub_1AE88F030(v8);
    if (v1)
      break;
    v3 = v9;
    if (!v9)
      break;
    v11 = v10;
    v5 = v8[0];
    v4 = v8[1];
    v6 = a1(v8);
    result = sub_1AE6942B0(v5, v4, v3);
  }
  while ((v6 & 1) != 0);
  return result;
}

uint64_t sub_1AE88FCC0(uint64_t a1, void (*a2)(uint64_t (*)(uint64_t a1), _QWORD *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  char v10;
  _QWORD *v11;

  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = 1;
  v10 = v9 + 16;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v9;
  v11[3] = a4;
  v11[4] = a5;
  swift_retain();
  a2(sub_1AE892948, v11);
  if (!v5)
  {
    swift_beginAccess();
    v10 = *(_BYTE *)(v9 + 16);
  }
  swift_release();
  swift_release();
  return v10 & 1;
}

uint64_t sub_1AE88FDBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_OWORD *))
{
  uint64_t v3;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  char v13;
  _OWORD v15[2];
  uint64_t v16;
  __int16 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_WORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_WORD *)(a1 + 88);
  v9 = *(_QWORD *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 104);
  v11 = *(_OWORD *)(a1 + 16);
  v15[0] = *(_OWORD *)a1;
  v15[1] = v11;
  v16 = v5;
  v17 = v6;
  v12 = *(_OWORD *)(a1 + 64);
  v18 = *(_OWORD *)(a1 + 48);
  v19 = v12;
  v20 = v7;
  v21 = v8;
  v22 = v9;
  v23 = v10;
  v13 = a3(v15);
  if (!v3)
  {
    swift_beginAccess();
    *(_BYTE *)(a2 + 16) = v13 & 1;
  }
  return v13 & 1;
}

uint64_t sub_1AE88FE5C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t *v15;
  void (*v16)(uint64_t *, char *, uint64_t);
  uint64_t *v17;
  uint64_t v18[5];
  uint64_t v19[5];

  v6 = sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE924C9C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE8922F4(a1, (uint64_t)v8);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9) == 1)
  {
    sub_1AE524534((uint64_t)v8, (uint64_t *)&unk_1ED30FA40);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 16))(a3, a2, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v14 = MEMORY[0x1E0D23DC0];
    v19[3] = v9;
    v19[4] = MEMORY[0x1E0D23DC0];
    v15 = sub_1AE52F6A8(v19);
    v16 = *(void (**)(uint64_t *, char *, uint64_t))(v10 + 16);
    v16(v15, v12, v9);
    v18[3] = v9;
    v18[4] = v14;
    v17 = sub_1AE52F6A8(v18);
    v16(v17, a2, v9);
    sub_1AE9251C4();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v18);
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v19);
  }
}

uint64_t sub_1AE88FFDC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[5];

  v20 = a1;
  v23 = a2;
  v2 = sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1AE924C9C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EEDA4F80);
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1AE501548((uint64_t *)&unk_1EEDA4F70);
  v21 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1AE925368();
  sub_1AE8922F4(v20, (uint64_t)v4);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_1AE524534((uint64_t)v4, (uint64_t *)&unk_1ED30FA40);
    sub_1AE9252E4();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v24[3] = v5;
    v24[4] = MEMORY[0x1E0D23DC0];
    v15 = sub_1AE52F6A8(v24);
    (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(v15, v8, v5);
    sub_1AE925320();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v24);
  }
  sub_1AE501548((uint64_t *)&unk_1ED3191D0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1AE933BD0;
  *(_QWORD *)(v16 + 56) = &type metadata for ExtendedTripleColumn;
  v17 = sub_1AE6687D4();
  *(_QWORD *)(v16 + 64) = v17;
  *(_BYTE *)(v16 + 32) = 0;
  *(_QWORD *)(v16 + 96) = &type metadata for ExtendedTripleColumn;
  *(_QWORD *)(v16 + 104) = v17;
  *(_BYTE *)(v16 + 72) = 2;
  sub_1AE56CE14(&qword_1EEDA4FE0, &qword_1EEDA4F80);
  sub_1AE924CF0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v14, v12);
}

void sub_1AE890298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v20 = a4;
  sub_1AE892B6C();
  v18 = v8;
  v19 = v7;
  v9 = sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v6;
  v14 = *(_QWORD *)(v4 + 40);
  v15 = *(_QWORD *)(v4 + 48);
  sub_1AE8922F4(v5, (uint64_t)v12);
  sub_1AE892B34();
  v16 = (v11 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v14;
  *(_QWORD *)(v17 + 24) = v15;
  sub_1AE89235C((uint64_t)v12, v17 + v10);
  *(_QWORD *)(v17 + v16) = v13;
  *(_QWORD *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  v21 = v19;
  v22 = v20;
  swift_bridgeObjectRetain();
  sub_1AE88F2F8();
  sub_1AE892BE8();
  sub_1AE501D88();
  sub_1AE500284();
}

uint64_t sub_1AE89039C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19[4];
  _QWORD v20[5];
  _BYTE v21[24];
  ValueMetadata *v22;
  unint64_t v23;

  v19[0] = a4;
  v19[1] = a2;
  v19[2] = a3;
  v19[3] = a1;
  v6 = sub_1AE924C9C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1AE501548(&qword_1EEDA4F80);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = &type metadata for ExtendedTripleColumn;
  v23 = sub_1AE6686A4();
  v21[0] = 0;
  v20[3] = &type metadata for EntityIdentifier;
  v20[4] = sub_1AE578E74();
  v20[0] = a5;
  sub_1AE9251D0();
  sub_1AE524534((uint64_t)v20, &qword_1ED319E60);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v21);
  sub_1AE88FE5C(v19[0], v9, (uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, v6);
  sub_1AE88FFDC((uint64_t)v12, (uint64_t)v16);
  sub_1AE524534((uint64_t)v12, (uint64_t *)&unk_1ED30FA40);
  sub_1AE56CE14(&qword_1EEDA4FD0, &qword_1EEDA4F80);
  sub_1AE8926A0();
  v17 = sub_1AE924B1C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v17;
}

void SubgraphView.enumerateTriples(for:block:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE50688C();
  v11 = *a1;
  v8 = sub_1AE4F6770();
  sub_1AE508140(v3, v9, v10, v8);
  sub_1AE890298((uint64_t)&v11, v3, a2, a3);
  sub_1AE524534(v3, (uint64_t *)&unk_1ED30FA40);
}

void sub_1AE890650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a4;
  v25 = a6;
  v26 = a2;
  v28 = *v6;
  v29 = a3;
  v9 = sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v25 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = v6[6];
  v27 = v6[5];
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))((char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a5);
  swift_bridgeObjectRetain();
  sub_1AE501548((uint64_t *)&unk_1ED318F20);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_5;
  v20 = v31;
  if (*(_QWORD *)(v31 + 16) >> 4 > 0x752uLL)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1AE8922F4(v26, (uint64_t)v13);
    v23 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v27;
    *(_QWORD *)(v24 + 24) = v18;
    sub_1AE89235C((uint64_t)v13, v24 + v23);
    *(_QWORD *)(v24 + ((v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = v28;
    sub_1AE88F7F4();
    goto LABEL_6;
  }
  sub_1AE8922F4(v26, (uint64_t)v16);
  sub_1AE892B34();
  v21 = (unint64_t)&v13[v11 + 7] & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v27;
  *(_QWORD *)(v22 + 24) = v18;
  sub_1AE89235C((uint64_t)v16, (uint64_t)&v13[v22]);
  *(_QWORD *)(v22 + v21) = v20;
  *(_QWORD *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8)) = v28;
  sub_1AE88F2F8();
LABEL_6:
  swift_release();
  sub_1AE501D88();
  sub_1AE500284();
}

uint64_t sub_1AE890870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[24];
  ValueMetadata *v25;
  unint64_t v26;
  uint64_t v27;

  v23 = a1;
  v19[0] = a4;
  v19[1] = a6;
  v21 = a2;
  v22 = a3;
  v7 = sub_1AE924C9C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1AE501548(&qword_1EEDA4F80);
  v20 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = a5;
  v25 = &type metadata for ExtendedTripleColumn;
  v26 = sub_1AE6686A4();
  v24[0] = 0;
  sub_1AE501548((uint64_t *)&unk_1ED318F20);
  sub_1AE56CE14(&qword_1ED30F950, (uint64_t *)&unk_1ED318F20);
  sub_1AE578E74();
  sub_1AE926058();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v24);
  sub_1AE88FE5C(v19[0], v10, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v13, 0, 1, v7);
  sub_1AE88FFDC((uint64_t)v13, (uint64_t)v16);
  sub_1AE524534((uint64_t)v13, (uint64_t *)&unk_1ED30FA40);
  sub_1AE56CE14(&qword_1EEDA4FD0, &qword_1EEDA4F80);
  sub_1AE8926A0();
  v17 = sub_1AE924B1C();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v14);
  return v17;
}

void sub_1AE890A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[4];
  _QWORD v17[5];
  char v18;
  ValueMetadata *v19;
  unint64_t v20;

  sub_1AE4F67EC();
  v16[0] = v3;
  v16[1] = v2;
  v16[2] = v5;
  v16[3] = v4;
  v7 = v6;
  v8 = sub_1AE4F6770();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F683C();
  v13 = sub_1AE501548(&qword_1EEDA4F80);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  sub_1AE5009EC();
  v15 = *v7;
  v19 = &type metadata for ExtendedTripleColumn;
  v20 = sub_1AE6686A4();
  v18 = 0;
  v17[3] = &type metadata for EntityIdentifier;
  v17[4] = sub_1AE578E74();
  v17[0] = v15;
  sub_1AE9251D0();
  sub_1AE524534((uint64_t)v17, &qword_1ED319E60);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v18);
  sub_1AE88FE5C(v16[0], v11, v0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1AE892B9C(v0);
  sub_1AE88FFDC(v0, v1);
  sub_1AE524534(v0, (uint64_t *)&unk_1ED30FA40);
  sub_1AE56CE14(&qword_1EEDA4FD0, &qword_1EEDA4F80);
  sub_1AE8926A0();
  sub_1AE924B1C();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v13);
  sub_1AE5032E4();
  sub_1AE4F667C();
}

void SubgraphView.enumerateTriples<A>(for:block:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1AE892B44();
  sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE5009EC();
  v2 = sub_1AE4F6770();
  sub_1AE508140(v0, v3, v4, v2);
  v5 = sub_1AE5073A8();
  sub_1AE890650(v5, v6, v7, v8, v9, v10);
  sub_1AE524534(v0, (uint64_t *)&unk_1ED30FA40);
  sub_1AE501D88();
  sub_1AE500284();
}

void sub_1AE890CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = a3;
  v5 = *v3;
  v6 = sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = v3[5];
  v10 = v3[6];
  sub_1AE8922F4(a1, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AE892B34();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = v10;
  sub_1AE89235C((uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v7);
  *(_QWORD *)(v11 + ((v8 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
  swift_bridgeObjectRetain();
  sub_1AE88F2F8();
  sub_1AE892BE8();
  sub_1AE501D88();
  sub_1AE500284();
}

uint64_t sub_1AE890DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1AE501548(&qword_1EEDA4F80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE88FFDC(a4, (uint64_t)v8);
  sub_1AE56CE14(&qword_1EEDA4FD0, &qword_1EEDA4F80);
  sub_1AE8926A0();
  v9 = sub_1AE924B1C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

void SubgraphView.enumerateTriples(block:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE508608();
  sub_1AE737D90();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F90F4();
  v4 = sub_1AE4F6770();
  sub_1AE508140(v2, v5, v6, v4);
  sub_1AE890CCC(v2, v1, v0);
  sub_1AE5092A8();
}

void sub_1AE890F30()
{
  SubgraphView.enumerateTriples(block:)();
}

void sub_1AE890F68(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void (*)(), _QWORD *))
{
  _QWORD v4[4];

  v4[3] = a3;
  v4[2] = a2;
  a4(a1, sub_1AE880B60, v4);
  sub_1AE4FBFF0();
}

void sub_1AE890F9C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  SubgraphView.enumerateTriples(for:block:)(a1, a2, a3);
  sub_1AE4FD974();
}

void sub_1AE890FB8()
{
  SubgraphView.enumerateTriples<A>(for:block:)();
}

void sub_1AE890FF0()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE4F67EC();
  sub_1AE892B6C();
  v1 = sub_1AE501548((uint64_t *)&unk_1EEDA4F70);
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4F683C();
  sub_1AE892C00();
  sub_1AE892BAC();
  sub_1AE892BF4();
  sub_1AE501548(&qword_1EED99540);
  sub_1AE892BD0();
  if (!v0)
    sub_1AE898248();
  sub_1AE892B5C();
  sub_1AE4F667C();
}

uint64_t sub_1AE8910C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];
  uint64_t v37[3];
  ValueMetadata *v38;
  unint64_t v39;
  uint64_t v40;

  v30 = a3;
  v31 = a5;
  v32 = a2;
  v35 = a1;
  v29 = a6;
  v7 = sub_1AE924C9C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1AE501548(&qword_1EEDA4F80);
  v34 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1AE501548((uint64_t *)&unk_1EED9EFA0);
  v33 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v28 - v18;
  v38 = &type metadata for ExtendedTripleColumn;
  v39 = sub_1AE6686A4();
  LOBYTE(v37[0]) = 4;
  v36[0] = a4;
  v20 = EntityIdentifier.stringValue.getter();
  v36[3] = MEMORY[0x1E0DEA968];
  v36[4] = MEMORY[0x1E0D24960];
  v36[0] = v20;
  v36[1] = v21;
  sub_1AE9251D0();
  sub_1AE524534((uint64_t)v36, &qword_1ED319E60);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v37);
  v38 = (ValueMetadata *)v7;
  v39 = MEMORY[0x1E0D23DC0];
  v22 = sub_1AE52F6A8(v37);
  sub_1AE88FE5C(v30, v10, (uint64_t)v22);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1AE501548((uint64_t *)&unk_1EEDA4F70);
  sub_1AE925320();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v37);
  sub_1AE501548(&qword_1ED30FD70);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v23 + 56) = &type metadata for ExtendedTripleColumn;
  *(_QWORD *)(v23 + 64) = sub_1AE668814();
  *(_BYTE *)(v23 + 32) = 0;
  sub_1AE925068();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v11);
  sub_1AE925074();
  v24 = *(void (**)(char *, uint64_t))(v33 + 8);
  v24(v17, v14);
  sub_1AE56CE14(&qword_1EEDA4FA0, (uint64_t *)&unk_1EED9EFA0);
  sub_1AE52F66C();
  v25 = v40;
  v26 = sub_1AE924B58();
  result = ((uint64_t (*)(char *, uint64_t))v24)(v19, v14);
  if (!v25)
    *v29 = v26;
  return result;
}

uint64_t SubgraphView.entityIds(referringTo:)()
{
  return sub_1AE8919F0();
}

uint64_t sub_1AE8913D4()
{
  return SubgraphView.entityIds(referringTo:)();
}

void sub_1AE8913F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  sub_1AE4F67EC();
  sub_1AE892B6C();
  v12 = sub_1AE501548((uint64_t *)&unk_1EEDA4F70);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F683C();
  sub_1AE892C00();
  sub_1AE892BAC();
  sub_1AE892BF4();
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE892BD0();
  if (v10)
  {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  else
  {
    v14 = *(_QWORD *)(a10 + 16);
    v15 = v12;
    if (v14)
    {
      v25 = v12;
      swift_bridgeObjectRetain();
      v16 = (unint64_t *)(a10 + 40);
      v17 = MEMORY[0x1E0DEE9D8];
      v18 = v13;
      do
      {
        v19 = *(v16 - 1);
        v20 = *v16;
        swift_bridgeObjectRetain();
        EntityIdentifier.init(_:)(v19, v20, (uint64_t)&v26);
        if ((v27 & 1) == 0)
        {
          v21 = v26;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1AE892BDC();
            v17 = v23;
          }
          v22 = *(_QWORD *)(v17 + 16);
          if (v22 >= *(_QWORD *)(v17 + 24) >> 1)
          {
            sub_1AE892BDC();
            v17 = v24;
          }
          *(_QWORD *)(v17 + 16) = v22 + 1;
          *(_QWORD *)(v17 + 8 * v22 + 32) = v21;
          v13 = v18;
        }
        v16 += 2;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      v15 = v25;
    }
    swift_bridgeObjectRelease();
    sub_1AE898248();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v15);
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE8915C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[2];
  uint64_t v37;
  _QWORD v38[3];
  ValueMetadata *v39;
  unint64_t v40;
  uint64_t v41[3];
  ValueMetadata *v42;
  unint64_t v43;
  uint64_t v44[3];
  uint64_t v45;
  uint64_t v46;
  char v47;

  v29 = a5;
  v28 = a3;
  v30 = a2;
  v34 = a1;
  v26 = a6;
  v7 = sub_1AE924C9C();
  v27 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1AE501548(&qword_1EEDA4F80);
  v33 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1AE501548((uint64_t *)&unk_1EEDA4F88);
  v32 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v26 - v16;
  v42 = &type metadata for ExtendedTripleColumn;
  v43 = sub_1AE6686A4();
  LOBYTE(v41[0]) = 0;
  v39 = &type metadata for EntityIdentifier;
  v40 = sub_1AE578E74();
  v38[0] = a4;
  v45 = v7;
  v46 = MEMORY[0x1E0D23DC0];
  v18 = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8(v44);
  sub_1AE9251D0();
  sub_1AE524534((uint64_t)v38, &qword_1ED319E60);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v41);
  v47 = 4;
  v39 = (ValueMetadata *)MEMORY[0x1E0DEA968];
  v40 = MEMORY[0x1E0D24960];
  v38[0] = 624583789;
  v38[1] = 0xE400000000000000;
  v37 = 0;
  memset(v36, 0, sizeof(v36));
  v42 = (ValueMetadata *)v7;
  v43 = v18;
  sub_1AE52F6A8(v41);
  sub_1AE9250C8();
  sub_1AE524534((uint64_t)v36, &qword_1ED319E60);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v38);
  sub_1AE9251C4();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v41);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v44);
  v45 = v7;
  v46 = MEMORY[0x1E0D23DC0];
  v19 = sub_1AE52F6A8(v44);
  sub_1AE88FE5C(v28, v9, (uint64_t)v19);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v7);
  sub_1AE501548((uint64_t *)&unk_1EEDA4F70);
  sub_1AE925320();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v44);
  sub_1AE501548(&qword_1ED30FD70);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v20 + 56) = &type metadata for ExtendedTripleColumn;
  *(_QWORD *)(v20 + 64) = sub_1AE668814();
  *(_BYTE *)(v20 + 32) = 4;
  v21 = v31;
  sub_1AE925068();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v21);
  sub_1AE925074();
  v22 = *(void (**)(char *, uint64_t))(v32 + 8);
  v22(v15, v12);
  sub_1AE56CE14(&qword_1EEDA4F98, (uint64_t *)&unk_1EEDA4F88);
  v23 = v35;
  v24 = sub_1AE924B40();
  result = ((uint64_t (*)(char *, uint64_t))v22)(v17, v12);
  if (!v23)
    *v26 = v24;
  return result;
}

uint64_t SubgraphView.entityIds(referredBy:)()
{
  return sub_1AE8919F0();
}

uint64_t sub_1AE8919F0()
{
  void (*v0)(uint64_t, uint64_t *);
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_1AE892B8C();
  sub_1AE737D90();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F90F4();
  v4 = *v1;
  v5 = sub_1AE4F6770();
  sub_1AE508140(v2, v6, v7, v5);
  v9 = v4;
  v0(v2, &v9);
  sub_1AE5092A8();
  return sub_1AE5032E4();
}

uint64_t sub_1AE891A7C()
{
  return SubgraphView.entityIds(referredBy:)();
}

void SubgraphView.filteredView(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE4F6770();
  sub_1AE892BBC();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE50AE78(v2, v4);
  type metadata accessor for SubgraphFilteredView();
  v3 = sub_1AE4FCE84();
  *(_QWORD *)(v3 + 16) = v0;
  sub_1AE892B20(v3, OBJC_IVAR____TtC20IntelligencePlatform20SubgraphFilteredView_filter);
  swift_retain();
  sub_1AE4FCDD0();
}

uint64_t type metadata accessor for SubgraphFilteredView()
{
  uint64_t result;

  result = qword_1EEDA4F60;
  if (!qword_1EEDA4F60)
    return swift_getSingletonMetadata();
  return result;
}

void SubgraphView.filteredContext(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE4F6770();
  sub_1AE892BBC();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE50AE78(v2, v4);
  type metadata accessor for SubgraphFilteredView();
  v3 = sub_1AE4FCE84();
  *(_QWORD *)(v3 + 16) = v0;
  sub_1AE892B20(v3, OBJC_IVAR____TtC20IntelligencePlatform20SubgraphFilteredView_filter);
  sub_1AE501548((uint64_t *)&unk_1EEDA4F38);
  swift_allocObject();
  swift_retain();
  sub_1AE527CC8(v3);
  sub_1AE4FCDD0();
}

uint64_t SubgraphFilteredView.subgraphView.getter()
{
  return swift_retain();
}

uint64_t SubgraphFilteredView.filter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC20IntelligencePlatform20SubgraphFilteredView_filter;
  v4 = sub_1AE4F6770();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void SubgraphFilteredView.deinit()
{
  uint64_t v0;

  sub_1AE52497C();
  v0 = sub_1AE4F6770();
  sub_1AE4FB738(v0);
  sub_1AE4F6664();
}

uint64_t SubgraphFilteredView.__deallocating_deinit()
{
  uint64_t v0;

  sub_1AE52497C();
  v0 = sub_1AE4F6770();
  sub_1AE4FB738(v0);
  return swift_deallocClassInstance();
}

void SubgraphFilteredView.enumerateTriples(for:block:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE50688C();
  v9 = *a1;
  v8 = sub_1AE4F6770();
  sub_1AE5064B0(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16));
  sub_1AE506800(v3);
  sub_1AE890298((uint64_t)&v9, v3, a2, a3);
  sub_1AE524534(v3, (uint64_t *)&unk_1ED30FA40);
  sub_1AE4FCE34();
}

void SubgraphFilteredView.enumerateTriples<A>(for:block:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1AE4F67EC();
  sub_1AE892B44();
  sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE5009EC();
  v3 = v0 + OBJC_IVAR____TtC20IntelligencePlatform20SubgraphFilteredView_filter;
  v4 = sub_1AE4F6770();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v1, v3, v4);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, 0, 1, v4);
  v5 = sub_1AE5073A8();
  sub_1AE890650(v5, v6, v7, v8, v9, v10);
  sub_1AE524534(v1, (uint64_t *)&unk_1ED30FA40);
}

void SubgraphFilteredView.enumerateTriples(block:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE508608();
  sub_1AE737D90();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F90F4();
  v4 = sub_1AE4F6770();
  sub_1AE5064B0(v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  sub_1AE506800(v2);
  sub_1AE890CCC(v2, v1, v0);
  sub_1AE5092A8();
  sub_1AE501D88();
  sub_1AE4FCE34();
}

void sub_1AE891EA4()
{
  SubgraphFilteredView.enumerateTriples(block:)();
}

void sub_1AE891EDC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  SubgraphFilteredView.enumerateTriples(for:block:)(a1, a2, a3);
  sub_1AE4FD974();
}

void sub_1AE891EF8()
{
  SubgraphFilteredView.enumerateTriples<A>(for:block:)();
}

uint64_t SubgraphFilteredView.entityIds(referringTo:)()
{
  return sub_1AE891F88();
}

uint64_t sub_1AE891F4C()
{
  return SubgraphFilteredView.entityIds(referringTo:)();
}

uint64_t SubgraphFilteredView.entityIds(referredBy:)()
{
  return sub_1AE891F88();
}

uint64_t sub_1AE891F88()
{
  void (*v0)(uint64_t, uint64_t *);
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_1AE892B8C();
  sub_1AE737D90();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F90F4();
  v5 = *v2;
  v6 = v1 + OBJC_IVAR____TtC20IntelligencePlatform20SubgraphFilteredView_filter;
  v7 = sub_1AE4F6770();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v3, v6, v7);
  sub_1AE892B9C(v3);
  v9 = v5;
  v0(v3, &v9);
  sub_1AE5092A8();
  return sub_1AE5032E4();
}

void sub_1AE892048(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1AE8921B8(qword_1EED99010, a2, (void (*)(uint64_t))type metadata accessor for SubgraphView);
  *(_QWORD *)(a1 + 8) = v3;
}

uint64_t type metadata accessor for SubgraphView()
{
  return objc_opt_self();
}

void sub_1AE8920A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1AE8921B8(&qword_1EED99008, a2, (void (*)(uint64_t))type metadata accessor for SubgraphView);
  *(_QWORD *)(a1 + 8) = v3;
}

void sub_1AE8920E0()
{
  sub_1AE56CE14(&qword_1EED99520, &qword_1EED99518);
}

void sub_1AE89210C()
{
  sub_1AE56CE14(qword_1EED99530, &qword_1EED99528);
}

void sub_1AE892138(uint64_t a1)
{
  uint64_t v2;

  sub_1AE8921B8(&qword_1EEDA4F48, 255, (void (*)(uint64_t))type metadata accessor for SubgraphFilteredView);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1AE892178(uint64_t a1)
{
  uint64_t v2;

  sub_1AE8921B8(qword_1EEDA4F50, 255, (void (*)(uint64_t))type metadata accessor for SubgraphFilteredView);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1AE8921B8(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t))
{
  if (!*a1)
  {
    a3(a2);
    sub_1AE5068A4();
  }
  sub_1AE4F6664();
}

uint64_t sub_1AE8921EC()
{
  return SubgraphFilteredView.entityIds(referredBy:)();
}

uint64_t method lookup function for SubgraphView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SubgraphView.__allocating_init(accessAssertion:database:tableName:batchSize:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1AE892230()
{
  return type metadata accessor for SubgraphFilteredView();
}

uint64_t sub_1AE892238()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AE924C9C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SubgraphFilteredView()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AE8922C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  sub_1AE880B2C(a1, a2, a3);
  return v3 & 1;
}

uint64_t sub_1AE8922D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1AE8915C8(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1AE8922F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE89233C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1AE8910C4(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1AE89235C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE8923A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  sub_1AE508098();
  return sub_1AE890DAC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v3);
}

uint64_t sub_1AE8923EC(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE88F384(a1, *(uint64_t (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t *, _QWORD))(v1 + 32));
}

uint64_t sub_1AE892408()
{
  return sub_1AE4FBD64();
}

uint64_t sub_1AE892414(uint64_t (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  return sub_1AE88F660(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1AE89242C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AE892488()
{
  sub_1AE56CE14(&qword_1EEDA5038, &qword_1EEDA5040);
  return sub_1AE924E64();
}

uint64_t sub_1AE8924F8()
{
  sub_1AE56CE14(&qword_1EEDA5000, &qword_1EEDA5008);
  return sub_1AE924E64();
}

uint64_t sub_1AE892568()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AE924E64();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1AE8925A8()
{
  sub_1AE56CE14(&qword_1EED949B0, &qword_1EED949B8);
  return sub_1AE924E64();
}

uint64_t sub_1AE892618()
{
  sub_1AE56CE14(&qword_1EEDA4FB8, &qword_1EEDA4FC0);
  return sub_1AE924E64();
}

uint64_t sub_1AE892688()
{
  return sub_1AE892618();
}

unint64_t sub_1AE8926A0()
{
  unint64_t result;

  result = qword_1EEDA4FD8;
  if (!qword_1EEDA4FD8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ExtendedTriple, &type metadata for ExtendedTriple);
    atomic_store(result, (unint64_t *)&qword_1EEDA4FD8);
  }
  return result;
}

uint64_t sub_1AE8926E0()
{
  uint64_t v0;

  sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  sub_1AE503D2C();
  v0 = sub_1AE4F6770();
  if (!sub_1AE4F97D0(v0))
    sub_1AE50A1D4();
  sub_1AE892B7C();
  return sub_1AE4FF104();
}

void sub_1AE892730()
{
  sub_1AE508608();
  sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  sub_1AE508098();
  sub_1AE890A98();
  sub_1AE505F0C();
}

uint64_t sub_1AE892778()
{
  uint64_t v0;

  sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  sub_1AE503D2C();
  v0 = sub_1AE4F6770();
  if (!sub_1AE4F97D0(v0))
    sub_1AE50A1D4();
  sub_1AE892B7C();
  swift_bridgeObjectRelease();
  return sub_1AE4FF104();
}

void sub_1AE8927E0()
{
  sub_1AE892894();
}

uint64_t sub_1AE8927FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE88F8A0(a1, *(_QWORD *)(v1 + 32), *(uint64_t (**)(uint64_t, uint64_t *))(v1 + 40), *(_QWORD *)(v1 + 48), *(uint64_t (**)(uint64_t *, uint64_t (*)(uint64_t (*)(uint64_t *)), uint64_t))(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1AE892820()
{
  uint64_t v0;

  sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  sub_1AE503D2C();
  v0 = sub_1AE4F6770();
  if (!sub_1AE4F97D0(v0))
    sub_1AE50A1D4();
  sub_1AE892B7C();
  return sub_1AE4FF104();
}

void sub_1AE892878()
{
  sub_1AE892894();
}

void sub_1AE892894()
{
  void (*v0)(uint64_t, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1AE892B8C();
  v3 = *(_QWORD *)(sub_1AE501548((uint64_t *)&unk_1ED30FA40) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v0(v2, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
  sub_1AE505F0C();
}

uint64_t sub_1AE892900(uint64_t a1, void (*a2)(uint64_t (*)(uint64_t a1), _QWORD *), uint64_t a3)
{
  uint64_t v3;

  return sub_1AE88FCC0(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24)) & 1;
}

uint64_t sub_1AE89291C()
{
  return sub_1AE4FBD64();
}

uint64_t sub_1AE892928()
{
  sub_1AE52497C();
  return swift_deallocObject();
}

uint64_t sub_1AE892948(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE88FDBC(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(_OWORD *))(v1 + 24)) & 1;
}

uint64_t sub_1AE892968()
{
  sub_1AE56CE14(&qword_1EEDA5018, &qword_1EEDA5020);
  return sub_1AE924E64();
}

uint64_t sub_1AE8929D8()
{
  sub_1AE56CE14(&qword_1EEDA4FE8, &qword_1EEDA4FF0);
  return sub_1AE924E64();
}

uint64_t sub_1AE892A48()
{
  return sub_1AE8929D8();
}

uint64_t sub_1AE892A60()
{
  return sub_1AE8924F8();
}

uint64_t sub_1AE892A78()
{
  return sub_1AE892968();
}

uint64_t sub_1AE892A90()
{
  return sub_1AE8925A8();
}

uint64_t sub_1AE892AA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1AE892568();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1AE892AD0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AE892AA8(a1);
}

uint64_t sub_1AE892AE8()
{
  return sub_1AE892488();
}

uint64_t sub_1AE892B14()
{
  return swift_release();
}

uint64_t sub_1AE892B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(a1 + a2, v3, v2);
}

uint64_t sub_1AE892B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_1AE892B9C(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, 0, 1, v1);
}

uint64_t sub_1AE892BAC()
{
  return sub_1AE925368();
}

uint64_t sub_1AE892BD0()
{
  return sub_1AE924CCC();
}

void sub_1AE892BDC()
{
  sub_1AE519D1C();
}

uint64_t sub_1AE892BE8()
{
  return swift_release();
}

uint64_t sub_1AE892BF4()
{
  return swift_getObjectType();
}

uint64_t sub_1AE892C00()
{
  return swift_bridgeObjectRetain();
}

uint64_t static SystemPreferencesImpl.personalizationDataCollectionAllowed()()
{
  sub_1AE60DB44();
  return sub_1AE892C2C() & 1;
}

uint64_t sub_1AE892C2C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  char v6;

  if (qword_1EED98FD0 != -1)
    swift_once();
  swift_beginAccess();
  v0 = byte_1EED995A8;
  v1 = qword_1EED995B0;
  v2 = unk_1EED995B8;
  v3 = (void *)qword_1EED995C0;
  swift_bridgeObjectRetain();
  v4 = v3;
  v5 = (void *)MEMORY[0x1AF454348]();
  v6 = sub_1AE5F54A0(v0, v1, v2, v4);
  objc_autoreleasePoolPop(v5);

  swift_bridgeObjectRelease();
  return v6 & 1;
}

void static SystemPreferencesImpl.updatePersonalizationDataCollectionAllowed(_:)()
{
  id v0;

  sub_1AE60DB44();
  sub_1AE892D88();
  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v0, sel_postNotificationName_object_, CFSTR("com.apple.intelligenceplatform.personalizationDataCollectionAllowed.changed"), 0);

}

uint64_t sub_1AE892D88()
{
  uint64_t v0;
  void *v1;

  if (qword_1EED98FD0 != -1)
    swift_once();
  v0 = swift_beginAccess();
  v1 = (void *)MEMORY[0x1AF454348](v0);
  sub_1AE5F563C((uint64_t)&byte_1EED995A8);
  objc_autoreleasePoolPop(v1);
  return swift_endAccess();
}

id SystemPreferencesImpl.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SystemPreferencesImpl.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SystemPreferencesImpl.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SystemPreferencesImpl()
{
  return objc_opt_self();
}

uint64_t sub_1AE892F00()
{
  unsigned __int8 v0;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_isInternalDevice);
  sub_1AE60DB44();
  result = static NSUserDefaults.makeIntelligencePlatformUserDefaults()();
  byte_1EED995A8 = v0;
  qword_1EED995B0 = 0xD000000000000024;
  unk_1EED995B8 = 0x80000001AE989FE0;
  qword_1EED995C0 = result;
  return result;
}

uint64_t sub_1AE892F70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_OWORD *)(v0 + 16) = xmmword_1AE968550;
  *(_QWORD *)(v0 + 32) = &unk_1E5DB00E0;
  *(_OWORD *)(v0 + 40) = xmmword_1AE934390;
  *(_OWORD *)(v0 + 56) = xmmword_1AE968560;
  *(_QWORD *)(v0 + 72) = 0x80000001AE98A0A0;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1AE503D48();
  sub_1AE5158B8(v1, v2);
  return v0;
}

void sub_1AE892FFC(uint64_t a1@<X1>, char *a2@<X8>)
{
  char v2;
  _QWORD *v3;

  v2 = *(_BYTE *)(a1 + 64);
  if (((1 << v2) & 0x1DE) != 0)
    goto LABEL_2;
  if (!*(_BYTE *)(a1 + 64))
  {
    v2 = 6;
LABEL_2:
    *a2 = v2;
    return;
  }
  sub_1AE5322E0();
  sub_1AE4F6778();
  *v3 = 0xD000000000000038;
  v3[1] = 0x80000001AE98A060;
  sub_1AE4FBB3C((uint64_t)v3, 2);
}

uint64_t sub_1AE893084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  Swift::String v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  unsigned __int8 v34;
  uint64_t v35;
  __int128 *v36;
  unint64_t v37;
  char v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  _QWORD v58[2];
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  unsigned __int8 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  unsigned __int8 v82;

  v7 = v6;
  if (((1 << *(_BYTE *)(a6 + 64)) & 0x1CA) == 0)
  {
LABEL_31:
    v28 = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 88) = xmmword_1AE934380;
    *(_BYTE *)(a1 + 104) = 0;
    return v28 & 1;
  }
  v11 = (_QWORD *)(a6 + 32);
  sub_1AE500810();
  if (*(_QWORD *)(a6 + 32))
  {
    v12 = sub_1AE4F96E8(115);
    sub_1AE4FF4F8();
    if (v12)
    {
      sub_1AE4FB9BC();
      if (*(_QWORD *)(*(_QWORD *)(v12 + 16) + 16))
      {
        v13 = swift_bridgeObjectRetain();
LABEL_6:
        v14 = sub_1AE898358(v13);
        sub_1AE4F77C8();
        goto LABEL_9;
      }
      if (!*(_BYTE *)(v12 + 32))
      {
        v13 = MEMORY[0x1E0DEE9D8];
        goto LABEL_6;
      }
      sub_1AE4F77C8();
    }
  }
  else
  {
    sub_1AE4FF4F8();
  }
  v14 = 0;
LABEL_9:
  sub_1AE500810();
  if (!*v11)
  {
    sub_1AE4FF4F8();
LABEL_18:
    v15 = 0;
    goto LABEL_19;
  }
  v15 = sub_1AE4F96E8(112);
  if (!v15)
  {
    sub_1AE4FF4F8();
    goto LABEL_19;
  }
  sub_1AE4FF4F8();
  sub_1AE4FB9BC();
  v16 = *(_QWORD *)(v15 + 16);
  swift_bridgeObjectRetain();
  sub_1AE4F77C8();
  if (!*(_QWORD *)(v16 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v15 = sub_1AE898358(v16);
LABEL_19:
  sub_1AE500810();
  if (!*v11 || (v17 = sub_1AE4F96E8(111)) == 0)
  {
    sub_1AE4FF4F8();
LABEL_26:
    if (qword_1ED3193F0 != -1)
      swift_once();
    v29 = sub_1AE925B6C();
    sub_1AE4FB608(v29, (uint64_t)qword_1ED3193D8);
    v30 = sub_1AE925B54();
    v31 = sub_1AE9265EC();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_1AE4F2000, v30, v31, "Text operator is given no object parameter.", v32, 2u);
      MEMORY[0x1AF454C78](v32, -1, -1);
    }

    sub_1AE4F67AC();
    sub_1AE4F76D8();
    goto LABEL_31;
  }
  v18 = v17;
  sub_1AE4FF4F8();
  sub_1AE4FB9BC();
  v19 = *(_QWORD *)(v18 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(_QWORD *)(v19 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v20 = sub_1AE898358(v19);
  sub_1AE4FB9BC();
  sub_1AE515C78(0x65707954737466, 0xE700000000000000, *(_QWORD *)(a6 + 72));
  if (v22)
  {
    v23 = v21;
    v24 = v22;
    sub_1AE4FF4F8();
    v25._countAndFlagsBits = v23;
    v25._object = v24;
    TriplesQuery.FullTextSearchType.init(rawValue:)(v25);
    v26 = v75;
    if (v75 == 6)
    {
      swift_bridgeObjectRelease();
      sub_1AE5322E0();
      sub_1AE4F6778();
      *v27 = 0xD000000000000027;
      v27[1] = 0x80000001AE98A030;
      sub_1AE4FBB3C((uint64_t)v27, 1);
      sub_1AE4F67AC();
      sub_1AE4F76D8();
      return v28 & 1;
    }
  }
  else
  {
    sub_1AE4FF4F8();
    v26 = 3;
  }
  v34 = 96;
  if (v14 | v15)
  {
    sub_1AE501548((uint64_t *)&unk_1ED30FFC0);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1AE933BD0;
    *(_QWORD *)(v35 + 32) = 0;
    *(_QWORD *)(v35 + 40) = v14;
    *(_QWORD *)(v35 + 48) = 0;
    *(_QWORD *)(v35 + 56) = v15;
    *(_OWORD *)(v35 + 64) = 0u;
    *(_OWORD *)(v35 + 80) = 0u;
    *(_OWORD *)(v35 + 96) = 0u;
    *(_OWORD *)(v35 + 112) = 0u;
    *(_QWORD *)(v35 + 128) = 0;
    *(_BYTE *)(v35 + 136) = 32;
    *(_QWORD *)(v35 + 144) = v20;
    *(_QWORD *)(v35 + 152) = v26;
    *(_OWORD *)(v35 + 160) = 0u;
    *(_OWORD *)(v35 + 176) = 0u;
    *(_OWORD *)(v35 + 192) = 0u;
    *(_OWORD *)(v35 + 208) = 0u;
    *(_OWORD *)(v35 + 224) = 0u;
    *(_QWORD *)(v35 + 240) = 0;
    *(_BYTE *)(v35 + 248) = 96;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = 0;
    v34 = 0;
    v26 = v35;
  }
  v36 = (__int128 *)(a2 + *(int *)(type metadata accessor for QueryContext() + 32));
  v37 = *((_QWORD *)v36 + 11);
  v38 = *((_BYTE *)v36 + 104);
  if (v37 >> 1 != 0xFFFFFFFF || (*((_BYTE *)v36 + 104) & 0x1E) != 0)
  {
    v45 = *((_QWORD *)v36 + 12);
    v46 = *((_QWORD *)v36 + 10);
    v47 = v36[1];
    v66 = *v36;
    v67 = v47;
    v48 = v36[3];
    v68 = v36[2];
    v69 = v48;
    v70 = v36[4];
    v71 = v46;
    v72 = v37;
    v73 = v45;
    v74 = v38;
    v58[0] = v20;
    v58[1] = v26;
    v59 = 0u;
    v60 = 0u;
    v61 = 0u;
    v62 = 0u;
    v63 = 0u;
    v64 = 0;
    v65 = v34;
    v57 = 1;
    sub_1AE84D160((uint64_t)v58, &v57, (uint64_t)&v75);
    sub_1AE503D48();
    sub_1AE583000(v49, v50, v51, v52, v53, v54, v55, v56, 0, 0, 0, 0, 0, v34);
    sub_1AE4F67AC();
    sub_1AE4F76D8();
    if (v7)
      return v28 & 1;
    v20 = v75;
    v40 = v76;
    v39 = v77;
    v41 = v78;
    v42 = v79;
    v43 = v80;
    v44 = v81;
    v34 = v82;
  }
  else
  {
    sub_1AE4F67AC();
    sub_1AE4F76D8();
    v39 = 0uLL;
    v40 = (unint64_t)v26;
    v41 = 0uLL;
    v42 = 0uLL;
    v43 = 0uLL;
    v44 = 0uLL;
  }
  *(_QWORD *)a1 = v20;
  *(_OWORD *)(a1 + 8) = v40;
  *(_OWORD *)(a1 + 24) = v39;
  *(_OWORD *)(a1 + 40) = v41;
  *(_OWORD *)(a1 + 56) = v42;
  *(_OWORD *)(a1 + 72) = v43;
  *(_OWORD *)(a1 + 88) = v44;
  v28 = 1;
  *(_BYTE *)(a1 + 104) = v34;
  return v28 & 1;
}

uint64_t sub_1AE893598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char v7;

  type metadata accessor for ResultGraph();
  v4 = swift_allocObject();
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = sub_1AE925C98();
  *(_QWORD *)(v4 + 24) = v5;
  v7 = 0;
  sub_1AE85DA40(a3, &v7);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for Text()
{
  return objc_opt_self();
}

void sub_1AE893644(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v4 = sub_1AE926F7C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F666C();
  v8 = v7 - v6;
  v24 = 0;
  v25 = 0xE000000000000000;
  if ((a2 & 0x2000000000000000) != 0)
    v9 = HIBYTE(a2) & 0xF;
  else
    v9 = a1 & 0xFFFFFFFFFFFFLL;
  if (v9)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i < v9; i += v12)
    {
      if ((a2 & 0x1000000000000000) != 0)
      {
        sub_1AE4FD76C();
      }
      else
      {
        if ((a2 & 0x2000000000000000) != 0)
        {
          sub_1AE4FE29C();
        }
        else if ((a1 & 0x1000000000000000) == 0)
        {
          sub_1AE502198();
        }
        sub_1AE9269A0();
      }
      v12 = v11;
      sub_1AE926F88();
      v13 = sub_1AE926F64();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
      if ((v13 & 1) == 0)
        sub_1AE925EF0();
    }
    sub_1AE4F6648();
    v14 = v25;
  }
  else
  {
    v14 = 0xE000000000000000;
  }
  v24 = 0;
  v25 = 0xE000000000000000;
  v15 = HIBYTE(v14) & 0xF;
  if (v15)
  {
    swift_bridgeObjectRetain();
    v16 = 0;
    do
    {
      sub_1AE4FE29C();
      v17 = sub_1AE9269A0();
      if (v17 > 0x7F)
      {
        v20 = (v17 & 0x3F) << 8;
        if (v17 >= 0x800)
        {
          v21 = (v20 | (v17 >> 6) & 0x3F) << 8;
          v22 = (((v21 | (v17 >> 12) & 0x3F) << 8) | (v17 >> 18)) - 2122219023;
          v19 = (v21 | (v17 >> 12)) + 8487393;
          if (HIWORD(v17))
            v19 = v22;
        }
        else
        {
          v19 = (v20 | (v17 >> 6)) + 33217;
        }
      }
      else
      {
        v19 = v17 + 1;
      }
      v16 += v18;
      v23 = (v19 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << (8 * (4 - (__clz(v19) >> 3))));
      MEMORY[0x1AF453118](&v23);
      sub_1AE925F74();
      swift_bridgeObjectRelease();
    }
    while (v16 < v15);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1AE4F6648();
  }
  sub_1AE4F8180();
}

uint64_t sub_1AE8938D8()
{
  return sub_1AE8938F0();
}

uint64_t sub_1AE8938E4()
{
  return sub_1AE8938F0();
}

uint64_t sub_1AE8938F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v0 = sub_1AE9244BC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1AE4F666C();
  v4 = v3 - v2;
  v5 = (void *)MEMORY[0x1AF454348]();
  sub_1AE9244A4();
  sub_1AE4F7630();
  sub_1AE926784();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE568D9C();
  v6 = sub_1AE925DC4();
  swift_bridgeObjectRelease();
  objc_autoreleasePoolPop(v5);
  return v6;
}

uint64_t sub_1AE8939F8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t i;
  uint64_t v20;
  _QWORD *v21;
  BOOL v22;
  uint64_t v23;
  void *v25;
  uint64_t v26;
  uint64_t v27;

  v2 = (void *)MEMORY[0x1AF454348]();
  sub_1AE4F7630();
  v3 = sub_1AE926790();
  v27 = *(_QWORD *)(v3 + 16);
  if (!v27)
  {
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  v25 = v2;
  v4 = 0;
  v26 = v3 + 32;
  v5 = a1 + 56;
  v6 = MEMORY[0x1E0DEE9D8];
  do
  {
    v7 = (uint64_t *)(v26 + 16 * v4);
    v9 = *v7;
    v8 = v7[1];
    if (*(_QWORD *)(a1 + 16))
    {
      sub_1AE926EC8();
      swift_bridgeObjectRetain();
      sub_1AE925F14();
      v10 = sub_1AE926F10();
      v11 = -1 << *(_BYTE *)(a1 + 32);
      v12 = v10 & ~v11;
      if (((*(_QWORD *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
      {
        v13 = *(_QWORD *)(a1 + 48);
        v14 = (_QWORD *)(v13 + 16 * v12);
        v15 = *v14 == v9 && v14[1] == v8;
        if (v15 || (sub_1AE50124C() & 1) != 0)
        {
LABEL_10:
          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
        v18 = ~v11;
        for (i = v12 + 1; ; i = v20 + 1)
        {
          v20 = i & v18;
          if (((*(_QWORD *)(v5 + (((i & v18) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v18)) & 1) == 0)
            break;
          v21 = (_QWORD *)(v13 + 16 * v20);
          v22 = *v21 == v9 && v21[1] == v8;
          if (v22 || (sub_1AE50124C() & 1) != 0)
            goto LABEL_10;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_1AE4FF500();
    v16 = *(_QWORD *)(v6 + 16);
    if (v16 >= *(_QWORD *)(v6 + 24) >> 1)
      sub_1AE52154C();
    *(_QWORD *)(v6 + 16) = v16 + 1;
    v17 = v6 + 16 * v16;
    *(_QWORD *)(v17 + 32) = v9;
    *(_QWORD *)(v17 + 40) = v8;
LABEL_17:
    ++v4;
  }
  while (v4 != v27);
  swift_bridgeObjectRelease();
  v2 = v25;
LABEL_28:
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE568D9C();
  v23 = sub_1AE925DC4();
  swift_release();
  objc_autoreleasePoolPop(v2);
  return v23;
}

void sub_1AE893C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v0 = sub_1AE9244BC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1AE4F666C();
  v4 = v3 - v2;
  v5 = (void *)MEMORY[0x1AF454348]();
  sub_1AE9244B0();
  sub_1AE4F7630();
  v6 = sub_1AE926784();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  objc_autoreleasePoolPop(v5);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = (uint64_t *)(v6 + 40);
    v9 = MEMORY[0x1E0DEE9D8];
    do
    {
      v11 = *(v8 - 1);
      v10 = *v8;
      v12 = HIBYTE(*v8) & 0xF;
      if ((*v8 & 0x2000000000000000) == 0)
        v12 = v11 & 0xFFFFFFFFFFFFLL;
      if (v12)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1AE4FF500();
        v13 = *(_QWORD *)(v9 + 16);
        if (v13 >= *(_QWORD *)(v9 + 24) >> 1)
          sub_1AE52154C();
        *(_QWORD *)(v9 + 16) = v13 + 1;
        v14 = v9 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v11;
        *(_QWORD *)(v14 + 40) = v10;
      }
      v8 += 2;
      --v7;
    }
    while (v7);
  }
  sub_1AE4F6648();
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE568D9C();
  sub_1AE925DC4();
  swift_release();
  sub_1AE4F8180();
}

uint64_t sub_1AE893DFC()
{
  uint64_t v0;

  sub_1AE4F7630();
  sub_1AE50125C();
  v0 = sub_1AE50125C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AE893ED8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;

  v3 = *a1;
  v4 = *((unsigned __int8 *)a1 + 8);
  v5 = a1[2];
  v6 = *((unsigned __int8 *)a1 + 24);
  v7 = a1[4];
  v8 = *((unsigned __int8 *)a1 + 40);
  v9 = a1[6];
  v10 = sub_1AE501548(&qword_1ED318B20);
  result = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v14 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v9 + 16))
  {
    v14 = v13;
    v15 = v4;
    v16 = v3;
    v17 = v6;
    v18 = v5;
    v19 = v8;
    v20 = v7;
    swift_bridgeObjectRetain_n();
    __asm { BR              X9 }
  }
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = v6 & 1;
  *(_QWORD *)(a2 + 32) = v7;
  *(_BYTE *)(a2 + 40) = v8 & 1;
  *(_QWORD *)(a2 + 48) = v9;
  *(_OWORD *)(a2 + 56) = 0uLL;
  return result;
}

uint64_t sub_1AE89416C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD v29[3];
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __int128 v34;
  int v35;
  int v36;

  v25 = *(_QWORD *)v2;
  v35 = *(unsigned __int8 *)(v2 + 8);
  v26 = *(_QWORD *)(v2 + 16);
  v36 = *(unsigned __int8 *)(v2 + 24);
  v6 = *(_QWORD *)(v2 + 48);
  v7 = *(_QWORD *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRetain();
LABEL_7:
    v15 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0)
      v15 = a1 & 0xFFFFFFFFFFFFLL;
    if (!v15)
    {
      sub_1AE4F81B8();
      sub_1AE5716CC();
      sub_1AE4F6778();
      *v18 = 0xD000000000000018;
      v18[1] = 0x80000001AE98A200;
LABEL_22:
      sub_1AE4FBB3C((uint64_t)v18, 2);
      return a1;
    }
    v29[0] = a1;
    v29[1] = a2;
    v27 = 32;
    v28 = 0xE100000000000000;
    sub_1AE4F7630();
    v16 = *(_QWORD *)(sub_1AE926790() + 16);
    if (v36)
    {
      if (v16 <= 0x40)
      {
LABEL_12:
        sub_1AE4F67AC();
        v17 = sub_1AE50A810();
        if (v35)
        {
          if (v17 <= 1024)
            return a1;
        }
        else if (v25 >= v17)
        {
          return a1;
        }
        v29[0] = 0;
        v29[1] = 0xE000000000000000;
        sub_1AE92691C();
        swift_bridgeObjectRelease();
        strcpy((char *)v29, "Query size: ");
        BYTE5(v29[1]) = 0;
        HIWORD(v29[1]) = -5120;
        v20 = sub_1AE50A810();
        sub_1AE4F81B8();
        v27 = v20;
        sub_1AE926D18();
        sub_1AE5021A4();
        sub_1AE4F6648();
        sub_1AE503D64();
        v27 = v25;
        v19 = v35;
        goto LABEL_21;
      }
    }
    else if (v26 >= (uint64_t)v16)
    {
      goto LABEL_12;
    }
    sub_1AE4F81B8();
    v29[0] = 0;
    v29[1] = 0xE000000000000000;
    sub_1AE92691C();
    sub_1AE925F74();
    sub_1AE4F67AC();
    v27 = v16;
    sub_1AE926D18();
    sub_1AE5021A4();
    sub_1AE4F6648();
    sub_1AE503D64();
    v27 = v26;
    v19 = v36;
LABEL_21:
    LOBYTE(v28) = v19;
    sub_1AE501548(&qword_1EED9DD58);
    sub_1AE925E90();
    sub_1AE5021A4();
    sub_1AE4F6648();
    sub_1AE925F74();
    v21 = v29[0];
    v22 = v29[1];
    sub_1AE5716CC();
    sub_1AE4F6778();
    *v18 = v21;
    v18[1] = v22;
    goto LABEL_22;
  }
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_BYTE *)(v2 + 40);
  v24 = *(_OWORD *)(v2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    v11 = *(_BYTE *)(v6 + v10 + 32);
    v29[0] = v25;
    LOBYTE(v29[1]) = v35;
    v29[2] = v26;
    v30 = v36;
    v31 = v8;
    v32 = v9;
    v33 = v6;
    v34 = v24;
    LOBYTE(v27) = v11;
    sub_1AE8947F0(a1, a2, (uint64_t)&v27);
    if (v3)
      break;
    a1 = v12;
    v14 = v13;
    ++v10;
    sub_1AE4F81B8();
    a2 = v14;
    if (v7 == v10)
    {
      sub_1AE4F67AC();
      goto LABEL_7;
    }
  }
  sub_1AE4F81B8();
  sub_1AE4F67AC();
  return a1;
}

unint64_t sub_1AE8944F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v6;

  if (qword_1ED31C450 != -1)
    swift_once();
  sub_1AE894E58(a1, a2, 0x6C65646F6DLL, 0xE500000000000000, (void *)qword_1ED31C4B0);
  if (v4)
  {
    sub_1AE4F6648();
    return sub_1AE894C48();
  }
  else
  {
    sub_1AE92691C();
    sub_1AE925F74();
    sub_1AE925F74();
    sub_1AE4F6648();
    sub_1AE5716CC();
    sub_1AE4F6778();
    *v6 = 0;
    v6[1] = 0xE000000000000000;
    return sub_1AE4FBB3C((uint64_t)v6, 6);
  }
}

void sub_1AE894624(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v4 = (void *)sub_1AE925E18();
  v5 = objc_msgSend(a3, sel_encodeAsIDsFrom_, v4);

  sub_1AE53F468(0, (unint64_t *)&qword_1ED318F50);
  v6 = sub_1AE9261CC();

  if (v6 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v13 = MEMORY[0x1E0DEE9D8];
      sub_1AE5217F8();
      if (v7 < 0)
        break;
      v8 = 0;
      while (1)
      {
        v9 = (v6 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1AF453B80](v8, v6) : *(id *)(v6 + 8 * v8 + 32);
        v10 = v9;
        v11 = (uint64_t)objc_msgSend(v9, sel_integerValue);

        if (v11 < (uint64_t)0xFFFFFFFF80000000)
          break;
        if (v11 > 0x7FFFFFFF)
          goto LABEL_15;
        v12 = *(_QWORD *)(v13 + 16);
        if (v12 >= *(_QWORD *)(v13 + 24) >> 1)
          sub_1AE5217F8();
        ++v8;
        *(_QWORD *)(v13 + 16) = v12 + 1;
        *(_DWORD *)(v13 + 4 * v12 + 32) = v11;
        if (v7 == v8)
          goto LABEL_13;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      v7 = sub_1AE926AD8();
      sub_1AE4F6648();
      if (!v7)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    sub_1AE4F6648();
  }
}

void sub_1AE8947F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = sub_1AE9244BC();
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1AE894878()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1AE8938E4();
  if (qword_1ED319C08 != -1)
    swift_once();
  v5 = sub_1AE8939F8(qword_1ED3274E8);
  v7 = v6;
  swift_bridgeObjectRelease();
  sub_1AE893644(v5, v7);
  v9 = v8;
  v11 = v10;
  swift_bridgeObjectRelease();
  v12 = objc_allocWithZone(MEMORY[0x1E0CB3560]);
  v13 = sub_1AE894DA8(32);
  if (v0)
  {

  }
  else
  {
    v14 = v13;
    if (v13)
    {
      v15 = sub_1AE925E18();
      swift_bridgeObjectRetain();
      *(_QWORD *)(v4 - 72) = sub_1AE925FEC();
      swift_bridgeObjectRelease();
      v16 = (void *)sub_1AE925E18();
      v17 = (void *)v15;
      v18 = objc_msgSend(v14, sel_stringByReplacingMatchesInString_options_range_withTemplate_, v15, 0, 0, *(_QWORD *)(v4 - 72), v16);

      v9 = sub_1AE925E3C();
      v20 = v19;
      swift_bridgeObjectRelease();

      v11 = v20;
    }
  }
  *(_QWORD *)(v4 - 96) = v9;
  *(_QWORD *)(v4 - 88) = v11;
  sub_1AE924498();
  sub_1AE4F7630();
  v21 = sub_1AE9267A8();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  swift_bridgeObjectRelease();
  return v21;
}

unint64_t sub_1AE894C48()
{
  id v0;
  unint64_t v1;
  _QWORD *v2;

  sub_1AE53F468(0, &qword_1EEDA5050);
  swift_bridgeObjectRetain();
  v0 = sub_1AE894D38();
  if (v0)
  {
    v1 = (unint64_t)v0;
    sub_1AE4F6648();
  }
  else
  {
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    sub_1AE4F6648();
    v1 = 0x80000001AE98A190;
    sub_1AE5716CC();
    sub_1AE4F6778();
    *v2 = 0xD000000000000024;
    v2[1] = 0x80000001AE98A190;
    sub_1AE4FBB3C((uint64_t)v2, 6);
  }
  return v1;
}

id sub_1AE894D38()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithModelPath_, v1);

  return v2;
}

id sub_1AE894DA8(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v6[0] = 0;
  v2 = objc_msgSend(v1, sel_initWithTypes_error_, a1, v6);
  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1AE9246B4();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1AE894E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;

  v6 = (void *)sub_1AE925E18();
  v7 = (void *)sub_1AE925E18();
  v8 = objc_msgSend(a5, sel_pathForResource_ofType_, v6, v7);

  if (!v8)
    return 0;
  v9 = sub_1AE925E3C();

  return v9;
}

uint64_t sub_1AE894EF4(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1AE894F20(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t TransportationActivityEventType.init(modeOfTransportationEntityClass:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v5 = *(_QWORD *)(a1 + 24);
  static EntityClass.onFoot.getter();
  sub_1AE4F9040(v6, v7, v8, v9, v10, v11, v12, v13, v81, v89, v97, v105);
  v14 = v14 && v2 == v5;
  if (v14)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_8;
  }
  sub_1AE501278();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_8:
    result = swift_bridgeObjectRelease();
    v16 = 0;
    goto LABEL_9;
  }
  static EntityClass.vehicle.getter();
  sub_1AE4F9040(v17, v18, v19, v20, v21, v22, v23, v24, v82, v90, v98, v106);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_17;
  }
  sub_1AE501278();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_17:
    result = swift_bridgeObjectRelease();
    v16 = 1;
    goto LABEL_9;
  }
  static EntityClass.automobile.getter();
  sub_1AE4F9040(v26, v27, v28, v29, v30, v31, v32, v33, v83, v91, v99, v107);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    v16 = 2;
    sub_1AE4FD924();
    result = sub_1AE4F76D8();
    goto LABEL_9;
  }
  sub_1AE501278();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
    result = sub_1AE4F665C();
    v16 = 2;
    goto LABEL_9;
  }
  static EntityClass.ship.getter();
  sub_1AE4F9040(v35, v36, v37, v38, v39, v40, v41, v42, v84, v92, v100, v108);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_32;
  }
  sub_1AE501278();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_32:
    result = swift_bridgeObjectRelease();
    v16 = 3;
    goto LABEL_9;
  }
  static EntityClass.plane.getter();
  sub_1AE4F9040(v44, v45, v46, v47, v48, v49, v50, v51, v85, v93, v101, v109);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_40;
  }
  sub_1AE501278();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_40:
    result = swift_bridgeObjectRelease();
    v16 = 4;
    goto LABEL_9;
  }
  static EntityClass.bicycle.getter();
  sub_1AE4F9040(v53, v54, v55, v56, v57, v58, v59, v60, v86, v94, v102, v110);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_48;
  }
  sub_1AE501278();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_48:
    result = swift_bridgeObjectRelease();
    v16 = 5;
    goto LABEL_9;
  }
  static EntityClass.locomotiveTrain.getter();
  sub_1AE4F9040(v62, v63, v64, v65, v66, v67, v68, v69, v87, v95, v103, v111);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    goto LABEL_56;
  }
  sub_1AE501278();
  sub_1AE4F663C();
  sub_1AE4F76D8();
  if ((v3 & 1) != 0)
  {
    sub_1AE4F9038();
LABEL_56:
    result = swift_bridgeObjectRelease();
    v16 = 6;
    goto LABEL_9;
  }
  static EntityClass.bus.getter();
  sub_1AE4F9040(v71, v72, v73, v74, v75, v76, v77, v78, v88, v96, v104, v112);
  if (v14 && v2 == v5)
  {
    sub_1AE4F665C();
    sub_1AE4FD924();
    result = sub_1AE4F76D8();
    v16 = 7;
  }
  else
  {
    v80 = sub_1AE501278();
    sub_1AE4F9038();
    sub_1AE4F665C();
    swift_bridgeObjectRelease();
    result = sub_1AE4F76D8();
    if ((v80 & 1) != 0)
      v16 = 7;
    else
      v16 = 8;
  }
LABEL_9:
  *a2 = v16;
  return result;
}

uint64_t TransportationActivityEventType.modeOfTransportationEntityClass.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)())((char *)j___s20IntelligencePlatform11EntityClassV6onFootACvgZ
                                   + 4 * byte_1AE968590[*v0]))();
}

uint64_t TransportationActivityEventType.hash(into:)()
{
  return sub_1AE926ED4();
}

BOOL static TransportationActivityEventType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1AE895250(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v2 = a1 == 0x746F6F466E6FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656C6369686576 && a2 == 0xE700000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x69626F6D6F747561 && a2 == 0xEA0000000000656CLL;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 1885956211 && a2 == 0xE400000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x656E616C70 && a2 == 0xE500000000000000;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x656C6379636962 && a2 == 0xE700000000000000;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x69746F6D6F636F6CLL && a2 == 0xEF6E696172546576;
              if (v11 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 7566690 && a2 == 0xE300000000000000)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v13 = sub_1AE926D60();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 7;
                else
                  return 8;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE89557C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE8955AC + 4 * byte_1AE968598[a1]))(0x746F6F466E6FLL, 0xE600000000000000);
}

uint64_t sub_1AE8955AC()
{
  return 0x656C6369686576;
}

uint64_t sub_1AE895614()
{
  return 0x69746F6D6F636F6CLL;
}

uint64_t sub_1AE895638()
{
  return 7566690;
}

uint64_t sub_1AE895648()
{
  sub_1AE895E64();
  return sub_1AE926F94();
}

uint64_t sub_1AE895670()
{
  sub_1AE895E64();
  return sub_1AE926FA0();
}

uint64_t sub_1AE895698()
{
  sub_1AE895DB0();
  return sub_1AE926F94();
}

uint64_t sub_1AE8956C0()
{
  sub_1AE895DB0();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8956E8()
{
  sub_1AE895D38();
  return sub_1AE926F94();
}

uint64_t sub_1AE895710()
{
  sub_1AE895D38();
  return sub_1AE926FA0();
}

uint64_t sub_1AE895738()
{
  unsigned __int8 *v0;

  return sub_1AE89557C(*v0);
}

uint64_t sub_1AE895740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE895250(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE895764()
{
  sub_1AE895CFC();
  return sub_1AE926F94();
}

uint64_t sub_1AE89578C()
{
  sub_1AE895CFC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8957B4()
{
  sub_1AE895D74();
  return sub_1AE926F94();
}

uint64_t sub_1AE8957DC()
{
  sub_1AE895D74();
  return sub_1AE926FA0();
}

uint64_t sub_1AE895804()
{
  sub_1AE895EDC();
  return sub_1AE926F94();
}

uint64_t sub_1AE89582C()
{
  sub_1AE895EDC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE895854()
{
  sub_1AE895DEC();
  return sub_1AE926F94();
}

uint64_t sub_1AE89587C()
{
  sub_1AE895DEC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8958A4()
{
  sub_1AE895E28();
  return sub_1AE926F94();
}

uint64_t sub_1AE8958CC()
{
  sub_1AE895E28();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8958F4()
{
  sub_1AE895EA0();
  return sub_1AE926F94();
}

uint64_t sub_1AE89591C()
{
  sub_1AE895EA0();
  return sub_1AE926FA0();
}

void TransportationActivityEventType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1AE501548(&qword_1EEDA5058);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5060);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE507508(v5, v14);
  sub_1AE501548(&qword_1EEDA5068);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5070);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5078);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5080);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5088);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F666C();
  v11 = sub_1AE501548(&qword_1EEDA5090);
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F666C();
  sub_1AE501548(&qword_1EEDA5098);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F9024();
  v13 = *v1;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE895CFC();
  sub_1AE926F4C();
  __asm { BR              X9 }
}

void sub_1AE895B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 72) = 0;
  sub_1AE895EDC();
  sub_1AE4FF514();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 112) + 8))(v2, v0);
  sub_1AE4F667C();
}

unint64_t sub_1AE895CFC()
{
  unint64_t result;

  result = qword_1EEDA50A0;
  if (!qword_1EEDA50A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968D50, &type metadata for TransportationActivityEventType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA50A0);
  }
  return result;
}

unint64_t sub_1AE895D38()
{
  unint64_t result;

  result = qword_1EEDA50A8;
  if (!qword_1EEDA50A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968D00, &type metadata for TransportationActivityEventType.BusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA50A8);
  }
  return result;
}

unint64_t sub_1AE895D74()
{
  unint64_t result;

  result = qword_1EEDA50B0;
  if (!qword_1EEDA50B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968CB0, &type metadata for TransportationActivityEventType.LocomotiveTrainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA50B0);
  }
  return result;
}

unint64_t sub_1AE895DB0()
{
  unint64_t result;

  result = qword_1EEDA50B8;
  if (!qword_1EEDA50B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968C60, &type metadata for TransportationActivityEventType.BicycleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA50B8);
  }
  return result;
}

unint64_t sub_1AE895DEC()
{
  unint64_t result;

  result = qword_1EEDA50C0;
  if (!qword_1EEDA50C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968C10, &type metadata for TransportationActivityEventType.PlaneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA50C0);
  }
  return result;
}

unint64_t sub_1AE895E28()
{
  unint64_t result;

  result = qword_1EEDA50C8;
  if (!qword_1EEDA50C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968BC0, &type metadata for TransportationActivityEventType.ShipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA50C8);
  }
  return result;
}

unint64_t sub_1AE895E64()
{
  unint64_t result;

  result = qword_1EEDA50D0;
  if (!qword_1EEDA50D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968B70, &type metadata for TransportationActivityEventType.AutomobileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA50D0);
  }
  return result;
}

unint64_t sub_1AE895EA0()
{
  unint64_t result;

  result = qword_1EEDA50D8;
  if (!qword_1EEDA50D8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968B20, &type metadata for TransportationActivityEventType.VehicleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA50D8);
  }
  return result;
}

unint64_t sub_1AE895EDC()
{
  unint64_t result;

  result = qword_1EEDA50E0;
  if (!qword_1EEDA50E0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968AD0, &type metadata for TransportationActivityEventType.OnFootCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA50E0);
  }
  return result;
}

void TransportationActivityEventType.hashValue.getter()
{
  sub_1AE926EC8();
  sub_1AE4F6694();
  sub_1AE926F10();
  sub_1AE4F6650();
}

void TransportationActivityEventType.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1AE501548(&qword_1EEDA50E8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA50F0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA50F8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5100);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5108);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE507508(v7, v27);
  sub_1AE501548(&qword_1EEDA5110);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5118);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F9024();
  v10 = sub_1AE501548(&qword_1EEDA5120);
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F666C();
  v11 = sub_1AE501548(&qword_1EEDA5128);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F666C();
  v15 = v14 - v13;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE895CFC();
  sub_1AE926F34();
  if (v30)
  {
    v16 = (uint64_t)a1;
  }
  else
  {
    v17 = sub_1AE926C1C();
    v18 = *(_QWORD *)(v17 + 16);
    v29 = v11;
    v28 = v15;
    if (v18)
    {
      v19 = *(unsigned __int8 *)(v17 + 32);
      sub_1AE50AF34(1, v18, v17, v17 + 32, 0, (2 * v18) | 1);
      v21 = v20;
      v23 = v22;
      swift_bridgeObjectRelease();
      if (v21 == v23 >> 1)
        __asm { BR              X9 }
    }
    v16 = (uint64_t)a1;
    v24 = sub_1AE926988();
    swift_allocError();
    v26 = v25;
    sub_1AE501548(&qword_1EED99C38);
    *v26 = &type metadata for TransportationActivityEventType;
    sub_1AE926B5C();
    sub_1AE92697C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x1E0DEC450], v24);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v28, v29);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v16);
  sub_1AE4F667C();
}

void sub_1AE896370()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD);

  sub_1AE5089A0();
  sub_1AE503D7C();
  if (!v0)
  {
    v3 = sub_1AE50A81C();
    v4(v3, *(_QWORD *)(v2 - 256));
    swift_unknownObjectRelease();
    sub_1AE896BA0();
    **(_BYTE **)(v2 - 136) = v1;
    JUMPOUT(0x1AE89635CLL);
  }
  swift_unknownObjectRelease();
  sub_1AE896BA0();
  JUMPOUT(0x1AE896188);
}

void sub_1AE8963A4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE50A1E8();
  v3 = *(_QWORD *)(v2 - 168);
  sub_1AE503D7C();
  if (!v0)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 248) + 8))(v3, *(_QWORD *)(v2 - 240));
    swift_unknownObjectRelease();
    sub_1AE896BA0();
    **(_BYTE **)(v2 - 136) = v1;
    JUMPOUT(0x1AE89635CLL);
  }
  swift_unknownObjectRelease();
  sub_1AE896BA0();
  JUMPOUT(0x1AE896188);
}

void sub_1AE89645C()
{
  uint64_t v0;

  sub_1AE509CA4();
  sub_1AE503D7C();
  if (!v0)
  {
    sub_1AE50A81C();
    JUMPOUT(0x1AE896488);
  }
  swift_unknownObjectRelease();
  sub_1AE896BA0();
  JUMPOUT(0x1AE896188);
}

void sub_1AE896490()
{
  uint64_t v0;

  sub_1AE508E04();
  sub_1AE926B50();
  if (v0)
    JUMPOUT(0x1AE8964C8);
  JUMPOUT(0x1AE8964E8);
}

void sub_1AE896514(_QWORD *a1)
{
  TransportationActivityEventType.init(from:)(a1);
}

void sub_1AE896528(_QWORD *a1)
{
  TransportationActivityEventType.encode(to:)(a1);
}

unint64_t sub_1AE896540()
{
  unint64_t result;

  result = qword_1EEDA5130;
  if (!qword_1EEDA5130)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TransportationActivityEventType, &type metadata for TransportationActivityEventType);
    atomic_store(result, (unint64_t *)&qword_1EEDA5130);
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType()
{
  return &type metadata for TransportationActivityEventType;
}

uint64_t _s20IntelligencePlatform31TransportationActivityEventTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1AE8965E0 + 4 * byte_1AE9685B5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1AE896614 + 4 * byte_1AE9685B0[v4]))();
}

uint64_t sub_1AE896614(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE89661C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE896624);
  return result;
}

uint64_t sub_1AE896630(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE896638);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1AE89663C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE896644(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.CodingKeys()
{
  return &type metadata for TransportationActivityEventType.CodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.OnFootCodingKeys()
{
  return &type metadata for TransportationActivityEventType.OnFootCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.VehicleCodingKeys()
{
  return &type metadata for TransportationActivityEventType.VehicleCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.AutomobileCodingKeys()
{
  return &type metadata for TransportationActivityEventType.AutomobileCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.ShipCodingKeys()
{
  return &type metadata for TransportationActivityEventType.ShipCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.PlaneCodingKeys()
{
  return &type metadata for TransportationActivityEventType.PlaneCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.BicycleCodingKeys()
{
  return &type metadata for TransportationActivityEventType.BicycleCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.LocomotiveTrainCodingKeys()
{
  return &type metadata for TransportationActivityEventType.LocomotiveTrainCodingKeys;
}

ValueMetadata *type metadata accessor for TransportationActivityEventType.BusCodingKeys()
{
  return &type metadata for TransportationActivityEventType.BusCodingKeys;
}

unint64_t sub_1AE8966E4()
{
  unint64_t result;

  result = qword_1EEDA5138;
  if (!qword_1EEDA5138)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968AA8, &type metadata for TransportationActivityEventType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5138);
  }
  return result;
}

unint64_t sub_1AE896724()
{
  unint64_t result;

  result = qword_1EEDA5140;
  if (!qword_1EEDA5140)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9689C8, &type metadata for TransportationActivityEventType.OnFootCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5140);
  }
  return result;
}

unint64_t sub_1AE896764()
{
  unint64_t result;

  result = qword_1EEDA5148;
  if (!qword_1EEDA5148)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9689F0, &type metadata for TransportationActivityEventType.OnFootCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5148);
  }
  return result;
}

unint64_t sub_1AE8967A4()
{
  unint64_t result;

  result = qword_1EEDA5150;
  if (!qword_1EEDA5150)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968978, &type metadata for TransportationActivityEventType.VehicleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5150);
  }
  return result;
}

unint64_t sub_1AE8967E4()
{
  unint64_t result;

  result = qword_1EEDA5158;
  if (!qword_1EEDA5158)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9689A0, &type metadata for TransportationActivityEventType.VehicleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5158);
  }
  return result;
}

unint64_t sub_1AE896824()
{
  unint64_t result;

  result = qword_1EEDA5160;
  if (!qword_1EEDA5160)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968928, &type metadata for TransportationActivityEventType.AutomobileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5160);
  }
  return result;
}

unint64_t sub_1AE896864()
{
  unint64_t result;

  result = qword_1EEDA5168;
  if (!qword_1EEDA5168)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968950, &type metadata for TransportationActivityEventType.AutomobileCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5168);
  }
  return result;
}

unint64_t sub_1AE8968A4()
{
  unint64_t result;

  result = qword_1EEDA5170;
  if (!qword_1EEDA5170)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9688D8, &type metadata for TransportationActivityEventType.ShipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5170);
  }
  return result;
}

unint64_t sub_1AE8968E4()
{
  unint64_t result;

  result = qword_1EEDA5178;
  if (!qword_1EEDA5178)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968900, &type metadata for TransportationActivityEventType.ShipCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5178);
  }
  return result;
}

unint64_t sub_1AE896924()
{
  unint64_t result;

  result = qword_1EEDA5180;
  if (!qword_1EEDA5180)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968888, &type metadata for TransportationActivityEventType.PlaneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5180);
  }
  return result;
}

unint64_t sub_1AE896964()
{
  unint64_t result;

  result = qword_1EEDA5188;
  if (!qword_1EEDA5188)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9688B0, &type metadata for TransportationActivityEventType.PlaneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5188);
  }
  return result;
}

unint64_t sub_1AE8969A4()
{
  unint64_t result;

  result = qword_1EEDA5190;
  if (!qword_1EEDA5190)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968838, &type metadata for TransportationActivityEventType.BicycleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5190);
  }
  return result;
}

unint64_t sub_1AE8969E4()
{
  unint64_t result;

  result = qword_1EEDA5198;
  if (!qword_1EEDA5198)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968860, &type metadata for TransportationActivityEventType.BicycleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5198);
  }
  return result;
}

unint64_t sub_1AE896A24()
{
  unint64_t result;

  result = qword_1EEDA51A0;
  if (!qword_1EEDA51A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9687E8, &type metadata for TransportationActivityEventType.LocomotiveTrainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA51A0);
  }
  return result;
}

unint64_t sub_1AE896A64()
{
  unint64_t result;

  result = qword_1EEDA51A8;
  if (!qword_1EEDA51A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968810, &type metadata for TransportationActivityEventType.LocomotiveTrainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA51A8);
  }
  return result;
}

unint64_t sub_1AE896AA4()
{
  unint64_t result;

  result = qword_1EEDA51B0;
  if (!qword_1EEDA51B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968798, &type metadata for TransportationActivityEventType.BusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA51B0);
  }
  return result;
}

unint64_t sub_1AE896AE4()
{
  unint64_t result;

  result = qword_1EEDA51B8;
  if (!qword_1EEDA51B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9687C0, &type metadata for TransportationActivityEventType.BusCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA51B8);
  }
  return result;
}

unint64_t sub_1AE896B24()
{
  unint64_t result;

  result = qword_1EEDA51C0;
  if (!qword_1EEDA51C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968A18, &type metadata for TransportationActivityEventType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA51C0);
  }
  return result;
}

unint64_t sub_1AE896B64()
{
  unint64_t result;

  result = qword_1EEDA51C8;
  if (!qword_1EEDA51C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE968A40, &type metadata for TransportationActivityEventType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA51C8);
  }
  return result;
}

uint64_t sub_1AE896BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v0, v1);
}

unint64_t sub_1AE896BB4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 69) = 3;
  return sub_1AE895E28();
}

void TrialAssetManager.__allocating_init(refreshPolicy:)(uint64_t *a1)
{
  uint64_t v1;
  id v2;

  v1 = *a1;
  v2 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 288);
  sub_1AE4F66BC();
  sub_1AE89A0C0((uint64_t)v2, v1);
  sub_1AE4F6624();
}

uint64_t TrialAssetManager.asset(for:in:assetType:downloadOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, _BYTE *a5, _WORD *a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = v6;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo(0);
  *(_QWORD *)(v7 + 48) = sub_1AE4F7738();
  *(_QWORD *)(v7 + 56) = sub_1AE4F7738();
  *(_QWORD *)(v7 + 64) = sub_1AE4F7738();
  *(_QWORD *)(v7 + 72) = sub_1AE4F7738();
  *(_BYTE *)(v7 + 109) = *a4;
  *(_BYTE *)(v7 + 110) = *a5;
  *(_WORD *)(v7 + 106) = *a6;
  sub_1AE4F9070();
  return sub_1AE4FDD5C();
}

#error "1AE896CFC: call analysis failed (funcsize=82)"

uint64_t sub_1AE896E0C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_1AE4FB74C();
  *v2 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc();
  sub_1AE4F9070();
  return swift_task_switch();
}

uint64_t sub_1AE896E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _BYTE v25[6];
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v9 = *(_QWORD *)(v8 + 96);
  TrialAssetManager.locallyAvailableAsset(for:in:assetType:)(*(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), (uint64_t)&v26, (uint64_t)&v27, a5, a6, a7, a8, v24, *(int *)v25, *(__int16 *)&v25[4], *(_BYTE *)(v8 + 109), *(_BYTE *)(v8 + 110), v28, v29, v30, v31, v32, v33,
    v34,
    v35,
    v36,
    v37);
  if (v9)
  {
    v10 = *(_QWORD *)(v8 + 72);
  }
  else
  {
    v11 = *(_QWORD *)(v8 + 80);
    v12 = *(_QWORD *)(v8 + 48);
    sub_1AE86FB80(*(_QWORD *)(v8 + 56), v12, (void (*)(_QWORD))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
    v13 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v12, 1, v11);
    v14 = *(_QWORD *)(v8 + 72);
    v15 = *(_QWORD *)(v8 + 56);
    if (v13 != 1)
    {
      sub_1AE89DC34(*(_QWORD *)(v8 + 56));
      sub_1AE89DC34(v14);
      v21 = sub_1AE753ADC();
      sub_1AE89B2F8(v21, v22);
      sub_1AE89DCCC();
      sub_1AE4F90C0();
      sub_1AE4F90A0();
      sub_1AE4F67E4();
      v20 = *(uint64_t (**)(void))(v8 + 8);
      return v20();
    }
    v16 = *(_BYTE *)(v8 + 109);
    v18 = *(_QWORD *)(v8 + 24);
    v17 = *(_QWORD *)(v8 + 32);
    sub_1AE89DC34(*(_QWORD *)(v8 + 48));
    sub_1AE89B2BC();
    sub_1AE4F6778();
    *(_QWORD *)v19 = v18;
    *(_QWORD *)(v19 + 8) = v17;
    *(_BYTE *)(v19 + 16) = v16 | 0x80;
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1AE89DC34(v15);
    v10 = v14;
  }
  sub_1AE53D160(v10, type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
  sub_1AE89DCEC();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  v20 = *(uint64_t (**)(void))(v8 + 8);
  return v20();
}

uint64_t sub_1AE896FD0()
{
  uint64_t v0;

  sub_1AE53D160(*(_QWORD *)(v0 + 72), type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
  sub_1AE89DCEC();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  return sub_1AE4FC8E4(*(uint64_t (**)(void))(v0 + 8));
}

void TrialAssetManager.locallyAvailableAsset(for:in:assetType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, unsigned __int8 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  int v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  id v51;
  void *v52;
  unsigned int v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  id v61;
  void *v62;
  unsigned __int8 v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  unsigned int *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  _OWORD v85[2];
  uint64_t v86;

  sub_1AE4F67EC();
  a22 = v23;
  a23 = v24;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v84 = v33;
  v34 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  MEMORY[0x1E0C80A78](v34);
  sub_1AE4F666C();
  v80 = v36 - v35;
  v37 = sub_1AE9246E4();
  v76 = *(_QWORD *)(v37 - 8);
  v77 = v37;
  MEMORY[0x1E0C80A78](v37);
  sub_1AE4F666C();
  v40 = v39 - v38;
  v41 = sub_1AE924780();
  v78 = *(_QWORD *)(v41 - 8);
  v79 = v41;
  MEMORY[0x1E0C80A78](v41);
  sub_1AE4F666C();
  v44 = v43 - v42;
  v45 = *v28;
  v46 = *v26;
  LOBYTE(v85[0]) = *v28;
  sub_1AE89A494(v32, v30, (unsigned __int8 *)v85);
  if (!v47)
  {
    sub_1AE89B2BC();
    sub_1AE4F6778();
    *(_QWORD *)v58 = v32;
    *(_QWORD *)(v58 + 8) = v30;
    *(_BYTE *)(v58 + 16) = v45;
    swift_bridgeObjectRetain();
    swift_willThrow();
LABEL_24:
    sub_1AE4F667C();
    return;
  }
  v48 = (void *)v47;
  if (v46)
  {
    v49 = sub_1AE507664(v47, sel_directoryValue);
    if (v49)
    {
      v74 = sub_1AE89BDF0(v49);
      v82 = v50;
      v51 = sub_1AE507664(v74, sel_directoryValue);
      if (v51)
      {
        v52 = v51;
        v53 = objc_msgSend(v51, sel_requiresDownload);

        if (!v53)
          goto LABEL_6;
LABEL_14:

        sub_1AE5FC314();
        v64 = type metadata accessor for TrialAssetManager.Asset(0);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v84, 1, 1, v64);
        goto LABEL_24;
      }
    }
    else
    {
      __break(1u);
    }
    sub_1AE5FC314();
    __break(1u);
    goto LABEL_27;
  }
  v59 = sub_1AE507664(v47, sel_fileValue);
  if (!v59)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v75 = sub_1AE89BDF0(v59);
  v82 = v60;
  v61 = sub_1AE507664(v75, sel_fileValue);
  if (v61)
  {
    v62 = v61;
    v63 = objc_msgSend(v61, sel_requiresDownload);

    if ((v63 & 1) == 0)
    {
LABEL_6:
      if (v82)
      {
        v55 = sub_1AE507664(v54, sel_metadata);
        if (!v55
          || (v56 = v55, *(_QWORD *)&v85[0] = 0, sub_1AE925C50(), v56, (v57 = *(_QWORD *)&v85[0]) == 0))
        {
          if (qword_1ED31BCB0 != -1)
            swift_once();
          v65 = sub_1AE925B6C();
          sub_1AE4FB608(v65, (uint64_t)qword_1ED31BC90);
          v66 = sub_1AE925B54();
          v67 = sub_1AE9265EC();
          if (os_log_type_enabled(v66, v67))
          {
            v68 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v68 = 0;
            _os_log_impl(&dword_1AE4F2000, v66, v67, "level.metadata is not [String: String]", v68, 2u);
            MEMORY[0x1AF454C78](v68, -1, -1);
          }

          v57 = sub_1AE925C98();
        }
        v69 = (unsigned int *)MEMORY[0x1E0CAFD60];
        if (!v46)
          v69 = (unsigned int *)MEMORY[0x1E0CAFD68];
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v76 + 104))(v40, *v69, v77);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v80, 1, 1, v79);
        sub_1AE924768();
        a13 = v45;
        TrialAssetManager.experimentIdentifiers(for:)(&a13);

        v81 = v85[1];
        v83 = v85[0];
        v70 = v86;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 32))(v84, v44, v79);
        v71 = type metadata accessor for TrialAssetManager.Asset(0);
        *(_QWORD *)(v84 + *(int *)(v71 + 20)) = v57;
        v72 = v84 + *(int *)(v71 + 24);
        *(_OWORD *)v72 = v83;
        *(_OWORD *)(v72 + 16) = v81;
        *(_QWORD *)(v72 + 32) = v70;
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v84, 0, 1, v71);
      }
      else
      {
        sub_1AE89B2BC();
        sub_1AE4F6778();
        *(_QWORD *)v73 = v32;
        *(_QWORD *)(v73 + 8) = v30;
        *(_BYTE *)(v73 + 16) = v45 | 0x40;
        swift_bridgeObjectRetain();
        swift_willThrow();

      }
      goto LABEL_24;
    }
    goto LABEL_14;
  }
LABEL_28:
  sub_1AE5FC314();
  __break(1u);
}

uint64_t TrialAssetManager.assets(for:in:downloadOptions:)(uint64_t a1, _BYTE *a2, _WORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = v3;
  v7 = sub_1AE501548(&qword_1EED9B0C0);
  *(_QWORD *)(v4 + 32) = v7;
  *(_QWORD *)(v4 + 40) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 48) = sub_1AE4F7738();
  *(_QWORD *)(v4 + 56) = sub_1AE4F7738();
  *(_QWORD *)(v4 + 64) = sub_1AE4F7738();
  *(_QWORD *)(v4 + 72) = sub_1AE4F7738();
  *(_QWORD *)(v4 + 80) = sub_1AE4F7738();
  *(_QWORD *)(v4 + 88) = sub_1AE4F7738();
  *(_QWORD *)(v4 + 96) = sub_1AE4F7738();
  *(_QWORD *)(v4 + 104) = sub_1AE4F7738();
  *(_QWORD *)(v4 + 112) = sub_1AE89DC2C();
  *(_QWORD *)(v4 + 120) = sub_1AE4F7738();
  *(_QWORD *)(v4 + 128) = sub_1AE4F7738();
  type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo(0);
  *(_QWORD *)(v4 + 136) = sub_1AE4F7738();
  *(_QWORD *)(v4 + 144) = sub_1AE4F7738();
  *(_QWORD *)(v4 + 152) = sub_1AE4F7738();
  *(_QWORD *)(v4 + 160) = sub_1AE4F7738();
  *(_BYTE *)(v4 + 213) = *a2;
  *(_WORD *)(v4 + 210) = *a3;
  sub_1AE4F9070();
  return swift_task_switch();
}

void sub_1AE8975A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  char v31;
  _QWORD *v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  BOOL v44;
  unint64_t v45;
  char v46;
  char v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int16 v59;
  char v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  _BYTE *v64;
  _WORD *v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[3];

  v72 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_1AE925C98();
  v3 = v0;
  v4 = sub_1AE925C98();
  v70 = v1 + 64;
  sub_1AE89DD00();
  if (v9 < 64)
    v7 = ~v8;
  v10 = v7 & v5;
  v71 = (unint64_t)(63 - v6) >> 6;
  v73 = v1;
  swift_bridgeObjectRetain();
  v11 = 0;
  v74 = v0;
  while (1)
  {
    *(_QWORD *)(v3 + 168) = v4;
    *(_QWORD *)(v3 + 176) = v2;
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_20;
    }
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    if (v14 >= v71)
      goto LABEL_42;
    v15 = *(_QWORD *)(v70 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v71)
        goto LABEL_42;
      v15 = *(_QWORD *)(v70 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v71)
          goto LABEL_42;
        v15 = *(_QWORD *)(v70 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_19:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_20:
    v17 = (uint64_t *)(*(_QWORD *)(v73 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    v20 = *(_BYTE *)(*(_QWORD *)(v73 + 56) + v13);
    HIBYTE(v75) = *(_BYTE *)(v3 + 213);
    LOBYTE(v76[0]) = v20;
    sub_1AE4F67A4();
    TrialAssetManager.locallyAvailableAsset(for:in:assetType:)(v18, v19, (uint64_t)&v75 + 7, (uint64_t)v76, v21, v22, v23, v24, v67, v68, SWORD2(v68), SBYTE6(v68), HIBYTE(v68), v4, v70, v71, v72, v73, v74,
      v75,
      v76[0],
      v76[1],
      v76[2]);
    v25 = *(_QWORD *)(v3 + 152);
    v26 = *(_QWORD *)(v3 + 112);
    sub_1AE86FB80(*(_QWORD *)(v3 + 160), v25, (void (*)(_QWORD))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v25, 1, v26) == 1)
    {
      HIDWORD(v68) = swift_isUniquelyReferenced_nonNull_native();
      v76[0] = v69;
      v27 = sub_1AE536EDC(v18, v19);
      if (__OFADD__(*(_QWORD *)(v69 + 16), (v28 & 1) == 0))
        goto LABEL_48;
      v29 = v27;
      v30 = v28;
      sub_1AE501548(&qword_1EEDA5208);
      v31 = sub_1AE926A54();
      v32 = (_QWORD *)v76[0];
      if ((v31 & 1) != 0)
      {
        sub_1AE536EDC(v18, v19);
        sub_1AE500924();
        if (!v34)
          goto LABEL_44;
        v29 = v33;
      }
      v69 = (uint64_t)v32;
      if ((v30 & 1) != 0)
      {
        *(_BYTE *)(v32[7] + v29) = v20;
      }
      else
      {
        sub_1AE89DC14((uint64_t)&v32[v29 >> 6]);
        v51 = (uint64_t *)(v32[6] + 16 * v29);
        *v51 = v18;
        v51[1] = v19;
        *(_BYTE *)(v32[7] + v29) = v20;
        v52 = v32[2];
        v44 = __OFADD__(v52, 1);
        v53 = v52 + 1;
        if (v44)
          goto LABEL_50;
        v32[2] = v53;
        sub_1AE4F67A4();
      }
      v3 = v74;
      sub_1AE4FDCF0();
      sub_1AE4F6728();
    }
    else
    {
      v35 = *(_QWORD *)(v3 + 152);
      v36 = *(_QWORD *)(v3 + 128);
      v39 = v3 + 96;
      v38 = *(_QWORD *)(v3 + 96);
      v37 = *(_QWORD *)(v39 + 8);
      sub_1AE89B2F8(v35, v36);
      v40 = sub_1AE753ADC();
      sub_1AE86FB80(v40, v41, (void (*)(_QWORD))type metadata accessor for TrialAssetManager.Asset);
      swift_storeEnumTagMultiPayload();
      sub_1AE89BE5C(v37, v38);
      sub_1AE505598();
      v76[0] = v2;
      sub_1AE4FCCD4();
      sub_1AE4F82A8();
      if (v44)
        goto LABEL_49;
      v45 = v42;
      v46 = v43;
      sub_1AE501548(&qword_1EEDA5200);
      v47 = sub_1AE89DC4C();
      v2 = v76[0];
      if ((v47 & 1) != 0)
      {
        sub_1AE4FCCD4();
        sub_1AE500924();
        if (!v34)
        {
LABEL_44:
          sub_1AE4F7AB4();
          sub_1AE926DE4();
          return;
        }
        v45 = v48;
      }
      if ((v46 & 1) != 0)
      {
        sub_1AE89DC90();
        sub_1AE89BEA4(v49, v50);
      }
      else
      {
        sub_1AE89DC14(v2 + 8 * (v45 >> 6));
        v54 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v45);
        *v54 = v18;
        v54[1] = v19;
        sub_1AE89DC90();
        sub_1AE89BE5C(v55, v56);
        sub_1AE505B2C();
        if (v44)
          goto LABEL_51;
        *(_QWORD *)(v2 + 16) = v57;
        sub_1AE4F67A4();
      }
      v3 = v74;
      v58 = *(_QWORD *)(v74 + 128);
      sub_1AE4FDCF0();
      sub_1AE4F6728();
      sub_1AE53D160(v58, type metadata accessor for TrialAssetManager.Asset);
    }
    sub_1AE53D160(*(_QWORD *)(v3 + 160), type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
    v4 = v69;
  }
  v16 = v14 + 3;
  if (v16 < v71)
  {
    v15 = *(_QWORD *)(v70 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        v11 = v16 + 1;
        if (__OFADD__(v16, 1))
          break;
        if (v11 >= v71)
          goto LABEL_42;
        v15 = *(_QWORD *)(v70 + 8 * v11);
        ++v16;
        if (v15)
          goto LABEL_19;
      }
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      return;
    }
    v11 = v16;
    goto LABEL_19;
  }
LABEL_42:
  swift_release();
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_1AE4F90C0();
    sub_1AE4F67E4();
    sub_1AE4F67DC();
    sub_1AE4FCE7C();
    sub_1AE4FD9A8();
    sub_1AE53F870();
    sub_1AE53F9C0();
    sub_1AE53F998();
    sub_1AE89DCD8();
    sub_1AE89DCC4();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1AE4F7AB4();
    __asm { BR              X1 }
  }
  v59 = *(_WORD *)(v3 + 210);
  v60 = *(_BYTE *)(v3 + 213);
  swift_bridgeObjectRetain();
  v61 = sub_1AE898470();
  *(_BYTE *)(v3 + 212) = v60;
  *(_QWORD *)(v3 + 184) = v61;
  *(_WORD *)(v3 + 208) = v59;
  v62 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 192) = v62;
  *v62 = v3;
  v62[1] = sub_1AE897C10;
  sub_1AE89DC7C();
  sub_1AE4F7AB4();
  TrialAssetManager.downloadOnDemandAssets(for:in:downloadOptions:)(v63, v64, v65);
}

uint64_t sub_1AE897C10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    sub_1AE4F6648();
    sub_1AE4F9038();
  }
  sub_1AE4F9070();
  return sub_1AE4FDD5C();
}

void sub_1AE897C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char v47;
  char v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  int v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[5];

  v1 = *(_QWORD *)(v0 + 176);
  v57 = *(_QWORD *)(v0 + 168) + 64;
  v59 = *(_QWORD *)(v0 + 168);
  sub_1AE89DD00();
  if (v7 < 64)
    v4 = ~v5;
  v8 = v4 & v2;
  v58 = (unint64_t)(63 - v3) >> 6;
  v55 = *(unsigned __int8 *)(v0 + 213) | 0xFFFFFF80;
  v9 = *(void **)(v0 + 200);
  while (2)
  {
    if (v8)
    {
LABEL_5:
      sub_1AE4F79B8();
      v60 = v10;
      v12 = v11 | (v10 << 6);
      goto LABEL_20;
    }
    while (1)
    {
      v13 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_46;
      if (v13 >= v58)
        goto LABEL_42;
      v14 = *(_QWORD *)(v57 + 8 * v13);
      v15 = v6 + 1;
      if (!v14)
      {
        v15 = v6 + 2;
        if (v6 + 2 >= v58)
          goto LABEL_42;
        v14 = *(_QWORD *)(v57 + 8 * v15);
        if (!v14)
        {
          v15 = v6 + 3;
          if (v6 + 3 >= v58)
            goto LABEL_42;
          v14 = *(_QWORD *)(v57 + 8 * v15);
          if (!v14)
          {
            v16 = v6 + 4;
            if (v6 + 4 >= v58)
            {
LABEL_42:
              swift_release();
              swift_task_dealloc();
              sub_1AE4F90C0();
              sub_1AE4F67E4();
              sub_1AE4F67DC();
              sub_1AE4FCE7C();
              sub_1AE4FD9A8();
              sub_1AE53F870();
              sub_1AE53F9C0();
              sub_1AE53F998();
              swift_task_dealloc();
              swift_task_dealloc();
              sub_1AE89DCD8();
              sub_1AE89DCC4();
              swift_task_dealloc();
              (*(void (**)(uint64_t))(v0 + 8))(v1);
              return;
            }
            v14 = *(_QWORD *)(v57 + 8 * v16);
            if (!v14)
            {
              while (1)
              {
                v15 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_48;
                if (v15 >= v58)
                  goto LABEL_42;
                v14 = *(_QWORD *)(v57 + 8 * v15);
                ++v16;
                if (v14)
                  goto LABEL_19;
              }
            }
            v15 = v6 + 4;
          }
        }
      }
LABEL_19:
      v8 = (v14 - 1) & v14;
      v60 = v15;
      v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_20:
      v17 = (uint64_t *)(*(_QWORD *)(v59 + 48) + 16 * v12);
      v19 = *v17;
      v18 = v17[1];
      v20 = *(_BYTE *)(*(_QWORD *)(v59 + 56) + v12);
      HIBYTE(v62) = *(_BYTE *)(v0 + 213);
      LOBYTE(v63[0]) = v20;
      sub_1AE4FB764();
      TrialAssetManager.locallyAvailableAsset(for:in:assetType:)(v19, v18, (uint64_t)&v62 + 7, (uint64_t)v63, v21, v22, v23, v24, v54, v55, v56, SBYTE2(v56), HIBYTE(v56), v57, v58, v59, v60, v62, v63[0],
        v63[1],
        v63[2],
        v63[3],
        v63[4]);
      if (v9)
      {
        v41 = v9;
        goto LABEL_34;
      }
      v25 = *(_QWORD *)(v0 + 136);
      v26 = *(_QWORD *)(v0 + 112);
      sub_1AE86FB80(*(_QWORD *)(v0 + 144), v25, (void (*)(_QWORD))type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo);
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v25, 1, v26) == 1)
        break;
      v28 = *(_QWORD *)(v0 + 80);
      v27 = *(_QWORD *)(v0 + 88);
      sub_1AE89B2F8(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
      v29 = sub_1AE753ADC();
      sub_1AE86FB80(v29, v30, (void (*)(_QWORD))type metadata accessor for TrialAssetManager.Asset);
      swift_storeEnumTagMultiPayload();
      sub_1AE89BE5C(v27, v28);
      sub_1AE505598();
      v63[0] = v1;
      sub_1AE4FC0FC();
      sub_1AE4F82A8();
      if (v32)
        goto LABEL_47;
      v33 = v31;
      sub_1AE501548(&qword_1EEDA5200);
      v34 = sub_1AE89DC4C();
      v1 = v63[0];
      if ((v34 & 1) != 0)
      {
        sub_1AE4FC0FC();
        sub_1AE500924();
        if (!v35)
          goto LABEL_43;
      }
      v36 = *(_QWORD *)(v0 + 80);
      v37 = *(_QWORD *)(v0 + 40);
      if ((v33 & 1) != 0)
      {
        sub_1AE5064BC(v36, v37);
      }
      else
      {
        sub_1AE503D90(v36, v37);
        sub_1AE505B2C();
        if (v32)
          goto LABEL_49;
        *(_QWORD *)(v1 + 16) = v38;
        sub_1AE4FB764();
      }
      v39 = *(_QWORD *)(v0 + 144);
      v40 = *(_QWORD *)(v0 + 120);
      sub_1AE4FDCF0();
      sub_1AE4F6710();
      sub_1AE53D160(v40, type metadata accessor for TrialAssetManager.Asset);
      sub_1AE89DCF8(v39);
      v9 = 0;
      v6 = v61;
      if (v8)
        goto LABEL_5;
    }
    v42 = *(_QWORD *)(v0 + 144);
    sub_1AE89DCF8(*(_QWORD *)(v0 + 136));
    sub_1AE89B2BC();
    v41 = (void *)sub_1AE4F6778();
    *(_QWORD *)v43 = v19;
    *(_QWORD *)(v43 + 8) = v18;
    *(_BYTE *)(v43 + 16) = v55;
    sub_1AE4FB764();
    swift_willThrow();
    sub_1AE89DCF8(v42);
LABEL_34:
    **(_QWORD **)(v0 + 56) = v41;
    sub_1AE89DD14();
    v44 = sub_1AE753ADC();
    sub_1AE89BE5C(v44, v45);
    v46 = v41;
    sub_1AE505598();
    v63[0] = v1;
    sub_1AE4FC0FC();
    sub_1AE4F82A8();
    if (v32)
    {
      __break(1u);
    }
    else
    {
      v48 = v47;
      sub_1AE501548(&qword_1EEDA5200);
      v49 = sub_1AE89DC4C();
      v1 = v63[0];
      if ((v49 & 1) != 0)
      {
        sub_1AE4FC0FC();
        if ((v48 & 1) != (v50 & 1))
        {
LABEL_43:
          sub_1AE926DE4();
          return;
        }
      }
      v52 = *(_QWORD *)(v0 + 40);
      v51 = *(_QWORD *)(v0 + 48);
      if ((v48 & 1) != 0)
      {
        sub_1AE5064BC(v51, v52);
LABEL_41:
        sub_1AE4FDCF0();
        sub_1AE4F6710();

        v9 = 0;
        v6 = v61;
        continue;
      }
      sub_1AE503D90(v51, v52);
      sub_1AE505B2C();
      if (!v32)
      {
        *(_QWORD *)(v1 + 16) = v53;
        sub_1AE4FB764();
        goto LABEL_41;
      }
    }
    break;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
}

uint64_t sub_1AE898138()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_1AE4F90C0();
  sub_1AE4F90A0();
  sub_1AE4F67E4();
  sub_1AE4F67DC();
  sub_1AE4FCE7C();
  sub_1AE4FD9A8();
  sub_1AE53F870();
  sub_1AE53F9C0();
  sub_1AE53F998();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1AE89DCD8();
  sub_1AE89DCC4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

IntelligencePlatform::TrialNamespace_optional __swiftcall TrialNamespace.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  IntelligencePlatform::TrialNamespace_optional result;

  v2 = v1;
  v3 = sub_1AE926B44();
  sub_1AE4F6648();
  v4 = 9;
  if (v3 < 9)
    v4 = v3;
  *v2 = v4;
  sub_1AE4F6624();
  return result;
}

IntelligencePlatform::TrialAssetManager::AssetType_optional __swiftcall TrialAssetManager.AssetType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  IntelligencePlatform::TrialAssetManager::AssetType_optional result;

  sub_1AE89A9F0(v1);
  return result;
}

void sub_1AE898248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE509868();
  sub_1AE5962D8();
  sub_1AE5080BC();
  if (*(_QWORD *)(v0 + 16))
  {
    while (1)
    {
      sub_1AE89DC64();
      sub_1AE555CDC(v1, v2);
    }
  }
  sub_1AE4F6648();
  sub_1AE4FE870();
}

void sub_1AE8982B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD v4[6];
  _OWORD v5[2];
  __int16 v6;

  sub_1AE509868();
  sub_1AE525A5C();
  v4[5] = sub_1AE5080BC();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = 32;
    do
    {
      v3 = *(_OWORD *)(v0 + v2 + 16);
      v5[0] = *(_OWORD *)(v0 + v2);
      v5[1] = v3;
      v6 = *(_WORD *)(v0 + v2 + 32);
      sub_1AE53F554();
      sub_1AE555DB4(v4, v5);
      sub_1AE89DD2C();
      sub_1AE4F9038();
      v2 += 40;
      --v1;
    }
    while (v1);
    sub_1AE4F6648();
  }
  else
  {
    sub_1AE4F6648();
  }
  sub_1AE506094();
}

uint64_t sub_1AE898358(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = sub_1AE926400();
  v16 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 40;
    do
    {
      sub_1AE4F6730();
      sub_1AE89DCE0((uint64_t)&v15, v5, v6, v7, v8, v9, v10, v11, v14, v15);
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    sub_1AE4F6648();
    return v16;
  }
  else
  {
    v12 = v2;
    sub_1AE4F6648();
  }
  return v12;
}

#error "1AE898444: call analysis failed (funcsize=30)"

_QWORD *sub_1AE898470()
{
  _QWORD *result;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[2];
  uint64_t v21;
  _QWORD v22[4];
  unint64_t v23;

  v21 = sub_1AE926400();
  result = sub_1AE64A2FC(v22);
  v1 = v22[0];
  v2 = v22[1];
  v3 = v22[3];
  v4 = v23;
  v5 = (unint64_t)(v22[2] + 64) >> 6;
  if (!v23)
    goto LABEL_3;
LABEL_2:
  v6 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  v7 = v6 | (v3 << 6);
  while (1)
  {
    v12 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v7);
    v13 = *v12;
    v14 = v12[1];
    swift_bridgeObjectRetain();
    sub_1AE555EFC((uint64_t)v20, v13, v14, v15, v16, v17, v18, v19, v20[0], v20[1]);
    result = (_QWORD *)swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_2;
LABEL_3:
    v8 = v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v8 >= v5)
      goto LABEL_21;
    v9 = *(_QWORD *)(v2 + 8 * v8);
    v10 = v3 + 1;
    if (!v9)
    {
      v10 = v3 + 2;
      if (v3 + 2 >= v5)
        goto LABEL_21;
      v9 = *(_QWORD *)(v2 + 8 * v10);
      if (!v9)
      {
        v10 = v3 + 3;
        if (v3 + 3 >= v5)
          goto LABEL_21;
        v9 = *(_QWORD *)(v2 + 8 * v10);
        if (!v9)
        {
          v10 = v3 + 4;
          if (v3 + 4 >= v5)
            goto LABEL_21;
          v9 = *(_QWORD *)(v2 + 8 * v10);
          if (!v9)
          {
            v10 = v3 + 5;
            if (v3 + 5 >= v5)
              goto LABEL_21;
            v9 = *(_QWORD *)(v2 + 8 * v10);
            if (!v9)
            {
              v11 = v3 + 6;
              while (v11 < v5)
              {
                v9 = *(_QWORD *)(v2 + 8 * v11++);
                if (v9)
                {
                  v10 = v11 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return (_QWORD *)v21;
            }
          }
        }
      }
    }
LABEL_18:
    v4 = (v9 - 1) & v9;
    v7 = __clz(__rbit64(v9)) + (v10 << 6);
    v3 = v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AE8985EC(uint64_t a1)
{
  return sub_1AE8989F4(a1, (void (*)(void))sub_1AE655564, (uint64_t)&type metadata for KnosisIndexType, (void (*)(char *, _QWORD))sub_1AE5564D8);
}

void sub_1AE898608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD v4[6];
  _OWORD v5[2];
  char v6;

  sub_1AE509868();
  sub_1AE60DC3C();
  v4[5] = sub_1AE5080BC();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v2 = 32;
    do
    {
      v3 = *(_OWORD *)(v0 + v2 + 16);
      v5[0] = *(_OWORD *)(v0 + v2);
      v5[1] = v3;
      v6 = *(_BYTE *)(v0 + v2 + 32);
      sub_1AE53F554();
      sub_1AE556798(v4, v5);
      sub_1AE89DD2C();
      sub_1AE4F9038();
      v2 += 40;
      --v1;
    }
    while (v1);
    sub_1AE4F6648();
  }
  else
  {
    sub_1AE4F6648();
  }
  sub_1AE506094();
}

uint64_t sub_1AE8986AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  char v7[24];
  uint64_t v8;
  _OWORD v9[3];

  sub_1AE509868();
  sub_1AE89DBA4();
  v1 = sub_1AE5080BC();
  v8 = v1;
  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    v3 = 32;
    do
    {
      v4 = *(_OWORD *)(v0 + v3 + 16);
      v9[0] = *(_OWORD *)(v0 + v3);
      v9[1] = v4;
      v9[2] = *(_OWORD *)(v0 + v3 + 32);
      sub_1AE562FBC((uint64_t)v9);
      sub_1AE556C34((uint64_t)v7, (uint64_t *)v9);
      swift_bridgeObjectRelease();
      sub_1AE4F9038();
      v3 += 48;
      --v2;
    }
    while (v2);
    sub_1AE4F6648();
    return v8;
  }
  else
  {
    v5 = v1;
    sub_1AE4F6648();
  }
  return v5;
}

void sub_1AE89875C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];

  sub_1AE5958FC();
  v2 = 0;
  v14[4] = sub_1AE926400();
  v3 = a1;
  v13 = a1 + 32;
  while (1)
  {
LABEL_6:
    v11 = *(_QWORD *)(v3 + 16);
    if (v2 == v11)
    {
      sub_1AE4F6728();
      sub_1AE4F665C();
      sub_1AE506094();
      return;
    }
    if (v2 >= v11)
      break;
    v12 = *(_QWORD *)(v13 + 8 * v2);
    sub_1AE4F66CC();
    sub_1AE4F665C();
    ++v2;
    if (v12)
    {
      v4 = *(_QWORD *)(v12 + 16);
      if (v4)
      {
        v5 = 0;
        v6 = (uint64_t *)(v12 + 56);
        while (v5 < v4)
        {
          ++v5;
          v8 = *(v6 - 1);
          v7 = *v6;
          v10 = *(v6 - 3);
          v9 = *(v6 - 2);
          sub_1AE4F6804();
          sub_1AE4F6730();
          sub_1AE556E94(v14, v10, v9, v8, v7);
          sub_1AE89DD20();
          sub_1AE4F9038();
          v4 = *(_QWORD *)(v12 + 16);
          v6 += 4;
          if (v5 == v4)
            goto LABEL_6;
        }
        __break(1u);
        break;
      }
    }
  }
  __break(1u);
}

void sub_1AE898878()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[3];
  _QWORD v16[4];
  uint64_t v17;

  v15[2] = sub_1AE926400();
  sub_1AE64A2FC(v16);
  v0 = v16[1];
  v1 = v16[3];
  v2 = v17;
  v3 = (unint64_t)(v16[2] + 64) >> 6;
  if (!v17)
    goto LABEL_3;
LABEL_2:
  sub_1AE4F79B8();
  while (1)
  {
    sub_1AE4F6730();
    sub_1AE89DCE0((uint64_t)v15, v8, v9, v10, v11, v12, v13, v14, v15[0], v15[1]);
    swift_bridgeObjectRelease();
    if (v2)
      goto LABEL_2;
LABEL_3:
    v4 = v1 + 1;
    if (__OFADD__(v1, 1))
      break;
    if (v4 >= v3)
      goto LABEL_21;
    v5 = *(_QWORD *)(v0 + 8 * v4);
    v6 = v1 + 1;
    if (!v5)
    {
      v6 = v1 + 2;
      if (v1 + 2 >= v3)
        goto LABEL_21;
      v5 = *(_QWORD *)(v0 + 8 * v6);
      if (!v5)
      {
        v6 = v1 + 3;
        if (v1 + 3 >= v3)
          goto LABEL_21;
        v5 = *(_QWORD *)(v0 + 8 * v6);
        if (!v5)
        {
          v6 = v1 + 4;
          if (v1 + 4 >= v3)
            goto LABEL_21;
          v5 = *(_QWORD *)(v0 + 8 * v6);
          if (!v5)
          {
            v6 = v1 + 5;
            if (v1 + 5 >= v3)
              goto LABEL_21;
            v5 = *(_QWORD *)(v0 + 8 * v6);
            if (!v5)
            {
              v7 = v1 + 6;
              while (v7 < v3)
              {
                v5 = *(_QWORD *)(v0 + 8 * v7++);
                if (v5)
                {
                  v6 = v7 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              sub_1AE506094();
              return;
            }
          }
        }
      }
    }
LABEL_18:
    v2 = (v5 - 1) & v5;
    v1 = v6;
  }
  __break(1u);
}

uint64_t sub_1AE8989D8(uint64_t a1)
{
  return sub_1AE8989F4(a1, (void (*)(void))sub_1AE62B630, (uint64_t)&type metadata for PersonEntityTagType, (void (*)(char *, _QWORD))sub_1AE556FE0);
}

uint64_t sub_1AE8989F4(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;

  a2();
  v6 = sub_1AE926400();
  v13 = v6;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      v9 = a1 + i;
      a4(&v12, *(unsigned __int8 *)(v9 + 32));
    }
    sub_1AE4F6648();
    return v13;
  }
  else
  {
    v10 = v6;
    sub_1AE4F6648();
  }
  return v10;
}

uint64_t sub_1AE898A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10[4];
  uint64_t v11;

  sub_1AE509868();
  sub_1AE796170();
  v1 = sub_1AE5080BC();
  v11 = v1;
  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(v0 + 56);
    do
    {
      v4 = *(v3 - 3);
      v5 = *(v3 - 2);
      v6 = *(v3 - 1);
      v7 = *v3;
      sub_1AE4F6730();
      sub_1AE4F6804();
      sub_1AE557410(v10, v4, v5, v6, v7);
      sub_1AE89DD20();
      sub_1AE4F9038();
      v3 += 4;
      --v2;
    }
    while (v2);
    sub_1AE4F6648();
    return v11;
  }
  else
  {
    v8 = v1;
    sub_1AE4F6648();
  }
  return v8;
}

void sub_1AE898B48(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;

  sub_1AE926400();
  if (*(_QWORD *)(a1 + 16))
  {
    while (1)
    {
      sub_1AE89DC64();
      sub_1AE557828(v2, v3);
    }
  }
  sub_1AE4F6648();
  sub_1AE4FE870();
}

id sub_1AE898BB8()
{
  return sub_1AE898BD8();
}

id sub_1AE898BD8()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  v1 = (void *)sub_1AE925E18();
  v2 = (void *)sub_1AE925E18();
  v3 = objc_msgSend(v0, sel_levelForFactor_withNamespaceName_, v1, v2);

  return v3;
}

uint64_t sub_1AE898C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EEDA52E8
                                                                                              + dword_1EEDA52E8);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_1AE898CF8;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1AE898CF8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE50AEA0();
  if (v1)
    v3 = 0;
  else
    v3 = v0 & 1;
  return sub_1AE4FE914(v3, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1AE898D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  void *v7;
  _QWORD *v8;
  void *v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v9 = v7;
  v14 = sub_1AE9261C0();
  v8[16] = v14;
  v15 = sub_1AE925E18();
  v8[17] = v15;
  v16 = MEMORY[0x1E0C809B0];
  if (a6)
  {
    v8[14] = a6;
    v8[15] = a7;
    v8[10] = v16;
    v8[11] = 1107296256;
    v8[12] = sub_1AE898F24;
    v8[13] = &unk_1E5DD8678;
    a6 = _Block_copy(v8 + 10);
    swift_retain();
    v16 = MEMORY[0x1E0C809B0];
    swift_release();
  }
  v8[18] = a6;
  v8[7] = v8 + 19;
  v8[2] = v8;
  v8[3] = sub_1AE898E90;
  v17 = swift_continuation_init();
  v8[10] = v16;
  v8[11] = 0x40000000;
  v8[12] = sub_1AE898F60;
  v8[13] = &unk_1E5DD8660;
  v8[14] = v17;
  objc_msgSend(v9, sel_downloadLevelsForFactors_withNamespace_queue_options_progress_completion_, v14, v15, a4, a5, a6, v8 + 10);
  return swift_continuation_await();
}

uint64_t sub_1AE898E90()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  const void *v4;
  void *v5;
  void *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;

  sub_1AE4FB74C();
  v2 = *v0;
  *v3 = v2;
  v5 = *(void **)(v1 + 136);
  v4 = *(const void **)(v1 + 144);
  v6 = *(void **)(v1 + 128);
  if (*(_QWORD *)(v1 + 48))
  {
    swift_willThrow();
    _Block_release(v4);

    v7 = *(uint64_t (**)(uint64_t))(v2 + 8);
    v8 = 0;
  }
  else
  {
    v9 = *(unsigned __int8 *)(v1 + 152);
    _Block_release(v4);

    v7 = *(uint64_t (**)(uint64_t))(v2 + 8);
    v8 = v9;
  }
  return v7(v8);
}

uint64_t sub_1AE898F24(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1AE898F60(uint64_t a1, char a2, void *a3)
{
  if (a3)
    return sub_1AE898F9C(*(_QWORD *)(a1 + 32), (uint64_t)a3);
  else
    return sub_1AE898FEC(*(_QWORD *)(a1 + 32), a2);
}

uint64_t sub_1AE898F9C(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  sub_1AE501548((uint64_t *)&unk_1ED319C60);
  swift_allocError();
  *v3 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_1AE898FEC(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_throwingResume();
}

id sub_1AE898FFC()
{
  return sub_1AE89901C();
}

id sub_1AE89901C()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1AE925E18();
  v2 = objc_msgSend(v0, sel_experimentIdentifiersWithNamespaceName_, v1);

  return v2;
}

id sub_1AE899064()
{
  return sub_1AE899084();
}

id sub_1AE899084()
{
  void *v0;

  return objc_msgSend(v0, sel_refresh);
}

id sub_1AE899094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1AE8990B4(a1, a2, a3, a4, a5);
}

id sub_1AE8990B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v9;
  void *v10;
  id v11;
  _QWORD v13[6];

  v9 = (void *)sub_1AE925E18();
  v13[4] = a4;
  v13[5] = a5;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1AE899180;
  v13[3] = &unk_1E5DCAC30;
  v10 = _Block_copy(v13);
  swift_retain();
  v11 = objc_msgSend(v5, sel_addUpdateHandlerForNamespaceName_queue_usingBlock_, v9, a3, v10);

  _Block_release(v10);
  swift_release();
  return v11;
}

uint64_t sub_1AE899180(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

id sub_1AE8991C8(uint64_t a1)
{
  return sub_1AE8991E8(a1);
}

id sub_1AE8991E8(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_removeUpdateHandlerForToken_, a1);
}

void *static TrialNamespace.allCases.getter()
{
  return &unk_1E5DA7070;
}

uint64_t TrialNamespace.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AE899240 + 4 * byte_1AE968DB0[*v0]))(0xD000000000000022, 0x80000001AE974D20);
}

unint64_t sub_1AE899240()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1AE8992C0()
{
  return 0x4E4F435F4452454ELL;
}

void sub_1AE8992E0(char *a1)
{
  sub_1AE512058(*a1);
}

void sub_1AE8992EC()
{
  unsigned __int8 *v0;

  sub_1AE512B94(*v0);
}

void sub_1AE8992F4(uint64_t a1)
{
  char *v1;

  sub_1AE5E90B4(a1, *v1);
}

void sub_1AE8992FC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FEB4(a1, *v1);
}

IntelligencePlatform::TrialNamespace_optional sub_1AE899304(Swift::String *a1)
{
  return TrialNamespace.init(rawValue:)(*a1);
}

void sub_1AE899310(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = TrialNamespace.rawValue.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

void sub_1AE899330(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5DA7070;
}

uint64_t sub_1AE899340()
{
  sub_1AE89DAEC();
  return sub_1AE926190();
}

uint64_t sub_1AE89939C()
{
  sub_1AE89DAEC();
  return sub_1AE926148();
}

uint64_t TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.AutoRefreshContent.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.AutoRefreshContent.__deallocating_deinit()
{
  return sub_1AE89B99C((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.updateHandlers.getter()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  sub_1AE4FB7B0();
  sub_1AE4F9094();
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 16);
  sub_1AE4F66CC();
  os_unfair_lock_unlock(v0);
  return v3;
}

void sub_1AE89945C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_1AE899484(v0);
}

void sub_1AE899484(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(os_unfair_lock_s **)(v3 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v4);
  sub_1AE4F9094();
  *(_QWORD *)(*(_QWORD *)(v3 + 16) + 16) = a1;
  swift_bridgeObjectRetain();
  sub_1AE4F665C();
  sub_1AE60DE04();
  swift_bridgeObjectRelease_n();
  sub_1AE4FCDE0();
}

uint64_t TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.__deallocating_deinit()
{
  return sub_1AE89B99C((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1AE899514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0;
  type metadata accessor for TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.AutoRefreshContent();
  v2 = sub_1AE4F66BC();
  type metadata accessor for TrialAssetManager.NamespaceUpdateNotificationToken();
  sub_1AE53A208();
  *(_QWORD *)(v2 + 16) = sub_1AE925C98();
  sub_1AE501548(&qword_1ED319F18);
  sub_1AE4F66BC();
  *(_QWORD *)(v1 + 16) = sub_1AE50B7A4(v2);
  sub_1AE4F6624();
}

uint64_t TrialAssetManager.refreshPolicy.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_retain();
}

id sub_1AE8995A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  _QWORD v15[2];

  v1 = v0;
  v2 = sub_1AE926640();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1AE926634();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1AE925C08();
  MEMORY[0x1E0C80A78](v7);
  v8 = *(void **)(v0 + 56);
  if (v8)
  {
    v9 = *(id *)(v0 + 56);
  }
  else
  {
    sub_1AE524254(0, &qword_1ED30F9D8);
    v15[0] = v10;
    sub_1AE925BE4();
    v15[1] = MEMORY[0x1E0DEE9D8];
    sub_1AE89DB28();
    sub_1AE501548((uint64_t *)&unk_1EED946E0);
    sub_1AE52FB78(&qword_1EED946F0, (uint64_t *)&unk_1EED946E0, MEMORY[0x1E0DEAF38]);
    sub_1AE926838();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D0], v2);
    v11 = (void *)sub_1AE926658();
    v12 = *(void **)(v0 + 56);
    *(_QWORD *)(v1 + 56) = v11;
    v9 = v11;

    v8 = 0;
  }
  v13 = v8;
  return v9;
}

id sub_1AE899788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  _QWORD v15[2];

  v1 = v0;
  v2 = sub_1AE926640();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1AE926634();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1AE925C08();
  MEMORY[0x1E0C80A78](v7);
  v8 = *(void **)(v0 + 64);
  if (v8)
  {
    v9 = *(id *)(v0 + 64);
  }
  else
  {
    sub_1AE524254(0, &qword_1ED30F9D8);
    v15[0] = v10;
    sub_1AE925BE4();
    v15[1] = MEMORY[0x1E0DEE9D8];
    sub_1AE89DB28();
    sub_1AE501548((uint64_t *)&unk_1EED946E0);
    sub_1AE52FB78(&qword_1EED946F0, (uint64_t *)&unk_1EED946E0, MEMORY[0x1E0DEAF38]);
    sub_1AE926838();
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D0], v2);
    v11 = (void *)sub_1AE926658();
    v12 = *(void **)(v0 + 64);
    *(_QWORD *)(v1 + 64) = v11;
    v9 = v11;

    v8 = 0;
  }
  v13 = v8;
  return v9;
}

uint64_t sub_1AE89996C()
{
  uint64_t v0;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);

  return v0;
}

uint64_t sub_1AE899998()
{
  sub_1AE89996C();
  return swift_deallocClassInstance();
}

void TrialAssetManager.ExperimentIdentifiers.experimentId.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

uint64_t TrialAssetManager.ExperimentIdentifiers.deploymentId.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

void TrialAssetManager.ExperimentIdentifiers.treatmentId.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void sub_1AE8999FC(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1)
  {
    v3 = a1;
    v4 = objc_msgSend(v3, sel_experimentId);
    v5 = sub_1AE925E3C();
    v7 = v6;

    v8 = objc_msgSend(v3, sel_deploymentId);
    v9 = objc_msgSend(v3, sel_treatmentId);
    v10 = sub_1AE925E3C();
    v12 = v11;

    v13 = v8;
  }
  else
  {
    v5 = 0;
    v7 = 0;
    v13 = 0;
    v10 = 0;
    v12 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v13;
  a2[3] = v10;
  a2[4] = v12;
}

uint64_t static TrialAssetManager.ExperimentIdentifiers.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t result;

  v2 = *(_DWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_DWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v2 != v5)
      return 0;
  }
  else
  {
    v9 = sub_1AE926D60();
    result = 0;
    if ((v9 & 1) == 0 || v2 != v5)
      return result;
  }
  if (v3 == v6 && v4 == v7)
    return 1;
  sub_1AE4F7714();
  return sub_1AE926D60();
}

uint64_t sub_1AE899B90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x656D697265707865 && a2 == 0xEC0000006449746ELL;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656D796F6C706564 && a2 == 0xEC0000006449746ELL;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E656D7461657274 && a2 == 0xEB00000000644974)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AE899D20(char a1)
{
  if (!a1)
    return 0x656D697265707865;
  if (a1 == 1)
    return 0x656D796F6C706564;
  return 0x6E656D7461657274;
}

uint64_t sub_1AE899D84()
{
  char *v0;

  return sub_1AE899D20(*v0);
}

uint64_t sub_1AE899D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE899B90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE899DB0()
{
  sub_1AE89BEEC();
  return sub_1AE926F94();
}

uint64_t sub_1AE899DD8()
{
  sub_1AE89BEEC();
  return sub_1AE926FA0();
}

void TrialAssetManager.ExperimentIdentifiers.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE4F67EC();
  v3 = v2;
  v4 = sub_1AE501548(&qword_1EEDA5218);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE89BEEC();
  sub_1AE926F4C();
  sub_1AE926C88();
  if (!v0)
  {
    sub_1AE89DCB8();
    sub_1AE926CD0();
    sub_1AE89DCB8();
    sub_1AE926C88();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  sub_1AE4F667C();
}

void TrialAssetManager.ExperimentIdentifiers.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;

  sub_1AE4F67EC();
  a23 = v26;
  a24 = v27;
  v29 = v28;
  v31 = v30;
  v32 = sub_1AE501548(&qword_1EEDA5228);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&a9 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9858(v29, v29[3]);
  sub_1AE89BEEC();
  sub_1AE4F680C();
  if (v24)
  {
    sub_1AE4F90EC();
  }
  else
  {
    a14 = 0;
    v36 = sub_1AE595A20();
    v38 = v37;
    a13 = 1;
    swift_bridgeObjectRetain();
    a10 = sub_1AE926BF8();
    a12 = 2;
    v39 = sub_1AE595A20();
    v41 = v40;
    v42 = *(void (**)(char *, uint64_t))(v25 + 8);
    v43 = v39;
    v42(v35, v32);
    *(_QWORD *)v31 = v36;
    *(_QWORD *)(v31 + 8) = v38;
    *(_DWORD *)(v31 + 16) = a10;
    *(_QWORD *)(v31 + 24) = v43;
    *(_QWORD *)(v31 + 32) = v41;
    sub_1AE4F66CC();
    sub_1AE4F90EC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1AE4F667C();
}

#error "1AE89A09C: call analysis failed (funcsize=5)"

void sub_1AE89A0A8()
{
  TrialAssetManager.ExperimentIdentifiers.encode(to:)();
}

uint64_t sub_1AE89A0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v2;
  type metadata accessor for TrialAssetManager.InfoToMakeSendable();
  v6 = (_QWORD *)swift_allocObject();
  sub_1AE524254(0, &qword_1ED30DA00);
  v6[5] = v7;
  v6[6] = &off_1E5DC8CE8;
  v6[2] = a1;
  v6[7] = 0;
  v6[8] = 0;
  sub_1AE501548(&qword_1ED30D9D8);
  swift_allocObject();
  v8 = sub_1AE50B7A4(v6);
  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = v8;
  return v3;
}

uint64_t type metadata accessor for TrialAssetManager.AssetLocalAvailabilityInfo(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1ED30F0F8);
}

uint64_t type metadata accessor for TrialAssetManager.Asset(uint64_t a1)
{
  return sub_1AE536C28(a1, qword_1ED30F0E0);
}

Swift::Void __swiftcall TrialAssetManager.refresh()()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 24);
  sub_1AE4FB7B0();
  sub_1AE4F9094();
  v3 = *(_QWORD **)(v2 + 16);
  v4 = v3 + 2;
  os_unfair_lock_unlock(v0);
  v5 = v3[5];
  v6 = v3[6];
  sub_1AE4F9858(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
  sub_1AE4FCDE0();
}

void TrialAssetManager.experimentIdentifiers(for:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  v2 = *a1;
  sub_1AE89DC3C();
  sub_1AE4F9094();
  sub_1AE57C238(*(_QWORD *)(v1 + 16) + 16, (uint64_t)v3);
  sub_1AE60DE04();
  sub_1AE4F9858(v3, v3[3]);
  __asm { BR              X9 }
}

uint64_t sub_1AE89A278()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;

  v3 = (void *)(*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 24))(0xD00000000000001FLL, 0x80000001AE974D50, v1, v2);
  swift_bridgeObjectRelease();
  sub_1AE8999FC(v3, v0);
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v5);
}

uint64_t TrialAssetManager.AssetType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x726F746365726964;
  else
    return 1701603686;
}

void sub_1AE89A39C()
{
  sub_1AE512C6C();
}

uint64_t sub_1AE89A3A4()
{
  return sub_1AE5E8C38();
}

void sub_1AE89A3AC()
{
  sub_1AE54FD64();
}

IntelligencePlatform::TrialAssetManager::AssetType_optional sub_1AE89A3B4(Swift::String *a1)
{
  return TrialAssetManager.AssetType.init(rawValue:)(*a1);
}

void sub_1AE89A3C0(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = TrialAssetManager.AssetType.rawValue.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

uint64_t sub_1AE89A3E0()
{
  sub_1AE89DAB0();
  return sub_1AE926190();
}

uint64_t sub_1AE89A43C()
{
  sub_1AE89DAB0();
  return sub_1AE926148();
}

void sub_1AE89A488(char *a1, char *a2)
{
  sub_1AE511B74(*a1, *a2);
}

void sub_1AE89A494(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  _QWORD v7[4];

  v4 = *a3;
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(os_unfair_lock_s **)(v5 + 24);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  sub_1AE57C238(*(_QWORD *)(v5 + 16) + 16, (uint64_t)v7);
  os_unfair_lock_unlock(v6);
  sub_1AE4F9858(v7, v7[3]);
  __asm { BR              X9 }
}

uint64_t sub_1AE89A544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  unsigned __int8 v17;
  uint64_t v18;

  v6 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v5 + 8))(v3, v1, 0xD00000000000001FLL, 0x80000001AE974D50, v4, v5);
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v18);
  if (v6)
  {
    v7 = *(_QWORD *)(v2 + 16);
    if (v7)
    {
      v8 = *(_QWORD *)(v7 + 16);
      v9 = *(os_unfair_lock_s **)(v8 + 24);
      swift_retain();
      os_unfair_lock_lock(v9);
      swift_beginAccess();
      v10 = *(_QWORD *)(*(_QWORD *)(v8 + 16) + 16);
      swift_bridgeObjectRetain();
      os_unfair_lock_unlock(v9);
      sub_1AE515CB8(v0, v10);
      v12 = v11;
      swift_bridgeObjectRelease();
      swift_release();
      if (!v12)
      {
        v17 = v0;
        swift_allocObject();
        swift_weakInit();
        swift_retain();
        TrialAssetManager.addUpdateHandler(for:using:)(&v17);
        swift_release_n();
        v13 = *(_QWORD *)(v7 + 16);
        v14 = *(os_unfair_lock_s **)(v13 + 24);
        os_unfair_lock_lock(v14);
        swift_beginAccess();
        v15 = *(_QWORD *)(*(_QWORD *)(v13 + 16) + 16);
        swift_bridgeObjectRetain();
        os_unfair_lock_unlock(v14);
        swift_isUniquelyReferenced_nonNull_native();
        sub_1AE53A028();
        swift_bridgeObjectRelease();
        sub_1AE899484(v15);
      }
      swift_release();
    }
  }
  return v6;
}

uint64_t sub_1AE89A77C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    TrialAssetManager.refresh()();
    return swift_release();
  }
  return result;
}

void TrialAssetManager.addUpdateHandler(for:using:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  _QWORD v5[4];

  v2 = *a1;
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(os_unfair_lock_s **)(v3 + 24);
  os_unfair_lock_lock(v4);
  sub_1AE4F9094();
  sub_1AE57C238(*(_QWORD *)(v3 + 16) + 16, (uint64_t)v5);
  os_unfair_lock_unlock(v4);
  sub_1AE4F9858(v5, v5[3]);
  __asm { BR              X9 }
}

uint64_t sub_1AE89A87C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  os_unfair_lock_s *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t (*v36)(unint64_t, unint64_t, id, void (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;

  os_unfair_lock_lock(v32);
  v34 = sub_1AE899788();
  os_unfair_lock_unlock(v32);
  v35 = sub_1AE4F66BC();
  *(_QWORD *)(v35 + 16) = v39;
  *(_QWORD *)(v35 + 24) = v30;
  v36 = *(uint64_t (**)(unint64_t, unint64_t, id, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v33 + 40);
  swift_retain();
  v37 = v36(0xD00000000000001FLL, 0x80000001AE974D50, v34, sub_1AE89BF4C, v35, v31, v33);
  sub_1AE4F6710();

  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v40);
  type metadata accessor for TrialAssetManager.NamespaceUpdateNotificationToken();
  result = sub_1AE4F66BC();
  *(_QWORD *)(result + 16) = v37;
  return result;
}

uint64_t TrialAssetManager.DownloadOptions.allowsCellularAccess.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void TrialAssetManager.DownloadOptions.discretionaryBehavior.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

IntelligencePlatform::TrialAssetManager::DownloadOptions::DiscretionaryNetworkBehavior_optional __swiftcall TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  IntelligencePlatform::TrialAssetManager::DownloadOptions::DiscretionaryNetworkBehavior_optional result;

  sub_1AE89A9F0(v1);
  return result;
}

void sub_1AE89A9F0(char *a1@<X8>)
{
  uint64_t v2;
  char v3;

  v2 = sub_1AE926B44();
  sub_1AE4F6648();
  if (v2 == 1)
    v3 = 1;
  else
    v3 = 2;
  if (!v2)
    v3 = 0;
  *a1 = v3;
  sub_1AE4F6624();
}

uint64_t TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6974657263736964;
  else
    return 0xD000000000000010;
}

IntelligencePlatform::TrialAssetManager::DownloadOptions::DiscretionaryNetworkBehavior_optional sub_1AE89AA8C(Swift::String *a1)
{
  return TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior.init(rawValue:)(*a1);
}

void sub_1AE89AA98(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior.rawValue.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

uint64_t sub_1AE89AAB8()
{
  sub_1AE89DA74();
  return sub_1AE926190();
}

uint64_t sub_1AE89AB14()
{
  sub_1AE89DA74();
  return sub_1AE926148();
}

void sub_1AE89AB60(char *a1, char *a2)
{
  sub_1AE511AE0(*a1, *a2);
}

void sub_1AE89AB6C()
{
  sub_1AE512C78();
}

uint64_t sub_1AE89AB74()
{
  return sub_1AE5E8BD8();
}

void sub_1AE89AB7C()
{
  sub_1AE54FCF4();
}

IntelligencePlatform::TrialAssetManager::DownloadOptions __swiftcall TrialAssetManager.DownloadOptions.init(allowsCellularAccess:discretionaryBehavior:)(Swift::Bool allowsCellularAccess, IntelligencePlatform::TrialAssetManager::DownloadOptions::DiscretionaryNetworkBehavior discretionaryBehavior)
{
  Swift::Bool *v2;
  char v3;
  IntelligencePlatform::TrialAssetManager::DownloadOptions result;

  v3 = *(_BYTE *)discretionaryBehavior;
  *v2 = allowsCellularAccess;
  v2[1] = v3;
  result.allowsCellularAccess = allowsCellularAccess;
  return result;
}

void static TrialAssetManager.DownloadOptions.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
    sub_1AE511AE0(a1[1], a2[1]);
}

uint64_t TrialAssetManager.DownloadOptions.hash(into:)()
{
  sub_1AE926EE0();
  sub_1AE925F14();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE89AC40(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001AE98A510 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AE98A530)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1AE89AD28(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0xD000000000000014;
}

unint64_t sub_1AE89AD64()
{
  char *v0;

  return sub_1AE89AD28(*v0);
}

uint64_t sub_1AE89AD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE89AC40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE89AD90()
{
  sub_1AE89BF74();
  return sub_1AE926F94();
}

uint64_t sub_1AE89ADB8()
{
  sub_1AE89BF74();
  return sub_1AE926FA0();
}

void TrialAssetManager.DownloadOptions.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE4F67EC();
  v4 = v3;
  v5 = sub_1AE501548(&qword_1EEDA5230);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F683C();
  sub_1AE4F9858(v4, v4[3]);
  sub_1AE89BF74();
  sub_1AE926F4C();
  sub_1AE89DCB8();
  sub_1AE926C94();
  if (!v0)
  {
    sub_1AE89BFB0();
    sub_1AE89DCB8();
    sub_1AE926CC4();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v5);
  sub_1AE4F667C();
}

uint64_t TrialAssetManager.DownloadOptions.hashValue.getter()
{
  sub_1AE926EC8();
  sub_1AE926EE0();
  sub_1AE925F14();
  sub_1AE4F6648();
  return sub_1AE926F10();
}

void TrialAssetManager.DownloadOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  char v18;

  sub_1AE4F67EC();
  v14 = v13;
  v16 = v15;
  sub_1AE501548(&qword_1EEDA5248);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE4F9858(v14, v14[3]);
  sub_1AE89BF74();
  sub_1AE4F680C();
  if (!v12)
  {
    v18 = sub_1AE926BBC();
    sub_1AE89BFEC();
    sub_1AE926BEC();
    sub_1AE4F9250();
    *v16 = v18 & 1;
    v16[1] = a12;
  }
  sub_1AE4F90EC();
  sub_1AE4F667C();
}

void sub_1AE89B0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  TrialAssetManager.DownloadOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_1AE89B0B4()
{
  TrialAssetManager.DownloadOptions.encode(to:)();
}

uint64_t sub_1AE89B0D4()
{
  sub_1AE926EC8();
  sub_1AE926EE0();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  return sub_1AE926F10();
}

uint64_t TrialAssetManager.downloadOnDemandAsset(for:in:downloadOptions:)(uint64_t a1, uint64_t a2, _BYTE *a3, _WORD *a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 72) = a2;
  *(_QWORD *)(v5 + 80) = v4;
  *(_QWORD *)(v5 + 64) = a1;
  *(_BYTE *)(v5 + 117) = *a3;
  *(_WORD *)(v5 + 114) = *a4;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE89B19C()
{
  uint64_t v0;
  __int16 v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE *v9;
  _WORD *v10;

  v1 = *(_WORD *)(v0 + 114);
  v2 = *(_BYTE *)(v0 + 117);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  sub_1AE501548(&qword_1ED31BCD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE934250;
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = v3;
  swift_bridgeObjectRetain();
  sub_1AE56BB6C();
  *(_BYTE *)(v0 + 116) = v2;
  *(_QWORD *)(v0 + 88) = v6;
  *(_WORD *)(v0 + 112) = v1;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v7;
  *v7 = v0;
  v7[1] = sub_1AE89B254;
  v8 = sub_1AE89DC7C();
  return TrialAssetManager.downloadOnDemandAssets(for:in:downloadOptions:)(v8, v9, v10);
}

uint64_t sub_1AE89B254()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  sub_1AE4FB74C();
  v2 = *v1;
  *v3 = v2;
  *(_QWORD *)(v4 + 104) = v0;
  swift_task_dealloc();
  sub_1AE4F6648();
  if (!v0)
    return sub_1AE4FC8E4(*(uint64_t (**)(void))(v2 + 8));
  sub_1AE4F9070();
  return sub_1AE4FDD5C();
}

uint64_t sub_1AE89B2B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1AE89B2BC()
{
  unint64_t result;

  result = qword_1EEDA51E0;
  if (!qword_1EEDA51E0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialAssetManager.AssetError, &type metadata for TrialAssetManager.AssetError);
    atomic_store(result, (unint64_t *)&qword_1EEDA51E0);
  }
  return result;
}

uint64_t sub_1AE89B2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TrialAssetManager.Asset(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t TrialAssetManager.downloadOnDemandAssets(for:in:downloadOptions:)(uint64_t a1, _BYTE *a2, _WORD *a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 80) = a1;
  *(_QWORD *)(v4 + 88) = v3;
  *(_BYTE *)(v4 + 154) = *a2;
  *(_WORD *)(v4 + 152) = *a3;
  return sub_1AE4FECB0();
}

void sub_1AE89B35C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(v0 + 154);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 24);
  v3 = *(os_unfair_lock_s **)(v2 + 24);
  os_unfair_lock_lock(v3);
  sub_1AE4F9094();
  sub_1AE57C238(*(_QWORD *)(v2 + 16) + 16, v0 + 16);
  os_unfair_lock_unlock(v3);
  sub_1AE4F9858((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1AE4F6804();
  sub_1AE58FBA8();
  *(_QWORD *)(v0 + 96) = v4;
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

uint64_t sub_1AE89B424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  os_unfair_lock_s *v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, unint64_t, unint64_t, id, id, void (*)(), uint64_t, _QWORD);

  *(_QWORD *)(v1 + 104) = 0x80000001AE974D50;
  v5 = *(unsigned __int8 *)(v1 + 152);
  v6 = *(os_unfair_lock_s **)(v3 + 24);
  os_unfair_lock_lock(v6);
  v7 = sub_1AE8995A4();
  *(_QWORD *)(v1 + 112) = v7;
  os_unfair_lock_unlock(v6);
  if (v5 == 2)
  {
    v8 = 0;
  }
  else
  {
    v9 = *(unsigned __int16 *)(v1 + 152);
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC0A10]), sel_initWithAllowsCellular_discretionaryBehavior_, v9 & 1, (v9 >> 7) & 2);
  }
  *(_QWORD *)(v1 + 120) = v8;
  v10 = *(_QWORD *)(v1 + 80);
  v11 = sub_1AE4F66BC();
  *(_QWORD *)(v1 + 128) = v11;
  *(_QWORD *)(v11 + 16) = v10;
  v14 = (uint64_t (*)(uint64_t, unint64_t, unint64_t, id, id, void (*)(), uint64_t, _QWORD))(**(int **)(v0 + 16) + *(_QWORD *)(v0 + 16));
  sub_1AE4FB764();
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 136) = v12;
  *v12 = v1;
  v12[1] = sub_1AE89B5D4;
  *(_QWORD *)(v4 + 16) = v0;
  return v14(v2, 0xD00000000000001FLL, 0x80000001AE974D50, v7, v8, sub_1AE89C044, v11, *(_QWORD *)(v4 + 24));
}

uint64_t sub_1AE89B5D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = *v1;
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = *(void **)(v2 + 120);
    v4 = *(void **)(v2 + 112);
    swift_release();

    sub_1AE4F9038();
    swift_release();

  }
  sub_1AE4F9070();
  return sub_1AE4FDD5C();
}

uint64_t sub_1AE89B65C()
{
  uint64_t v0;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  TrialAssetManager.refresh()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AE89B698()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 120);
  v2 = *(void **)(v0 + 112);
  swift_release();

  sub_1AE4F6648();
  swift_release();

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  return sub_1AE5097A4(*(uint64_t (**)(void))(v0 + 8));
}

void sub_1AE89B6FC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14[11];

  if (qword_1ED31BCB0 != -1)
    swift_once();
  v0 = sub_1AE925B6C();
  sub_1AE4FB608(v0, (uint64_t)qword_1ED31BC90);
  swift_bridgeObjectRetain_n();
  v1 = sub_1AE925B54();
  v2 = sub_1AE9265D4();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = swift_slowAlloc();
    v4 = swift_slowAlloc();
    v14[0] = v4;
    *(_DWORD *)v3 = 136315394;
    swift_bridgeObjectRetain();
    v5 = sub_1AE9263F4();
    v7 = v6;
    swift_bridgeObjectRelease();
    sub_1AE520ED4(v5, v7, (uint64_t)v14, v8, v9, v10, v11, v12, v13, v14[0], v14[1], v14[2], v14[3], v14[4], v14[5], v14[6], v14[7], v14[8], v14[9],
      v14[10]);
    sub_1AE92676C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2048;
    sub_1AE92676C();
    _os_log_impl(&dword_1AE4F2000, v1, v2, "Downloading asset for %s: %lu", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF454C78](v4, -1, -1);
    MEMORY[0x1AF454C78](v3, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t TrialAssetManager.Asset.url.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  sub_1AE4FD9B0();
  v0 = sub_1AE4F7714();
  return v1(v0);
}

uint64_t TrialAssetManager.Asset.metadata.getter()
{
  sub_1AE89DC2C();
  return swift_bridgeObjectRetain();
}

uint64_t TrialAssetManager.Asset.experimentIdentifiers.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(sub_1AE89DC2C() + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1AE53C7C0(v4, v5);
}

uint64_t TrialAssetManager.NamespaceUpdateNotificationToken.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t TrialAssetManager.NamespaceUpdateNotificationToken.__deallocating_deinit()
{
  return sub_1AE89B99C((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1AE89B99C(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  sub_1AE89DC54();
  return swift_deallocClassInstance();
}

void TrialAssetManager.NamespaceUpdateInfo.namespace.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t TrialAssetManager.NamespaceUpdateInfo.token.getter()
{
  return swift_retain();
}

uint64_t sub_1AE89B9D0@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[9];

  v4 = objc_msgSend(a1, sel_namespaceName);
  v5 = sub_1AE925E3C();
  v7 = v6;

  v8._countAndFlagsBits = v5;
  v8._object = v7;
  TrialNamespace.init(rawValue:)(v8);
  v9 = LOBYTE(v27[0]);
  if (LOBYTE(v27[0]) == 9)
  {
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v10 = sub_1AE925B6C();
    sub_1AE4FB608(v10, (uint64_t)qword_1ED31BC90);
    swift_unknownObjectRetain_n();
    v11 = sub_1AE925B54();
    v12 = sub_1AE9265F8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v27[0] = swift_slowAlloc();
      *(_DWORD *)v13 = 136315138;
      v14 = objc_msgSend(a1, sel_namespaceName);
      v15 = sub_1AE925E3C();
      v17 = v16;

      sub_1AE520ED4(v15, v17, (uint64_t)v27, v18, v19, v20, v21, v22, v25, (unint64_t)(v13 + 4), v26, v27[0], v27[1], v27[2], v27[3], v27[4], v27[5], v27[6], v27[7],
        v27[8]);
      sub_1AE92676C();
      swift_unknownObjectRelease_n();
      sub_1AE4F6728();
      _os_log_impl(&dword_1AE4F2000, v11, v12, "TrialAssetmanager: NamespaceUpdateInfo: init: unknown namespaceName %s", v13, 0xCu);
      swift_arrayDestroy();
      sub_1AE4F9064();
    }

    result = swift_unknownObjectRelease_n();
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    v23 = objc_msgSend(a1, sel_token);
    swift_unknownObjectRelease();
    type metadata accessor for TrialAssetManager.NamespaceUpdateNotificationToken();
    result = sub_1AE4F66BC();
    *(_QWORD *)(result + 16) = v23;
    *a2 = v9;
    a2[1] = result;
  }
  return result;
}

void sub_1AE89BC18(uint64_t a1, void (*a2)(_QWORD *))
{
  void *v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  NSObject *oslog;
  _QWORD v8[2];

  v3 = (void *)swift_unknownObjectRetain();
  sub_1AE89B9D0(v3, v8);
  if (v8[1])
  {
    a2(v8);
    swift_release();
  }
  else
  {
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v4 = sub_1AE925B6C();
    sub_1AE4FB608(v4, (uint64_t)qword_1ED31BC90);
    oslog = sub_1AE925B54();
    v5 = sub_1AE9265EC();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1AE4F2000, oslog, v5, "TrialAssetmanager: addUpdateHandler: cannot construct triNamespaceUpdate", v6, 2u);
      MEMORY[0x1AF454C78](v6, -1, -1);
    }

  }
}

uint64_t TrialAssetManager.removeUpdateHandler(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE89DC3C();
  sub_1AE4F9094();
  v3 = *(_QWORD **)(v1 + 16);
  v4 = v3 + 2;
  sub_1AE60DE04();
  v5 = v3[5];
  v6 = v3[6];
  sub_1AE4F9858(v4, v5);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v6 + 48))(*(_QWORD *)(a1 + 16), v5, v6);
}

uint64_t TrialAssetManager.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t TrialAssetManager.__deallocating_deinit()
{
  TrialAssetManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE89BDF0(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_path);

  if (!v2)
    return 0;
  v3 = sub_1AE925E3C();

  return v3;
}

uint64_t sub_1AE89BE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9B0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE89BEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9B0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AE89BEEC()
{
  unint64_t result;

  result = qword_1EEDA5220;
  if (!qword_1EEDA5220)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE969730, &type metadata for TrialAssetManager.ExperimentIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5220);
  }
  return result;
}

uint64_t sub_1AE89BF28()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1AE89BF4C(uint64_t a1)
{
  uint64_t v1;

  sub_1AE89BC18(a1, *(void (**)(_QWORD *))(v1 + 16));
}

uint64_t type metadata accessor for TrialAssetManager.NamespaceUpdateNotificationToken()
{
  return objc_opt_self();
}

unint64_t sub_1AE89BF74()
{
  unint64_t result;

  result = qword_1EEDA5238;
  if (!qword_1EEDA5238)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9696E0, &type metadata for TrialAssetManager.DownloadOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5238);
  }
  return result;
}

unint64_t sub_1AE89BFB0()
{
  unint64_t result;

  result = qword_1EEDA5240;
  if (!qword_1EEDA5240)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior, &type metadata for TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior);
    atomic_store(result, (unint64_t *)&qword_1EEDA5240);
  }
  return result;
}

unint64_t sub_1AE89BFEC()
{
  unint64_t result;

  result = qword_1EEDA5250;
  if (!qword_1EEDA5250)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior, &type metadata for TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior);
    atomic_store(result, (unint64_t *)&qword_1EEDA5250);
  }
  return result;
}

uint64_t sub_1AE89C028()
{
  swift_bridgeObjectRelease();
  sub_1AE89DC54();
  return swift_deallocObject();
}

void sub_1AE89C044()
{
  sub_1AE89B6FC();
}

unint64_t sub_1AE89C050()
{
  unint64_t result;

  result = qword_1ED319EE8;
  if (!qword_1ED319EE8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialNamespace, &type metadata for TrialNamespace);
    atomic_store(result, (unint64_t *)&qword_1ED319EE8);
  }
  return result;
}

void sub_1AE89C08C()
{
  sub_1AE52FB78(&qword_1EEDA5270, &qword_1EEDA5278, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1AE89C0BC()
{
  unint64_t result;

  result = qword_1EEDA5280;
  if (!qword_1EEDA5280)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialAssetManager.AssetType, &type metadata for TrialAssetManager.AssetType);
    atomic_store(result, (unint64_t *)&qword_1EEDA5280);
  }
  return result;
}

unint64_t sub_1AE89C0FC()
{
  unint64_t result;

  result = qword_1EEDA5288;
  if (!qword_1EEDA5288)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior, &type metadata for TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior);
    atomic_store(result, (unint64_t *)&qword_1EEDA5288);
  }
  return result;
}

unint64_t sub_1AE89C13C()
{
  unint64_t result;

  result = qword_1EEDA5290;
  if (!qword_1EEDA5290)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialAssetManager.DownloadOptions, &type metadata for TrialAssetManager.DownloadOptions);
    atomic_store(result, (unint64_t *)&qword_1EEDA5290);
  }
  return result;
}

void sub_1AE89C178(uint64_t *a1@<X8>)
{
  *a1 = TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.updateHandlers.getter();
  sub_1AE4F6664();
}

uint64_t storeEnumTagSinglePayload for TrialNamespace(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1AE89C1EC + 4 * byte_1AE968DE2[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1AE89C220 + 4 * byte_1AE968DDD[v4]))();
}

uint64_t sub_1AE89C220(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE89C228(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE89C230);
  return result;
}

uint64_t sub_1AE89C23C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE89C244);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1AE89C248(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE89C250(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for TrialNamespace()
{
  sub_1AE4F67D4();
}

uint64_t type metadata accessor for TrialAssetManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for TrialAssetManager()
{
  return swift_lookUpClassMethod();
}

_QWORD *initializeBufferWithCopyOfBuffer for TrialAssetManager.RefreshPolicy(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for TrialAssetManager.RefreshPolicy(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for TrialAssetManager.RefreshPolicy(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

void type metadata accessor for TrialAssetManager.RefreshPolicy()
{
  sub_1AE4F67D4();
}

uint64_t type metadata accessor for TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo()
{
  return objc_opt_self();
}

uint64_t method lookup function for TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.AutoRefreshContent()
{
  return objc_opt_self();
}

uint64_t method lookup function for TrialAssetManager.RefreshPolicy.AutoRefreshForAllRequestedNamespacesInfo.AutoRefreshContent()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for TrialAssetManager.InfoToMakeSendable()
{
  return objc_opt_self();
}

uint64_t initializeWithCopy for TrialAssetManager.ExperimentIdentifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TrialAssetManager.ExperimentIdentifiers(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TrialAssetManager.ExperimentIdentifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for TrialAssetManager.ExperimentIdentifiers()
{
  sub_1AE4F67D4();
}

uint64_t *initializeBufferWithCopyOfBuffer for TrialAssetManager.AssetLocalAvailabilityInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TrialAssetManager.Asset(0);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_1AE924780();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 20));
      v10 = *(int *)(v7 + 24);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = *(uint64_t *)((char *)a2 + v10 + 8);
      swift_bridgeObjectRetain();
      if (v13)
      {
        *(_QWORD *)v11 = *(_QWORD *)v12;
        *((_QWORD *)v11 + 1) = v13;
        *((_DWORD *)v11 + 4) = *((_DWORD *)v12 + 4);
        v14 = *((_QWORD *)v12 + 3);
        v15 = *((_QWORD *)v12 + 4);
        *((_QWORD *)v11 + 3) = v14;
        *((_QWORD *)v11 + 4) = v15;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v16 = *((_OWORD *)v12 + 1);
        *(_OWORD *)v11 = *(_OWORD *)v12;
        *((_OWORD *)v11 + 1) = v16;
        *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
      }
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for TrialAssetManager.AssetLocalAvailabilityInfo(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = type metadata accessor for TrialAssetManager.Asset(0);
  result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1AE924780();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + *(int *)(v2 + 24) + 8);
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *initializeWithCopy for TrialAssetManager.AssetLocalAvailabilityInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v6 = type metadata accessor for TrialAssetManager.Asset(0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1AE924780();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
    v8 = *(int *)(v6 + 24);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *(_QWORD *)&a2[v8 + 8];
    swift_bridgeObjectRetain();
    if (v11)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v11;
      *((_DWORD *)v9 + 4) = *((_DWORD *)v10 + 4);
      v12 = *((_QWORD *)v10 + 3);
      v13 = *((_QWORD *)v10 + 4);
      *((_QWORD *)v9 + 3) = v12;
      *((_QWORD *)v9 + 4) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v14;
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    }
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for TrialAssetManager.AssetLocalAvailabilityInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v6 = type metadata accessor for TrialAssetManager.Asset(0);
  v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v14 = sub_1AE924780();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(a1, a2, v14);
      *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15 = *(int *)(v6 + 24);
      v16 = (uint64_t)&a1[v15];
      v17 = &a2[v15];
      v18 = *(_QWORD *)&a1[v15 + 8];
      v19 = *((_QWORD *)v17 + 1);
      if (v18)
      {
        if (v19)
        {
          *(_QWORD *)v16 = *(_QWORD *)v17;
          *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_DWORD *)(v16 + 16) = *((_DWORD *)v17 + 4);
          *(_QWORD *)(v16 + 24) = *((_QWORD *)v17 + 3);
          *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1AE53D100(v16);
          v23 = *((_QWORD *)v17 + 4);
          v24 = *((_OWORD *)v17 + 1);
          *(_OWORD *)v16 = *(_OWORD *)v17;
          *(_OWORD *)(v16 + 16) = v24;
          *(_QWORD *)(v16 + 32) = v23;
        }
      }
      else if (v19)
      {
        *(_QWORD *)v16 = *(_QWORD *)v17;
        *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
        *(_DWORD *)(v16 + 16) = *((_DWORD *)v17 + 4);
        *(_QWORD *)(v16 + 24) = *((_QWORD *)v17 + 3);
        *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v25 = *(_OWORD *)v17;
        v26 = *((_OWORD *)v17 + 1);
        *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
        *(_OWORD *)v16 = v25;
        *(_OWORD *)(v16 + 16) = v26;
      }
      return a1;
    }
    sub_1AE53D160((uint64_t)a1, type metadata accessor for TrialAssetManager.Asset);
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  if (v8)
    goto LABEL_7;
  v9 = sub_1AE924780();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
  v10 = *(int *)(v6 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_QWORD *)v12 + 1);
  swift_bridgeObjectRetain();
  if (v13)
  {
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
    *((_DWORD *)v11 + 4) = *((_DWORD *)v12 + 4);
    *((_QWORD *)v11 + 3) = *((_QWORD *)v12 + 3);
    *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *(_OWORD *)v12;
    v21 = *((_OWORD *)v12 + 1);
    *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
    *(_OWORD *)v11 = v20;
    *((_OWORD *)v11 + 1) = v21;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

char *initializeWithTake for TrialAssetManager.AssetLocalAvailabilityInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;

  v6 = type metadata accessor for TrialAssetManager.Asset(0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1AE924780();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
    v8 = *(int *)(v6 + 24);
    v9 = &a1[v8];
    v10 = &a2[v8];
    *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for TrialAssetManager.AssetLocalAvailabilityInfo(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  v6 = type metadata accessor for TrialAssetManager.Asset(0);
  v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      v15 = sub_1AE924780();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(a1, a2, v15);
      *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
      swift_bridgeObjectRelease();
      v16 = *(int *)(v6 + 24);
      v17 = (uint64_t)&a1[v16];
      v18 = &a2[v16];
      if (*(_QWORD *)&a1[v16 + 8])
      {
        v19 = *((_QWORD *)v18 + 1);
        if (v19)
        {
          *(_QWORD *)v17 = *(_QWORD *)v18;
          *(_QWORD *)(v17 + 8) = v19;
          swift_bridgeObjectRelease();
          *(_DWORD *)(v17 + 16) = *((_DWORD *)v18 + 4);
          v20 = *((_QWORD *)v18 + 4);
          *(_QWORD *)(v17 + 24) = *((_QWORD *)v18 + 3);
          *(_QWORD *)(v17 + 32) = v20;
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_1AE53D100(v17);
      }
      v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)v17 = *(_OWORD *)v18;
      *(_OWORD *)(v17 + 16) = v21;
      *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
      return a1;
    }
    sub_1AE53D160((uint64_t)a1, type metadata accessor for TrialAssetManager.Asset);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1AE924780();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
  v10 = *(int *)(v6 + 24);
  v11 = &a1[v10];
  v12 = &a2[v10];
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrialAssetManager.AssetLocalAvailabilityInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE89CC14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for TrialAssetManager.Asset(0);
  v5 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TrialAssetManager.AssetLocalAvailabilityInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE89CC64(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1AE89DC2C();
  return sub_1AE4F66D4(a1, v5, a3, v6);
}

uint64_t sub_1AE89CCA0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TrialAssetManager.Asset(0);
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v2);
}

uint64_t sub_1AE89CCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TrialAssetManager.Asset(0);
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v4);
}

uint64_t sub_1AE89CD08()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TrialAssetManager.Asset(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void type metadata accessor for TrialAssetManager.AssetType()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE89CD70(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 0xBFu)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for TrialAssetManager.AssetError(uint64_t a1)
{
  return sub_1AE89CD98(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1AE89CD98(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 0xBFu)
    return swift_bridgeObjectRelease();
  return result;
}

void _s20IntelligencePlatform17TrialAssetManagerC10AssetErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  v6 = sub_1AE753ADC();
  sub_1AE89CD70(v6, v7, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1AE4F6624();
}

uint64_t assignWithCopy for TrialAssetManager.AssetError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1AE89CD70(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1AE89CD98(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TrialAssetManager.AssetError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1AE89CD98(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrialAssetManager.AssetError(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 13;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 16) >> 2) & 0xC | (*(unsigned __int8 *)(a1 + 16) >> 6)) ^ 0xF;
      if (v2 >= 0xD)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for TrialAssetManager.AssetError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 14;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 16 * (((-a2 >> 2) & 3) - 4 * a2);
    }
  }
  return result;
}

uint64_t sub_1AE89CF24(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 6;
}

uint64_t sub_1AE89CF30(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_1AE89CF40(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 0xF | (a2 << 6);
  return result;
}

void type metadata accessor for TrialAssetManager.AssetError()
{
  sub_1AE4F67D4();
}

uint64_t getEnumTagSinglePayload for TrialAssetManager.DownloadOptions(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 65281 <= 0xFFFEFFFF)
      v2 = 2;
    else
      v2 = 4;
    if (a2 + 65281 < 0xFF0000)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    else
    {
      v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((_BYTE *)a1 + 2))
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 16)) - 65282;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TrialAssetManager.DownloadOptions(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE89D048 + 4 * byte_1AE968DEC[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1AE89D07C + 4 * byte_1AE968DE7[v4]))();
}

uint64_t sub_1AE89D07C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AE89D084(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1AE89D08CLL);
  return result;
}

uint64_t sub_1AE89D098(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1AE89D0A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE89D0A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AE89D0AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

void type metadata accessor for TrialAssetManager.DownloadOptions()
{
  sub_1AE4F67D4();
}

void type metadata accessor for TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior()
{
  sub_1AE4F67D4();
}

uint64_t *initializeBufferWithCopyOfBuffer for TrialAssetManager.Asset(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AE924780();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    swift_bridgeObjectRetain();
    if (v11)
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v11;
      *((_DWORD *)v9 + 4) = *((_DWORD *)v10 + 4);
      v12 = *((_QWORD *)v10 + 3);
      v13 = *((_QWORD *)v10 + 4);
      *((_QWORD *)v9 + 3) = v12;
      *((_QWORD *)v9 + 4) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    }
  }
  return a1;
}

uint64_t destroy for TrialAssetManager.Asset(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TrialAssetManager.Asset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v6 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(v9 + 8);
  swift_bridgeObjectRetain();
  if (v10)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
    v11 = *(_QWORD *)(v9 + 24);
    v12 = *(_QWORD *)(v9 + 32);
    *(_QWORD *)(v8 + 24) = v11;
    *(_QWORD *)(v8 + 32) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v13;
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for TrialAssetManager.Asset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v6 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = (__int128 *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  v11 = *((_QWORD *)v9 + 1);
  if (v10)
  {
    if (v11)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v8 + 16) = *((_DWORD *)v9 + 4);
      *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
      *(_QWORD *)(v8 + 32) = *((_QWORD *)v9 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AE53D100(v8);
      v12 = *((_QWORD *)v9 + 4);
      v13 = v9[1];
      *(_OWORD *)v8 = *v9;
      *(_OWORD *)(v8 + 16) = v13;
      *(_QWORD *)(v8 + 32) = v12;
    }
  }
  else if (v11)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
    *(_DWORD *)(v8 + 16) = *((_DWORD *)v9 + 4);
    *(_QWORD *)(v8 + 24) = *((_QWORD *)v9 + 3);
    *(_QWORD *)(v8 + 32) = *((_QWORD *)v9 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *v9;
    v15 = v9[1];
    *(_QWORD *)(v8 + 32) = *((_QWORD *)v9 + 4);
    *(_OWORD *)v8 = v14;
    *(_OWORD *)(v8 + 16) = v15;
  }
  return a1;
}

uint64_t initializeWithTake for TrialAssetManager.Asset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  return a1;
}

uint64_t assignWithTake for TrialAssetManager.Asset(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v6 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  if (!*(_QWORD *)(a1 + v7 + 8))
    goto LABEL_5;
  v10 = *(_QWORD *)(v9 + 8);
  if (!v10)
  {
    sub_1AE53D100(v8);
LABEL_5:
    v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v12;
    *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
    return a1;
  }
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v8 + 16) = *(_DWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 32);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TrialAssetManager.Asset()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE89D538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_1AE4FD9B0();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TrialAssetManager.Asset()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AE89D5B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1AE4FD9B0();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_1AE4F66D4(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    sub_1AE4F6624();
  }
}

uint64_t sub_1AE89D618()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AE924780();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for TrialAssetManager.NamespaceUpdateNotificationToken()
{
  return swift_lookUpClassMethod();
}

uint64_t initializeBufferWithCopyOfBuffer for TrialAssetManager.NamespaceUpdateInfo(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TrialAssetManager.NamespaceUpdateInfo(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TrialAssetManager.NamespaceUpdateInfo(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  return a1;
}

void type metadata accessor for TrialAssetManager.NamespaceUpdateInfo()
{
  sub_1AE4F67D4();
}

uint64_t _s20IntelligencePlatform17TrialAssetManagerC9AssetTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE89D7A8 + 4 * byte_1AE968DF6[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE89D7DC + 4 * byte_1AE968DF1[v4]))();
}

uint64_t sub_1AE89D7DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE89D7E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE89D7ECLL);
  return result;
}

uint64_t sub_1AE89D7F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE89D800);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE89D804(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE89D80C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrialAssetManager.DownloadOptions.CodingKeys()
{
  return &type metadata for TrialAssetManager.DownloadOptions.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for TrialAssetManager.ExperimentIdentifiers.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE89D874 + 4 * byte_1AE968E00[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE89D8A8 + 4 * byte_1AE968DFB[v4]))();
}

uint64_t sub_1AE89D8A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE89D8B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE89D8B8);
  return result;
}

uint64_t sub_1AE89D8C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE89D8CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE89D8D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE89D8D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TrialAssetManager.ExperimentIdentifiers.CodingKeys()
{
  return &type metadata for TrialAssetManager.ExperimentIdentifiers.CodingKeys;
}

unint64_t sub_1AE89D8F8()
{
  unint64_t result;

  result = qword_1EEDA52A0;
  if (!qword_1EEDA52A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE969600, &type metadata for TrialAssetManager.ExperimentIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA52A0);
  }
  return result;
}

unint64_t sub_1AE89D938()
{
  unint64_t result;

  result = qword_1EEDA52A8;
  if (!qword_1EEDA52A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9696B8, &type metadata for TrialAssetManager.DownloadOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA52A8);
  }
  return result;
}

unint64_t sub_1AE89D978()
{
  unint64_t result;

  result = qword_1EEDA52B0;
  if (!qword_1EEDA52B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE969628, &type metadata for TrialAssetManager.DownloadOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA52B0);
  }
  return result;
}

unint64_t sub_1AE89D9B8()
{
  unint64_t result;

  result = qword_1EEDA52B8;
  if (!qword_1EEDA52B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE969650, &type metadata for TrialAssetManager.DownloadOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA52B8);
  }
  return result;
}

unint64_t sub_1AE89D9F8()
{
  unint64_t result;

  result = qword_1EEDA52C0;
  if (!qword_1EEDA52C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE969570, &type metadata for TrialAssetManager.ExperimentIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA52C0);
  }
  return result;
}

unint64_t sub_1AE89DA38()
{
  unint64_t result;

  result = qword_1EEDA52C8;
  if (!qword_1EEDA52C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE969598, &type metadata for TrialAssetManager.ExperimentIdentifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA52C8);
  }
  return result;
}

unint64_t sub_1AE89DA74()
{
  unint64_t result;

  result = qword_1EEDA52D0;
  if (!qword_1EEDA52D0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior, &type metadata for TrialAssetManager.DownloadOptions.DiscretionaryNetworkBehavior);
    atomic_store(result, (unint64_t *)&qword_1EEDA52D0);
  }
  return result;
}

unint64_t sub_1AE89DAB0()
{
  unint64_t result;

  result = qword_1EEDA52D8;
  if (!qword_1EEDA52D8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialAssetManager.AssetType, &type metadata for TrialAssetManager.AssetType);
    atomic_store(result, (unint64_t *)&qword_1EEDA52D8);
  }
  return result;
}

unint64_t sub_1AE89DAEC()
{
  unint64_t result;

  result = qword_1EEDA52E0;
  if (!qword_1EEDA52E0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrialNamespace, &type metadata for TrialNamespace);
    atomic_store(result, (unint64_t *)&qword_1EEDA52E0);
  }
  return result;
}

unint64_t sub_1AE89DB28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EED94720;
  if (!qword_1EED94720)
  {
    v1 = sub_1AE926634();
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1EED94720);
  }
  return result;
}

unint64_t sub_1AE89DB68()
{
  unint64_t result;

  result = qword_1EEDA52F0;
  if (!qword_1EEDA52F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE939900, &type metadata for CandidateGenerationAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1EEDA52F0);
  }
  return result;
}

unint64_t sub_1AE89DBA4()
{
  unint64_t result;

  result = qword_1EEDA5300;
  if (!qword_1EEDA5300)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ViewService.DefaultResolverInteractionsView.Candidate, &type metadata for ViewService.DefaultResolverInteractionsView.Candidate);
    atomic_store(result, (unint64_t *)&qword_1EEDA5300);
  }
  return result;
}

uint64_t sub_1AE89DBE0()
{
  swift_weakDestroy();
  sub_1AE89DC54();
  return swift_deallocObject();
}

uint64_t sub_1AE89DBFC()
{
  return sub_1AE89A77C();
}

void sub_1AE89DC14(uint64_t a1@<X8>)
{
  char v1;

  *(_QWORD *)(a1 + 64) |= 1 << v1;
}

uint64_t sub_1AE89DC2C()
{
  return type metadata accessor for TrialAssetManager.Asset(0);
}

void sub_1AE89DC34(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1AE53D160(a1, v1);
}

void sub_1AE89DC3C()
{
  uint64_t v0;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)(v0 + 24) + 24));
}

uint64_t sub_1AE89DC4C()
{
  return sub_1AE926A54();
}

uint64_t sub_1AE89DC54()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE89DC7C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE89DCC4()
{
  return swift_task_dealloc();
}

uint64_t sub_1AE89DCCC()
{
  return swift_task_dealloc();
}

uint64_t sub_1AE89DCD8()
{
  return swift_task_dealloc();
}

void sub_1AE89DCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  sub_1AE555EFC(a1, v10, v11, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1AE89DCEC()
{
  return swift_task_dealloc();
}

void sub_1AE89DCF8(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1AE53D160(a1, v1);
}

uint64_t sub_1AE89DD14()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1AE89DD20()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE89DD2C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE89DD38(uint64_t a1, _QWORD *a2)
{
  int64_t v3;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1AE5217A8(0, v3, 0);
    v5 = 0;
    v6 = v23;
    v21 = a1 + 32;
    v22 = a2;
    v20 = a2 + 7;
    while (1)
    {
      v7 = v3;
      v8 = v21 + 88 * v5;
      v9 = *(_QWORD *)(v8 + 72);
      if (v9)
      {
        v10 = v22[2];
        if (v10)
        {
          v11 = *(_QWORD *)(v8 + 64);
          if (v22[4] != v11 || v9 != v22[5])
          {
            result = sub_1AE926D60();
            if (v10 != 1 && (result & 1) == 0)
              break;
          }
        }
      }
LABEL_19:
      v18 = *(_QWORD *)(v23 + 16);
      v17 = *(_QWORD *)(v23 + 24);
      v19 = v18 + 1;
      if (v18 >= v17 >> 1)
        sub_1AE5217A8(v17 > 1, v18 + 1, 1);
      ++v5;
      *(_QWORD *)(v23 + 16) = v19;
      v3 = v7;
      if (v5 == v7)
      {
        swift_bridgeObjectRelease();
        return v6;
      }
    }
    v14 = v20;
    v15 = 1;
    while (!__OFADD__(v15, 1))
    {
      if (*(v14 - 1) != v11 || v9 != *v14)
      {
        result = sub_1AE926D60();
        if (v15 + 1 != v10)
        {
          v14 += 2;
          ++v15;
          if ((result & 1) == 0)
            continue;
        }
      }
      goto LABEL_19;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1AE89DEDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 1;
  v2 = (uint64_t *)(a1 + 32);
  while (1)
  {
    v4 = *v2++;
    v3 = v4;
    if (v4)
    {
      if (*(_QWORD *)(v3 + 16))
        break;
    }
    if (!--v1)
      return 1;
  }
  return 0;
}

uint64_t sub_1AE89DF10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1AE69ACC0();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  *(_OWORD *)(v0 + 16) = xmmword_1AE969780;
  *(_QWORD *)(v0 + 32) = &unk_1E5DB02B0;
  *(_OWORD *)(v0 + 40) = xmmword_1AE934390;
  *(_OWORD *)(v0 + 56) = xmmword_1AE969790;
  *(_QWORD *)(v0 + 72) = 0x80000001AE98A670;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  sub_1AE50114C(v1, v2);
  return v0;
}

uint64_t sub_1AE89DFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  char v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  char v25;
  __int128 *v26;
  unint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  unsigned __int8 v44;
  _QWORD v45[6];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  char v67;

  if (((1 << *(_BYTE *)(a6 + 64)) & 0x1FA) == 0)
  {
LABEL_30:
    v25 = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 88) = xmmword_1AE934380;
    *(_BYTE *)(a1 + 104) = 0;
    return v25 & 1;
  }
  v10 = (_QWORD *)(a6 + 32);
  sub_1AE4FE110();
  if (*(_QWORD *)(a6 + 32))
  {
    v11 = sub_1AE4F96E8(115);
    if (!v11)
    {
      sub_1AE4FF20C();
      goto LABEL_10;
    }
    sub_1AE4FF20C();
    sub_1AE4FB9BC();
    v12 = *(_QWORD *)(v11 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    if (*(_QWORD *)(v12 + 16))
    {
      v11 = sub_1AE898358(v12);
      goto LABEL_10;
    }
    sub_1AE4F66E8();
  }
  else
  {
    sub_1AE4FF20C();
  }
  v11 = 0;
LABEL_10:
  sub_1AE4FE110();
  if (!*v10)
  {
    sub_1AE4FF20C();
LABEL_17:
    v13 = 0;
    goto LABEL_18;
  }
  v13 = sub_1AE4F96E8(112);
  if (!v13)
  {
    sub_1AE4FF20C();
    goto LABEL_18;
  }
  sub_1AE4FF20C();
  sub_1AE4FB9BC();
  v14 = *(_QWORD *)(v13 + 16);
  sub_1AE4F67A4();
  swift_release();
  if (!*(_QWORD *)(v14 + 16))
  {
    sub_1AE4F6728();
    goto LABEL_17;
  }
  v13 = sub_1AE898358(v14);
LABEL_18:
  sub_1AE4FE110();
  if (*v10 && (v15 = sub_1AE4F96E8(111)) != 0)
  {
    v16 = v15;
    sub_1AE4FF20C();
    sub_1AE4FB9BC();
    v17 = *(_QWORD *)(v16 + 16);
    sub_1AE4F67A4();
    swift_release();
    if (*(_QWORD *)(v17 + 16))
    {
      v18 = sub_1AE898358(v17);
      goto LABEL_24;
    }
    sub_1AE4F6728();
  }
  else
  {
    sub_1AE4FF20C();
  }
  v18 = 0;
LABEL_24:
  sub_1AE501548((uint64_t *)&unk_1EED94CD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE93D190;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v13;
  *(_QWORD *)(inited + 48) = v18;
  v20 = sub_1AE89DEDC(inited);
  swift_setDeallocating();
  sub_1AE4F67A4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE85EB44();
  if ((v20 & 1) != 0)
  {
    sub_1AE4F6728();
    swift_bridgeObjectRelease();
    sub_1AE4F66E8();
    if (qword_1ED3193F0 != -1)
      swift_once();
    v21 = sub_1AE925B6C();
    sub_1AE4FB608(v21, (uint64_t)qword_1ED3193D8);
    v22 = sub_1AE925B54();
    v23 = sub_1AE9265EC();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1AE4F2000, v22, v23, "Triple operator has all empty params", v24, 2u);
      MEMORY[0x1AF454C78](v24, -1, -1);
    }

    goto LABEL_30;
  }
  v26 = (__int128 *)(a2 + *(int *)(type metadata accessor for QueryContext() + 32));
  v27 = *((_QWORD *)v26 + 11);
  v28 = *((_BYTE *)v26 + 104);
  v29 = 32;
  if (v27 >> 1 != 0xFFFFFFFF || (*((_BYTE *)v26 + 104) & 0x1E) != 0)
  {
    v37 = *((_QWORD *)v26 + 12);
    v38 = *((_QWORD *)v26 + 10);
    v39 = v26[1];
    v51 = *v26;
    v40 = v26[2];
    v41 = v26[3];
    v52 = v39;
    v53 = v40;
    v42 = v26[4];
    v54 = v41;
    v55 = v42;
    v56 = v38;
    v57 = v27;
    v58 = v37;
    v59 = v28;
    v45[0] = 0;
    v45[1] = v11;
    v45[2] = 0;
    v45[3] = v13;
    v45[4] = 0;
    v45[5] = v18;
    v46 = 0u;
    v47 = 0u;
    v48 = 0u;
    v49 = 0;
    v50 = 32;
    v44 = 1;
    sub_1AE84D160((uint64_t)v45, &v44, (uint64_t)&v60);
    swift_bridgeObjectRelease_n();
    sub_1AE4F6728();
    sub_1AE4F66E8();
    swift_bridgeObjectRelease();
    if (v6)
      return v25 & 1;
    v30 = v60;
    v31 = v61;
    v32 = v62;
    v34 = v63;
    v33 = v64;
    v35 = v65;
    v36 = v66;
    v29 = v67;
  }
  else
  {
    v30 = 0;
    v31 = (unint64_t)v11;
    v32 = (unint64_t)v13;
    v33 = 0uLL;
    v34 = (unint64_t)v18;
    v35 = 0uLL;
    v36 = 0uLL;
  }
  *(_QWORD *)a1 = v30;
  *(_OWORD *)(a1 + 8) = v31;
  *(_OWORD *)(a1 + 24) = v32;
  *(_OWORD *)(a1 + 40) = v34;
  *(_OWORD *)(a1 + 56) = v33;
  *(_OWORD *)(a1 + 72) = v35;
  *(_OWORD *)(a1 + 88) = v36;
  v25 = 1;
  *(_BYTE *)(a1 + 104) = v29;
  return v25 & 1;
}

uint64_t sub_1AE89E3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t result;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  unint64_t v73;
  char v74[9];

  v3 = MEMORY[0x1E0DEE9D8];
  v61 = *(_QWORD *)(a3 + 16);
  if (!v61)
  {
    v5 = MEMORY[0x1E0DEE9D8];
LABEL_110:
    type metadata accessor for ResultGraph();
    v56 = swift_allocObject();
    *(_QWORD *)(v56 + 16) = sub_1AE925C98();
    *(_QWORD *)(v56 + 24) = v3;
    v74[0] = 0;
    v57 = sub_1AE4F67A4();
    sub_1AE85DA40(v57, v74);
    swift_bridgeObjectRelease();
    return v5;
  }
  v60 = a3 + 32;
  swift_bridgeObjectRetain();
  v4 = 0;
  v5 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v6 = v5;
    v7 = (uint64_t *)(v60 + 88 * v4);
    v8 = v7[1];
    v9 = v7[2];
    v10 = v7[3];
    v11 = v7[4];
    v12 = v7[5];
    v14 = v7[7];
    v13 = v7[8];
    v16 = v7[9];
    v15 = v7[10];
    v64 = v7[6];
    v65 = *v7;
    if (v14)
      v17 = v7[6];
    else
      v17 = 0;
    v18 = 0xE000000000000000;
    if (v14)
      v19 = v14;
    else
      v19 = 0xE000000000000000;
    if (v16)
      v20 = v13;
    else
      v20 = 0;
    v62 = v20;
    v63 = v13;
    if (v16)
      v18 = v16;
    v73 = v18;
    v69 = v12;
    swift_bridgeObjectRetain();
    v70 = v14;
    sub_1AE4F6A24();
    v67 = v16;
    sub_1AE4F6A24();
    v72 = v15;
    swift_bridgeObjectRetain();
    sub_1AE4F6A24();
    v68 = v8;
    swift_bridgeObjectRetain();
    v21 = (_QWORD *)sub_1AE88163C();
    v22 = (_QWORD *)sub_1AE88163C();
    v71 = (_QWORD *)sub_1AE88163C();
    v23 = v21[2];
    v66 = v10;
    if (!v23)
    {
      v25 = v11;
LABEL_24:
      v5 = v6;
      goto LABEL_25;
    }
    v24 = v21[4] == v10 && v21[5] == v11;
    v25 = v11;
    if (v24 || (sub_1AE4FB6F0() & 1) != 0)
      goto LABEL_24;
    v5 = v6;
    if (v23 == 1)
      goto LABEL_21;
    if (v21[6] != v66 || v21[7] != v11)
    {
      result = sub_1AE4FB6F0();
      if ((result & 1) == 0)
      {
        v58 = v11;
        if (v23 != 2)
        {
          v31 = v21 + 9;
          v32 = 2;
          while (1)
          {
            v33 = v32 + 1;
            if (__OFADD__(v32, 1))
              break;
            if (*(v31 - 1) == v66 && *v31 == v58)
            {
              v5 = v6;
              v25 = v58;
              goto LABEL_25;
            }
            result = sub_1AE4FB6F0();
            if ((result & 1) != 0)
            {
              v5 = v6;
              v25 = v58;
              goto LABEL_25;
            }
            v31 += 2;
            ++v32;
            if (v33 == v23)
            {
              sub_1AE4F76D8();
              v5 = v6;
              goto LABEL_22;
            }
          }
          __break(1u);
          goto LABEL_112;
        }
LABEL_21:
        sub_1AE4F76D8();
LABEL_22:
        swift_bridgeObjectRelease();
        sub_1AE4FB998();
        sub_1AE5021B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        sub_1AE4F9038();
        sub_1AE4F6648();
        sub_1AE4F76D8();
        goto LABEL_93;
      }
    }
LABEL_25:
    sub_1AE4F76D8();
    sub_1AE4F9038();
    v26 = v22[2];
    if (v26)
    {
      v27 = v22[4] == v17 && v22[5] == v19;
      v28 = v72;
      if (!v27 && (sub_1AE4FB6F0() & 1) == 0)
      {
        if (v26 == 1)
          goto LABEL_32;
        if (v22[6] != v17 || v22[7] != v19)
        {
          result = sub_1AE4FB6F0();
          if ((result & 1) == 0)
          {
            if (v26 != 2)
            {
              v59 = v25;
              v36 = v5;
              v37 = v22 + 9;
              v38 = 2;
              while (1)
              {
                v39 = v38 + 1;
                if (__OFADD__(v38, 1))
                  break;
                v40 = *(v37 - 1) == v17 && *v37 == v19;
                if (v40 || (result = sub_1AE4FB6F0(), (result & 1) != 0))
                {
                  v5 = v36;
                  v25 = v59;
                  goto LABEL_65;
                }
                v37 += 2;
                ++v38;
                if (v39 == v26)
                {
                  sub_1AE4F81B8();
                  v5 = v36;
                  goto LABEL_33;
                }
              }
LABEL_112:
              __break(1u);
              goto LABEL_113;
            }
LABEL_32:
            sub_1AE4F81B8();
LABEL_33:
            sub_1AE4F6648();
            sub_1AE4F6710();
            sub_1AE4FB998();
            sub_1AE5021B0();
            sub_1AE89EA40();
            sub_1AE4F9038();
            swift_bridgeObjectRelease();
LABEL_93:
            swift_bridgeObjectRelease();
            goto LABEL_94;
          }
        }
      }
    }
    else
    {
LABEL_65:
      v28 = v72;
    }
    sub_1AE4F81B8();
    sub_1AE4F6648();
    v41 = v71[2];
    if (!v41)
    {
      v43 = v25;
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
    v42 = v71[4] == v62 && v71[5] == v73;
    if (v42 || (sub_1AE4FB6F0() & 1) != 0)
    {
      v43 = v25;
LABEL_73:
      sub_1AE4F76D8();
LABEL_75:
      swift_bridgeObjectRelease();
LABEL_76:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE89EA48();
        v5 = v54;
      }
      v44 = *(_QWORD *)(v5 + 16);
      if (v44 >= *(_QWORD *)(v5 + 24) >> 1)
      {
        sub_1AE89EA48();
        v5 = v55;
      }
      *(_QWORD *)(v5 + 16) = v44 + 1;
      v45 = (_QWORD *)(v5 + 88 * v44);
      v45[4] = v65;
      v45[5] = v68;
      v45[6] = v9;
      v45[7] = v66;
      v45[8] = v43;
      v45[9] = v69;
      v45[10] = v64;
      v45[11] = v70;
      v45[12] = v63;
      v45[13] = v67;
      v45[14] = v28;
      goto LABEL_95;
    }
    if (v41 != 1)
    {
      v43 = v25;
      if (v71[6] == v62 && v71[7] == v73)
        goto LABEL_73;
      result = sub_1AE4FB6F0();
      if ((result & 1) != 0)
        goto LABEL_73;
      if (v41 != 2)
        break;
    }
LABEL_82:
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v28 + 16))
    {
      sub_1AE4F6710();
      sub_1AE4FB998();
      sub_1AE5021B0();
      sub_1AE89EA40();
      sub_1AE4F9038();
      goto LABEL_93;
    }
    v43 = v25;
    swift_bridgeObjectRetain();
    v46 = swift_bridgeObjectRetain();
    v47 = sub_1AE89DD38(v46, v71);
    sub_1AE4F6710();
    sub_1AE4F9038();
    v48 = *(_QWORD *)(v47 + 16);
    sub_1AE4F6648();
    if (v48)
      goto LABEL_76;
    sub_1AE4F6710();
    sub_1AE4FB998();
    sub_1AE5021B0();
    sub_1AE89EA40();
    swift_bridgeObjectRelease();
LABEL_94:
    swift_bridgeObjectRelease();
LABEL_95:
    if (++v4 == v61)
    {
      swift_bridgeObjectRelease();
      v3 = MEMORY[0x1E0DEE9D8];
      goto LABEL_110;
    }
  }
  v50 = v71 + 9;
  v51 = 2;
  while (1)
  {
    v52 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    v53 = *(v50 - 1) == v62 && *v50 == v73;
    if (v53 || (result = sub_1AE4FB6F0(), (result & 1) != 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28 = v72;
      goto LABEL_76;
    }
    v50 += 2;
    ++v51;
    v28 = v72;
    if (v52 == v41)
      goto LABEL_82;
  }
LABEL_113:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Triple()
{
  return objc_opt_self();
}

uint64_t sub_1AE89EA40()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE89EA48()
{
  sub_1AE519F94();
}

uint64_t sub_1AE89EA54(uint64_t *a1, uint64_t (*a2)(_QWORD, _QWORD *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD v8[8];

  v6 = *a1;
  v8[2] = a4;
  v8[3] = a5;
  v8[4] = a6;
  v8[6] = v6;
  return a2(sub_1AE89F44C, v8);
}

uint64_t sub_1AE89EA9C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AE89EB64(*a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1AE89EAE4(uint64_t a1)
{
  return sub_1AE89EB08(a1, (uint64_t)sub_1AE89F33C, (void (*)(uint64_t *, uint64_t, _QWORD *))SubgraphView.enumerateTriples(for:block:));
}

uint64_t sub_1AE89EB08(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *, uint64_t, _QWORD *))
{
  uint64_t v3;
  _QWORD v5[4];
  uint64_t v6;
  uint64_t v7;

  v6 = a1;
  v7 = MEMORY[0x1E0DEE9D8];
  v5[2] = &v7;
  a3(&v6, a2, v5);
  if (v3)
    sub_1AE4F9038();
  return sub_1AE4FD264();
}

uint64_t sub_1AE89EB64(uint64_t a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v5[2];
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v3 = v1[1];
  v6 = *v1;
  v7 = v3;
  v8 = *((_QWORD *)v1 + 4);
  v5[0] = a1;
  v5[1] = MEMORY[0x1E0DEE9D8];
  ViewService.SportsSchedulesView.enumerateTriples(for:block:)(v5);
  if (v2)
    sub_1AE4F9038();
  return sub_1AE4FD264();
}

uint64_t TripleEnumeratorProtocol<>.triples(for:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD v8[5];
  uint64_t v9;
  uint64_t v10;

  v6 = *a1;
  swift_getAssociatedTypeWitness();
  v10 = sub_1AE4FE2B0();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = &v10;
  v9 = v6;
  (*(void (**)(uint64_t *, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(a3 + 16))(&v9, sub_1AE89F27C, v8, a2, a3);
  if (v3)
    sub_1AE4F9038();
  return sub_1AE4FD264();
}

void sub_1AE89EC80()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_1AE4FF52C();
  v2 = sub_1AE88048C();
  v3 = sub_1AE500824(v2);
  if (!v1)
    *v0 = v3;
  sub_1AE50128C();
}

uint64_t TripleEnumeratorProtocol<>.triples<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD v12[8];
  uint64_t v13;

  swift_getAssociatedTypeWitness();
  sub_1AE9262B0();
  swift_getTupleTypeMetadata2();
  v13 = sub_1AE4FE2B0();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  v12[6] = &v13;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t *, void (*)(uint64_t (*)(uint64_t), _BYTE *), uint64_t), _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 24))(a1, sub_1AE89F29C, v12, a3, a5, a2, a4);
  if (v5)
    sub_1AE4F9038();
  return sub_1AE4FD264();
}

uint64_t sub_1AE89EDA4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AE89EB08(*a1, (uint64_t)sub_1AE89F33C, (void (*)(uint64_t *, uint64_t, _QWORD *))SubgraphView.enumerateTriples(for:block:));
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1AE89EDE4()
{
  sub_1AE89EE7C();
}

uint64_t sub_1AE89EE10@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AE89EB08(*a1, (uint64_t)sub_1AE89F490, (void (*)(uint64_t *, uint64_t, _QWORD *))SubgraphFilteredView.enumerateTriples(for:block:));
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1AE89EE50()
{
  sub_1AE89EE7C();
}

void sub_1AE89EE7C()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE4FF52C();
  v5 = sub_1AE512FA0(v2, v3, v4);
  v6 = sub_1AE500824(v5);
  if (!v1)
    *v0 = v6;
  sub_1AE50128C();
}

uint64_t sub_1AE89EEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD v8[8];
  uint64_t v9;

  v9 = a4;
  v8[2] = a5;
  v8[3] = a6;
  v8[4] = a7;
  v8[5] = a1;
  v8[6] = a2;
  return (*(uint64_t (**)(uint64_t *, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(a7 + 16))(&v9, sub_1AE89F46C, v8, a5, a7);
}

uint64_t sub_1AE89EF0C(const void *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1AE89F3C0((uint64_t)a1);
  sub_1AE8DD24C();
  v4 = *(_QWORD *)(*a2 + 16);
  sub_1AE8DD598(v4);
  v5 = *a2;
  *(_QWORD *)(v5 + 16) = v4 + 1;
  memcpy((void *)(v5 + 112 * v4 + 32), a1, 0x70uLL);
  return 1;
}

uint64_t sub_1AE89EF7C(const void *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1AE89F3C0((uint64_t)a1);
  sub_1AE8DD270();
  v4 = *(_QWORD *)(*a2 + 16);
  sub_1AE8DD5BC(v4);
  v5 = *a2;
  *(_QWORD *)(v5 + 16) = v4 + 1;
  memcpy((void *)(v5 + 120 * v4 + 32), a1, 0x78uLL);
  return 1;
}

uint64_t sub_1AE89EFEC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - v4, a1, AssociatedTypeWitness);
  sub_1AE9262B0();
  sub_1AE926274();
  return 1;
}

uint64_t sub_1AE89F0A0(uint64_t *a1, void (*a2)(uint64_t (*)(uint64_t a1), _BYTE *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v14 = *a1;
  swift_getAssociatedTypeWitness();
  v24 = sub_1AE926238();
  v17 = a5;
  v18 = a6;
  v19 = a7;
  v20 = a8;
  v21 = &v24;
  a2(sub_1AE89F428, v16);
  if (v8)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = v14;
    v23 = v24;
    sub_1AE9262B0();
    swift_getTupleTypeMetadata2();
    sub_1AE9262B0();
    sub_1AE926274();
  }
  return 1;
}

uint64_t sub_1AE89F1C8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - v4, a1, AssociatedTypeWitness);
  sub_1AE9262B0();
  sub_1AE926274();
  return 1;
}

uint64_t sub_1AE89F27C(uint64_t a1)
{
  return sub_1AE89EFEC(a1) & 1;
}

uint64_t sub_1AE89F29C(uint64_t *a1, void (*a2)(uint64_t (*)(uint64_t a1), _BYTE *), uint64_t a3)
{
  uint64_t *v3;

  return sub_1AE89F0A0(a1, a2, a3, v3[6], v3[2], v3[3], v3[4], v3[5]) & 1;
}

uint64_t dispatch thunk of TripleEnumeratorProtocol.enumerateTriples(for:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of TripleEnumeratorProtocol.enumerateTriples<A>(for:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t sub_1AE89F2F0(void *__src, uint64_t *a2)
{
  _BYTE v4[112];

  memcpy(v4, __src, sizeof(v4));
  return sub_1AE89EF0C(v4, a2) & 1;
}

uint64_t sub_1AE89F33C(void *a1)
{
  uint64_t v1;

  return sub_1AE89F2F0(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_1AE89F358(void *__src, uint64_t *a2)
{
  _BYTE __dst[120];

  memcpy(__dst, __src, sizeof(__dst));
  return sub_1AE89EF7C(__dst, a2) & 1;
}

uint64_t sub_1AE89F3A4(void *a1)
{
  uint64_t v1;

  return sub_1AE89F358(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_1AE89F3C0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE89F428(uint64_t a1)
{
  return sub_1AE89F1C8(a1) & 1;
}

uint64_t sub_1AE89F44C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1AE89EEB8(a1, a2, v2[5], v2[6], v2[2], v2[3], v2[4]);
}

uint64_t sub_1AE89F46C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))() & 1;
}

uint64_t sub_1AE89F490(void *a1)
{
  return sub_1AE89F33C(a1) & 1;
}

void TripleProviderProtocol.context()(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  sub_1AE4F666C();
  type metadata accessor for GraphObjectContext();
}

void sub_1AE89F50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v0);
  GraphObjectContext.__allocating_init<>(_:)(v2);
}

void TripleProviderProtocol.context<A>(objectMapping:)(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x1E0C80A78](a1);
  sub_1AE4F666C();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4F666C();
  type metadata accessor for GraphObjectContext();
}

void sub_1AE89F5D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v1, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v3, v0);
  GraphObjectContext.__allocating_init(_:objectMapping:)(v5, v4);
}

uint64_t dispatch thunk of TripleProviderProtocol.triples(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of TripleProviderProtocol.triples<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of TripleProviderReferenceQueryable.entityIds(referredBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1AE89F674(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)&v17 - v12;
  v18 = *a1;
  v14 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a3 + 72))(&v18, a2, a3);
  if (!v5)
  {
    MEMORY[0x1E0C80A78](v14);
    *(&v17 - 4) = a2;
    *(&v17 - 3) = a3;
    *(&v17 - 2) = a4;
    swift_getAssociatedConformanceWitness();
    sub_1AE926088();
    sub_1AE898248();
    v4 = v15;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
  }
  return v4;
}

unint64_t sub_1AE89F7D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
  v4 = swift_checkMetadataState();
  v5 = v3(v4, AssociatedConformanceWitness);
  v7 = v6;
  if ((sub_1AE926004() & 1) != 0)
  {
    result = EntityIdentifier.init(_:)(v5, v7, (uint64_t)&v11);
    v9 = v12;
    if (v12 == 1)
    {
      v10 = 0;
    }
    else
    {
      v9 = 0;
      v10 = v11;
    }
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v10 = 0;
    v9 = 1;
  }
  *(_QWORD *)a1 = v10;
  *(_BYTE *)(a1 + 8) = v9;
  return result;
}

unint64_t sub_1AE89F8F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AE89F7D8(a1);
}

uint64_t dispatch thunk of TripleProviderReferrerQueryable.entityIds(referringTo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1AE89F92C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - v14;
  v16 = *a1;
  (*(void (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  if (!v5)
  {
    v30 = v10;
    v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, AssociatedTypeWitness);
    v29 = &v28;
    v18 = MEMORY[0x1E0C80A78](v17);
    *(&v28 - 4) = a2;
    *(&v28 - 3) = a3;
    v19 = AssociatedTypeWitness;
    v20 = v31;
    *(&v28 - 2) = v31;
    *(&v28 - 1) = v16;
    MEMORY[0x1E0C80A78](v18);
    *(&v28 - 6) = a2;
    *(&v28 - 5) = a3;
    *(&v28 - 4) = v20;
    *(&v28 - 3) = (uint64_t)sub_1AE89FC94;
    *(&v28 - 2) = v21;
    swift_getAssociatedConformanceWitness();
    v22 = sub_1AE9260DC();
    v29 = &v28;
    v32 = v22;
    MEMORY[0x1E0C80A78](v22);
    *(&v28 - 4) = a2;
    *(&v28 - 3) = a3;
    *(&v28 - 2) = v20;
    swift_getAssociatedTypeWitness();
    swift_getTupleTypeMetadata2();
    v23 = sub_1AE9262B0();
    v24 = MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF50], v23);
    sub_1AE595DD0((void (*)(char *, uint64_t))sub_1AE89FF44, (uint64_t)(&v28 - 6), v23, (uint64_t)&type metadata for EntityIdentifier, MEMORY[0x1E0DEDCE8], v24, MEMORY[0x1E0DEDD18], v25);
    swift_bridgeObjectRelease();
    sub_1AE898248();
    v4 = v26;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v19);
  }
  return v4;
}

uint64_t sub_1AE89FBE8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1AE926118() & 1;
}

uint64_t sub_1AE89FC94()
{
  return sub_1AE89FBE8();
}

uint64_t sub_1AE89FCA0()
{
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
  v2 = swift_checkMetadataState();
  v3 = v1(v2, AssociatedConformanceWitness);
  v5 = v4;
  if (v3 == EntityIdentifier.stringValue.getter() && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1AE926D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1AE89FDA8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48)) & 1;
}

uint64_t sub_1AE89FE38(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE89FDA8(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 40)) & 1;
}

uint64_t sub_1AE89FE5C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v8 = (char *)&v15 - v7;
  v9 = *(int *)(v6 + 48);
  v10 = &v8[v9];
  v11 = (char *)a1 + v9;
  v12 = *a1;
  *(_QWORD *)v8 = v12;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(&v8[v9], v11, AssociatedTypeWitness);
  *a2 = v12;
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, AssociatedTypeWitness);
}

uint64_t sub_1AE89FF44@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AE89FE5C(a1, a2);
}

uint64_t sub_1AE89FF64()
{
  return sub_1AE89FCA0() & 1;
}

uint64_t static TriplesQuery.Clause.matchStrings(subjectMatchType:subjects:predicateMatchType:predicates:objectMatchType:objects:relationshipIdMatchType:relationshipIds:relationshipPredicateMatchType:relationshipPredicates:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, unsigned __int8 *a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, unsigned __int8 *a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = *a3;
  v12 = *a5;
  v13 = *a7;
  v14 = *a10;
  *a9 = *a1;
  a9[1] = a2;
  a9[2] = v11;
  a9[3] = a4;
  a9[4] = v12;
  a9[5] = a6;
  a9[6] = v13;
  a9[7] = a8;
  a9[8] = v14;
  a9[9] = a11;
  a9[11] = 0;
  a9[12] = 0;
  a9[10] = 0;
  sub_1AE5064CC((uint64_t)a9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE4F66CC();
  return swift_bridgeObjectRetain();
}

uint64_t static TriplesQuery.Clause.aggregate(logicFunction:clauses:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = *a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 89) = 0u;
  return sub_1AE509358();
}

uint64_t static TriplesQuery.Clause.match(subjectMatchType:subjects:subjectClauses:predicateMatchType:predicates:objectMatchType:objects:relationshipIdMatchType:relationshipIds:relationshipPredicateMatchType:relationshipPredicates:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, unsigned __int8 *a6@<X5>, uint64_t a7@<X6>, unsigned __int8 *a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, unsigned __int8 *a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v12 = *a4;
  v13 = *a6;
  v14 = *a8;
  v15 = *a11;
  *a9 = *a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = v12;
  a9[4] = a5;
  a9[5] = v13;
  a9[6] = a7;
  a9[7] = v14;
  a9[8] = a10;
  a9[9] = v15;
  a9[11] = 0;
  a9[12] = 0;
  a9[10] = a12;
  sub_1AE5064CC((uint64_t)a9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE4F66CC();
  sub_1AE4FB75C();
  return swift_bridgeObjectRetain();
}

__n128 TriplesQuery.Clause.init(impl:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_BYTE *)(a1 + 104);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v5;
  result = *(__n128 *)(a1 + 64);
  v7 = *(_OWORD *)(a1 + 80);
  *(__n128 *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v7;
  *(_QWORD *)(a2 + 96) = v2;
  *(_BYTE *)(a2 + 104) = v3;
  return result;
}

BOOL static TriplesQuery.Clause.JoinCondition.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t static TriplesQuery.Clause.join(joinCondition:clauses:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = *a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_QWORD *)(a3 + 96) = 0;
  *(_BYTE *)(a3 + 104) = -96;
  return sub_1AE509358();
}

uint64_t TriplesQuery.Clause.impl.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = sub_1AE8AAB84();
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_BYTE *)(v0 + 104);
  *(_QWORD *)v9 = v1;
  *(_QWORD *)(v9 + 8) = v8;
  *(_QWORD *)(v9 + 16) = v10;
  *(_QWORD *)(v9 + 24) = v11;
  *(_QWORD *)(v9 + 32) = v12;
  *(_QWORD *)(v9 + 40) = v13;
  *(_QWORD *)(v9 + 48) = v14;
  *(_QWORD *)(v9 + 56) = v15;
  *(_QWORD *)(v9 + 64) = v2;
  *(_QWORD *)(v9 + 72) = v3;
  *(_QWORD *)(v9 + 80) = v4;
  *(_QWORD *)(v9 + 88) = v5;
  *(_QWORD *)(v9 + 96) = v6;
  *(_BYTE *)(v9 + 104) = v7;
  return sub_1AE526458(v1, v8, v10, v11, v12, v13, v14, v15, v2, v3, v4, v5, v6, v7);
}

__n128 TriplesQuery.Clause.impl.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 result;
  __n128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v17 = a1[1];
  v18 = *a1;
  v16 = a1[2];
  v14 = a1[4];
  v15 = a1[3];
  v13 = (__n128)a1[5];
  v2 = *((_QWORD *)a1 + 12);
  v3 = *((_BYTE *)a1 + 104);
  v4 = sub_1AE8AAB84();
  sub_1AE8AAA80(v4, v5, v6, v7, v8, v9, v10, v11, *(_QWORD *)(v1 + 96), *(__n128 *)(v1 + 64), *(__n128 *)(v1 + 80));
  *(_OWORD *)v1 = v18;
  *(_OWORD *)(v1 + 16) = v17;
  *(_OWORD *)(v1 + 32) = v16;
  *(_OWORD *)(v1 + 48) = v15;
  result = v13;
  *(_OWORD *)(v1 + 64) = v14;
  *(__n128 *)(v1 + 80) = v13;
  *(_QWORD *)(v1 + 96) = v2;
  *(_BYTE *)(v1 + 104) = v3;
  return result;
}

uint64_t (*TriplesQuery.Clause.impl.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t TriplesQuery.Clause.TableCodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  BOOL v4;
  uint64_t result;
  char v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  char v15;

  v4 = a1 == 0x6469776F72 && a2 == 0xE500000000000000;
  if (v4 || (sub_1AE4FD134() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v8 = 0;
  }
  else
  {
    v9 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
    if (v9 || (sub_1AE4FD134() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      v8 = 1;
    }
    else
    {
      v10 = a1 == 0x7461636964657270 && a2 == 0xE900000000000065;
      if (v10 || (sub_1AE5EBCDC(), (sub_1AE4FD134() & 1) != 0))
      {
        result = swift_bridgeObjectRelease();
        v8 = 2;
      }
      else
      {
        v11 = a1 == 0x6E6F6974616C6572 && a2 == 0xEE00644970696873;
        if (v11 || (sub_1AE4FD134() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v8 = 3;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x80000001AE97B790 || (sub_1AE4FD134() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v8 = 4;
        }
        else
        {
          v12 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
          if (v12 || (sub_1AE4FD134() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v8 = 5;
          }
          else
          {
            v13 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
            if (v13 || (sub_1AE4FD134() & 1) != 0)
            {
              result = swift_bridgeObjectRelease();
              v8 = 6;
            }
            else if (a1 == 0x73656372756F73 && a2 == 0xE700000000000000)
            {
              result = swift_bridgeObjectRelease();
              v8 = 7;
            }
            else
            {
              v15 = sub_1AE4FD134();
              result = swift_bridgeObjectRelease();
              if ((v15 & 1) != 0)
                v8 = 7;
              else
                v8 = 8;
            }
          }
        }
      }
    }
  }
  *a3 = v8;
  return result;
}

void TriplesQuery.Clause.TableCodingKeys.init(intValue:)(_BYTE *a1@<X8>)
{
  sub_1AE508FD8(a1);
}

uint64_t TriplesQuery.Clause.TableCodingKeys.intValue.getter()
{
  return 0;
}

uint64_t TriplesQuery.Clause.TableCodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE8A0554
                                                            + 4 * asc_1AE969890[*v0]))(0x6469776F72, 0xE500000000000000);
}

uint64_t sub_1AE8A0554()
{
  return 0x7463656A627573;
}

uint64_t sub_1AE8A056C()
{
  return sub_1AE5EBCDC();
}

uint64_t sub_1AE8A057C()
{
  return 0x6E6F6974616C6572;
}

unint64_t sub_1AE8A05A0()
{
  return 0xD000000000000015;
}

uint64_t sub_1AE8A05BC()
{
  return 0x7463656A626FLL;
}

uint64_t sub_1AE8A05D0()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1AE8A05F0()
{
  return 0x73656372756F73;
}

uint64_t sub_1AE8A0620()
{
  sub_1AE8AA834();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A0648()
{
  sub_1AE8AA834();
  return sub_1AE926FA0();
}

BOOL static TriplesQuery.Clause.AggregateLogicFunction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void TriplesQuery.Clause.AggregateLogicFunction.hash(into:)()
{
  sub_1AE506940();
  sub_1AE4F6664();
}

uint64_t sub_1AE8A06A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7958113 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE8A0774(char a1)
{
  if ((a1 & 1) != 0)
    return 7958113;
  else
    return 7105633;
}

uint64_t sub_1AE8A0794()
{
  sub_1AE8A3E1C();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A07BC()
{
  sub_1AE8A3E1C();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8A07E4()
{
  sub_1AE8A3DE0();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A080C()
{
  sub_1AE8A3DE0();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8A0834()
{
  char *v0;

  return sub_1AE8A0774(*v0);
}

uint64_t sub_1AE8A083C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8A06A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8A0860()
{
  sub_1AE8A3DA4();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A0888()
{
  sub_1AE8A3DA4();
  return sub_1AE926FA0();
}

void TriplesQuery.Clause.AggregateLogicFunction.encode(to:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1AE4F67EC();
  v4 = v3;
  v5 = sub_1AE501548(&qword_1EED98EE0);
  v15 = *(_QWORD *)(v5 - 8);
  v16 = v5;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED98ED8);
  v13 = *(_QWORD *)(v9 - 8);
  v14 = v9;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F910C();
  v17 = *(_QWORD *)(sub_1AE501548(&qword_1EED98ED0) - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F6744();
  v12 = *v0;
  sub_1AE4F9858(v4, v4[3]);
  sub_1AE8A3DA4();
  sub_1AE926F4C();
  if ((v12 & 1) != 0)
  {
    sub_1AE8AAB4C();
    sub_1AE4F6974();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v16);
  }
  else
  {
    sub_1AE8A3E1C();
    sub_1AE4F6974();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v14);
  }
  sub_1AE4FBA8C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  sub_1AE4F667C();
}

void TriplesQuery.Clause.AggregateLogicFunction.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE4F6694();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void TriplesQuery.Clause.AggregateLogicFunction.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  sub_1AE4F67EC();
  v47 = v0;
  v4 = v3;
  v44 = v5;
  v42 = sub_1AE501548(&qword_1EEDA5310);
  v46 = *(_QWORD *)(v42 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  v45 = v7;
  v43 = sub_1AE501548(&qword_1EEDA5318);
  v8 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1AE501548(&qword_1EEDA5320);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F683C();
  sub_1AE4F9858(v4, v4[3]);
  sub_1AE8A3DA4();
  v13 = v47;
  sub_1AE4F680C();
  if (v13)
    goto LABEL_11;
  v39 = v8;
  v40 = v10;
  v14 = v45;
  v15 = v46;
  v41 = v4;
  v47 = v2;
  v16 = sub_1AE926C1C();
  v17 = *(_QWORD *)(v16 + 16);
  v18 = v11;
  if (!v17)
  {
    v30 = v1;
LABEL_9:
    v31 = sub_1AE6080A8();
    sub_1AE4F6778();
    v33 = v32;
    sub_1AE501548(&qword_1EED99C38);
    *v33 = &type metadata for TriplesQuery.Clause.AggregateLogicFunction;
    sub_1AE926B5C();
    sub_1AE5078F4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x1E0DEC450], v31);
    swift_willThrow();
    sub_1AE4FBA84();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v30, v18);
    goto LABEL_10;
  }
  v38 = 0;
  v19 = *(unsigned __int8 *)(v16 + 32);
  sub_1AE50AF34(1, v17, v16, v16 + 32, 0, (2 * v17) | 1);
  v21 = v20;
  v23 = v22;
  sub_1AE4F6718();
  if (v21 != v23 >> 1)
  {
    v30 = v1;
    v18 = v11;
    goto LABEL_9;
  }
  if ((v19 & 1) == 0)
  {
    sub_1AE8A3E1C();
    v35 = v40;
    v36 = v38;
    sub_1AE926B50();
    v37 = v47;
    v29 = v44;
    if (v36)
    {
      sub_1AE4FBA84();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v1, v11);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v39 + 8))(v35, v43);
    sub_1AE4FBA84();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v1, v11);
LABEL_17:
    *v29 = v19;
    v34 = (uint64_t)v41;
    goto LABEL_12;
  }
  LODWORD(v43) = v19;
  sub_1AE8AAB4C();
  v24 = v14;
  v25 = v1;
  v26 = v11;
  v27 = v38;
  sub_1AE926B50();
  v28 = v47;
  v29 = v44;
  if (!v27)
  {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v24, v42);
    sub_1AE4FBA84();
    sub_1AE4FBA8C(v25, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
    LOBYTE(v19) = v43;
    goto LABEL_17;
  }
  sub_1AE4FBA84();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v25, v26);
LABEL_10:
  v4 = v41;
LABEL_11:
  v34 = (uint64_t)v4;
LABEL_12:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v34);
  sub_1AE4F667C();
}

void sub_1AE8A0D90()
{
  TriplesQuery.Clause.AggregateLogicFunction.init(from:)();
}

void sub_1AE8A0DA4()
{
  TriplesQuery.Clause.AggregateLogicFunction.encode(to:)();
}

void TriplesQuery.Clause.JoinCondition.hash(into:)()
{
  sub_1AE506940();
  sub_1AE4F6664();
}

uint64_t sub_1AE8A0DD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v2 = a1 == 0x6469776F72 && a2 == 0xE500000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x7461636964657270 && a2 == 0xE900000000000065;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x6E6F6974616C6572 && a2 == 0xEE00644970696873)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v10 = sub_1AE926D60();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_1AE8A0FFC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE8A102C + 4 * byte_1AE969898[a1]))(0x6469776F72, 0xE500000000000000);
}

uint64_t sub_1AE8A102C()
{
  return 0x7463656A627573;
}

uint64_t sub_1AE8A1044()
{
  return 0x7463656A626FLL;
}

uint64_t sub_1AE8A1058()
{
  return 0x7461636964657270;
}

uint64_t sub_1AE8A1074()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_1AE8A1098()
{
  unsigned __int8 *v0;

  return sub_1AE8A0FFC(*v0);
}

uint64_t sub_1AE8A10A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8A0DD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8A10C4()
{
  sub_1AE8A7664();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A10EC()
{
  sub_1AE8A7664();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8A1114()
{
  sub_1AE8A7718();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A113C()
{
  sub_1AE8A7718();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8A1164()
{
  sub_1AE8A76DC();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A118C()
{
  sub_1AE8A76DC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8A11B4()
{
  sub_1AE8A76A0();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A11DC()
{
  sub_1AE8A76A0();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8A1204()
{
  sub_1AE8A7790();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A122C()
{
  sub_1AE8A7790();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8A1254()
{
  sub_1AE8A7754();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A127C()
{
  sub_1AE8A7754();
  return sub_1AE926FA0();
}

void TriplesQuery.Clause.JoinCondition.encode(to:)()
{
  unsigned __int8 *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1AE4F67EC();
  v2 = v1;
  sub_1AE501548(&qword_1EED98EC8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED98EC0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE607F10(v5, v11);
  sub_1AE501548(&qword_1EED98EB0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED98EB8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  v8 = sub_1AE501548(&qword_1EED98EA8);
  MEMORY[0x1E0C80A78](v8);
  sub_1AE5009EC();
  sub_1AE501548(&qword_1EED98EA0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F90C8();
  v10 = *v0;
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE8A7664();
  sub_1AE926F4C();
  __asm { BR              X9 }
}

void sub_1AE8A1424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 69) = 0;
  sub_1AE8A7790();
  v5 = *(_QWORD *)(v4 - 88);
  sub_1AE926C34();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v5);
  sub_1AE4F667C();
}

void TriplesQuery.Clause.JoinCondition.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1AE4F67EC();
  v4 = v3;
  sub_1AE501548(&qword_1EEDA5348);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5350);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE607F10(v7, v21);
  sub_1AE501548(&qword_1EEDA5358);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5360);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5368);
  sub_1AE508B20();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F6744();
  sub_1AE501548(&qword_1EEDA5370);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F683C();
  v23 = (uint64_t)v4;
  sub_1AE4F9858(v4, v4[3]);
  sub_1AE8A7664();
  sub_1AE926F34();
  if (!v0)
  {
    v12 = v1;
    v13 = sub_1AE926C1C();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v22 = v1;
      v15 = *(unsigned __int8 *)(v13 + 32);
      sub_1AE50AF34(1, v14, v13, v13 + 32, 0, (2 * v14) | 1);
      v17 = v16;
      v19 = v18;
      sub_1AE4F6718();
      if (v17 == v19 >> 1)
        __asm { BR              X9 }
      v12 = v22;
    }
    sub_1AE6080A8();
    sub_1AE4F6778();
    sub_1AE501548(&qword_1EED99C38);
    sub_1AE8AAB70((uint64_t)&type metadata for TriplesQuery.Clause.JoinCondition);
    v20 = sub_1AE5078F4();
    sub_1AE509370(v20, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1AE4FBA84();
    sub_1AE4FB9F8(v12, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v23);
  sub_1AE4F667C();
}

void sub_1AE8A181C()
{
  uint64_t v0;

  sub_1AE8AAB64();
  sub_1AE8AA904();
  if (!v0)
    JUMPOUT(0x1AE8A18F4);
  JUMPOUT(0x1AE8A17F0);
}

void sub_1AE8A184C()
{
  uint64_t v0;

  sub_1AE8AAB1C();
  sub_1AE8AA904();
  if (!v0)
    JUMPOUT(0x1AE8A1878);
  JUMPOUT(0x1AE8A17F0);
}

void sub_1AE8A1884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE8AAAF8();
  v4 = *(_QWORD *)(v3 - 152);
  sub_1AE8AA904();
  if (!v1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 176) + 8))(v4, v2);
    sub_1AE4FBA84();
    sub_1AE4FB9F8(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8));
    **(_BYTE **)(v3 - 136) = *(_QWORD *)(v3 - 248);
    JUMPOUT(0x1AE8A1804);
  }
  JUMPOUT(0x1AE8A17F0);
}

void sub_1AE8A18C0()
{
  uint64_t v0;

  sub_1AE8AABD8();
  sub_1AE8AA904();
  if (!v0)
    JUMPOUT(0x1AE8A18F4);
  JUMPOUT(0x1AE8A17F0);
}

void sub_1AE8A191C()
{
  TriplesQuery.Clause.JoinCondition.init(from:)();
}

void sub_1AE8A1930()
{
  TriplesQuery.Clause.JoinCondition.encode(to:)();
}

void TriplesQuery.Clause.AggregateClause.description.getter()
{
  uint64_t v0;

  sub_1AE5FBE64();
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE8AA9A8();
  sub_1AE8AA98C();
  v0 = sub_1AE4FB75C();
  MEMORY[0x1AF453400](v0, &type metadata for TriplesQuery.Clause);
  sub_1AE4FBAE0();
  sub_1AE4F6648();
  sub_1AE4F665C();
  sub_1AE4FF0F0();
  sub_1AE4FCDE0();
}

unint64_t TriplesQuery.Clause.ContainsClause.description.getter()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v0[3];
  v3 = v0[5];
  v4 = v0[7];
  v5 = v0[9];
  if (!v0[1])
  {
    v8 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      goto LABEL_12;
    goto LABEL_7;
  }
  v26 = v0[5];
  v6 = v0[7];
  sub_1AE8AA970();
  sub_1AE779D34();
  sub_1AE8AA980();
  sub_1AE9263F4();
  sub_1AE509B74();
  sub_1AE4F6648();
  sub_1AE8AAA58();
  v8 = v7;
  v1 = *(_QWORD *)(v7 + 16);
  v0 = (_QWORD *)(v1 + 1);
  if (v1 >= *(_QWORD *)(v7 + 24) >> 1)
  {
    sub_1AE50129C();
    v8 = v17;
  }
  sub_1AE8AAB28();
  *(_QWORD *)(v9 + 32) = v27;
  *(_QWORD *)(v9 + 40) = v28;
  v4 = v6;
  v3 = v26;
  if (v2)
  {
LABEL_7:
    sub_1AE8AA970();
    sub_1AE779D34();
    sub_1AE8AA980();
    sub_1AE9263F4();
    sub_1AE509B74();
    swift_bridgeObjectRelease();
    if ((sub_1AE505598() & 1) == 0)
    {
      sub_1AE4FD794();
      v8 = v18;
    }
    sub_1AE8AA924();
    if (v10)
    {
      sub_1AE50129C();
      v8 = v19;
    }
    sub_1AE8AAB28();
    *(_QWORD *)(v11 + 32) = v27;
    *(_QWORD *)(v11 + 40) = v28;
  }
LABEL_12:
  if (v3)
  {
    sub_1AE8AA970();
    sub_1AE779D34();
    sub_1AE8AA980();
    sub_1AE9263F4();
    sub_1AE509B74();
    swift_bridgeObjectRelease();
    if ((sub_1AE505598() & 1) == 0)
    {
      sub_1AE4FD794();
      v8 = v20;
    }
    sub_1AE8AA924();
    if (v10)
    {
      sub_1AE50129C();
      v8 = v21;
    }
    *(_QWORD *)(v8 + 16) = v0;
    v12 = v8 + 16 * v1;
    *(_QWORD *)(v12 + 32) = v27;
    *(_QWORD *)(v12 + 40) = v28;
  }
  if (v4)
  {
    sub_1AE8AA970();
    sub_1AE779D34();
    sub_1AE8AA980();
    sub_1AE9263F4();
    sub_1AE509B74();
    sub_1AE4F81B8();
    if ((sub_1AE505598() & 1) == 0)
    {
      sub_1AE4FD794();
      v8 = v22;
    }
    sub_1AE8AA924();
    if (v10)
    {
      sub_1AE50129C();
      v8 = v23;
    }
    *(_QWORD *)(v8 + 16) = v0;
    v13 = v8 + 16 * v1;
    *(_QWORD *)(v13 + 32) = v27;
    *(_QWORD *)(v13 + 40) = v28;
  }
  if (v5)
  {
    sub_1AE8AA970();
    sub_1AE8AA98C();
    sub_1AE8AA980();
    sub_1AE9263F4();
    sub_1AE509B74();
    sub_1AE4F665C();
    if ((sub_1AE505598() & 1) == 0)
    {
      sub_1AE4FD794();
      v8 = v24;
    }
    v14 = *(_QWORD *)(v8 + 16);
    if (v14 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_1AE50129C();
      v8 = v25;
    }
    *(_QWORD *)(v8 + 16) = v14 + 1;
    v15 = v8 + 16 * v14;
    *(_QWORD *)(v15 + 32) = v27;
    *(_QWORD *)(v15 + 40) = v28;
  }
  sub_1AE8AA970();
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE568D9C();
  sub_1AE8AAADC();
  sub_1AE4F6648();
  sub_1AE772530();
  sub_1AE4F81B8();
  sub_1AE4FF0F0();
  return 0xD000000000000010;
}

uint64_t TriplesQuery.Clause.MatchClause.description.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];

  v2 = v0[2];
  v3 = v0[4];
  v4 = v0[6];
  v5 = v0[8];
  v6 = v0[10];
  if (!v0[1])
  {
    v9 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      goto LABEL_12;
    goto LABEL_7;
  }
  v41 = v0[4];
  v42 = v0[6];
  v7 = v0[8];
  v43[0] = 0;
  v43[1] = 0xE000000000000000;
  sub_1AE779D34();
  sub_1AE8AA964();
  sub_1AE5962D8();
  sub_1AE9263F4();
  sub_1AE4F6DCC();
  sub_1AE4F6648();
  v1 = 0;
  sub_1AE8AAA58();
  v9 = v8;
  v10 = *(_QWORD *)(v8 + 16);
  v0 = (_QWORD *)(v10 + 1);
  if (v10 >= *(_QWORD *)(v8 + 24) >> 1)
  {
    sub_1AE50129C();
    v9 = v30;
  }
  *(_QWORD *)(v9 + 16) = v0;
  v11 = v9 + 16 * v10;
  *(_QWORD *)(v11 + 32) = 0;
  *(_QWORD *)(v11 + 40) = 0xE000000000000000;
  v5 = v7;
  v3 = v41;
  v4 = v42;
  if (v2)
  {
LABEL_7:
    v43[0] = 0;
    v43[1] = 0xE000000000000000;
    v0 = v43;
    sub_1AE779D34();
    sub_1AE8AA964();
    MEMORY[0x1AF453400](v2, &type metadata for TriplesQuery.Clause);
    sub_1AE4F6DCC();
    swift_bridgeObjectRelease();
    v12 = v43[0];
    v13 = v43[1];
    if ((sub_1AE505598() & 1) == 0)
    {
      sub_1AE4FD794();
      v9 = v31;
    }
    sub_1AE8AA924();
    if (v14)
    {
      sub_1AE50129C();
      v9 = v32;
    }
    sub_1AE8AAB28();
    *(_QWORD *)(v15 + 32) = v12;
    *(_QWORD *)(v15 + 40) = v13;
  }
LABEL_12:
  if (v3)
  {
    sub_1AE8AA998();
    sub_1AE779D34();
    sub_1AE8AA964();
    sub_1AE525A5C();
    sub_1AE9263F4();
    sub_1AE4F6DCC();
    swift_bridgeObjectRelease();
    v16 = v43[0];
    v17 = v43[1];
    if ((sub_1AE505598() & 1) == 0)
    {
      sub_1AE4FD794();
      v9 = v33;
    }
    sub_1AE8AA924();
    if (v14)
    {
      sub_1AE50129C();
      v9 = v34;
    }
    sub_1AE8AAB28();
    *(_QWORD *)(v18 + 32) = v16;
    *(_QWORD *)(v18 + 40) = v17;
  }
  if (v4)
  {
    sub_1AE8AA998();
    sub_1AE779D34();
    sub_1AE8AA964();
    sub_1AE9263F4();
    sub_1AE4F6DCC();
    swift_bridgeObjectRelease();
    v19 = v43[0];
    v20 = v43[1];
    if ((sub_1AE505598() & 1) == 0)
    {
      sub_1AE4FD794();
      v9 = v35;
    }
    sub_1AE8AA924();
    if (v14)
    {
      sub_1AE50129C();
      v9 = v36;
    }
    *(_QWORD *)(v9 + 16) = v0;
    v21 = v9 + 16 * v1;
    *(_QWORD *)(v21 + 32) = v19;
    *(_QWORD *)(v21 + 40) = v20;
  }
  if (v5)
  {
    sub_1AE8AA998();
    sub_1AE779D34();
    sub_1AE8AA964();
    sub_1AE668BD8();
    sub_1AE9263F4();
    sub_1AE4F6DCC();
    sub_1AE4F81B8();
    v22 = v43[0];
    v23 = v43[1];
    if ((sub_1AE505598() & 1) == 0)
    {
      sub_1AE4FD794();
      v9 = v37;
    }
    sub_1AE8AA924();
    if (v14)
    {
      sub_1AE50129C();
      v9 = v38;
    }
    *(_QWORD *)(v9 + 16) = v0;
    v24 = v9 + 16 * v1;
    *(_QWORD *)(v24 + 32) = v22;
    *(_QWORD *)(v24 + 40) = v23;
  }
  if (v6)
  {
    sub_1AE8AA998();
    sub_1AE8AA98C();
    sub_1AE8AA964();
    sub_1AE525A5C();
    sub_1AE9263F4();
    sub_1AE4F6DCC();
    sub_1AE4F665C();
    v25 = v43[0];
    v26 = v43[1];
    if ((sub_1AE505598() & 1) == 0)
    {
      sub_1AE4FD794();
      v9 = v39;
    }
    v27 = *(_QWORD *)(v9 + 16);
    if (v27 >= *(_QWORD *)(v9 + 24) >> 1)
    {
      sub_1AE50129C();
      v9 = v40;
    }
    *(_QWORD *)(v9 + 16) = v27 + 1;
    v28 = v9 + 16 * v27;
    *(_QWORD *)(v28 + 32) = v25;
    *(_QWORD *)(v28 + 40) = v26;
  }
  sub_1AE8AA998();
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  strcpy((char *)v43, "<MatchClause ");
  HIWORD(v43[1]) = -4864;
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE568D9C();
  sub_1AE8AAADC();
  sub_1AE4F6648();
  sub_1AE772530();
  sub_1AE4F81B8();
  sub_1AE4FF0F0();
  return v43[0];
}

uint64_t TriplesQuery.Clause.FullTextSearchClause.description.getter()
{
  uint64_t v1;

  sub_1AE5FBE64();
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE4FB75C();
  sub_1AE9263F4();
  sub_1AE4F6648();
  sub_1AE772530();
  sub_1AE4F81B8();
  sub_1AE8AAB7C();
  sub_1AE8AA9A8();
  sub_1AE4FF0F0();
  return v1;
}

unint64_t TriplesQuery.Clause.ComparisonClause.description.getter()
{
  sub_1AE5FBE64();
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  sub_1AE926388();
  sub_1AE4FBAE0();
  sub_1AE4F6648();
  sub_1AE8AAB7C();
  sub_1AE925E90();
  sub_1AE4FBAE0();
  sub_1AE4F6648();
  sub_1AE8AAB7C();
  sub_1AE8A77CC();
  sub_1AE926D18();
  sub_1AE4FBAE0();
  sub_1AE4F6648();
  sub_1AE4FF0F0();
  return 0xD000000000000015;
}

void TriplesQuery.Clause.JoinClause.description.getter()
{
  uint64_t v0;

  sub_1AE5FBE64();
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE8AA9A8();
  sub_1AE8AA98C();
  v0 = sub_1AE4FB75C();
  MEMORY[0x1AF453400](v0, &type metadata for TriplesQuery.Clause);
  sub_1AE4FBAE0();
  sub_1AE4F6648();
  sub_1AE4F665C();
  sub_1AE4FF0F0();
  sub_1AE4FCDE0();
}

uint64_t TriplesQuery.Clause.AllClause.description.getter()
{
  return 0x75616C436C6C413CLL;
}

uint64_t sub_1AE8A2510(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 0x7461676572676761 && a2 == 0xE900000000000065;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x727453686374616DLL && a2 == 0xEC00000073676E69;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x686374616DLL && a2 == 0xE500000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x747865546C6C7566 && a2 == 0xEE00686372616553;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x73697261706D6F63 && a2 == 0xEA00000000006E6FLL;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 1852403562 && a2 == 0xE400000000000000;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 7105633 && a2 == 0xE300000000000000)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = sub_1AE926D60();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE8A2808(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE8A2840 + 4 * byte_1AE9698A7[a1]))(0x7461676572676761, 0xE900000000000065);
}

uint64_t sub_1AE8A2840()
{
  return 0x727453686374616DLL;
}

uint64_t sub_1AE8A2860()
{
  return 0x686374616DLL;
}

uint64_t sub_1AE8A2874()
{
  return 0x747865546C6C7566;
}

uint64_t sub_1AE8A2898()
{
  return 0x73697261706D6F63;
}

uint64_t sub_1AE8A28B4()
{
  return 1852403562;
}

uint64_t sub_1AE8A28C4()
{
  return 7105633;
}

uint64_t sub_1AE8A28D4()
{
  sub_1AE8A7B14();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A28FC()
{
  sub_1AE8A7B14();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8A2924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE54CF9C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE8A294C()
{
  sub_1AE8A7844();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A2974()
{
  sub_1AE8A7844();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8A299C()
{
  unsigned __int8 *v0;

  return sub_1AE8A2808(*v0);
}

uint64_t sub_1AE8A29A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8A2510(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8A29C8()
{
  sub_1AE8A7808();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A29F0()
{
  sub_1AE8A7808();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8A2A18()
{
  sub_1AE8A7934();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A2A40()
{
  sub_1AE8A7934();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8A2A68()
{
  sub_1AE8A79AC();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A2A90()
{
  sub_1AE8A79AC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8A2AB8()
{
  sub_1AE8A78BC();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A2AE0()
{
  sub_1AE8A78BC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8A2B08()
{
  sub_1AE8A7A24();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A2B30()
{
  sub_1AE8A7A24();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8A2B58()
{
  sub_1AE8A7A9C();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A2B80()
{
  sub_1AE8A7A9C();
  return sub_1AE926FA0();
}

void TriplesQuery.Clause.Impl.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  sub_1AE4F67EC();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v25 = sub_1AE501548(&qword_1EED98EF0);
  sub_1AE4F9050(v25, (uint64_t)&a13);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v26);
  sub_1AE4F9024();
  sub_1AE5085B4(v27);
  v28 = sub_1AE501548(&qword_1EED98EF8);
  sub_1AE4F9050(v28, (uint64_t)&a10);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v29);
  sub_1AE4F9024();
  sub_1AE5085B4(v30);
  sub_1AE501548(&qword_1EED98F10);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v31);
  sub_1AE4F9024();
  sub_1AE5085B4(v32);
  v33 = sub_1AE501548(&qword_1EED98F20);
  sub_1AE4F9050(v33, (uint64_t)&v45);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v34);
  sub_1AE4F9024();
  sub_1AE5085B4(v35);
  v36 = sub_1AE501548(&qword_1EED98F00);
  sub_1AE4F9050(v36, (uint64_t)&v46);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v37);
  sub_1AE4F9024();
  sub_1AE5085B4(v38);
  v39 = sub_1AE501548(&qword_1EED98F18);
  sub_1AE4F9050(v39, (uint64_t)&v44);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v40);
  sub_1AE4F90C8();
  sub_1AE501548(&qword_1EED98F08);
  sub_1AE508B20();
  MEMORY[0x1E0C80A78](v41);
  sub_1AE4F683C();
  sub_1AE501548(&qword_1EED98EE8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v42);
  sub_1AE4F9024();
  v43 = *(unsigned __int8 *)(v20 + 104);
  sub_1AE4F9858(v24, v24[3]);
  sub_1AE8A7808();
  sub_1AE8AAAA0();
  __asm { BR              X10 }
}

