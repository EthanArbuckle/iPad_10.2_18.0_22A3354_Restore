void sub_1AE7BD0DC()
{
  sub_1AE7BD3D0();
}

void sub_1AE7BD0E8()
{
  sub_1AE7BD410();
}

void sub_1AE7BD0F4()
{
  sub_1AE4FB9BC();
  sub_1AE4F6664();
}

void sub_1AE7BD130()
{
  swift_bridgeObjectRetain();
  sub_1AE7BD164();
}

void sub_1AE7BD158()
{
  sub_1AE7BD3D0();
}

void sub_1AE7BD164()
{
  sub_1AE7BD410();
}

void sub_1AE7BD170()
{
  sub_1AE4FB9BC();
  sub_1AE4F6664();
}

void sub_1AE7BD1AC()
{
  swift_bridgeObjectRetain();
  sub_1AE7BD1E0();
}

void sub_1AE7BD1D4()
{
  sub_1AE7BD3D0();
}

void sub_1AE7BD1E0()
{
  sub_1AE7BD410();
}

void sub_1AE7BD1EC()
{
  sub_1AE4FB9BC();
  sub_1AE4F6664();
}

void sub_1AE7BD228()
{
  swift_bridgeObjectRetain();
  sub_1AE7BD25C();
}

void sub_1AE7BD250()
{
  sub_1AE7BD3D0();
}

void sub_1AE7BD25C()
{
  sub_1AE7BD410();
}

void sub_1AE7BD268()
{
  sub_1AE4FB9BC();
  sub_1AE4F6664();
}

void sub_1AE7BD2A4()
{
  swift_bridgeObjectRetain();
  sub_1AE7BD2D8();
}

void sub_1AE7BD2CC()
{
  sub_1AE7BD3D0();
}

void sub_1AE7BD2D8()
{
  sub_1AE7BD410();
}

void sub_1AE7BD2E4()
{
  sub_1AE4FB9BC();
  sub_1AE4F6664();
}

void sub_1AE7BD320()
{
  swift_bridgeObjectRetain();
  sub_1AE7BD354();
}

void sub_1AE7BD348()
{
  sub_1AE7BD3D0();
}

void sub_1AE7BD354()
{
  sub_1AE7BD410();
}

void sub_1AE7BD360()
{
  sub_1AE4FB9BC();
  sub_1AE4F6664();
}

void sub_1AE7BD39C()
{
  swift_bridgeObjectRetain();
  sub_1AE7BD404();
}

void sub_1AE7BD3C4()
{
  sub_1AE7BD3D0();
}

void sub_1AE7BD3D0()
{
  sub_1AE4F9094();
  swift_bridgeObjectRetain();
  sub_1AE506B30();
}

void sub_1AE7BD404()
{
  sub_1AE7BD410();
}

void sub_1AE7BD410()
{
  sub_1AE4FB9BC();
  sub_1AE7D3580();
  sub_1AE506B30();
}

void sub_1AE7BD448()
{
  sub_1AE4FB9BC();
  sub_1AE4F6664();
}

void sub_1AE7BD484()
{
  swift_bridgeObjectRetain();
  sub_1AE7BD4B8();
}

void sub_1AE7BD4AC()
{
  sub_1AE7BD3D0();
}

void sub_1AE7BD4B8()
{
  sub_1AE7BD410();
}

void sub_1AE7BD4C4()
{
  sub_1AE4FB9BC();
  sub_1AE4F6664();
}

void sub_1AE7BD500()
{
  swift_bridgeObjectRetain();
  sub_1AE7BD534();
}

void sub_1AE7BD528()
{
  sub_1AE7BD3D0();
}

void sub_1AE7BD534()
{
  sub_1AE7BD410();
}

void sub_1AE7BD540()
{
  sub_1AE4FB9BC();
  sub_1AE4F6664();
}

void sub_1AE7BD57C()
{
  swift_bridgeObjectRetain();
  sub_1AE7BD5B0();
}

void sub_1AE7BD5A4()
{
  sub_1AE7BD3D0();
}

void sub_1AE7BD5B0()
{
  sub_1AE7BD410();
}

void sub_1AE7BD5BC()
{
  sub_1AE4FB9BC();
  sub_1AE4F6664();
}

void sub_1AE7BD5F8()
{
  sub_1AE4F9094();
  sub_1AE506B30();
}

uint64_t KTSDataRepresentation.__allocating_init(startTime:endTime:distanceInMeters:elevationGainInMeters:distanceBuckets:durationInSeconds:expectedDurationInSecondsNoTraffic:distanceSpentInTrafficBuckets:timeSpentInTrafficBuckets:distanceSpentAtSpeedBuckets:timeSpentAtSpeedBuckets:distanceSpentAtRelativeSpeeds:timeSpentAtRelativeSpeeds:distancePerRoadType:timePerRoadType:distancePerWeatherType:timePerWeatherType:distancePerTerrainType:timePerTerrainType:averageSpeedInMetersPerSecond:score:usageKwh:optimalUsageKwh:numBrakingEvents:numAccelEvents:numHighSpeedEvents:roadDistancesInMeters:roadSpeedBuckets:roadRelativeSpeedBuckets:roadTimes:lifeEventIds:ktsSegmentIds:route:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_1AE7D3278();
  v30 = sub_1AE7D3268();
  sub_1AE7D33E4();
  sub_1AE7D3430();
  KTSDataRepresentation.init(startTime:endTime:distanceInMeters:elevationGainInMeters:distanceBuckets:durationInSeconds:expectedDurationInSecondsNoTraffic:distanceSpentInTrafficBuckets:timeSpentInTrafficBuckets:distanceSpentAtSpeedBuckets:timeSpentAtSpeedBuckets:distanceSpentAtRelativeSpeeds:timeSpentAtRelativeSpeeds:distancePerRoadType:timePerRoadType:distancePerWeatherType:timePerWeatherType:distancePerTerrainType:timePerTerrainType:averageSpeedInMetersPerSecond:score:usageKwh:optimalUsageKwh:numBrakingEvents:numAccelEvents:numHighSpeedEvents:roadDistancesInMeters:roadSpeedBuckets:roadRelativeSpeedBuckets:roadTimes:lifeEventIds:ktsSegmentIds:route:)(v31, v32, v33, v34, v35, v36, v37, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a27,
    a28,
    a25,
    a26,
    a23,
    a24,
    a21,
    a22,
    a19,
    a20,
    a17,
    a18,
    a15,
    a16,
    a13,
    a14,
    a11,
    a12,
    a9,
    a10);
  return v30;
}

void KTSDataRepresentation.init(startTime:endTime:distanceInMeters:elevationGainInMeters:distanceBuckets:durationInSeconds:expectedDurationInSecondsNoTraffic:distanceSpentInTrafficBuckets:timeSpentInTrafficBuckets:distanceSpentAtSpeedBuckets:timeSpentAtSpeedBuckets:distanceSpentAtRelativeSpeeds:timeSpentAtRelativeSpeeds:distancePerRoadType:timePerRoadType:distancePerWeatherType:timePerWeatherType:distancePerTerrainType:timePerTerrainType:averageSpeedInMetersPerSecond:score:usageKwh:optimalUsageKwh:numBrakingEvents:numAccelEvents:numHighSpeedEvents:roadDistancesInMeters:roadSpeedBuckets:roadRelativeSpeedBuckets:roadTimes:lifeEventIds:ktsSegmentIds:route:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,unint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  sub_1AE7D2E30();
  v118 = v53;
  v117 = v54;
  v56 = v55;
  v58 = v57;
  v60 = v59;
  v62 = v61;
  v64 = v63;
  sub_1AE7D34F4(a48);
  type metadata accessor for CodableLocation();
  sub_1AE736BC4();
  MEMORY[0x1E0C80A78](v65);
  sub_1AE4F910C();
  v111 = (_QWORD *)(v50 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_route);
  *(_QWORD *)(v50 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_route) = 0;
  v66 = (_QWORD *)(v50 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_lifeEventIds);
  *(_QWORD *)(v50 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_lifeEventIds) = 0;
  v67 = (_QWORD *)(v50 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_ktsSegmentIds);
  *(_QWORD *)(v50 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_ktsSegmentIds) = 0;
  *(_QWORD *)(v50 + 16) = v64;
  *(_QWORD *)(v50 + 24) = v62;
  v68 = v50 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceInMeters;
  v69 = sub_1AE501548(&qword_1EED9E350);
  v109 = *(_QWORD *)(v69 - 8);
  v116 = v60;
  sub_1AE7D33C4(v68, v60);
  v115 = v58;
  v110 = v69;
  sub_1AE7D33C4(v50 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_elevationGainInMeters, v58);
  sub_1AE7D29CC(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceBuckets);
  v70 = v50 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_durationInSeconds;
  v71 = sub_1AE501548(&qword_1EED9A850);
  sub_1AE7D33C4(v70, v117);
  sub_1AE7D33C4(v50 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_expectedDurationInSecondsNoTraffic, v118);
  sub_1AE7D29CC(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceSpentInTrafficBuckets);
  sub_1AE7D29CC(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_timeSpentInTrafficBuckets);
  v72 = v50 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_averageSpeedInMetersPerSecond;
  v73 = sub_1AE501548(&qword_1EED9A888);
  v112 = *(_QWORD *)(v73 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 16))(v72, a38, v73);
  sub_1AE7D29CC(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceSpentAtSpeedBuckets);
  sub_1AE7D29CC(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_timeSpentAtSpeedBuckets);
  sub_1AE7D29CC(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceSpentAtRelativeSpeeds);
  v74 = v50;
  sub_1AE7D29CC(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_timeSpentAtRelativeSpeeds);
  *(_QWORD *)(v50 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_score) = v56;
  v75 = v50 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_usageKwh;
  v76 = sub_1AE501548((uint64_t *)&unk_1EED9E340);
  v77 = *(_QWORD *)(v76 - 8);
  v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16);
  v79 = v75;
  v80 = v76;
  v78(v79, a39, v76);
  v78(v74 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_optimalUsageKwh, a40, v80);
  v81 = a50;
  sub_1AE7D2DA4(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numBrakingEvents);
  sub_1AE7D2DA4(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numAccelEvents);
  sub_1AE7D2DA4(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numHighSpeedEvents);
  sub_1AE7D2DA4(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_roadDistancesInMeters);
  sub_1AE7D2DA4(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_roadSpeedBuckets);
  sub_1AE7D2DA4(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_roadRelativeSpeedBuckets);
  sub_1AE7D2DA4(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_roadTimes);
  sub_1AE7D2DA4(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distancePerRoadType);
  sub_1AE7D2DA4(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distancePerWeatherType);
  sub_1AE7D2DA4(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distancePerTerrainType);
  sub_1AE7D2DA4(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_timePerRoadType);
  sub_1AE7D2DA4(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_timePerWeatherType);
  sub_1AE7D2DA4(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_timePerTerrainType);
  sub_1AE4FB9BC();
  *v66 = v113;
  swift_bridgeObjectRelease();
  sub_1AE4FB9BC();
  *v67 = a49;
  swift_bridgeObjectRelease();
  if (!a50)
  {
    v108 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    sub_1AE501F5C(a40);
    sub_1AE501F5C(a39);
    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(a38, v73);
    sub_1AE7D3108();
    v108(v118, v71);
    v108(v117, v71);
    sub_1AE7D3108();
    v108(v115, v110);
    v108(v116, v110);
    v83 = 0;
    goto LABEL_16;
  }
  v114 = v73;
  if (a50 >> 62)
  {
    sub_1AE4FB75C();
    v82 = sub_1AE926AD8();
    sub_1AE4F6648();
  }
  else
  {
    v82 = *(_QWORD *)((a50 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_1AE7D32A8();
  v83 = MEMORY[0x1E0DEE9D8];
  if (!v82)
  {
LABEL_14:
    sub_1AE7D3108();
    sub_1AE7D32D8(v106);
    sub_1AE7D32D8(a39);
    (*(void (**)(_QWORD *, uint64_t))(v112 + 8))(v67, v114);
    sub_1AE7D3108();
    sub_1AE7D32D8(v73);
    sub_1AE7D32D8(v117);
    sub_1AE7D3108();
    sub_1AE501F5C(v80);
    v107 = sub_1AE753ADC();
    ((void (*)(uint64_t))v81)(v107);
    swift_bridgeObjectRelease();
LABEL_16:
    sub_1AE4FB9BC();
    *v111 = v83;
    swift_bridgeObjectRelease();
    sub_1AE505BEC();
    return;
  }
  v119 = MEMORY[0x1E0DEE9D8];
  sub_1AE7D3754();
  sub_1AE521E18();
  if ((v82 & 0x8000000000000000) == 0)
  {
    v67 = 0;
    v83 = v119;
    v73 = a50 & 0xC000000000000001;
    do
    {
      if (v73)
        v84 = (id)MEMORY[0x1AF453B80](v67, a50);
      else
        v84 = *(id *)(a50 + 8 * (_QWORD)v67 + 32);
      v85 = v84;
      objc_msgSend(v84, sel_coordinate, v109);
      v87 = v86;
      v88 = objc_msgSend(v85, sel_coordinate);
      v90 = v89;
      v91 = sub_1AE4FB8E8((uint64_t)v88, sel_altitude);
      v93 = v92;
      v94 = sub_1AE4FB8E8((uint64_t)v91, sel_horizontalAccuracy);
      v96 = v95;
      v97 = sub_1AE4FB8E8((uint64_t)v94, sel_verticalAccuracy);
      v99 = v98;
      v100 = sub_1AE4FB8E8((uint64_t)v97, sel_course);
      v102 = v101;
      sub_1AE4FB8E8((uint64_t)v100, sel_speed);
      v104 = v103;
      v105 = objc_msgSend(v85, sel_timestamp);
      sub_1AE9248A0();

      *v52 = v90;
      v52[1] = v87;
      v52[2] = v93;
      v52[3] = v96;
      v52[5] = v104;
      v52[6] = v102;
      v52[4] = v99;
      v81 = *(_QWORD *)(v119 + 16);
      v80 = v81 + 1;
      if (v81 >= *(_QWORD *)(v119 + 24) >> 1)
        sub_1AE521E18();
      v67 = (_QWORD *)((char *)v67 + 1);
      *(_QWORD *)(v119 + 16) = v80;
      sub_1AE640220((uint64_t)v52, v119+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(_QWORD *)(v51 + 72) * v81);
    }
    while ((_QWORD *)v82 != v67);
    sub_1AE7D32A8();
    goto LABEL_14;
  }
  __break(1u);
}

uint64_t sub_1AE7BDF28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  void (*v17)(uint64_t);
  double *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  sub_1AE4FC4D4();
  sub_1AE501548((uint64_t *)&unk_1EED9E340);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE7D31F0(v3, v24);
  sub_1AE501548(&qword_1EED9A888);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED9A850);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F910C();
  v6 = sub_1AE501548(&qword_1EED9E350);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F90C8();
  sub_1AE92691C();
  sub_1AE4FDA58();
  sub_1AE7D2978();
  sub_1AE4F9094();
  sub_1AE7D3328(*(double *)(v0 + 16));
  sub_1AE925F74();
  sub_1AE4F9094();
  sub_1AE7D3328(*(double *)(v0 + 24));
  sub_1AE4F6A2C();
  sub_1AE4F9094();
  v8 = *(void (**)(void))(v7 + 16);
  v9 = sub_1AE7D36BC();
  ((void (*)(uint64_t))v8)(v9);
  sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E08);
  sub_1AE7D33E4();
  sub_1AE926D18();
  sub_1AE7D2978();
  sub_1AE4F6728();
  sub_1AE7D36C8();
  sub_1AE4F6A2C();
  sub_1AE4F9094();
  sub_1AE7D338C();
  v8();
  sub_1AE926D18();
  sub_1AE7D2978();
  sub_1AE4F66E8();
  sub_1AE7D36C8();
  sub_1AE4F6A2C();
  sub_1AE4F9094();
  sub_1AE7CB6B4();
  sub_1AE4F6708();
  sub_1AE925C68();
  sub_1AE7D2978();
  sub_1AE4F76D8();
  sub_1AE4F66E8();
  sub_1AE4F6A2C();
  sub_1AE4F9094();
  v10 = sub_1AE7D34B4();
  sub_1AE7D3524(v10, v11);
  sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E18);
  sub_1AE7D2FC0();
  sub_1AE7D2978();
  sub_1AE4F66E8();
  sub_1AE7D33DC(v1);
  sub_1AE4F6A2C();
  sub_1AE4F9094();
  v12 = sub_1AE7D34B4();
  sub_1AE7D3524(v12, v13);
  sub_1AE7D2FC0();
  sub_1AE7D2978();
  sub_1AE4F76D8();
  sub_1AE7D33DC(v1);
  sub_1AE7D2F5C();
  sub_1AE4F9094();
  sub_1AE7CB6F0();
  sub_1AE4F67A4();
  sub_1AE7D2ED0();
  sub_1AE7D2978();
  sub_1AE4F6728();
  sub_1AE4F6710();
  sub_1AE4FDA58();
  sub_1AE925F74();
  sub_1AE4F9094();
  sub_1AE7CB72C();
  sub_1AE4FB930();
  sub_1AE7D311C();
  sub_1AE7D2978();
  sub_1AE4F66E8();
  sub_1AE4F6728();
  sub_1AE7D2F5C();
  sub_1AE4F9094();
  sub_1AE7CB768();
  sub_1AE4FB930();
  sub_1AE925C68();
  sub_1AE7D2978();
  sub_1AE4F66E8();
  sub_1AE4F6728();
  sub_1AE7D3358();
  sub_1AE4F9094();
  sub_1AE4FB930();
  sub_1AE7D2ED0();
  sub_1AE7D2978();
  sub_1AE4F66E8();
  sub_1AE4F76D8();
  sub_1AE7D2C98();
  sub_1AE4F9094();
  sub_1AE4F6708();
  sub_1AE7D311C();
  sub_1AE7D2978();
  sub_1AE4F76D8();
  sub_1AE4F66E8();
  sub_1AE7D35E8();
  sub_1AE4F6A2C();
  sub_1AE4F9094();
  sub_1AE7CB7A4();
  sub_1AE4FB930();
  sub_1AE7D2ED0();
  sub_1AE7D2978();
  sub_1AE4F66E8();
  sub_1AE4F6728();
  sub_1AE4FDA58();
  sub_1AE925F74();
  sub_1AE4F9094();
  sub_1AE7CB7E0();
  sub_1AE4FB930();
  sub_1AE7D311C();
  sub_1AE7D2978();
  sub_1AE4F66E8();
  swift_bridgeObjectRelease();
  sub_1AE4FDA58();
  sub_1AE925F74();
  sub_1AE4F9094();
  sub_1AE7CB81C();
  sub_1AE4F67A4();
  sub_1AE7D32F0();
  sub_1AE7D2978();
  sub_1AE4F6728();
  sub_1AE4F66E8();
  sub_1AE7D3338();
  sub_1AE4F9094();
  sub_1AE4FB930();
  sub_1AE7D2ED0();
  sub_1AE7D2978();
  sub_1AE4F66E8();
  sub_1AE4F76D8();
  sub_1AE7D2C98();
  sub_1AE4F9094();
  sub_1AE4F6708();
  sub_1AE7D311C();
  sub_1AE7D2978();
  sub_1AE4F76D8();
  sub_1AE4F66E8();
  sub_1AE7D2C98();
  sub_1AE4F9094();
  sub_1AE4F6708();
  sub_1AE7D32F0();
  sub_1AE7D2978();
  sub_1AE4F76D8();
  sub_1AE4F66E8();
  sub_1AE7D3358();
  sub_1AE4F9094();
  sub_1AE4F6708();
  sub_1AE925C68();
  sub_1AE7D2978();
  sub_1AE4F76D8();
  sub_1AE4F66E8();
  sub_1AE7D35E8();
  sub_1AE4F6A2C();
  sub_1AE4F9094();
  v14 = sub_1AE7D3450();
  v15(v14);
  sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E50);
  sub_1AE926D18();
  sub_1AE7D2978();
  sub_1AE4F76D8();
  v16 = sub_1AE7D31A8();
  v17(v16);
  sub_1AE925F74();
  v18 = (double *)(v0 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_score);
  sub_1AE4F9094();
  sub_1AE9263AC(*v18);
  sub_1AE7D3598();
  sub_1AE4F9094();
  v19 = sub_1AE7D3488();
  sub_1AE7D3524(v19, v20);
  sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E58);
  sub_1AE7D2FC0();
  sub_1AE7D2978();
  sub_1AE4F66E8();
  sub_1AE7D33DC(v25);
  sub_1AE7D3338();
  sub_1AE4F9094();
  v21 = sub_1AE7D3488();
  sub_1AE7D3524(v21, v22);
  sub_1AE7D2FC0();
  sub_1AE7D2978();
  sub_1AE4F76D8();
  sub_1AE7D33DC(v25);
  sub_1AE4FDA58();
  sub_1AE925F74();
  sub_1AE4F9094();
  sub_1AE7D2FC0();
  sub_1AE7D2978();
  sub_1AE4F66E8();
  sub_1AE7D35E8();
  sub_1AE4F6A2C();
  sub_1AE4F9094();
  sub_1AE7D2FC0();
  sub_1AE7D2978();
  sub_1AE4F66E8();
  sub_1AE7D2C98();
  sub_1AE4F9094();
  sub_1AE7D2FC0();
  sub_1AE7D2978();
  sub_1AE4F76D8();
  sub_1AE4FDA58();
  sub_1AE925F74();
  sub_1AE4F9094();
  sub_1AE4F67A4();
  sub_1AE7D33E4();
  sub_1AE7D2ED0();
  sub_1AE7D2978();
  sub_1AE4F6728();
  sub_1AE4F67AC();
  sub_1AE7D2F5C();
  sub_1AE4F9094();
  sub_1AE4F6804();
  sub_1AE501548(&qword_1EED9A868);
  sub_1AE7D2ED0();
  sub_1AE7D2978();
  sub_1AE4F67AC();
  sub_1AE4F6728();
  sub_1AE7D2C98();
  sub_1AE4F9094();
  sub_1AE4F6804();
  sub_1AE501548(&qword_1EED9A858);
  sub_1AE7D2ED0();
  sub_1AE7D2978();
  sub_1AE4F67AC();
  sub_1AE4F6728();
  sub_1AE925F74();
  sub_1AE4F9094();
  sub_1AE4F6804();
  sub_1AE7D2ED0();
  sub_1AE7D2978();
  sub_1AE4F67AC();
  sub_1AE4F81B8();
  sub_1AE7D35E8();
  sub_1AE4F6A2C();
  sub_1AE4F9094();
  sub_1AE501548(&qword_1EED9DD58);
  sub_1AE925E90();
  sub_1AE7D2978();
  sub_1AE4F81B8();
  sub_1AE7D3348();
  sub_1AE4F9094();
  swift_bridgeObjectRetain();
  sub_1AE501548(&qword_1EEDA2E60);
  sub_1AE925E90();
  sub_1AE7D2978();
  sub_1AE4F76D8();
  sub_1AE7D3348();
  sub_1AE4F9094();
  swift_bridgeObjectRetain();
  sub_1AE925E90();
  sub_1AE7D2978();
  sub_1AE4F665C();
  sub_1AE4FF0F0();
  return 0;
}

void sub_1AE7BEC14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *****v53;
  char v54;
  char v55;
  uint64_t ****v56;
  char v57;
  char v58;
  uint64_t ***v59;
  char v60;
  char v61;
  uint64_t **v62;
  char v63;
  char v64;
  uint64_t *v65;
  char v66;
  char v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  double v79;
  double *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t ********v88;
  uint64_t *********v89;
  uint64_t ********v90;
  uint64_t *********v91;
  uint64_t ********v92;
  char v93;
  char v94;
  uint64_t *******v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char v99;
  uint64_t ******v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  char v104;
  uint64_t *****v105;
  char v106;
  char v107;
  uint64_t ****v108;
  char v109;
  char v110;
  uint64_t ***v111;
  char v112;
  char v113;
  uint64_t **v114;
  char v115;
  char v116;
  uint64_t *v117;
  char v118;
  char v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  char v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;

  v3 = sub_1AE501548((uint64_t *)&unk_1EED9E340);
  v142 = *(_QWORD *)(v3 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4FFEB4();
  v7 = v5 - v6;
  v9 = MEMORY[0x1E0C80A78](v8);
  sub_1AE7D362C(v9, v10, v11, v12, v13, v14, v15, v16, v136);
  v17 = sub_1AE501548(&qword_1EED9A888);
  v146 = *(_QWORD *)(v17 - 8);
  v147 = v17;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F686C();
  v145 = v19;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v20);
  sub_1AE5094B0();
  v144 = v21;
  v150 = sub_1AE501548(&qword_1EED9A850);
  v22 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v149 = (uint64_t)&v136 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9350();
  v25 = MEMORY[0x1E0C80A78](v24);
  sub_1AE7D3014(v25, v26, v27, v28, v29, v30, v31, v32, v136);
  sub_1AE501548(&qword_1EED9E350);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v33);
  sub_1AE4FFEB4();
  v36 = v34 - v35;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v136 - v38;
  sub_1AE4F9094();
  v40 = *(double *)(v1 + 16);
  sub_1AE4F9094();
  if (v40 == *(double *)(a1 + 16))
  {
    sub_1AE4F9094();
    v41 = *(double *)(v1 + 24);
    sub_1AE4F9094();
    if (v41 == *(double *)(a1 + 24))
    {
      v138 = v3;
      v139 = v22;
      v137 = v7;
      v141 = v1;
      v42 = v1 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceInMeters;
      sub_1AE4F9094();
      sub_1AE7D3078((uint64_t)v39, v42);
      v140 = a1;
      v43 = a1 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceInMeters;
      sub_1AE4F9094();
      v44 = sub_1AE7D3078(v36, v43);
      sub_1AE7D2F18(v44, &qword_1EED996A0);
      v45 = sub_1AE7D3060();
      sub_1AE7D351C(v36);
      sub_1AE7D351C((uint64_t)v39);
      if ((v45 & 1) != 0)
      {
        sub_1AE7D29D8();
        sub_1AE4F9094();
        sub_1AE7D3078((uint64_t)v39, v45);
        v46 = v140 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_elevationGainInMeters;
        sub_1AE4F9094();
        sub_1AE7D3078(v36, v46);
        LOBYTE(v46) = sub_1AE7D3060();
        sub_1AE7D351C(v36);
        sub_1AE7D351C((uint64_t)v39);
        if ((v46 & 1) != 0)
        {
          v47 = v141 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_durationInSeconds;
          sub_1AE4F9094();
          v48 = v148;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 16))(v148, v47, v150);
          v49 = v140;
          sub_1AE4F9094();
          v50 = v149;
          v51 = sub_1AE7D3144(v149);
          sub_1AE7D2F18(v51, &qword_1EED996A8);
          LOBYTE(v47) = sub_1AE7D3048();
          sub_1AE7D33D4(v50);
          sub_1AE7D33D4(v48);
          if ((v47 & 1) != 0)
          {
            sub_1AE4F9094();
            sub_1AE7D3144(v48);
            sub_1AE4F9094();
            sub_1AE7D3144(v50);
            v52 = sub_1AE7D3048();
            sub_1AE7D33D4(v50);
            sub_1AE7D33D4(v48);
            if ((v52 & 1) != 0)
            {
              sub_1AE7D29D8();
              sub_1AE4F9094();
              v53 = *(uint64_t ******)v52;
              sub_1AE4F9094();
              sub_1AE4F66C4();
              sub_1AE4F6730();
              sub_1AE7D2D58();
              sub_1AE80E704();
              v55 = v54;
              sub_1AE4F665C();
              sub_1AE4F81B8();
              if ((v55 & 1) != 0)
              {
                sub_1AE7D29D8();
                sub_1AE4F9094();
                v56 = *v53;
                sub_1AE4F9094();
                sub_1AE4F66C4();
                sub_1AE4F6730();
                sub_1AE7D2D58();
                sub_1AE80E8DC();
                v58 = v57;
                sub_1AE4F665C();
                sub_1AE4F81B8();
                if ((v58 & 1) != 0)
                {
                  sub_1AE7D29D8();
                  sub_1AE4F9094();
                  v59 = *v56;
                  sub_1AE4F9094();
                  sub_1AE4F66C4();
                  sub_1AE4F6730();
                  sub_1AE7D2D58();
                  sub_1AE80EAB4();
                  v61 = v60;
                  sub_1AE4F665C();
                  sub_1AE4F81B8();
                  if ((v61 & 1) != 0)
                  {
                    sub_1AE7D29D8();
                    sub_1AE4F9094();
                    v62 = *v59;
                    sub_1AE4F9094();
                    sub_1AE4F66C4();
                    sub_1AE4F6730();
                    sub_1AE7D2D58();
                    sub_1AE80EC8C();
                    v64 = v63;
                    sub_1AE4F665C();
                    sub_1AE4F81B8();
                    if ((v64 & 1) != 0)
                    {
                      sub_1AE7D29D8();
                      sub_1AE4F9094();
                      v65 = *v62;
                      sub_1AE4F9094();
                      sub_1AE4F66C4();
                      sub_1AE4F6730();
                      sub_1AE7D2D58();
                      sub_1AE80EE64();
                      v67 = v66;
                      sub_1AE4F665C();
                      sub_1AE4F81B8();
                      if ((v67 & 1) != 0)
                      {
                        sub_1AE7D29D8();
                        sub_1AE4F9094();
                        v68 = *v65;
                        sub_1AE4F9094();
                        sub_1AE4F66C4();
                        sub_1AE4F6730();
                        sub_1AE7D2D58();
                        sub_1AE80F03C();
                        v70 = v69;
                        sub_1AE4F665C();
                        sub_1AE4F81B8();
                        if ((v70 & 1) != 0)
                        {
                          sub_1AE7D29D8();
                          sub_1AE4F9094();
                          v72 = v146;
                          v71 = v147;
                          v73 = v144;
                          sub_1AE7D3548(v144, v68);
                          v74 = v49
                              + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_averageSpeedInMetersPerSecond;
                          sub_1AE4F9094();
                          v75 = v145;
                          v76 = sub_1AE7D3548(v145, v74);
                          sub_1AE7D2F18(v76, &qword_1EED99690);
                          v77 = sub_1AE7D2DEC();
                          v78 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
                          v78(v75, v71);
                          v78(v73, v71);
                          if ((v77 & 1) != 0)
                          {
                            sub_1AE7D29D8();
                            sub_1AE4F9094();
                            v79 = *(double *)v77;
                            v80 = (double *)(v49 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_score);
                            sub_1AE4F9094();
                            if (v79 == *v80)
                            {
                              sub_1AE7D29D8();
                              sub_1AE4F9094();
                              v81 = v143;
                              (*(void (**)(uint64_t, double *, uint64_t))(v142 + 16))(v143, v80, v138);
                              sub_1AE4F9094();
                              v82 = v137;
                              v83 = sub_1AE7D3150(v137);
                              sub_1AE7D2F18(v83, &qword_1EED99698);
                              v84 = sub_1AE7D2E08();
                              sub_1AE7D34AC(v82);
                              sub_1AE7D34AC(v81);
                              if ((v84 & 1) != 0)
                              {
                                sub_1AE7D29D8();
                                sub_1AE4F9094();
                                sub_1AE7D3150(v81);
                                sub_1AE4F9094();
                                sub_1AE7D3150(v82);
                                v85 = sub_1AE7D2E08();
                                sub_1AE7D34AC(v82);
                                sub_1AE7D34AC(v81);
                                if ((v85 & 1) != 0)
                                {
                                  sub_1AE7D29D8();
                                  sub_1AE4F9094();
                                  v86 = *(_QWORD *)v85;
                                  v87 = (uint64_t *)(v49
                                                  + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numBrakingEvents);
                                  sub_1AE4F9094();
                                  if (v86 == *v87)
                                  {
                                    sub_1AE7D29D8();
                                    sub_1AE4F9094();
                                    v88 = (uint64_t ********)*v87;
                                    v89 = (uint64_t *********)(v49
                                                            + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numAccelEvents);
                                    sub_1AE4F9094();
                                    if (v88 == *v89)
                                    {
                                      sub_1AE7D29D8();
                                      sub_1AE4F9094();
                                      v90 = *v89;
                                      v91 = (uint64_t *********)(v49
                                                              + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numHighSpeedEvents);
                                      sub_1AE4F9094();
                                      if (v90 == *v91)
                                      {
                                        sub_1AE7D29D8();
                                        sub_1AE4F9094();
                                        v92 = *v91;
                                        sub_1AE4F9094();
                                        sub_1AE4F66C4();
                                        sub_1AE4F6730();
                                        sub_1AE7D2D58();
                                        sub_1AE80F214();
                                        v94 = v93;
                                        sub_1AE4F665C();
                                        sub_1AE4F81B8();
                                        if ((v94 & 1) != 0)
                                        {
                                          sub_1AE7D29D8();
                                          sub_1AE4F9094();
                                          v95 = *v92;
                                          sub_1AE4F9094();
                                          sub_1AE4F66C4();
                                          sub_1AE4F6730();
                                          v96 = sub_1AE7D2D58();
                                          sub_1AE80F238(v96, v97);
                                          v99 = v98;
                                          sub_1AE4F665C();
                                          sub_1AE4F81B8();
                                          if ((v99 & 1) != 0)
                                          {
                                            sub_1AE7D29D8();
                                            sub_1AE4F9094();
                                            v100 = *v95;
                                            sub_1AE4F9094();
                                            sub_1AE4F66C4();
                                            sub_1AE4F6730();
                                            v101 = sub_1AE7D2D58();
                                            sub_1AE80F244(v101, v102);
                                            v104 = v103;
                                            sub_1AE4F665C();
                                            sub_1AE4F81B8();
                                            if ((v104 & 1) != 0)
                                            {
                                              sub_1AE7D29D8();
                                              sub_1AE4F9094();
                                              v105 = *v100;
                                              sub_1AE4F9094();
                                              sub_1AE4F66C4();
                                              sub_1AE4F6730();
                                              sub_1AE7D2D58();
                                              sub_1AE80F3B4();
                                              v107 = v106;
                                              sub_1AE4F665C();
                                              sub_1AE4F81B8();
                                              if ((v107 & 1) != 0)
                                              {
                                                sub_1AE7D29D8();
                                                sub_1AE4F9094();
                                                v108 = *v105;
                                                sub_1AE4F9094();
                                                sub_1AE4F66C4();
                                                sub_1AE4F6730();
                                                sub_1AE7D2D58();
                                                sub_1AE80F7A8();
                                                v110 = v109;
                                                sub_1AE4F665C();
                                                sub_1AE4F81B8();
                                                if ((v110 & 1) != 0)
                                                {
                                                  sub_1AE7D29D8();
                                                  sub_1AE4F9094();
                                                  v111 = *v108;
                                                  sub_1AE4F9094();
                                                  sub_1AE4F66C4();
                                                  sub_1AE4F6730();
                                                  sub_1AE7D2D58();
                                                  sub_1AE80F980();
                                                  v113 = v112;
                                                  sub_1AE4F665C();
                                                  sub_1AE4F81B8();
                                                  if ((v113 & 1) != 0)
                                                  {
                                                    sub_1AE7D29D8();
                                                    sub_1AE4F9094();
                                                    v114 = *v111;
                                                    sub_1AE4F9094();
                                                    sub_1AE4F66C4();
                                                    sub_1AE4F6730();
                                                    sub_1AE7D2D58();
                                                    sub_1AE80FB58();
                                                    v116 = v115;
                                                    sub_1AE4F665C();
                                                    sub_1AE4F81B8();
                                                    if ((v116 & 1) != 0)
                                                    {
                                                      sub_1AE7D29D8();
                                                      sub_1AE4F9094();
                                                      v117 = *v114;
                                                      sub_1AE4F9094();
                                                      sub_1AE4F66C4();
                                                      sub_1AE4F6730();
                                                      sub_1AE7D2D58();
                                                      sub_1AE80FD30();
                                                      v119 = v118;
                                                      sub_1AE4F665C();
                                                      sub_1AE4F81B8();
                                                      if ((v119 & 1) != 0)
                                                      {
                                                        sub_1AE7D29D8();
                                                        sub_1AE4F9094();
                                                        v120 = *v117;
                                                        v121 = (uint64_t *)(v49
                                                                         + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_route);
                                                        sub_1AE4F9094();
                                                        v122 = *v121;
                                                        if (v120)
                                                        {
                                                          if (!v122)
                                                            goto LABEL_35;
                                                          sub_1AE4F6708();
                                                          v123 = sub_1AE4F6730();
                                                          sub_1AE5EA76C(v123, v122, v124, v125, v126, v127, v128, v129, v136, v137, v138, v139, v140, v141, v142, v143, v144, v145, v146,
                                                            v147);
                                                          v131 = v130;
                                                          sub_1AE4F81B8();
                                                          sub_1AE4F76D8();
                                                          if ((v131 & 1) == 0)
                                                            goto LABEL_35;
                                                        }
                                                        else if (v122)
                                                        {
                                                          goto LABEL_35;
                                                        }
                                                        v132 = (uint64_t *)(v141
                                                                         + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_lifeEventIds);
                                                        sub_1AE4F9094();
                                                        v133 = *v132;
                                                        v134 = (uint64_t *)(v49
                                                                         + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_lifeEventIds);
                                                        sub_1AE4F9094();
                                                        v135 = *v134;
                                                        if (v133 && v135)
                                                          sub_1AE5E996C(v133, v135);
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_35:
  sub_1AE4F7740();
}

uint64_t static KTSDataRepresentation.== infix(_:_:)(uint64_t a1, _QWORD *a2)
{
  if (*(_QWORD *)a1 == *a2)
    return (*(uint64_t (**)(_QWORD *))(*(_QWORD *)a1 + 1160))(a2) & 1;
  else
    return 0;
}

uint64_t sub_1AE7BF7D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  char v17;

  v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656D6954646E65 && a2 == 0xE700000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000001AE985DD0 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x65636E6174736964 && a2 == 0xEF7374656B637542;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x80000001AE985E00 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x80000001AE985E20 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0xD000000000000022 && a2 == 0x80000001AE985E40 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AE985E70 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else if (a1 == 0xD000000000000019 && a2 == 0x80000001AE985E90 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 8;
      }
      else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001AE985EB0 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 9;
      }
      else if (a1 == 0xD000000000000017 && a2 == 0x80000001AE985ED0 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 10;
      }
      else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AE985EF0 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 11;
      }
      else if (a1 == 0xD000000000000019 && a2 == 0x80000001AE985F10 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 12;
      }
      else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AE985F30 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 13;
      }
      else
      {
        v8 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 14;
        }
        else
        {
          v9 = a1 == 0x68774B6567617375 && a2 == 0xE800000000000000;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 15;
          }
          else
          {
            v10 = a1 == 0x556C616D6974706FLL && a2 == 0xEF68774B65676173;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 16;
            }
            else if (a1 == 0xD000000000000010 && a2 == 0x80000001AE985F70 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 17;
            }
            else
            {
              v11 = a1 == 0x6C656363416D756ELL && a2 == 0xEE0073746E657645;
              if (v11 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 18;
              }
              else if (a1 == 0xD000000000000012 && a2 == 0x80000001AE985F90 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 19;
              }
              else if (a1 == 0xD000000000000015 && a2 == 0x80000001AE985FB0 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 20;
              }
              else if (a1 == 0xD000000000000010 && a2 == 0x80000001AE985FD0 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 21;
              }
              else if (a1 == 0xD000000000000018 && a2 == 0x80000001AE985FF0 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 22;
              }
              else
              {
                v12 = a1 == 0x656D695464616F72 && a2 == 0xE900000000000073;
                if (v12 || (sub_1AE926D60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 23;
                }
                else if (a1 == 0xD000000000000013 && a2 == 0x80000001AE986020 || (sub_1AE926D60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 24;
                }
                else if (a1 == 0xD000000000000016 && a2 == 0x80000001AE986040 || (sub_1AE926D60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 25;
                }
                else if (a1 == 0xD000000000000016 && a2 == 0x80000001AE986060 || (sub_1AE926D60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 26;
                }
                else
                {
                  v13 = a1 == 0x52726550656D6974 && a2 == 0xEF6570795464616FLL;
                  if (v13 || (sub_1AE926D60() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 27;
                  }
                  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AE986090 || (sub_1AE926D60() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 28;
                  }
                  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AE9860B0 || (sub_1AE926D60() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 29;
                  }
                  else
                  {
                    v14 = a1 == 0x6574756F72 && a2 == 0xE500000000000000;
                    if (v14 || (sub_1AE926D60() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 30;
                    }
                    else
                    {
                      v15 = a1 == 0x6E6576456566696CLL && a2 == 0xEC00000073644974;
                      if (v15 || (sub_1AE926D60() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 31;
                      }
                      else if (a1 == 0x656D67655373746BLL && a2 == 0xED0000736449746ELL)
                      {
                        swift_bridgeObjectRelease();
                        return 32;
                      }
                      else
                      {
                        v17 = sub_1AE926D60();
                        swift_bridgeObjectRelease();
                        if ((v17 & 1) != 0)
                          return 32;
                        else
                          return 33;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE7C04C8()
{
  return 33;
}

uint64_t sub_1AE7C04D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE7C0508 + 4 * byte_1AE95B730[a1]))(0x6D69547472617473, 0xE900000000000065);
}

uint64_t sub_1AE7C0508()
{
  return 0x656D6954646E65;
}

unint64_t sub_1AE7C0520()
{
  return 0xD000000000000010;
}

unint64_t sub_1AE7C0728()
{
  return 0xD000000000000018;
}

uint64_t sub_1AE7C0740()
{
  return 0x656D695464616F72;
}

unint64_t sub_1AE7C0758()
{
  return 0xD000000000000013;
}

unint64_t sub_1AE7C0770()
{
  return 0xD000000000000016;
}

unint64_t sub_1AE7C0788()
{
  return 0xD000000000000016;
}

uint64_t sub_1AE7C07A0()
{
  return 0x52726550656D6974;
}

unint64_t sub_1AE7C07C4()
{
  return 0xD000000000000012;
}

void sub_1AE7C07DC()
{
  JUMPOUT(0x1AE7C07F0);
}

void sub_1AE7C07FC()
{
  JUMPOUT(0x1AE7C0808);
}

uint64_t sub_1AE7C0810()
{
  return 0x6E6576456566696CLL;
}

uint64_t sub_1AE7C0830()
{
  return 0x656D67655373746BLL;
}

uint64_t sub_1AE7C0854()
{
  unsigned __int8 *v0;

  return sub_1AE7C04D0(*v0);
}

uint64_t sub_1AE7C085C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE7BF7D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE7C0880@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE7C04C8();
  *a1 = result;
  return result;
}

uint64_t sub_1AE7C08A4()
{
  sub_1AE7CB858();
  return sub_1AE926F94();
}

uint64_t sub_1AE7C08CC()
{
  sub_1AE7CB858();
  return sub_1AE926FA0();
}

void KTSDataRepresentation.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_1AE501548(&qword_1EED9E350);
  sub_1AE7D29E4(v0);
  sub_1AE4FCADC();
  sub_1AE4F8350(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_elevationGainInMeters);
  v1 = sub_1AE501548(&qword_1EED9A850);
  sub_1AE7D29E4(v1);
  sub_1AE4F8350(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_expectedDurationInSecondsNoTraffic);
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  v2 = sub_1AE501548(&qword_1EED9A888);
  sub_1AE4FB738(v2);
  v3 = sub_1AE501548((uint64_t *)&unk_1EED9E340);
  sub_1AE7D29E4(v3);
  sub_1AE4F8350(OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_optimalUsageKwh);
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4F6624();
}

uint64_t KTSDataRepresentation.__deallocating_deinit()
{
  return sub_1AE7C67A4(KTSDataRepresentation.deinit);
}

void sub_1AE7C0AA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  void (*v40)(uint64_t);
  void (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(void);
  uint64_t v61;

  sub_1AE4F67EC();
  v4 = v0;
  v6 = v5;
  v7 = sub_1AE501548((uint64_t *)&unk_1EED9E340);
  v48 = *(_QWORD *)(v7 - 8);
  v49 = v7;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F686C();
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE5094B0();
  v47 = v10;
  v11 = sub_1AE501548(&qword_1EED9A888);
  v51 = *(_QWORD *)(v11 - 8);
  v52 = v11;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE7D31F0(v13, v44);
  v56 = sub_1AE501548(&qword_1EED9A850);
  v54 = *(_QWORD *)(v56 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F686C();
  v53 = v15;
  sub_1AE4F9350();
  v17 = MEMORY[0x1E0C80A78](v16);
  sub_1AE7D3014(v17, v18, v19, v20, v21, v22, v23, v24, v45);
  v25 = sub_1AE501548(&qword_1EED9E350);
  v58 = *(_QWORD *)(v25 - 8);
  v59 = v25;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v26);
  sub_1AE4F686C();
  v57 = v27;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v28);
  sub_1AE509B9C();
  v29 = sub_1AE501548(&qword_1EEDA2E68);
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  sub_1AE4F90C8();
  sub_1AE4F9858(v6, v6[3]);
  sub_1AE7CB858();
  sub_1AE926F4C();
  sub_1AE4F9094();
  v61 = v4;
  sub_1AE926CA0();
  if (v1)
  {
    v31 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v32 = v3;
    v33 = v29;
  }
  else
  {
    sub_1AE4F9094();
    sub_1AE926CA0();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 16);
    sub_1AE6149B4(v2, v3, v34);
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E78);
    v46 = v29;
    sub_1AE7D2A0C();
    v35 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    v35(v2, v59);
    sub_1AE4F9094();
    sub_1AE501548((uint64_t *)&unk_1EED9A840);
    sub_1AE7CB894();
    sub_1AE7D2A0C();
    sub_1AE7D3380();
    sub_1AE4F9094();
    v36 = sub_1AE7D2D18();
    ((void (*)(uint64_t))v34)(v36);
    sub_1AE926CC4();
    v35(v57, v59);
    v37 = v61 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_durationInSeconds;
    sub_1AE4F9094();
    v60 = *(void (**)(void))(v54 + 16);
    ((void (*)(uint64_t, uint64_t, uint64_t))v60)(v55, v37, v56);
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E90);
    sub_1AE926CC4();
    v38 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
    sub_1AE7D3080(v55);
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE7D338C();
    v60();
    sub_1AE7D2A0C();
    v38(v53, v56);
    sub_1AE7D3380();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EED9A878);
    sub_1AE7CB93C();
    sub_1AE7D2A0C();
    sub_1AE7D3380();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EED9A880);
    sub_1AE7CB9FC();
    sub_1AE7D2A0C();
    sub_1AE7D3380();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EED9A868);
    sub_1AE7CBA80();
    sub_1AE7D2A0C();
    sub_1AE7D3380();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EED9A870);
    sub_1AE7CBB40();
    sub_1AE7D2A0C();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EED9A858);
    sub_1AE7CBBC4();
    sub_1AE7D2968();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EED9A860);
    sub_1AE7CBC84();
    sub_1AE7D2968();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    v39 = sub_1AE7D36BC();
    v40(v39);
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2EE0);
    sub_1AE7D2968();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE926CA0();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    v41 = *(void (**)(uint64_t))(v48 + 16);
    v42 = sub_1AE7D3450();
    v41(v42);
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2EE8);
    sub_1AE926CC4();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
    sub_1AE7D29C0();
    sub_1AE4F9094();
    v43 = sub_1AE7D33A8();
    v41(v43);
    sub_1AE926CC4();
    sub_1AE7D35C4();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE7D3124();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE7D3124();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE7D3124();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EED9E338);
    sub_1AE7CBD08();
    sub_1AE7D2968();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE4F69EC();
    sub_1AE7CBD8C((uint64_t)&unk_1EEDA2EF8);
    sub_1AE7D2A0C();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE4F69EC();
    sub_1AE7CBD8C((uint64_t)&unk_1EEDA2F00);
    sub_1AE7D2A0C();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EED9E320);
    sub_1AE7CBDE0();
    sub_1AE7D2968();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EED9A890);
    sub_1AE7CBE64();
    sub_1AE7D2968();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EED9A8A0);
    sub_1AE7CBF24();
    sub_1AE7D2968();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EED9A898);
    sub_1AE7CBFE4();
    sub_1AE7D2968();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EED9A8A8);
    sub_1AE7CC0A4();
    sub_1AE7D2968();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EED9A8B8);
    sub_1AE7CC128();
    sub_1AE7D2968();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EED9A8B0);
    sub_1AE7CC1AC();
    sub_1AE7D2968();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE501548(&qword_1EEDA2F58);
    sub_1AE7CCC08((uint64_t)&unk_1EEDA2F60);
    sub_1AE926C70();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE4F69EC();
    sub_1AE7D3658((uint64_t)&unk_1EED9D2A8);
    sub_1AE7D3470();
    sub_1AE7D29C0();
    sub_1AE4F9094();
    sub_1AE7D3470();
    v32 = sub_1AE7D3028();
    v33 = v46;
  }
  v31(v32, v33);
  sub_1AE4F667C();
}

uint64_t KTSDataRepresentation.__allocating_init(from:)(uint64_t a1)
{
  return sub_1AE7C3B8C(a1, (void (*)(uint64_t))KTSDataRepresentation.init(from:));
}

void KTSDataRepresentation.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  _BYTE *v35;
  uint64_t v36;
  void (*v37)(uint64_t, _BYTE *, uint64_t);
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _BYTE v46[16];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;

  sub_1AE4F67EC();
  v70 = v1;
  v6 = v5;
  v64 = sub_1AE501548((uint64_t *)&unk_1EED9E340);
  v49 = *(_QWORD *)(v64 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F686C();
  v58 = v8;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE5094B0();
  sub_1AE5085B4(v10);
  v48 = sub_1AE501548(&qword_1EED9A888);
  v47 = *(_QWORD *)(v48 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F9024();
  sub_1AE5085B4(v12);
  v71 = sub_1AE501548(&qword_1EED9A850);
  v50 = *(_QWORD *)(v71 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  v61 = &v46[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v15);
  v17 = &v46[-v16];
  v18 = sub_1AE501548(&qword_1EED9E350);
  v72 = *(_QWORD *)(v18 - 8);
  v73 = v18;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE5056D0();
  MEMORY[0x1E0C80A78](v20);
  sub_1AE7D3318();
  v63 = sub_1AE501548(&qword_1EEDA2F70);
  sub_1AE736BC4();
  MEMORY[0x1E0C80A78](v21);
  sub_1AE4F666C();
  v24 = v23 - v22;
  v65 = v0 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_route;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_route) = 0;
  v66 = (_QWORD *)(v0 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_lifeEventIds);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_lifeEventIds) = 0;
  v68 = v6;
  v69 = v0;
  v67 = (_QWORD *)(v0 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_ktsSegmentIds);
  *v67 = 0;
  sub_1AE4F9858(v6, v6[3]);
  sub_1AE7CB858();
  v62 = v24;
  v25 = v70;
  sub_1AE926F34();
  if (v25)
  {
    v70 = v25;
    LODWORD(v63) = 0;
    LODWORD(v62) = 0;
    LODWORD(v61) = 0;
    LODWORD(v60) = 0;
    LODWORD(v59) = 0;
    LODWORD(v58) = 0;
    LODWORD(v57) = 0;
    v56 = 0;
    v55 = 0;
    v54 = 0;
    v53 = 0;
    v52 = 0;
    v51 = 0;
    v28 = (uint64_t)v68;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for KTSDataRepresentation(0);
    sub_1AE7D2FEC();
  }
  else
  {
    v26 = v4;
    v27 = v61;
    v57 = v2;
    LOBYTE(v76) = 0;
    sub_1AE7D35B8();
    v29 = v69;
    *(_QWORD *)(v69 + 16) = v30;
    LOBYTE(v76) = 1;
    sub_1AE7D35B8();
    *(_QWORD *)(v29 + 24) = v31;
    LOBYTE(v76) = 2;
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F78);
    v32 = v73;
    sub_1AE7D3004();
    v33 = v3;
    v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 32);
    sub_1AE6149B4(v29 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceInMeters, v33, v34);
    sub_1AE501548((uint64_t *)&unk_1EED9A840);
    v75 = 3;
    sub_1AE7CC244();
    sub_1AE7D3004();
    *(_QWORD *)(v29 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceBuckets) = v76;
    LOBYTE(v76) = 4;
    sub_1AE7D3004();
    v34(v29 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_elevationGainInMeters, v26, v32);
    LOBYTE(v76) = 5;
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F90);
    v35 = v17;
    v36 = v71;
    sub_1AE7D3004();
    v37 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v50 + 32);
    v37(v29 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_durationInSeconds, v35, v36);
    LOBYTE(v76) = 6;
    sub_1AE7D3004();
    v37(v29 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_expectedDurationInSecondsNoTraffic, v27, v36);
    sub_1AE501548(&qword_1EED9A878);
    v75 = 7;
    sub_1AE7CC2EC();
    sub_1AE7D2E58();
    *(_QWORD *)(v29 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceSpentInTrafficBuckets) = v76;
    sub_1AE501548(&qword_1EED9A880);
    v75 = 8;
    sub_1AE7CC3AC();
    sub_1AE7D2E58();
    v70 = 0;
    *(_QWORD *)(v29 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_timeSpentInTrafficBuckets) = v76;
    sub_1AE501548(&qword_1EED9A868);
    v75 = 9;
    sub_1AE7CC430();
    sub_1AE7D2CD4();
    v70 = 0;
    sub_1AE7D2D24(v76);
    sub_1AE501548(&qword_1EED9A870);
    v75 = 10;
    sub_1AE7CC4F0();
    sub_1AE4FD480();
    v70 = 0;
    sub_1AE7D2D24(v76);
    sub_1AE501548(&qword_1EED9A858);
    v75 = 11;
    sub_1AE7CC574();
    sub_1AE4FD480();
    v70 = 0;
    sub_1AE7D2D24(v76);
    sub_1AE501548(&qword_1EED9A860);
    v75 = 12;
    sub_1AE7CC634();
    sub_1AE4FD480();
    v70 = 0;
    sub_1AE7D2D24(v76);
    LOBYTE(v76) = 13;
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2FE0);
    sub_1AE7D2CD4();
    v70 = 0;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v69 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_averageSpeedInMetersPerSecond, v60, v48);
    sub_1AE7D3760(14);
    sub_1AE926BC8();
    v70 = 0;
    *(_QWORD *)(v69 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_score) = v38;
    LOBYTE(v76) = 15;
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2FE8);
    sub_1AE7D2CD4();
    v70 = 0;
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32);
    v39(v69 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_usageKwh, v59, v64);
    LOBYTE(v76) = 16;
    sub_1AE7D2CD4();
    v70 = 0;
    v39(v69 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_optimalUsageKwh, v58, v64);
    sub_1AE7D3760(17);
    v40 = sub_1AE926BE0();
    v70 = 0;
    *(_QWORD *)(v69 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numBrakingEvents) = v40;
    v41 = sub_1AE7D34D8(18);
    v70 = 0;
    *(_QWORD *)(v69 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numAccelEvents) = v41;
    v42 = sub_1AE7D34D8(19);
    v70 = 0;
    *(_QWORD *)(v69 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numHighSpeedEvents) = v42;
    sub_1AE501548(&qword_1EED9E338);
    v75 = 20;
    sub_1AE7CC6E0();
    sub_1AE4FD480();
    v70 = 0;
    sub_1AE7D2D24(v76);
    sub_1AE4F69EC();
    v75 = 21;
    sub_1AE7CC764((uint64_t)&unk_1EEDA2FF8);
    sub_1AE7D2CD4();
    v70 = 0;
    sub_1AE7D2D24(v76);
    sub_1AE4F69EC();
    v75 = 22;
    sub_1AE7CC764((uint64_t)&unk_1EEDA3000);
    sub_1AE7D2CD4();
    v70 = 0;
    sub_1AE7D2D24(v76);
    sub_1AE501548(&qword_1EED9E320);
    v75 = 23;
    sub_1AE7CC7B8();
    sub_1AE4FD480();
    v70 = 0;
    sub_1AE7D2D24(v76);
    sub_1AE501548(&qword_1EED9A890);
    v75 = 24;
    sub_1AE7CC83C();
    sub_1AE4FD480();
    v70 = 0;
    sub_1AE7D2D24(v76);
    sub_1AE501548(&qword_1EED9A8A0);
    v75 = 25;
    sub_1AE7CC8FC();
    sub_1AE4FD480();
    v70 = 0;
    sub_1AE7D2D24(v76);
    sub_1AE501548(&qword_1EED9A898);
    v75 = 26;
    sub_1AE7CC9BC();
    sub_1AE4FD480();
    v70 = 0;
    sub_1AE7D2D24(v76);
    sub_1AE501548(&qword_1EED9A8A8);
    v75 = 27;
    sub_1AE7CCA7C();
    sub_1AE4FD480();
    v70 = 0;
    sub_1AE7D2D24(v76);
    sub_1AE501548(&qword_1EED9A8B8);
    v75 = 28;
    sub_1AE7CCB00();
    sub_1AE4FD480();
    v70 = 0;
    sub_1AE7D2D24(v76);
    sub_1AE501548(&qword_1EED9A8B0);
    v75 = 29;
    sub_1AE7CCB84();
    sub_1AE4FD480();
    v70 = 0;
    sub_1AE7D2D24(v76);
    sub_1AE501548(&qword_1EEDA2F58);
    LOBYTE(v76) = 30;
    sub_1AE7CCC08((uint64_t)&unk_1EEDA3058);
    v43 = v70;
    sub_1AE926B98();
    if (!v43)
    {
      sub_1AE4FB9BC();
      sub_1AE7D36EC();
      sub_1AE4F69EC();
      v75 = 31;
      sub_1AE7D3658((uint64_t)&unk_1EED9D2F8);
      sub_1AE7D3098();
      v44 = v74;
      v45 = v66;
      sub_1AE4FB9BC();
      *v45 = v44;
      swift_bridgeObjectRelease();
      LOBYTE(v74) = 32;
      sub_1AE7D3098();
      sub_1AE50399C();
      sub_1AE4FB9BC();
      sub_1AE7D36EC();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v68);
      goto LABEL_5;
    }
    sub_1AE50399C();
    sub_1AE4FB730();
    v28 = (uint64_t)v68;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v28);
LABEL_5:
  sub_1AE4F667C();
}

uint64_t sub_1AE7C2C58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 1176))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1AE7C2C84()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 1168))();
}

uint64_t sub_1AE7C2CAC(uint64_t *a1, _QWORD **a2)
{
  return static KTSDataRepresentation.== infix(_:_:)(*a1, *a2) & 1;
}

uint64_t sub_1AE7C2CCC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 1152))();
}

uint64_t KTSDataAggregateRepresentation.maxTripDistanceInMeters.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AE7C2D24(&OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_maxTripDistanceInMeters, a1);
}

uint64_t KTSDataAggregateRepresentation.avgTripDistanceInMeters.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AE7C2D24(&OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgTripDistanceInMeters, a1);
}

uint64_t KTSDataAggregateRepresentation.maxElevationGainInMeters.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AE7C2D24(&OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_maxElevationGainInMeters, a1);
}

uint64_t KTSDataAggregateRepresentation.avgElevationGainInMeters.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AE7C2D24(&OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgElevationGainInMeters, a1);
}

uint64_t sub_1AE7C2D24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *a1;
  v5 = sub_1AE501548(&qword_1EED9E350);
  return sub_1AE4FD010(a2, v4, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 16));
}

uint64_t KTSDataAggregateRepresentation.percentTimeSpentAtSpeedBuckets.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.percentTimeSpentAtTrafficBuckets.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.percentTimeSpentAtRelativeSpeeds.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.percentTimeSpentAtRoadTypes.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.percentTimeSpentInWeatherTypes.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.percentTimeSpentInTerrainTypes.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.percentDistanceTraveledAtSpeedBuckets.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.percentDistanceTraveledAtTrafficBuckets.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.percentDistanceTraveledAtRelativeSpeeds.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.percentDistanceTraveledForRoadTypes.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.percentDistanceTraveledInWeatherTypes.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.percentDistanceTraveledInTerrainTypes.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.scorePerSpeedBucket.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.scorePerTrafficBucket.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.scorePerRelativeSpeed.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.scorePerRoadType.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.scorePerWeatherType.getter()
{
  return sub_1AE4FDD24();
}

uint64_t KTSDataAggregateRepresentation.scorePerTerrainType.getter()
{
  return sub_1AE4FDD24();
}

double KTSDataAggregateRepresentation.avgNumBrakingEvents.getter()
{
  return sub_1AE500038(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgNumBrakingEvents);
}

double KTSDataAggregateRepresentation.avgNumAccelEvents.getter()
{
  return sub_1AE500038(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgNumAccelEvents);
}

double KTSDataAggregateRepresentation.avgNumHighSpeedEvents.getter()
{
  return sub_1AE500038(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgNumHighSpeedEvents);
}

double KTSDataAggregateRepresentation.mostEfficientDriveScore.getter()
{
  return sub_1AE500038(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_mostEfficientDriveScore);
}

uint64_t KTSDataAggregateRepresentation.routeHeatMap.getter()
{
  return sub_1AE4FDD24();
}

uint64_t sub_1AE7C2E78()
{
  unint64_t v0;

  v0 = sub_1AE926DA8();
  sub_1AE4F6648();
  if (v0 >= 0x1B)
    return 27;
  else
    return v0;
}

uint64_t sub_1AE7C2EC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AE7C2F04 + 4 * byte_1AE95B751[a1]))(0xD000000000000017, 0x80000001AE97B8E0);
}

void sub_1AE7C2F04()
{
  sub_1AE4FDA58();
}

uint64_t sub_1AE7C30A4()
{
  return 0x6165486574756F72;
}

void sub_1AE7C30C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_1AE5108F4(*a1, *a2);
}

void sub_1AE7C30D4()
{
  unsigned __int8 *v0;

  sub_1AE512E0C(*v0);
}

uint64_t sub_1AE7C30DC(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1AE5E8618(a1, *v1);
}

void sub_1AE7C30E4(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54F828(a1, *v1);
}

uint64_t sub_1AE7C30EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE7C2E78();
  *a1 = result;
  return result;
}

void sub_1AE7C3118(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_1AE7C2EC8(*v1);
  a1[1] = v3;
  sub_1AE4F6664();
}

uint64_t sub_1AE7C313C()
{
  unsigned __int8 *v0;

  return sub_1AE7C30C4(*v0);
}

uint64_t sub_1AE7C3144@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE7C2EC4();
  *a1 = result;
  return result;
}

void sub_1AE7C3168(_BYTE *a1@<X8>)
{
  *a1 = 27;
}

uint64_t sub_1AE7C3174()
{
  sub_1AE7CCD0C();
  return sub_1AE926F94();
}

uint64_t sub_1AE7C319C()
{
  sub_1AE7CCD0C();
  return sub_1AE926FA0();
}

uint64_t sub_1AE7C3B70(uint64_t a1)
{
  return sub_1AE7C3B8C(a1, (void (*)(uint64_t))sub_1AE7C3BDC);
}

uint64_t sub_1AE7C3B8C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;

  v4 = swift_allocObject();
  a2(a1);
  return v4;
}

void sub_1AE7C3BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(_QWORD, _QWORD, _QWORD);
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unsigned __int8 v30;
  char *v31;
  int v32;
  char *v33;
  void (*v34)(_QWORD, _QWORD, _QWORD);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char *v43;
  double v44;
  double v45;
  double v46;
  double v47;
  char *v48;
  char *v49;
  char *v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(_QWORD, _QWORD, _QWORD);
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;

  sub_1AE4F67EC();
  v68 = v11;
  v15 = v10;
  v17 = v16;
  v66 = sub_1AE501548(&qword_1EED9E350);
  v69 = *(_QWORD *)(v66 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F686C();
  v64 = v19;
  sub_1AE4F9350();
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v50 - v22;
  MEMORY[0x1E0C80A78](v21);
  sub_1AE6906A8();
  MEMORY[0x1E0C80A78](v24);
  sub_1AE5094B0();
  v65 = v25;
  v26 = sub_1AE501548(&qword_1EEDA3128);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v27);
  sub_1AE5009EC();
  v28 = v17[3];
  v29 = v17[4];
  v67 = v17;
  v30 = sub_1AE4F9858(v17, v28);
  sub_1AE7CCD0C();
  swift_retain();
  v31 = v68;
  sub_1AE926F34();
  v32 = (int)v31;
  if (v31)
  {
    v68 = v31;
    sub_1AE4F682C();
    LODWORD(v61) = 0;
    sub_1AE509674();
  }
  else
  {
    v68 = v23;
    v63 = v13;
    v50 = v15;
    LOBYTE(v70) = 0;
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F78);
    v13 = v66;
    sub_1AE7D34C0();
    sub_1AE926BEC();
    v33 = v50;
    v34 = v65;
    v65 = *(void (**)(_QWORD, _QWORD, _QWORD))(v69 + 32);
    v65(&v50[OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_maxTripDistanceInMeters], v34, v13);
    LOBYTE(v70) = 1;
    sub_1AE7D34C0();
    sub_1AE7D3004();
    v65(&v33[OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgTripDistanceInMeters], v12, v13);
    LOBYTE(v70) = 2;
    v35 = (uint64_t)v68;
    sub_1AE7D2F20();
    sub_1AE7D3114((uint64_t)&v33[OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_maxElevationGainInMeters], v35);
    LOBYTE(v70) = 3;
    v36 = v64;
    sub_1AE7D2F20();
    sub_1AE7D3114((uint64_t)&v50[OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgElevationGainInMeters], v36);
    LODWORD(v13) = sub_1AE501548(&qword_1EEDA3078);
    v30 = v14;
    v14 = sub_1AE7CE42C();
    sub_1AE926BEC();
    v23 = v50;
    *(_QWORD *)&v50[OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentAtSpeedBuckets] = v70;
    v37 = sub_1AE501548(&qword_1EEDA3088);
    v29 = sub_1AE7CE498();
    sub_1AE926BEC();
    v64 = v37;
    v65 = (void (*)(_QWORD, _QWORD, _QWORD))v29;
    *(_QWORD *)&v23[OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentAtTrafficBuckets] = v70;
    LODWORD(v29) = sub_1AE501548(&qword_1EEDA3098);
    v38 = sub_1AE7CE504();
    sub_1AE73548C();
    v62 = v38;
    *(_QWORD *)&v23[OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentAtRelativeSpeeds] = v70;
    v39 = sub_1AE501548(&qword_1EEDA30A8);
    sub_1AE7CE570();
    sub_1AE7D3368();
    v61 = v40;
    sub_1AE73548C();
    v60 = v39;
    *(_QWORD *)&v23[OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentAtRoadTypes] = v70;
    v41 = sub_1AE501548(&qword_1EEDA30B8);
    sub_1AE7CE5DC();
    sub_1AE7D3368();
    v59 = v41;
    v32 = v42;
    sub_1AE73548C();
    v68 = 0;
    *(_QWORD *)&v23[OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentInWeatherTypes] = v70;
    sub_1AE501548(&qword_1EEDA30C8);
    LODWORD(v23) = sub_1AE7CE648();
    LODWORD(v12) = v26;
    v43 = v68;
    sub_1AE926BEC();
    v68 = v43;
    if (v43)
    {
      sub_1AE7D2994();
      sub_1AE4FBEA0();
      v32 = 0;
      sub_1AE7D2B24();
    }
    else
    {
      sub_1AE7D2DB0(v70);
      sub_1AE506408();
      v68 = 0;
      sub_1AE7D2DB0(v70);
      sub_1AE506408();
      v68 = 0;
      sub_1AE7D2DB0(v70);
      sub_1AE506408();
      v68 = 0;
      sub_1AE7D2DB0(v70);
      sub_1AE506408();
      v68 = 0;
      sub_1AE7D2DB0(v70);
      sub_1AE506408();
      v68 = 0;
      sub_1AE7D2DB0(v70);
      sub_1AE506408();
      v68 = 0;
      sub_1AE7D2DB0(v70);
      sub_1AE506408();
      v68 = 0;
      sub_1AE7D2DB0(v70);
      sub_1AE506408();
      v68 = 0;
      sub_1AE7D2DB0(v70);
      sub_1AE506408();
      v68 = 0;
      sub_1AE7D2DB0(v70);
      sub_1AE506408();
      v68 = 0;
      sub_1AE7D2DB0(v70);
      sub_1AE506408();
      v68 = 0;
      sub_1AE7D2DB0(v70);
      sub_1AE506408();
      v68 = 0;
      sub_1AE7D2DB0(v70);
      sub_1AE7D2CF4(22);
      v68 = 0;
      sub_1AE7D358C(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgNumBrakingEvents, v44);
      sub_1AE7D2CF4(23);
      v68 = 0;
      sub_1AE7D358C(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgNumAccelEvents, v45);
      sub_1AE7D2CF4(24);
      v68 = 0;
      sub_1AE7D358C(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgNumHighSpeedEvents, v46);
      sub_1AE7D2CF4(25);
      v68 = 0;
      sub_1AE7D358C(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_mostEfficientDriveScore, v47);
      sub_1AE501548(&qword_1EEDA30F0);
      sub_1AE7CE6B4();
      v48 = v68;
      sub_1AE926B98();
      v68 = v48;
      if (v48)
      {
        sub_1AE7D2994();
        sub_1AE4FBEA0();
        v30 = 0;
        sub_1AE7D2B80();
      }
      else
      {
        *(_QWORD *)&v50[OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_routeHeatMap] = v70;
        sub_1AE4FC564();
        sub_1AE57C238((uint64_t)v67, (uint64_t)&v70);
        v49 = v68;
        KTSDataRepresentation.init(from:)();
        v68 = v49;
        if (!v49)
        {
          sub_1AE4FBEA0();
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v67);
          goto LABEL_44;
        }
        sub_1AE4FBEA0();
        sub_1AE7D2B80();
        v30 = 1;
      }
    }
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v67);
  if ((v30 & 1) == 0)
  {
    if ((_DWORD)v61)
      sub_1AE7D2D64(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_maxTripDistanceInMeters);
    if (v52)
      sub_1AE7D2D64(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgTripDistanceInMeters);
    if (v55)
      sub_1AE7D2D64(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_maxElevationGainInMeters);
    if (v53)
      sub_1AE7D2D64(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgElevationGainInMeters);
    if (v54)
      sub_1AE507F14();
    if (v51)
    {
      sub_1AE507F14();
      if (!(_DWORD)v23)
        goto LABEL_17;
    }
    else if (!(_DWORD)v23)
    {
LABEL_17:
      if ((_DWORD)v12)
        goto LABEL_18;
      goto LABEL_47;
    }
    sub_1AE507F14();
    if ((_DWORD)v12)
    {
LABEL_18:
      sub_1AE507F14();
      if (!(_DWORD)v29)
        goto LABEL_19;
      goto LABEL_48;
    }
LABEL_47:
    if (!(_DWORD)v29)
    {
LABEL_19:
      if (v32)
        goto LABEL_20;
      goto LABEL_49;
    }
LABEL_48:
    sub_1AE507F14();
    if (v32)
    {
LABEL_20:
      sub_1AE507F14();
      if (!(_DWORD)v13)
        goto LABEL_21;
      goto LABEL_50;
    }
LABEL_49:
    if (!(_DWORD)v13)
    {
LABEL_21:
      if (!v14)
      {
LABEL_23:
        if (v56)
          sub_1AE507F14();
        if (v57)
          sub_1AE507F14();
        if (v58)
          sub_1AE507F14();
        if (a10)
          sub_1AE507F14();
        if ((_DWORD)v59)
          sub_1AE507F14();
        if ((_DWORD)v60)
          sub_1AE507F14();
        if ((_DWORD)v62)
          sub_1AE507F14();
        if ((_DWORD)v63)
          sub_1AE507F14();
        if ((_DWORD)v64)
          sub_1AE507F14();
        if ((_DWORD)v65)
          sub_1AE507F14();
        type metadata accessor for KTSDataAggregateRepresentation(0);
        sub_1AE7D2FEC();
        goto LABEL_44;
      }
LABEL_22:
      sub_1AE507F14();
      goto LABEL_23;
    }
LABEL_50:
    sub_1AE507F14();
    if (!v14)
      goto LABEL_23;
    goto LABEL_22;
  }
LABEL_44:
  sub_1AE4F667C();
}

uint64_t sub_1AE7C4920()
{
  uint64_t v0;

  sub_1AE7BDF28();
  sub_1AE925F50();
  sub_1AE926040();
  sub_1AE4F665C();
  sub_1AE92691C();
  sub_1AE7D3598();
  sub_1AE7BD5F8();
  sub_1AE926D18();
  sub_1AE5066EC();
  sub_1AE4F665C();
  sub_1AE7D2980();
  sub_1AE501548(&qword_1EED9E350);
  sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E08);
  sub_1AE926D18();
  sub_1AE5066EC();
  sub_1AE4F67AC();
  sub_1AE7D2980();
  sub_1AE7D2FA4();
  sub_1AE5066EC();
  sub_1AE4F76D8();
  sub_1AE7D2DD4();
  sub_1AE7D2FA4();
  sub_1AE5066EC();
  sub_1AE4F76D8();
  sub_1AE7D2DD4();
  sub_1AE7D2FA4();
  sub_1AE5066EC();
  sub_1AE4F665C();
  sub_1AE5066EC();
  sub_1AE7CB72C();
  sub_1AE4F66C4();
  sub_1AE925C68();
  sub_1AE5066EC();
  sub_1AE4F665C();
  sub_1AE4F81B8();
  sub_1AE7D2C70();
  sub_1AE7CB6F0();
  sub_1AE4F6730();
  sub_1AE7D2E90();
  sub_1AE5066EC();
  sub_1AE4F81B8();
  sub_1AE4F76D8();
  sub_1AE7D2C70();
  sub_1AE7CB768();
  sub_1AE4F6708();
  sub_1AE7D2E90();
  sub_1AE5066EC();
  sub_1AE4F76D8();
  sub_1AE4F67AC();
  sub_1AE7D2C70();
  sub_1AE7CB7A4();
  sub_1AE4F66C4();
  sub_1AE7D2E90();
  sub_1AE5066EC();
  sub_1AE4F665C();
  sub_1AE4F76D8();
  sub_1AE7D2C70();
  sub_1AE7CB7E0();
  sub_1AE4F6708();
  sub_1AE7D2E90();
  sub_1AE5066EC();
  sub_1AE4F76D8();
  sub_1AE4F6728();
  sub_1AE7D2C70();
  sub_1AE7CB81C();
  sub_1AE4F6708();
  sub_1AE7D2E90();
  sub_1AE5066EC();
  sub_1AE4F76D8();
  sub_1AE4F6728();
  sub_1AE7D2980();
  sub_1AE4F67A4();
  sub_1AE7D311C();
  sub_1AE5066EC();
  sub_1AE4F6728();
  sub_1AE4F6710();
  sub_1AE7D2C84();
  sub_1AE4FB764();
  sub_1AE925C68();
  sub_1AE5066EC();
  sub_1AE4F6710();
  sub_1AE4F81B8();
  sub_1AE7D2C84();
  sub_1AE4F6730();
  sub_1AE7D32F0();
  sub_1AE5066EC();
  sub_1AE4F81B8();
  sub_1AE4F6728();
  sub_1AE5066EC();
  sub_1AE4F6730();
  sub_1AE925C68();
  sub_1AE5066EC();
  sub_1AE4F81B8();
  sub_1AE4F6728();
  sub_1AE7D2980();
  sub_1AE4F6730();
  sub_1AE7D36A4();
  sub_1AE5066EC();
  sub_1AE4F81B8();
  sub_1AE4F6728();
  sub_1AE7D2980();
  sub_1AE4F6730();
  sub_1AE7D3698();
  sub_1AE5066EC();
  sub_1AE4F81B8();
  sub_1AE4F76D8();
  sub_1AE7D2980();
  sub_1AE4F6730();
  sub_1AE925C68();
  sub_1AE5066EC();
  sub_1AE4F81B8();
  sub_1AE4F6728();
  sub_1AE7D2C84();
  sub_1AE4F6730();
  sub_1AE925C68();
  sub_1AE5066EC();
  sub_1AE4F81B8();
  sub_1AE4F6710();
  sub_1AE7D2C84();
  sub_1AE4F6730();
  sub_1AE7D32F0();
  sub_1AE5066EC();
  sub_1AE4F81B8();
  sub_1AE4F6710();
  sub_1AE7D2DD4();
  sub_1AE4F6730();
  sub_1AE925C68();
  sub_1AE5066EC();
  sub_1AE4F81B8();
  sub_1AE4F67AC();
  sub_1AE7D2980();
  sub_1AE4F6730();
  sub_1AE7D36A4();
  sub_1AE5066EC();
  sub_1AE4F81B8();
  sub_1AE4F67AC();
  sub_1AE7D2980();
  sub_1AE4F6730();
  sub_1AE7D3698();
  sub_1AE5066EC();
  sub_1AE4F81B8();
  sub_1AE4F665C();
  sub_1AE5066EC();
  sub_1AE7D2E20(*(double *)(v0
                          + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgNumBrakingEvents));
  sub_1AE7D2C84();
  sub_1AE7D2E20(*(double *)(v0
                          + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgNumHighSpeedEvents));
  sub_1AE5066EC();
  sub_1AE7D2E20(*(double *)(v0 + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgNumAccelEvents));
  sub_1AE5066EC();
  sub_1AE7D2E20(*(double *)(v0
                          + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_mostEfficientDriveScore));
  sub_1AE4FF0F0();
  sub_1AE7C50D0();
  sub_1AE4F81B8();
  sub_1AE4F6648();
  return sub_1AE753ADC();
}

uint64_t sub_1AE7C50D0()
{
  uint64_t v1;

  sub_1AE7722CC();
  swift_bridgeObjectRetain();
  v1 = sub_1AE926034();
  sub_1AE925F5C();
  return v1;
}

void sub_1AE7C5150(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  void (*v67)(uint64_t);
  uint64_t v68;
  uint64_t v69;
  double *v70;
  double v71;
  double *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t **********v97;
  uint64_t *********v98;
  uint64_t ********v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *******v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t ******v105;
  uint64_t *****v106;
  uint64_t ****v107;
  uint64_t ***v108;
  uint64_t **v109;
  uint64_t *v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  char v123;
  char v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;

  v6 = sub_1AE501548((uint64_t *)&unk_1EED9E340);
  v148 = *(_QWORD *)(v6 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE5056D0();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE5094B0();
  v149 = v9;
  v10 = sub_1AE501548(&qword_1EED9A888);
  v152 = *(_QWORD *)(v10 - 8);
  v153 = v10;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F686C();
  v151 = v12;
  sub_1AE4F9350();
  v14 = MEMORY[0x1E0C80A78](v13);
  sub_1AE7D362C(v14, v15, v16, v17, v18, v19, v20, v21, v143);
  v157 = sub_1AE501548(&qword_1EED9A850);
  v154 = *(_QWORD *)(v157 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v22);
  v156 = (char *)&v143 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9350();
  v25 = MEMORY[0x1E0C80A78](v24);
  sub_1AE7D3014(v25, v26, v27, v28, v29, v30, v31, v32, v143);
  sub_1AE501548(&qword_1EED9E350);
  sub_1AE736BC4();
  MEMORY[0x1E0C80A78](v33);
  sub_1AE505DEC();
  MEMORY[0x1E0C80A78](v34);
  sub_1AE509B9C();
  type metadata accessor for KTSDataAggregateRepresentation(0);
  v35 = swift_dynamicCastClass();
  if (v35)
  {
    v36 = v35;
    sub_1AE4F9094();
    v37 = *(double *)(v1 + 16);
    sub_1AE4F9094();
    if (v37 == *(double *)(v36 + 16))
    {
      sub_1AE4F9094();
      v38 = *(double *)(v1 + 24);
      sub_1AE4F9094();
      if (v38 == *(double *)(v36 + 24))
      {
        v144 = v4;
        v145 = v6;
        v147 = a1;
        sub_1AE4F9094();
        sub_1AE7D2F6C(v2);
        v146 = v36;
        sub_1AE4F9094();
        v39 = sub_1AE7D2F6C(v3);
        sub_1AE7D2F18(v39, &qword_1EED996A0);
        v41 = v40;
        swift_retain();
        v42 = sub_1AE7D30B0();
        sub_1AE7D3550(v3);
        sub_1AE7D3550(v2);
        if ((v42 & 1) == 0)
          goto LABEL_60;
        sub_1AE4F9094();
        sub_1AE7D2F6C(v2);
        sub_1AE4F9094();
        sub_1AE7D2F6C(v3);
        v43 = sub_1AE7D30B0();
        sub_1AE7D3550(v3);
        sub_1AE7D3550(v2);
        if ((v43 & 1) == 0)
          goto LABEL_60;
        v143 = v41;
        v44 = v1 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_durationInSeconds;
        sub_1AE4F9094();
        v45 = v154;
        v46 = v155;
        v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v154 + 16);
        v48 = v44;
        v49 = v157;
        v47(v155, v48, v157);
        v50 = v49;
        v51 = v146 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_durationInSeconds;
        sub_1AE4F9094();
        v52 = (uint64_t)v156;
        v53 = ((uint64_t (*)(char *, uint64_t, uint64_t))v47)(v156, v51, v50);
        sub_1AE7D2F18(v53, &qword_1EED996A8);
        v54 = sub_1AE7D2E08();
        v55 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
        v55(v52, v50);
        v55(v46, v50);
        if ((v54 & 1) == 0)
          goto LABEL_60;
        v56 = v1;
        sub_1AE4F9094();
        sub_1AE7D37F4(v46);
        sub_1AE4F9094();
        sub_1AE7D37F4(v52);
        v57 = sub_1AE7D2E08();
        v58 = sub_1AE7D34B4();
        ((void (*)(uint64_t))v55)(v58);
        v59 = sub_1AE7D3488();
        ((void (*)(uint64_t))v55)(v59);
        if ((v57 & 1) == 0)
          goto LABEL_60;
        sub_1AE4F9094();
        sub_1AE7D315C();
        sub_1AE4F9094();
        sub_1AE4F66CC();
        sub_1AE4F66C4();
        sub_1AE753ADC();
        sub_1AE80E704();
        sub_1AE4FCE28();
        sub_1AE4F665C();
        sub_1AE4F9094();
        sub_1AE7D315C();
        sub_1AE4F9094();
        sub_1AE4F66CC();
        sub_1AE4F66C4();
        sub_1AE753ADC();
        sub_1AE80E8DC();
        sub_1AE4FCE28();
        sub_1AE4F665C();
        sub_1AE4F9094();
        sub_1AE7D315C();
        sub_1AE4F9094();
        sub_1AE4F66CC();
        sub_1AE4F66C4();
        sub_1AE753ADC();
        sub_1AE80EAB4();
        sub_1AE4FCE28();
        sub_1AE4F665C();
        sub_1AE4F9094();
        sub_1AE7D315C();
        sub_1AE4F9094();
        sub_1AE4F66CC();
        sub_1AE4F66C4();
        sub_1AE753ADC();
        sub_1AE80EC8C();
        sub_1AE4FCE28();
        sub_1AE4F665C();
        sub_1AE4F9094();
        sub_1AE7D315C();
        sub_1AE4F9094();
        sub_1AE4F66CC();
        sub_1AE4F66C4();
        sub_1AE753ADC();
        sub_1AE80EE64();
        sub_1AE4FCE28();
        sub_1AE4F665C();
        sub_1AE4F9094();
        sub_1AE7D315C();
        sub_1AE4F9094();
        sub_1AE4F66CC();
        sub_1AE4F66C4();
        sub_1AE753ADC();
        sub_1AE80F03C();
        sub_1AE4FCE28();
        sub_1AE4F665C();
        sub_1AE4F9094();
        v60 = v152;
        v61 = *(void (**)(uint64_t))(v152 + 16);
        v62 = sub_1AE7D3038();
        v61(v62);
        sub_1AE4F9094();
        v63 = sub_1AE7D3450();
        v65 = sub_1AE7D3548(v63, v64);
        sub_1AE7D2F18(v65, &qword_1EED99690);
        sub_1AE7D3660();
        v66 = sub_1AE7D2DEC();
        v67 = *(void (**)(uint64_t))(v60 + 8);
        v68 = sub_1AE7D2D18();
        v67(v68);
        v69 = sub_1AE5061E4();
        v67(v69);
        if ((v66 & 1) == 0)
          goto LABEL_60;
        v70 = (double *)(v56 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_score);
        sub_1AE4F9094();
        v71 = *v70;
        v72 = (double *)(v146 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_score);
        sub_1AE4F9094();
        if (v71 != *v72)
          goto LABEL_60;
        v157 = v56;
        sub_1AE4F9094();
        v73 = v148;
        v74 = v149;
        v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 16);
        v76 = sub_1AE7D3450();
        v77 = v145;
        sub_1AE7D3078(v76, v78);
        v79 = v146;
        sub_1AE4F9094();
        v80 = v144;
        v81 = sub_1AE7D34B4();
        v83 = sub_1AE7D3078(v81, v82);
        sub_1AE7D2F18(v83, &qword_1EED99698);
        v84 = sub_1AE7D3308();
        v85 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
        v85(v80, v77);
        v85(v74, v77);
        if ((v84 & 1) == 0)
          goto LABEL_60;
        v86 = v157 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_optimalUsageKwh;
        sub_1AE4F9094();
        v87 = v149;
        v88 = v145;
        v75(v149, v86, v145);
        v89 = v79 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_optimalUsageKwh;
        sub_1AE4F9094();
        v90 = v144;
        v75(v144, v89, v88);
        v91 = sub_1AE7D3308();
        v85(v90, v88);
        v85(v87, v88);
        if ((v91 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2D84();
        sub_1AE4F9094();
        v92 = *(_QWORD *)v91;
        v93 = (uint64_t *)(v79 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numBrakingEvents);
        sub_1AE4F9094();
        if (v92 != *v93)
          goto LABEL_60;
        sub_1AE7D2D84();
        sub_1AE4F9094();
        v94 = *v93;
        v95 = (uint64_t *)(v79 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numAccelEvents);
        sub_1AE4F9094();
        if (v94 != *v95)
          goto LABEL_60;
        sub_1AE7D2D84();
        sub_1AE4F9094();
        v96 = *v95;
        v97 = (uint64_t **********)(v79 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numHighSpeedEvents);
        sub_1AE4F9094();
        if ((uint64_t *********)v96 != *v97)
          goto LABEL_60;
        sub_1AE7D2D84();
        sub_1AE4F9094();
        v98 = *v97;
        sub_1AE4F9094();
        sub_1AE4F66CC();
        sub_1AE4F66C4();
        sub_1AE753ADC();
        sub_1AE80F214();
        sub_1AE4FCE28();
        sub_1AE4F665C();
        if ((v96 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2D84();
        sub_1AE4F9094();
        v99 = *v98;
        sub_1AE4F9094();
        sub_1AE4F66CC();
        sub_1AE4F66C4();
        v100 = sub_1AE753ADC();
        sub_1AE80F238(v100, v101);
        sub_1AE4FCE28();
        sub_1AE4F665C();
        sub_1AE7D2D84();
        sub_1AE4F9094();
        v102 = *v99;
        sub_1AE4F9094();
        sub_1AE4F66CC();
        sub_1AE4F66C4();
        v103 = sub_1AE753ADC();
        sub_1AE80F244(v103, v104);
        sub_1AE4FCE28();
        sub_1AE4F665C();
        sub_1AE7D2D84();
        sub_1AE4F9094();
        v105 = *v102;
        sub_1AE4F9094();
        sub_1AE4F66CC();
        sub_1AE4F66C4();
        sub_1AE753ADC();
        sub_1AE80F3B4();
        sub_1AE4FCE28();
        sub_1AE4F665C();
        sub_1AE7D2D84();
        sub_1AE4F9094();
        v106 = *v105;
        sub_1AE4F9094();
        sub_1AE4F66CC();
        sub_1AE4F66C4();
        sub_1AE753ADC();
        sub_1AE80F7A8();
        sub_1AE4FCE28();
        sub_1AE4F665C();
        sub_1AE7D2D84();
        sub_1AE4F9094();
        v107 = *v106;
        sub_1AE4F9094();
        sub_1AE4F66CC();
        sub_1AE4F66C4();
        sub_1AE753ADC();
        sub_1AE80F980();
        sub_1AE4FCE28();
        sub_1AE4F665C();
        sub_1AE7D2D84();
        sub_1AE4F9094();
        v108 = *v107;
        sub_1AE4F9094();
        sub_1AE4F66CC();
        sub_1AE4F66C4();
        sub_1AE753ADC();
        sub_1AE80FB58();
        sub_1AE4FCE28();
        sub_1AE4F665C();
        sub_1AE7D2D84();
        sub_1AE4F9094();
        v109 = *v108;
        sub_1AE4F9094();
        sub_1AE4F66CC();
        sub_1AE4F66C4();
        sub_1AE753ADC();
        sub_1AE80FD30();
        sub_1AE4FCE28();
        sub_1AE4F665C();
        sub_1AE7D2D84();
        sub_1AE4F9094();
        v110 = *v109;
        v111 = (uint64_t *)(v79 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_route);
        sub_1AE4F9094();
        v112 = *v111;
        if (v110)
        {
          if (!v112)
            goto LABEL_60;
          sub_1AE4F66C4();
          v113 = sub_1AE4F66CC();
          sub_1AE5EA76C(v113, v112, v114, v115, v116, v117, v118, v119, v143, v144, v145, v146, v147, v148, v149, v150, v151, v152, v153,
            v154);
          sub_1AE4FCE28();
          sub_1AE4F665C();
          if ((v96 & 1) == 0)
            goto LABEL_60;
        }
        else if (v112)
        {
          goto LABEL_60;
        }
        sub_1AE7D2D84();
        sub_1AE4F9094();
        v120 = *v110;
        v121 = (uint64_t *)(v79 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_lifeEventIds);
        sub_1AE4F9094();
        v122 = *v121;
        if (v120)
        {
          if (!v122 || (sub_1AE5E996C(v120, v122) & 1) == 0)
            goto LABEL_60;
        }
        else if (v122)
        {
          goto LABEL_60;
        }
        if ((sub_1AE7D2A14() & 1) == 0)
          goto LABEL_60;
        if ((sub_1AE7D2A14() & 1) == 0)
          goto LABEL_60;
        if ((sub_1AE7D2A14() & 1) == 0)
          goto LABEL_60;
        if ((sub_1AE7D2A14() & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentAtSpeedBuckets);
        if ((v123 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentAtTrafficBuckets);
        if ((v124 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentAtRelativeSpeeds);
        if ((v125 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentAtRoadTypes);
        if ((v126 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentInWeatherTypes);
        if ((v127 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentInTerrainTypes);
        if ((v128 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentDistanceTraveledAtSpeedBuckets);
        if ((v129 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentDistanceTraveledAtTrafficBuckets);
        if ((v130 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentDistanceTraveledAtRelativeSpeeds);
        if ((v131 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentDistanceTraveledForRoadTypes);
        if ((v132 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentDistanceTraveledInWeatherTypes);
        if ((v133 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentDistanceTraveledInTerrainTypes);
        if ((v134 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerSpeedBucket);
        if ((v135 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerTrafficBucket);
        if ((v136 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerRelativeSpeed);
        if ((v137 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerRoadType);
        if ((v138 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerWeatherType);
        if ((v139 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2F78(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerTerrainType);
        if ((v140 & 1) == 0)
          goto LABEL_60;
        sub_1AE7D2E7C(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgNumBrakingEvents);
        if (!v141)
          goto LABEL_60;
        sub_1AE7D2E7C(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgNumAccelEvents);
        if (!v141)
          goto LABEL_60;
        sub_1AE7D2E7C(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgNumHighSpeedEvents);
        if (!v141)
          goto LABEL_60;
        sub_1AE7D2E7C(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_mostEfficientDriveScore);
        if (!v141)
          goto LABEL_60;
        v142 = *(_QWORD *)(v79 + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_routeHeatMap);
        if (*(_QWORD *)(v157 + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_routeHeatMap))
        {
          if (v142)
          {
            sub_1AE4F66C4();
            sub_1AE4F6730();
            sub_1AE810058();
            sub_1AE4F81B8();
            sub_1AE4F665C();
            swift_release();
            goto LABEL_61;
          }
LABEL_60:
          swift_release();
          goto LABEL_61;
        }
        sub_1AE4F66C4();
        swift_release();
        if (v142)
          sub_1AE4F665C();
      }
    }
  }
LABEL_61:
  sub_1AE4F7740();
}

void sub_1AE7C5EDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_1AE4F67EC();
  v4 = v3;
  sub_1AE501548(&qword_1EEDA3068);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F90C8();
  sub_1AE4F9858(v4, v4[3]);
  sub_1AE7CCD0C();
  sub_1AE926F4C();
  sub_1AE501548(&qword_1EED9E350);
  sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E78);
  sub_1AE50582C();
  if (!v0)
  {
    sub_1AE50582C();
    sub_1AE50582C();
    sub_1AE50582C();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentAtSpeedBuckets);
    sub_1AE501548(&qword_1EEDA3078);
    sub_1AE7CCD48();
    sub_1AE50582C();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentAtTrafficBuckets);
    sub_1AE501548(&qword_1EEDA3088);
    sub_1AE7CCDB4();
    sub_1AE50582C();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentAtRelativeSpeeds);
    sub_1AE501548(&qword_1EEDA3098);
    sub_1AE7CCE20();
    sub_1AE50582C();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentAtRoadTypes);
    sub_1AE501548(&qword_1EEDA30A8);
    sub_1AE7CCE8C();
    sub_1AE50582C();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentInWeatherTypes);
    sub_1AE501548(&qword_1EEDA30B8);
    sub_1AE7CCEF8();
    sub_1AE50582C();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentInTerrainTypes);
    sub_1AE501548(&qword_1EEDA30C8);
    sub_1AE7CCF64();
    sub_1AE7AE544();
    sub_1AE501DAC();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentDistanceTraveledAtSpeedBuckets);
    sub_1AE501DAC();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentDistanceTraveledAtTrafficBuckets);
    sub_1AE501DAC();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentDistanceTraveledAtRelativeSpeeds);
    sub_1AE501DAC();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentDistanceTraveledForRoadTypes);
    sub_1AE501DAC();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentDistanceTraveledInWeatherTypes);
    sub_1AE50582C();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentDistanceTraveledInTerrainTypes);
    sub_1AE501DAC();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerSpeedBucket);
    sub_1AE501DAC();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerTrafficBucket);
    sub_1AE501DAC();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerRelativeSpeed);
    sub_1AE501DAC();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerRoadType);
    sub_1AE501DAC();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerWeatherType);
    sub_1AE50582C();
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerTerrainType);
    sub_1AE501DAC();
    sub_1AE7D2CDC(22);
    sub_1AE7D2CDC(23);
    sub_1AE7D2CDC(24);
    sub_1AE7D2CDC(25);
    sub_1AE7D2B74(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_routeHeatMap);
    sub_1AE4F69EC();
    sub_1AE7D3658((uint64_t)&unk_1EEDA30E0);
    sub_1AE7AE544();
    sub_1AE501DAC();
    sub_1AE7C0AA0();
  }
  sub_1AE4FDC10(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1AE4F667C();
}

void KTSDataAggregateRepresentation.__allocating_init(startTime:endTime:distanceInMeters:elevationGainInMeters:distanceBuckets:durationInSeconds:expectedDurationInSecondsNoTraffic:distanceSpentInTrafficBuckets:timeSpentInTrafficBuckets:distanceSpentAtSpeedBuckets:timeSpentAtSpeedBuckets:distanceSpentAtRelativeSpeeds:timeSpentAtRelativeSpeeds:distancePerRoadType:timePerRoadType:distancePerWeatherType:timePerWeatherType:distancePerTerrainType:timePerTerrainType:averageSpeedInMetersPerSecond:score:usageKwh:optimalUsageKwh:numBrakingEvents:numAccelEvents:numHighSpeedEvents:roadDistancesInMeters:roadSpeedBuckets:roadRelativeSpeedBuckets:roadTimes:lifeEventIds:ktsSegmentIds:route:)()
{
  sub_1AE7D32F8();
  __break(1u);
}

void KTSDataAggregateRepresentation.init(startTime:endTime:distanceInMeters:elevationGainInMeters:distanceBuckets:durationInSeconds:expectedDurationInSecondsNoTraffic:distanceSpentInTrafficBuckets:timeSpentInTrafficBuckets:distanceSpentAtSpeedBuckets:timeSpentAtSpeedBuckets:distanceSpentAtRelativeSpeeds:timeSpentAtRelativeSpeeds:distancePerRoadType:timePerRoadType:distancePerWeatherType:timePerWeatherType:distancePerTerrainType:timePerTerrainType:averageSpeedInMetersPerSecond:score:usageKwh:optimalUsageKwh:numBrakingEvents:numAccelEvents:numHighSpeedEvents:roadDistancesInMeters:roadSpeedBuckets:roadRelativeSpeedBuckets:roadTimes:lifeEventIds:ktsSegmentIds:route:)()
{
  sub_1AE7D32F8();
  __break(1u);
}

uint64_t sub_1AE7C6510()
{
  uint64_t v0;

  v0 = sub_1AE501548(&qword_1EED9E350);
  sub_1AE7D29E4(v0);
  sub_1AE4F8350(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgTripDistanceInMeters);
  sub_1AE4F8350(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_maxElevationGainInMeters);
  sub_1AE4F8350(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgElevationGainInMeters);
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  return swift_bridgeObjectRelease();
}

void KTSDataAggregateRepresentation.deinit()
{
  uint64_t v0;

  KTSDataRepresentation.deinit();
  v0 = sub_1AE501548(&qword_1EED9E350);
  sub_1AE7D29E4(v0);
  sub_1AE4F8350(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgTripDistanceInMeters);
  sub_1AE4F8350(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_maxElevationGainInMeters);
  sub_1AE4F8350(OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgElevationGainInMeters);
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4FCADC();
  sub_1AE4F6624();
}

uint64_t KTSDataAggregateRepresentation.__deallocating_deinit()
{
  return sub_1AE7C67A4(KTSDataAggregateRepresentation.deinit);
}

uint64_t sub_1AE7C67A4(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE7C67C8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, unint64_t);
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(_QWORD, _QWORD);
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(_QWORD, _QWORD, _QWORD);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  BOOL v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  int v128;
  _OWORD *v129;
  _OWORD *v130;
  _OWORD *v131;
  uint64_t v132;
  uint64_t v133;
  BOOL v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  BOOL v143;
  uint64_t v144;
  unint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  char v169;
  char v170;
  uint64_t v171;
  char v172;
  _QWORD *v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(void);
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  void (*v187)(_QWORD, _QWORD, _QWORD);
  uint64_t v188;
  uint64_t v189;
  void (*v190)(_QWORD, _QWORD, _QWORD);
  void (*v191)(_OWORD *, _QWORD, unint64_t);
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  id v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void (*v211)(uint64_t, unint64_t);
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  void (*v215)(uint64_t, uint64_t, unint64_t);
  uint64_t v216;
  uint64_t v217;
  uint64_t result;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  void *v224;
  id v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  id v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  void (*v248)(uint64_t, uint64_t, uint64_t);
  uint64_t v249;
  uint64_t v250;
  void (*v251)(uint64_t);
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  _QWORD *v263;
  uint64_t v264;
  uint64_t v265;
  BOOL v266;
  uint64_t v267;
  uint64_t v268;
  char v269;
  unint64_t v270;
  uint64_t v271;
  unint64_t v272;
  void (*v273)(_QWORD, _QWORD);
  uint64_t v274;
  uint64_t v275;
  _QWORD *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  _QWORD *v293;
  char v294;
  uint64_t v295;
  unint64_t v296;
  char v297;
  char v298;
  uint64_t v299;
  unint64_t v300;
  _QWORD *v301;
  uint64_t v302;
  _QWORD *v303;
  unint64_t v304;
  uint64_t v305;
  uint64_t v306;
  void (*v307)(uint64_t);
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  char v326;
  uint64_t v327;
  unint64_t v328;
  uint64_t *v329;
  uint64_t v330;
  unint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  char v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  char v345;
  _QWORD *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  char v351;
  uint64_t v352;
  _QWORD *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  char v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  char v361;
  uint64_t *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  char v367;
  uint64_t v368;
  uint64_t *v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  char v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  char v377;
  uint64_t *v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  char v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  char *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  unint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  void (*v404)(uint64_t, unint64_t);
  uint64_t v405;
  void (*v406)(uint64_t, uint64_t);
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  char v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  char v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  char v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  char v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  char v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  char v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  char v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  char v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t *v465;
  uint64_t *v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  char v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  char v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  char v487;
  char *v488;
  uint64_t v489;
  uint64_t v490;
  unint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  double v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  double v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  unint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  _QWORD *v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  id v613;
  uint64_t v614;
  void (*v615)(uint64_t, unint64_t);
  uint64_t v616;
  id v617;
  uint64_t v618;
  void (*v619)(_QWORD, _QWORD, _QWORD);
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  _QWORD *v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  _QWORD *v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  _QWORD *v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  void (*v641)(uint64_t, uint64_t, uint64_t);
  void (*v642)(uint64_t, uint64_t, unint64_t);
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  _OWORD *v649;
  void (*v650)(uint64_t, uint64_t);
  uint64_t v651;
  void (*v652)(char *, uint64_t);
  uint64_t v653;
  char *v654;
  uint64_t v655;
  char *v656;
  uint64_t v657;
  char *v658;
  uint64_t v659;
  uint64_t *v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  unint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  unint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  char *v677;
  unint64_t v678;
  uint64_t v679;
  _OWORD *v680;
  uint64_t v681;
  uint64_t v682;
  _OWORD *v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  char *v695;
  uint64_t v696;
  _OWORD *v697;
  _OWORD *v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  void (*v704)(uint64_t, uint64_t);
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  unint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  char *v722;
  uint64_t v723;
  void (*v724)(uint64_t, unint64_t);
  uint64_t v725;
  uint64_t v726;
  void (*v727)(_QWORD, _QWORD);
  uint64_t v728;
  uint64_t v729;
  unint64_t v730;
  void (*v731)(uint64_t, uint64_t, unint64_t);
  uint64_t v732;
  _QWORD *v733;
  unint64_t v734;
  void (*v735)(uint64_t, unint64_t);
  _QWORD *v736;
  unint64_t v737;
  uint64_t v738;
  uint64_t v739;
  void (*v740)(uint64_t, uint64_t, unint64_t);
  uint64_t v741;
  uint64_t v742;
  void (*v743)(_QWORD, _QWORD, _QWORD);
  _QWORD *v744;
  uint64_t v745;
  uint64_t v746;
  unint64_t v747;
  uint64_t v748;
  char *v749;
  id v750;
  _QWORD *v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759[2];
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  _QWORD v763[3];
  uint64_t *v764;
  uint64_t *v765;
  _QWORD *v766;
  uint64_t v767;
  _QWORD *v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  _QWORD *v772;
  unsigned __int8 v773;
  uint64_t v774;
  _OWORD v775[3];
  uint64_t v776;
  _OWORD v777[3];
  uint64_t v778;

  v3 = sub_1AE501548((uint64_t *)&unk_1EED9E340);
  v686 = *(_QWORD *)(v3 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4FFEB4();
  isUniquelyReferenced_nonNull_native = v5 - v6;
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F6A60();
  v689 = v9;
  sub_1AE4F9350();
  v11 = MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  sub_1AE509B9C();
  v709 = sub_1AE501548(&qword_1EED9A888);
  v713 = *(_QWORD *)(v709 - 8);
  MEMORY[0x1E0C80A78](v709);
  v701 = (uint64_t)&v664 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE7D3138();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE5094B0();
  v703 = v14;
  sub_1AE7D3138();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE5094B0();
  v700 = v16;
  sub_1AE7D3138();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE5094B0();
  v702 = v18;
  sub_1AE7D3138();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE5094B0();
  v704 = v20;
  sub_1AE7D3138();
  MEMORY[0x1E0C80A78](v21);
  sub_1AE5094B0();
  v688 = v22;
  sub_1AE7D3138();
  MEMORY[0x1E0C80A78](v23);
  sub_1AE5094B0();
  v682 = v24;
  v696 = v25;
  MEMORY[0x1E0C80A78](v26);
  sub_1AE5094B0();
  v690 = v27;
  sub_1AE501548(&qword_1EEDA3168);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v28);
  sub_1AE4F9024();
  v733 = (_QWORD *)v29;
  sub_1AE501548(&qword_1EEDA3170);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v30);
  sub_1AE4F9024();
  v734 = v31;
  sub_1AE501548(&qword_1EEDA3178);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v32);
  sub_1AE4F9024();
  v736 = v33;
  v739 = sub_1AE501548(&qword_1EED9A850);
  v737 = *(_QWORD *)(v739 - 8);
  MEMORY[0x1E0C80A78](v739);
  v723 = (uint64_t)&v664 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE7D2DC8();
  v36 = MEMORY[0x1E0C80A78](v35);
  v38 = (char *)&v664 - v37;
  MEMORY[0x1E0C80A78](v36);
  sub_1AE4F79E4();
  v742 = v39;
  sub_1AE7D2DC8();
  MEMORY[0x1E0C80A78](v40);
  sub_1AE4F79E4();
  v705 = v41;
  sub_1AE7D2DC8();
  MEMORY[0x1E0C80A78](v42);
  sub_1AE4F79E4();
  v707 = v43;
  sub_1AE7D2DC8();
  MEMORY[0x1E0C80A78](v44);
  sub_1AE4F79E4();
  v710 = v45;
  sub_1AE7D2DC8();
  MEMORY[0x1E0C80A78](v46);
  sub_1AE4F79E4();
  v692 = v47;
  sub_1AE7D2DC8();
  MEMORY[0x1E0C80A78](v48);
  sub_1AE4F79E4();
  v716 = v49;
  sub_1AE7D2DC8();
  MEMORY[0x1E0C80A78](v50);
  sub_1AE4F79E4();
  v715 = v51;
  sub_1AE7D2DC8();
  MEMORY[0x1E0C80A78](v52);
  sub_1AE4F79E4();
  v691 = v53;
  sub_1AE7D2DC8();
  MEMORY[0x1E0C80A78](v54);
  sub_1AE4F79E4();
  v681 = v55;
  sub_1AE7D2DC8();
  MEMORY[0x1E0C80A78](v56);
  sub_1AE4F79E4();
  v708 = v57;
  sub_1AE7D2DC8();
  MEMORY[0x1E0C80A78](v58);
  sub_1AE4F79E4();
  v711 = v59;
  sub_1AE7D2DC8();
  MEMORY[0x1E0C80A78](v60);
  sub_1AE4F79E4();
  v693 = v61;
  v706 = v62;
  MEMORY[0x1E0C80A78](v63);
  v695 = (char *)&v664 - v64;
  sub_1AE501548(&qword_1EEDA3180);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v65);
  sub_1AE4F686C();
  v694 = v66;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v67);
  sub_1AE5094B0();
  v735 = v68;
  v69 = sub_1AE501548(&qword_1EED9E350);
  v746 = *(_QWORD *)(v69 - 8);
  v70 = MEMORY[0x1E0C80A78](v69);
  MEMORY[0x1E0C80A78](v70);
  v72 = MEMORY[0x1E0C80A78]((char *)&v664 - v71);
  v73 = MEMORY[0x1E0C80A78](v72);
  MEMORY[0x1E0C80A78](v73);
  sub_1AE4F79E4();
  v732 = v74;
  sub_1AE7D2DBC();
  v76 = MEMORY[0x1E0C80A78](v75);
  MEMORY[0x1E0C80A78](v76);
  sub_1AE4F79E4();
  v738 = v77;
  sub_1AE7D2DBC();
  MEMORY[0x1E0C80A78](v78);
  sub_1AE4F79E4();
  v727 = v79;
  sub_1AE7D2DBC();
  v81 = MEMORY[0x1E0C80A78](v80);
  MEMORY[0x1E0C80A78](v81);
  sub_1AE4F79E4();
  v744 = v82;
  sub_1AE7D2DBC();
  v84 = MEMORY[0x1E0C80A78](v83);
  v86 = (char *)&v664 - v85;
  v87 = MEMORY[0x1E0C80A78](v84);
  MEMORY[0x1E0C80A78](v87);
  sub_1AE4F79E4();
  v687 = v88;
  sub_1AE7D2DBC();
  MEMORY[0x1E0C80A78](v89);
  sub_1AE4F79E4();
  v717 = v90;
  sub_1AE7D2DBC();
  MEMORY[0x1E0C80A78](v91);
  sub_1AE4F79E4();
  v718 = v92;
  sub_1AE7D2DBC();
  v94 = MEMORY[0x1E0C80A78](v93);
  v95 = MEMORY[0x1E0C80A78](v94);
  v96 = MEMORY[0x1E0C80A78](v95);
  MEMORY[0x1E0C80A78](v96);
  sub_1AE4F79E4();
  v729 = v97;
  sub_1AE7D2DBC();
  MEMORY[0x1E0C80A78](v98);
  sub_1AE4F79E4();
  v728 = v99;
  sub_1AE7D2DBC();
  v101 = MEMORY[0x1E0C80A78](v100);
  MEMORY[0x1E0C80A78](v101);
  sub_1AE4F79E4();
  v725 = v102;
  sub_1AE7D2DBC();
  MEMORY[0x1E0C80A78](v103);
  sub_1AE4F79E4();
  v743 = v104;
  sub_1AE7D2DBC();
  MEMORY[0x1E0C80A78](v105);
  sub_1AE4F79E4();
  v699 = v106;
  sub_1AE7D2DBC();
  MEMORY[0x1E0C80A78](v107);
  sub_1AE4F79E4();
  v698 = (_OWORD *)v108;
  v720 = v109;
  v111 = MEMORY[0x1E0C80A78](v110);
  v120 = (uint64_t)&v664 - v119;
  v750 = (id)a1;
  v722 = v38;
  if ((unint64_t)a1 >> 62)
    goto LABEL_495;
  v121 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v741 = v121;
  if (!v121)
    return 0;
LABEL_3:
  sub_1AE7D2EA8(v111, v112, v113, v114, v115, v116, v117, v118);
  *(_QWORD *)&v775[0] = sub_1AE65C728();
  sub_1AE7E9650(v121);
  v745 = v121;
  if ((v121 & 0x8000000000000000) == 0)
  {
    v667 = isUniquelyReferenced_nonNull_native;
    v674 = v1;
    v122 = sub_1AE7D372C();
    v123 = 0;
    v124 = (uint64_t)v735;
    do
    {
      if (!v122)
        sub_1AE7D2FDC();
      sub_1AE50A674();
      ++v123;
      sub_1AE4F9094();
      sub_1AE4FC564();
      sub_1AE7E97A0();
      sub_1AE7D3220();
      v125 = sub_1AE7D3560();
      nullsub_1(v125);
      a1 = (uint64_t)v750;
    }
    while (v745 != v123);
    v126 = 0;
    v127 = *(_QWORD *)&v775[0];
    goto LABEL_10;
  }
LABEL_503:
  __break(1u);
LABEL_504:
  __break(1u);
LABEL_505:
  __break(1u);
LABEL_506:
  __break(1u);
  __break(1u);
LABEL_507:
  __break(1u);
LABEL_508:
  __break(1u);
  while (1)
  {
    v667 = isUniquelyReferenced_nonNull_native;
    v674 = v1;
    v745 = 0;
    v127 = MEMORY[0x1E0DEE9D8];
    v126 = 1;
    v124 = (uint64_t)v735;
LABEL_10:
    v666 = sub_1AE7BB468(v127);
    HIDWORD(v668) = v128;
    sub_1AE4F9038();
    LODWORD(v719) = v126;
    if ((v126 & 1) != 0)
    {
      sub_1AE51969C(0);
      v130 = v129;
    }
    else
    {
      v132 = sub_1AE65C728();
      v133 = sub_1AE7D3850(v132);
      sub_1AE7E9650(v133);
      v134 = sub_1AE7D372C();
      v135 = 0;
      do
      {
        if (!v134)
          sub_1AE7D2FDC();
        sub_1AE50A674();
        ++v135;
        sub_1AE4F9094();
        sub_1AE4FC564();
        sub_1AE7E97A0();
        sub_1AE7D3220();
        v136 = sub_1AE7D3560();
        nullsub_1(v136);
        a1 = (uint64_t)v750;
      }
      while (v745 != v135);
      v130 = *(_OWORD **)&v775[0];
    }
    v1 = sub_1AE7408E0((uint64_t)v130);
    isUniquelyReferenced_nonNull_native = v137;
    sub_1AE4F9038();
    sub_1AE519928(0);
    *(_QWORD *)&v775[0] = v138;
    if (v741 < 1)
      goto LABEL_504;
    HIDWORD(v665) = isUniquelyReferenced_nonNull_native;
    v664 = v1;
    v673 = v3;
    LODWORD(v748) = sub_1AE7D372C();
    sub_1AE4FB930();
    v1 = 0;
    v3 = (unint64_t)&qword_1EEE11000;
    do
    {
      if ((v748 & 1) == 0)
        sub_1AE7D2FDC();
      sub_1AE50A674();
      v139 = (unint64_t *)((char *)v130
                                + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_lifeEventIds);
      sub_1AE4F9094();
      isUniquelyReferenced_nonNull_native = *v139;
      sub_1AE4F6804();
      sub_1AE4FC564();
      if (isUniquelyReferenced_nonNull_native)
      {
        sub_1AE8DD420();
        sub_1AE7D320C();
        v140 = sub_1AE7D3254();
        v130 = v775;
        nullsub_1(v140);
      }
      ++v1;
    }
    while (v741 != v1);
    sub_1AE4F66E8();
    sub_1AE7D37B4();
    if (sub_1AE7D3398(v141))
    {
      sub_1AE7D34E8();
      if (v142 != v143)
        goto LABEL_505;
      sub_1AE4F6730();
      do
      {
        sub_1AE7D350C();
        v130 = v775;
        sub_1AE60EEC0();
      }
      while (isUniquelyReferenced_nonNull_native);
      sub_1AE5CE218();
      v697 = *(_OWORD **)&v775[0];
      a1 = (uint64_t)v750;
    }
    else
    {
      v697 = v130;
      sub_1AE4F81B8();
    }
    sub_1AE519928(0);
    *(_QWORD *)&v775[0] = v144;
    sub_1AE4FB930();
    v1 = 0;
    do
    {
      if ((v748 & 1) == 0)
        sub_1AE7D2FDC();
      sub_1AE50A674();
      v145 = (unint64_t *)((char *)v130
                                + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_ktsSegmentIds);
      sub_1AE4F9094();
      isUniquelyReferenced_nonNull_native = *v145;
      sub_1AE4F6804();
      sub_1AE4FC564();
      if (isUniquelyReferenced_nonNull_native)
      {
        sub_1AE8DD420();
        sub_1AE7D320C();
        v146 = sub_1AE7D3254();
        v130 = v775;
        nullsub_1(v146);
      }
      ++v1;
    }
    while (v741 != v1);
    sub_1AE4F66E8();
    sub_1AE7D37B4();
    if (sub_1AE7D3398(v147))
    {
      sub_1AE7D34E8();
      v3 = v739;
      if (v142 != v143)
        goto LABEL_506;
      sub_1AE4F6730();
      do
      {
        sub_1AE7D350C();
        sub_1AE60EEC0();
      }
      while (isUniquelyReferenced_nonNull_native);
      sub_1AE5CE218();
      v130 = *(_OWORD **)&v775[0];
      a1 = (uint64_t)v750;
    }
    else
    {
      sub_1AE4F81B8();
      v3 = v739;
    }
    isUniquelyReferenced_nonNull_native = sub_1AE5B7810((uint64_t)v697);
    v680 = v130;
    v678 = isUniquelyReferenced_nonNull_native;
    if ((v719 & 1) != 0)
    {
      v731 = (void (*)(uint64_t, uint64_t, unint64_t))sub_1AE51991C(0);
      sub_1AE519910(0);
      v1 = v148;
    }
    else
    {
      v149 = sub_1AE65C728();
      v150 = sub_1AE7D3850(v149);
      sub_1AE7E9710(v150);
      if (v1 < 0)
        goto LABEL_507;
      v151 = 0;
      do
      {
        if ((v748 & 1) == 0)
          sub_1AE7D3088();
        sub_1AE50A674();
        ++v151;
        isUniquelyReferenced_nonNull_native = (unint64_t)v130
                                            + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceInMeters;
        sub_1AE4F9094();
        sub_1AE73624C(v120, isUniquelyReferenced_nonNull_native, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v746 + 16));
        sub_1AE4FC564();
        sub_1AE7E9860();
        v152 = sub_1AE7D30DC();
        sub_1AE7E998C(v152);
        v153 = sub_1AE5061E4();
        v155 = sub_1AE7E9A2C(v153, v154);
        v130 = v775;
        nullsub_1(v155);
      }
      while (v745 != v151);
      v731 = *(void (**)(uint64_t, uint64_t, unint64_t))&v775[0];
      *(_QWORD *)&v775[0] = sub_1AE65C728();
      sub_1AE7E9704(v745);
      v156 = 0;
      do
      {
        if ((v748 & 1) == 0)
          sub_1AE7D3088();
        sub_1AE50A674();
        ++v156;
        v157 = (uint64_t *)((char *)v775 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceBuckets);
        sub_1AE4F9094();
        v120 = *v157;
        sub_1AE4F6708();
        sub_1AE4FC564();
        sub_1AE7E9854();
        v158 = sub_1AE7D30DC();
        sub_1AE7E9980(v158);
        v159 = sub_1AE5061E4();
        v161 = sub_1AE7EA380(v159, v160);
        nullsub_1(v161);
      }
      while (v745 != v156);
      v1 = *(_QWORD *)&v775[0];
      a1 = (uint64_t)v750;
    }
    sub_1AE519904(0);
    sub_1AE7CB6B4();
    sub_1AE925C98();
    v162 = sub_1AE7D31C8();
    v163 = sub_1AE5B7810(v162);
    v747 = v69;
    v740 = (void (*)(uint64_t, uint64_t, unint64_t))v163;
    if (v163)
      break;
    v730 = isUniquelyReferenced_nonNull_native;
LABEL_86:
    sub_1AE4F81B8();
    v1 = objc_opt_self();
    sub_1AE7D37D4((uint64_t)objc_msgSend((id)v1, sel_meters), &qword_1EED996A0);
    sub_1AE7D35D0();
    sub_1AE7D3290(v177, v178);
    v120 = v746;
    sub_1AE7D338C();
    v740 = (void (*)(uint64_t, uint64_t, unint64_t))v179;
    v179();
    v180 = sub_1AE5B7810((uint64_t)v731);
    v714 = v1;
    if (v180)
    {
      if (v180 < 1)
        goto LABEL_508;
      v724 = (void (*)(uint64_t, unint64_t))v180;
      a1 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
      sub_1AE4F66CC();
      v3 = 0;
      isUniquelyReferenced_nonNull_native = v728;
      do
      {
        if ((a1 & 1) != 0)
        {
          v181 = (_QWORD *)v746;
          sub_1AE7D3538();
          sub_1AE7D2D0C(v725, v182 + v181[9] * v3);
        }
        else
        {
          v111 = sub_1AE7D36D4();
          if (v720 != 8)
            goto LABEL_484;
          v183 = sub_1AE7D30C8(v111);
          sub_1AE7D2D0C(v183, v184);
          sub_1AE4FC718();
          v181 = (_QWORD *)v746;
        }
        ++v3;
        v1 = v181[4];
        sub_1AE7D338C();
        ((void (*)(void))v1)();
        v185 = v729;
        v186 = v69;
        v187 = v743;
        sub_1AE7D33CC();
        v120 = v181[1];
        v188 = sub_1AE7D33A8();
        ((void (*)(uint64_t))v120)(v188);
        v189 = sub_1AE7D3488();
        ((void (*)(uint64_t))v120)(v189);
        v190 = v187;
        v69 = v186;
        ((void (*)(_QWORD, uint64_t, unint64_t))v1)(v190, v185, v186);
        v124 = (uint64_t)v735;
      }
      while (v724 != (void (*)(uint64_t, unint64_t))v3);
      sub_1AE4F9038();
      v3 = v739;
      a1 = (uint64_t)v750;
      v191 = (void (*)(_OWORD *, _QWORD, unint64_t))v1;
      v120 = v746;
    }
    else
    {
      v191 = *(void (**)(_OWORD *, _QWORD, unint64_t))(v120 + 32);
    }
    v131 = v698;
    v191(v698, v743, v69);
    v192 = *(_QWORD *)(v120 + 8);
    sub_1AE7D34AC(v699);
    sub_1AE740968();
    sub_1AE4F81B8();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v124, 1, v69) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AE524534(v124, &qword_1EEDA3180);
      sub_1AE7D2544();
      sub_1AE4F6778();
      sub_1AE7D2EE8(v193, 0xD000000000000035);
      goto LABEL_118;
    }
    v743 = (void (*)(_QWORD, _QWORD, _QWORD))v191;
    v191(v683, v124, v69);
    sub_1AE7D3824();
    v735 = (void (*)(uint64_t, unint64_t))v192;
    if ((_DWORD)v719)
    {
      v194 = sub_1AE51991C(0);
      isUniquelyReferenced_nonNull_native = v714;
    }
    else
    {
      v195 = sub_1AE65C728();
      v196 = sub_1AE7D3864(v195);
      sub_1AE7E9710(v196);
      isUniquelyReferenced_nonNull_native = v714;
      if ((v192 & 0x8000000000000000) != 0)
        goto LABEL_511;
      v197 = 0;
      v198 = v687;
      do
      {
        if ((v748 & 1) == 0)
          sub_1AE7D3088();
        sub_1AE50A674();
        ++v197;
        v199 = (uint64_t)v131 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_elevationGainInMeters;
        sub_1AE4F9094();
        sub_1AE7D2D0C(v198, v199);
        sub_1AE4FC564();
        sub_1AE7E9860();
        v200 = sub_1AE7D3844();
        sub_1AE7E998C(v200);
        v201 = sub_1AE7D3844();
        v202 = sub_1AE7E9A2C(v201, v198);
        v131 = v775;
        nullsub_1(v202);
      }
      while (v745 != v197);
      v194 = *(_QWORD *)&v775[0];
      v3 = v739;
      a1 = (uint64_t)v750;
    }
    v203 = objc_msgSend((id)isUniquelyReferenced_nonNull_native, sel_meters);
    v204 = v685;
    sub_1AE924450();
    sub_1AE7D2D0C(v718, v204);
    if (sub_1AE5B7810(v194))
    {
      sub_1AE7D34E8();
      if (v142 != v143)
      {
        __break(1u);
LABEL_511:
        __break(1u);
LABEL_512:
        __break(1u);
LABEL_513:
        __break(1u);
LABEL_514:
        __break(1u);
LABEL_515:
        __break(1u);
LABEL_516:
        __break(1u);
LABEL_517:
        __break(1u);
LABEL_518:
        __break(1u);
LABEL_519:
        __break(1u);
LABEL_520:
        __break(1u);
        goto LABEL_521;
      }
      a1 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
      sub_1AE4F66CC();
      v3 = 0;
      v120 = (uint64_t)v743;
      v1 = v717;
      do
      {
        if ((a1 & 1) != 0)
        {
          sub_1AE7D3538();
          sub_1AE7D2D0C(v1, v206 + *(_QWORD *)(v205 + 72) * v3);
        }
        else
        {
          v111 = sub_1AE7D36D4();
          if (v720 != 8)
            goto LABEL_485;
          *(_QWORD *)&v775[0] = v111;
          sub_1AE7D2D0C(v1, (uint64_t)v775);
          sub_1AE4FC718();
        }
        ++v3;
        v207 = v728;
        sub_1AE7D2F54(v728, v1);
        v208 = v729;
        v209 = v718;
        sub_1AE7D33CC();
        v210 = v207;
        v211 = v735;
        v735(v210, v69);
        v211(v209, v69);
        v212 = v209;
        v1 = v717;
        v213 = v208;
        v120 = (uint64_t)v743;
        sub_1AE7D2F54(v212, v213);
      }
      while (isUniquelyReferenced_nonNull_native != v3);
      sub_1AE4F9038();
      v3 = v739;
      a1 = (uint64_t)v750;
    }
    v214 = v679;
    v215 = v743;
    v743(v679, v718, v69);
    sub_1AE7D31B4(v685);
    v216 = v694;
    sub_1AE740968();
    sub_1AE4F9038();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v216, 1, v69) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AE524534(v216, &qword_1EEDA3180);
      sub_1AE7D2544();
      sub_1AE4F6778();
      sub_1AE7D2EE8(v217, 0xD000000000000035);
      sub_1AE7D3080(v214);
      sub_1AE7D3080(v684);
      sub_1AE7D3080((uint64_t)v683);
      v131 = v698;
LABEL_118:
      sub_1AE7D34AC((uint64_t)v131);
      return (uint64_t)v131;
    }
    v215(v676, v216, v69);
    sub_1AE7D3824();
    if ((_DWORD)v719)
    {
      isUniquelyReferenced_nonNull_native = sub_1AE5198F8(0);
      v69 = v745;
    }
    else
    {
LABEL_123:
      *(_QWORD *)&v775[0] = sub_1AE65C728();
      v69 = v745;
      sub_1AE7E96F8(v745);
      if ((v69 & 0x8000000000000000) != 0)
        goto LABEL_514;
      v219 = 0;
      v220 = v681;
      do
      {
        if ((v748 & 1) == 0)
          sub_1AE7D2FDC();
        sub_1AE50A674();
        ++v219;
        v221 = (char *)v775 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_durationInSeconds;
        sub_1AE4F9094();
        (*(void (**)(uint64_t, char *, unint64_t))(v737 + 16))(v220, v221, v3);
        sub_1AE4FC564();
        sub_1AE7E9848();
        sub_1AE7D3234();
        v222 = sub_1AE7D3844();
        v223 = sub_1AE7E9A20(v222, v220);
        nullsub_1(v223);
      }
      while (v69 != v219);
      isUniquelyReferenced_nonNull_native = *(_QWORD *)&v775[0];
    }
    v224 = (void *)objc_opt_self();
    v225 = objc_msgSend(v224, sel_seconds);
    sub_1AE524254(0, &qword_1EED996A8);
    sub_1AE7D35D0();
    v226 = v693;
    sub_1AE7D3290(v227, v228);
    v1 = v737;
    v731 = *(void (**)(uint64_t, uint64_t, unint64_t))(v737 + 16);
    v731(v711, v226, v3);
    v229 = sub_1AE5B7810(isUniquelyReferenced_nonNull_native);
    if (v229)
    {
      v120 = v229;
      v720 = (uint64_t)v224;
      if (v229 < 1)
        goto LABEL_512;
      LODWORD(v725) = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
      sub_1AE4F6804();
      v230 = 0;
      v724 = (void (*)(uint64_t, unint64_t))isUniquelyReferenced_nonNull_native;
      do
      {
        v3 = v120;
        if ((v725 & 1) != 0)
        {
          sub_1AE7D3410();
          v231 = v739;
          sub_1AE7D2F4C();
        }
        else
        {
          v111 = sub_1AE7E940C(v230, isUniquelyReferenced_nonNull_native);
          if (v706 != 8)
            goto LABEL_492;
          sub_1AE7D30C8(v111);
          v231 = v739;
          sub_1AE7D2F4C();
          sub_1AE4FC718();
        }
        ++v230;
        a1 = *(_QWORD *)(v1 + 32);
        v232 = v715;
        sub_1AE7D338C();
        ((void (*)(void))a1)();
        v233 = v716;
        v234 = v711;
        sub_1AE7D33CC();
        v235 = v232;
        v1 = v737;
        sub_1AE7D34AC(v235);
        sub_1AE7D34AC(v234);
        ((void (*)(uint64_t, uint64_t, uint64_t))a1)(v234, v233, v231);
        v69 = v745;
        isUniquelyReferenced_nonNull_native = (unint64_t)v724;
      }
      while (v120 != v230);
      sub_1AE4F67AC();
      v3 = v739;
      v224 = (void *)v720;
    }
    else
    {
      a1 = *(_QWORD *)(v1 + 32);
    }
    v725 = a1;
    ((void (*)(char *, uint64_t, unint64_t))a1)(v695, v711, v3);
    v724 = *(void (**)(uint64_t, unint64_t))(v1 + 8);
    v724(v693, v3);
    sub_1AE4F67AC();
    a1 = (uint64_t)v736;
    v120 = (uint64_t)v743;
    if ((v719 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = sub_1AE5198F8(0);
    }
    else
    {
      v236 = sub_1AE65C728();
      v237 = sub_1AE7D3570(v236);
      sub_1AE7E96F8(v237);
      if ((v69 & 0x8000000000000000) != 0)
        goto LABEL_515;
      v238 = 0;
      v239 = v705;
      do
      {
        if ((v748 & 1) == 0)
          sub_1AE7D3088();
        sub_1AE50A674();
        ++v238;
        sub_1AE4F9094();
        sub_1AE5061E4();
        sub_1AE7D2F4C();
        sub_1AE4FC564();
        sub_1AE7E9848();
        sub_1AE7D3234();
        v240 = sub_1AE7D3844();
        v241 = sub_1AE7E9A20(v240, v239);
        nullsub_1(v241);
        v120 = (uint64_t)v743;
      }
      while (v69 != v238);
      isUniquelyReferenced_nonNull_native = *(_QWORD *)&v775[0];
      v3 = v739;
      a1 = (uint64_t)v736;
    }
    v242 = objc_msgSend(v224, sel_seconds);
    sub_1AE924450();
    sub_1AE7D2F4C();
    v243 = sub_1AE5B7810(isUniquelyReferenced_nonNull_native);
    if (v243)
    {
      v244 = v243;
      if (v243 < 1)
        goto LABEL_513;
      LODWORD(v720) = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
      sub_1AE4F6804();
      v3 = 0;
      v245 = v707;
      v718 = isUniquelyReferenced_nonNull_native;
      a1 = v244;
      do
      {
        if ((v720 & 1) != 0)
        {
          sub_1AE7D3410();
          v246 = v739;
          sub_1AE7D2F4C();
        }
        else
        {
          v111 = sub_1AE7E940C(v3, isUniquelyReferenced_nonNull_native);
          if (v706 != 8)
            goto LABEL_493;
          sub_1AE7D30C8(v111);
          v246 = v739;
          sub_1AE7D2F4C();
          sub_1AE4FC718();
        }
        ++v3;
        v247 = v715;
        v248 = (void (*)(uint64_t, uint64_t, uint64_t))v725;
        ((void (*)(uint64_t, uint64_t, uint64_t))v725)(v715, v245, v246);
        v120 = v716;
        v249 = v710;
        sub_1AE7D33CC();
        v250 = v247;
        v251 = (void (*)(uint64_t))v724;
        v724(v250, v246);
        v252 = sub_1AE7D352C();
        v251(v252);
        v253 = v249;
        v245 = v707;
        v248(v253, v120, v246);
        v1 = v737;
        isUniquelyReferenced_nonNull_native = v718;
      }
      while (a1 != v3);
      sub_1AE4F67AC();
      v3 = v739;
      a1 = (uint64_t)v736;
      v120 = (uint64_t)v743;
    }
    ((void (*)(uint64_t, uint64_t, unint64_t))v725)(v691, v710, v3);
    sub_1AE7D3690();
    sub_1AE4F67AC();
    LOBYTE(v168) = v719;
    if ((v719 & 1) != 0)
    {
      sub_1AE5198EC(0);
      v3 = v734;
    }
    else
    {
      v255 = sub_1AE65C728();
      v256 = sub_1AE7D3570(v255);
      sub_1AE7E96EC(v256);
      v3 = v734;
      if ((v69 & 0x8000000000000000) != 0)
        goto LABEL_516;
      v1 = 0;
      do
      {
        if ((v748 & 1) == 0)
          sub_1AE7D3088();
        sub_1AE50A674();
        ++v1;
        sub_1AE4F9094();
        sub_1AE4F6708();
        sub_1AE4FC564();
        sub_1AE7E983C();
        v257 = sub_1AE7D30DC();
        sub_1AE7E9968(v257);
        v258 = sub_1AE5061E4();
        v260 = sub_1AE7EA380(v258, v259);
        nullsub_1(v260);
        v120 = (uint64_t)v743;
      }
      while (v69 != v1);
      v254 = *(_QWORD *)&v775[0];
      LOBYTE(v168) = v719;
      a1 = (uint64_t)v736;
    }
    v261 = v254;
    v714 = sub_1AE5B7810(v254);
    if (v714)
    {
      LODWORD(v712) = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
      v710 = v261 + 32;
      v711 = v261;
      sub_1AE4F6804();
      v262 = 0;
      v263 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v3 = (unint64_t)&qword_1EED9A710;
      v1 = 1;
      while (1)
      {
        if ((v712 & 1) != 0)
        {
          v264 = *(_QWORD *)(v710 + 8 * v262);
          v111 = sub_1AE4F66CC();
        }
        else
        {
          v111 = sub_1AE7E930C(v262);
          v264 = v111;
        }
        v143 = __OFADD__(v262, 1);
        isUniquelyReferenced_nonNull_native = v262 + 1;
        if (v143)
          goto LABEL_488;
        v720 = isUniquelyReferenced_nonNull_native;
        sub_1AE4FB764();
        sub_1AE4F66CC();
        v69 = sub_1AE655730();
        v768 = v263;
        sub_1AE7D345C(v264, (uint64_t)sub_1AE7D2410, v775);
        v717 = v264;
        sub_1AE4F66CC();
        sub_1AE7BBB00();
        v265 = sub_1AE501548(&qword_1EED9A710);
        sub_1AE7D2D3C(a1);
        v718 = (unint64_t)v263;
        if (!v266)
          break;
        v751 = v263;
LABEL_176:
        sub_1AE4F9038();
        sub_1AE508868();
        sub_1AE4FDCF0();
        sub_1AE4F9038();
        swift_bridgeObjectRelease();
        v263 = v751;
        v262 = v720;
        v69 = v745;
        LOBYTE(v168) = v719;
        if (v720 == v714)
        {
          sub_1AE4F67AC();
          v3 = v734;
          goto LABEL_194;
        }
      }
      v751 = v263;
      while (1)
      {
        v267 = a1 + *(int *)(v265 + 48);
        LOBYTE(v765) = *(_BYTE *)a1;
        v268 = v765;
        ((void (*)(_QWORD *, uint64_t, unint64_t))v120)(v744, v267, v747);
        isUniquelyReferenced_nonNull_native = sub_1AE536F4C(v268);
        v111 = sub_1AE641040(isUniquelyReferenced_nonNull_native, v269);
        if (v143)
          break;
        a1 = v112;
        if (v751[3] >= v111)
        {
          if ((v69 & 1) == 0)
          {
            sub_1AE501548(&qword_1EED9EB58);
            sub_1AE926A60();
          }
        }
        else
        {
          sub_1AE636DBC(v111, v69 & 1);
          sub_1AE536F4C(v268);
          sub_1AE64A764();
          if (!v266)
            goto LABEL_539;
          isUniquelyReferenced_nonNull_native = v270;
        }
        v69 = v747;
        v751 = v768;
        if ((a1 & 1) != 0)
        {
          v271 = v746;
          v272 = *(_QWORD *)(v746 + 72) * isUniquelyReferenced_nonNull_native;
          v273 = v727;
          sub_1AE7D2D0C((uint64_t)v727, v751[7] + v272);
          v274 = v726;
          v275 = (uint64_t)v744;
          v86 = v749;
          sub_1AE7CA9E0();
          v749 = v86;
          if (v86)
          {
            sub_1AE7D3428();
            v766 = v749;
            v654 = v749;
            sub_1AE501548((uint64_t *)&unk_1ED319C60);
            if ((sub_1AE7D3168() & 1) != 0)
            {
              v770 = sub_1AE7D3704();
              v771 = v655;
              sub_1AE4FDA58();
              sub_1AE7D3188();
              sub_1AE926A48();
              sub_1AE78B9E0();
              goto LABEL_542;
            }
            goto LABEL_543;
          }
          sub_1AE7D31B4((uint64_t)v273);
          sub_1AE7D3080(v275);
          sub_1AE73624C(v751[7] + v272, v274, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v271 + 40));
          v120 = (uint64_t)v743;
        }
        else
        {
          v276 = v751;
          sub_1AE4FFC58((uint64_t)&v751[isUniquelyReferenced_nonNull_native >> 6]);
          *(_BYTE *)(v277 + isUniquelyReferenced_nonNull_native) = v268;
          v111 = sub_1AE7D2F54(v276[7] + *(_QWORD *)(v746 + 72) * isUniquelyReferenced_nonNull_native, (uint64_t)v744);
          v278 = v276[2];
          v143 = __OFADD__(v278, 1);
          v279 = v278 + 1;
          if (v143)
            goto LABEL_480;
          v751[2] = v279;
        }
        a1 = (uint64_t)v736;
        sub_1AE7BBB00();
        v265 = sub_1AE501548(&qword_1EED9A710);
        v69 = 1;
        sub_1AE7D2D3C(a1);
        if (v266)
          goto LABEL_176;
      }
      __break(1u);
LABEL_478:
      __break(1u);
    }
    else
    {
      v751 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_194:
      sub_1AE4F67AC();
      if ((v168 & 1) != 0)
      {
        sub_1AE5198E0(0);
        v281 = v280;
      }
      else
      {
        v282 = sub_1AE65C728();
        v283 = sub_1AE7D3570(v282);
        sub_1AE7E96E0(v283);
        if ((v69 & 0x8000000000000000) != 0)
          goto LABEL_517;
        v284 = 0;
        do
        {
          sub_1AE7D2E9C();
          if ((v285 & 1) == 0)
            sub_1AE7D2E18();
          sub_1AE50A674();
          ++v284;
          sub_1AE4F9094();
          sub_1AE4F6708();
          sub_1AE4FC564();
          sub_1AE7E9830();
          v286 = sub_1AE7D3830();
          sub_1AE7E995C(v286);
          v287 = sub_1AE7D2D18();
          v289 = sub_1AE7EA380(v287, v288);
          nullsub_1(v289);
          v120 = (uint64_t)v743;
        }
        while (v69 != v284);
        v281 = *(_QWORD *)&v775[0];
        LOBYTE(v168) = v719;
        v3 = v734;
      }
      v290 = sub_1AE5B7810(v281);
      a1 = v739;
      v69 = v725;
      v720 = v290;
      if (v290)
      {
        LODWORD(v718) = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
        v714 = v281 + 32;
        v717 = v281;
        sub_1AE4F6804();
        v291 = 0;
        v736 = (_QWORD *)MEMORY[0x1E0DEE9E0];
        do
        {
          if ((v718 & 1) != 0)
          {
            v292 = *(_QWORD *)(v714 + 8 * v291);
            v111 = sub_1AE4F66CC();
          }
          else
          {
            v111 = sub_1AE7E9300(v291);
            v292 = v111;
          }
          v143 = __OFADD__(v291, 1);
          isUniquelyReferenced_nonNull_native = v291 + 1;
          if (v143)
            goto LABEL_489;
          v727 = (void (*)(_QWORD, _QWORD))isUniquelyReferenced_nonNull_native;
          v293 = v736;
          sub_1AE4F6804();
          sub_1AE4F66CC();
          v294 = sub_1AE508CEC();
          v766 = v293;
          sub_1AE7D345C(v292, (uint64_t)sub_1AE7D23F4, v775);
          v726 = v292;
          sub_1AE4F66CC();
          v1 = (uint64_t)&unk_1EED9A720;
          sub_1AE7D3480();
          v295 = sub_1AE7D3558();
          sub_1AE7D2D3C(v3);
          if (!v266)
          {
            v744 = v293;
            while (1)
            {
              v296 = v3 + *(int *)(v295 + 48);
              LOBYTE(v764) = *(_BYTE *)v3;
              isUniquelyReferenced_nonNull_native = v764;
              ((void (*)(uint64_t, unint64_t, uint64_t))v69)(v742, v296, a1);
              v3 = sub_1AE536F4C(isUniquelyReferenced_nonNull_native);
              v111 = sub_1AE641040(v3, v297);
              if (v143)
                goto LABEL_478;
              v298 = v112;
              sub_1AE7D36E0();
              if (v142 != v143)
              {
                sub_1AE636DA8(v299, v294 & 1);
                sub_1AE536F4C(isUniquelyReferenced_nonNull_native);
                sub_1AE64A764();
                if (!v266)
                  goto LABEL_539;
                v3 = v300;
              }
              else if ((v294 & 1) == 0)
              {
                sub_1AE501548(&qword_1EED9EB48);
                sub_1AE926A60();
              }
              v301 = v766;
              v744 = v766;
              if ((v298 & 1) != 0)
              {
                v302 = v737;
                v303 = v766;
                v304 = *(_QWORD *)(v737 + 72) * v3;
                a1 = v739;
                sub_1AE7D2F4C();
                v305 = (uint64_t)v722;
                v86 = v749;
                sub_1AE7CA980();
                v749 = v86;
                if (v86)
                {
                  sub_1AE7D3660();
                  sub_1AE7D3690();
                  v765 = (uint64_t *)v749;
                  v656 = v749;
                  sub_1AE501548((uint64_t *)&unk_1ED319C60);
                  if ((sub_1AE7D3168() & 1) != 0)
                  {
                    v768 = (_QWORD *)sub_1AE7D3704();
                    v769 = v657;
                    sub_1AE4FDA58();
                    sub_1AE7D3188();
                    sub_1AE926A48();
                    sub_1AE78B9E0();
                    goto LABEL_542;
                  }
                  swift_bridgeObjectRelease();
                  sub_1AE7D3690();
                  sub_1AE508868();
                  v660 = v765;
LABEL_547:

LABEL_548:
                  sub_1AE4FDCF0();
                  while (1)
                  {
LABEL_549:
                    swift_bridgeObjectRelease();
                    __break(1u);
LABEL_550:
                    sub_1AE4F66E8();
                    sub_1AE4FC564();
                  }
                }
                v306 = sub_1AE7D3660();
                v307 = (void (*)(uint64_t))v724;
                ((void (*)(uint64_t))v724)(v306);
                v308 = sub_1AE7D33E4();
                v307(v308);
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v302 + 40))(v303[7] + v304, v305, a1);
                v3 = v734;
                v120 = (uint64_t)v743;
                v69 = v725;
              }
              else
              {
                sub_1AE4FFC58((uint64_t)&v766[v3 >> 6]);
                *(_BYTE *)(v309 + v3) = isUniquelyReferenced_nonNull_native;
                a1 = v739;
                v111 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v69)(v301[7] + *(_QWORD *)(v737 + 72) * v3, v742, v739);
                v310 = v301[2];
                v143 = __OFADD__(v310, 1);
                v311 = v310 + 1;
                if (v143)
                  goto LABEL_481;
                v301[2] = v311;
                v3 = v734;
              }
              v1 = (uint64_t)&unk_1EED9A720;
              sub_1AE7D3480();
              v295 = sub_1AE7D3558();
              v294 = 1;
              sub_1AE7D2D3C(v3);
              if (v266)
                goto LABEL_212;
            }
          }
          v744 = v293;
LABEL_212:
          sub_1AE4F9038();
          sub_1AE508868();
          sub_1AE4FDCF0();
          sub_1AE4F9038();
          swift_bridgeObjectRelease();
          v736 = v744;
          v291 = (uint64_t)v727;
          LOBYTE(v168) = v719;
        }
        while (v727 != (void (*)(_QWORD, _QWORD))v720);
        sub_1AE4F67AC();
      }
      else
      {
        v744 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      }
      sub_1AE4F67AC();
      v69 = v747;
      a1 = (uint64_t)v733;
      if ((v168 & 1) != 0)
      {
        sub_1AE5198D4(0);
      }
      else
      {
        v313 = sub_1AE65C728();
        v314 = sub_1AE7D3864(v313);
        sub_1AE7E96D4(v314);
        if (v120 < 0)
          goto LABEL_518;
        v315 = 0;
        do
        {
          sub_1AE7D2E9C();
          if ((v316 & 1) == 0)
            sub_1AE7D2E18();
          sub_1AE50A674();
          ++v315;
          sub_1AE4F9094();
          sub_1AE4F6708();
          sub_1AE4FC564();
          sub_1AE7E9824();
          v317 = sub_1AE7D3830();
          sub_1AE7E9950(v317);
          v318 = sub_1AE7D2D18();
          v320 = sub_1AE7E9A08(v318, v319);
          nullsub_1(v320);
          a1 = (uint64_t)v733;
          v120 = (uint64_t)v743;
        }
        while (v745 != v315);
        v312 = *(_QWORD *)&v775[0];
        LOBYTE(v168) = v719;
      }
      v321 = v312;
      v727 = (void (*)(_QWORD, _QWORD))sub_1AE5B7810(v312);
      if (!v727)
        goto LABEL_268;
      LODWORD(v726) = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
      v723 = v321 + 32;
      v725 = v321;
      sub_1AE4F6804();
      v322 = 0;
      v3 = MEMORY[0x1E0DEE9E0];
      v1 = (uint64_t)&qword_1EED9A6F0;
      while (1)
      {
        if ((v726 & 1) != 0)
        {
          v323 = *(_QWORD *)(v723 + 8 * v322);
          v111 = sub_1AE4F66CC();
        }
        else
        {
          v111 = sub_1AE7E92F4(v322);
          v323 = v111;
        }
        v143 = __OFADD__(v322, 1);
        isUniquelyReferenced_nonNull_native = v322 + 1;
        if (v143)
          goto LABEL_494;
        v737 = isUniquelyReferenced_nonNull_native;
        sub_1AE4F67A4();
        sub_1AE4F66CC();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v765 = (uint64_t *)v3;
        sub_1AE7D345C(v323, (uint64_t)sub_1AE7D23D8, v775);
        v734 = v323;
        sub_1AE4F66CC();
        sub_1AE7D3480();
        v324 = sub_1AE7D3558();
        sub_1AE7D2D3C(a1);
        v736 = (_QWORD *)v3;
        if (!v266)
          break;
        v742 = v3;
LABEL_249:
        sub_1AE4F9038();
        sub_1AE508868();
        sub_1AE4FDCF0();
        sub_1AE4F9038();
        swift_bridgeObjectRelease();
        v3 = v742;
        v322 = v737;
        LOBYTE(v168) = v719;
        if ((void (*)(_QWORD, _QWORD))v737 == v727)
        {
          sub_1AE4F67AC();
          goto LABEL_269;
        }
      }
      v742 = v3;
      while (1)
      {
        v325 = a1 + *(int *)(v324 + 48);
        LOBYTE(v763[0]) = *(_BYTE *)a1;
        v3 = LOBYTE(v763[0]);
        sub_1AE7D2F54(v738, v325);
        v69 = sub_1AE536F4C(v3);
        v111 = sub_1AE641040(v69, v326);
        if (v143)
          break;
        a1 = v112;
        sub_1AE7D36E0();
        if (v142 != v143)
        {
          sub_1AE636D94(v327, isUniquelyReferenced_nonNull_native & 1);
          sub_1AE536F4C(v3);
          sub_1AE64A764();
          if (!v266)
            goto LABEL_539;
          v69 = v328;
        }
        else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1AE501548(&qword_1EED9EB78);
          sub_1AE926A60();
        }
        isUniquelyReferenced_nonNull_native = v732;
        v329 = v765;
        v742 = (uint64_t)v765;
        if ((a1 & 1) != 0)
        {
          v330 = v746;
          v331 = *(_QWORD *)(v746 + 72) * v69;
          v69 = v747;
          sub_1AE7D2D0C(v732, v765[7] + v331);
          v332 = v721;
          v333 = v738;
          v86 = v749;
          sub_1AE7CA9E0();
          v749 = v86;
          if (v86)
            goto LABEL_540;
          sub_1AE7D31B4(isUniquelyReferenced_nonNull_native);
          sub_1AE7D3080(v333);
          sub_1AE73624C(v329[7] + v331, v332, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v330 + 40));
          a1 = (uint64_t)v733;
          v120 = (uint64_t)v743;
          v1 = (uint64_t)&qword_1EED9A6F0;
        }
        else
        {
          sub_1AE4FFC58((uint64_t)&v765[v69 >> 6]);
          *(_BYTE *)(v334 + v69) = v3;
          v335 = v329[7] + *(_QWORD *)(v746 + 72) * v69;
          v69 = v747;
          v111 = sub_1AE7D2F54(v335, v738);
          v336 = v329[2];
          v143 = __OFADD__(v336, 1);
          v337 = v336 + 1;
          if (v143)
            goto LABEL_482;
          v329[2] = v337;
          a1 = (uint64_t)v733;
        }
        sub_1AE7D3480();
        v324 = sub_1AE7D3558();
        isUniquelyReferenced_nonNull_native = 1;
        sub_1AE7D2D3C(a1);
        if (v266)
          goto LABEL_249;
      }
    }
    __break(1u);
LABEL_480:
    __break(1u);
LABEL_481:
    __break(1u);
LABEL_482:
    __break(1u);
LABEL_483:
    __break(1u);
LABEL_484:
    __break(1u);
LABEL_485:
    __break(1u);
LABEL_486:
    __break(1u);
LABEL_487:
    __break(1u);
LABEL_488:
    __break(1u);
LABEL_489:
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
LABEL_490:
    __break(1u);
LABEL_491:
    __break(1u);
LABEL_492:
    __break(1u);
LABEL_493:
    __break(1u);
LABEL_494:
    __break(1u);
LABEL_495:
    sub_1AE7D2EA8(v111, v112, v113, v114, v115, v116, v117, v118);
    if (a1 < 0)
      v86 = (char *)a1;
    else
      v86 = (char *)(a1 & 0xFFFFFFFFFFFFFF8);
    sub_1AE4FB930();
    v751 = v86;
    v131 = (_OWORD *)sub_1AE507F58();
    sub_1AE4F66E8();
    v741 = (uint64_t)v131;
    if (!v131)
      return (uint64_t)v131;
    sub_1AE4FB930();
    v653 = sub_1AE926AD8();
    sub_1AE4F66E8();
    if (v653)
    {
      v121 = v653;
      v112 = v676;
      v111 = v671;
      v86 = v677;
      v114 = v669;
      v113 = v670;
      v115 = v721;
      v116 = v726;
      v118 = v685;
      goto LABEL_3;
    }
  }
  LODWORD(v724) = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  v712 = v1 + 32;
  v714 = v1;
  sub_1AE4F6730();
  v164 = 0;
  while (1)
  {
    if ((v724 & 1) != 0)
    {
      v165 = *(_QWORD **)(v712 + 8 * v164);
      v111 = sub_1AE4F66CC();
    }
    else
    {
      v111 = sub_1AE7E9550(v164);
      v165 = (_QWORD *)v111;
    }
    v143 = __OFADD__(v164++, 1);
    if (v143)
      goto LABEL_483;
    sub_1AE4F6804();
    sub_1AE4F66CC();
    v3 = sub_1AE508CEC();
    v772 = (_QWORD *)isUniquelyReferenced_nonNull_native;
    sub_1AE7D345C((uint64_t)v165, (uint64_t)sub_1AE7D2514, v777);
    v775[0] = v777[0];
    v775[1] = v777[1];
    v775[2] = v777[2];
    v776 = v778;
    v751 = v165;
    sub_1AE4F66CC();
    sub_1AE7D36F8();
    v166 = v773;
    v120 = isUniquelyReferenced_nonNull_native;
    if (v773 != 4)
      break;
LABEL_68:
    v730 = v120;
    v1 = (uint64_t)v751;
    sub_1AE4F81B8();
    sub_1AE592EFC();
    sub_1AE4FC564();
    sub_1AE4FDCF0();
    sub_1AE4F81B8();
    sub_1AE4F67AC();
    isUniquelyReferenced_nonNull_native = v730;
    v69 = v747;
    v3 = v739;
    a1 = (uint64_t)v750;
    if ((void (*)(uint64_t, uint64_t, unint64_t))v164 == v740)
    {
      sub_1AE4F81B8();
      v124 = (uint64_t)v735;
      goto LABEL_86;
    }
  }
  v120 = isUniquelyReferenced_nonNull_native;
  while (1)
  {
    v167 = v774;
    LOBYTE(v168) = v120;
    a1 = sub_1AE536F4C(v166);
    if (__OFADD__(*(_QWORD *)(v120 + 16), (v169 & 1) == 0))
    {
      __break(1u);
      goto LABEL_123;
    }
    v170 = v169;
    sub_1AE7D36E0();
    if (v142 != v143)
    {
      sub_1AE636DD0();
      LOBYTE(v168) = (_BYTE)v772;
      v171 = sub_1AE536F4C(v166);
      if ((v170 & 1) != (v172 & 1))
        goto LABEL_539;
      a1 = v171;
    }
    else if ((v3 & 1) == 0)
    {
      sub_1AE501548(&qword_1EED9EBA8);
      v168 = &v772;
      sub_1AE926A60();
    }
    v173 = v772;
    if ((v170 & 1) == 0)
    {
      v772[((unint64_t)a1 >> 6) + 8] |= 1 << a1;
      *(_BYTE *)(v173[6] + a1) = v166;
      *(_QWORD *)(v173[7] + 8 * a1) = v167;
      v174 = v173 + 2;
      v176 = v173[2];
      v143 = __OFADD__(v176, 1);
      v175 = v176 + 1;
      if (v143)
        goto LABEL_267;
      goto LABEL_83;
    }
    v174 = (_QWORD *)(v772[7] + 8 * a1);
    v175 = *v174 + v167;
    if (__OFADD__(*v174, v167))
      break;
LABEL_83:
    v120 = (uint64_t)v173;
    *v174 = v175;
    sub_1AE7D36F8();
    v166 = v773;
    v3 = 1;
    if (v773 == 4)
      goto LABEL_68;
  }
  __break(1u);
LABEL_267:
  __break(1u);
LABEL_268:
  v742 = MEMORY[0x1E0DEE9E0];
LABEL_269:
  sub_1AE4F67AC();
  v69 = v745;
  if ((v168 & 1) != 0)
  {
    sub_1AE5198C8(0);
    v339 = v338;
    goto LABEL_278;
  }
  v766 = (_QWORD *)sub_1AE65C728();
  sub_1AE7E96C8(v69);
  if ((v69 & 0x8000000000000000) != 0)
    goto LABEL_522;
  v340 = 0;
  do
  {
    sub_1AE7D2E9C();
    if ((v341 & 1) == 0)
      sub_1AE7D2E18();
    sub_1AE50A674();
    ++v340;
    sub_1AE4F9094();
    sub_1AE4F6708();
    sub_1AE4FC564();
    sub_1AE7E9818();
    sub_1AE7E9944(v766[2]);
    v342 = sub_1AE7D2D18();
    v344 = sub_1AE7EA380(v342, v343);
    nullsub_1(v344);
  }
  while (v69 != v340);
  v339 = (uint64_t)v766;
LABEL_278:
  if (sub_1AE5B7810(v339))
  {
    sub_1AE7D31C8();
    v345 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
    sub_1AE4F6730();
    v346 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    do
    {
      if ((v345 & 1) != 0)
      {
        sub_1AE4F6708();
      }
      else
      {
        v347 = sub_1AE7D31A8();
        sub_1AE7E92E8(v347);
      }
      sub_1AE4FB764();
      sub_1AE4F6708();
      sub_1AE655730();
      v766 = v346;
      sub_1AE7D3464();
      sub_1AE7CF8A4(v348, v349, v350, v351, v352);
      v749 = v86;
      if (v86)
        goto LABEL_548;
      v353 = v766;
      sub_1AE4FDCF0();
      sub_1AE4F76D8();
      sub_1AE4F6710();
      sub_1AE7D2F08();
    }
    while (!v266);
    v733 = v353;
    sub_1AE4F81B8();
    v69 = v745;
  }
  else
  {
    v733 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  sub_1AE4F81B8();
  if ((v719 & 1) != 0)
  {
    sub_1AE5198BC(0);
    v355 = v354;
    goto LABEL_297;
  }
  v765 = (uint64_t *)sub_1AE65C728();
  sub_1AE7E96BC(v69);
  if ((v69 & 0x8000000000000000) != 0)
  {
LABEL_523:
    __break(1u);
LABEL_524:
    __break(1u);
    goto LABEL_525;
  }
  v356 = 0;
  do
  {
    sub_1AE7D2E9C();
    if ((v357 & 1) == 0)
      sub_1AE7D2E18();
    sub_1AE50A674();
    ++v356;
    sub_1AE4F9094();
    sub_1AE4F6708();
    sub_1AE4FC564();
    sub_1AE7E980C();
    sub_1AE7E9938(v765[2]);
    v358 = sub_1AE7D2D18();
    v360 = sub_1AE7EA380(v358, v359);
    nullsub_1(v360);
  }
  while (v69 != v356);
  v355 = (uint64_t)v765;
LABEL_297:
  if (sub_1AE5B7810(v355))
  {
    sub_1AE7D31C8();
    v361 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
    sub_1AE4F6730();
    v362 = (uint64_t *)MEMORY[0x1E0DEE9E0];
    do
    {
      if ((v361 & 1) != 0)
      {
        sub_1AE4F6708();
      }
      else
      {
        v363 = sub_1AE7D31A8();
        sub_1AE7E92DC(v363);
      }
      sub_1AE4FB764();
      sub_1AE4F6708();
      sub_1AE655730();
      v765 = v362;
      sub_1AE7D3464();
      sub_1AE7CF4DC(v364, v365, v366, v367, v368);
      v749 = v86;
      if (v86)
        goto LABEL_548;
      v369 = v765;
      sub_1AE4FDCF0();
      sub_1AE4F76D8();
      sub_1AE4F6710();
      sub_1AE7D2F08();
    }
    while (!v266);
    v736 = v369;
    sub_1AE4F81B8();
    v69 = v745;
  }
  else
  {
    v736 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  sub_1AE4F81B8();
  if ((v719 & 1) != 0)
  {
    sub_1AE5198B0(0);
    v371 = v370;
    goto LABEL_316;
  }
  v764 = (uint64_t *)sub_1AE65C728();
  sub_1AE7E96B0(v69);
  if ((v69 & 0x8000000000000000) != 0)
    goto LABEL_524;
  v372 = 0;
  do
  {
    sub_1AE7D2E9C();
    if ((v373 & 1) == 0)
      sub_1AE7D2E18();
    sub_1AE50A674();
    ++v372;
    sub_1AE4F9094();
    sub_1AE4F6708();
    sub_1AE4FC564();
    sub_1AE7E9800();
    sub_1AE7E992C(v764[2]);
    v374 = sub_1AE7D2D18();
    v376 = sub_1AE7EA380(v374, v375);
    nullsub_1(v376);
  }
  while (v69 != v372);
  v371 = (uint64_t)v764;
LABEL_316:
  if (sub_1AE5B7810(v371))
  {
    sub_1AE7D31C8();
    v377 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
    sub_1AE4F6730();
    v378 = (uint64_t *)MEMORY[0x1E0DEE9E0];
    do
    {
      if ((v377 & 1) != 0)
      {
        sub_1AE4F6708();
      }
      else
      {
        v379 = sub_1AE7D31A8();
        sub_1AE7E92D0(v379);
      }
      sub_1AE4FB764();
      sub_1AE4F6708();
      sub_1AE655730();
      v764 = v378;
      sub_1AE7D3464();
      sub_1AE7CF114(v380, v381, v382, v383, v384);
      v749 = v86;
      if (v86)
        goto LABEL_548;
      v385 = (uint64_t)v764;
      sub_1AE4FDCF0();
      sub_1AE4F76D8();
      sub_1AE4F6710();
      sub_1AE7D2F08();
    }
    while (!v266);
    v732 = v385;
    sub_1AE4F81B8();
    v69 = v745;
  }
  else
  {
    v732 = MEMORY[0x1E0DEE9E0];
  }
  sub_1AE4F81B8();
  isUniquelyReferenced_nonNull_native = v713;
  if ((v719 & 1) != 0)
  {
    v3 = sub_1AE5198A4(0);
    goto LABEL_335;
  }
  v763[0] = sub_1AE65C728();
  sub_1AE7E96A4(v69);
  if ((v69 & 0x8000000000000000) != 0)
  {
LABEL_525:
    __break(1u);
    goto LABEL_526;
  }
  v386 = 0;
  v387 = v700;
  do
  {
    if ((v748 & 1) == 0)
      sub_1AE7D3088();
    sub_1AE50A674();
    ++v386;
    v388 = (char *)v763 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_averageSpeedInMetersPerSecond;
    sub_1AE4F9094();
    (*(void (**)(uint64_t, char *, uint64_t))(v713 + 16))(v387, v388, v709);
    sub_1AE4FC564();
    sub_1AE7E97F4();
    v389 = *(_QWORD *)(v763[0] + 16);
    sub_1AE7E9920(v389);
    v390 = sub_1AE7E99FC(v389, v387);
    nullsub_1(v390);
  }
  while (v69 != v386);
  v3 = v763[0];
  isUniquelyReferenced_nonNull_native = v713;
LABEL_335:
  v120 = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_metersPerSecond);
  sub_1AE7D37D4(v120, &qword_1EED99690);
  sub_1AE7D35D0();
  v391 = v688;
  v746 = v392;
  sub_1AE924450();
  v393 = v391;
  v394 = v709;
  v743 = *(void (**)(_QWORD, _QWORD, _QWORD))(isUniquelyReferenced_nonNull_native + 16);
  v743(v704, v393, v709);
  v395 = sub_1AE5B77A4(v3);
  if (!v395)
  {
    v120 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 32);
    goto LABEL_345;
  }
  v1 = v395;
  if (v395 < 1)
    goto LABEL_519;
  LODWORD(v738) = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  v396 = sub_1AE4F67A4();
  v397 = 0;
  v737 = v3;
  v398 = (uint64_t)v704;
  do
  {
    if ((v738 & 1) != 0)
    {
      sub_1AE7D3194(v396, v3+ ((*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80))+ *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72) * v397);
    }
    else
    {
      v399 = sub_1AE7E92C4(v397, v3);
      a1 = v702;
      if (v696 != 8)
        goto LABEL_502;
      v763[0] = v399;
      sub_1AE7D3194(v399, (uint64_t)v763);
      sub_1AE4FC718();
    }
    ++v397;
    v120 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 32);
    v400 = v703;
    v401 = sub_1AE7D3660();
    sub_1AE7D2F54(v401, v402);
    v403 = v701;
    sub_1AE924468();
    v404 = *(void (**)(uint64_t, unint64_t))(v713 + 8);
    v405 = v400;
    isUniquelyReferenced_nonNull_native = v713;
    v404(v405, v69);
    v404(v398, v69);
    v396 = sub_1AE7D2F54(v398, v403);
    v69 = v745;
    v3 = v737;
  }
  while (v1 != v397);
  sub_1AE4F6728();
  v394 = v709;
LABEL_345:
  a1 = v682;
  ((void (*)(uint64_t, void (*)(uint64_t, uint64_t), uint64_t))v120)(v682, v704, v394);
  v406 = *(void (**)(uint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 8);
  v406(v688, v394);
  sub_1AE4F6728();
  sub_1AE924420();
  v407 = sub_1AE7D3450();
  v727 = v406;
  ((void (*)(uint64_t))v406)(v407);
  if ((v719 & 1) != 0)
  {
    sub_1AE519898(0);
    v409 = v408;
    goto LABEL_354;
  }
  v762 = sub_1AE65C728();
  sub_1AE7E9698(v69);
  if ((v69 & 0x8000000000000000) != 0)
  {
LABEL_526:
    __break(1u);
LABEL_527:
    __break(1u);
    goto LABEL_528;
  }
  isUniquelyReferenced_nonNull_native = 0;
  do
  {
    sub_1AE7D2E9C();
    if ((v410 & 1) == 0)
      sub_1AE7D2E18();
    sub_1AE50A674();
    ++isUniquelyReferenced_nonNull_native;
    sub_1AE4F9094();
    sub_1AE4F6708();
    sub_1AE4FC564();
    sub_1AE7E97E8();
    a1 = *(_QWORD *)(v762 + 16);
    sub_1AE7E9914(a1);
    v411 = sub_1AE7D2D18();
    v413 = sub_1AE7EA380(v411, v412);
    nullsub_1(v413);
  }
  while (v69 != isUniquelyReferenced_nonNull_native);
  v409 = v762;
LABEL_354:
  if (sub_1AE5B7810(v409))
  {
    sub_1AE7D31C8();
    v414 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
    sub_1AE4F6730();
    v415 = MEMORY[0x1E0DEE9E0];
    do
    {
      if ((v414 & 1) != 0)
      {
        sub_1AE4F6708();
      }
      else
      {
        v416 = sub_1AE7D31A8();
        sub_1AE7E92B8(v416);
      }
      a1 = 1;
      sub_1AE4FB764();
      sub_1AE4F6708();
      sub_1AE655730();
      v762 = v415;
      sub_1AE7D3464();
      sub_1AE7CED4C(v417, v418, v419, v420, v421);
      v749 = v86;
      if (v86)
        goto LABEL_548;
      v422 = v762;
      sub_1AE4FDCF0();
      sub_1AE4F76D8();
      sub_1AE4F6710();
      sub_1AE7D2F08();
    }
    while (!v266);
    v738 = v422;
    sub_1AE4F81B8();
    v69 = v745;
  }
  else
  {
    v738 = MEMORY[0x1E0DEE9E0];
  }
  sub_1AE4F81B8();
  if ((v719 & 1) != 0)
  {
    sub_1AE51988C(0);
    v1 = v423;
    goto LABEL_373;
  }
  v424 = sub_1AE65C728();
  v425 = sub_1AE7D2ED8(v424);
  sub_1AE7E968C(v425);
  if ((v69 & 0x8000000000000000) != 0)
    goto LABEL_527;
  isUniquelyReferenced_nonNull_native = 0;
  do
  {
    sub_1AE7D2E9C();
    if ((v426 & 1) == 0)
      sub_1AE7D2E18();
    sub_1AE50A674();
    ++isUniquelyReferenced_nonNull_native;
    sub_1AE4F9094();
    sub_1AE4F6708();
    sub_1AE4FC564();
    sub_1AE7E97DC();
    v427 = sub_1AE7D2D90();
    sub_1AE7E9908(v427);
    v428 = sub_1AE7D2D18();
    v430 = sub_1AE7EA380(v428, v429);
    nullsub_1(v430);
  }
  while (v69 != isUniquelyReferenced_nonNull_native);
  v1 = v759[0];
LABEL_373:
  if (sub_1AE5B7810(v1))
  {
    sub_1AE7D31C8();
    v431 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
    sub_1AE4F6730();
    v432 = MEMORY[0x1E0DEE9E0];
    do
    {
      if ((v431 & 1) != 0)
      {
        sub_1AE4F6708();
      }
      else
      {
        v433 = sub_1AE7D31A8();
        sub_1AE7E92AC(v433);
      }
      a1 = 1;
      sub_1AE4FB764();
      sub_1AE4F6708();
      sub_1AE655730();
      v759[0] = v432;
      sub_1AE7D3464();
      sub_1AE7CE984(v434, v435, v436, v437, v438);
      v749 = v86;
      if (v86)
        goto LABEL_548;
      v439 = v759[0];
      sub_1AE4FDCF0();
      sub_1AE4F76D8();
      sub_1AE4F6710();
      sub_1AE7D2F08();
    }
    while (!v266);
    v737 = v439;
    sub_1AE4F81B8();
    v69 = v745;
  }
  else
  {
    v737 = MEMORY[0x1E0DEE9E0];
  }
  sub_1AE4F81B8();
  if ((v719 & 1) != 0)
  {
    sub_1AE519880(0);
    v441 = v440;
    goto LABEL_392;
  }
  v442 = sub_1AE65C728();
  v443 = sub_1AE7D2ED8(v442);
  sub_1AE7E9680(v443);
  if ((v69 & 0x8000000000000000) != 0)
  {
LABEL_528:
    __break(1u);
LABEL_529:
    __break(1u);
LABEL_530:
    __break(1u);
LABEL_531:
    __break(1u);
    goto LABEL_532;
  }
  isUniquelyReferenced_nonNull_native = 0;
  do
  {
    sub_1AE7D2E9C();
    if ((v444 & 1) == 0)
      sub_1AE7D2E18();
    sub_1AE50A674();
    ++isUniquelyReferenced_nonNull_native;
    sub_1AE7BD1D4();
    sub_1AE4FC564();
    sub_1AE7E97D0();
    v445 = sub_1AE7D2D90();
    sub_1AE7E98FC(v445);
    v446 = sub_1AE7D2D18();
    v448 = sub_1AE7EA380(v446, v447);
    nullsub_1(v448);
  }
  while (v69 != isUniquelyReferenced_nonNull_native);
  v441 = v759[0];
LABEL_392:
  if (!sub_1AE5B7810(v441))
  {
    v746 = MEMORY[0x1E0DEE9E0];
    goto LABEL_401;
  }
  sub_1AE7D34E8();
  if (v142 != v143)
    goto LABEL_520;
  a1 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  sub_1AE4F66CC();
  v449 = 0;
  v746 = MEMORY[0x1E0DEE9E0];
  v86 = v749;
  do
  {
    if ((a1 & 1) != 0)
    {
      v450 = sub_1AE7D3640();
    }
    else
    {
      v451 = sub_1AE7D36BC();
      v450 = sub_1AE7E92A0(v451);
      v69 = v745;
    }
    ++v449;
    v746 = sub_1AE7BB4AC(v450, v746, (uint64_t)sub_1AE7D2448, (void (*)(uint64_t))sub_1AE7D0034);
  }
  while (isUniquelyReferenced_nonNull_native != v449);
  v749 = v86;
  sub_1AE4F9038();
LABEL_401:
  sub_1AE4F9038();
  if ((v719 & 1) != 0)
  {
    sub_1AE519874(0);
    v453 = v452;
    goto LABEL_410;
  }
  v454 = sub_1AE65C728();
  v455 = sub_1AE7D2ED8(v454);
  sub_1AE7E9674(v455);
  if ((v69 & 0x8000000000000000) != 0)
    goto LABEL_529;
  isUniquelyReferenced_nonNull_native = 0;
  do
  {
    sub_1AE7D2E9C();
    if ((v456 & 1) == 0)
      sub_1AE7D2E18();
    sub_1AE50A674();
    ++isUniquelyReferenced_nonNull_native;
    sub_1AE7BD2CC();
    sub_1AE4FC564();
    sub_1AE7E97C4();
    v457 = sub_1AE7D2D90();
    sub_1AE7E98F0(v457);
    v458 = sub_1AE7D2D18();
    v460 = sub_1AE7EA380(v458, v459);
    nullsub_1(v460);
  }
  while (v69 != isUniquelyReferenced_nonNull_native);
  v453 = v759[0];
LABEL_410:
  v461 = sub_1AE5B7810(v453);
  v3 = MEMORY[0x1E0DEE9E0];
  if (v461)
  {
    sub_1AE7D34E8();
    if (v142 == v143)
    {
      a1 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
      sub_1AE4F66CC();
      v462 = 0;
      v1 = (uint64_t)sub_1AE7D242C;
      v86 = v749;
      do
      {
        if ((a1 & 1) != 0)
        {
          v463 = sub_1AE7D3640();
        }
        else
        {
          v464 = sub_1AE7D36BC();
          v463 = sub_1AE7E9294(v464);
        }
        ++v462;
        v3 = sub_1AE7BB4AC(v463, v3, (uint64_t)sub_1AE7D242C, (void (*)(uint64_t))sub_1AE7CFC6C);
      }
      while (isUniquelyReferenced_nonNull_native != v462);
      v749 = v86;
      sub_1AE4F9038();
      v69 = v745;
      goto LABEL_418;
    }
LABEL_521:
    __break(1u);
LABEL_522:
    __break(1u);
    goto LABEL_523;
  }
LABEL_418:
  sub_1AE4F9038();
  if ((v719 & 1) != 0)
  {
    sub_1AE519868(0);
    v466 = v465;
    goto LABEL_427;
  }
  v467 = sub_1AE65C728();
  v468 = sub_1AE7D2ED8(v467);
  sub_1AE7E9668(v468);
  if ((v69 & 0x8000000000000000) != 0)
    goto LABEL_530;
  v469 = 0;
  do
  {
    sub_1AE7D2E9C();
    if ((v470 & 1) == 0)
      sub_1AE7D2E18();
    sub_1AE50A674();
    ++v469;
    sub_1AE7BD3C4();
    sub_1AE4FC564();
    sub_1AE7E97B8();
    v471 = sub_1AE7D2D90();
    sub_1AE7E98E4(v471);
    v472 = sub_1AE7D2D18();
    v474 = sub_1AE7EA380(v472, v473);
    nullsub_1(v474);
  }
  while (v69 != v469);
  v466 = (uint64_t *)v759[0];
LABEL_427:
  v759[0] = MEMORY[0x1E0DEE9E0];
  v475 = sub_1AE5B7810((uint64_t)v466);
  v734 = v3;
  if (!v475)
    goto LABEL_436;
  isUniquelyReferenced_nonNull_native = v475;
  v476 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
  sub_1AE4F66CC();
  v69 = 4;
  v1 = (uint64_t)sub_1AE7D2464;
  a1 = (uint64_t)sub_1AE7D03FC;
  while (2)
  {
    if ((v476 & 1) != 0)
    {
      v120 = v466[v69];
      v111 = sub_1AE4F6708();
    }
    else
    {
      v111 = sub_1AE7E9288(v69 - 4);
      v120 = v111;
    }
    v86 = v749;
    v3 = v69 - 3;
    if (__OFADD__(v69 - 4, 1))
      goto LABEL_490;
    v761 = v120;
    sub_1AE7CAAA4(v759, (uint64_t)&v761, (uint64_t)sub_1AE7D2464, (void (*)(uint64_t))sub_1AE7D03FC);
    v749 = v86;
    if (v86)
    {
LABEL_556:
      sub_1AE4F9038();
      goto LABEL_544;
    }
    sub_1AE4F76D8();
    ++v69;
    if (v3 != isUniquelyReferenced_nonNull_native)
      continue;
    break;
  }
  sub_1AE4F9038();
  v69 = v745;
  v3 = v734;
LABEL_436:
  sub_1AE4F9038();
  v745 = v759[0];
  v120 = (uint64_t)v750;
  if ((v719 & 1) != 0)
  {
    sub_1AE51985C(0);
    v478 = v477;
    goto LABEL_447;
  }
  v479 = sub_1AE65C728();
  v480 = sub_1AE7D2ED8(v479);
  sub_1AE7E965C(v480);
  if ((v69 & 0x8000000000000000) != 0)
    goto LABEL_531;
  isUniquelyReferenced_nonNull_native = 0;
  while (1)
  {
    if (v69 == isUniquelyReferenced_nonNull_native)
    {
      __break(1u);
LABEL_502:
      __break(1u);
      goto LABEL_503;
    }
    if ((v748 & 1) != 0)
    {
      sub_1AE50A674();
    }
    else
    {
      v481 = sub_1AE5061E4();
      v466 = (uint64_t *)MEMORY[0x1AF453B80](v481);
    }
    v86 = v749;
    v760 = (uint64_t)v466;
    sub_1AE7CAA40(&v760, &v761);
    v749 = v86;
    if (v86)
      break;
    ++isUniquelyReferenced_nonNull_native;
    sub_1AE4FC564();
    sub_1AE7E97AC();
    v482 = sub_1AE7D2D90();
    sub_1AE7E98D8(v482);
    v483 = sub_1AE7D2D18();
    v485 = sub_1AE7EA380(v483, v484);
    v466 = v759;
    nullsub_1(v485);
    v120 = (uint64_t)v750;
    if (v69 == isUniquelyReferenced_nonNull_native)
    {
      v478 = v759[0];
LABEL_447:
      v759[0] = MEMORY[0x1E0DEE9E0];
      v486 = sub_1AE5B7810(v478);
      if (v486)
      {
        isUniquelyReferenced_nonNull_native = v486;
        v487 = j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
        sub_1AE4F66CC();
        a1 = 4;
        v1 = (uint64_t)sub_1AE7D2480;
        v120 = (uint64_t)sub_1AE7D07C4;
        do
        {
          if ((v487 & 1) != 0)
          {
            v69 = *(_QWORD *)(v478 + 8 * a1);
            v111 = swift_bridgeObjectRetain();
          }
          else
          {
            v111 = sub_1AE7E927C(a1 - 4);
            v69 = v111;
          }
          v488 = v749;
          v3 = a1 - 3;
          if (__OFADD__(a1 - 4, 1))
            goto LABEL_491;
          v761 = v69;
          sub_1AE7CAAA4(v759, (uint64_t)&v761, (uint64_t)sub_1AE7D2480, (void (*)(uint64_t))sub_1AE7D07C4);
          v749 = v488;
          if (v488)
            goto LABEL_556;
          swift_bridgeObjectRelease();
          ++a1;
        }
        while (v3 != isUniquelyReferenced_nonNull_native);
        sub_1AE4F9038();
        v3 = v734;
      }
      v489 = sub_1AE4F9038();
      v490 = v759[0];
      MEMORY[0x1E0C80A78](v489);
      v1 = (uint64_t)&qword_1EED9EBF8;
      v491 = (unint64_t)v749;
      sub_1AE7D35FC((uint64_t)sub_1AE7D2580, (uint64_t)&v661, v732, v492, v493, v494, v495, v496, v664, v665, v666, v667, v668, v669, v670, v671, v672, v673, v674,
        v675);
      v725 = v497;
      sub_1AE7D29FC();
      MEMORY[0x1E0C80A78](v498);
      sub_1AE7D29A0();
      sub_1AE7D3620((uint64_t)sub_1AE7D26D4, v499, (uint64_t)v733, v500, v501, v502, v503, v504, v664, v665, v666, v667, v668, v669, v670, v671, v672, v673, v674,
        v675);
      v723 = v505;
      sub_1AE7D29FC();
      MEMORY[0x1E0C80A78](v506);
      sub_1AE7D29A0();
      sub_1AE7CE730((uint64_t)sub_1AE7D26D4, v507, (uint64_t)v744, (uint64_t)&qword_1EED9A850, (uint64_t)&qword_1EED9EBE8, v508, v509, v510, v664, v665, v666, v667, v668, v669, v670, v671, v672, v673, v674,
        v675);
      v722 = (char *)v511;
      sub_1AE7D29FC();
      MEMORY[0x1E0C80A78](v512);
      sub_1AE7D29A0();
      sub_1AE7CE730((uint64_t)sub_1AE7D26D4, v513, v3, (uint64_t)&qword_1EED9A850, (uint64_t)&qword_1EED9EBD8, v514, v515, v516, v664, v665, v666, v667, v668, v669, v670, v671, v672, v673, v674,
        v675);
      v721 = v517;
      sub_1AE7D29FC();
      MEMORY[0x1E0C80A78](v518);
      sub_1AE7D29A0();
      v726 = v490;
      sub_1AE7D3608((uint64_t)sub_1AE7D26D4, v519, v490, v520, v521, v522, v523, v524, v664, v665, v666, v667, v668, v669, v670, v671, v672, v673, v674,
        v675);
      v720 = v525;
      sub_1AE7D29FC();
      MEMORY[0x1E0C80A78](v526);
      sub_1AE7D29A0();
      sub_1AE7D3614((uint64_t)sub_1AE7D26D4, v527, v745, v528, v529, v530, v531, v532, v664, v665, v666, v667, v668, v669, v670, v671, v672, v673, v674,
        v675);
      v719 = v533;
      sub_1AE7D29FC();
      MEMORY[0x1E0C80A78](v534);
      v662 = (uint64_t)v698;
      sub_1AE7D35FC((uint64_t)sub_1AE7D25A0, (uint64_t)&v661, (uint64_t)v736, v535, v536, v537, v538, v539, v664, v665, v666, v667, v668, v669, v670, v671, v672, v673, v674,
        v675);
      v718 = v540;
      sub_1AE7D29FC();
      MEMORY[0x1E0C80A78](v541);
      sub_1AE7D29A0();
      sub_1AE7D3620((uint64_t)sub_1AE7D26E8, v542, v742, v543, v544, v545, v546, v547, v664, v665, v666, v667, v668, v669, v670, v671, v672, v673, v674,
        v675);
      v717 = v548;
      sub_1AE7D29FC();
      MEMORY[0x1E0C80A78](v549);
      sub_1AE7D29A0();
      sub_1AE7CE730((uint64_t)sub_1AE7D26E8, v550, (uint64_t)v751, (uint64_t)&qword_1EED9E350, (uint64_t)&qword_1EED9EBE8, v551, v552, v553, v664, v665, v666, v667, v668, v669, v670, v671, v672, v673, v674,
        v675);
      v714 = v554;
      sub_1AE7D29FC();
      MEMORY[0x1E0C80A78](v555);
      sub_1AE7D29A0();
      sub_1AE7CE730((uint64_t)sub_1AE7D26E8, v556, v738, (uint64_t)&qword_1EED9E350, (uint64_t)&qword_1EED9EBD8, v557, v558, v559, v664, v665, v666, v667, v668, v669, v670, v671, v672, v673, v674,
        v675);
      v713 = v560;
      sub_1AE7D29FC();
      MEMORY[0x1E0C80A78](v561);
      sub_1AE7D29A0();
      sub_1AE7D3608((uint64_t)sub_1AE7D26E8, v562, v746, v563, v564, v565, v566, v567, v664, v665, v666, v667, v668, v669, v670, v671, v672, v673, v674,
        v675);
      v712 = v568;
      sub_1AE7D29FC();
      MEMORY[0x1E0C80A78](v569);
      sub_1AE7D29A0();
      sub_1AE7D3614((uint64_t)sub_1AE7D26E8, v570, v737, v571, v572, v573, v574, v575, v664, v665, v666, v667, v668, v669, v670, v671, v672, v673, v674,
        v675);
      v711 = v576;
      isUniquelyReferenced_nonNull_native = v491;
      sub_1AE519850(0);
      v761 = v577;
      a1 = (uint64_t)v750;
      sub_1AE4FB930();
      v3 = 4;
      do
      {
        v120 = v3 - 4;
        if ((v748 & 1) == 0)
          sub_1AE7D2FDC();
        v578 = *(_QWORD *)(a1 + 8 * v3);
        v111 = sub_1AE4F66E0();
        v69 = v3 - 3;
        if (__OFADD__(v120, 1))
          goto LABEL_486;
        v760 = v578;
        sub_1AE7CAB5C(&v760, &OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceSpentInTrafficBuckets, v759);
        if (isUniquelyReferenced_nonNull_native)
          goto LABEL_550;
        isUniquelyReferenced_nonNull_native = 0;
        sub_1AE4FC564();
        if (v759[0])
        {
          sub_1AE8DD414();
          v579 = sub_1AE7D35A4();
          sub_1AE8DD780(v579);
          v580 = sub_1AE7D32C0();
          v583 = sub_1AE8DDD74(v581, v582, v580);
          nullsub_1(v583);
        }
        ++v3;
      }
      while (v69 != v741);
      sub_1AE4F66E8();
      v584 = v761;
      v585 = (uint64_t)v736;
      sub_1AE4F66C4();
      v710 = sub_1AE7BA094(MEMORY[0x1E0DEE9E0], v584, v585);
      sub_1AE4F9038();
      sub_1AE519844(0);
      v761 = v586;
      sub_1AE4FB930();
      v3 = 4;
      isUniquelyReferenced_nonNull_native = (unint64_t)&OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceSpentAtSpeedBuckets;
      do
      {
        v120 = v3 - 4;
        if ((v748 & 1) == 0)
          sub_1AE7D2FDC();
        v587 = *(_QWORD *)(a1 + 8 * v3);
        v111 = sub_1AE4F66E0();
        v69 = v3 - 3;
        if (__OFADD__(v120, 1))
          goto LABEL_487;
        v760 = v587;
        sub_1AE7CAB5C(&v760, &OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceSpentAtSpeedBuckets, v759);
        sub_1AE4FC564();
        if (v759[0])
        {
          sub_1AE8DD408();
          v588 = sub_1AE7D35A4();
          sub_1AE8DD774(v588);
          v589 = sub_1AE7D32C0();
          v592 = sub_1AE8DD9AC(v590, v591, v589);
          nullsub_1(v592);
        }
        ++v3;
        v266 = v69 == v741;
        v593 = v747;
      }
      while (!v266);
      sub_1AE4F66E8();
      v594 = v761;
      v595 = v742;
      sub_1AE4F66C4();
      v741 = sub_1AE7BA1AC(MEMORY[0x1E0DEE9E0], v594, v595);
      v596 = sub_1AE4F9038();
      sub_1AE7D2FB4(v596, &OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceSpentAtRelativeSpeeds, (unint64_t)sub_1AE51B94C);
      v597 = v751;
      sub_1AE4F6730();
      v598 = sub_1AE7D33A8();
      v708 = sub_1AE7BA2D4(v598, v599, (uint64_t)v597);
      v600 = sub_1AE4F9038();
      sub_1AE7D2FB4(v600, &OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distancePerRoadType, (unint64_t)sub_1AE51B928);
      sub_1AE4F6708();
      v601 = sub_1AE7D3038();
      v707 = sub_1AE7BA3FC(v601, v602, v603);
      v604 = sub_1AE4F9038();
      sub_1AE7D2FB4(v604, &OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distancePerWeatherType, (unint64_t)sub_1AE51B904);
      sub_1AE4F6708();
      v605 = sub_1AE7D3038();
      v706 = sub_1AE7BA524(v605, v606, v607);
      v608 = sub_1AE4F9038();
      sub_1AE7D2FB4(v608, &OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distancePerTerrainType, (unint64_t)sub_1AE51B8E0);
      sub_1AE4F6708();
      v609 = sub_1AE7D3038();
      v705 = sub_1AE7BA64C(v609, v610, v611);
      sub_1AE4F9038();
      sub_1AE7B90D8(a1);
      sub_1AE7408E0(v612);
      sub_1AE4F9038();
      sub_1AE7B8AA8(a1, 0.0, 0.0);
      sub_1AE7B9254();
      v750 = (id)objc_opt_self();
      v613 = objc_msgSend(v750, sel_kilowattHours);
      sub_1AE524254(0, &qword_1EED99698);
      v614 = v675;
      sub_1AE7D34B4();
      sub_1AE924450();
      sub_1AE7D33B4();
      v615 = *(void (**)(uint64_t, unint64_t))(v686 + 8);
      v616 = v673;
      v615(v614, v673);
      sub_1AE4F76D8();
      sub_1AE7B9254();
      v617 = objc_msgSend(v750, sel_kilowattHours);
      sub_1AE924450();
      sub_1AE7D33B4();
      v675 = v614;
      v704 = (void (*)(uint64_t, uint64_t))v615;
      v615(v614, v616);
      sub_1AE4F76D8();
      sub_1AE7B9404(a1, (uint64_t)&v758, &OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numBrakingEvents);
      v619 = (void (*)(_QWORD, _QWORD, _QWORD))sub_1AE7D2F88(v618);
      v620 = sub_1AE4F9038();
      sub_1AE7D380C(v620, (uint64_t)&v757, &OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numAccelEvents);
      v750 = (id)sub_1AE7D2F88(v621);
      v622 = sub_1AE4F9038();
      sub_1AE7D380C(v622, (uint64_t)&v756, &OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numHighSpeedEvents);
      v748 = sub_1AE7D2F88(v623);
      sub_1AE4F9038();
      v624 = sub_1AE7B9560(a1, (uint64_t)&v755, (uint64_t (*)(uint64_t))sub_1AE521F50, &OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_roadDistancesInMeters);
      sub_1AE519838(0);
      v625 = (_QWORD *)sub_1AE925C98();
      v702 = sub_1AE7BA764(v625, v624);
      v626 = sub_1AE4F76D8();
      v627 = sub_1AE7D3800(v626, (uint64_t)&v754, (uint64_t (*)(uint64_t))sub_1AE521F1C, &OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_roadSpeedBuckets);
      v701 = sub_1AE7D366C(v627, v628, (uint64_t)sub_1AE7D2640, (void (*)(uint64_t))sub_1AE7D1560);
      v629 = sub_1AE4F76D8();
      v630 = sub_1AE7D3800(v629, (uint64_t)&v753, (uint64_t (*)(uint64_t))sub_1AE521EE8, &OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_roadRelativeSpeedBuckets);
      v700 = sub_1AE7D366C(v630, v631, (uint64_t)sub_1AE7D264C, (void (*)(uint64_t))sub_1AE7D1B74);
      sub_1AE4F76D8();
      v632 = sub_1AE7B9560(a1, (uint64_t)&v752, (uint64_t (*)(uint64_t))sub_1AE521EB4, &OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_roadTimes);
      sub_1AE51982C(0);
      v633 = (_QWORD *)sub_1AE925C98();
      v634 = sub_1AE7BAC94(v633, v632);
      sub_1AE4F76D8();
      v635 = sub_1AE7B9978(a1);
      v636 = sub_1AE7B96C4(v635);
      sub_1AE4F9038();
      sub_1AE519820(0);
      sub_1AE524254(0, &qword_1EED9A668);
      sub_1AE7D25C0();
      v637 = (_QWORD *)sub_1AE925C98();
      v638 = sub_1AE7BB0D8(v637, v636);
      v749 = 0;
      sub_1AE4F76D8();
      if ((v668 & 0x100000000) == 0)
      {
        v696 = v638;
        v699 = v634;
        v639 = (uint64_t)v698;
        if ((v665 & 0x100000000) == 0)
        {
          v694 = type metadata accessor for KTSDataAggregateRepresentation(0);
          v740(v728, v639, v593);
          sub_1AE7D3130(v729, v679);
          v640 = v739;
          v641 = (void (*)(uint64_t, uint64_t, uint64_t))v731;
          v731(v715, (uint64_t)v695, v739);
          v641(v716, v691, v640);
          v743(v703, v690, v709);
          v642 = *(void (**)(uint64_t, uint64_t, unint64_t))(v686 + 16);
          v743 = v619;
          v643 = v673;
          v642(v675, v674, v673);
          v644 = v667;
          v642(v667, v689, v643);
          v645 = v669;
          sub_1AE7D3130(v669, (uint64_t)v683);
          v646 = v670;
          sub_1AE7D3130(v670, v684);
          v647 = v671;
          sub_1AE7D3130(v671, v676);
          v648 = v672;
          sub_1AE7D3130(v672, (uint64_t)v677);
          KTSDataAggregateRepresentation.__allocating_init(startTime:endTime:distanceInMeters:elevationGainInMeters:distanceBuckets:durationInSeconds:expectedDurationInSecondsNoTraffic:distanceSpentInTrafficBuckets:timeSpentInTrafficBuckets:distanceSpentAtSpeedBuckets:timeSpentAtSpeedBuckets:distanceSpentAtRelativeSpeeds:timeSpentAtRelativeSpeeds:distancePerRoadType:timePerRoadType:distancePerWeatherType:timePerWeatherType:distancePerTerrainType:timePerTerrainType:averageSpeedInMetersPerSecond:score:usageKwh:optimalUsageKwh:numBrakingEvents:numAccelEvents:numHighSpeedEvents:roadDistancesInMeters:roadSpeedBuckets:roadRelativeSpeedBuckets:roadTimes:lifeEventIds:ktsSegmentIds:maxTripDistanceInMeters:avgTripDistanceInMeters:maxElevationGainInMeters:avgElevationGainInMeters:percentTimeSpentAtSpeedBuckets:percentTimeSpentAtTrafficBuckets:percentTimeSpentAtRelativeSpeeds:percentTimeSpentAtRoadTypes:percentTimeSpentInWeatherTypes:percentTimeSpentInTerrainTypes:percentDistanceTraveledAtSpeedBuckets:percentDistanceTraveledAtTra(v728, v729, v730, v715, v716, (uint64_t)v736, v732, v742, (uint64_t)v733, (uint64_t)v751, (uint64_t)v744, v738, v734, v746, v726, v737, v745, v703, v675,
            v644,
            (uint64_t)v743,
            (uint64_t)v750,
            v748,
            v702,
            v701,
            v700,
            v699,
            (uint64_t)v697,
            (uint64_t)v680,
            v645,
            v646,
            v647,
            v648,
            v723,
            v725,
            (uint64_t)v722,
            v721,
            v720,
            v719,
            v717,
            v718,
            v714,
            v713,
            v712,
            v711,
            v741,
            v710,
            v708,
            v707,
            v706,
            v705,
            v696,
            v664,
            v665,
            v666,
            v667,
            v668,
            v669,
            v670,
            v671,
            v672,
            v673,
            v674);
          v131 = v649;
          v650 = v704;
          v704(v689, v643);
          v650(v674, v643);
          v727(v690, v709);
          v651 = v739;
          v652 = (void (*)(char *, uint64_t))v724;
          v724(v691, v739);
          v735((uint64_t)v677, v593);
          sub_1AE7D31C0(v676);
          sub_1AE7D31C0(v679);
          sub_1AE7D31C0(v684);
          sub_1AE7D31C0((uint64_t)v683);
          v652(v695, v651);
          sub_1AE7D31C0((uint64_t)v698);
          return (uint64_t)v131;
        }
LABEL_533:
        __break(1u);
LABEL_539:
        sub_1AE926DE4();
        __break(1u);
LABEL_540:
        sub_1AE7D3428();
        v764 = (uint64_t *)v749;
        v658 = v749;
        sub_1AE501548((uint64_t *)&unk_1ED319C60);
        if ((sub_1AE7D3168() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          sub_1AE7D3428();
          sub_1AE508868();
          v660 = v764;
          goto LABEL_547;
        }
        v766 = (_QWORD *)sub_1AE7D3704();
        v767 = v659;
        sub_1AE4FDA58();
        sub_1AE7D3188();
        sub_1AE926A48();
        sub_1AE78B9E0();
LABEL_542:
        sub_1AE925F08();
        LODWORD(v663) = 0;
        v662 = 783;
        sub_1AE926AB4();
        __break(1u);
LABEL_543:
        swift_bridgeObjectRelease();
        sub_1AE7D3428();
        sub_1AE508868();

LABEL_544:
        swift_bridgeObjectRelease();
        goto LABEL_549;
      }
LABEL_532:
      __break(1u);
      goto LABEL_533;
    }
  }
  sub_1AE4FC564();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1AE7CA980()
{
  sub_1AE524254(0, &qword_1EED996A8);
  return sub_1AE924468();
}

uint64_t sub_1AE7CA9E0()
{
  sub_1AE524254(0, &qword_1EED996A0);
  return sub_1AE924468();
}

uint64_t sub_1AE7CAA40@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_timePerWeatherType);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE7CAAA4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v7 = *a1;
  v8 = swift_bridgeObjectRetain();
  result = sub_1AE7BB4AC(v8, v7, a3, a4);
  *a1 = result;
  return result;
}

double sub_1AE7CAAF0@<D0>(uint64_t *a1@<X2>, double *a2@<X8>)
{
  double v3;
  double v4;
  double v5;
  double result;

  sub_1AE501548(a1);
  sub_1AE92445C();
  v4 = v3;
  sub_1AE92445C();
  result = v4 / v5;
  *a2 = result;
  return result;
}

uint64_t sub_1AE7CAB5C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  v4 = *a1;
  v5 = (uint64_t *)(*a1 + *a2);
  sub_1AE4F9094();
  v6 = *v5;
  v7 = (uint64_t *)(v4 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_score);
  sub_1AE4F9094();
  v8 = *v7;
  *a3 = v6;
  a3[1] = v8;
  return sub_1AE4F6730();
}

uint64_t sub_1AE7CABD0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  _BOOL8 v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  id v20;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;

  v2 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain_n();
    v3 = sub_1AE926AD8();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v24 = v2 & 0xC000000000000001;
      v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v5 = 4;
      v23 = v2;
      while (1)
      {
        if (v24)
          v6 = (id)MEMORY[0x1AF453B80](v5 - 4, v2);
        else
          v6 = *(id *)(v2 + 8 * v5);
        v7 = v6;
        v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
LABEL_19:
          __break(1u);
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
        swift_isUniquelyReferenced_nonNull_native();
        sub_1AE537530();
        v11 = v4[2];
        v12 = (v10 & 1) == 0;
        v2 = v11 + v12;
        if (__OFADD__(v11, v12))
          goto LABEL_19;
        v13 = v9;
        v14 = v10;
        sub_1AE501548(&qword_1EEDA3190);
        if ((sub_1AE926A54() & 1) != 0)
        {
          sub_1AE537530();
          if ((v14 & 1) != (v16 & 1))
          {
            sub_1AE524254(0, &qword_1EED9A668);
            result = sub_1AE926DE4();
            __break(1u);
            return result;
          }
          v13 = v15;
        }
        if ((v14 & 1) != 0)
        {
          *(_QWORD *)(v4[7] + 8 * v13) = 1;
        }
        else
        {
          v4[(v13 >> 6) + 8] |= 1 << v13;
          *(_QWORD *)(v4[6] + 8 * v13) = v7;
          *(_QWORD *)(v4[7] + 8 * v13) = 1;
          v17 = v4[2];
          v18 = __OFADD__(v17, 1);
          v19 = v17 + 1;
          if (v18)
            goto LABEL_20;
          v4[2] = v19;
          v20 = v7;
        }

        swift_bridgeObjectRelease();
        ++v5;
        v2 = v23;
        if (v8 == v3)
          goto LABEL_23;
      }
    }
  }
  v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_23:
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t static KTSDataAggregateRepresentation.emptyRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  sub_1AE4FC4D4();
  v102 = v0;
  v103 = v1;
  sub_1AE501548((uint64_t *)&unk_1EED9E340);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F686C();
  v100 = v3;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE5094B0();
  v99 = v5;
  sub_1AE501548(&qword_1EED9A888);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  v97 = v7;
  sub_1AE501548(&qword_1EED9A850);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F686C();
  v98 = v9;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v10);
  v89 = (uint64_t)&v56 - v11;
  sub_1AE501548(&qword_1EED9E350);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F686C();
  v96 = v13;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F6A60();
  v95 = v15;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F6A60();
  v94 = v17;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F6A60();
  v93 = v19;
  sub_1AE4F9350();
  v21 = MEMORY[0x1E0C80A78](v20);
  v91 = (uint64_t)&v56 - v22;
  MEMORY[0x1E0C80A78](v21);
  v92 = (uint64_t)&v56 - v23;
  v24 = (void *)sub_1AE7D32A0();
  sub_1AE7D2FC8((uint64_t)objc_msgSend(v24, sel_meters), &qword_1EED996A0);
  sub_1AE7D3090();
  v25 = objc_msgSend(v24, (SEL)&selRef_enableDebug + 6);
  sub_1AE7D3090();
  sub_1AE7CB6B4();
  v90 = sub_1AE925C98();
  v26 = (void *)sub_1AE7D32A0();
  sub_1AE7D2FC8((uint64_t)objc_msgSend(v26, sel_seconds), &qword_1EED996A8);
  sub_1AE7D3448();
  v27 = objc_msgSend(v26, sel_seconds);
  sub_1AE7D3448();
  v76 = sub_1AE7CB6F0();
  v88 = sub_1AE7D2CAC();
  v87 = sub_1AE7D2CC0();
  sub_1AE7CB72C();
  v86 = sub_1AE7D300C();
  v85 = sub_1AE7D300C();
  v74 = sub_1AE7CB768();
  v84 = sub_1AE7D2CAC();
  v83 = sub_1AE7D2CC0();
  v72 = sub_1AE7CB7A4();
  v82 = sub_1AE7D2CAC();
  v81 = sub_1AE7D2CC0();
  v71 = sub_1AE7CB7E0();
  v80 = sub_1AE7D2CAC();
  v79 = sub_1AE7D2CC0();
  v68 = sub_1AE7CB81C();
  v78 = sub_1AE7D2CAC();
  v77 = sub_1AE7D2CC0();
  v28 = objc_msgSend((id)sub_1AE7D32A0(), sel_metersPerSecond);
  sub_1AE7D2FC8((uint64_t)v28, &qword_1EED99690);
  sub_1AE7D35D0();
  sub_1AE924450();
  v29 = (void *)sub_1AE7D32A0();
  sub_1AE7D2FC8((uint64_t)objc_msgSend(v29, sel_kilowattHours), &qword_1EED99698);
  sub_1AE7D3448();
  v30 = objc_msgSend(v29, sel_kilowattHours);
  sub_1AE7D3448();
  sub_1AE50A9B8();
  v75 = sub_1AE7D2FD4();
  sub_1AE501548(&qword_1EED9A868);
  v73 = sub_1AE7D2FD4();
  sub_1AE501548(&qword_1EED9A858);
  v31 = sub_1AE7D2FD4();
  sub_1AE7D2D78(v31, (uint64_t)&v101);
  v69 = sub_1AE7D2FD4();
  v32 = sub_1AE7D2F98();
  sub_1AE7D3090();
  v33 = sub_1AE7D2F98();
  sub_1AE7D3090();
  v34 = sub_1AE7D2F98();
  sub_1AE7D3090();
  v35 = sub_1AE7D2F98();
  sub_1AE7D3090();
  v36 = sub_1AE7D300C();
  sub_1AE7D2D78(v36, (uint64_t)&v99);
  v37 = sub_1AE7D300C();
  sub_1AE7D2D78(v37, (uint64_t)&v98);
  v38 = sub_1AE7D2FD4();
  sub_1AE7D2D78(v38, (uint64_t)&v97);
  v39 = sub_1AE925C98();
  sub_1AE7D2D78(v39, (uint64_t)&v96);
  v40 = sub_1AE925C98();
  sub_1AE7D2D78(v40, (uint64_t)&v95);
  v41 = sub_1AE7D35F4();
  sub_1AE7D2D78(v41, (uint64_t)&v94);
  v42 = sub_1AE7D3684();
  sub_1AE7D2D78(v42, (uint64_t)&v93);
  v43 = sub_1AE7D300C();
  sub_1AE7D2D78(v43, (uint64_t)&v92);
  v44 = sub_1AE7D2FD4();
  sub_1AE7D2D78(v44, (uint64_t)&v91);
  v45 = sub_1AE7D3678();
  sub_1AE7D2D78(v45, (uint64_t)&v90);
  v46 = sub_1AE7D2D30();
  sub_1AE7D2D78(v46, (uint64_t)&v89);
  v47 = sub_1AE7D35F4();
  sub_1AE7D2D78(v47, (uint64_t)&v88);
  v48 = sub_1AE7D3684();
  v49 = sub_1AE7D300C();
  v50 = sub_1AE7D2FD4();
  v51 = sub_1AE7D3678();
  v52 = sub_1AE7D2D30();
  v53 = sub_1AE7D35F4();
  type metadata accessor for KTSDataAggregateRepresentation(0);
  v54 = swift_allocObject();
  KTSDataAggregateRepresentation.init(startTime:endTime:distanceInMeters:elevationGainInMeters:distanceBuckets:durationInSeconds:expectedDurationInSecondsNoTraffic:distanceSpentInTrafficBuckets:timeSpentInTrafficBuckets:distanceSpentAtSpeedBuckets:timeSpentAtSpeedBuckets:distanceSpentAtRelativeSpeeds:timeSpentAtRelativeSpeeds:distancePerRoadType:timePerRoadType:distancePerWeatherType:timePerWeatherType:distancePerTerrainType:timePerTerrainType:averageSpeedInMetersPerSecond:score:usageKwh:optimalUsageKwh:numBrakingEvents:numAccelEvents:numHighSpeedEvents:roadDistancesInMeters:roadSpeedBuckets:roadRelativeSpeedBuckets:roadTimes:lifeEventIds:ktsSegmentIds:maxTripDistanceInMeters:avgTripDistanceInMeters:maxElevationGainInMeters:avgElevationGainInMeters:percentTimeSpentAtSpeedBuckets:percentTimeSpentAtTrafficBuckets:percentTimeSpentAtRelativeSpeeds:percentTimeSpentAtRoadTypes:percentTimeSpentInWeatherTypes:percentTimeSpentInTerrainTypes:percentDistanceTraveledAtSpeedBuckets:percentDistanceTraveledAtTrafficBuckets:p(v92, v91, v90, v89, v98, v88, v87, v86, v85, v84, v83, v82, v81, v80, v79, v78, v77, v97, v99,
    v100,
    0,
    0,
    0,
    v75,
    v73,
    v70,
    v69,
    0,
    0,
    v93,
    v94,
    v95,
    v96,
    v67,
    v66,
    v65,
    v64,
    v63,
    v62,
    v61,
    v60,
    v59,
    v58,
    v57,
    v56,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    0,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66);
  return v54;
}

unint64_t sub_1AE7CB6B4()
{
  unint64_t result;

  result = qword_1EEDA2E10;
  if (!qword_1EEDA2E10)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for DistanceBucket, &type metadata for DistanceBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA2E10);
  }
  return result;
}

unint64_t sub_1AE7CB6F0()
{
  unint64_t result;

  result = qword_1EEDA2E20;
  if (!qword_1EEDA2E20)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrafficBucket, &type metadata for TrafficBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA2E20);
  }
  return result;
}

unint64_t sub_1AE7CB72C()
{
  unint64_t result;

  result = qword_1EEDA2E28;
  if (!qword_1EEDA2E28)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SpeedBucket, &type metadata for SpeedBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA2E28);
  }
  return result;
}

unint64_t sub_1AE7CB768()
{
  unint64_t result;

  result = qword_1EEDA2E30;
  if (!qword_1EEDA2E30)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RelativeFlowSpeedBucket, &type metadata for RelativeFlowSpeedBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA2E30);
  }
  return result;
}

unint64_t sub_1AE7CB7A4()
{
  unint64_t result;

  result = qword_1EEDA2E38;
  if (!qword_1EEDA2E38)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RoadType, &type metadata for RoadType);
    atomic_store(result, (unint64_t *)&qword_1EEDA2E38);
  }
  return result;
}

unint64_t sub_1AE7CB7E0()
{
  unint64_t result;

  result = qword_1EEDA2E40;
  if (!qword_1EEDA2E40)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for WeatherType, &type metadata for WeatherType);
    atomic_store(result, (unint64_t *)&qword_1EEDA2E40);
  }
  return result;
}

unint64_t sub_1AE7CB81C()
{
  unint64_t result;

  result = qword_1EEDA2E48;
  if (!qword_1EEDA2E48)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TerrainType, &type metadata for TerrainType);
    atomic_store(result, (unint64_t *)&qword_1EEDA2E48);
  }
  return result;
}

unint64_t sub_1AE7CB858()
{
  unint64_t result;

  result = qword_1EEDA2E70;
  if (!qword_1EEDA2E70)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95BAB4, &type metadata for KTSDataRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA2E70);
  }
  return result;
}

unint64_t sub_1AE7CB894()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA2E80;
  if (!qword_1EEDA2E80)
  {
    v1 = sub_1AE523CF0((uint64_t *)&unk_1EED9A840);
    v2[0] = sub_1AE7CB900();
    v2[1] = MEMORY[0x1E0DEB420];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA2E80);
  }
  return result;
}

unint64_t sub_1AE7CB900()
{
  unint64_t result;

  result = qword_1EEDA2E88;
  if (!qword_1EEDA2E88)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for DistanceBucket, &type metadata for DistanceBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA2E88);
  }
  return result;
}

unint64_t sub_1AE7CB93C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2E98;
  if (!qword_1EEDA2E98)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A878);
    v2 = sub_1AE7CB9C0();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E78);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2E98);
  }
  return result;
}

unint64_t sub_1AE7CB9C0()
{
  unint64_t result;

  result = qword_1EEDA2EA0;
  if (!qword_1EEDA2EA0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrafficBucket, &type metadata for TrafficBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA2EA0);
  }
  return result;
}

unint64_t sub_1AE7CB9FC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2EA8;
  if (!qword_1EEDA2EA8)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A880);
    v2 = sub_1AE7CB9C0();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2EA8);
  }
  return result;
}

unint64_t sub_1AE7CBA80()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2EB0;
  if (!qword_1EEDA2EB0)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A868);
    v2 = sub_1AE7CBB04();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E78);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2EB0);
  }
  return result;
}

unint64_t sub_1AE7CBB04()
{
  unint64_t result;

  result = qword_1EEDA2EB8;
  if (!qword_1EEDA2EB8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SpeedBucket, &type metadata for SpeedBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA2EB8);
  }
  return result;
}

unint64_t sub_1AE7CBB40()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2EC0;
  if (!qword_1EEDA2EC0)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A870);
    v2 = sub_1AE7CBB04();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2EC0);
  }
  return result;
}

unint64_t sub_1AE7CBBC4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2EC8;
  if (!qword_1EEDA2EC8)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A858);
    v2 = sub_1AE7CBC48();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E78);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2EC8);
  }
  return result;
}

unint64_t sub_1AE7CBC48()
{
  unint64_t result;

  result = qword_1EEDA2ED0;
  if (!qword_1EEDA2ED0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RelativeFlowSpeedBucket, &type metadata for RelativeFlowSpeedBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA2ED0);
  }
  return result;
}

unint64_t sub_1AE7CBC84()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2ED8;
  if (!qword_1EEDA2ED8)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A860);
    v2 = sub_1AE7CBC48();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2ED8);
  }
  return result;
}

unint64_t sub_1AE7CBD08()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEDA2EF0;
  if (!qword_1EEDA2EF0)
  {
    v1 = sub_1AE523CF0(&qword_1EED9E338);
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E78);
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEDA2EF0);
  }
  return result;
}

void sub_1AE7CBD8C(uint64_t a1)
{
  void (*v1)(void);
  uint64_t *v2;

  if (!sub_1AE608038(a1))
  {
    sub_1AE7D3248(0, v2);
    v1();
    sub_1AE7D364C();
  }
  sub_1AE4FC538();
}

unint64_t sub_1AE7CBDE0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEDA2F08;
  if (!qword_1EEDA2F08)
  {
    v1 = sub_1AE523CF0(&qword_1EED9E320);
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E90);
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEDA2F08);
  }
  return result;
}

unint64_t sub_1AE7CBE64()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2F10;
  if (!qword_1EEDA2F10)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A890);
    v2 = sub_1AE7CBEE8();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E78);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2F10);
  }
  return result;
}

unint64_t sub_1AE7CBEE8()
{
  unint64_t result;

  result = qword_1EEDA2F18;
  if (!qword_1EEDA2F18)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RoadType, &type metadata for RoadType);
    atomic_store(result, (unint64_t *)&qword_1EEDA2F18);
  }
  return result;
}

unint64_t sub_1AE7CBF24()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2F20;
  if (!qword_1EEDA2F20)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A8A0);
    v2 = sub_1AE7CBFA8();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E78);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2F20);
  }
  return result;
}

unint64_t sub_1AE7CBFA8()
{
  unint64_t result;

  result = qword_1EEDA2F28;
  if (!qword_1EEDA2F28)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for WeatherType, &type metadata for WeatherType);
    atomic_store(result, (unint64_t *)&qword_1EEDA2F28);
  }
  return result;
}

unint64_t sub_1AE7CBFE4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2F30;
  if (!qword_1EEDA2F30)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A898);
    v2 = sub_1AE7CC068();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E78);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2F30);
  }
  return result;
}

unint64_t sub_1AE7CC068()
{
  unint64_t result;

  result = qword_1EEDA2F38;
  if (!qword_1EEDA2F38)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TerrainType, &type metadata for TerrainType);
    atomic_store(result, (unint64_t *)&qword_1EEDA2F38);
  }
  return result;
}

unint64_t sub_1AE7CC0A4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2F40;
  if (!qword_1EEDA2F40)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A8A8);
    v2 = sub_1AE7CBEE8();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2F40);
  }
  return result;
}

unint64_t sub_1AE7CC128()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2F48;
  if (!qword_1EEDA2F48)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A8B8);
    v2 = sub_1AE7CBFA8();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2F48);
  }
  return result;
}

unint64_t sub_1AE7CC1AC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2F50;
  if (!qword_1EEDA2F50)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A8B0);
    v2 = sub_1AE7CC068();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2E90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2F50);
  }
  return result;
}

uint64_t type metadata accessor for KTSDataRepresentation(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1EED99670);
}

unint64_t sub_1AE7CC244()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA2F80;
  if (!qword_1EEDA2F80)
  {
    v1 = sub_1AE523CF0((uint64_t *)&unk_1EED9A840);
    v2[0] = sub_1AE7CC2B0();
    v2[1] = MEMORY[0x1E0DEB448];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA2F80);
  }
  return result;
}

unint64_t sub_1AE7CC2B0()
{
  unint64_t result;

  result = qword_1EEDA2F88;
  if (!qword_1EEDA2F88)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for DistanceBucket, &type metadata for DistanceBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA2F88);
  }
  return result;
}

unint64_t sub_1AE7CC2EC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2F98;
  if (!qword_1EEDA2F98)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A878);
    v2 = sub_1AE7CC370();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F78);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2F98);
  }
  return result;
}

unint64_t sub_1AE7CC370()
{
  unint64_t result;

  result = qword_1EEDA2FA0;
  if (!qword_1EEDA2FA0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrafficBucket, &type metadata for TrafficBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA2FA0);
  }
  return result;
}

unint64_t sub_1AE7CC3AC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2FA8;
  if (!qword_1EEDA2FA8)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A880);
    v2 = sub_1AE7CC370();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2FA8);
  }
  return result;
}

unint64_t sub_1AE7CC430()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2FB0;
  if (!qword_1EEDA2FB0)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A868);
    v2 = sub_1AE7CC4B4();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F78);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2FB0);
  }
  return result;
}

unint64_t sub_1AE7CC4B4()
{
  unint64_t result;

  result = qword_1EEDA2FB8;
  if (!qword_1EEDA2FB8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SpeedBucket, &type metadata for SpeedBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA2FB8);
  }
  return result;
}

unint64_t sub_1AE7CC4F0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2FC0;
  if (!qword_1EEDA2FC0)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A870);
    v2 = sub_1AE7CC4B4();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2FC0);
  }
  return result;
}

unint64_t sub_1AE7CC574()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2FC8;
  if (!qword_1EEDA2FC8)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A858);
    v2 = sub_1AE7CC5F8();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F78);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2FC8);
  }
  return result;
}

unint64_t sub_1AE7CC5F8()
{
  unint64_t result;

  result = qword_1EEDA2FD0;
  if (!qword_1EEDA2FD0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RelativeFlowSpeedBucket, &type metadata for RelativeFlowSpeedBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA2FD0);
  }
  return result;
}

unint64_t sub_1AE7CC634()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA2FD8;
  if (!qword_1EEDA2FD8)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A860);
    v2 = sub_1AE7CC5F8();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA2FD8);
  }
  return result;
}

void sub_1AE7CC6B8(uint64_t a1)
{
  uint64_t *v1;

  if (!sub_1AE608038(a1))
  {
    sub_1AE7D3248(0, v1);
    sub_1AE5068A4();
  }
  sub_1AE4F6664();
}

unint64_t sub_1AE7CC6E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEDA2FF0;
  if (!qword_1EEDA2FF0)
  {
    v1 = sub_1AE523CF0(&qword_1EED9E338);
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F78);
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEDA2FF0);
  }
  return result;
}

void sub_1AE7CC764(uint64_t a1)
{
  void (*v1)(void);
  uint64_t *v2;

  if (!sub_1AE608038(a1))
  {
    sub_1AE7D3248(0, v2);
    v1();
    sub_1AE7D364C();
  }
  sub_1AE4FC538();
}

unint64_t sub_1AE7CC7B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEDA3008;
  if (!qword_1EEDA3008)
  {
    v1 = sub_1AE523CF0(&qword_1EED9E320);
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F90);
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEDA3008);
  }
  return result;
}

unint64_t sub_1AE7CC83C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA3010;
  if (!qword_1EEDA3010)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A890);
    v2 = sub_1AE7CC8C0();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F78);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA3010);
  }
  return result;
}

unint64_t sub_1AE7CC8C0()
{
  unint64_t result;

  result = qword_1EEDA3018;
  if (!qword_1EEDA3018)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RoadType, &type metadata for RoadType);
    atomic_store(result, (unint64_t *)&qword_1EEDA3018);
  }
  return result;
}

unint64_t sub_1AE7CC8FC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA3020;
  if (!qword_1EEDA3020)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A8A0);
    v2 = sub_1AE7CC980();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F78);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA3020);
  }
  return result;
}

unint64_t sub_1AE7CC980()
{
  unint64_t result;

  result = qword_1EEDA3028;
  if (!qword_1EEDA3028)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for WeatherType, &type metadata for WeatherType);
    atomic_store(result, (unint64_t *)&qword_1EEDA3028);
  }
  return result;
}

unint64_t sub_1AE7CC9BC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA3030;
  if (!qword_1EEDA3030)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A898);
    v2 = sub_1AE7CCA40();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F78);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA3030);
  }
  return result;
}

unint64_t sub_1AE7CCA40()
{
  unint64_t result;

  result = qword_1EEDA3038;
  if (!qword_1EEDA3038)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TerrainType, &type metadata for TerrainType);
    atomic_store(result, (unint64_t *)&qword_1EEDA3038);
  }
  return result;
}

unint64_t sub_1AE7CCA7C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA3040;
  if (!qword_1EEDA3040)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A8A8);
    v2 = sub_1AE7CC8C0();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA3040);
  }
  return result;
}

unint64_t sub_1AE7CCB00()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA3048;
  if (!qword_1EEDA3048)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A8B8);
    v2 = sub_1AE7CC980();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA3048);
  }
  return result;
}

unint64_t sub_1AE7CCB84()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EEDA3050;
  if (!qword_1EEDA3050)
  {
    v1 = sub_1AE523CF0(&qword_1EED9A8B0);
    v2 = sub_1AE7CCA40();
    sub_1AE7CC6B8((uint64_t)&unk_1EEDA2F90);
    v4[0] = v2;
    v4[1] = v3;
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v4);
    atomic_store(result, (unint64_t *)&qword_1EEDA3050);
  }
  return result;
}

unint64_t sub_1AE7CCC08(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_1AE608038(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = sub_1AE523CF0(&qword_1EEDA2F58);
    sub_1AE7CCC80(v6);
    v9 = v8;
    result = MEMORY[0x1AF454B70](v5, v7, &v9);
    atomic_store(result, v1);
  }
  return result;
}

void sub_1AE7CCC80(uint64_t a1)
{
  if (!sub_1AE608038(a1))
  {
    type metadata accessor for CodableLocation();
    sub_1AE5068A4();
  }
  sub_1AE4F6664();
}

void sub_1AE7CCCB0(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;

  if (!sub_1AE608038(a1))
  {
    v5 = v4;
    v6 = v3;
    v7 = sub_1AE523CF0(v2);
    v8 = v6();
    atomic_store(MEMORY[0x1AF454B70](v5, v7, &v8), v1);
  }
  sub_1AE4FC538();
}

unint64_t sub_1AE7CCD0C()
{
  unint64_t result;

  result = qword_1EEDA3070;
  if (!qword_1EEDA3070)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95BA64, &type metadata for KTSDataAggregateRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3070);
  }
  return result;
}

unint64_t sub_1AE7CCD48()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA3080;
  if (!qword_1EEDA3080)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA3078);
    v2[0] = sub_1AE7CBB04();
    v2[1] = MEMORY[0x1E0DEB080];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA3080);
  }
  return result;
}

unint64_t sub_1AE7CCDB4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA3090;
  if (!qword_1EEDA3090)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA3088);
    v2[0] = sub_1AE7CB9C0();
    v2[1] = MEMORY[0x1E0DEB080];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA3090);
  }
  return result;
}

unint64_t sub_1AE7CCE20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA30A0;
  if (!qword_1EEDA30A0)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA3098);
    v2[0] = sub_1AE7CBC48();
    v2[1] = MEMORY[0x1E0DEB080];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA30A0);
  }
  return result;
}

unint64_t sub_1AE7CCE8C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA30B0;
  if (!qword_1EEDA30B0)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA30A8);
    v2[0] = sub_1AE7CBEE8();
    v2[1] = MEMORY[0x1E0DEB080];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA30B0);
  }
  return result;
}

unint64_t sub_1AE7CCEF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA30C0;
  if (!qword_1EEDA30C0)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA30B8);
    v2[0] = sub_1AE7CBFA8();
    v2[1] = MEMORY[0x1E0DEB080];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA30C0);
  }
  return result;
}

unint64_t sub_1AE7CCF64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA30D0;
  if (!qword_1EEDA30D0)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA30C8);
    v2[0] = sub_1AE7CC068();
    v2[1] = MEMORY[0x1E0DEB080];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA30D0);
  }
  return result;
}

unint64_t sub_1AE7CCFD0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEDA30E8;
  if (!qword_1EEDA30E8)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA30F0);
    sub_1AE7CCC80((uint64_t)&unk_1EEDA2F68);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0DEB420];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEDA30E8);
  }
  return result;
}

uint64_t type metadata accessor for KTSDataAggregateRepresentation(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1EED99680);
}

void sub_1AE7CD060()
{
  double *v0;

  sub_1AE7D29B4();
  *v0 = sub_1AE7BC418();
  sub_1AE4F6664();
}

void sub_1AE7CD080(double *a1)
{
  sub_1AE7BC440(*a1);
  sub_1AE4F6664();
}

void sub_1AE7CD0A0()
{
  double *v0;

  sub_1AE7D29B4();
  *v0 = sub_1AE7BC4A4();
  sub_1AE4F6664();
}

void sub_1AE7CD0C0(double *a1)
{
  sub_1AE7BC4CC(*a1);
  sub_1AE4F6664();
}

void sub_1AE7CD0E0(uint64_t a1@<X8>)
{
  sub_1AE7BC530(a1);
  sub_1AE4F6664();
}

uint64_t sub_1AE7CD0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE7BC610(a1, a2, a3, a4, &qword_1EED9E350, (uint64_t (*)(uint64_t))sub_1AE7BC544);
}

void sub_1AE7CD120()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BC5BC();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD144(uint64_t a1@<X8>)
{
  sub_1AE7BC680(a1);
  sub_1AE4F6664();
}

uint64_t sub_1AE7CD160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE7BC610(a1, a2, a3, a4, &qword_1EED9E350, (uint64_t (*)(uint64_t))sub_1AE7BC694);
}

void sub_1AE7CD184(uint64_t a1@<X8>)
{
  sub_1AE7BC6E4(a1);
  sub_1AE4F6664();
}

uint64_t sub_1AE7CD1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE7BC610(a1, a2, a3, a4, &qword_1EED9A850, (uint64_t (*)(uint64_t))sub_1AE7BC6F8);
}

void sub_1AE7CD1C4(uint64_t a1@<X8>)
{
  sub_1AE7BC748(a1);
  sub_1AE4F6664();
}

uint64_t sub_1AE7CD1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE7BC610(a1, a2, a3, a4, &qword_1EED9A850, (uint64_t (*)(uint64_t))sub_1AE7BC75C);
}

void sub_1AE7CD204()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BC7D4();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD228()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BC850();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD24C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BC8CC();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD270()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BC948();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD294()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BC9C4();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD2B8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BCA40();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD2DC(uint64_t a1@<X8>)
{
  sub_1AE7BCA94(a1);
  sub_1AE4F6664();
}

uint64_t sub_1AE7CD2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE7BC610(a1, a2, a3, a4, &qword_1EED9A888, (uint64_t (*)(uint64_t))sub_1AE7BCAA8);
}

void sub_1AE7CD31C()
{
  double *v0;

  sub_1AE7D29B4();
  *v0 = sub_1AE7BCAF8();
  sub_1AE4F6664();
}

void sub_1AE7CD33C(double *a1)
{
  sub_1AE7BCB34(*a1);
  sub_1AE4F6664();
}

void sub_1AE7CD35C(uint64_t a1@<X8>)
{
  sub_1AE7BCBBC(a1);
  sub_1AE4F6664();
}

uint64_t sub_1AE7CD378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE7BC610(a1, a2, a3, a4, (uint64_t *)&unk_1EED9E340, (uint64_t (*)(uint64_t))sub_1AE7BCBD0);
}

void sub_1AE7CD39C(uint64_t a1@<X8>)
{
  sub_1AE7BCC20(a1);
  sub_1AE4F6664();
}

uint64_t sub_1AE7CD3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE7BC610(a1, a2, a3, a4, (uint64_t *)&unk_1EED9E340, (uint64_t (*)(uint64_t))sub_1AE7BCC8C);
}

void sub_1AE7CD3DC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BCD3C();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD3FC(uint64_t *a1)
{
  sub_1AE7BCD70(*a1);
  sub_1AE4F6664();
}

void sub_1AE7CD41C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BCDE8();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD43C(uint64_t *a1)
{
  sub_1AE7BCE1C(*a1);
  sub_1AE4F6664();
}

void sub_1AE7CD45C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BCE94();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD47C(uint64_t *a1)
{
  sub_1AE7BCEC8(*a1);
  sub_1AE4F6664();
}

void sub_1AE7CD49C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BCF68();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD4C0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BCFE4();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD4E4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BD060();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD508()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BD0DC();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD52C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BD158();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD550()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BD1D4();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD574()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BD250();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD598()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BD2CC();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD5BC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BD348();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD5E0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BD3C4();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD604()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BD4AC();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD628()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BD528();
  *v0 = v1;
  sub_1AE4F6664();
}

void sub_1AE7CD64C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1AE7D29B4();
  sub_1AE7BD5A4();
  *v0 = v1;
  sub_1AE4F6664();
}

uint64_t sub_1AE7CD670()
{
  return type metadata accessor for KTSDataRepresentation(0);
}

void sub_1AE7CD678()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1AE7CDD6C(319, &qword_1EED99660, &qword_1EED996A0);
  if (v0 <= 0x3F)
  {
    sub_1AE7CDD6C(319, &qword_1EED99668, &qword_1EED996A8);
    if (v1 <= 0x3F)
    {
      sub_1AE7CDD6C(319, &qword_1EED99650, &qword_1EED99690);
      if (v2 <= 0x3F)
      {
        sub_1AE7CDD6C(319, &qword_1EED99658, &qword_1EED99698);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for KTSDataRepresentation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KTSDataRepresentation.startTime.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of KTSDataRepresentation.startTime.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of KTSDataRepresentation.startTime.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of KTSDataRepresentation.endTime.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of KTSDataRepresentation.endTime.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of KTSDataRepresentation.endTime.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceInMeters.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceInMeters.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceInMeters.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceBuckets.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceBuckets.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceBuckets.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of KTSDataRepresentation.elevationGainInMeters.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of KTSDataRepresentation.elevationGainInMeters.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of KTSDataRepresentation.elevationGainInMeters.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of KTSDataRepresentation.durationInSeconds.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of KTSDataRepresentation.durationInSeconds.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of KTSDataRepresentation.durationInSeconds.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of KTSDataRepresentation.expectedDurationInSecondsNoTraffic.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of KTSDataRepresentation.expectedDurationInSecondsNoTraffic.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of KTSDataRepresentation.expectedDurationInSecondsNoTraffic.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceSpentInTrafficBuckets.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceSpentInTrafficBuckets.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceSpentInTrafficBuckets.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timeSpentInTrafficBuckets.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timeSpentInTrafficBuckets.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timeSpentInTrafficBuckets.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceSpentAtSpeedBuckets.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceSpentAtSpeedBuckets.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceSpentAtSpeedBuckets.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timeSpentAtSpeedBuckets.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timeSpentAtSpeedBuckets.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timeSpentAtSpeedBuckets.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceSpentAtRelativeSpeeds.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceSpentAtRelativeSpeeds.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distanceSpentAtRelativeSpeeds.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timeSpentAtRelativeSpeeds.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timeSpentAtRelativeSpeeds.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timeSpentAtRelativeSpeeds.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of KTSDataRepresentation.averageSpeedInMetersPerSecond.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of KTSDataRepresentation.averageSpeedInMetersPerSecond.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of KTSDataRepresentation.averageSpeedInMetersPerSecond.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of KTSDataRepresentation.score.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of KTSDataRepresentation.score.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of KTSDataRepresentation.score.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of KTSDataRepresentation.usageKwh.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of KTSDataRepresentation.usageKwh.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of KTSDataRepresentation.usageKwh.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of KTSDataRepresentation.optimalUsageKwh.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of KTSDataRepresentation.optimalUsageKwh.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t dispatch thunk of KTSDataRepresentation.optimalUsageKwh.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 744))();
}

uint64_t dispatch thunk of KTSDataRepresentation.numBrakingEvents.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of KTSDataRepresentation.numBrakingEvents.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t dispatch thunk of KTSDataRepresentation.numBrakingEvents.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of KTSDataRepresentation.numAccelEvents.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of KTSDataRepresentation.numAccelEvents.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of KTSDataRepresentation.numAccelEvents.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of KTSDataRepresentation.numHighSpeedEvents.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of KTSDataRepresentation.numHighSpeedEvents.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 808))();
}

uint64_t dispatch thunk of KTSDataRepresentation.numHighSpeedEvents.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 816))();
}

uint64_t dispatch thunk of KTSDataRepresentation.roadDistancesInMeters.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of KTSDataRepresentation.roadDistancesInMeters.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of KTSDataRepresentation.roadDistancesInMeters.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 840))();
}

uint64_t dispatch thunk of KTSDataRepresentation.roadSpeedBuckets.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))();
}

uint64_t dispatch thunk of KTSDataRepresentation.roadSpeedBuckets.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

uint64_t dispatch thunk of KTSDataRepresentation.roadSpeedBuckets.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

uint64_t dispatch thunk of KTSDataRepresentation.roadRelativeSpeedBuckets.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 872))();
}

uint64_t dispatch thunk of KTSDataRepresentation.roadRelativeSpeedBuckets.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 880))();
}

uint64_t dispatch thunk of KTSDataRepresentation.roadRelativeSpeedBuckets.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 888))();
}

uint64_t dispatch thunk of KTSDataRepresentation.roadTimes.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 896))();
}

uint64_t dispatch thunk of KTSDataRepresentation.roadTimes.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 904))();
}

uint64_t dispatch thunk of KTSDataRepresentation.roadTimes.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 912))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distancePerRoadType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 920))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distancePerRoadType.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 928))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distancePerRoadType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 936))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distancePerWeatherType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 944))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distancePerWeatherType.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 952))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distancePerWeatherType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 960))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distancePerTerrainType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 968))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distancePerTerrainType.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 976))();
}

uint64_t dispatch thunk of KTSDataRepresentation.distancePerTerrainType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 984))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timePerRoadType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 992))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timePerRoadType.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1000))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timePerRoadType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1008))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timePerWeatherType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1016))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timePerWeatherType.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1024))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timePerWeatherType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1032))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timePerTerrainType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1040))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timePerTerrainType.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1048))();
}

uint64_t dispatch thunk of KTSDataRepresentation.timePerTerrainType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1056))();
}

uint64_t dispatch thunk of KTSDataRepresentation.route.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1064))();
}

uint64_t dispatch thunk of KTSDataRepresentation.route.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1072))();
}

uint64_t dispatch thunk of KTSDataRepresentation.route.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1080))();
}

uint64_t dispatch thunk of KTSDataRepresentation.lifeEventIds.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1088))();
}

uint64_t dispatch thunk of KTSDataRepresentation.lifeEventIds.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1096))();
}

uint64_t dispatch thunk of KTSDataRepresentation.lifeEventIds.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1104))();
}

uint64_t dispatch thunk of KTSDataRepresentation.ktsSegmentIds.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1112))();
}

uint64_t dispatch thunk of KTSDataRepresentation.ktsSegmentIds.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1120))();
}

uint64_t dispatch thunk of KTSDataRepresentation.ktsSegmentIds.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1128))();
}

uint64_t dispatch thunk of KTSDataRepresentation.numTrips.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1136))();
}

uint64_t dispatch thunk of KTSDataRepresentation.__allocating_init(startTime:endTime:distanceInMeters:elevationGainInMeters:distanceBuckets:durationInSeconds:expectedDurationInSecondsNoTraffic:distanceSpentInTrafficBuckets:timeSpentInTrafficBuckets:distanceSpentAtSpeedBuckets:timeSpentAtSpeedBuckets:distanceSpentAtRelativeSpeeds:timeSpentAtRelativeSpeeds:distancePerRoadType:timePerRoadType:distancePerWeatherType:timePerWeatherType:distancePerTerrainType:timePerTerrainType:averageSpeedInMetersPerSecond:score:usageKwh:optimalUsageKwh:numBrakingEvents:numAccelEvents:numHighSpeedEvents:roadDistancesInMeters:roadSpeedBuckets:roadRelativeSpeedBuckets:roadTimes:lifeEventIds:ktsSegmentIds:route:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1144))();
}

uint64_t dispatch thunk of KTSDataRepresentation.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1152))();
}

uint64_t dispatch thunk of KTSDataRepresentation.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1168))();
}

uint64_t dispatch thunk of KTSDataRepresentation.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1176))();
}

void sub_1AE7CDD6C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1AE524254(255, a3);
    v4 = sub_1AE92448C();
    if (!v5)
      atomic_store(v4, a2);
  }
  sub_1AE4F6664();
}

uint64_t sub_1AE7CDDBC()
{
  return type metadata accessor for KTSDataAggregateRepresentation(0);
}

void sub_1AE7CDDC4()
{
  unint64_t v0;

  sub_1AE7CDD6C(319, &qword_1EED99660, &qword_1EED996A0);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for KTSDataAggregateRepresentation()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for KTSDataAggregateRepresentation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE6)
  {
    if (a2 + 26 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 26) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 27;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1B;
  v5 = v6 - 27;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for KTSDataAggregateRepresentation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 26 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 26) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE5)
    return ((uint64_t (*)(void))((char *)&loc_1AE7CE0D8 + 4 * byte_1AE95B771[v4]))();
  *a1 = a2 + 26;
  return ((uint64_t (*)(void))((char *)sub_1AE7CE10C + 4 * byte_1AE95B76C[v4]))();
}

uint64_t sub_1AE7CE10C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7CE114(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE7CE11CLL);
  return result;
}

uint64_t sub_1AE7CE128(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE7CE130);
  *(_BYTE *)result = a2 + 26;
  return result;
}

uint64_t sub_1AE7CE134(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7CE13C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KTSDataAggregateRepresentation.CodingKeys()
{
  return &type metadata for KTSDataAggregateRepresentation.CodingKeys;
}

uint64_t getEnumTagSinglePayload for KTSDataRepresentation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE0)
  {
    if (a2 + 32 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 32) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 33;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x21;
  v5 = v6 - 33;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for KTSDataRepresentation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 32 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 32) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDF)
    return ((uint64_t (*)(void))((char *)&loc_1AE7CE22C + 4 * byte_1AE95B77B[v4]))();
  *a1 = a2 + 32;
  return ((uint64_t (*)(void))((char *)sub_1AE7CE260 + 4 * byte_1AE95B776[v4]))();
}

uint64_t sub_1AE7CE260(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7CE268(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE7CE270);
  return result;
}

uint64_t sub_1AE7CE27C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE7CE284);
  *(_BYTE *)result = a2 + 32;
  return result;
}

uint64_t sub_1AE7CE288(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7CE290(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KTSDataRepresentation.CodingKeys()
{
  return &type metadata for KTSDataRepresentation.CodingKeys;
}

unint64_t sub_1AE7CE2B0()
{
  unint64_t result;

  result = qword_1EEDA30F8;
  if (!qword_1EEDA30F8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95B94C, &type metadata for KTSDataRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA30F8);
  }
  return result;
}

unint64_t sub_1AE7CE2F0()
{
  unint64_t result;

  result = qword_1EEDA3100;
  if (!qword_1EEDA3100)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95BA3C, &type metadata for KTSDataAggregateRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3100);
  }
  return result;
}

unint64_t sub_1AE7CE330()
{
  unint64_t result;

  result = qword_1EEDA3108;
  if (!qword_1EEDA3108)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95B974, &type metadata for KTSDataAggregateRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3108);
  }
  return result;
}

unint64_t sub_1AE7CE370()
{
  unint64_t result;

  result = qword_1EEDA3110;
  if (!qword_1EEDA3110)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95B99C, &type metadata for KTSDataAggregateRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3110);
  }
  return result;
}

unint64_t sub_1AE7CE3B0()
{
  unint64_t result;

  result = qword_1EEDA3118;
  if (!qword_1EEDA3118)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95B8BC, &type metadata for KTSDataRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3118);
  }
  return result;
}

unint64_t sub_1AE7CE3F0()
{
  unint64_t result;

  result = qword_1EEDA3120;
  if (!qword_1EEDA3120)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95B8E4, &type metadata for KTSDataRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3120);
  }
  return result;
}

unint64_t sub_1AE7CE42C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA3130;
  if (!qword_1EEDA3130)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA3078);
    v2[0] = sub_1AE7CC4B4();
    v2[1] = MEMORY[0x1E0DEB0A8];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA3130);
  }
  return result;
}

unint64_t sub_1AE7CE498()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA3138;
  if (!qword_1EEDA3138)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA3088);
    v2[0] = sub_1AE7CC370();
    v2[1] = MEMORY[0x1E0DEB0A8];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA3138);
  }
  return result;
}

unint64_t sub_1AE7CE504()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA3140;
  if (!qword_1EEDA3140)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA3098);
    v2[0] = sub_1AE7CC5F8();
    v2[1] = MEMORY[0x1E0DEB0A8];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA3140);
  }
  return result;
}

unint64_t sub_1AE7CE570()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA3148;
  if (!qword_1EEDA3148)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA30A8);
    v2[0] = sub_1AE7CC8C0();
    v2[1] = MEMORY[0x1E0DEB0A8];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA3148);
  }
  return result;
}

unint64_t sub_1AE7CE5DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA3150;
  if (!qword_1EEDA3150)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA30B8);
    v2[0] = sub_1AE7CC980();
    v2[1] = MEMORY[0x1E0DEB0A8];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA3150);
  }
  return result;
}

unint64_t sub_1AE7CE648()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA3158;
  if (!qword_1EEDA3158)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA30C8);
    v2[0] = sub_1AE7CCA40();
    v2[1] = MEMORY[0x1E0DEB0A8];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA3158);
  }
  return result;
}

unint64_t sub_1AE7CE6B4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEDA3160;
  if (!qword_1EEDA3160)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA30F0);
    sub_1AE7CCC80((uint64_t)&unk_1EEDA3060);
    v3[0] = v2;
    v3[1] = MEMORY[0x1E0DEB448];
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEDA3160);
  }
  return result;
}

void sub_1AE7CE730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *__return_ptr, uint64_t);
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t i;
  BOOL v39;
  unint64_t v40;
  int64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t *__return_ptr, uint64_t);
  uint64_t v49;
  _QWORD *v50;

  sub_1AE4F67EC();
  a19 = v23;
  a20 = v24;
  v25 = v20;
  v27 = v26;
  v48 = v28;
  sub_1AE501548(v29);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v30);
  sub_1AE4F910C();
  sub_1AE4F69EC();
  v31 = sub_1AE926AF0();
  v32 = 0;
  v49 = v27;
  v50 = (_QWORD *)v31;
  v33 = *(_QWORD *)(v27 + 64);
  v45 = v27 + 64;
  v34 = 1 << *(_BYTE *)(v27 + 32);
  v35 = -1;
  if (v34 < 64)
    v35 = ~(-1 << v34);
  v36 = v35 & v33;
  v46 = (unint64_t)(v34 + 63) >> 6;
  v47 = v31 + 64;
  if ((v35 & v33) == 0)
    goto LABEL_5;
LABEL_4:
  v37 = __clz(__rbit64(v36));
  v36 &= v36 - 1;
  for (i = v37 | (v32 << 6); ; i = __clz(__rbit64(v40)) + (v32 << 6))
  {
    v42 = *(_BYTE *)(*(_QWORD *)(v49 + 48) + i);
    sub_1AE6149B4(v21, *(_QWORD *)(v49 + 56) + *(_QWORD *)(v22 + 72) * i, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
    v48(&a10, v21);
    if (v25)
    {
      sub_1AE4FC564();
      sub_1AE4FBA8C(v21, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
LABEL_25:
      sub_1AE4F667C();
      return;
    }
    sub_1AE4FBA8C(v21, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    *(_QWORD *)(v47 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_BYTE *)(v50[6] + i) = v42;
    *(_QWORD *)(v50[7] + 8 * i) = a10;
    v43 = v50[2];
    v39 = __OFADD__(v43, 1);
    v44 = v43 + 1;
    if (v39)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v50[2] = v44;
    v25 = 0;
    if (v36)
      goto LABEL_4;
LABEL_5:
    v39 = __OFADD__(v32++, 1);
    if (v39)
      goto LABEL_28;
    if (v32 >= v46)
      goto LABEL_25;
    v40 = *(_QWORD *)(v45 + 8 * v32);
    if (!v40)
      break;
LABEL_15:
    v36 = (v40 - 1) & v40;
  }
  v41 = v32 + 1;
  if (v32 + 1 >= v46)
    goto LABEL_25;
  v40 = *(_QWORD *)(v45 + 8 * v41);
  if (v40)
    goto LABEL_14;
  v41 = v32 + 2;
  if (v32 + 2 >= v46)
    goto LABEL_25;
  v40 = *(_QWORD *)(v45 + 8 * v41);
  if (v40)
    goto LABEL_14;
  v41 = v32 + 3;
  if (v32 + 3 >= v46)
    goto LABEL_25;
  v40 = *(_QWORD *)(v45 + 8 * v41);
  if (v40)
  {
LABEL_14:
    v32 = v41;
    goto LABEL_15;
  }
  while (1)
  {
    v32 = v41 + 1;
    if (__OFADD__(v41, 1))
      break;
    if (v32 >= v46)
      goto LABEL_25;
    v40 = *(_QWORD *)(v45 + 8 * v32);
    ++v41;
    if (v40)
      goto LABEL_15;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_1AE7CE984(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD v42[3];
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unsigned __int8 *, uint64_t);

  v10 = sub_1AE501548(&qword_1EED9E350);
  v45 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v44 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v43 = (char *)v42 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v42 - v15;
  v17 = sub_1AE501548(&qword_1EEDA3270);
  MEMORY[0x1E0C80A78](v17);
  v19 = (unsigned __int8 *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE7BB678(a1, a2, a3, &v46);
  v42[2] = a1;
  swift_bridgeObjectRetain();
  v42[1] = a3;
  swift_retain();
  sub_1AE7BBB00();
  v20 = sub_1AE501548(&qword_1EED9A750);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1AE592EFC();
    return swift_release();
  }
  else
  {
    v47 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v45 + 32);
    while (1)
    {
      v22 = *v19;
      v47(v16, &v19[*(int *)(v20 + 48)], v10);
      v23 = *(_QWORD **)a5;
      v25 = sub_1AE536F4C(v22);
      v26 = v23[2];
      v27 = (v24 & 1) == 0;
      v28 = v26 + v27;
      if (__OFADD__(v26, v27))
        break;
      v29 = v24;
      if (v23[3] >= v28)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EED9EB08);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE636D30(v28, a4 & 1);
        v30 = sub_1AE536F4C(v22);
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_18;
        v25 = v30;
      }
      v32 = *(_QWORD **)a5;
      if ((v29 & 1) != 0)
      {
        v33 = v32[7];
        v34 = v45;
        v35 = *(_QWORD *)(v45 + 72) * v25;
        v36 = v44;
        (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v44, v33 + v35, v10);
        sub_1AE524254(0, &qword_1EED996A0);
        v37 = v43;
        sub_1AE924468();
        v38 = *(void (**)(char *, uint64_t))(v34 + 8);
        v38(v36, v10);
        v38(v16, v10);
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 40))(*(_QWORD *)(*(_QWORD *)a5 + 56) + v35, v37, v10);
      }
      else
      {
        v32[(v25 >> 6) + 8] |= 1 << v25;
        *(_BYTE *)(v32[6] + v25) = v22;
        v47((char *)(v32[7] + *(_QWORD *)(v45 + 72) * v25), (unsigned __int8 *)v16, v10);
        v39 = v32[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_17;
        v32[2] = v41;
      }
      sub_1AE7BBB00();
      v20 = sub_1AE501548(&qword_1EED9A750);
      a4 = 1;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
        goto LABEL_2;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE7CED4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD v42[3];
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unsigned __int8 *, uint64_t);

  v10 = sub_1AE501548(&qword_1EED9E350);
  v45 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v44 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v43 = (char *)v42 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v42 - v15;
  v17 = sub_1AE501548(&qword_1EEDA3280);
  MEMORY[0x1E0C80A78](v17);
  v19 = (unsigned __int8 *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE7BB678(a1, a2, a3, &v46);
  v42[2] = a1;
  swift_bridgeObjectRetain();
  v42[1] = a3;
  swift_retain();
  sub_1AE7BBB00();
  v20 = sub_1AE501548(&qword_1EED9A730);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1AE592EFC();
    return swift_release();
  }
  else
  {
    v47 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v45 + 32);
    while (1)
    {
      v22 = *v19;
      v47(v16, &v19[*(int *)(v20 + 48)], v10);
      v23 = *(_QWORD **)a5;
      v25 = sub_1AE536F4C(v22);
      v26 = v23[2];
      v27 = (v24 & 1) == 0;
      v28 = v26 + v27;
      if (__OFADD__(v26, v27))
        break;
      v29 = v24;
      if (v23[3] >= v28)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EED9EB28);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE636D44(v28, a4 & 1);
        v30 = sub_1AE536F4C(v22);
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_18;
        v25 = v30;
      }
      v32 = *(_QWORD **)a5;
      if ((v29 & 1) != 0)
      {
        v33 = v32[7];
        v34 = v45;
        v35 = *(_QWORD *)(v45 + 72) * v25;
        v36 = v44;
        (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v44, v33 + v35, v10);
        sub_1AE524254(0, &qword_1EED996A0);
        v37 = v43;
        sub_1AE924468();
        v38 = *(void (**)(char *, uint64_t))(v34 + 8);
        v38(v36, v10);
        v38(v16, v10);
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 40))(*(_QWORD *)(*(_QWORD *)a5 + 56) + v35, v37, v10);
      }
      else
      {
        v32[(v25 >> 6) + 8] |= 1 << v25;
        *(_BYTE *)(v32[6] + v25) = v22;
        v47((char *)(v32[7] + *(_QWORD *)(v45 + 72) * v25), (unsigned __int8 *)v16, v10);
        v39 = v32[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_17;
        v32[2] = v41;
      }
      sub_1AE7BBB00();
      v20 = sub_1AE501548(&qword_1EED9A730);
      a4 = 1;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
        goto LABEL_2;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE7CF114(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD v42[3];
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unsigned __int8 *, uint64_t);

  v10 = sub_1AE501548(&qword_1EED9A850);
  v45 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v44 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v43 = (char *)v42 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v42 - v15;
  v17 = sub_1AE501548(&qword_1EEDA3298);
  MEMORY[0x1E0C80A78](v17);
  v19 = (unsigned __int8 *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE7BB678(a1, a2, a3, &v46);
  v42[2] = a1;
  swift_bridgeObjectRetain();
  v42[1] = a3;
  swift_retain();
  sub_1AE7BBB00();
  v20 = sub_1AE501548(&qword_1EED9A6E0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1AE592EFC();
    return swift_release();
  }
  else
  {
    v47 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v45 + 32);
    while (1)
    {
      v22 = *v19;
      v47(v16, &v19[*(int *)(v20 + 48)], v10);
      v23 = *(_QWORD **)a5;
      v25 = sub_1AE536F4C(v22);
      v26 = v23[2];
      v27 = (v24 & 1) == 0;
      v28 = v26 + v27;
      if (__OFADD__(v26, v27))
        break;
      v29 = v24;
      if (v23[3] >= v28)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EED9EB88);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE636D58(v28, a4 & 1);
        v30 = sub_1AE536F4C(v22);
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_18;
        v25 = v30;
      }
      v32 = *(_QWORD **)a5;
      if ((v29 & 1) != 0)
      {
        v33 = v32[7];
        v34 = v45;
        v35 = *(_QWORD *)(v45 + 72) * v25;
        v36 = v44;
        (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v44, v33 + v35, v10);
        sub_1AE524254(0, &qword_1EED996A8);
        v37 = v43;
        sub_1AE924468();
        v38 = *(void (**)(char *, uint64_t))(v34 + 8);
        v38(v36, v10);
        v38(v16, v10);
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 40))(*(_QWORD *)(*(_QWORD *)a5 + 56) + v35, v37, v10);
      }
      else
      {
        v32[(v25 >> 6) + 8] |= 1 << v25;
        *(_BYTE *)(v32[6] + v25) = v22;
        v47((char *)(v32[7] + *(_QWORD *)(v45 + 72) * v25), (unsigned __int8 *)v16, v10);
        v39 = v32[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_17;
        v32[2] = v41;
      }
      sub_1AE7BBB00();
      v20 = sub_1AE501548(&qword_1EED9A6E0);
      a4 = 1;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
        goto LABEL_2;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE7CF4DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD v42[3];
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unsigned __int8 *, uint64_t);

  v10 = sub_1AE501548(&qword_1EED9E350);
  v45 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v44 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v43 = (char *)v42 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v42 - v15;
  v17 = sub_1AE501548(&qword_1EEDA32A8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (unsigned __int8 *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE7BB678(a1, a2, a3, &v46);
  v42[2] = a1;
  swift_bridgeObjectRetain();
  v42[1] = a3;
  swift_retain();
  sub_1AE7BBB00();
  v20 = sub_1AE501548(&qword_1EED9A6D0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1AE592EFC();
    return swift_release();
  }
  else
  {
    v47 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v45 + 32);
    while (1)
    {
      v22 = *v19;
      v47(v16, &v19[*(int *)(v20 + 48)], v10);
      v23 = *(_QWORD **)a5;
      v25 = sub_1AE536F4C(v22);
      v26 = v23[2];
      v27 = (v24 & 1) == 0;
      v28 = v26 + v27;
      if (__OFADD__(v26, v27))
        break;
      v29 = v24;
      if (v23[3] >= v28)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EED9EB98);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE636D6C(v28, a4 & 1);
        v30 = sub_1AE536F4C(v22);
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_18;
        v25 = v30;
      }
      v32 = *(_QWORD **)a5;
      if ((v29 & 1) != 0)
      {
        v33 = v32[7];
        v34 = v45;
        v35 = *(_QWORD *)(v45 + 72) * v25;
        v36 = v44;
        (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v44, v33 + v35, v10);
        sub_1AE524254(0, &qword_1EED996A0);
        v37 = v43;
        sub_1AE924468();
        v38 = *(void (**)(char *, uint64_t))(v34 + 8);
        v38(v36, v10);
        v38(v16, v10);
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 40))(*(_QWORD *)(*(_QWORD *)a5 + 56) + v35, v37, v10);
      }
      else
      {
        v32[(v25 >> 6) + 8] |= 1 << v25;
        *(_BYTE *)(v32[6] + v25) = v22;
        v47((char *)(v32[7] + *(_QWORD *)(v45 + 72) * v25), (unsigned __int8 *)v16, v10);
        v39 = v32[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_17;
        v32[2] = v41;
      }
      sub_1AE7BBB00();
      v20 = sub_1AE501548(&qword_1EED9A6D0);
      a4 = 1;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
        goto LABEL_2;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE7CF8A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD v42[3];
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unsigned __int8 *, uint64_t);

  v10 = sub_1AE501548(&qword_1EED9A850);
  v45 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v44 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v43 = (char *)v42 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v42 - v15;
  v17 = sub_1AE501548(&qword_1EEDA32C0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (unsigned __int8 *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE7BB678(a1, a2, a3, &v46);
  v42[2] = a1;
  swift_bridgeObjectRetain();
  v42[1] = a3;
  swift_retain();
  sub_1AE7BBB00();
  v20 = sub_1AE501548(&qword_1EED9A700);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1AE592EFC();
    return swift_release();
  }
  else
  {
    v47 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v45 + 32);
    while (1)
    {
      v22 = *v19;
      v47(v16, &v19[*(int *)(v20 + 48)], v10);
      v23 = *(_QWORD **)a5;
      v25 = sub_1AE536F4C(v22);
      v26 = v23[2];
      v27 = (v24 & 1) == 0;
      v28 = v26 + v27;
      if (__OFADD__(v26, v27))
        break;
      v29 = v24;
      if (v23[3] >= v28)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EED9EB68);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE636D80(v28, a4 & 1);
        v30 = sub_1AE536F4C(v22);
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_18;
        v25 = v30;
      }
      v32 = *(_QWORD **)a5;
      if ((v29 & 1) != 0)
      {
        v33 = v32[7];
        v34 = v45;
        v35 = *(_QWORD *)(v45 + 72) * v25;
        v36 = v44;
        (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v44, v33 + v35, v10);
        sub_1AE524254(0, &qword_1EED996A8);
        v37 = v43;
        sub_1AE924468();
        v38 = *(void (**)(char *, uint64_t))(v34 + 8);
        v38(v36, v10);
        v38(v16, v10);
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 40))(*(_QWORD *)(*(_QWORD *)a5 + 56) + v35, v37, v10);
      }
      else
      {
        v32[(v25 >> 6) + 8] |= 1 << v25;
        *(_BYTE *)(v32[6] + v25) = v22;
        v47((char *)(v32[7] + *(_QWORD *)(v45 + 72) * v25), (unsigned __int8 *)v16, v10);
        v39 = v32[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_17;
        v32[2] = v41;
      }
      sub_1AE7BBB00();
      v20 = sub_1AE501548(&qword_1EED9A700);
      a4 = 1;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
        goto LABEL_2;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE7CFC6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD v42[3];
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unsigned __int8 *, uint64_t);

  v10 = sub_1AE501548(&qword_1EED9A850);
  v45 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v44 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v43 = (char *)v42 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v42 - v15;
  v17 = sub_1AE501548(&qword_1EEDA3250);
  MEMORY[0x1E0C80A78](v17);
  v19 = (unsigned __int8 *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE7BB678(a1, a2, a3, &v46);
  v42[2] = a1;
  swift_bridgeObjectRetain();
  v42[1] = a3;
  swift_retain();
  sub_1AE7BBB00();
  v20 = sub_1AE501548(&qword_1EED9A760);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1AE592EFC();
    return swift_release();
  }
  else
  {
    v47 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v45 + 32);
    while (1)
    {
      v22 = *v19;
      v47(v16, &v19[*(int *)(v20 + 48)], v10);
      v23 = *(_QWORD **)a5;
      v25 = sub_1AE536F4C(v22);
      v26 = v23[2];
      v27 = (v24 & 1) == 0;
      v28 = v26 + v27;
      if (__OFADD__(v26, v27))
        break;
      v29 = v24;
      if (v23[3] >= v28)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EED9EAF8);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE636F64(v28, a4 & 1);
        v30 = sub_1AE536F4C(v22);
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_18;
        v25 = v30;
      }
      v32 = *(_QWORD **)a5;
      if ((v29 & 1) != 0)
      {
        v33 = v32[7];
        v34 = v45;
        v35 = *(_QWORD *)(v45 + 72) * v25;
        v36 = v44;
        (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v44, v33 + v35, v10);
        sub_1AE524254(0, &qword_1EED996A8);
        v37 = v43;
        sub_1AE924468();
        v38 = *(void (**)(char *, uint64_t))(v34 + 8);
        v38(v36, v10);
        v38(v16, v10);
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 40))(*(_QWORD *)(*(_QWORD *)a5 + 56) + v35, v37, v10);
      }
      else
      {
        v32[(v25 >> 6) + 8] |= 1 << v25;
        *(_BYTE *)(v32[6] + v25) = v22;
        v47((char *)(v32[7] + *(_QWORD *)(v45 + 72) * v25), (unsigned __int8 *)v16, v10);
        v39 = v32[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_17;
        v32[2] = v41;
      }
      sub_1AE7BBB00();
      v20 = sub_1AE501548(&qword_1EED9A760);
      a4 = 1;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
        goto LABEL_2;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE7D0034(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD v42[3];
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unsigned __int8 *, uint64_t);

  v10 = sub_1AE501548(&qword_1EED9E350);
  v45 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v44 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v43 = (char *)v42 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v42 - v15;
  v17 = sub_1AE501548(&qword_1EEDA3260);
  MEMORY[0x1E0C80A78](v17);
  v19 = (unsigned __int8 *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE7BB678(a1, a2, a3, &v46);
  v42[2] = a1;
  swift_bridgeObjectRetain();
  v42[1] = a3;
  swift_retain();
  sub_1AE7BBB00();
  v20 = sub_1AE501548(&qword_1EED9A740);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1AE592EFC();
    return swift_release();
  }
  else
  {
    v47 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v45 + 32);
    while (1)
    {
      v22 = *v19;
      v47(v16, &v19[*(int *)(v20 + 48)], v10);
      v23 = *(_QWORD **)a5;
      v25 = sub_1AE536F4C(v22);
      v26 = v23[2];
      v27 = (v24 & 1) == 0;
      v28 = v26 + v27;
      if (__OFADD__(v26, v27))
        break;
      v29 = v24;
      if (v23[3] >= v28)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EED9EB18);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE636F78(v28, a4 & 1);
        v30 = sub_1AE536F4C(v22);
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_18;
        v25 = v30;
      }
      v32 = *(_QWORD **)a5;
      if ((v29 & 1) != 0)
      {
        v33 = v32[7];
        v34 = v45;
        v35 = *(_QWORD *)(v45 + 72) * v25;
        v36 = v44;
        (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v44, v33 + v35, v10);
        sub_1AE524254(0, &qword_1EED996A0);
        v37 = v43;
        sub_1AE924468();
        v38 = *(void (**)(char *, uint64_t))(v34 + 8);
        v38(v36, v10);
        v38(v16, v10);
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 40))(*(_QWORD *)(*(_QWORD *)a5 + 56) + v35, v37, v10);
      }
      else
      {
        v32[(v25 >> 6) + 8] |= 1 << v25;
        *(_BYTE *)(v32[6] + v25) = v22;
        v47((char *)(v32[7] + *(_QWORD *)(v45 + 72) * v25), (unsigned __int8 *)v16, v10);
        v39 = v32[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_17;
        v32[2] = v41;
      }
      sub_1AE7BBB00();
      v20 = sub_1AE501548(&qword_1EED9A740);
      a4 = 1;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
        goto LABEL_2;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE7D03FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD v42[3];
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unsigned __int8 *, uint64_t);

  v10 = sub_1AE501548(&qword_1EED9A850);
  v45 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v44 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v43 = (char *)v42 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v42 - v15;
  v17 = sub_1AE501548(&qword_1EEDA3238);
  MEMORY[0x1E0C80A78](v17);
  v19 = (unsigned __int8 *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE7BB678(a1, a2, a3, &v46);
  v42[2] = a1;
  swift_bridgeObjectRetain();
  v42[1] = a3;
  swift_retain();
  sub_1AE7BBB00();
  v20 = sub_1AE501548(&qword_1EED9A780);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1AE592EFC();
    return swift_release();
  }
  else
  {
    v47 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v45 + 32);
    while (1)
    {
      v22 = *v19;
      v47(v16, &v19[*(int *)(v20 + 48)], v10);
      v23 = *(_QWORD **)a5;
      v25 = sub_1AE536F4C(v22);
      v26 = v23[2];
      v27 = (v24 & 1) == 0;
      v28 = v26 + v27;
      if (__OFADD__(v26, v27))
        break;
      v29 = v24;
      if (v23[3] >= v28)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EED9EAD8);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE636F8C(v28, a4 & 1);
        v30 = sub_1AE536F4C(v22);
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_18;
        v25 = v30;
      }
      v32 = *(_QWORD **)a5;
      if ((v29 & 1) != 0)
      {
        v33 = v32[7];
        v34 = v45;
        v35 = *(_QWORD *)(v45 + 72) * v25;
        v36 = v44;
        (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v44, v33 + v35, v10);
        sub_1AE524254(0, &qword_1EED996A8);
        v37 = v43;
        sub_1AE924468();
        v38 = *(void (**)(char *, uint64_t))(v34 + 8);
        v38(v36, v10);
        v38(v16, v10);
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 40))(*(_QWORD *)(*(_QWORD *)a5 + 56) + v35, v37, v10);
      }
      else
      {
        v32[(v25 >> 6) + 8] |= 1 << v25;
        *(_BYTE *)(v32[6] + v25) = v22;
        v47((char *)(v32[7] + *(_QWORD *)(v45 + 72) * v25), (unsigned __int8 *)v16, v10);
        v39 = v32[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_17;
        v32[2] = v41;
      }
      sub_1AE7BBB00();
      v20 = sub_1AE501548(&qword_1EED9A780);
      a4 = 1;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
        goto LABEL_2;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE7D07C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD v42[3];
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unsigned __int8 *, uint64_t);

  v10 = sub_1AE501548(&qword_1EED9A850);
  v45 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v44 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v43 = (char *)v42 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v42 - v15;
  v17 = sub_1AE501548(&qword_1EEDA3220);
  MEMORY[0x1E0C80A78](v17);
  v19 = (unsigned __int8 *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE7BB678(a1, a2, a3, &v46);
  v42[2] = a1;
  swift_bridgeObjectRetain();
  v42[1] = a3;
  swift_retain();
  sub_1AE7BBB00();
  v20 = sub_1AE501548(&qword_1EED9A770);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
  {
LABEL_2:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1AE592EFC();
    return swift_release();
  }
  else
  {
    v47 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v45 + 32);
    while (1)
    {
      v22 = *v19;
      v47(v16, &v19[*(int *)(v20 + 48)], v10);
      v23 = *(_QWORD **)a5;
      v25 = sub_1AE536F4C(v22);
      v26 = v23[2];
      v27 = (v24 & 1) == 0;
      v28 = v26 + v27;
      if (__OFADD__(v26, v27))
        break;
      v29 = v24;
      if (v23[3] >= v28)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EED9EAE8);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE636FA0(v28, a4 & 1);
        v30 = sub_1AE536F4C(v22);
        if ((v29 & 1) != (v31 & 1))
          goto LABEL_18;
        v25 = v30;
      }
      v32 = *(_QWORD **)a5;
      if ((v29 & 1) != 0)
      {
        v33 = v32[7];
        v34 = v45;
        v35 = *(_QWORD *)(v45 + 72) * v25;
        v36 = v44;
        (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v44, v33 + v35, v10);
        sub_1AE524254(0, &qword_1EED996A8);
        v37 = v43;
        sub_1AE924468();
        v38 = *(void (**)(char *, uint64_t))(v34 + 8);
        v38(v36, v10);
        v38(v16, v10);
        (*(void (**)(unint64_t, char *, uint64_t))(v34 + 40))(*(_QWORD *)(*(_QWORD *)a5 + 56) + v35, v37, v10);
      }
      else
      {
        v32[(v25 >> 6) + 8] |= 1 << v25;
        *(_BYTE *)(v32[6] + v25) = v22;
        v47((char *)(v32[7] + *(_QWORD *)(v45 + 72) * v25), (unsigned __int8 *)v16, v10);
        v39 = v32[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_17;
        v32[2] = v41;
      }
      sub_1AE7BBB00();
      v20 = sub_1AE501548(&qword_1EED9A770);
      a4 = 1;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v20) == 1)
        goto LABEL_2;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE7D0B8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t result;
  double v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  __n128 v23[4];
  uint64_t v24;
  _OWORD v25[3];
  uint64_t v26;

  sub_1AE7BB678(a1, a2, a3, v25);
  v23[1] = (__n128)v25[0];
  v23[2] = (__n128)v25[1];
  v23[3] = (__n128)v25[2];
  v24 = v26;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1AE7BBF04(v23, (__n128)xmmword_1AE95B6F0);
  v7 = v23[0].n128_u8[0];
  if (v23[0].n128_u8[0] == 9)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1AE592EFC();
    return swift_release();
  }
  else
  {
    while (1)
    {
      v9 = v23[0].n128_f64[1];
      v10 = (_QWORD *)*a5;
      v12 = sub_1AE536F4C(v7);
      v13 = v10[2];
      v14 = (v11 & 1) == 0;
      v15 = v13 + v14;
      if (__OFADD__(v13, v14))
        break;
      v16 = v11;
      if (v10[3] >= v15)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EED9EC10);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE637228(v15, a4 & 1);
        v17 = sub_1AE536F4C(v7);
        if ((v16 & 1) != (v18 & 1))
          goto LABEL_17;
        v12 = v17;
      }
      v19 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
      {
        *(double *)(v19[7] + 8 * v12) = v9 + *(double *)(v19[7] + 8 * v12);
      }
      else
      {
        v19[(v12 >> 6) + 8] |= 1 << v12;
        *(_BYTE *)(v19[6] + v12) = v7;
        *(double *)(v19[7] + 8 * v12) = v9;
        v20 = v19[2];
        v21 = __OFADD__(v20, 1);
        v22 = v20 + 1;
        if (v21)
          goto LABEL_16;
        v19[2] = v22;
      }
      sub_1AE7BBF04(v23, (__n128)xmmword_1AE95B6F0);
      v7 = v23[0].n128_u8[0];
      a4 = 1;
      if (v23[0].n128_u8[0] == 9)
        goto LABEL_2;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE7D0D88(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t result;
  double v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  __n128 v23[4];
  uint64_t v24;
  _OWORD v25[3];
  uint64_t v26;

  sub_1AE7BB678(a1, a2, a3, v25);
  v23[1] = (__n128)v25[0];
  v23[2] = (__n128)v25[1];
  v23[3] = (__n128)v25[2];
  v24 = v26;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1AE7BBF04(v23, (__n128)xmmword_1AE95B700);
  v7 = v23[0].n128_u8[0];
  if (v23[0].n128_u8[0] == 7)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1AE592EFC();
    return swift_release();
  }
  else
  {
    while (1)
    {
      v9 = v23[0].n128_f64[1];
      v10 = (_QWORD *)*a5;
      v12 = sub_1AE536F4C(v7);
      v13 = v10[2];
      v14 = (v11 & 1) == 0;
      v15 = v13 + v14;
      if (__OFADD__(v13, v14))
        break;
      v16 = v11;
      if (v10[3] >= v15)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EED9EBF0);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE637234(v15, a4 & 1);
        v17 = sub_1AE536F4C(v7);
        if ((v16 & 1) != (v18 & 1))
          goto LABEL_17;
        v12 = v17;
      }
      v19 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
      {
        *(double *)(v19[7] + 8 * v12) = v9 + *(double *)(v19[7] + 8 * v12);
      }
      else
      {
        v19[(v12 >> 6) + 8] |= 1 << v12;
        *(_BYTE *)(v19[6] + v12) = v7;
        *(double *)(v19[7] + 8 * v12) = v9;
        v20 = v19[2];
        v21 = __OFADD__(v20, 1);
        v22 = v20 + 1;
        if (v21)
          goto LABEL_16;
        v19[2] = v22;
      }
      sub_1AE7BBF04(v23, (__n128)xmmword_1AE95B700);
      v7 = v23[0].n128_u8[0];
      a4 = 1;
      if (v23[0].n128_u8[0] == 7)
        goto LABEL_2;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE7D0F84(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t result;
  double v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  __n128 v23[4];
  uint64_t v24;
  _OWORD v25[3];
  uint64_t v26;

  sub_1AE7BB678(a1, a2, a3, v25);
  v23[1] = (__n128)v25[0];
  v23[2] = (__n128)v25[1];
  v23[3] = (__n128)v25[2];
  v24 = v26;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1AE7BBF04(v23, (__n128)xmmword_1AE95B710);
  v7 = v23[0].n128_u8[0];
  if (v23[0].n128_u8[0] == 5)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1AE592EFC();
    return swift_release();
  }
  else
  {
    while (1)
    {
      v9 = v23[0].n128_f64[1];
      v10 = (_QWORD *)*a5;
      v12 = sub_1AE536F4C(v7);
      v13 = v10[2];
      v14 = (v11 & 1) == 0;
      v15 = v13 + v14;
      if (__OFADD__(v13, v14))
        break;
      v16 = v11;
      if (v10[3] >= v15)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EED9EBE0);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE637240(v15, a4 & 1);
        v17 = sub_1AE536F4C(v7);
        if ((v16 & 1) != (v18 & 1))
          goto LABEL_17;
        v12 = v17;
      }
      v19 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
      {
        *(double *)(v19[7] + 8 * v12) = v9 + *(double *)(v19[7] + 8 * v12);
      }
      else
      {
        v19[(v12 >> 6) + 8] |= 1 << v12;
        *(_BYTE *)(v19[6] + v12) = v7;
        *(double *)(v19[7] + 8 * v12) = v9;
        v20 = v19[2];
        v21 = __OFADD__(v20, 1);
        v22 = v20 + 1;
        if (v21)
          goto LABEL_16;
        v19[2] = v22;
      }
      sub_1AE7BBF04(v23, (__n128)xmmword_1AE95B710);
      v7 = v23[0].n128_u8[0];
      a4 = 1;
      if (v23[0].n128_u8[0] == 5)
        goto LABEL_2;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE7D1180(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t result;
  double v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  __n128 v23[4];
  uint64_t v24;
  _OWORD v25[3];
  uint64_t v26;

  sub_1AE7BB678(a1, a2, a3, v25);
  v23[1] = (__n128)v25[0];
  v23[2] = (__n128)v25[1];
  v23[3] = (__n128)v25[2];
  v24 = v26;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1AE7BBF04(v23, (__n128)xmmword_1AE95B720);
  v7 = v23[0].n128_u8[0];
  if (v23[0].n128_u8[0] == 8)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1AE592EFC();
    return swift_release();
  }
  else
  {
    while (1)
    {
      v9 = v23[0].n128_f64[1];
      v10 = (_QWORD *)*a5;
      v12 = sub_1AE536F4C(v7);
      v13 = v10[2];
      v14 = (v11 & 1) == 0;
      v15 = v13 + v14;
      if (__OFADD__(v13, v14))
        break;
      v16 = v11;
      if (v10[3] >= v15)
      {
        if ((a4 & 1) == 0)
        {
          sub_1AE501548(&qword_1EED9EBD0);
          sub_1AE926A60();
        }
      }
      else
      {
        sub_1AE63724C(v15, a4 & 1);
        v17 = sub_1AE536F4C(v7);
        if ((v16 & 1) != (v18 & 1))
          goto LABEL_17;
        v12 = v17;
      }
      v19 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
      {
        *(double *)(v19[7] + 8 * v12) = v9 + *(double *)(v19[7] + 8 * v12);
      }
      else
      {
        v19[(v12 >> 6) + 8] |= 1 << v12;
        *(_BYTE *)(v19[6] + v12) = v7;
        *(double *)(v19[7] + 8 * v12) = v9;
        v20 = v19[2];
        v21 = __OFADD__(v20, 1);
        v22 = v20 + 1;
        if (v21)
          goto LABEL_16;
        v19[2] = v22;
      }
      sub_1AE7BBF04(v23, (__n128)xmmword_1AE95B720);
      v7 = v23[0].n128_u8[0];
      a4 = 1;
      if (v23[0].n128_u8[0] == 8)
        goto LABEL_2;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE7D137C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5, uint64_t a6, void (*a7)(void), uint64_t a8, uint64_t *a9)
{
  unsigned __int8 v12;
  uint64_t result;
  double v14;
  unint64_t v15;
  char v16;
  char v17;
  BOOL v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26[4];
  uint64_t v27;
  _OWORD v28[3];
  uint64_t v29;

  sub_1AE7BB678(a1, a2, a3, v28);
  v26[1] = (__n128)v28[0];
  v26[2] = (__n128)v28[1];
  v26[3] = (__n128)v28[2];
  v27 = v29;
  sub_1AE4F66CC();
  swift_retain();
  sub_1AE7BBF04(v26, (__n128)xmmword_1AE95B6E0);
  v12 = v26[0].n128_u8[0];
  if (v26[0].n128_u8[0] == 4)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_release();
    sub_1AE592EFC();
    return sub_1AE4FB730();
  }
  else
  {
    while (1)
    {
      v14 = v26[0].n128_f64[1];
      v15 = sub_1AE7D370C();
      sub_1AE641040(v15, v16);
      if (v18)
        break;
      v19 = v17;
      sub_1AE7D36E0();
      if (v20 != v18)
      {
        a7();
        v21 = sub_1AE7D370C();
        if ((v19 & 1) != (v22 & 1))
          goto LABEL_18;
        v15 = v21;
      }
      else if ((a4 & 1) == 0)
      {
        sub_1AE501548(a9);
        sub_1AE926A60();
      }
      v23 = (_QWORD *)*a5;
      if ((v19 & 1) != 0)
      {
        *(double *)(v23[7] + 8 * v15) = v14 + *(double *)(v23[7] + 8 * v15);
      }
      else
      {
        v23[(v15 >> 6) + 8] |= 1 << v15;
        *(_BYTE *)(v23[6] + v15) = v12;
        *(double *)(v23[7] + 8 * v15) = v14;
        v24 = v23[2];
        v18 = __OFADD__(v24, 1);
        v25 = v24 + 1;
        if (v18)
          goto LABEL_17;
        v23[2] = v25;
      }
      sub_1AE7BBF04(v26, (__n128)xmmword_1AE95B6E0);
      v12 = v26[0].n128_u8[0];
      a4 = 1;
      if (v26[0].n128_u8[0] == 4)
        goto LABEL_2;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    result = sub_1AE926DE4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE7D1560(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, unsigned __int8 *, uint64_t);
  uint64_t v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD v68[4];
  _QWORD *v69;
  _QWORD *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  _OWORD v83[3];
  uint64_t v84;
  char *v85;

  v10 = sub_1AE501548(&qword_1EED9E350);
  v76 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v75 = (char *)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v74 = (char *)v68 - v14;
  MEMORY[0x1E0C80A78](v13);
  v85 = (char *)v68 - v15;
  v16 = sub_1AE501548(&qword_1EEDA3168);
  MEMORY[0x1E0C80A78](v16);
  v18 = (unsigned __int8 *)v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE7BB678(a1, a2, a3, v83);
  v79 = v83[0];
  v80 = v83[1];
  v81 = v83[2];
  v82 = v84;
  v68[1] = a1;
  swift_bridgeObjectRetain();
  v68[2] = a3;
  swift_retain();
  sub_1AE7BC04C();
  if (v20)
  {
    v22 = v19;
    v23 = v20;
    v24 = v21;
    v69 = a5;
    do
    {
      v25 = (_QWORD *)*a5;
      v27 = sub_1AE536EDC(v22, v23);
      v28 = v25[2];
      v29 = (v26 & 1) == 0;
      v30 = v28 + v29;
      if (__OFADD__(v28, v29))
        goto LABEL_32;
      v31 = v26;
      if (v25[3] >= v30)
      {
        if ((a4 & 1) == 0)
        {
          v66 = v27;
          sub_1AE501548(&qword_1EEDA31C0);
          sub_1AE926A60();
          v27 = v66;
        }
      }
      else
      {
        sub_1AE637408(v30, a4 & 1);
        v32 = sub_1AE536EDC(v22, v23);
        if ((v31 & 1) != (v33 & 1))
          goto LABEL_34;
        v27 = v32;
      }
      v34 = (_QWORD *)*a5;
      if ((v31 & 1) != 0)
      {
        v73 = v23;
        v70 = v34;
        v35 = v34[7];
        v71 = v27;
        v36 = *(_QWORD **)(v35 + 8 * v27);
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v78 = v36;
        sub_1AE7BB678(v24, (uint64_t)sub_1AE7D23D8, 0, &v77);
        v72 = v24;
        swift_bridgeObjectRetain();
        sub_1AE7BBB00();
        v38 = sub_1AE501548(&qword_1EED9A6F0);
        if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v18, 1, v38) != 1)
        {
          v48 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v76 + 32);
          while (1)
          {
            v49 = *v18;
            v48(v85, &v18[*(int *)(v38 + 48)], v10);
            v51 = sub_1AE536F4C(v49);
            v52 = v36[2];
            v53 = (v50 & 1) == 0;
            v54 = v52 + v53;
            if (__OFADD__(v52, v53))
              break;
            v55 = v50;
            if (v36[3] >= v54)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1AE501548(&qword_1EED9EB78);
                sub_1AE926A60();
              }
            }
            else
            {
              sub_1AE636D94(v54, isUniquelyReferenced_nonNull_native & 1);
              v56 = sub_1AE536F4C(v49);
              if ((v55 & 1) != (v57 & 1))
                goto LABEL_34;
              v51 = v56;
            }
            v36 = v78;
            if ((v55 & 1) != 0)
            {
              v58 = v76;
              v59 = *(_QWORD *)(v76 + 72) * v51;
              v60 = v75;
              (*(void (**)(char *, unint64_t, uint64_t))(v76 + 16))(v75, v78[7] + v59, v10);
              sub_1AE524254(0, &qword_1EED996A0);
              v61 = v74;
              v62 = v85;
              sub_1AE924468();
              v63 = *(void (**)(char *, uint64_t))(v58 + 8);
              v63(v60, v10);
              v63(v62, v10);
              v36 = v78;
              (*(void (**)(unint64_t, char *, uint64_t))(v58 + 40))(v78[7] + v59, v61, v10);
            }
            else
            {
              v78[(v51 >> 6) + 8] |= 1 << v51;
              *(_BYTE *)(v36[6] + v51) = v49;
              v48((char *)(v36[7] + *(_QWORD *)(v76 + 72) * v51), (unsigned __int8 *)v85, v10);
              v64 = v36[2];
              v43 = __OFADD__(v64, 1);
              v65 = v64 + 1;
              if (v43)
                goto LABEL_31;
              v36[2] = v65;
            }
            sub_1AE7BBB00();
            v38 = sub_1AE501548(&qword_1EED9A6F0);
            isUniquelyReferenced_nonNull_native = 1;
            if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v18, 1, v38) == 1)
              goto LABEL_11;
          }
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
          while (1)
          {
LABEL_34:
            sub_1AE926DE4();
            __break(1u);
          }
        }
LABEL_11:
        swift_bridgeObjectRelease();
        sub_1AE592EFC();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v39 = v70[7];
        v40 = v71;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v39 + 8 * v40) = v36;
        a5 = v69;
      }
      else
      {
        v34[(v27 >> 6) + 8] |= 1 << v27;
        v41 = (uint64_t *)(v34[6] + 16 * v27);
        *v41 = v22;
        v41[1] = v23;
        *(_QWORD *)(v34[7] + 8 * v27) = v24;
        v42 = v34[2];
        v43 = __OFADD__(v42, 1);
        v44 = v42 + 1;
        if (v43)
          goto LABEL_33;
        v34[2] = v44;
      }
      sub_1AE7BC04C();
      v22 = v45;
      v23 = v46;
      v24 = v47;
      a4 = 1;
    }
    while (v46);
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_1AE592EFC();
  return swift_release();
}

uint64_t sub_1AE7D1B74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, unsigned __int8 *, uint64_t);
  uint64_t v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD v68[4];
  _QWORD *v69;
  _QWORD *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  _OWORD v83[3];
  uint64_t v84;
  char *v85;

  v10 = sub_1AE501548(&qword_1EED9E350);
  v76 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v75 = (char *)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v74 = (char *)v68 - v14;
  MEMORY[0x1E0C80A78](v13);
  v85 = (char *)v68 - v15;
  v16 = sub_1AE501548(&qword_1EEDA3178);
  MEMORY[0x1E0C80A78](v16);
  v18 = (unsigned __int8 *)v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE7BB678(a1, a2, a3, v83);
  v79 = v83[0];
  v80 = v83[1];
  v81 = v83[2];
  v82 = v84;
  v68[1] = a1;
  swift_bridgeObjectRetain();
  v68[2] = a3;
  swift_retain();
  sub_1AE7BC04C();
  if (v20)
  {
    v22 = v19;
    v23 = v20;
    v24 = v21;
    v69 = a5;
    do
    {
      v25 = (_QWORD *)*a5;
      v27 = sub_1AE536EDC(v22, v23);
      v28 = v25[2];
      v29 = (v26 & 1) == 0;
      v30 = v28 + v29;
      if (__OFADD__(v28, v29))
        goto LABEL_32;
      v31 = v26;
      if (v25[3] >= v30)
      {
        if ((a4 & 1) == 0)
        {
          v66 = v27;
          sub_1AE501548(&qword_1EEDA31B8);
          sub_1AE926A60();
          v27 = v66;
        }
      }
      else
      {
        sub_1AE637414(v30, a4 & 1);
        v32 = sub_1AE536EDC(v22, v23);
        if ((v31 & 1) != (v33 & 1))
          goto LABEL_34;
        v27 = v32;
      }
      v34 = (_QWORD *)*a5;
      if ((v31 & 1) != 0)
      {
        v73 = v23;
        v70 = v34;
        v35 = v34[7];
        v71 = v27;
        v36 = *(_QWORD **)(v35 + 8 * v27);
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v78 = v36;
        sub_1AE7BB678(v24, (uint64_t)sub_1AE7D2410, 0, &v77);
        v72 = v24;
        swift_bridgeObjectRetain();
        sub_1AE7BBB00();
        v38 = sub_1AE501548(&qword_1EED9A710);
        if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v18, 1, v38) != 1)
        {
          v48 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v76 + 32);
          while (1)
          {
            v49 = *v18;
            v48(v85, &v18[*(int *)(v38 + 48)], v10);
            v51 = sub_1AE536F4C(v49);
            v52 = v36[2];
            v53 = (v50 & 1) == 0;
            v54 = v52 + v53;
            if (__OFADD__(v52, v53))
              break;
            v55 = v50;
            if (v36[3] >= v54)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1AE501548(&qword_1EED9EB58);
                sub_1AE926A60();
              }
            }
            else
            {
              sub_1AE636DBC(v54, isUniquelyReferenced_nonNull_native & 1);
              v56 = sub_1AE536F4C(v49);
              if ((v55 & 1) != (v57 & 1))
                goto LABEL_34;
              v51 = v56;
            }
            v36 = v78;
            if ((v55 & 1) != 0)
            {
              v58 = v76;
              v59 = *(_QWORD *)(v76 + 72) * v51;
              v60 = v75;
              (*(void (**)(char *, unint64_t, uint64_t))(v76 + 16))(v75, v78[7] + v59, v10);
              sub_1AE524254(0, &qword_1EED996A0);
              v61 = v74;
              v62 = v85;
              sub_1AE924468();
              v63 = *(void (**)(char *, uint64_t))(v58 + 8);
              v63(v60, v10);
              v63(v62, v10);
              v36 = v78;
              (*(void (**)(unint64_t, char *, uint64_t))(v58 + 40))(v78[7] + v59, v61, v10);
            }
            else
            {
              v78[(v51 >> 6) + 8] |= 1 << v51;
              *(_BYTE *)(v36[6] + v51) = v49;
              v48((char *)(v36[7] + *(_QWORD *)(v76 + 72) * v51), (unsigned __int8 *)v85, v10);
              v64 = v36[2];
              v43 = __OFADD__(v64, 1);
              v65 = v64 + 1;
              if (v43)
                goto LABEL_31;
              v36[2] = v65;
            }
            sub_1AE7BBB00();
            v38 = sub_1AE501548(&qword_1EED9A710);
            isUniquelyReferenced_nonNull_native = 1;
            if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v18, 1, v38) == 1)
              goto LABEL_11;
          }
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
          while (1)
          {
LABEL_34:
            sub_1AE926DE4();
            __break(1u);
          }
        }
LABEL_11:
        swift_bridgeObjectRelease();
        sub_1AE592EFC();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v39 = v70[7];
        v40 = v71;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v39 + 8 * v40) = v36;
        a5 = v69;
      }
      else
      {
        v34[(v27 >> 6) + 8] |= 1 << v27;
        v41 = (uint64_t *)(v34[6] + 16 * v27);
        *v41 = v22;
        v41[1] = v23;
        *(_QWORD *)(v34[7] + 8 * v27) = v24;
        v42 = v34[2];
        v43 = __OFADD__(v42, 1);
        v44 = v42 + 1;
        if (v43)
          goto LABEL_33;
        v34[2] = v44;
      }
      sub_1AE7BC04C();
      v22 = v45;
      v23 = v46;
      v24 = v47;
      a4 = 1;
    }
    while (v46);
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_1AE592EFC();
  return swift_release();
}

id sub_1AE7D2188(_OWORD *a1, _OWORD *a2, void *a3)
{
  __int128 v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_1AE73DE14((uint64_t)a2);
  return a3;
}

void sub_1AE7D21C0(double *a1, double a2)
{
  *a1 = a2;
  swift_bridgeObjectRetain();
  sub_1AE50A9B8();
  sub_1AE4F6664();
}

void sub_1AE7D21EC(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(double *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a5;
  *(_BYTE *)(a1 + 16) = a6 & 1;
  swift_bridgeObjectRetain();
  sub_1AE50A9B8();
  sub_1AE4F6664();
}

uint64_t sub_1AE7D2224(_BYTE *a1, char a2, uint64_t a3)
{
  *a1 = a2;
  return a3;
}

uint64_t sub_1AE7D2230(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  *a1 = a3;
  sub_1AE524560((uint64_t)a1, a2, a3, a4, a5);
  v5 = sub_1AE50A9B8();
  return sub_1AE4FD010(v5, v6, v7, v8);
}

uint64_t sub_1AE7D2264(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *a1 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1AE7D22AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8;

  v8 = sub_1AE524560(a1, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a4, v8);
  sub_1AE4F66CC();
  return a2;
}

id sub_1AE7D2304(_QWORD *a1, void *a2, uint64_t a3)
{
  *a1 = a3;
  return a2;
}

void sub_1AE7D230C(uint64_t a1)
{
  sub_1AE7D2344(a1, &qword_1EEDA31E8);
}

void sub_1AE7D2328(uint64_t a1)
{
  sub_1AE7D2344(a1, &qword_1EEDA31F8);
}

void sub_1AE7D2344(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  unsigned __int8 *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE7D30F0(a1, a2);
  v6 = sub_1AE7D33F0();
  sub_1AE7D2230(v4, (uint64_t)&v4[*(int *)(v6 + 48)], *v3, v5, v2);
  sub_1AE4FCDD0();
}

void sub_1AE7D2384(uint64_t a1)
{
  sub_1AE7D2344(a1, &qword_1EEDA3290);
}

void sub_1AE7D23A0(uint64_t a1)
{
  sub_1AE7D2344(a1, &qword_1EEDA3210);
}

void sub_1AE7D23BC(uint64_t a1)
{
  sub_1AE7D2344(a1, &qword_1EEDA32B8);
}

void sub_1AE7D23D8(uint64_t a1)
{
  sub_1AE7D2344(a1, &qword_1EEDA3208);
}

void sub_1AE7D23F4(uint64_t a1)
{
  sub_1AE7D2344(a1, &qword_1EEDA32D8);
}

void sub_1AE7D2410(uint64_t a1)
{
  sub_1AE7D2344(a1, &qword_1EEDA3200);
}

void sub_1AE7D242C(uint64_t a1)
{
  sub_1AE7D2344(a1, &qword_1EEDA3248);
}

void sub_1AE7D2448(uint64_t a1)
{
  sub_1AE7D2344(a1, &qword_1EEDA31F0);
}

void sub_1AE7D2464(uint64_t a1)
{
  sub_1AE7D2344(a1, &qword_1EEDA3230);
}

void sub_1AE7D2480(uint64_t a1)
{
  sub_1AE7D2344(a1, &qword_1EEDA3218);
}

void sub_1AE7D249C(uint64_t a1)
{
  sub_1AE7D24D4(a1, &qword_1EEDA31D8);
}

void sub_1AE7D24B8(uint64_t a1)
{
  sub_1AE7D24D4(a1, &qword_1EEDA31A8);
}

void sub_1AE7D24D4(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1AE7D30F0(a1, a2);
  v6 = sub_1AE7D33F0();
  *v4 = sub_1AE7D22AC((uint64_t)v4 + *(int *)(v6 + 48), *v3, v3[1], v5, v2);
  v4[1] = v7;
  sub_1AE4FCDD0();
}

uint64_t sub_1AE7D2514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = sub_1AE7D2224((_BYTE *)a2, *(_BYTE *)a1, *(_QWORD *)(a1 + 8));
  *(_QWORD *)(a2 + 8) = result;
  return result;
}

unint64_t sub_1AE7D2544()
{
  unint64_t result;

  result = qword_1EEDA3430;
  if (!qword_1EEDA3430)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSError, &type metadata for KTSError);
    atomic_store(result, (unint64_t *)&qword_1EEDA3430);
  }
  return result;
}

double sub_1AE7D2580@<D0>(double *a1@<X8>)
{
  return sub_1AE7CAAF0(&qword_1EED9A850, a1);
}

double sub_1AE7D25A0@<D0>(double *a1@<X8>)
{
  return sub_1AE7CAAF0(&qword_1EED9E350, a1);
}

unint64_t sub_1AE7D25C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEDA3188;
  if (!qword_1EEDA3188)
  {
    sub_1AE524254(255, &qword_1EED9A668);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EEDA3188);
  }
  return result;
}

_BYTE *sub_1AE7D2610@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *result;
  uint64_t v4;

  result = sub_1AE514028((_BYTE *)a2, *a1);
  *(_QWORD *)(a2 + 8) = v4;
  return result;
}

void sub_1AE7D2640(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AE7D2658(a1, sub_1AE7D2264, a2);
}

void sub_1AE7D264C(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1AE7D2658(a1, (uint64_t (*)(uint64_t *, _QWORD, _QWORD, _QWORD))sub_1AE7D26D0, a2);
}

void sub_1AE7D2658(_QWORD *a1@<X0>, uint64_t (*a2)(uint64_t *, _QWORD, _QWORD, _QWORD)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2(&v7, *a1, a1[1], a1[2]);
  v5 = v7;
  *a3 = v4;
  a3[1] = v6;
  a3[2] = v5;
  sub_1AE509D68();
}

id sub_1AE7D2694@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = sub_1AE7D2304(&v5, *(void **)a1, *(_QWORD *)(a1 + 8));
  v4 = v5;
  *a2 = result;
  a2[1] = v4;
  return result;
}

double sub_1AE7D26D4@<D0>(double *a1@<X8>)
{
  return sub_1AE7D2580(a1);
}

double sub_1AE7D26E8@<D0>(double *a1@<X8>)
{
  return sub_1AE7D25A0(a1);
}

void sub_1AE7D2700()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 228) = 0;
  *(_QWORD *)(v0 - 220) = 0;
  *(_DWORD *)(v0 - 72) = 0;
  *(_DWORD *)(v0 - 208) = 0;
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 184) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 200) = 1;
}

void sub_1AE7D2748()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 264) = 0;
  *(_DWORD *)(v0 - 256) = 0;
  *(_DWORD *)(v0 - 248) = 0;
  *(_QWORD *)(v0 - 360) = 1;
  *(_DWORD *)(v0 - 320) = 1;
  *(_DWORD *)(v0 - 316) = 1;
  *(_DWORD *)(v0 - 312) = 1;
  *(_DWORD *)(v0 - 308) = 1;
  *(_DWORD *)(v0 - 304) = 1;
  *(_DWORD *)(v0 - 300) = 1;
  *(_DWORD *)(v0 - 296) = 1;
  *(_DWORD *)(v0 - 288) = 1;
}

void sub_1AE7D27D0()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 304) = 0;
  *(_DWORD *)(v0 - 300) = 0;
  *(_DWORD *)(v0 - 296) = 0;
  *(_DWORD *)(v0 - 288) = 0;
  *(_DWORD *)(v0 - 280) = 0;
  *(_DWORD *)(v0 - 272) = 0;
  *(_DWORD *)(v0 - 264) = 0;
  *(_DWORD *)(v0 - 256) = 0;
  *(_DWORD *)(v0 - 248) = 0;
  *(_QWORD *)(v0 - 360) = 1;
  *(_DWORD *)(v0 - 320) = 1;
  *(_DWORD *)(v0 - 316) = 1;
}

void sub_1AE7D2858()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 312) = 0;
  *(_DWORD *)(v0 - 308) = 0;
  *(_DWORD *)(v0 - 304) = 0;
  *(_DWORD *)(v0 - 300) = 0;
  *(_DWORD *)(v0 - 296) = 0;
  *(_DWORD *)(v0 - 288) = 0;
  *(_DWORD *)(v0 - 280) = 0;
  *(_DWORD *)(v0 - 272) = 0;
  *(_DWORD *)(v0 - 264) = 0;
  *(_DWORD *)(v0 - 256) = 0;
  *(_DWORD *)(v0 - 248) = 0;
  *(_QWORD *)(v0 - 360) = 1;
}

void sub_1AE7D28E0()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 296) = 0;
  *(_DWORD *)(v0 - 288) = 0;
  *(_DWORD *)(v0 - 280) = 0;
  *(_DWORD *)(v0 - 272) = 0;
  *(_DWORD *)(v0 - 264) = 0;
  *(_DWORD *)(v0 - 256) = 0;
  *(_DWORD *)(v0 - 248) = 0;
  *(_QWORD *)(v0 - 360) = 1;
  *(_DWORD *)(v0 - 320) = 1;
  *(_DWORD *)(v0 - 316) = 1;
  *(_DWORD *)(v0 - 312) = 1;
  *(_DWORD *)(v0 - 308) = 1;
}

uint64_t sub_1AE7D2968()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE7D2978()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7D2980()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7D2994()
{
  return swift_release();
}

void sub_1AE7D29CC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + a1) = *(_QWORD *)(v1 - 256);
}

uint64_t sub_1AE7D29E4(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_1AE7D2A0C()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE7D2A14()
{
  return sub_1AE924438();
}

void sub_1AE7D2A30()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 216) = 0;
  *(_DWORD *)(v0 - 208) = 0;
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 184) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 244) = 1;
  *(_DWORD *)(v0 - 240) = 1;
  *(_DWORD *)(v0 - 236) = 1;
  *(_DWORD *)(v0 - 232) = 1;
  *(_DWORD *)(v0 - 248) = 1;
  *(_DWORD *)(v0 - 228) = 1;
  *(_DWORD *)(v0 - 224) = 1;
  *(_DWORD *)(v0 - 220) = 1;
}

void sub_1AE7D2A84()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 184) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 244) = 1;
  *(_DWORD *)(v0 - 240) = 1;
  *(_DWORD *)(v0 - 236) = 1;
  *(_DWORD *)(v0 - 232) = 1;
  *(_DWORD *)(v0 - 248) = 1;
  *(_DWORD *)(v0 - 228) = 1;
  *(_DWORD *)(v0 - 224) = 1;
  *(_DWORD *)(v0 - 220) = 1;
  *(_DWORD *)(v0 - 216) = 1;
  *(_DWORD *)(v0 - 72) = 1;
  *(_DWORD *)(v0 - 208) = 1;
}

void sub_1AE7D2AD4()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 220) = 0;
  *(_DWORD *)(v0 - 72) = 0;
  *(_DWORD *)(v0 - 208) = 0;
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 184) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 244) = 1;
  *(_DWORD *)(v0 - 240) = 1;
  *(_DWORD *)(v0 - 236) = 1;
  *(_DWORD *)(v0 - 232) = 1;
  *(_DWORD *)(v0 - 248) = 1;
}

void sub_1AE7D2B24()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 228) = 0;
  *(_QWORD *)(v0 - 220) = 0;
  *(_DWORD *)(v0 - 72) = 0;
  *(_DWORD *)(v0 - 208) = 0;
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 184) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 244) = 1;
  *(_DWORD *)(v0 - 240) = 1;
  *(_DWORD *)(v0 - 236) = 1;
  *(_DWORD *)(v0 - 232) = 1;
  *(_DWORD *)(v0 - 248) = 1;
}

void sub_1AE7D2B74(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 72) = *(_QWORD *)(v1 + a1);
}

void sub_1AE7D2B80()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 244) = 1;
  *(_DWORD *)(v0 - 240) = 1;
  *(_DWORD *)(v0 - 236) = 1;
  *(_DWORD *)(v0 - 232) = 1;
  *(_DWORD *)(v0 - 248) = 1;
  *(_DWORD *)(v0 - 228) = 1;
  *(_DWORD *)(v0 - 224) = 1;
  *(_DWORD *)(v0 - 220) = 1;
  *(_DWORD *)(v0 - 216) = 1;
  *(_DWORD *)(v0 - 72) = 1;
  *(_DWORD *)(v0 - 208) = 1;
  *(_DWORD *)(v0 - 192) = 1;
  *(_DWORD *)(v0 - 184) = 1;
  *(_DWORD *)(v0 - 176) = 1;
  *(_DWORD *)(v0 - 168) = 1;
}

void sub_1AE7D2BD0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 228) = 0;
  *(_QWORD *)(v0 - 220) = 0;
  *(_DWORD *)(v0 - 72) = 0;
  *(_DWORD *)(v0 - 208) = 0;
  *(_DWORD *)(v0 - 192) = 0;
  *(_DWORD *)(v0 - 184) = 0;
  *(_DWORD *)(v0 - 176) = 0;
  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 244) = 1;
  *(_DWORD *)(v0 - 240) = 1;
  *(_DWORD *)(v0 - 236) = 1;
  *(_DWORD *)(v0 - 232) = 1;
  *(_DWORD *)(v0 - 248) = 1;
}

void sub_1AE7D2C20()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 168) = 0;
  *(_DWORD *)(v0 - 200) = 1;
  *(_DWORD *)(v0 - 244) = 1;
  *(_DWORD *)(v0 - 240) = 1;
  *(_DWORD *)(v0 - 236) = 1;
  *(_DWORD *)(v0 - 232) = 1;
  *(_DWORD *)(v0 - 248) = 1;
  *(_DWORD *)(v0 - 228) = 1;
  *(_DWORD *)(v0 - 224) = 1;
  *(_DWORD *)(v0 - 220) = 1;
  *(_DWORD *)(v0 - 216) = 1;
  *(_DWORD *)(v0 - 72) = 1;
  *(_DWORD *)(v0 - 208) = 1;
  *(_DWORD *)(v0 - 192) = 1;
  *(_DWORD *)(v0 - 184) = 1;
}

uint64_t sub_1AE7D2C70()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7D2C84()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7D2C98()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7D2CAC()
{
  return sub_1AE925C98();
}

uint64_t sub_1AE7D2CC0()
{
  return sub_1AE925C98();
}

uint64_t sub_1AE7D2CD4()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE7D2CDC@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  return sub_1AE926CA0();
}

uint64_t sub_1AE7D2CF4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 128) = a1;
  return sub_1AE926BC8();
}

uint64_t sub_1AE7D2D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 608))(a1, a2, v3);
}

uint64_t sub_1AE7D2D18()
{
  uint64_t v0;

  return v0;
}

void sub_1AE7D2D24(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)(v2 - 200) + v1) = a1;
}

uint64_t sub_1AE7D2D30()
{
  return sub_1AE925C98();
}

uint64_t sub_1AE7D2D3C(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

uint64_t sub_1AE7D2D58()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7D2D64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 136) + 8))(v2 + a1, v1);
}

uint64_t sub_1AE7D2D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a2 - 256) = a1;
  return v2;
}

uint64_t sub_1AE7D2D90()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 792) + 16);
}

void sub_1AE7D2DA4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + a1) = *(_QWORD *)(v1 - 256);
}

void sub_1AE7D2DB0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)(v2 - 256) + v1) = a1;
}

uint64_t sub_1AE7D2DD4()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7D2DEC()
{
  return sub_1AE924438();
}

uint64_t sub_1AE7D2DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1AE7D2E08()
{
  return sub_1AE924438();
}

void sub_1AE7D2E18()
{
  JUMPOUT(0x1AF453B80);
}

uint64_t sub_1AE7D2E20(double a1)
{
  return sub_1AE9263AC(a1);
}

uint64_t sub_1AE7D2E58()
{
  return sub_1AE926BEC();
}

double sub_1AE7D2E7C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(double *)(*(_QWORD *)(v1 + 112) + a1);
}

uint64_t sub_1AE7D2E90()
{
  return sub_1AE925C68();
}

uint64_t sub_1AE7D2EA8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v12[20] = v8;
  v12[21] = a8;
  v12[62] = a6;
  v12[57] = a5;
  v12[5] = a4;
  v12[6] = a3;
  v12[12] = a2;
  v12[13] = v14;
  v12[7] = result;
  v12[8] = v11;
  v12[19] = v10;
  v12[15] = v9;
  v12[11] = v13;
  return result;
}

uint64_t sub_1AE7D2ED0()
{
  return sub_1AE925C68();
}

uint64_t sub_1AE7D2ED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 792) = a1;
  return v2;
}

uint64_t sub_1AE7D2EE8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(_BYTE *)(a1 + 16) = 2;
  return swift_willThrow();
}

void sub_1AE7D2F18(uint64_t a1, unint64_t *a2)
{
  sub_1AE524254(0, a2);
}

uint64_t sub_1AE7D2F20()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE7D2F40@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(_QWORD, uint64_t);
  uint64_t v2;

  return v1(*(_QWORD *)(a1 - 256), v2);
}

uint64_t sub_1AE7D2F4C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 536))();
}

uint64_t sub_1AE7D2F54(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1AE7D2F5C()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7D2F6C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v3, v2);
}

void sub_1AE7D2F78(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  sub_1AE80FF08(*(_QWORD *)(*(_QWORD *)(v1 + 112) + a1), *(_QWORD *)(v2 + a1));
}

uint64_t sub_1AE7D2F88(uint64_t a1)
{
  return sub_1AE7B8D94(0, a1);
}

id sub_1AE7D2F98()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 2318));
}

uint64_t sub_1AE7D2FA4()
{
  return sub_1AE926D18();
}

uint64_t sub_1AE7D2FB4(uint64_t a1, _QWORD *a2, unint64_t a3)
{
  unint64_t v3;

  return sub_1AE7B97D4(v3, a2, a3);
}

uint64_t sub_1AE7D2FC0()
{
  return sub_1AE926D18();
}

void sub_1AE7D2FC8(uint64_t a1, unint64_t *a2)
{
  sub_1AE524254(0, a2);
}

uint64_t sub_1AE7D2FD4()
{
  return sub_1AE925C98();
}

void sub_1AE7D2FDC()
{
  JUMPOUT(0x1AF453B80);
}

uint64_t sub_1AE7D2FE4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1AE7D2FEC()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1AE7D3004()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE7D300C()
{
  return sub_1AE925C98();
}

void sub_1AE7D3014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 + 96) = (char *)&a9 - v9;
}

uint64_t sub_1AE7D3028()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7D3038()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7D3048()
{
  return sub_1AE924438();
}

uint64_t sub_1AE7D3060()
{
  return sub_1AE924438();
}

uint64_t sub_1AE7D3078(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1AE7D3080(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_1AE7D3088()
{
  JUMPOUT(0x1AF453B80);
}

uint64_t sub_1AE7D3090()
{
  return sub_1AE924450();
}

uint64_t sub_1AE7D3098()
{
  return sub_1AE926B98();
}

uint64_t sub_1AE7D30B0()
{
  return sub_1AE924438();
}

uint64_t sub_1AE7D30C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 1088) = a1;
  return v2;
}

uint64_t sub_1AE7D30DC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 1088) + 16);
}

uint64_t sub_1AE7D30F0(uint64_t a1, uint64_t *a2)
{
  return sub_1AE501548(a2);
}

uint64_t sub_1AE7D3114(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1AE7D311C()
{
  return sub_1AE925C68();
}

uint64_t sub_1AE7D3124()
{
  return sub_1AE926CB8();
}

uint64_t sub_1AE7D3130(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1AE7D3144(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

uint64_t sub_1AE7D3150(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

uint64_t sub_1AE7D3168()
{
  return swift_dynamicCast();
}

uint64_t sub_1AE7D3174(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 - 264))(a1, a2, 1, v2);
}

uint64_t sub_1AE7D3188()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7D3194(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 632))(v3, a2, *(_QWORD *)(v2 + 360));
}

uint64_t sub_1AE7D31A8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7D31B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 568))(a1, v2);
}

uint64_t sub_1AE7D31C0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1AE7D31C8()
{
  uint64_t v0;

  return v0;
}

void sub_1AE7D31F0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_1AE7D320C()
{
  uint64_t v0;

  return sub_1AE8DD78C(*(_QWORD *)(*(_QWORD *)(v0 + 1088) + 16));
}

uint64_t sub_1AE7D3220()
{
  uint64_t v0;

  return sub_1AE7E98CC(*(_QWORD *)(*(_QWORD *)(v0 + 1088) + 16));
}

uint64_t sub_1AE7D3234()
{
  uint64_t v0;

  return sub_1AE7E9974(*(_QWORD *)(*(_QWORD *)(v0 + 1088) + 16));
}

uint64_t sub_1AE7D3248(uint64_t a1, uint64_t *a2)
{
  return sub_1AE523CF0(a2);
}

uint64_t sub_1AE7D3254()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE8DD928(v1, v0);
}

uint64_t sub_1AE7D3268()
{
  return swift_allocObject();
}

uint64_t sub_1AE7D3290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 696) = a2;
  return sub_1AE924450();
}

uint64_t sub_1AE7D32A0()
{
  return objc_opt_self();
}

double sub_1AE7D32C0()
{
  double v0;

  return v0;
}

uint64_t sub_1AE7D32D8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1AE7D32E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 176) + 8))(v1 + a1, *(_QWORD *)(v2 - 168));
}

uint64_t sub_1AE7D32F0()
{
  return sub_1AE925C68();
}

uint64_t sub_1AE7D32F8()
{
  return _swift_stdlib_reportUnimplementedInitializer();
}

uint64_t sub_1AE7D3308()
{
  return sub_1AE924438();
}

uint64_t sub_1AE7D3328(double a1)
{
  return sub_1AE9263AC(a1);
}

uint64_t sub_1AE7D3338()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7D3348()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7D3358()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7D3368()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7D3398(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 1088) = a1;
  return sub_1AE5B7810(v2);
}

uint64_t sub_1AE7D33A8()
{
  uint64_t v0;

  return v0;
}

void sub_1AE7D33B4()
{
  sub_1AE7B8C98();
}

uint64_t sub_1AE7D33C4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1AE7D33CC()
{
  return sub_1AE924468();
}

uint64_t sub_1AE7D33D4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1AE7D33DC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1AE7D33E4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7D33F0()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

uint64_t sub_1AE7D3400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;

  return a10(a1, a2, 1, v10);
}

uint64_t sub_1AE7D3428()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 568))();
}

uint64_t sub_1AE7D3448()
{
  return sub_1AE924450();
}

uint64_t sub_1AE7D3450()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7D345C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1AE7BB678(a1, a2, 0, a3);
}

uint64_t sub_1AE7D3470()
{
  return sub_1AE926C70();
}

void sub_1AE7D3480()
{
  sub_1AE7BBB00();
}

uint64_t sub_1AE7D3488()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7D34AC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1AE7D34B4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7D34C0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7D34D8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 112) = a1;
  return sub_1AE926BE0();
}

void sub_1AE7D34F4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 - 256) = a1;
  *(_QWORD *)(v2 - 360) = *(_QWORD *)(v2 + 160);
}

uint64_t sub_1AE7D350C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE7D351C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1AE7D3524(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1AE7D352C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7D3548(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1AE7D3550(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1AE7D3558()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

uint64_t sub_1AE7D3560()
{
  uint64_t v0;
  double v1;

  return sub_1AE7E99E4(v0, v1);
}

uint64_t sub_1AE7D3570(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 1088) = a1;
  return v2;
}

uint64_t sub_1AE7D3580()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return swift_bridgeObjectRelease();
}

void sub_1AE7D358C(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;

  *(double *)(*(_QWORD *)(v2 - 256) + a1) = a2;
}

uint64_t sub_1AE7D3598()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7D35A4()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 816) + 16);
}

uint64_t sub_1AE7D35B8()
{
  return sub_1AE926BC8();
}

uint64_t sub_1AE7D35C4()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, _QWORD);

  return v1(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));
}

double sub_1AE7D35D0()
{
  return 0.0;
}

uint64_t sub_1AE7D35F4()
{
  return sub_1AE925C98();
}

void sub_1AE7D35FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  sub_1AE7CE730(a1, a2, a3, v20, v21, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void sub_1AE7D3608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  sub_1AE7CE730(a1, a2, a3, v20, v21, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void sub_1AE7D3614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  sub_1AE7CE730(a1, a2, a3, v20, v21, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void sub_1AE7D3620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  sub_1AE7CE730(a1, a2, a3, v20, v21, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void sub_1AE7D362C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 + 56) = (char *)&a9 - v9;
}

uint64_t sub_1AE7D3640()
{
  return swift_bridgeObjectRetain();
}

void sub_1AE7D364C()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE7D3658(uint64_t a1)
{
  sub_1AE7CCCB0(a1);
}

uint64_t sub_1AE7D3660()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7D366C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  return sub_1AE7BABCC(v5, v4, a3, a4);
}

uint64_t sub_1AE7D3678()
{
  return sub_1AE925C98();
}

uint64_t sub_1AE7D3684()
{
  return sub_1AE925C98();
}

uint64_t sub_1AE7D3690()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 480))();
}

uint64_t sub_1AE7D3698()
{
  return sub_1AE925C68();
}

uint64_t sub_1AE7D36A4()
{
  return sub_1AE925C68();
}

uint64_t sub_1AE7D36B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(a1 + 16))(v2 + v1);
}

uint64_t sub_1AE7D36BC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7D36C8()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_1AE7D36D4()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AE7E9418(v1, v0);
}

uint64_t sub_1AE7D36EC()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE7D36F8()
{
  uint64_t v0;

  return sub_1AE7BBDAC((_OWORD *)(v0 + 1064));
}

uint64_t sub_1AE7D3704()
{
  return sub_1AE56782C(30);
}

uint64_t sub_1AE7D370C()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  return v0(v1);
}

BOOL sub_1AE7D372C()
{
  uint64_t v0;

  return sub_1AE8DB9B8(v0);
}

uint64_t sub_1AE7D3734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 128) = v1;
  return result;
}

uint64_t sub_1AE7D3748()
{
  return swift_retain();
}

uint64_t sub_1AE7D3754()
{
  return 0;
}

uint64_t sub_1AE7D3760@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 112) = a1;
  return v1 - 112;
}

void sub_1AE7D37B4()
{
  sub_1AE519618(0);
}

uint64_t sub_1AE7D37C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = 0;
  *(_QWORD *)(v1 + 24) = v0;
  *(_QWORD *)(v1 + 32) = 0;
  return result;
}

void sub_1AE7D37D4(uint64_t a1, unint64_t *a2)
{
  sub_1AE524254(0, a2);
}

uint64_t sub_1AE7D37F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t sub_1AE7D3800(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), _QWORD *a4)
{
  unint64_t v4;

  return sub_1AE7B9560(v4, a2, a3, a4);
}

void sub_1AE7D380C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v3;

  sub_1AE7B9404(v3, a2, a3);
}

void sub_1AE7D3818()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE524534(v0, *(uint64_t **)(v1 - 160));
}

uint64_t sub_1AE7D3824()
{
  return sub_1AE924420();
}

uint64_t sub_1AE7D3830()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 1088) + 16);
}

uint64_t sub_1AE7D3844()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7D3850(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 1088) = a1;
  return *(_QWORD *)(v1 + 648);
}

uint64_t sub_1AE7D3864(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 1088) = a1;
  return *(_QWORD *)(v1 + 648);
}

uint64_t SpeedBucket.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1AE5096C0();
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE7D38A0 + 4 * byte_1AE95BB10[v1]))(v0);
}

unint64_t sub_1AE7D38A0()
{
  return 0xD000000000000013;
}

void static SpeedBucket.fromSpeed(speed:)(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  char v11;
  char v12;
  id v13;
  char v14;
  id v15;
  char v16;
  id v17;
  char v18;
  id v19;
  char v20;
  id v21;
  char v22;
  id v23;
  char v24;
  uint64_t v25;

  v2 = sub_1AE501548(&qword_1EED9A888);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4FFEB4();
  v5 = v3 - v4;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - v7;
  v9 = objc_msgSend((id)objc_opt_self(), sel_milesPerHour);
  sub_1AE506E1C();

  v10 = sub_1AE4FBEB4();
  sub_1AE53F468(0, &qword_1EED99690);
  sub_1AE924450();
  v11 = sub_1AE4FF14C();
  sub_1AE4FE048(v5);
  if ((v11 & 1) != 0)
  {
    sub_1AE4FE048((uint64_t)v8);
    v12 = 1;
  }
  else
  {
    v13 = sub_1AE4FBEB4();
    sub_1AE505844();
    v14 = sub_1AE4FF14C();
    sub_1AE4FE048(v5);
    if ((v14 & 1) != 0)
    {
      sub_1AE4FE048((uint64_t)v8);
      v12 = 2;
    }
    else
    {
      v15 = sub_1AE4FBEB4();
      sub_1AE505844();
      v16 = sub_1AE4FF14C();
      sub_1AE4FE048(v5);
      if ((v16 & 1) != 0)
      {
        sub_1AE4FE048((uint64_t)v8);
        v12 = 3;
      }
      else
      {
        v17 = sub_1AE4FBEB4();
        sub_1AE505844();
        v18 = sub_1AE4FF14C();
        sub_1AE4FE048(v5);
        if ((v18 & 1) != 0)
        {
          sub_1AE4FE048((uint64_t)v8);
          v12 = 4;
        }
        else
        {
          v19 = sub_1AE4FBEB4();
          sub_1AE505844();
          v20 = sub_1AE4FF14C();
          sub_1AE4FE048(v5);
          if ((v20 & 1) != 0)
          {
            sub_1AE4FE048((uint64_t)v8);
            v12 = 5;
          }
          else
          {
            v21 = sub_1AE4FBEB4();
            sub_1AE505844();
            v22 = sub_1AE4FF14C();
            sub_1AE4FE048(v5);
            if ((v22 & 1) != 0)
            {
              sub_1AE4FE048((uint64_t)v8);
              v12 = 6;
            }
            else
            {
              v23 = sub_1AE4FBEB4();
              sub_1AE505844();
              v24 = sub_1AE4FF14C();
              sub_1AE4FE048(v5);
              sub_1AE4FE048((uint64_t)v8);
              if ((v24 & 1) != 0)
                v12 = 7;
              else
                v12 = 8;
            }
          }
        }
      }
    }
  }
  *a1 = v12;
  sub_1AE4F8180();
}

IntelligencePlatform::SpeedBucket_optional __swiftcall SpeedBucket.init(rawValue:)(Swift::Int32 rawValue)
{
  _BYTE *v1;
  IntelligencePlatform::SpeedBucket_optional result;

  sub_1AE508FD8(v1);
  return result;
}

uint64_t SpeedBucket.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

IntelligencePlatform::SpeedBucket_optional sub_1AE7D3BF4(Swift::Int32 *a1)
{
  return SpeedBucket.init(rawValue:)(*a1);
}

uint64_t sub_1AE7D3BFC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = SpeedBucket.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1AE7D3C20()
{
  sub_1AE7D599C();
  return sub_1AE9261A8();
}

uint64_t sub_1AE7D3C7C()
{
  sub_1AE7D599C();
  return sub_1AE926160();
}

uint64_t RelativeFlowSpeedBucket.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AE7D3D04 + 4 * byte_1AE95BB19[*v0]))(0xD000000000000014, 0x80000001AE986310);
}

uint64_t sub_1AE7D3D04()
{
  return sub_1AE5096C0();
}

void sub_1AE7D3D14()
{
  sub_1AE4FDA58();
}

void static RelativeFlowSpeedBucket.fromSpeedAndLimit(speed:limit:)(void (*a1)(uint64_t, uint64_t, uint64_t)@<X1>, char *a2@<X8>)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  char v38;
  char *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  char v43;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char v49;
  char **v50;
  uint64_t v51;
  id v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  char v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  id v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  id v86;
  char *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t);

  v90 = a1;
  v88 = a2;
  sub_1AE501548(&qword_1EED9A888);
  sub_1AE7D5A34();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4FFEB4();
  v77 = v5 - v6;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F6A60();
  v78 = v8;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F6A60();
  v79 = v10;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F6A60();
  v80 = v12;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F6A60();
  v82 = v14;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F6A60();
  v83 = v16;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE4F6A60();
  v89 = v18;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE4F6A60();
  v84 = v20;
  sub_1AE4F9350();
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v77 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v77 - v26;
  v28 = MEMORY[0x1E0C80A78](v25);
  v30 = (char *)&v77 - v29;
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v77 - v31;
  v33 = (void *)objc_opt_self();
  v34 = objc_msgSend(v33, sel_milesPerHour);
  sub_1AE506E1C();

  v35 = objc_msgSend(v33, sel_milesPerHour);
  sub_1AE924480();

  sub_1AE53F468(0, &qword_1EED99690);
  v36 = sub_1AE4FD4A0();
  v37 = sub_1AE4FB8E8(v36, sel_milesPerHour);
  sub_1AE924450();
  LOBYTE(v35) = sub_1AE92442C();
  v90 = v3;
  sub_1AE500514((uint64_t)v24);
  sub_1AE500514((uint64_t)v27);
  if ((v35 & 1) == 0)
  {
    v40 = sub_1AE4FD4A0();
    v41 = sub_1AE4FB8E8(v40, sel_milesPerHour);
    sub_1AE5039B0();
    v42 = sub_1AE7D4D28(&qword_1EEDA32F0, &qword_1EED9A888);
    v86 = v33;
    v81 = v42;
    v43 = sub_1AE925DD0();
    sub_1AE500514((uint64_t)v24);
    sub_1AE500514((uint64_t)v27);
    v44 = (void (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v90 + 2);
    v45 = v84;
    sub_1AE5072A0(v84, (uint64_t)v32);
    v90 = v44;
    v44(v89, (uint64_t)v30, v2);
    v87 = v32;
    if ((v43 & 1) != 0)
    {
      v46 = v89;
      v47 = sub_1AE50AD98();
      v48 = sub_1AE509A10(v47, sel_milesPerHour);
      sub_1AE5039B0();
      v49 = sub_1AE500FCC();
      sub_1AE500514((uint64_t)v24);
      sub_1AE500514((uint64_t)v27);
      sub_1AE500514(v46);
      sub_1AE500514(v45);
      v50 = &selRef_allVisualIdentifier;
      if ((v49 & 1) != 0)
      {
        sub_1AE500514((uint64_t)v30);
        sub_1AE500514((uint64_t)v87);
        v38 = 2;
        goto LABEL_3;
      }
    }
    else
    {
      sub_1AE500514(v89);
      sub_1AE500514(v45);
      v50 = &selRef_allVisualIdentifier;
    }
    sub_1AE508460();
    v51 = sub_1AE50AD98();
    v52 = sub_1AE507584(v51, v50[299]);
    sub_1AE5039B0();
    v85 = v30;
    v53 = sub_1AE7D5A0C();
    sub_1AE500514((uint64_t)v24);
    sub_1AE500514((uint64_t)v27);
    v54 = v83;
    sub_1AE508890(v83);
    v55 = v82;
    sub_1AE5072A0(v82, (uint64_t)v85);
    if ((v53 & 1) != 0)
    {
      v56 = sub_1AE50AD98();
      v57 = sub_1AE4FB8E8(v56, v50[299]);
      sub_1AE5039B0();
      v58 = sub_1AE500FCC();
      sub_1AE500514((uint64_t)v24);
      sub_1AE500514((uint64_t)v27);
      sub_1AE500514(v55);
      sub_1AE500514(v54);
      if ((v58 & 1) != 0)
      {
        sub_1AE500514((uint64_t)v85);
        sub_1AE500514((uint64_t)v87);
        v38 = 3;
        goto LABEL_3;
      }
    }
    else
    {
      sub_1AE500514(v55);
      sub_1AE500514(v54);
    }
    sub_1AE508460();
    v59 = (uint64_t)v85;
    v60 = sub_1AE50AD98();
    v61 = sub_1AE4FB8E8(v60, v50[299]);
    sub_1AE5039B0();
    v62 = sub_1AE7D5A0C();
    sub_1AE500514((uint64_t)v24);
    sub_1AE500514((uint64_t)v27);
    v63 = v80;
    sub_1AE508890(v80);
    v64 = v79;
    sub_1AE5072A0(v79, v59);
    if ((v62 & 1) != 0)
    {
      v65 = sub_1AE4FD4A0();
      v66 = sub_1AE507584(v65, sel_milesPerHour);
      sub_1AE5039B0();
      v67 = sub_1AE500FCC();
      sub_1AE500514((uint64_t)v24);
      sub_1AE500514((uint64_t)v27);
      sub_1AE500514(v64);
      sub_1AE500514(v63);
      if ((v67 & 1) != 0)
      {
        sub_1AE500514((uint64_t)v85);
        sub_1AE500514((uint64_t)v87);
        v38 = 4;
        goto LABEL_3;
      }
    }
    else
    {
      sub_1AE500514(v64);
      sub_1AE500514(v63);
    }
    sub_1AE508460();
    v68 = (uint64_t)v85;
    v69 = sub_1AE50AD98();
    v70 = sub_1AE507584(v69, sel_milesPerHour);
    sub_1AE5039B0();
    v71 = sub_1AE7D5A0C();
    sub_1AE500514((uint64_t)v24);
    sub_1AE500514((uint64_t)v27);
    v72 = v78;
    v73 = v90;
    v90(v78, v64, v2);
    v74 = v77;
    v73(v77, v68, v2);
    if ((v71 & 1) != 0)
    {
      sub_1AE4FD4A0();
      v75 = objc_msgSend(v86, sel_milesPerHour);
      sub_1AE5039B0();
      v76 = sub_1AE500FCC();
      sub_1AE500514((uint64_t)v24);
      sub_1AE500514((uint64_t)v27);
      sub_1AE500514(v74);
      sub_1AE500514(v72);
      sub_1AE500514((uint64_t)v85);
      sub_1AE500514((uint64_t)v87);
      v39 = v88;
      if ((v76 & 1) != 0)
      {
        v38 = 5;
        goto LABEL_4;
      }
    }
    else
    {
      sub_1AE500514(v74);
      sub_1AE500514(v72);
      sub_1AE500514((uint64_t)v85);
      sub_1AE500514((uint64_t)v87);
      v39 = v88;
    }
    v38 = 6;
    goto LABEL_4;
  }
  sub_1AE500514((uint64_t)v30);
  sub_1AE500514((uint64_t)v32);
  v38 = 1;
LABEL_3:
  v39 = v88;
LABEL_4:
  *v39 = v38;
  sub_1AE4F8180();
}

IntelligencePlatform::RelativeFlowSpeedBucket_optional __swiftcall RelativeFlowSpeedBucket.init(rawValue:)(Swift::Int32 rawValue)
{
  _BYTE *v1;
  IntelligencePlatform::RelativeFlowSpeedBucket_optional result;

  sub_1AE508FD8(v1);
  return result;
}

IntelligencePlatform::RelativeFlowSpeedBucket_optional sub_1AE7D4414(Swift::Int32 *a1)
{
  return RelativeFlowSpeedBucket.init(rawValue:)(*a1);
}

uint64_t sub_1AE7D441C()
{
  sub_1AE7D5960();
  return sub_1AE9261A8();
}

uint64_t sub_1AE7D4478()
{
  sub_1AE7D5960();
  return sub_1AE926160();
}

uint64_t static TrafficBucket.fromTrafficColor(colorInt:)@<X0>(unsigned int a1@<W0>, char *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  BOOL v9;
  char v10;
  char v13;

  v4 = sub_1AE925C98();
  v5 = sub_1AE7D4618(v4, a1);
  v7 = v6;
  result = swift_bridgeObjectRelease();
  if (!v7)
  {
    v10 = 0;
    goto LABEL_10;
  }
  v9 = v5 == (_QWORD *)0x776F6C6C6579 && v7 == 0xE600000000000000;
  if (v9 || (sub_1AE4FD134() & 1) != 0)
  {
    v10 = 2;
LABEL_8:
    result = swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v5 == (_QWORD *)6579570 && v7 == 0xE300000000000000)
  {
    v10 = 1;
    goto LABEL_8;
  }
  if ((sub_1AE4FD134() & 1) != 0)
  {
    v10 = 1;
    goto LABEL_8;
  }
  v10 = 3;
  if (v5 == (_QWORD *)1702194274 && v7 == 0xE400000000000000)
    goto LABEL_8;
  v13 = sub_1AE4FD134();
  result = swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
    v10 = 3;
  else
    v10 = 0;
LABEL_10:
  *a2 = v10;
  return result;
}

_QWORD *sub_1AE7D4618(uint64_t a1, unsigned int a2)
{
  _QWORD *result;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unsigned int v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;

  result = sub_1AE64A2FC(&v22);
  v4 = v23;
  if (v26)
  {
    v5 = (v26 - 1) & v26;
    v6 = __clz(__rbit64(v26)) | (v25 << 6);
    v7 = (unint64_t)(v24 + 64) >> 6;
    v8 = v25;
    goto LABEL_3;
  }
  v19 = v25 + 1;
  if (!__OFADD__(v25, 1))
  {
    v7 = (unint64_t)(v24 + 64) >> 6;
    if (v19 < v7)
    {
      v20 = *(_QWORD *)(v23 + 8 * v19);
      v8 = v25 + 1;
      if (v20)
      {
LABEL_31:
        v5 = (v20 - 1) & v20;
        v6 = __clz(__rbit64(v20)) + (v8 << 6);
LABEL_3:
        v9 = v22;
        v10 = *(_QWORD *)(v22 + 56);
        v27 = *(_QWORD *)(*(_QWORD *)(v22 + 48) + 16 * v6);
        v11 = *(_DWORD *)(v10 + 4 * v6);
        swift_bridgeObjectRetain();
        result = (_QWORD *)swift_bridgeObjectRetain();
        while (1)
        {
          if (v5)
          {
            v12 = __clz(__rbit64(v5));
            v5 &= v5 - 1;
            v13 = v12 | (v8 << 6);
          }
          else
          {
            v14 = v8 + 1;
            if (__OFADD__(v8, 1))
              goto LABEL_47;
            if (v14 >= v7)
              goto LABEL_27;
            v15 = *(_QWORD *)(v4 + 8 * v14);
            if (!v15)
            {
              v16 = v8 + 2;
              if (v8 + 2 >= v7)
                goto LABEL_27;
              v15 = *(_QWORD *)(v4 + 8 * v16);
              if (v15)
                goto LABEL_15;
              v16 = v8 + 3;
              if (v8 + 3 >= v7)
                goto LABEL_27;
              v15 = *(_QWORD *)(v4 + 8 * v16);
              if (v15)
                goto LABEL_15;
              v16 = v8 + 4;
              if (v8 + 4 >= v7)
                goto LABEL_27;
              v15 = *(_QWORD *)(v4 + 8 * v16);
              if (v15)
              {
LABEL_15:
                v14 = v16;
              }
              else
              {
                v14 = v8 + 5;
                if (v8 + 5 >= v7)
                  goto LABEL_27;
                v15 = *(_QWORD *)(v4 + 8 * v14);
                if (!v15)
                {
                  v18 = v8 + 6;
                  while (v18 < v7)
                  {
                    v15 = *(_QWORD *)(v4 + 8 * v18++);
                    if (v15)
                    {
                      v14 = v18 - 1;
                      goto LABEL_16;
                    }
                  }
LABEL_27:
                  swift_release();
                  return (_QWORD *)v27;
                }
              }
            }
LABEL_16:
            v5 = (v15 - 1) & v15;
            v13 = __clz(__rbit64(v15)) + (v14 << 6);
            v8 = v14;
          }
          v17 = *(_DWORD *)(*(_QWORD *)(v9 + 56) + 4 * v13);
          if (v17 < a2)
            break;
          if (v11 < a2)
            goto LABEL_46;
          if (v17 - a2 < v11 - a2)
          {
            v27 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v13);
            swift_bridgeObjectRetain();
            result = (_QWORD *)swift_bridgeObjectRelease();
            v11 = v17;
          }
        }
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      v8 = v25 + 2;
      if (v25 + 2 < v7)
      {
        v20 = *(_QWORD *)(v23 + 8 * v8);
        if (v20)
          goto LABEL_31;
        v8 = v25 + 3;
        if (v25 + 3 < v7)
        {
          v20 = *(_QWORD *)(v23 + 8 * v8);
          if (v20)
            goto LABEL_31;
          v8 = v25 + 4;
          if (v25 + 4 < v7)
          {
            v20 = *(_QWORD *)(v23 + 8 * v8);
            if (v20)
              goto LABEL_31;
            v8 = v25 + 5;
            if (v25 + 5 < v7)
            {
              v20 = *(_QWORD *)(v23 + 8 * v8);
              if (v20)
                goto LABEL_31;
              v21 = v25 + 6;
              while (v21 < v7)
              {
                v20 = *(_QWORD *)(v23 + 8 * v21++);
                if (v20)
                {
                  v8 = v21 - 1;
                  goto LABEL_31;
                }
              }
            }
          }
        }
      }
    }
    swift_bridgeObjectRetain();
    sub_1AE73D620((uint64_t)&v22);
    return 0;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t TrafficBucket.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE7D4908 + 4 * byte_1AE95BB20[*v0]))(0x65747365676E6F63, 0xE900000000000064);
}

uint64_t sub_1AE7D4908()
{
  return sub_1AE5096C0();
}

uint64_t sub_1AE7D4918()
{
  return 2003790963;
}

uint64_t sub_1AE7D4928()
{
  return 0x7261656C63;
}

uint64_t sub_1AE7D493C()
{
  sub_1AE7D5924();
  return sub_1AE9261A8();
}

uint64_t sub_1AE7D4998()
{
  sub_1AE7D5924();
  return sub_1AE926160();
}

uint64_t DistanceBucket.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE7D4A24 + 4 * byte_1AE95BB24[*v0]))(0x6E6168547373656CLL, 0xED0000656C694D31);
}

uint64_t sub_1AE7D4A24()
{
  return 0x7669466F54656E6FLL;
}

void sub_1AE7D4A48()
{
  sub_1AE4FDA58();
}

unint64_t sub_1AE7D4A60()
{
  return 0xD000000000000010;
}

void static DistanceBucket.fromDistance(distance:)(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  char v18;
  char *v19;
  char **v20;
  id v21;
  char v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char v30;
  char **v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;

  v38 = a1;
  sub_1AE501548(&qword_1EED9E350);
  sub_1AE7D5A34();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4FFEB4();
  v4 = v2 - v3;
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F6A60();
  v39 = v6;
  sub_1AE4F9350();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v36 - v11;
  v13 = objc_msgSend((id)objc_opt_self(), sel_miles);
  sub_1AE506E1C();

  v15 = sub_1AE509A10(v14, sel_miles);
  sub_1AE53F468(0, &qword_1EED996A0);
  sub_1AE924450();
  v16 = sub_1AE50A680();
  v17 = sub_1AE501F5C((uint64_t)v10);
  if ((v16 & 1) == 0)
  {
    v37 = v4;
    v20 = &selRef_allVisualIdentifier;
    v21 = sub_1AE509A10(v17, (const char *)&selRef_candidateEventLocationScore + 5);
    sub_1AE7D5A00();
    sub_1AE7D4D28((unint64_t *)&qword_1EEDA1898, &qword_1EED9E350);
    v22 = sub_1AE7D5A1C();
    sub_1AE501F5C((uint64_t)v10);
    v23 = sub_1AE507C04(v39);
    if ((v22 & 1) != 0)
    {
      v24 = sub_1AE509A10(v23, (const char *)&selRef_candidateEventLocationScore + 5);
      sub_1AE7D5A00();
      v25 = v39;
      v26 = sub_1AE50A680();
      sub_1AE501F5C((uint64_t)v10);
      v27 = v25;
      v20 = &selRef_allVisualIdentifier;
      v28 = sub_1AE501F5C(v27);
      if ((v26 & 1) != 0)
      {
        sub_1AE501F5C((uint64_t)v12);
        v18 = 1;
        goto LABEL_3;
      }
    }
    else
    {
      v28 = sub_1AE501F5C(v39);
    }
    v29 = sub_1AE509A10(v28, v20[300]);
    sub_1AE7D5A00();
    v30 = sub_1AE7D5A1C();
    sub_1AE501F5C((uint64_t)v10);
    v31 = v20;
    v32 = v37;
    v33 = sub_1AE507C04(v37);
    if ((v30 & 1) != 0)
    {
      v34 = sub_1AE509A10(v33, (const char *)v31 + 3829);
      sub_1AE7D5A00();
      v35 = sub_1AE50A680();
      sub_1AE501F5C((uint64_t)v10);
      sub_1AE501F5C(v32);
      sub_1AE501F5C((uint64_t)v12);
      v19 = v38;
      if ((v35 & 1) != 0)
      {
        v18 = 2;
        goto LABEL_13;
      }
    }
    else
    {
      sub_1AE501F5C(v32);
      sub_1AE501F5C((uint64_t)v12);
      v19 = v38;
    }
    v18 = 3;
    goto LABEL_13;
  }
  sub_1AE501F5C((uint64_t)v12);
  v18 = 0;
LABEL_3:
  v19 = v38;
LABEL_13:
  *v19 = v18;
  sub_1AE4F8180();
}

uint64_t sub_1AE7D4D28(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1AE523CF0(a2);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0CAE348], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AE7D4D68()
{
  sub_1AE7D58E8();
  return sub_1AE9261A8();
}

uint64_t sub_1AE7D4DC4()
{
  sub_1AE7D58E8();
  return sub_1AE926160();
}

uint64_t RoadType.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE7D4E44 + 4 * byte_1AE95BB28[*v0]))(0x79617765657266, 0xE700000000000000);
}

uint64_t sub_1AE7D4E44()
{
  return 0x6C61697265747261;
}

uint64_t sub_1AE7D4E5C()
{
  return 0x6F7463656C6C6F63;
}

uint64_t sub_1AE7D4E78()
{
  return 0x6C61636F6CLL;
}

uint64_t sub_1AE7D4E8C()
{
  return 0x6E776F6E6B6E75;
}

IntelligencePlatform::RoadType_optional __swiftcall RoadType.init(rawValue:)(Swift::Int32 rawValue)
{
  _BYTE *v1;
  IntelligencePlatform::RoadType_optional result;

  sub_1AE508FD8(v1);
  return result;
}

IntelligencePlatform::RoadType_optional sub_1AE7D4EB0(Swift::Int32 *a1)
{
  return RoadType.init(rawValue:)(*a1);
}

uint64_t sub_1AE7D4EB8()
{
  sub_1AE7D58AC();
  return sub_1AE9261A8();
}

uint64_t sub_1AE7D4F14()
{
  sub_1AE7D58AC();
  return sub_1AE926160();
}

uint64_t TerrainType.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE7D4F8C + 4 * byte_1AE95BB2D[*v0]))(1952541798, 0xE400000000000000);
}

uint64_t sub_1AE7D4F8C()
{
  return sub_1AE5096C0();
}

uint64_t sub_1AE7D4F9C()
{
  return 0x796C6C6968;
}

uint64_t sub_1AE7D4FB0()
{
  return 0x6E6961746E756F6DLL;
}

IntelligencePlatform::TerrainType_optional __swiftcall TerrainType.init(rawValue:)(Swift::Int32 rawValue)
{
  _BYTE *v1;
  IntelligencePlatform::TerrainType_optional result;

  sub_1AE508FD8(v1);
  return result;
}

IntelligencePlatform::TerrainType_optional sub_1AE7D4FE0(Swift::Int32 *a1)
{
  return TerrainType.init(rawValue:)(*a1);
}

uint64_t sub_1AE7D4FE8()
{
  sub_1AE7D5870();
  return sub_1AE9261A8();
}

uint64_t sub_1AE7D5044()
{
  sub_1AE7D5870();
  return sub_1AE926160();
}

uint64_t WeatherType.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE7D50C0 + 4 * byte_1AE95BB31[*v0]))(0x796E6E7573, 0xE500000000000000);
}

uint64_t sub_1AE7D50C0()
{
  return sub_1AE5096C0();
}

uint64_t sub_1AE7D50D0()
{
  return 0x7964756F6C63;
}

uint64_t sub_1AE7D50E4()
{
  return 0x796E696172;
}

IntelligencePlatform::WeatherType_optional __swiftcall WeatherType.init(rawValue:)(Swift::Int32 rawValue)
{
  _BYTE *v1;
  IntelligencePlatform::WeatherType_optional result;

  sub_1AE508FD8(v1);
  return result;
}

unint64_t sub_1AE7D5138()
{
  unint64_t result;

  result = qword_1EEDA32F8;
  if (!qword_1EEDA32F8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SpeedBucket, &type metadata for SpeedBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA32F8);
  }
  return result;
}

unint64_t sub_1AE7D5178()
{
  unint64_t result;

  result = qword_1EEDA3300;
  if (!qword_1EEDA3300)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RelativeFlowSpeedBucket, &type metadata for RelativeFlowSpeedBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA3300);
  }
  return result;
}

unint64_t sub_1AE7D51B8()
{
  unint64_t result;

  result = qword_1EEDA3308;
  if (!qword_1EEDA3308)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrafficBucket, &type metadata for TrafficBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA3308);
  }
  return result;
}

unint64_t sub_1AE7D51F8()
{
  unint64_t result;

  result = qword_1EEDA3310;
  if (!qword_1EEDA3310)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for DistanceBucket, &type metadata for DistanceBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA3310);
  }
  return result;
}

unint64_t sub_1AE7D5238()
{
  unint64_t result;

  result = qword_1EEDA3318;
  if (!qword_1EEDA3318)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RoadType, &type metadata for RoadType);
    atomic_store(result, (unint64_t *)&qword_1EEDA3318);
  }
  return result;
}

unint64_t sub_1AE7D5278()
{
  unint64_t result;

  result = qword_1EEDA3320;
  if (!qword_1EEDA3320)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TerrainType, &type metadata for TerrainType);
    atomic_store(result, (unint64_t *)&qword_1EEDA3320);
  }
  return result;
}

IntelligencePlatform::WeatherType_optional sub_1AE7D52B4(Swift::Int32 *a1)
{
  return WeatherType.init(rawValue:)(*a1);
}

uint64_t sub_1AE7D52BC()
{
  sub_1AE7D5834();
  return sub_1AE9261A8();
}

uint64_t sub_1AE7D5318()
{
  sub_1AE7D5834();
  return sub_1AE926160();
}

unint64_t sub_1AE7D5368()
{
  unint64_t result;

  result = qword_1EEDA3328;
  if (!qword_1EEDA3328)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for WeatherType, &type metadata for WeatherType);
    atomic_store(result, (unint64_t *)&qword_1EEDA3328);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TrialNamespace(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SpeedBucket(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1AE7D547C + 4 * byte_1AE95BB3E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1AE7D54B0 + 4 * byte_1AE95BB39[v4]))();
}

uint64_t sub_1AE7D54B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7D54B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE7D54C0);
  return result;
}

uint64_t sub_1AE7D54CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE7D54D4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1AE7D54D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7D54E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SpeedBucket()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for RelativeFlowSpeedBucket(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1AE7D5544 + 4 * byte_1AE95BB48[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1AE7D5578 + 4 * byte_1AE95BB43[v4]))();
}

uint64_t sub_1AE7D5578(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7D5580(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE7D5588);
  return result;
}

uint64_t sub_1AE7D5594(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE7D559CLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1AE7D55A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7D55A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for RelativeFlowSpeedBucket()
{
  sub_1AE4F67D4();
}

void type metadata accessor for TrafficBucket()
{
  sub_1AE4F67D4();
}

void type metadata accessor for DistanceBucket()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for RoadType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AE7D5628 + 4 * byte_1AE95BB52[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AE7D565C + 4 * byte_1AE95BB4D[v4]))();
}

uint64_t sub_1AE7D565C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7D5664(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE7D566CLL);
  return result;
}

uint64_t sub_1AE7D5678(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE7D5680);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AE7D5684(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7D568C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for RoadType()
{
  sub_1AE4F67D4();
}

uint64_t _s20IntelligencePlatform14DistanceBucketOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AE7D56F0 + 4 * byte_1AE95BB5C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AE7D5724 + 4 * byte_1AE95BB57[v4]))();
}

uint64_t sub_1AE7D5724(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7D572C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE7D5734);
  return result;
}

uint64_t sub_1AE7D5740(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE7D5748);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AE7D574C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7D5754(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for TerrainType()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for WeatherType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1AE7D57B8 + 4 * byte_1AE95BB66[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1AE7D57EC + 4 * byte_1AE95BB61[v4]))();
}

uint64_t sub_1AE7D57EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7D57F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE7D57FCLL);
  return result;
}

uint64_t sub_1AE7D5808(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE7D5810);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1AE7D5814(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7D581C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for WeatherType()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE7D5834()
{
  unint64_t result;

  result = qword_1EEDA3330;
  if (!qword_1EEDA3330)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for WeatherType, &type metadata for WeatherType);
    atomic_store(result, (unint64_t *)&qword_1EEDA3330);
  }
  return result;
}

unint64_t sub_1AE7D5870()
{
  unint64_t result;

  result = qword_1EEDA3338;
  if (!qword_1EEDA3338)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TerrainType, &type metadata for TerrainType);
    atomic_store(result, (unint64_t *)&qword_1EEDA3338);
  }
  return result;
}

unint64_t sub_1AE7D58AC()
{
  unint64_t result;

  result = qword_1EEDA3340;
  if (!qword_1EEDA3340)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RoadType, &type metadata for RoadType);
    atomic_store(result, (unint64_t *)&qword_1EEDA3340);
  }
  return result;
}

unint64_t sub_1AE7D58E8()
{
  unint64_t result;

  result = qword_1EEDA3348;
  if (!qword_1EEDA3348)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for DistanceBucket, &type metadata for DistanceBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA3348);
  }
  return result;
}

unint64_t sub_1AE7D5924()
{
  unint64_t result;

  result = qword_1EEDA3350;
  if (!qword_1EEDA3350)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TrafficBucket, &type metadata for TrafficBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA3350);
  }
  return result;
}

unint64_t sub_1AE7D5960()
{
  unint64_t result;

  result = qword_1EEDA3358;
  if (!qword_1EEDA3358)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RelativeFlowSpeedBucket, &type metadata for RelativeFlowSpeedBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA3358);
  }
  return result;
}

unint64_t sub_1AE7D599C()
{
  unint64_t result;

  result = qword_1EEDA3360;
  if (!qword_1EEDA3360)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for SpeedBucket, &type metadata for SpeedBucket);
    atomic_store(result, (unint64_t *)&qword_1EEDA3360);
  }
  return result;
}

uint64_t sub_1AE7D5A00()
{
  return sub_1AE924450();
}

uint64_t sub_1AE7D5A0C()
{
  return sub_1AE925DD0();
}

uint64_t sub_1AE7D5A1C()
{
  return sub_1AE925DD0();
}

uint64_t sub_1AE7D5A48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1AE5222F8();
    v4 = v16;
    type metadata accessor for CustomGraphActivityEvent(0);
    sub_1AE7EB5CC();
    v6 = a1 + v5;
    v15 = *(_QWORD *)(v7 + 72);
    sub_1AE7EA03C(&qword_1EEDA2D90);
    while (1)
    {
      v8 = sub_1AE9243F0();
      if (v1)
        break;
      v10 = v8;
      v11 = v9;
      v12 = *(_QWORD *)(v16 + 16);
      if (v12 >= *(_QWORD *)(v16 + 24) >> 1)
        sub_1AE5222F8();
      *(_QWORD *)(v16 + 16) = v12 + 1;
      v13 = v16 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v10;
      *(_QWORD *)(v13 + 40) = v11;
      v6 += v15;
      if (!--v2)
      {
        sub_1AE507978();
        return v4;
      }
    }
    sub_1AE507978();
    swift_release();
  }
  else
  {
    sub_1AE507978();
    return MEMORY[0x1E0DEE9D8];
  }
  return v4;
}

uint64_t sub_1AE7D5B98(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1AE9269DC();
    result = sub_1AE64A338(a1);
    if (result < 0 || (v5 = result, result >= 1 << *(_BYTE *)(a1 + 32)))
    {
LABEL_13:
      __break(1u);
      return v9;
    }
    else
    {
      v6 = v4;
      v7 = a1 + 64;
      while ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
      {
        if (v6 != *(_DWORD *)(a1 + 36))
          goto LABEL_17;
        v8 = v2;
        objc_msgSend(objc_allocWithZone((Class)GDTerrainTypeValue), sel_initWithType_typeValue_, *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v5), *(double *)(*(_QWORD *)(a1 + 56) + 8 * v5));
        sub_1AE9269B8();
        sub_1AE9269E8();
        sub_1AE9269F4();
        result = sub_1AE9269C4();
        if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(a1 + 32)))
          goto LABEL_18;
        if ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
          goto LABEL_19;
        if (v6 != *(_DWORD *)(a1 + 36))
          goto LABEL_20;
        result = sub_1AE926850();
        --v2;
        if (v8 == 1)
          return v9;
        v5 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          v6 = *(_DWORD *)(a1 + 36);
          if (result < 1 << *(_BYTE *)(a1 + 32))
            continue;
        }
        goto LABEL_13;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
    }
  }
  return result;
}

void sub_1AE7D5D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  sub_1AE4F67EC();
  v2 = sub_1AE7EA6B0();
  type metadata accessor for CustomGraphActivityEvent(v2);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F90F4();
  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1AE522360();
    v5 = v1 + 40;
    while (1)
    {
      v6 = sub_1AE7ADF7C();
      sub_1AE54C814(v6, v7);
      sub_1AE7EA03C(&qword_1EEDA2D78);
      sub_1AE9243A8();
      v8 = sub_1AE7ADF7C();
      if (v0)
        break;
      sub_1AE50BDB4(v8, v9);
      v10 = *(_QWORD *)(v11 + 16);
      if (v10 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_1AE522360();
      v5 += 16;
      *(_QWORD *)(v11 + 16) = v10 + 1;
      sub_1AE7EA978();
      sub_1AE7EA074();
      if (!--v4)
        goto LABEL_7;
    }
    sub_1AE50BDB4(v8, v9);
    swift_release();
    swift_release();
  }
  else
  {
LABEL_7:
    swift_release();
  }
  sub_1AE4F667C();
}

void sub_1AE7D5ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  Class *v3;
  void (*v4)(_QWORD *__return_ptr, uint64_t);
  void (*v5)(_QWORD *__return_ptr, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  void (*v33)(uint64_t, uint64_t);
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  _BYTE *v39;
  unsigned __int8 *v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t *v44;
  Class *v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[15];
  uint64_t v51;
  uint64_t v52;

  sub_1AE4FCAE4();
  v51 = v0;
  v52 = v1;
  v44 = v2;
  v45 = v3;
  v5 = v4;
  v7 = v6;
  v43 = sub_1AE501548(v2);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F686C();
  v42 = v9;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F6A60();
  v41 = v11;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F6A60();
  v40 = v13;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE5094B0();
  v39 = v15;
  v49 = MEMORY[0x1E0DEE9D8];
  v5(v50, v7);
  v46 = v50[0];
  v47 = v50[3];
  v16 = v50[4];
  v37 = v50[1];
  v38 = (unint64_t)(v50[2] + 64) >> 6;
  sub_1AE4FB75C();
  while (1)
  {
    if (v16)
    {
      v48 = (v16 - 1) & v16;
      v17 = __clz(__rbit64(v16)) | (v47 << 6);
      goto LABEL_20;
    }
    v18 = v47 + 1;
    if (__OFADD__(v47, 1))
      break;
    if (v18 >= v38)
      goto LABEL_24;
    v19 = *(_QWORD *)(v37 + 8 * v18);
    v20 = v47 + 1;
    if (!v19)
    {
      v20 = v47 + 2;
      if (v47 + 2 >= v38)
        goto LABEL_24;
      v19 = *(_QWORD *)(v37 + 8 * v20);
      if (!v19)
      {
        v20 = v47 + 3;
        if (v47 + 3 >= v38)
          goto LABEL_24;
        v19 = *(_QWORD *)(v37 + 8 * v20);
        if (!v19)
        {
          v20 = v47 + 4;
          if (v47 + 4 >= v38)
            goto LABEL_24;
          v19 = *(_QWORD *)(v37 + 8 * v20);
          if (!v19)
          {
            v20 = v47 + 5;
            if (v47 + 5 >= v38)
              goto LABEL_24;
            v19 = *(_QWORD *)(v37 + 8 * v20);
            if (!v19)
            {
              v21 = v47 + 6;
              while (v21 < v38)
              {
                v19 = *(_QWORD *)(v37 + 8 * v21++);
                if (v19)
                {
                  v20 = v21 - 1;
                  goto LABEL_19;
                }
              }
LABEL_24:
              swift_release();
              return;
            }
          }
        }
      }
    }
LABEL_19:
    v47 = v20;
    v48 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v20 << 6);
LABEL_20:
    v22 = *(_QWORD *)(v46 + 56);
    v23 = *(_BYTE *)(*(_QWORD *)(v46 + 48) + v17);
    v24 = sub_1AE501548(&qword_1EED9E350);
    v25 = *(_QWORD *)(v24 - 8);
    sub_1AE7EB410((uint64_t)&v39[*(int *)(v43 + 48)], v22 + *(_QWORD *)(v25 + 72) * v17);
    *v39 = v23;
    sub_1AE7EA350((uint64_t)v39, (uint64_t)v40, v44);
    v26 = *(int *)(v43 + 48);
    v27 = &v41[v26];
    v28 = (uint64_t)&v40[v26];
    v29 = *v40;
    *v41 = v29;
    sub_1AE7EB410((uint64_t)&v41[v26], (uint64_t)&v40[v26]);
    v30 = (uint64_t)&v42[*(int *)(v43 + 48)];
    *v42 = v29;
    sub_1AE7EB410(v30, v28);
    sub_1AE92445C();
    v32 = v31;
    v33 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v33(v30, v24);
    v34 = objc_msgSend(objc_allocWithZone(*v45), sel_initWithBucket_bucketValue_, v29, v32);
    v33((uint64_t)v27, v24);
    v35 = sub_1AE53FB14();
    sub_1AE52FBE8(v35, v36);
    v16 = v48;
    if (v34)
    {
      MEMORY[0x1AF4533D0]();
      if (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1AE926220();
      sub_1AE92625C();
      sub_1AE9261FC();
    }
  }
  __break(1u);
}

_QWORD *sub_1AE7D6218(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
    return (_QWORD *)sub_1AE7E9A8C();
  else
    return sub_1AE7E9CE4(a1);
}

void sub_1AE7D6250(uint64_t a1, void (*a2)(_QWORD *__return_ptr), void (*a3)(uint64_t *__return_ptr, uint64_t *), void (*a4)(uint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t i;
  unint64_t v11;
  char v12;
  char v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35[9];
  uint64_t v36;
  _QWORD v37[6];
  _QWORD *v38;

  v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v38 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  a2(v37);
  v34 = v37[0];
  v6 = v37[3];
  v7 = v37[4];
  v31 = (unint64_t)(v37[2] + 64) >> 6;
  v32 = v37[1];
  sub_1AE4F6804();
  if (!v7)
    goto LABEL_3;
LABEL_2:
  v8 = (v7 - 1) & v7;
  v9 = __clz(__rbit64(v7)) | (v6 << 6);
  for (i = v6; ; v9 = __clz(__rbit64(v11)) + (i << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(v34 + 48) + 16 * v9);
    v16 = *v15;
    v17 = v15[1];
    v36 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
    sub_1AE4F67A4();
    a3(v35, &v36);
    if (v4)
    {
      sub_1AE4F6700();
      sub_1AE4F6728();
      sub_1AE4F66E8();
LABEL_39:
      sub_1AE592EFC();
      return;
    }
    v18 = v35[0];
    if (!v35[0])
    {
      sub_1AE4F6728();
      goto LABEL_30;
    }
    v19 = v5[2];
    if (v5[3] <= v19)
    {
      v20 = sub_1AE7EB004(v19);
      a4(v20);
      v5 = v38;
    }
    sub_1AE926EC8();
    sub_1AE925F14();
    sub_1AE926F10();
    sub_1AE7EA578();
    if (v21)
      break;
    sub_1AE7EAB0C();
LABEL_29:
    *(_QWORD *)(v22 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v27 = (_QWORD *)(v5[6] + 16 * v23);
    *v27 = v16;
    v27[1] = v17;
    *(_QWORD *)(v5[7] + 8 * v23) = v18;
    ++v5[2];
LABEL_30:
    swift_bridgeObjectRelease();
    v6 = i;
    v7 = v8;
    if (v8)
      goto LABEL_2;
LABEL_3:
    i = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_41;
    if (i >= v31)
      goto LABEL_39;
    v11 = *(_QWORD *)(v32 + 8 * i);
    if (!v11)
    {
      sub_1AE7EB324();
      if (v12 == v13)
        goto LABEL_39;
      sub_1AE7EB318();
      if (v11)
        goto LABEL_15;
      sub_1AE7EB324();
      if (v12 == v13)
        goto LABEL_39;
      sub_1AE7EB318();
      if (v11)
        goto LABEL_15;
      sub_1AE7EB324();
      if (v12 == v13)
        goto LABEL_39;
      sub_1AE7EB318();
      if (v11)
      {
LABEL_15:
        i = v14;
      }
      else
      {
        i = v6 + 5;
        if (v6 + 5 >= v31)
          goto LABEL_39;
        v11 = *(_QWORD *)(v32 + 8 * i);
        if (!v11)
        {
          while (1)
          {
            sub_1AE7EB324();
            if (v12 == v13)
              goto LABEL_39;
            sub_1AE7EB318();
            v29 = v28 + 1;
            if (v11)
            {
              i = v29 - 1;
              break;
            }
          }
        }
      }
    }
    v8 = (v11 - 1) & v11;
  }
  sub_1AE7EAAF8();
  while (v25 + 1 != v26 || (v24 & 1) == 0)
  {
    sub_1AE7EAFB4();
    if (!v21)
    {
      sub_1AE7EAAE4();
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
}

void sub_1AE7D651C()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[7];

  v20[6] = MEMORY[0x1E0DEE9E0];
  sub_1AE64A2FC(v20);
  v0 = v20[4];
  v18 = v20[1];
  v19 = v20[3];
  sub_1AE4F66CC();
  if (!v0)
    goto LABEL_3;
LABEL_2:
  sub_1AE7EAC64();
  while (1)
  {
    sub_1AE7EAAB8();
    sub_1AE4F67A4();
    sub_1AE7D5ED0();
    sub_1AE7EB370();
    if (!(!v9 & v8))
    {
      v10 = sub_1AE7EB004(v7);
      sub_1AE637890(v10, v11);
    }
    sub_1AE7EB2F8();
    sub_1AE7EAF38();
    sub_1AE926F10();
    sub_1AE7EA578();
    if (v9)
      break;
    sub_1AE7EAB0C();
LABEL_26:
    sub_1AE4F835C(v12);
    if (v0)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v19, 1))
      goto LABEL_37;
    sub_1AE7EAC4C();
    if (v1 == v2)
      goto LABEL_35;
    sub_1AE7EB260();
    if (!v3)
    {
      sub_1AE7EAC58();
      if (v1 == v2)
        goto LABEL_35;
      sub_1AE7EAC40();
      if (!v4)
      {
        sub_1AE7EAC58();
        if (v1 == v2)
          goto LABEL_35;
        sub_1AE7EAC40();
        if (!v5)
        {
          sub_1AE7EAC58();
          if (v1 == v2)
            goto LABEL_35;
          sub_1AE7EAC40();
          if (!v6)
          {
            sub_1AE7EAC4C();
            if (v1 == v2)
              goto LABEL_35;
            sub_1AE7EB260();
            if (!v16)
            {
              while (1)
              {
                sub_1AE7EAC4C();
                if (v1 == v2)
                  break;
                if (*(_QWORD *)(v18 + 8 * v17))
                  goto LABEL_16;
              }
LABEL_35:
              sub_1AE7EAF10();
              sub_1AE4FBA00();
              return;
            }
          }
        }
      }
    }
LABEL_16:
    sub_1AE7EAC24();
  }
  sub_1AE7EAAF8();
  while (v14 + 1 != v15 || (v13 & 1) == 0)
  {
    sub_1AE7EAFB4();
    if (!v9)
    {
      sub_1AE7EAAE4();
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1AE7D66C8()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[7];

  v20[6] = MEMORY[0x1E0DEE9E0];
  sub_1AE64A2FC(v20);
  v0 = v20[4];
  v18 = v20[1];
  v19 = v20[3];
  sub_1AE4F66CC();
  if (!v0)
    goto LABEL_3;
LABEL_2:
  sub_1AE7EAC64();
  while (1)
  {
    sub_1AE7EAAB8();
    sub_1AE4F67A4();
    sub_1AE7D5ED0();
    sub_1AE7EB370();
    if (!(!v9 & v8))
    {
      v10 = sub_1AE7EB004(v7);
      sub_1AE637884(v10, v11);
    }
    sub_1AE7EB2F8();
    sub_1AE7EAF38();
    sub_1AE926F10();
    sub_1AE7EA578();
    if (v9)
      break;
    sub_1AE7EAB0C();
LABEL_26:
    sub_1AE4F835C(v12);
    if (v0)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v19, 1))
      goto LABEL_37;
    sub_1AE7EAC4C();
    if (v1 == v2)
      goto LABEL_35;
    sub_1AE7EB260();
    if (!v3)
    {
      sub_1AE7EAC58();
      if (v1 == v2)
        goto LABEL_35;
      sub_1AE7EAC40();
      if (!v4)
      {
        sub_1AE7EAC58();
        if (v1 == v2)
          goto LABEL_35;
        sub_1AE7EAC40();
        if (!v5)
        {
          sub_1AE7EAC58();
          if (v1 == v2)
            goto LABEL_35;
          sub_1AE7EAC40();
          if (!v6)
          {
            sub_1AE7EAC4C();
            if (v1 == v2)
              goto LABEL_35;
            sub_1AE7EB260();
            if (!v16)
            {
              while (1)
              {
                sub_1AE7EAC4C();
                if (v1 == v2)
                  break;
                if (*(_QWORD *)(v18 + 8 * v17))
                  goto LABEL_16;
              }
LABEL_35:
              sub_1AE7EAF10();
              sub_1AE4FBA00();
              return;
            }
          }
        }
      }
    }
LABEL_16:
    sub_1AE7EAC24();
  }
  sub_1AE7EAAF8();
  while (v14 + 1 != v15 || (v13 & 1) == 0)
  {
    sub_1AE7EAFB4();
    if (!v9)
    {
      sub_1AE7EAAE4();
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
}

uint64_t InclusionType.gdInclusionType.getter()
{
  char *v0;

  return qword_1AE95C4E0[*v0];
}

#error "1AE7D68FC: call analysis failed (funcsize=51)"

void sub_1AE7D6970(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  unint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char v34;
  void *v35;
  id v36;
  char v37;
  void *v38;
  unint64_t v39;
  unint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  BOOL v51;
  BOOL v52;
  char v53;
  char v54;
  unint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  int v67;
  int v68;
  uint64_t v69;
  char v70;
  BOOL v71;
  BOOL v72;
  char v73;
  char v74;
  char v75;
  char v76;

  v3 = v1;
  sub_1AE501548(&qword_1ED30EB60);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE501F28();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v55 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v55 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v55 - v14;
  v16 = sub_1AE4FDA6C(v13, sel_inclusionType);
  if ((unint64_t)v16 >= 8)
  {
    v16 = sub_1AE7D6888(&v69);
    v17 = v69;
  }
  else
  {
    v17 = 0x706050402010001uLL >> (8 * v16);
  }
  v55 = v17;
  v18 = sub_1AE4FDA6C((uint64_t)v16, sel_startTime);
  if (v18)
  {
    v19 = v18;
    sub_1AE9248A0();

    v20 = sub_1AE4F675C();
    v21 = (uint64_t)v12;
    v22 = 0;
  }
  else
  {
    v20 = sub_1AE9248DC();
    v21 = (uint64_t)v12;
    v22 = 1;
  }
  sub_1AE7EAE6C(v21, v22);
  sub_1AE7EA350((uint64_t)v12, (uint64_t)v15, &qword_1ED30EB60);
  sub_1AE4F675C();
  v68 = sub_1AE506078((uint64_t)v15, 1, v20);
  if (v23)
  {
    sub_1AE52FBE8((uint64_t)v15, &qword_1ED30EB60);
    v25 = 0;
  }
  else
  {
    sub_1AE924864();
    v25 = v24;
    v26 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v15, v20);
  }
  v27 = sub_1AE4FDA6C(v26, sel_endTime);
  if (v27)
  {
    v28 = v27;
    sub_1AE9248A0();

    v29 = 0;
  }
  else
  {
    v29 = 1;
  }
  sub_1AE7EAE6C(v2, v29);
  sub_1AE7EA350(v2, (uint64_t)v9, &qword_1ED30EB60);
  v67 = sub_1AE506078((uint64_t)v9, 1, v20);
  if (v23)
  {
    sub_1AE52FBE8((uint64_t)v9, &qword_1ED30EB60);
    v31 = 0;
  }
  else
  {
    sub_1AE924864();
    v31 = v30;
    v32 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v9, v20);
  }
  if (sub_1AE4FDA6C(v32, sel_distanceMinInMeters))
    sub_1AE7EA658(1);
  v66 = 1;
  v65 = 0;
  if (sub_1AE4FDA6C(0, sel_distanceMaxInMeters))
    sub_1AE7EA658(1);
  v64 = 1;
  v63 = 0;
  if (sub_1AE4FDA6C(0, sel_elevationGainMinInMeters))
    sub_1AE7EA658(1);
  v61 = 1;
  v62 = 0;
  if (sub_1AE4FDA6C(0, sel_elevationGainMaxInMeters))
    sub_1AE7EA658(1);
  v59 = 1;
  v60 = 0;
  v33 = sub_1AE4FDA6C(0, sel_durationMinInSeconds);
  v34 = 1;
  if (v33)
  {
    v35 = v33;
    v69 = 0;
    v70 = 1;
    MEMORY[0x1AF453598](v33, &v69);

    v58 = v69;
    v34 = v70;
  }
  else
  {
    v58 = 0;
  }
  v36 = sub_1AE4FDA6C((uint64_t)v33, sel_durationMaxInSeconds);
  v37 = 1;
  if (v36)
  {
    v38 = v36;
    v69 = 0;
    v70 = 1;
    MEMORY[0x1AF453598](v36, &v69);

    v57 = v69;
    v37 = v70;
  }
  else
  {
    v57 = 0;
  }
  sub_1AE5E1EE8(v3, (SEL *)&selRef_roadType);
  if (v39)
    v40 = v39;
  else
    v40 = 0xE000000000000000;
  v41 = (void *)objc_opt_self();
  sub_1AE925E18();
  sub_1AE4F67AC();
  sub_1AE50A44C(v41, sel_roadTypeForString_);
  sub_1AE7EB384();
  sub_1AE7D6F78(&v69, v40);
  v56 = v69;
  v42 = sub_1AE5E1EE8(v3, (SEL *)&selRef_roadName);
  v44 = v43;
  v45 = sub_1AE4FDA6C(v42, sel_originId);
  v46 = v45;
  if (v45)
  {
    v47 = sub_1AE4FED3C((uint64_t)v45, sel_intValue);

  }
  else
  {
    v47 = 0;
  }
  v48 = sub_1AE4FDA6C((uint64_t)v45, sel_destinationId);
  v49 = v48;
  if (v48)
  {
    v50 = objc_msgSend(v48, sel_intValue);

  }
  else
  {
    v50 = 0;
  }
  v51 = v67 == 1;
  v52 = v68 == 1;
  v53 = v66;
  v54 = v64;
  v76 = v61;
  v75 = v59;
  v74 = v34;
  v73 = v37;
  v72 = v46 == 0;
  v71 = v49 == 0;
  *(_QWORD *)a1 = v25;
  *(_BYTE *)(a1 + 8) = v52;
  *(_QWORD *)(a1 + 16) = v31;
  *(_BYTE *)(a1 + 24) = v51;
  *(_BYTE *)(a1 + 25) = v55;
  *(_QWORD *)(a1 + 32) = v65;
  *(_BYTE *)(a1 + 40) = v53;
  *(_QWORD *)(a1 + 48) = v63;
  *(_BYTE *)(a1 + 56) = v54;
  *(_QWORD *)(a1 + 64) = v62;
  *(_BYTE *)(a1 + 72) = v76;
  *(_QWORD *)(a1 + 80) = v60;
  *(_BYTE *)(a1 + 88) = v75;
  *(_QWORD *)(a1 + 96) = v58;
  *(_BYTE *)(a1 + 104) = v74;
  *(_QWORD *)(a1 + 112) = v57;
  *(_BYTE *)(a1 + 120) = v73;
  *(_BYTE *)(a1 + 121) = v56;
  *(_QWORD *)(a1 + 128) = v42;
  *(_QWORD *)(a1 + 136) = v44;
  *(_QWORD *)(a1 + 144) = v47;
  *(_BYTE *)(a1 + 152) = v72;
  *(_QWORD *)(a1 + 160) = v50;
  *(_BYTE *)(a1 + 168) = v71;
}

#error "1AE7D7004: call analysis failed (funcsize=57)"

void __swiftcall KTSQueryParams.convertToGDKTSQueryParams()(GDKTSQueryParams *__return_ptr retstr)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  sub_1AE7D2E30();
  sub_1AE501548(&qword_1ED30EB60);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4FFEB4();
  v6 = v4 - v5;
  MEMORY[0x1E0C80A78](v7);
  sub_1AE507774();
  v8 = v1[8];
  v9 = v1[24];
  v10 = v1[40];
  v11 = v1[56];
  v12 = v1[72];
  v13 = v1[88];
  v19 = v1[104];
  v20 = v1[120];
  v14 = v1[121];
  if ((v1[152] & 1) != 0)
  {
    if ((v1[8] & 1) == 0)
    {
LABEL_3:
      sub_1AE924858();
      v15 = sub_1AE4F675C();
      v16 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1AE50A44C(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_);
    sub_1AE50A44C(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_);
    if ((v8 & 1) == 0)
      goto LABEL_3;
  }
  v15 = sub_1AE4F675C();
  v16 = 1;
LABEL_6:
  v17 = 1;
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v2, v16, 1, v15);
  if ((v9 & 1) == 0)
  {
    sub_1AE924858();
    v17 = 0;
  }
  v18 = sub_1AE4F675C();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v6, v17, 1, v18);
  if ((v10 & 1) == 0)
    sub_1AE926370();
  if ((v11 & 1) != 0)
  {
    if ((v12 & 1) == 0)
      goto LABEL_12;
  }
  else
  {
    sub_1AE926370();
    if ((v12 & 1) == 0)
    {
LABEL_12:
      sub_1AE926370();
      if ((v13 & 1) != 0)
        goto LABEL_16;
      goto LABEL_13;
    }
  }
  if ((v13 & 1) != 0)
  {
LABEL_16:
    if ((v19 & 1) == 0)
      sub_1AE926370();
    if ((v20 & 1) == 0)
      sub_1AE926370();
    __asm { BR              X11 }
  }
LABEL_13:
  sub_1AE926370();
  goto LABEL_16;
}

void sub_1AE7D72B0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  objc_allocWithZone((Class)GDKTSQueryParams);
  v8 = swift_bridgeObjectRetain();
  sub_1AE7E74D0(v3, v0, *(_QWORD *)(v7 - 152), v4, *(void **)(v7 - 200), v5, v6, v1, v2, 0x6C61697265747261, 0xE800000000000000, *(_QWORD *)(v7 - 160), v8, *(void **)(v7 - 176), *(void **)(v7 - 184));
  sub_1AE505BEC();
}

#error "1AE7D73F0: call analysis failed (funcsize=51)"

uint64_t KTSDataRequest.Cadence.gdCadence.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

uint64_t sub_1AE7D7470()
{
  sub_1AE7E7698();
  return sub_1AE926190();
}

uint64_t sub_1AE7D74CC()
{
  sub_1AE7E7698();
  return sub_1AE926148();
}

void sub_1AE7D7518(GDKTSQueryParams *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = *(unsigned __int8 *)(v1 + 169);
  KTSQueryParams.convertToGDKTSQueryParams()(a1);
  v4 = v3;
  v5 = objc_allocWithZone((Class)GDKTSDataRequest);
  if (v2 == 3)
    objc_msgSend(v5, sel_initWithParameters_, v4);
  else
    objc_msgSend(v5, sel_initWithParameters_cadence_, v4, v2 + 1);
  sub_1AE501AD4();
  sub_1AE4F6624();
}

#error "1AE7D7618: call analysis failed (funcsize=59)"

#error "1AE7D7724: call analysis failed (funcsize=57)"

#error "1AE7D78F0: call analysis failed (funcsize=112)"

uint64_t sub_1AE7D7994()
{
  char *v0;

  return qword_1AE95C578[*v0];
}

#error "1AE7D7B58: call analysis failed (funcsize=140)"

#error "1AE7D7D64: call analysis failed (funcsize=118)"

uint64_t sub_1AE7D7E20()
{
  unsigned __int8 *v0;

  return *v0;
}

void *sub_1AE7D7E28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *result;
  _BYTE v15[169];
  int v16;
  __int16 v17;
  _QWORD v18[22];

  v2 = sub_1AE924918();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F666C();
  v6 = v5 - v4;
  v8 = sub_1AE4FB8E8(v7, sel_parameters);
  sub_1AE7D6970((uint64_t)v18 + 1);

  switch((unint64_t)sub_1AE507664(v9, sel_cadence))
  {
    case 0uLL:
      v10 = 3;
      goto LABEL_7;
    case 1uLL:
      v10 = 0;
      LOBYTE(v18[0]) = 0;
      break;
    case 2uLL:
      v10 = 1;
      goto LABEL_7;
    case 3uLL:
      v10 = 2;
LABEL_7:
      LOBYTE(v18[0]) = v10;
      break;
    default:
      sub_1AE7D737C(v18);
      v10 = v18[0];
      break;
  }
  memcpy(v15, (char *)v18 + 1, sizeof(v15));
  sub_1AE92490C();
  v11 = sub_1AE9248E8();
  v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  result = memcpy((void *)a1, v15, 0xA9uLL);
  *(_BYTE *)(a1 + 169) = v10;
  *(_DWORD *)(a1 + 170) = v16;
  *(_WORD *)(a1 + 174) = v17;
  *(_QWORD *)(a1 + 176) = v11;
  *(_QWORD *)(a1 + 184) = v13;
  return result;
}

void sub_1AE7D7F98()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  unint64_t v162;
  uint64_t v163;
  id v164;
  uint64_t v165;
  id v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  id v170;
  double v171;
  char v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  const char *v178;
  id v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  _BYTE *v184;
  id v185;
  void *v186;
  id v187;
  uint64_t v188;
  char v189;
  id v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  id v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  _BYTE *v210;
  id v211;
  id v212;
  char v213;
  id v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  int v220;
  uint64_t v221;
  uint64_t v222;
  char v223;
  unint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  id v235;
  uint64_t v236;
  uint64_t v237;
  int v238;
  uint64_t v239;
  uint64_t v240;
  char v241;
  unint64_t v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  id v249;
  uint64_t v250;
  uint64_t v251;
  char v252;
  char v253;
  uint64_t v254;
  id v255;
  _QWORD *v256;
  uint64_t v257;
  id v258;
  id v259;
  uint64_t v260;
  int v261;
  uint64_t v262;
  uint64_t v263;
  char v264;
  unint64_t v265;
  char v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  id v275;
  uint64_t v276;
  uint64_t v277;
  int v278;
  uint64_t v279;
  uint64_t v280;
  char v281;
  unint64_t v282;
  unint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  id v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  id v293;
  _QWORD *v294;
  uint64_t v295;
  id v296;
  id v297;
  uint64_t v298;
  int v299;
  uint64_t v300;
  uint64_t v301;
  char v302;
  unint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  id v309;
  uint64_t v310;
  uint64_t v311;
  id v312;
  uint64_t v313;
  uint64_t v314;
  id v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  id v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  id v323;
  uint64_t v324;
  unint64_t v325;
  NSObject *v326;
  _BYTE *v327;
  uint64_t v328;
  __int128 v329;
  uint64_t v330;
  uint64_t v331;
  id v332;
  id v333;
  uint64_t v334;
  char v335;
  unint64_t v336;
  unint64_t v337;
  uint64_t v338;
  os_log_type_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  id v349;
  id v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  char v357;
  unint64_t v358;
  unint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t *v365;
  id v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  _BYTE *v370;
  id v371;
  _QWORD *v372;
  uint64_t v373;
  id v374;
  id v375;
  uint64_t v376;
  uint64_t v377;
  int v378;
  uint64_t v379;
  uint64_t v380;
  char v381;
  unint64_t v382;
  uint64_t v383;
  unint64_t v384;
  unint64_t v385;
  uint64_t v386;
  uint64_t v387;
  id v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  _BYTE *v392;
  id v393;
  id v394;
  char v395;
  id v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  int v401;
  uint64_t v402;
  char v403;
  unint64_t v404;
  unint64_t v405;
  unint64_t v406;
  uint64_t v407;
  NSObject *v408;
  uint64_t v409;
  __int128 v410;
  uint64_t v411;
  id v412;
  id v413;
  char v414;
  unint64_t v415;
  uint64_t v416;
  os_log_type_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  id v427;
  uint64_t v428;
  uint64_t v429;
  char *v430;
  void (*v431)(_BYTE *, char *, uint64_t);
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  NSObject *v435;
  _BYTE *v436;
  char *v437;
  uint64_t v438;
  uint64_t v439;
  char v440;
  unint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  id v447;
  uint64_t v448;
  uint64_t v449;
  _BYTE *v450;
  id v451;
  _QWORD *v452;
  uint64_t v453;
  id v454;
  id v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  int v459;
  uint64_t v460;
  uint64_t v461;
  char v462;
  unint64_t v463;
  unint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  id v471;
  uint64_t v472;
  uint64_t v473;
  id v474;
  id v475;
  char v476;
  id v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  int v483;
  uint64_t v484;
  uint64_t v485;
  char v486;
  unint64_t v487;
  unint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  unint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  id v499;
  id v500;
  unint64_t v501;
  unint64_t v502;
  uint64_t v503;
  uint64_t v504;
  unint64_t v505;
  unint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  id v510;
  id v511;
  unint64_t v512;
  unint64_t v513;
  uint64_t v514;
  uint64_t v515;
  void *v516;
  id v517;
  uint64_t v518;
  id v519;
  uint64_t v520;
  id v521;
  uint64_t v522;
  id v523;
  uint64_t v524;
  id v525;
  uint64_t v526;
  id v527;
  id v528;
  uint64_t v529;
  uint64_t v530;
  id v531;
  uint64_t v532;
  uint64_t v533;
  id v534;
  uint64_t v535;
  id v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  const char *v540;
  unint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  _BYTE *v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  unint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  char *v565;
  uint64_t v566;
  void *v567;
  unint64_t v568;
  __int128 v569;
  unint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  _BYTE *v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  void *v578;
  _BYTE *v579;
  uint64_t v580;
  char *v581;
  uint64_t v582;
  uint64_t v583;
  NSObject *v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  _BYTE *v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  _BYTE *v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  unint64_t v597;
  uint64_t v598;
  uint64_t v599;
  char v600[8];
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  char v605[8];
  char v606[8];
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  char v610[8];
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  unint64_t v620;
  uint64_t v621;
  _BYTE *v622;
  uint64_t v623;
  uint64_t *v624;
  __int128 v625;
  uint64_t v626;
  unint64_t v627;
  __int128 v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  unint64_t v632;
  uint64_t v633;
  uint64_t v634;
  char v635[8];
  id v636;
  uint64_t v637;
  char v638[7];
  unsigned __int8 v639;
  __int128 v640;
  char v641[8];
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;

  sub_1AE501548((uint64_t *)&unk_1EED9E340);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4FFEB4();
  sub_1AE7EB248();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE507774();
  sub_1AE501548(&qword_1EED9A888);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  sub_1AE5085B4(v8);
  v575 = sub_1AE501548(&qword_1EEDA3388);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F9024();
  sub_1AE5085B4(v10);
  sub_1AE501548(&qword_1EEDA3238);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F9024();
  sub_1AE5085B4(v12);
  v13 = sub_1AE501548(&qword_1EED9A780);
  sub_1AE4F9050(v13, (uint64_t)v600);
  v549 = v14;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v15);
  v571 = (uint64_t)&v540 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE5094B0();
  sub_1AE5085B4(v18);
  v580 = sub_1AE501548(&qword_1EEDA3390);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE5085B4((uint64_t)&v540 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AE501548(&qword_1EEDA3220);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v21);
  sub_1AE4F666C();
  v24 = (void *)(v23 - v22);
  v25 = sub_1AE501548(&qword_1EED9A770);
  sub_1AE4F9050(v25, (uint64_t)v605);
  v551 = v26;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v27);
  sub_1AE4F686C();
  v577 = v28;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v29);
  sub_1AE5094B0();
  sub_1AE5085B4(v30);
  sub_1AE501548(&qword_1EEDA3250);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v31);
  sub_1AE5085B4((uint64_t)&v540 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = sub_1AE501548(&qword_1EED9A760);
  sub_1AE4F9050(v33, (uint64_t)v610);
  v553 = v34;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v35);
  sub_1AE4F686C();
  v582 = v36;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v37);
  v581 = (char *)&v540 - v38;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v39);
  sub_1AE5085B4((uint64_t)&v540 - v40);
  v590 = sub_1AE501548(&qword_1EEDA3398);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v41);
  sub_1AE4F9024();
  sub_1AE5085B4(v42);
  sub_1AE501548(&qword_1EEDA3270);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v43);
  sub_1AE4F9024();
  sub_1AE5085B4(v44);
  v45 = sub_1AE501548(&qword_1EED9A750);
  sub_1AE4F9050(v45, (uint64_t)&v613);
  v555 = v46;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v47);
  sub_1AE4F686C();
  v586 = v48;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v49);
  sub_1AE5094B0();
  sub_1AE5085B4(v50);
  v594 = sub_1AE501548(&qword_1EEDA33A0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v51);
  sub_1AE5085B4((uint64_t)&v540 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AE501548(&qword_1EEDA3260);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v53);
  sub_1AE4F9024();
  sub_1AE5085B4(v54);
  v55 = sub_1AE501548(&qword_1EED9A740);
  sub_1AE4F9050(v55, (uint64_t)&v619);
  v557 = v56;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v57);
  sub_1AE4F686C();
  v592 = v58;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v59);
  sub_1AE5094B0();
  sub_1AE5085B4(v60);
  sub_1AE501548(&qword_1EEDA3280);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v61);
  sub_1AE4F9024();
  sub_1AE5085B4(v62);
  v63 = sub_1AE501548(&qword_1EED9A730);
  sub_1AE4F9050(v63, (uint64_t)&v625);
  v559 = v64;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v65);
  sub_1AE4F686C();
  v595 = v66;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v67);
  sub_1AE4F6A60();
  v596 = v68;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v69);
  sub_1AE5085B4((uint64_t)&v540 - v70);
  v601 = sub_1AE501548(&qword_1EEDA33A8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v71);
  sub_1AE4F9024();
  sub_1AE5085B4(v72);
  sub_1AE501548(&qword_1EEDA3170);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v73);
  sub_1AE5085B4((uint64_t)&v540 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75 = sub_1AE501548(&qword_1EED9A720);
  sub_1AE4F9050(v75, (uint64_t)&v627);
  v560 = v76;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v77);
  sub_1AE4F686C();
  v598 = v78;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v79);
  sub_1AE5085B4((uint64_t)&v540 - v80);
  v607 = sub_1AE501548(&qword_1EEDA33B0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v81);
  sub_1AE4F9024();
  sub_1AE5085B4(v82);
  sub_1AE501548(&qword_1EEDA3178);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v83);
  sub_1AE4F9024();
  sub_1AE5085B4(v84);
  v85 = sub_1AE501548(&qword_1EED9A710);
  sub_1AE4F9050(v85, (uint64_t)&v632);
  v561 = v86;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v87);
  sub_1AE4F686C();
  v603 = v88;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v89);
  sub_1AE5085B4((uint64_t)&v540 - v90);
  v611 = sub_1AE501548(&qword_1EEDA33B8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v91);
  sub_1AE4F9024();
  sub_1AE5085B4(v92);
  sub_1AE501548(&qword_1EEDA32C0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v93);
  sub_1AE4F9024();
  sub_1AE5085B4(v94);
  v95 = sub_1AE501548(&qword_1EED9A700);
  sub_1AE4F9050(v95, (uint64_t)v638);
  v562 = v96;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v97);
  sub_1AE4F686C();
  v608 = v98;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v99);
  sub_1AE5094B0();
  sub_1AE5085B4(v100);
  v617 = sub_1AE501548(&qword_1EEDA33C0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v101);
  sub_1AE4F9024();
  sub_1AE5085B4(v102);
  sub_1AE501548(&qword_1EEDA3168);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v103);
  sub_1AE4F9024();
  sub_1AE5085B4(v104);
  v105 = sub_1AE501548(&qword_1EED9A6F0);
  sub_1AE4F9050(v105, (uint64_t)&v642);
  v563 = v106;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v107);
  sub_1AE4F686C();
  v612 = v108;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v109);
  sub_1AE5094B0();
  sub_1AE5085B4(v110);
  v623 = sub_1AE501548(&qword_1EEDA33C8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v111);
  sub_1AE4F9024();
  sub_1AE5085B4(v112);
  v633 = sub_1AE501548(&qword_1EED9A850);
  v631 = *(_QWORD *)(v633 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v113);
  sub_1AE4F686C();
  v545 = v114;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v115);
  sub_1AE4F6A60();
  v570 = v116;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v117);
  sub_1AE4F6A60();
  v576 = v118;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v119);
  sub_1AE4F6A60();
  v629 = v120;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v121);
  sub_1AE4F6A60();
  v599 = v122;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v123);
  sub_1AE4F6A60();
  v609 = v124;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v125);
  sub_1AE5094B0();
  sub_1AE5085B4(v126);
  sub_1AE501548(&qword_1EEDA3298);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v127);
  sub_1AE4F9024();
  sub_1AE5085B4(v128);
  v129 = sub_1AE501548(&qword_1EED9A6E0);
  sub_1AE4F9050(v129, (uint64_t)&v646);
  v564 = v130;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v131);
  sub_1AE4F686C();
  v618 = v132;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v133);
  sub_1AE5085B4((uint64_t)&v540 - v134);
  *(_QWORD *)&v628 = sub_1AE501548(&qword_1EEDA33D0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v135);
  sub_1AE4F9024();
  v627 = v136;
  v634 = sub_1AE501548(&qword_1EED9E350);
  v632 = *(_QWORD *)(v634 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v137);
  sub_1AE4F686C();
  v544 = v138;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v139);
  sub_1AE4F6A60();
  v585 = v140;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v141);
  sub_1AE4F6A60();
  v591 = v142;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v143);
  sub_1AE4F6A60();
  v630 = v144;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v145);
  sub_1AE4F6A60();
  v602 = v146;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v147);
  sub_1AE4F6A60();
  v613 = v148;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v149);
  sub_1AE5094B0();
  v626 = v150;
  sub_1AE501548(&qword_1EEDA32A8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v151);
  sub_1AE4F90F4();
  v152 = sub_1AE501548(&qword_1EED9A6D0);
  sub_1AE4F9050(v152, (uint64_t)&v648);
  v566 = v153;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v154);
  v624 = (uint64_t *)((char *)&v540 - ((v155 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v156);
  v565 = (char *)&v540 - v157;
  v158 = sub_1AE4F675C();
  v159 = *(_QWORD *)(v158 - 8);
  MEMORY[0x1E0C80A78](v158);
  sub_1AE4FD234();
  v161 = sub_1AE4FED3C(v160, sel_startTime);
  sub_1AE7EAA6C();

  sub_1AE924864();
  v162 = *(_QWORD *)(v159 + 8);
  v163 = sub_1AE7EB4F8();
  v164 = sub_1AE4FED3C(v163, sel_endTime);
  sub_1AE7EAA6C();

  sub_1AE924864();
  v165 = sub_1AE7EB4F8();
  v567 = v0;
  v166 = sub_1AE4FED3C(v165, sel_distanceBuckets);
  sub_1AE4F77B8((uint64_t)v166, &qword_1EED9A660);
  v167 = sub_1AE9261CC();

  if (v167 >> 62)
    goto LABEL_245;
  v168 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1AE4F66CC();
  while (1)
  {
    v578 = v24;
    v543 = v1;
    v542 = v3;
    if (!v168)
    {
      v2 = MEMORY[0x1E0DEE9D8];
LABEL_23:
      sub_1AE4F6824();
      sub_1AE62C2EC(v2);
      v540 = v178;
      v179 = sub_1AE7EA4A0((uint64_t)v178, sel_distanceSpentInTrafficBuckets);
      v162 = sub_1AE4F77B8((uint64_t)v179, &qword_1EED9A680);
      v2 = sub_1AE9261CC();

      if (v2 >> 62)
      {
        sub_1AE4F6708();
        v180 = sub_1AE926AD8();
      }
      else
      {
        v180 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_1AE4F6708();
      }
      v541 = v162;
      if (v180)
      {
        *(_QWORD *)&v569 = sub_1AE7EAA44();
        if (v180 < 1)
          goto LABEL_302;
        v181 = 0;
        v568 = v2 & 0xC000000000000001;
        v182 = MEMORY[0x1E0DEE9D8];
        v183 = v2;
        v184 = (_BYTE *)v627;
        do
        {
          if (v568)
            v185 = (id)MEMORY[0x1AF453B80](v181, v2);
          else
            v185 = sub_1AE7EA384(v2 + 8 * v181);
          v186 = v185;
          v187 = objc_msgSend(v185, sel_bucket);
          v188 = sub_1AE7D79A8(v187, type metadata accessor for GDTrafficBucket, "Unknown traffic bucket: %s. Ignored.", v540);
          v189 = v640;
          sub_1AE501F44(v188, sel_bucketValue);
          v190 = sub_1AE7EA650(sel_meters, (uint64_t)&v597);
          v191 = sub_1AE595C08();
          sub_1AE53F468(v191, &qword_1EED996A0);
          v192 = v626;
          sub_1AE7EB344();
          v193 = (uint64_t)&v184[*(int *)(v628 + 48)];
          *v184 = v189;
          sub_1AE505E5C(v193, v192, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v632 + 32));
          v194 = v625;
          v195 = sub_1AE506A00();
          sub_1AE4FD940(v4, v195 ^ 1u);

          sub_1AE506078(v4, 1, v194);
          if (v196)
          {
            sub_1AE52FBE8(v4, &qword_1EEDA32A8);
            v197 = v180;
            v2 = v183;
          }
          else
          {
            sub_1AE7EAD58();
            sub_1AE7EA628(v198, v199);
            sub_1AE7EA628(v194, (uint64_t)v624);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v197 = v180;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1AE7EB0B4();
              sub_1AE51BB50();
              v182 = v203;
            }
            v2 = v183;
            v202 = *(_QWORD *)(v182 + 16);
            v201 = *(_QWORD *)(v182 + 24);
            if (v202 >= v201 >> 1)
            {
              sub_1AE7EB3B8(v201);
              sub_1AE51BB50();
              v182 = v204;
            }
            *(_QWORD *)(v182 + 16) = v202 + 1;
            sub_1AE7EA350((uint64_t)v624, v182+ ((*(unsigned __int8 *)(v566 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v566 + 80))+ *(_QWORD *)(v566 + 72) * v202, &qword_1EED9A6D0);
          }
          ++v181;
        }
        while (v197 != v181);
      }
      else
      {
        v182 = MEMORY[0x1E0DEE9D8];
      }
      sub_1AE4F6824();
      sub_1AE62C300(v182);
      v162 = v205;
      v206 = sub_1AE7EA4A0(v205, sel_timeSpentInTrafficBuckets);
      v207 = sub_1AE7EA46C();

      if ((unint64_t)v207 >> 62)
      {
        sub_1AE4F66CC();
        v208 = sub_1AE926AD8();
      }
      else
      {
        v208 = *(_QWORD *)((v207 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_1AE4F66CC();
      }
      *(_QWORD *)&v569 = v162;
      if (v208)
      {
        *(_QWORD *)&v628 = sub_1AE7EB3EC();
        if (v208 < 1)
          goto LABEL_303;
        v209 = MEMORY[0x1E0DEE9D8];
        v210 = v622;
        do
        {
          if ((v207 & 0xC000000000000001) != 0)
            sub_1AE7EADB0();
          v211 = sub_1AE7EA384(v207);
          v212 = objc_msgSend(v211, sel_bucket);
          sub_1AE7D79A8(v212, type metadata accessor for GDTrafficBucket, "Unknown traffic bucket: %s. Ignored.", v540);
          v213 = v640;
          v214 = sub_1AE7EA960((uint64_t)objc_msgSend(v211, sel_bucketValue), sel_seconds);
          v215 = sub_1AE595C08();
          sub_1AE53F468(v215, &qword_1EED996A8);
          v216 = v621;
          sub_1AE7EB344();
          v217 = (uint64_t)&v210[*(int *)(v623 + 48)];
          *v210 = v213;
          sub_1AE7EAD14(v217, v216, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v631 + 32));
          v218 = v620;
          v219 = v619;
          v220 = sub_1AE506A00();
          sub_1AE4FD940(v218, v220 ^ 1u);

          sub_1AE506078(v218, 1, v219);
          if (v196)
          {
            sub_1AE52FBE8(v218, &qword_1EEDA3298);
          }
          else
          {
            sub_1AE7EAD58();
            sub_1AE7EA6E0(v221, v222);
            sub_1AE7EA6E0(v219, v618);
            v223 = sub_1AE508CEC();
            if ((v223 & 1) == 0)
            {
              sub_1AE7EA6C8();
              sub_1AE51BB3C();
              v209 = v228;
            }
            v225 = *(_QWORD *)(v209 + 16);
            v224 = *(_QWORD *)(v209 + 24);
            if (v225 >= v224 >> 1)
            {
              sub_1AE7EB3A4(v224);
              sub_1AE51BB3C();
              v209 = v229;
            }
            *(_QWORD *)(v209 + 16) = v225 + 1;
            sub_1AE7EA978();
            sub_1AE7EA350(v618, v226 + v227 * v225, &qword_1EED9A6E0);
          }
          sub_1AE7EA680();
        }
        while (!v196);
      }
      else
      {
        v209 = MEMORY[0x1E0DEE9D8];
      }
      sub_1AE4F6824();
      sub_1AE62C314(v209);
      v2 = v230;
      v162 = (unint64_t)sub_1AE7EA4A0(v230, sel_distanceSpentAtSpeedBuckets);
      v231 = sub_1AE4F77B8(v162, &qword_1EED9A678);
      sub_1AE7EAEE8();
      sub_1AE501AD4();
      if ((unint64_t)v207 >> 62)
      {
        if (v207 < 0)
          v162 = v207;
        else
          v162 = v207 & 0xFFFFFFFFFFFFFF8;
        sub_1AE4F66CC();
        v232 = sub_1AE7EAB88();
      }
      else
      {
        v232 = *(_QWORD *)((v207 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_1AE4F66CC();
      }
      v622 = (_BYTE *)v2;
      v627 = v231;
      if (v232)
      {
        *(_QWORD *)&v628 = sub_1AE7EAA44();
        if (v232 < 1)
          goto LABEL_304;
        v2 = 0;
        v233 = MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v207 & 0xC000000000000001) != 0)
            sub_1AE7EADB0();
          v162 = (unint64_t)sub_1AE7EA384(v207);
          sub_1AE7D7580(&v640, objc_msgSend((id)v162, sel_bucket));
          v234 = v640;
          v235 = sub_1AE7EA960((uint64_t)objc_msgSend((id)v162, sel_bucketValue), sel_meters);
          v236 = sub_1AE7EA6B0();
          sub_1AE53F468(v236, &qword_1EED996A0);
          sub_1AE4F79F0();
          sub_1AE7EA840((uint64_t)&v645);
          sub_1AE7EB330((uint64_t)&v643);
          v237 = v614;
          v238 = sub_1AE506A00();
          sub_1AE7EB0F4(v238);
          sub_1AE506078(v234, 1, v237);
          if (v196)
          {
            sub_1AE52FBE8(v234, &qword_1EEDA3168);
          }
          else
          {
            sub_1AE7EAD58();
            sub_1AE7EA6E0(v239, v240);
            sub_1AE7EA6E0(v162, v612);
            v241 = sub_1AE508CEC();
            if ((v241 & 1) == 0)
            {
              sub_1AE7EA6C8();
              sub_1AE51BB28();
              v233 = v245;
            }
            v243 = *(_QWORD *)(v233 + 16);
            v242 = *(_QWORD *)(v233 + 24);
            v162 = v243 + 1;
            if (v243 >= v242 >> 1)
            {
              sub_1AE7EB07C(v242);
              sub_1AE51BB28();
              v233 = v246;
            }
            *(_QWORD *)(v233 + 16) = v162;
            sub_1AE7EAB4C();
            sub_1AE7EA350(v612, v244, &qword_1EED9A6F0);
          }
          sub_1AE7EA680();
        }
        while (!v196);
      }
      else
      {
        v233 = MEMORY[0x1E0DEE9D8];
      }
      sub_1AE4F6824();
      sub_1AE62C328(v233);
      v248 = v247;
      v249 = sub_1AE7EA4A0(v247, sel_timeSpentAtSpeedBuckets);
      sub_1AE7EB288();
      sub_1AE563950();
      if (v162 >> 62)
      {
        sub_1AE4FB75C();
        v250 = sub_1AE505584();
      }
      else
      {
        v250 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_1AE4FB75C();
      }
      v621 = v248;
      if (v250)
      {
        v251 = objc_opt_self();
        sub_1AE7EB1C4(v251);
        if (v252 != v253)
          goto LABEL_305;
        v254 = MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v162 & 0xC000000000000001) != 0)
            sub_1AE4F9510();
          v255 = sub_1AE7EA384(v162);
          v256 = sub_1AE7D7580(&v640, objc_msgSend(v255, sel_bucket));
          v257 = v640;
          v258 = sub_1AE501F44((uint64_t)v256, sel_bucketValue);
          v259 = sub_1AE7EA960((uint64_t)v258, sel_seconds);
          v260 = sub_1AE7EB4D4();
          sub_1AE53F468(v260, &qword_1EED996A8);
          sub_1AE7EA808();
          sub_1AE7EA81C((uint64_t)v641);
          sub_1AE7EA878((uint64_t)&v640);
          v261 = sub_1AE506A00();
          sub_1AE7EA630(v261);
          sub_1AE7EA42C();
          if (v196)
          {
            sub_1AE52FBE8(v257, &qword_1EEDA32C0);
          }
          else
          {
            sub_1AE7EB3E0();
            sub_1AE7EA628(v262, v263);
            sub_1AE7EA628(v257, v608);
            v264 = sub_1AE64A9C8();
            if ((v264 & 1) == 0)
            {
              sub_1AE505F58();
              sub_1AE51BB14();
              v254 = v268;
            }
            sub_1AE7EB014();
            if (v266)
            {
              sub_1AE7EA948(v265);
              sub_1AE51BB14();
              v254 = v269;
            }
            *(_QWORD *)(v254 + 16) = v255;
            sub_1AE7EA6FC();
            sub_1AE7EA350(v608, v267, &qword_1EED9A700);
          }
          sub_1AE7EB2EC();
        }
        while (!v196);
      }
      else
      {
        v254 = MEMORY[0x1E0DEE9D8];
      }
      sub_1AE501F64();
      sub_1AE62C33C(v254);
      v2 = v270;
      v162 = (unint64_t)sub_1AE7EA4A0(v270, sel_distanceSpentAtRelativeSpeeds);
      v271 = sub_1AE4F77B8(v162, &qword_1EED9A688);
      sub_1AE7EAEE8();
      sub_1AE501AD4();
      if ((unint64_t)v250 >> 62)
      {
        if (v250 < 0)
          v162 = v250;
        else
          v162 = v250 & 0xFFFFFFFFFFFFFF8;
        sub_1AE4F66CC();
        v272 = sub_1AE7EAB88();
      }
      else
      {
        v272 = *(_QWORD *)((v250 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_1AE4F66CC();
      }
      v620 = v2;
      v627 = v271;
      if (v272)
      {
        *(_QWORD *)&v628 = sub_1AE7EAA44();
        if (v272 < 1)
          goto LABEL_306;
        v2 = 0;
        v273 = MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v250 & 0xC000000000000001) != 0)
            sub_1AE7EADB0();
          v162 = (unint64_t)sub_1AE7EA384(v250);
          sub_1AE7D768C(&v640, objc_msgSend((id)v162, sel_bucket));
          v274 = v640;
          v275 = sub_1AE7EA960((uint64_t)objc_msgSend((id)v162, sel_bucketValue), sel_meters);
          v276 = sub_1AE7EA6B0();
          sub_1AE53F468(v276, &qword_1EED996A0);
          sub_1AE4F79F0();
          sub_1AE7EA840((uint64_t)v635);
          sub_1AE7EB330((uint64_t)&v633);
          v277 = v604;
          v278 = sub_1AE506A00();
          sub_1AE7EB0F4(v278);
          sub_1AE506078(v274, 1, v277);
          if (v196)
          {
            sub_1AE52FBE8(v274, &qword_1EEDA3178);
          }
          else
          {
            sub_1AE7EAD58();
            sub_1AE7EA6E0(v279, v280);
            sub_1AE7EA6E0(v162, v603);
            v281 = sub_1AE508CEC();
            if ((v281 & 1) == 0)
            {
              sub_1AE7EA6C8();
              sub_1AE51BB00();
              v273 = v285;
            }
            v283 = *(_QWORD *)(v273 + 16);
            v282 = *(_QWORD *)(v273 + 24);
            v162 = v283 + 1;
            if (v283 >= v282 >> 1)
            {
              sub_1AE7EB07C(v282);
              sub_1AE51BB00();
              v273 = v286;
            }
            *(_QWORD *)(v273 + 16) = v162;
            sub_1AE7EAB4C();
            sub_1AE7EA350(v603, v284, &qword_1EED9A710);
          }
          sub_1AE7EA680();
        }
        while (!v196);
      }
      else
      {
        v273 = MEMORY[0x1E0DEE9D8];
      }
      sub_1AE4F6824();
      sub_1AE62C350(v273);
      v288 = v287;
      v289 = sub_1AE7EA4A0(v287, sel_timeSpentAtRelativeSpeeds);
      sub_1AE7EB288();
      sub_1AE563950();
      if (v162 >> 62)
      {
        sub_1AE4FB75C();
        v290 = sub_1AE505584();
      }
      else
      {
        v290 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_1AE4FB75C();
      }
      v619 = v288;
      if (v290)
      {
        v291 = objc_opt_self();
        sub_1AE7EB1C4(v291);
        if (v252 != v253)
          goto LABEL_307;
        v292 = MEMORY[0x1E0DEE9D8];
        do
        {
          if ((v162 & 0xC000000000000001) != 0)
            sub_1AE4F9510();
          v293 = sub_1AE7EA384(v162);
          v294 = sub_1AE7D768C(&v640, objc_msgSend(v293, sel_bucket));
          v295 = v640;
          v296 = sub_1AE501F44((uint64_t)v294, sel_bucketValue);
          v297 = sub_1AE7EA960((uint64_t)v296, sel_seconds);
          v298 = sub_1AE7EB4D4();
          sub_1AE53F468(v298, &qword_1EED996A8);
          sub_1AE7EA808();
          sub_1AE7EA81C((uint64_t)&v629);
          sub_1AE7EA878((uint64_t)&v628);
          v299 = sub_1AE506A00();
          sub_1AE7EA630(v299);
          sub_1AE7EA42C();
          if (v196)
          {
            sub_1AE52FBE8(v295, &qword_1EEDA3170);
          }
          else
          {
            sub_1AE7EB3E0();
            sub_1AE7EA628(v300, v301);
            sub_1AE7EA628(v295, v598);
            v302 = sub_1AE64A9C8();
            if ((v302 & 1) == 0)
            {
              sub_1AE505F58();
              sub_1AE51BAEC();
              v292 = v305;
            }
            sub_1AE7EB014();
            if (v266)
            {
              sub_1AE7EA948(v303);
              sub_1AE51BAEC();
              v292 = v306;
            }
            *(_QWORD *)(v292 + 16) = v293;
            sub_1AE7EA6FC();
            sub_1AE7EA350(v598, v304, &qword_1EED9A720);
          }
          sub_1AE7EB2EC();
        }
        while (!v196);
      }
      else
      {
        v292 = MEMORY[0x1E0DEE9D8];
      }
      sub_1AE501F64();
      sub_1AE62C364(v292);
      v308 = v307;
      v2 = (unint64_t)v567;
      v309 = sub_1AE509508(v307, sel_roadDistancesInMeters);
      v310 = sub_1AE7EA970();

      v312 = sub_1AE509508(v311, sel_roadTimes);
      v313 = sub_1AE7EA970();
      sub_1AE7EB634(v313, (uint64_t)&v644);
      v315 = sub_1AE509508(v314, sel_roadSpeedBuckets);
      sub_1AE501548(&qword_1EEDA3378);
      sub_1AE7EA970();

      sub_1AE7EB404(v316, (void (*)(_QWORD *__return_ptr))sub_1AE64A2FC, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1AE7DF050, (void (*)(uint64_t))sub_1AE637408);
      v615 = v317;
      v318 = sub_1AE4F81B8();
      v319 = sub_1AE509508(v318, sel_roadRelativeSpeedBuckets);
      sub_1AE501548(&qword_1EEDA3380);
      v162 = sub_1AE7EA970();

      sub_1AE7D6250(v162, (void (*)(_QWORD *__return_ptr))sub_1AE64A2FC, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1AE7DF308, (void (*)(uint64_t))sub_1AE637414);
      v321 = v320;
      v322 = sub_1AE4F6648();
      v323 = sub_1AE509508(v322, sel_distancePerRoadType);
      sub_1AE4F77B8((uint64_t)v323, &qword_1EED9A690);
      sub_1AE7EAC0C();
      v325 = sub_1AE7EA9E8(v324, (uint64_t)&v647);

      if (v325 >> 62)
      {
        sub_1AE4F6730();
        v326 = sub_1AE505584();
      }
      else
      {
        v326 = *(NSObject **)((v325 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_1AE4F6730();
      }
      v327 = v547;
      v618 = v308;
      v617 = v310;
      v614 = v321;
      if (v326)
      {
        v328 = sub_1AE7EAA44();
        sub_1AE7EB1C4(v328);
        if (v252 != v253)
          goto LABEL_308;
        v330 = 0;
        v627 = v325 & 0xC000000000000001;
        v331 = MEMORY[0x1E0DEE9D8];
        *(_QWORD *)&v329 = 136315138;
        v625 = v329;
        v624 = (uint64_t *)(MEMORY[0x1E0DEE9B8] + 8);
        v626 = (uint64_t)v326;
        v162 = v325;
        v2 = v597;
        do
        {
          if (v627)
            sub_1AE7EAEF8();
          v332 = sub_1AE7EA384(v325 + 8 * v330);
          v333 = objc_msgSend(v332, sel_type);
          if ((unint64_t)v333 >= 5)
          {
            if (qword_1EED99830 != -1)
              swift_once();
            v338 = sub_1AE4F6854();
            sub_1AE4F77E8(v338, (uint64_t)qword_1EED9F800);
            v339 = sub_1AE4FCF04();
            if (sub_1AE6147E0(v339))
            {
              v340 = sub_1AE4F66A0();
              *(_QWORD *)&v640 = sub_1AE4F66A0();
              *(_DWORD *)v340 = v625;
              v636 = v333;
              type metadata accessor for GDRoadType(0);
              v341 = sub_1AE7EB650();
              sub_1AE520ED4(v341, v342, (uint64_t)&v640, v343, v344, v345, v346, v347, (uint64_t)v540, v541, v542, v543, v544, v545, v546, (uint64_t)v547, v548, v549, v550,
                v551);
              *(_QWORD *)(v340 + 4) = v348;
              sub_1AE4F6728();
              sub_1AE508348(&dword_1AE4F2000, v326, (os_log_type_t)v325, "Unknown road type: %s. Setting type to unknown.", (uint8_t *)v340);
              swift_arrayDestroy();
              sub_1AE4F9064();
            }

            LOBYTE(v337) = 4;
          }
          else
          {
            sub_1AE7EB114();
            v337 = v336 >> v335;
          }
          v349 = sub_1AE501F44(v334, sel_typeValue);
          v350 = sub_1AE7EA960((uint64_t)v349, sel_meters);
          v351 = sub_1AE614A44();
          sub_1AE53F468(v351, &qword_1EED996A0);
          sub_1AE7EAF94();
          v326 = (v596 + *(int *)(v2 + 48));
          v352 = sub_1AE7EAB90();
          sub_1AE7EB62C(v352, v353);
          v354 = (uint64_t)&v327[*(int *)(v2 + 48)];
          *v327 = v337;
          sub_1AE7EB62C(v354, (uint64_t)v326);
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v327, 0, 1, v2);

          sub_1AE506078((uint64_t)v327, 1, v2);
          if (v196)
          {
            sub_1AE52FBE8((uint64_t)v327, &qword_1EEDA3280);
          }
          else
          {
            sub_1AE7EA6BC();
            sub_1AE7EA6E0(v355, v356);
            sub_1AE7EA6E0((uint64_t)v326, v595);
            v357 = swift_isUniquelyReferenced_nonNull_native();
            if ((v357 & 1) == 0)
            {
              sub_1AE7EAF48();
              sub_1AE51BAD8();
              v331 = v362;
            }
            v359 = *(_QWORD *)(v331 + 16);
            v358 = *(_QWORD *)(v331 + 24);
            v326 = (v359 + 1);
            if (v359 >= v358 >> 1)
            {
              sub_1AE4FBAB0(v358);
              sub_1AE51BAD8();
              v331 = v363;
            }
            *(_QWORD *)(v331 + 16) = v326;
            sub_1AE7EAD28();
            sub_1AE7EA350(v595, v360 + v361 * v359, &qword_1EED9A730);
          }
          v325 = v162;
          ++v330;
        }
        while (v626 != v330);
      }
      else
      {
        v331 = MEMORY[0x1E0DEE9D8];
      }
      sub_1AE4F6824();
      sub_1AE62C378(v331);
      v365 = (uint64_t *)v364;
      v366 = sub_1AE7EA4A0(v364, sel_distancePerWeatherType);
      v367 = sub_1AE4F77B8((uint64_t)v366, &qword_1EED9A698);
      sub_1AE7EAEE8();
      sub_1AE563950();
      if (v162 >> 62)
      {
        sub_1AE4FB75C();
        v368 = sub_1AE505584();
      }
      else
      {
        v368 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_1AE4FB75C();
      }
      v624 = v365;
      v626 = v367;
      if (v368)
      {
        v369 = sub_1AE7EAA44();
        sub_1AE7EB1C4(v369);
        if (v252 != v253)
          goto LABEL_309;
        v2 = MEMORY[0x1E0DEE9D8];
        v370 = v593;
        do
        {
          if ((v162 & 0xC000000000000001) != 0)
            sub_1AE4F9510();
          v371 = sub_1AE7EA384(v162);
          v372 = sub_1AE7D7C0C(&v640, objc_msgSend(v371, sel_type));
          v373 = v640;
          v374 = sub_1AE501F44((uint64_t)v372, sel_typeValue);
          v375 = sub_1AE7EA960((uint64_t)v374, sel_meters);
          v376 = sub_1AE7EB4D4();
          sub_1AE53F468(v376, &qword_1EED996A0);
          sub_1AE7EA808();
          v377 = (uint64_t)&v370[*(int *)(v594 + 48)];
          *v370 = v373;
          sub_1AE505E5C(v377, (uint64_t)v365, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v632 + 32));
          sub_1AE7EA878((uint64_t)&v620);
          v378 = sub_1AE506A00();
          sub_1AE7EA630(v378);
          sub_1AE7EA42C();
          if (v196)
          {
            sub_1AE52FBE8(v373, &qword_1EEDA3260);
          }
          else
          {
            sub_1AE7EB3E0();
            v365 = &qword_1EED9A740;
            sub_1AE7EA628(v379, v380);
            sub_1AE7EA628(v373, v592);
            v381 = sub_1AE64A9C8();
            if ((v381 & 1) == 0)
            {
              sub_1AE505F58();
              sub_1AE51BAC4();
              v2 = v384;
            }
            sub_1AE7EB014();
            if (v266)
            {
              sub_1AE7EA948(v382);
              sub_1AE51BAC4();
              v2 = v385;
            }
            *(_QWORD *)(v2 + 16) = v371;
            sub_1AE7EA6FC();
            sub_1AE7EA350(v592, v383, &qword_1EED9A740);
          }
          sub_1AE7EB2EC();
        }
        while (!v196);
      }
      else
      {
        v2 = MEMORY[0x1E0DEE9D8];
      }
      sub_1AE501F64();
      sub_1AE62C38C(v2);
      v387 = v386;
      v388 = sub_1AE7EA4A0(v386, sel_distancePerTerrainType);
      v389 = sub_1AE4F77B8((uint64_t)v388, &qword_1EED9A670);
      sub_1AE7EAEE8();
      sub_1AE563950();
      if (v162 >> 62)
      {
        sub_1AE4FB75C();
        v390 = sub_1AE505584();
      }
      else
      {
        v390 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_1AE4FB75C();
      }
      v613 = v387;
      *(_QWORD *)&v625 = v389;
      if (v390)
      {
        v391 = sub_1AE7EAA44();
        sub_1AE7EB1C4(v391);
        if (v252 != v253)
          goto LABEL_310;
        v389 = 0;
        v2 = MEMORY[0x1E0DEE9D8];
        v392 = v589;
        do
        {
          if ((v162 & 0xC000000000000001) != 0)
            sub_1AE4F9510();
          v393 = sub_1AE7EA384(v162);
          v394 = objc_msgSend(v393, sel_type);
          sub_1AE7D79A8(v394, type metadata accessor for GDTerrainType, "Unknown: %s. Ignored.", v540);
          v395 = v640;
          v396 = sub_1AE7EA960((uint64_t)objc_msgSend(v393, sel_typeValue), sel_meters);
          sub_1AE53F468(0, &qword_1EED996A0);
          v397 = v585;
          sub_1AE924450();
          v398 = (uint64_t)&v392[*(int *)(v590 + 48)];
          *v392 = v395;
          sub_1AE505E5C(v398, v397, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v632 + 32));
          v399 = v588;
          sub_1AE7ADF7C();
          v400 = v587;
          v401 = sub_1AE506A00();
          sub_1AE7EAE6C(v399, v401 ^ 1u);

          sub_1AE506078(v399, 1, v400);
          if (v196)
          {
            sub_1AE52FBE8(v399, &qword_1EEDA3270);
          }
          else
          {
            v402 = v554;
            sub_1AE7EA628(v399, v554);
            sub_1AE7EA628(v402, v586);
            v403 = sub_1AE64A9C8();
            if ((v403 & 1) == 0)
            {
              sub_1AE505F58();
              sub_1AE51BAB0();
              v2 = v405;
            }
            v404 = *(_QWORD *)(v2 + 16);
            if (v404 >= *(_QWORD *)(v2 + 24) >> 1)
            {
              sub_1AE51BAB0();
              v2 = v406;
            }
            *(_QWORD *)(v2 + 16) = v404 + 1;
            sub_1AE7EA350(v586, v2+ ((*(unsigned __int8 *)(v555 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v555 + 80))+ *(_QWORD *)(v555 + 72) * v404, &qword_1EED9A750);
          }
          sub_1AE7EB2EC();
        }
        while (!v196);
      }
      else
      {
        v2 = MEMORY[0x1E0DEE9D8];
      }
      sub_1AE501F64();
      sub_1AE62C3A0(v2);
      v408 = v407;
      v162 = (unint64_t)sub_1AE7EA4A0(v407, sel_timePerRoadType);
      sub_1AE7EA46C();
      sub_1AE7EB63C();
      if ((unint64_t)v389 >> 62)
      {
        if (v389 < 0)
          v162 = v389;
        else
          v162 = v389 & 0xFFFFFFFFFFFFFF8;
        sub_1AE4F6730();
        v409 = sub_1AE7EAB88();
      }
      else
      {
        v409 = *(_QWORD *)((v389 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_1AE4F6730();
      }
      v612 = (uint64_t)v408;
      if (v409)
      {
        v634 = sub_1AE7EB3EC();
        if (v409 < 1)
          goto LABEL_311;
        v162 = 0;
        v632 = v389 & 0xC000000000000001;
        v411 = MEMORY[0x1E0DEE9D8];
        *(_QWORD *)&v410 = 136315138;
        v628 = v410;
        v627 = MEMORY[0x1E0DEE9B8] + 8;
        do
        {
          if (v632)
            sub_1AE7EAEF8();
          v412 = sub_1AE7EA384(v389 + 8 * v162);
          v413 = objc_msgSend(v412, sel_type);
          if ((unint64_t)v413 >= 5)
          {
            if (qword_1EED99830 != -1)
              swift_once();
            v416 = sub_1AE4F6854();
            sub_1AE4F77E8(v416, (uint64_t)qword_1EED9F800);
            v417 = sub_1AE4FCF04();
            if (os_log_type_enabled(v408, v417))
            {
              v418 = sub_1AE4F66A0();
              *(_QWORD *)&v640 = sub_1AE4F66A0();
              *(_DWORD *)v418 = v628;
              v636 = v413;
              type metadata accessor for GDRoadType(0);
              v419 = sub_1AE7EB650();
              sub_1AE520ED4(v419, v420, (uint64_t)&v640, v421, v422, v423, v424, v425, (uint64_t)v540, v541, v542, v543, v544, v545, v546, (uint64_t)v547, v548, v549, v550,
                v551);
              *(_QWORD *)(v418 + 4) = v426;
              sub_1AE4F76D8();
              sub_1AE508348(&dword_1AE4F2000, v408, v417, "Unknown road type: %s. Setting type to unknown.", (uint8_t *)v418);
              swift_arrayDestroy();
              sub_1AE4F9064();
            }

            v2 = 4;
          }
          else
          {
            sub_1AE7EB114();
            v2 = v415 >> v414;
          }
          v427 = sub_1AE7EB258((uint64_t)objc_msgSend(v412, sel_typeValue), sel_seconds);
          v428 = sub_1AE614A44();
          sub_1AE53F468(v428, &qword_1EED996A8);
          sub_1AE7EAF94();
          v429 = v583;
          v430 = &v581[*(int *)(v583 + 48)];
          v431 = *(void (**)(_BYTE *, char *, uint64_t))(v631 + 32);
          v432 = sub_1AE7EAB90();
          v433 = v633;
          sub_1AE7EB62C(v432, v434);
          v435 = v584;
          v436 = (char *)v584 + *(int *)(v429 + 48);
          LOBYTE(v584->isa) = v2;
          v437 = v430;
          v408 = v435;
          v431(v436, v437, v433);
          _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v408, 0, 1, v429);

          sub_1AE506078((uint64_t)v408, 1, v429);
          if (v196)
          {
            sub_1AE52FBE8((uint64_t)v408, &qword_1EEDA3250);
          }
          else
          {
            sub_1AE7EA6BC();
            sub_1AE7EB294(v438, v439);
            sub_1AE7EB294((uint64_t)v408, v582);
            v440 = swift_isUniquelyReferenced_nonNull_native();
            if ((v440 & 1) == 0)
            {
              sub_1AE505FE4();
              sub_1AE51BA9C();
              v411 = v444;
            }
            v2 = *(_QWORD *)(v411 + 16);
            v441 = *(_QWORD *)(v411 + 24);
            v408 = (v2 + 1);
            if (v2 >= v441 >> 1)
            {
              sub_1AE4FBAB0(v441);
              sub_1AE51BA9C();
              v411 = v445;
            }
            *(_QWORD *)(v411 + 16) = v408;
            sub_1AE7EB18C();
            sub_1AE7EA350(v582, v442 + v443 * v2, &qword_1EED9A760);
          }
          ++v162;
        }
        while (v409 != v162);
      }
      else
      {
        v411 = MEMORY[0x1E0DEE9D8];
      }
      sub_1AE4F6824();
      sub_1AE62C3B4(v411);
      v632 = v446;
      v447 = sub_1AE7EA4A0(v446, sel_timePerWeatherType);
      sub_1AE9261CC();
      sub_1AE563950();
      if (v162 >> 62)
      {
        sub_1AE4FB75C();
        v448 = sub_1AE505584();
        if (v448)
          goto LABEL_227;
      }
      else
      {
        v448 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_1AE4FB75C();
        if (v448)
        {
LABEL_227:
          v634 = objc_opt_self();
          if (v448 < 1)
            goto LABEL_312;
          v2 = 0;
          v449 = MEMORY[0x1E0DEE9D8];
          v450 = v579;
          do
          {
            if ((v162 & 0xC000000000000001) != 0)
              sub_1AE4F9510();
            v451 = objc_msgSend(sub_1AE7EA384(v162), sel_type);
            v452 = sub_1AE7D7C0C(&v640, v451);
            v453 = v640;
            v454 = sub_1AE501F44((uint64_t)v452, sel_typeValue);
            v455 = sub_1AE7EB258((uint64_t)v454, sel_seconds);
            v456 = sub_1AE7EB4D4();
            sub_1AE53F468(v456, &qword_1EED996A8);
            v457 = v576;
            sub_1AE924450();
            v458 = (uint64_t)&v450[*(int *)(v580 + 48)];
            *v450 = v453;
            sub_1AE7EAD14(v458, v457, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v631 + 32));
            sub_1AE7EA878((uint64_t)v606);
            v459 = sub_1AE506A00();
            sub_1AE7EA630(v459);
            sub_1AE7EA42C();
            if (v196)
            {
              sub_1AE52FBE8(v453, &qword_1EEDA3220);
            }
            else
            {
              sub_1AE7EB3E0();
              sub_1AE7EA6E0(v460, v461);
              sub_1AE7EA6E0(v453, v577);
              v462 = sub_1AE508CEC();
              if ((v462 & 1) == 0)
              {
                sub_1AE7EA6C8();
                sub_1AE51BA88();
                v449 = v467;
              }
              v464 = *(_QWORD *)(v449 + 16);
              v463 = *(_QWORD *)(v449 + 24);
              if (v464 >= v463 >> 1)
              {
                sub_1AE7EB3B8(v463);
                sub_1AE51BA88();
                v449 = v468;
              }
              *(_QWORD *)(v449 + 16) = v464 + 1;
              sub_1AE7EA978();
              sub_1AE7EA350(v577, v465 + v466 * v464, &qword_1EED9A770);
            }
            sub_1AE7EA680();
          }
          while (!v196);
LABEL_267:
          sub_1AE501F64();
          sub_1AE62C3C8(v449);
          v470 = v469;
          v471 = sub_1AE7EA4A0(v469, sel_timePerTerrainType);
          sub_1AE7EA46C();
          sub_1AE563950();
          if (v162 >> 62)
          {
            sub_1AE4FB75C();
            v472 = sub_1AE505584();
          }
          else
          {
            v472 = *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10);
            sub_1AE4FB75C();
          }
          *(_QWORD *)&v628 = v470;
          if (v472)
          {
            v634 = objc_opt_self();
            if (v472 < 1)
              goto LABEL_313;
            v473 = MEMORY[0x1E0DEE9D8];
            v2 = v570;
            do
            {
              if ((v162 & 0xC000000000000001) != 0)
                sub_1AE4F9510();
              v474 = sub_1AE7EA384(v162);
              v475 = objc_msgSend(v474, sel_type);
              sub_1AE7D79A8(v475, type metadata accessor for GDTerrainType, "Unknown: %s. Ignored.", v540);
              v476 = v640;
              v477 = sub_1AE7EB258((uint64_t)objc_msgSend(v474, sel_typeValue), sel_seconds);
              v478 = sub_1AE7EA6B0();
              sub_1AE53F468(v478, &qword_1EED996A8);
              sub_1AE4F79F0();
              sub_1AE7EA924();
              v480 = (uint64_t)&v574[v479];
              *v574 = v476;
              sub_1AE7EAD14(v480, v2, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v631 + 32));
              v481 = v573;
              v482 = v572;
              v483 = sub_1AE506A00();
              _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v481, v483 ^ 1u, 1, v482);

              sub_1AE506078(v481, 1, v482);
              if (v196)
              {
                sub_1AE52FBE8(v481, &qword_1EEDA3238);
              }
              else
              {
                sub_1AE7EA6BC();
                sub_1AE7EA6E0(v484, v485);
                sub_1AE7EA6E0(v481, v571);
                v486 = swift_isUniquelyReferenced_nonNull_native();
                if ((v486 & 1) == 0)
                {
                  sub_1AE7EAF48();
                  sub_1AE51BA74();
                  v473 = v491;
                }
                v488 = *(_QWORD *)(v473 + 16);
                v487 = *(_QWORD *)(v473 + 24);
                if (v488 >= v487 >> 1)
                {
                  sub_1AE7EB3A4(v487);
                  sub_1AE51BA74();
                  v473 = v492;
                }
                *(_QWORD *)(v473 + 16) = v488 + 1;
                sub_1AE7EAD28();
                sub_1AE7EA350(v571, v489 + v490 * v488, &qword_1EED9A780);
              }
              sub_1AE7EB21C();
            }
            while (!v196);
          }
          else
          {
            v473 = MEMORY[0x1E0DEE9D8];
          }
          sub_1AE501F64();
          sub_1AE62C3DC(v473);
          v494 = v493;
          sub_1AE7EB4EC(v493, (SEL *)&selRef_lifeEventIds, &qword_1EED94D28);
          v634 = v494;
          if (v495)
          {
            v162 = v495;
            if (v495 >> 62)
              goto LABEL_314;
            v496 = *(_QWORD *)((v495 & 0xFFFFFFFFFFFFFF8) + 0x10);
            sub_1AE4FB75C();
            if (v496)
              goto LABEL_289;
LABEL_315:
            v498 = MEMORY[0x1E0DEE9D8];
LABEL_316:
            v495 = sub_1AE501F64();
          }
          else
          {
            v498 = 0;
          }
          sub_1AE7EB4EC(v495, (SEL *)&selRef_ktsSegmentIds, &qword_1EED94D28);
          if (!v505)
          {
            v509 = 0;
LABEL_334:
            v516 = v567;
            v517 = sub_1AE501F44(v505, sel_distanceInMeters);
            sub_1AE4F77B8((uint64_t)v517, &qword_1EED996A0);
            sub_1AE7EABBC();

            v519 = sub_1AE501F44(v518, sel_elevationGainInMeters);
            sub_1AE7EABBC();

            v521 = sub_1AE501F44(v520, sel_durationInSeconds);
            sub_1AE4F77B8((uint64_t)v521, &qword_1EED996A8);
            sub_1AE7EABBC();

            v523 = sub_1AE501F44(v522, sel_expectedDurationInSecondsNoTraffic);
            sub_1AE7EABBC();

            v525 = sub_1AE501F44(v524, sel_averageSpeedInMetersPerSecond);
            sub_1AE4F77B8((uint64_t)v525, &qword_1EED99690);
            sub_1AE7EB430();

            v527 = sub_1AE501F44(v526, sel_score);
            v528 = sub_1AE501F44((uint64_t)v527, sel_usageKwh);
            sub_1AE4F77B8((uint64_t)v528, &qword_1EED99698);
            v529 = v542;
            sub_1AE7EABBC();

            v531 = sub_1AE501F44(v530, sel_optimalUsageKwh);
            v532 = v543;
            sub_1AE7EABBC();

            v534 = sub_1AE501F44(v533, sel_numBrakingEvents);
            v535 = (int)v534;
            v536 = sub_1AE501F44((uint64_t)v534, sel_numAccelEvents);
            v537 = (int)v536;
            v538 = (int)sub_1AE501F44((uint64_t)v536, sel_numHighSpeedEvents);
            sub_1AE7E9EB8(v516, (SEL *)&selRef_route, &qword_1EED9A668);
            v539 = sub_1AE595C08();
            type metadata accessor for KTSDataRepresentation(v539);
            sub_1AE4FCE84();
            KTSDataRepresentation.init(startTime:endTime:distanceInMeters:elevationGainInMeters:distanceBuckets:durationInSeconds:expectedDurationInSecondsNoTraffic:distanceSpentInTrafficBuckets:timeSpentInTrafficBuckets:distanceSpentAtSpeedBuckets:timeSpentAtSpeedBuckets:distanceSpentAtRelativeSpeeds:timeSpentAtRelativeSpeeds:distancePerRoadType:timePerRoadType:distancePerWeatherType:timePerWeatherType:distancePerTerrainType:timePerTerrainType:averageSpeedInMetersPerSecond:score:usageKwh:optimalUsageKwh:numBrakingEvents:numAccelEvents:numHighSpeedEvents:roadDistancesInMeters:roadSpeedBuckets:roadRelativeSpeedBuckets:roadTimes:lifeEventIds:ktsSegmentIds:route:)(v630, v544, (uint64_t)v540, v629, v545, v569, (uint64_t)v622, v621, v620, v619, v618, (uint64_t)v624, v632, v613, v628, v612, v634, v546, v529,
              v532,
              v535,
              v537,
              v538,
              v617,
              v615,
              v614,
              v616,
              v498,
              v509,
              (uint64_t)v531,
              (uint64_t)v540,
              v541,
              v542,
              v543,
              v544,
              v545,
              v546,
              (uint64_t)v547,
              v548,
              v549,
              v550,
              v551,
              v552,
              v553,
              v554,
              v555,
              v556,
              v557,
              v558,
              v559);
            return;
          }
          v506 = v505;
          if (v505 >> 62)
          {
            sub_1AE4FB75C();
            v507 = sub_1AE505584();
            if (v507)
              goto LABEL_320;
          }
          else
          {
            v507 = *(_QWORD *)((v505 & 0xFFFFFFFFFFFFFF8) + 0x10);
            sub_1AE4FB75C();
            if (v507)
            {
LABEL_320:
              if (v507 < 1)
                goto LABEL_336;
              v508 = 0;
              v509 = MEMORY[0x1E0DEE9D8];
              do
              {
                if ((v506 & 0xC000000000000001) != 0)
                  sub_1AE4F9510();
                v510 = sub_1AE7EA384(v506 + 8 * v508);
                v511 = sub_1AE7EB56C(v510);

                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1AE7EB0B4();
                  sub_1AE519D1C();
                  v509 = v514;
                }
                v513 = *(_QWORD *)(v509 + 16);
                v512 = *(_QWORD *)(v509 + 24);
                v2 = v513 + 1;
                if (v513 >= v512 >> 1)
                {
                  sub_1AE7EB3CC(v512);
                  sub_1AE519D1C();
                  v509 = v515;
                }
                ++v508;
                *(_QWORD *)(v509 + 16) = v2;
                *(_QWORD *)(v509 + 8 * v513 + 32) = v511;
              }
              while (v507 != v508);
              goto LABEL_333;
            }
          }
          v509 = MEMORY[0x1E0DEE9D8];
LABEL_333:
          v505 = sub_1AE501F64();
          goto LABEL_334;
        }
      }
      v449 = MEMORY[0x1E0DEE9D8];
      goto LABEL_267;
    }
    if (v168 < 1)
      break;
    v169 = 0;
    v162 = v167 & 0xC000000000000001;
    v2 = MEMORY[0x1E0DEE9D8];
    v3 = 0x7FF0000000000000;
    v569 = xmmword_1AE95B6E0;
    while (1)
    {
      v170 = v162 ? (id)MEMORY[0x1AF453B80](v169, v167) : sub_1AE7EA384(v167 + 8 * v169);
      v24 = v170;
      sub_1AE7D7798(&v639, objc_msgSend(v170, sel_bucket));
      v1 = v639;
      objc_msgSend(v24, sel_bucketValue);
      if ((~*(_QWORD *)&v171 & 0x7FF0000000000000) == 0)
        break;
      if (v171 <= -9.22337204e18)
        goto LABEL_243;
      if (v171 >= 9.22337204e18)
        goto LABEL_244;
      LOBYTE(v636) = v1;
      v637 = (uint64_t)v171;
      sub_1AE501548(&qword_1EEDA33D8);
      sub_1AE501548(&qword_1EED9AA40);
      if ((sub_1AE506A00() & 1) == 0)
        v640 = v569;

      v172 = v640;
      if (v640 != 4)
      {
        v173 = *((_QWORD *)&v640 + 1);
        if ((sub_1AE64A9C8() & 1) == 0)
        {
          sub_1AE505F58();
          sub_1AE51BB64();
          v2 = v176;
        }
        v174 = *(_QWORD *)(v2 + 16);
        if (v174 >= *(_QWORD *)(v2 + 24) >> 1)
        {
          sub_1AE51BB64();
          v2 = v177;
        }
        *(_QWORD *)(v2 + 16) = v174 + 1;
        v175 = v2 + 16 * v174;
        *(_BYTE *)(v175 + 32) = v172;
        *(_QWORD *)(v175 + 40) = v173;
        v3 = 0x7FF0000000000000;
      }
      if (v168 == ++v169)
        goto LABEL_23;
    }
    __break(1u);
LABEL_243:
    __break(1u);
LABEL_244:
    __break(1u);
LABEL_245:
    sub_1AE4F66CC();
    v168 = sub_1AE926AD8();
  }
  __break(1u);
LABEL_302:
  __break(1u);
LABEL_303:
  __break(1u);
LABEL_304:
  __break(1u);
LABEL_305:
  __break(1u);
LABEL_306:
  __break(1u);
LABEL_307:
  __break(1u);
LABEL_308:
  __break(1u);
LABEL_309:
  __break(1u);
LABEL_310:
  __break(1u);
LABEL_311:
  __break(1u);
LABEL_312:
  __break(1u);
LABEL_313:
  __break(1u);
LABEL_314:
  sub_1AE4FB75C();
  v496 = sub_1AE505584();
  if (!v496)
    goto LABEL_315;
LABEL_289:
  if (v496 >= 1)
  {
    v497 = 0;
    v498 = MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v162 & 0xC000000000000001) != 0)
        sub_1AE4F9510();
      v499 = sub_1AE7EA384(v162 + 8 * v497);
      v500 = sub_1AE7EB56C(v499);

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE505FE4();
        sub_1AE519D1C();
        v498 = v503;
      }
      v502 = *(_QWORD *)(v498 + 16);
      v501 = *(_QWORD *)(v498 + 24);
      v2 = v502 + 1;
      if (v502 >= v501 >> 1)
      {
        sub_1AE7EB3CC(v501);
        sub_1AE519D1C();
        v498 = v504;
      }
      ++v497;
      *(_QWORD *)(v498 + 16) = v2;
      *(_QWORD *)(v498 + 8 * v502 + 32) = v500;
    }
    while (v496 != v497);
    goto LABEL_316;
  }
  __break(1u);
LABEL_336:
  __break(1u);
}

void sub_1AE7DB084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  unint64_t v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  id v177;
  uint64_t v178;
  id v179;
  unint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  _QWORD *v183;
  double v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  _QWORD *v193;
  id v194;
  uint64_t v195;
  id v196;
  uint64_t v197;
  char v198;
  double v199;
  id v200;
  uint64_t v201;
  uint64_t v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void *v212;
  id v213;
  id v214;
  uint64_t v215;
  char v216;
  double v217;
  id v218;
  uint64_t v219;
  _BYTE *v220;
  int v221;
  char v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  id v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  void *v236;
  id v237;
  _QWORD *v238;
  double v239;
  id v240;
  uint64_t v241;
  uint64_t v242;
  int v243;
  char v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  id v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  id v257;
  _QWORD *v258;
  id v259;
  double v260;
  id v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  int v265;
  char v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  id v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  id v280;
  _QWORD *v281;
  id v282;
  double v283;
  id v284;
  uint64_t v285;
  uint64_t v286;
  int v287;
  char v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  id v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  id v302;
  _QWORD *v303;
  id v304;
  double v305;
  id v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  int v310;
  char v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  id v320;
  uint64_t v321;
  uint64_t v322;
  id v323;
  uint64_t v324;
  uint64_t v325;
  id v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  id v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  id v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  id v340;
  double v341;
  id v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  char v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  id v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  char v364;
  id v365;
  _QWORD *v366;
  id v367;
  double v368;
  id v369;
  uint64_t v370;
  uint64_t v371;
  int v372;
  char v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  id v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  id v387;
  id v388;
  uint64_t v389;
  uint64_t v390;
  id v391;
  double v392;
  id v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  _BYTE *v397;
  uint64_t v398;
  int v399;
  char v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  id v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  char v412;
  double v413;
  id v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  char v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  id v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  id v432;
  _QWORD *v433;
  char v434;
  id v435;
  double v436;
  id v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  int v443;
  char v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  id v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  id v458;
  id v459;
  uint64_t v460;
  uint64_t v461;
  id v462;
  double v463;
  id v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  _BYTE *v468;
  int v469;
  char v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  char v482;
  char v483;
  id v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  id v489;
  uint64_t v490;
  id v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  id v495;
  _QWORD *v496;
  double v497;
  char v498;
  uint64_t v499;
  uint64_t v500;
  id v501;
  uint64_t v502;
  uint64_t v503;
  id v504;
  uint64_t v505;
  double v506;
  char v507;
  uint64_t v508;
  uint64_t v509;
  id v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  id v514;
  _QWORD *v515;
  double v516;
  char v517;
  uint64_t v518;
  uint64_t v519;
  id v520;
  uint64_t v521;
  uint64_t v522;
  id v523;
  _QWORD *v524;
  uint64_t v525;
  uint64_t v526;
  id v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  id v531;
  uint64_t v532;
  double v533;
  char v534;
  uint64_t v535;
  uint64_t v536;
  id v537;
  uint64_t v538;
  uint64_t v539;
  id v540;
  uint64_t v541;
  double v542;
  char v543;
  uint64_t v544;
  uint64_t v545;
  id v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  id v550;
  _QWORD *v551;
  double v552;
  char v553;
  uint64_t v554;
  uint64_t v555;
  id v556;
  uint64_t v557;
  uint64_t v558;
  id v559;
  uint64_t v560;
  double v561;
  char v562;
  uint64_t v563;
  uint64_t v564;
  id v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  id v569;
  _QWORD *v570;
  double v571;
  char v572;
  uint64_t v573;
  uint64_t v574;
  id v575;
  uint64_t v576;
  uint64_t v577;
  id v578;
  _QWORD *v579;
  uint64_t v580;
  uint64_t v581;
  id v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  id v586;
  uint64_t v587;
  double v588;
  char v589;
  uint64_t v590;
  uint64_t v591;
  void *v592;
  id v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  id v597;
  uint64_t v598;
  double v599;
  char v600;
  uint64_t v601;
  uint64_t v602;
  id v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  char v608;
  id v609;
  _QWORD *v610;
  double v611;
  char v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  id v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  id v620;
  id v621;
  uint64_t v622;
  unsigned __int8 v623;
  uint64_t v624;
  char v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  id v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  char v635;
  id v636;
  _QWORD *v637;
  unsigned __int8 v638;
  double v639;
  char v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  id v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  id v648;
  _QWORD *v649;
  uint64_t v650;
  uint64_t v651;
  id v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  char v658;
  uint64_t v659;
  id v660;
  uint64_t v661;
  unsigned __int8 v662;
  double v663;
  char v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  id v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  char v673;
  uint64_t v674;
  id v675;
  id v676;
  uint64_t v677;
  unsigned __int8 v678;
  uint64_t v679;
  char v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  id v686;
  uint64_t v687;
  id v688;
  uint64_t v689;
  id v690;
  uint64_t v691;
  id v692;
  uint64_t v693;
  id v694;
  uint64_t v695;
  id v696;
  id v697;
  uint64_t v698;
  uint64_t v699;
  id v700;
  uint64_t v701;
  uint64_t v702;
  id v703;
  id v704;
  id v705;
  uint64_t v706;
  id v707;
  uint64_t v708;
  uint64_t v709;
  id v710;
  uint64_t v711;
  uint64_t v712;
  id v713;
  uint64_t v714;
  uint64_t v715;
  id v716;
  uint64_t v717;
  uint64_t v718;
  id v719;
  id v720;
  id v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  const char *v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  __int128 v781;
  uint64_t v782;
  uint64_t v783;
  _BYTE *v784;
  uint64_t v785;
  char *v786;
  _QWORD v787[2];
  _BYTE *v788;
  uint64_t v789;
  uint64_t v790;
  _BYTE *v791;
  uint64_t v792;
  uint64_t v793;
  _BYTE *v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  _BYTE *v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  _BYTE *v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  _BYTE *v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  _BYTE *v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  _QWORD *v828;
  uint64_t v829;
  uint64_t v830;
  char *v831;
  uint64_t v832;
  uint64_t v833;
  void *v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  __int128 v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t v841;
  unsigned __int8 v842;
  __int128 v843;
  uint64_t v844;

  sub_1AE7D2E30();
  a27 = v32;
  a28 = v34;
  v35 = v28;
  sub_1AE501548((uint64_t *)&unk_1EED9E340);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v36);
  sub_1AE4F686C();
  v766 = v37;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v38);
  sub_1AE5085B4((uint64_t)&v759 - v39);
  sub_1AE501548(&qword_1EED9A888);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v40);
  sub_1AE4F9024();
  sub_1AE5085B4(v41);
  v785 = sub_1AE501548(&qword_1EEDA3388);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v42);
  sub_1AE5085B4((uint64_t)&v759 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AE501548(&qword_1EEDA3238);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v44);
  sub_1AE4F9024();
  sub_1AE5085B4(v45);
  v783 = sub_1AE501548(&qword_1EED9A780);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v46);
  sub_1AE4F686C();
  v770 = v47;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v48);
  sub_1AE5085B4((uint64_t)&v759 - v49);
  v789 = sub_1AE501548(&qword_1EEDA3390);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v50);
  sub_1AE5085B4((uint64_t)&v759 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AE501548(&qword_1EEDA3220);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v52);
  sub_1AE4F9024();
  sub_1AE5085B4(v53);
  v787[0] = sub_1AE501548(&qword_1EED9A770);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v54);
  sub_1AE4F686C();
  v771 = v55;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v56);
  sub_1AE5085B4((uint64_t)&v759 - v57);
  sub_1AE501548(&qword_1EEDA3250);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v58);
  sub_1AE4F9024();
  sub_1AE5085B4(v59);
  v790 = sub_1AE501548(&qword_1EED9A760);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v60);
  sub_1AE4F686C();
  v830 = v61;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v62);
  sub_1AE5085B4((uint64_t)&v759 - v63);
  v795 = sub_1AE501548(&qword_1EEDA3398);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v64);
  sub_1AE4F9024();
  sub_1AE5085B4(v65);
  sub_1AE501548(&qword_1EEDA3270);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v66);
  sub_1AE4F9024();
  sub_1AE5085B4(v67);
  v793 = sub_1AE501548(&qword_1EED9A750);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v68);
  sub_1AE4F686C();
  v772 = v69;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v70);
  sub_1AE5094B0();
  sub_1AE5085B4(v71);
  v798 = sub_1AE501548(&qword_1EEDA33A0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v72);
  sub_1AE4F9024();
  sub_1AE5085B4(v73);
  sub_1AE501548(&qword_1EEDA3260);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v74);
  sub_1AE5085B4((uint64_t)&v759 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0));
  v797 = sub_1AE501548(&qword_1EED9A740);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v76);
  sub_1AE4F686C();
  v773 = v77;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v78);
  sub_1AE5094B0();
  sub_1AE5085B4(v79);
  sub_1AE501548(&qword_1EEDA3280);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v80);
  sub_1AE4F9024();
  sub_1AE5085B4(v81);
  v799 = sub_1AE501548(&qword_1EED9A730);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v82);
  v831 = (char *)&v759 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v84);
  sub_1AE5094B0();
  sub_1AE5085B4(v85);
  v805 = sub_1AE501548(&qword_1EEDA33A8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v86);
  sub_1AE5085B4((uint64_t)&v759 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1AE501548(&qword_1EEDA3170);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v88);
  sub_1AE4F9024();
  sub_1AE5085B4(v89);
  v802 = sub_1AE501548(&qword_1EED9A720);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v90);
  sub_1AE4F686C();
  v774 = v91;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v92);
  sub_1AE5085B4((uint64_t)&v759 - v93);
  v810 = sub_1AE501548(&qword_1EEDA33B0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v94);
  sub_1AE4F9024();
  sub_1AE5085B4(v95);
  sub_1AE501548(&qword_1EEDA3178);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v96);
  sub_1AE4F9024();
  sub_1AE5085B4(v97);
  v807 = sub_1AE501548(&qword_1EED9A710);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v98);
  sub_1AE4F686C();
  v775 = v99;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v100);
  sub_1AE5085B4((uint64_t)&v759 - v101);
  v815 = sub_1AE501548(&qword_1EEDA33B8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v102);
  sub_1AE4F9024();
  sub_1AE5085B4(v103);
  sub_1AE501548(&qword_1EEDA32C0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v104);
  sub_1AE4F9024();
  sub_1AE5085B4(v105);
  v812 = sub_1AE501548(&qword_1EED9A700);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v106);
  sub_1AE4F686C();
  v776 = v107;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v108);
  sub_1AE5094B0();
  sub_1AE5085B4(v109);
  v820 = sub_1AE501548(&qword_1EEDA33C0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v110);
  sub_1AE4F9024();
  sub_1AE5085B4(v111);
  sub_1AE501548(&qword_1EEDA3168);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v112);
  sub_1AE4F9024();
  sub_1AE5085B4(v113);
  v817 = sub_1AE501548(&qword_1EED9A6F0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v114);
  sub_1AE4F686C();
  v777 = v115;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v116);
  sub_1AE5094B0();
  sub_1AE5085B4(v117);
  v825 = sub_1AE501548(&qword_1EEDA33C8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v118);
  sub_1AE4F9024();
  sub_1AE5085B4(v119);
  v837 = sub_1AE501548(&qword_1EED9A850);
  v835 = *(_QWORD *)(v837 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v120);
  sub_1AE4F686C();
  v768 = v121;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v122);
  sub_1AE4F6A60();
  v782 = v123;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v124);
  v786 = (char *)&v759 - v125;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v126);
  sub_1AE4F6A60();
  v832 = v127;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v128);
  sub_1AE4F6A60();
  v801 = v129;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v130);
  sub_1AE4F6A60();
  v811 = v131;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v132);
  sub_1AE5094B0();
  sub_1AE5085B4(v133);
  sub_1AE501548(&qword_1EEDA3298);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v134);
  sub_1AE50688C();
  v821 = sub_1AE501548(&qword_1EED9A6E0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v135);
  v778 = (uint64_t)&v759 - ((v136 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v137);
  sub_1AE5094B0();
  sub_1AE5085B4(v138);
  v829 = sub_1AE501548(&qword_1EEDA33D0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v139);
  sub_1AE4F9024();
  sub_1AE5085B4(v140);
  *(_QWORD *)&v838 = sub_1AE501548(&qword_1EED9E350);
  v836 = *(_QWORD *)(v838 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v141);
  sub_1AE4F686C();
  v764 = v142;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v143);
  sub_1AE4F6A60();
  v763 = v144;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v145);
  sub_1AE4F6A60();
  v762 = v146;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v147);
  sub_1AE4F6A60();
  v761 = v148;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v149);
  sub_1AE4F6A60();
  v767 = v150;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v151);
  sub_1AE4F6A60();
  v792 = v152;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v153);
  sub_1AE4F6A60();
  v796 = v154;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v155);
  sub_1AE4F6A60();
  v833 = v156;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v157);
  sub_1AE4F6A60();
  v806 = v158;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v159);
  sub_1AE4F6A60();
  v816 = v160;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v161);
  sub_1AE5094B0();
  sub_1AE5085B4(v162);
  sub_1AE501548(&qword_1EEDA32A8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v163);
  sub_1AE4F666C();
  v166 = v165 - v164;
  v826 = sub_1AE501548(&qword_1EED9A6D0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v167);
  sub_1AE4F686C();
  v780 = v168;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v169);
  sub_1AE5094B0();
  v779 = v170;
  v171 = sub_1AE4F675C();
  v172 = *(_QWORD *)(v171 - 8);
  MEMORY[0x1E0C80A78](v171);
  sub_1AE4FD234();
  v174 = sub_1AE507664(v173, sel_startTime);
  sub_1AE7EAA6C();

  sub_1AE924864();
  v175 = *(_QWORD *)(v172 + 8);
  v176 = sub_1AE7EB504();
  v177 = sub_1AE507664(v176, sel_endTime);
  sub_1AE7EAA6C();

  sub_1AE924864();
  v178 = sub_1AE7EB504();
  v834 = (void *)v28;
  v179 = sub_1AE507664(v178, sel_distanceBuckets);
  sub_1AE4F77B8((uint64_t)v179, &qword_1EED9A660);
  v180 = sub_1AE9261CC();

  v844 = MEMORY[0x1E0DEE9D8];
  if (v180 >> 62)
    goto LABEL_415;
  v181 = *(_QWORD *)((v180 & 0xFFFFFFFFFFFFF8) + 0x10);
  sub_1AE4F6708();
  while (1)
  {
    v822 = v30;
    if (!v181)
      break;
    if (v181 < 1)
    {
      __break(1u);
LABEL_419:
      __break(1u);
LABEL_420:
      __break(1u);
LABEL_421:
      __break(1u);
LABEL_422:
      __break(1u);
LABEL_423:
      __break(1u);
LABEL_424:
      __break(1u);
LABEL_425:
      __break(1u);
LABEL_426:
      __break(1u);
LABEL_427:
      __break(1u);
LABEL_428:
      __break(1u);
LABEL_429:
      __break(1u);
LABEL_430:
      __break(1u);
LABEL_431:
      __break(1u);
LABEL_432:
      __break(1u);
LABEL_433:
      __break(1u);
LABEL_434:
      __break(1u);
LABEL_435:
      __break(1u);
LABEL_436:
      __break(1u);
LABEL_437:
      __break(1u);
LABEL_438:
      __break(1u);
LABEL_439:
      __break(1u);
LABEL_440:
      __break(1u);
LABEL_441:
      __break(1u);
LABEL_442:
      __break(1u);
LABEL_443:
      __break(1u);
LABEL_444:
      __break(1u);
LABEL_445:
      __break(1u);
LABEL_446:
      __break(1u);
LABEL_447:
      __break(1u);
LABEL_448:
      __break(1u);
LABEL_449:
      __break(1u);
LABEL_450:
      __break(1u);
      return;
    }
    v35 = 0;
    v30 = v180 & 0xC000000000000001;
    v33 = -9.22337204e18;
    v781 = xmmword_1AE95B6E0;
    while (1)
    {
      v182 = v30 ? (_QWORD *)MEMORY[0x1AF453B80](v35, v180) : sub_1AE7EA384(v180 + 8 * v35);
      v28 = (unint64_t)v182;
      v183 = sub_1AE7D7798(&v842, objc_msgSend(v182, sel_bucket));
      v175 = v842;
      sub_1AE4FB8E8((uint64_t)v183, sel_bucketValue);
      if ((~*(_QWORD *)&v184 & 0x7FF0000000000000) == 0)
        break;
      if (v184 <= -9.22337204e18)
        goto LABEL_413;
      if (v184 >= 9.22337204e18)
        goto LABEL_414;
      LOBYTE(v840) = v175;
      v841 = (uint64_t)v184;
      sub_1AE501548(&qword_1EEDA33D8);
      sub_1AE501548(&qword_1EED9AA40);
      if ((sub_1AE506A00() & 1) == 0)
        v843 = v781;

      v31 = v843;
      if (v843 != 4)
      {
        v185 = *((_QWORD *)&v843 + 1);
        v28 = (unint64_t)&v844;
        sub_1AE8DD504();
        v175 = *(_QWORD *)(v844 + 16);
        sub_1AE8DD870(v175);
        v186 = sub_1AE8DDAC0(v175, v31, v185);
        nullsub_1(v186);
      }
      if (v181 == ++v35)
      {
        sub_1AE4F6824();
        v187 = v844;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_413:
    __break(1u);
LABEL_414:
    __break(1u);
LABEL_415:
    sub_1AE4F6708();
    v181 = sub_1AE7EAB88();
  }
  sub_1AE4F6824();
  v187 = MEMORY[0x1E0DEE9D8];
LABEL_19:
  sub_1AE62C2EC(v187);
  v760 = v188;
  v189 = sub_1AE7EA44C(v188, sel_distanceSpentInTrafficBuckets);
  v190 = sub_1AE4F77B8((uint64_t)v189, &qword_1EED9A680);
  sub_1AE7EA9E8(v190, (uint64_t)v787);
  sub_1AE501AD4();
  *(_QWORD *)&v843 = MEMORY[0x1E0DEE9D8];
  if (v28 >> 62)
  {
    sub_1AE4F66CC();
    v191 = sub_1AE7EAB88();
  }
  else
  {
    v191 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1AE4F66CC();
  }
  if (v191)
  {
    *(_QWORD *)&v781 = sub_1AE7EAA44();
    if (v191 < 1)
      goto LABEL_419;
    v192 = sub_1AE8DBF68(v28);
    v31 = 0;
    v193 = (_QWORD *)v28;
    v35 = (uint64_t)v828;
    do
    {
      if ((v192 & 1) != 0)
        v194 = sub_1AE7EA384(v28 + 8 * v31);
      else
        v194 = (id)MEMORY[0x1AF453B80](v31, v28);
      v195 = (uint64_t)v194;
      v196 = objc_msgSend(v194, sel_bucket);
      v197 = sub_1AE7D79A8(v196, type metadata accessor for GDTrafficBucket, "Unknown traffic bucket: %s. Ignored.", v759);
      v198 = v840;
      sub_1AE4FB8E8(v197, sel_bucketValue);
      v33 = v199;
      v200 = sub_1AE7EA650(sel_meters, (uint64_t)&v806);
      sub_1AE53F468(0, &qword_1EED996A0);
      v201 = v827;
      sub_1AE7EB350();
      v202 = v35 + *(int *)(v829 + 48);
      *(_BYTE *)v35 = v198;
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v836 + 32))(v202, v201, v838);
      v175 = v826;
      v203 = sub_1AE506A00();
      sub_1AE7EA9D8(v166, v203 ^ 1u, 1, v175);
      sub_1AE506078(v166, 1, v175);
      if (v222)
      {
        sub_1AE52FBE8(v166, &qword_1EEDA32A8);
      }
      else
      {
        sub_1AE7EA6BC();
        sub_1AE7EA628(v204, v205);
        v206 = v780;
        sub_1AE7EA628(v195, v780);
        sub_1AE8DD4F8();
        v175 = *(_QWORD *)(v843 + 16);
        sub_1AE8DD864(v175);
        sub_1AE8DDAB4(v175, v206);
        nullsub_1(v207);
      }
      v28 = (unint64_t)v193;
      ++v31;
    }
    while (v191 != v31);
    sub_1AE4F6824();
    v208 = v843;
  }
  else
  {
    sub_1AE4F6824();
    v208 = MEMORY[0x1E0DEE9D8];
  }
  sub_1AE62C300(v208);
  *(_QWORD *)&v781 = v209;
  sub_1AE7EA44C(v209, sel_timeSpentInTrafficBuckets);
  sub_1AE7EA46C();
  sub_1AE7EB63C();
  *(_QWORD *)&v843 = MEMORY[0x1E0DEE9D8];
  if (v166 >> 62)
  {
    sub_1AE4F6730();
    v210 = sub_1AE7EAB88();
  }
  else
  {
    v210 = *(_QWORD *)((v166 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1AE4F6730();
  }
  if (v210)
  {
    v211 = sub_1AE7EB3EC();
    if (v210 < 1)
      goto LABEL_420;
    v212 = (void *)v211;
    sub_1AE8DBF68(v166);
    sub_1AE7EAD1C();
    do
    {
      if ((v35 & 1) == 0)
        sub_1AE7EAEF8();
      v213 = sub_1AE7EA384(v166 + 8 * v191);
      v214 = objc_msgSend(v213, sel_bucket);
      v215 = sub_1AE7D79A8(v214, type metadata accessor for GDTrafficBucket, "Unknown traffic bucket: %s. Ignored.", v759);
      v216 = v840;
      sub_1AE4FB8E8(v215, sel_bucketValue);
      v33 = v217;
      v218 = objc_msgSend(v212, sel_seconds);
      sub_1AE53F468(0, &qword_1EED996A8);
      v219 = v823;
      sub_1AE7EB350();
      v220 = &v824[*(int *)(v825 + 48)];
      *v824 = v216;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v835 + 32))(v220, v219, v837);
      v31 = v822;
      v175 = v821;
      v221 = sub_1AE506A00();
      sub_1AE7EA9D8(v31, v221 ^ 1u, 1, v175);
      sub_1AE506078(v31, 1, v175);
      if (v222)
      {
        sub_1AE52FBE8(v31, &qword_1EEDA3298);
      }
      else
      {
        sub_1AE7EA6BC();
        sub_1AE7EA628(v223, v224);
        v225 = v778;
        sub_1AE7EA628((uint64_t)v213, v778);
        sub_1AE8DD4EC();
        v175 = *(_QWORD *)(v843 + 16);
        sub_1AE8DD858(v175);
        sub_1AE8DDAA8(v175, v225);
        nullsub_1(v226);
      }
      ++v191;
    }
    while (v210 != v191);
    sub_1AE4F6824();
    v227 = v843;
  }
  else
  {
    sub_1AE4F6824();
    v227 = MEMORY[0x1E0DEE9D8];
  }
  sub_1AE62C314(v227);
  v823 = v228;
  v229 = sub_1AE7EA44C(v228, sel_distanceSpentAtSpeedBuckets);
  v230 = sub_1AE4F77B8((uint64_t)v229, &qword_1EED9A678);
  sub_1AE7EA9E8(v230, (uint64_t)&a19);
  sub_1AE7EAEE0();
  v231 = sub_1AE519A70(0);
  *(_QWORD *)&v843 = v231;
  v232 = sub_1AE4F66C4();
  v233 = sub_1AE5B77A0(v232);
  if (v233)
  {
    v234 = v233;
    v235 = objc_opt_self();
    if (v234 < 1)
      goto LABEL_421;
    v236 = (void *)v235;
    sub_1AE8DBF68(v175);
    sub_1AE7EB070();
    do
    {
      if ((v210 & 1) == 0)
        sub_1AE7EAD00();
      v237 = sub_1AE7EA384(v175 + 8 * v35);
      v238 = sub_1AE7D7580(&v840, objc_msgSend(v237, sel_bucket));
      v191 = v840;
      sub_1AE4FB8E8((uint64_t)v238, sel_bucketValue);
      v33 = v239;
      v240 = objc_msgSend(v236, sel_meters);
      v241 = sub_1AE7EA6B0();
      sub_1AE53F468(v241, &qword_1EED996A0);
      sub_1AE4F79F0();
      sub_1AE7EA924();
      sub_1AE7EA5C4(v242);
      sub_1AE7EA6E8((uint64_t)&a11);
      v243 = sub_1AE506A00();
      sub_1AE7EA4F0(v243);
      sub_1AE7EA42C();
      if (v244)
      {
        sub_1AE52FBE8(v191, &qword_1EEDA3168);
      }
      else
      {
        sub_1AE7EA6BC();
        sub_1AE7EA5B0(v245, v246);
        v191 = v777;
        sub_1AE7EA5B0((uint64_t)v237, v777);
        sub_1AE8DD4E0();
        v247 = sub_1AE7EA54C();
        sub_1AE8DD84C(v247);
        v248 = sub_1AE53FB14();
        sub_1AE8DDA9C(v248, v249);
        nullsub_1(v250);
      }
      ++v35;
    }
    while (v234 != v35);
    sub_1AE4F6824();
    v231 = v843;
  }
  else
  {
    sub_1AE4F6824();
  }
  sub_1AE62C328(v231);
  v822 = v251;
  v252 = sub_1AE7EA44C(v251, sel_timeSpentAtSpeedBuckets);
  sub_1AE7EA46C();
  sub_1AE563950();
  v253 = sub_1AE519A64(0);
  *(_QWORD *)&v843 = v253;
  v254 = sub_1AE4FB75C();
  v255 = sub_1AE5B77A0(v254);
  if (v255)
  {
    v256 = v255;
    objc_opt_self();
    if (v256 < 1)
      goto LABEL_422;
    sub_1AE7EAD64();
    sub_1AE7EB070();
    do
    {
      if ((v210 & 1) == 0)
        sub_1AE4F9510();
      v257 = sub_1AE7EA384(v231 + 8 * v35);
      v258 = sub_1AE7D7580(&v840, objc_msgSend(v257, sel_bucket));
      v191 = v840;
      v259 = sub_1AE4FB8E8((uint64_t)v258, sel_bucketValue);
      v33 = v260;
      v261 = sub_1AE507584((uint64_t)v259, sel_seconds);
      v262 = sub_1AE7EA6B0();
      sub_1AE53F468(v262, &qword_1EED996A8);
      sub_1AE4F79F0();
      sub_1AE7EA924();
      v264 = (uint64_t)&v814[v263];
      *v814 = v191;
      sub_1AE7EA8A0(v264);
      sub_1AE7EA6E8((uint64_t)&v843 + 8);
      v265 = sub_1AE506A00();
      sub_1AE7EA4F0(v265);
      sub_1AE7EA42C();
      if (v266)
      {
        sub_1AE52FBE8(v191, &qword_1EEDA32C0);
      }
      else
      {
        sub_1AE7EA6BC();
        sub_1AE7EA5B0(v267, v268);
        v191 = v776;
        sub_1AE7EA5B0((uint64_t)v257, v776);
        sub_1AE8DD4D4();
        v269 = sub_1AE7EA54C();
        sub_1AE8DD840(v269);
        v270 = sub_1AE53FB14();
        sub_1AE8DDA90(v270, v271);
        nullsub_1(v272);
      }
      sub_1AE7EB21C();
    }
    while (!v222);
    sub_1AE501F64();
    v253 = v843;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C33C(v253);
  v821 = v273;
  v274 = sub_1AE7EA44C(v273, sel_distanceSpentAtRelativeSpeeds);
  sub_1AE4F77B8((uint64_t)v274, &qword_1EED9A688);
  sub_1AE7EAC0C();
  sub_1AE7EA9E8(v275, (uint64_t)&a18);
  sub_1AE563950();
  v276 = sub_1AE519A58(0);
  *(_QWORD *)&v843 = v276;
  v277 = sub_1AE4FB75C();
  v278 = sub_1AE5B77A0(v277);
  if (v278)
  {
    v279 = v278;
    objc_opt_self();
    if (v279 < 1)
      goto LABEL_423;
    sub_1AE7EAD64();
    sub_1AE7EB070();
    do
    {
      if ((v210 & 1) == 0)
        sub_1AE4F9510();
      v280 = sub_1AE7EA384(v231 + 8 * v35);
      v281 = sub_1AE7D768C(&v840, objc_msgSend(v280, sel_bucket));
      v191 = v840;
      v282 = sub_1AE4FB8E8((uint64_t)v281, sel_bucketValue);
      v33 = v283;
      v284 = sub_1AE507584((uint64_t)v282, sel_meters);
      v285 = sub_1AE7EA6B0();
      sub_1AE53F468(v285, &qword_1EED996A0);
      sub_1AE4F79F0();
      sub_1AE7EA924();
      sub_1AE7EA5C4(v286);
      sub_1AE7EA6E8((uint64_t)&v839);
      v287 = sub_1AE506A00();
      sub_1AE7EA4F0(v287);
      sub_1AE7EA42C();
      if (v288)
      {
        sub_1AE52FBE8(v191, &qword_1EEDA3178);
      }
      else
      {
        sub_1AE7EA6BC();
        sub_1AE7EA5B0(v289, v290);
        v191 = v775;
        sub_1AE7EA5B0((uint64_t)v280, v775);
        sub_1AE8DD4C8();
        v291 = sub_1AE7EA54C();
        sub_1AE8DD834(v291);
        v292 = sub_1AE53FB14();
        sub_1AE8DDA84(v292, v293);
        nullsub_1(v294);
      }
      sub_1AE7EB21C();
    }
    while (!v222);
    sub_1AE501F64();
    v276 = v843;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C350(v276);
  v296 = v295;
  v297 = sub_1AE7EA44C(v295, sel_timeSpentAtRelativeSpeeds);
  sub_1AE7EA46C();
  sub_1AE563950();
  v298 = sub_1AE519A4C(0);
  *(_QWORD *)&v843 = v298;
  v299 = sub_1AE4FB75C();
  v300 = sub_1AE5B77A0(v299);
  v820 = v296;
  if (v300)
  {
    v301 = v300;
    objc_opt_self();
    if (v301 < 1)
      goto LABEL_424;
    sub_1AE7EAD64();
    sub_1AE7EB070();
    do
    {
      if ((v296 & 1) == 0)
        sub_1AE4F9510();
      v302 = sub_1AE7EA384(v231 + 8 * v35);
      v303 = sub_1AE7D768C(&v840, objc_msgSend(v302, sel_bucket));
      v191 = v840;
      v304 = sub_1AE4FB8E8((uint64_t)v303, sel_bucketValue);
      v33 = v305;
      v306 = sub_1AE507584((uint64_t)v304, sel_seconds);
      v307 = sub_1AE7EA6B0();
      sub_1AE53F468(v307, &qword_1EED996A8);
      sub_1AE4F79F0();
      sub_1AE7EA924();
      v309 = (uint64_t)&v804[v308];
      *v804 = v191;
      sub_1AE7EA8A0(v309);
      sub_1AE7EA6E8((uint64_t)&v835);
      v310 = sub_1AE506A00();
      sub_1AE7EA4F0(v310);
      sub_1AE7EA42C();
      if (v311)
      {
        sub_1AE52FBE8(v191, &qword_1EEDA3170);
      }
      else
      {
        sub_1AE7EA6BC();
        sub_1AE7EA5B0(v312, v313);
        v191 = v774;
        sub_1AE7EA5B0((uint64_t)v302, v774);
        sub_1AE8DD4BC();
        v314 = sub_1AE7EA54C();
        sub_1AE8DD828(v314);
        v315 = sub_1AE53FB14();
        sub_1AE8DDA78(v315, v316);
        nullsub_1(v317);
      }
      sub_1AE7EB21C();
    }
    while (!v222);
    sub_1AE501F64();
    v298 = v843;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C364(v298);
  v819 = v318;
  v319 = (uint64_t)v834;
  v320 = sub_1AE509508(v318, sel_roadDistancesInMeters);
  v321 = sub_1AE7EA970();
  sub_1AE7EB634(v321, (uint64_t)&a11);
  v323 = sub_1AE509508(v322, sel_roadTimes);
  v324 = sub_1AE7EA970();
  sub_1AE7EB634(v324, (uint64_t)&a10);
  v326 = sub_1AE509508(v325, sel_roadSpeedBuckets);
  sub_1AE501548(&qword_1EEDA3378);
  sub_1AE7EA970();

  sub_1AE7EB404(v327, (void (*)(_QWORD *__return_ptr))sub_1AE64A2FC, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1AE7DF050, (void (*)(uint64_t))sub_1AE637408);
  v816 = v328;
  v329 = sub_1AE4F81B8();
  v330 = sub_1AE509508(v329, sel_roadRelativeSpeedBuckets);
  sub_1AE501548(&qword_1EEDA3380);
  v331 = sub_1AE7EA970();

  sub_1AE7D6250(v331, (void (*)(_QWORD *__return_ptr))sub_1AE64A2FC, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1AE7DF308, (void (*)(uint64_t))sub_1AE637414);
  v815 = v332;
  v780 = (uint64_t)v326;
  v333 = sub_1AE4F6648();
  v334 = sub_1AE509508(v333, sel_distancePerRoadType);
  sub_1AE4F77B8((uint64_t)v334, &qword_1EED9A690);
  sub_1AE7EAC0C();
  sub_1AE7EA9E8(v335, (uint64_t)&a17);
  sub_1AE563950();
  v336 = sub_1AE519A40(0);
  *(_QWORD *)&v843 = v336;
  v337 = sub_1AE4FB75C();
  v338 = sub_1AE5B77A0(v337);
  if (v338)
  {
    v319 = v338;
    v829 = objc_opt_self();
    if (v319 < 1)
      goto LABEL_425;
    LODWORD(v828) = sub_1AE7EAD64();
    v35 = 0;
    v339 = (uint64_t)v831;
    v827 = v331;
    do
    {
      if ((v828 & 1) == 0)
        sub_1AE4F9510();
      v340 = sub_1AE7EA384(v331 + 8 * v35);
      sub_1AE7EAE64((uint64_t)objc_msgSend(v340, sel_type));
      v191 = v840;
      objc_msgSend(v340, sel_typeValue);
      v33 = v341;
      v342 = sub_1AE7EA650(sel_meters, (uint64_t)&a22);
      v343 = sub_1AE7EA6B0();
      sub_1AE53F468(v343, &qword_1EED996A0);
      sub_1AE4F79F0();
      v344 = v799;
      v31 = v339 + *(int *)(v799 + 48);
      v345 = sub_1AE7ADF7C();
      sub_1AE7EB1D0(v345, v346);
      v347 = (uint64_t)v800;
      v348 = (uint64_t)&v800[*(int *)(v344 + 48)];
      *v800 = v191;
      sub_1AE7EB1D0(v348, v31);
      sub_1AE4FD940(v347, 0);

      sub_1AE506078(v347, 1, v344);
      if (v349)
      {
        sub_1AE52FBE8(v347, &qword_1EEDA3280);
      }
      else
      {
        sub_1AE7EAD58();
        sub_1AE5066F4(v350, v351);
        sub_1AE5066F4(v344, v339);
        sub_1AE8DD4B0();
        v352 = sub_1AE7EA54C();
        sub_1AE8DD81C(v352);
        v353 = sub_1AE7EB1E0();
        sub_1AE8DDA6C(v353, v354);
        nullsub_1(v355);
      }
      v331 = v827;
      ++v35;
      v339 = (uint64_t)v831;
    }
    while (v319 != v35);
    sub_1AE501F64();
    v336 = v843;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C378(v336);
  v357 = v356;
  v358 = sub_1AE7EA44C(v356, sel_distancePerWeatherType);
  sub_1AE4F77B8((uint64_t)v358, &qword_1EED9A698);
  sub_1AE7EAC0C();
  sub_1AE7EA9E8(v359, (uint64_t)&a22);
  sub_1AE563950();
  v360 = sub_1AE519A28(0);
  *(_QWORD *)&v843 = v360;
  v361 = sub_1AE4FB75C();
  v362 = sub_1AE5B77A0(v361);
  v827 = v357;
  if (v362)
  {
    v363 = v362;
    v364 = objc_opt_self();
    if (v363 < 1)
      goto LABEL_426;
    LOBYTE(v357) = v364;
    sub_1AE7EAD64();
    sub_1AE7EB070();
    do
    {
      if ((v319 & 1) == 0)
        sub_1AE4F9510();
      v365 = sub_1AE7EA384(v331 + 8 * v35);
      v366 = sub_1AE7D7C0C(&v840, objc_msgSend(v365, sel_type));
      v191 = v840;
      v367 = sub_1AE4FB8E8((uint64_t)v366, sel_typeValue);
      v33 = v368;
      v369 = sub_1AE507584((uint64_t)v367, sel_meters);
      v370 = sub_1AE7EA6B0();
      sub_1AE53F468(v370, &qword_1EED996A0);
      sub_1AE4F79F0();
      sub_1AE7EA924();
      sub_1AE7EA5C4(v371);
      sub_1AE7EA6E8((uint64_t)&v828);
      v372 = sub_1AE506A00();
      sub_1AE7EA4F0(v372);
      sub_1AE7EA42C();
      if (v373)
      {
        sub_1AE52FBE8(v191, &qword_1EEDA3260);
      }
      else
      {
        sub_1AE7EA6BC();
        sub_1AE7EA5B0(v374, v375);
        v191 = v773;
        sub_1AE7EA5B0((uint64_t)v365, v773);
        sub_1AE8DD4A4();
        v376 = sub_1AE7EA54C();
        sub_1AE8DD810(v376);
        v377 = sub_1AE53FB14();
        sub_1AE8DDA60(v377, v378);
        nullsub_1(v379);
      }
      sub_1AE7EB21C();
    }
    while (!v222);
    sub_1AE501F64();
    v360 = v843;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C38C(v360);
  v814 = (_BYTE *)v380;
  v381 = sub_1AE7EA44C(v380, sel_distancePerTerrainType);
  sub_1AE4F77B8((uint64_t)v381, &qword_1EED9A670);
  sub_1AE7EAC0C();
  sub_1AE7EA9E8(v382, (uint64_t)&a21);
  sub_1AE563950();
  v383 = sub_1AE519A10(0);
  *(_QWORD *)&v843 = v383;
  v384 = sub_1AE4FB75C();
  v385 = sub_1AE5B77A0(v384);
  if (v385)
  {
    v357 = v385;
    v386 = objc_opt_self();
    if (v357 < 1)
      goto LABEL_427;
    v319 = v386;
    sub_1AE7EAD64();
    sub_1AE7EAD1C();
    do
    {
      if ((v35 & 1) == 0)
        sub_1AE4F9510();
      v387 = sub_1AE7EA384(v331 + 8 * v191);
      v388 = objc_msgSend(v387, sel_type);
      v389 = sub_1AE7D79A8(v388, type metadata accessor for GDTerrainType, "Unknown: %s. Ignored.", v759);
      v390 = v840;
      v391 = sub_1AE4FB8E8(v389, sel_typeValue);
      v33 = v392;
      v393 = sub_1AE509508((uint64_t)v391, sel_meters);
      v394 = sub_1AE7EA6B0();
      sub_1AE53F468(v394, &qword_1EED996A0);
      v395 = v792;
      sub_1AE4F79F0();
      sub_1AE7EA924();
      v397 = &v794[v396];
      *v794 = v390;
      (*(void (**)(_BYTE *, uint64_t, _QWORD))(v836 + 32))(v397, v395, v838);
      sub_1AE7EB35C((uint64_t)&v823);
      v398 = v793;
      v399 = sub_1AE506A00();
      sub_1AE7EA9D8(v390, v399 ^ 1u, 1, v398);
      sub_1AE506078(v390, 1, v398);
      if (v400)
      {
        sub_1AE52FBE8(v390, &qword_1EEDA3270);
      }
      else
      {
        sub_1AE7EA6BC();
        sub_1AE7EA5B0(v401, v402);
        sub_1AE7EA5B0((uint64_t)v387, v772);
        sub_1AE8DD498();
        v403 = sub_1AE7EA54C();
        sub_1AE8DD804(v403);
        v404 = sub_1AE7EB1E0();
        sub_1AE8DDA54(v404, v405);
        nullsub_1(v406);
      }
      ++v191;
    }
    while (v357 != v191);
    sub_1AE501F64();
    v383 = v843;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C3A0(v383);
  v813 = v407;
  v408 = sub_1AE7EA44C(v407, sel_timePerRoadType);
  sub_1AE7EA46C();
  sub_1AE563950();
  v409 = sub_1AE519A34(0);
  *(_QWORD *)&v843 = v409;
  v410 = sub_1AE4FB75C();
  v411 = sub_1AE5B77A0(v410);
  if (v411)
  {
    v35 = v411;
    *(_QWORD *)&v838 = objc_opt_self();
    if (v35 < 1)
      goto LABEL_428;
    LODWORD(v831) = sub_1AE7EAD64();
    v191 = 0;
    v357 = v830;
    v836 = v331;
    do
    {
      if ((v831 & 1) == 0)
        sub_1AE4F9510();
      v319 = (uint64_t)sub_1AE7EA384(v331 + 8 * v191);
      sub_1AE7EAE64((uint64_t)objc_msgSend((id)v319, sel_type));
      v412 = v840;
      objc_msgSend((id)v319, sel_typeValue);
      v33 = v413;
      v414 = objc_msgSend((id)v838, sel_seconds);
      v415 = sub_1AE7EA6B0();
      sub_1AE53F468(v415, &qword_1EED996A8);
      sub_1AE4F79F0();
      v416 = v790;
      v31 = v357 + *(int *)(v790 + 48);
      v417 = sub_1AE7ADF7C();
      sub_1AE7EB1D0(v417, v418);
      v419 = (uint64_t)v791;
      v420 = (uint64_t)&v791[*(int *)(v416 + 48)];
      *v791 = v412;
      sub_1AE7EB1D0(v420, v31);
      sub_1AE4FD940(v419, 0);

      sub_1AE506078(v419, 1, v416);
      if (v421)
      {
        sub_1AE52FBE8(v419, &qword_1EEDA3250);
      }
      else
      {
        sub_1AE7EAD58();
        sub_1AE5066F4(v422, v423);
        sub_1AE5066F4(v416, v357);
        sub_1AE8DD48C();
        v424 = sub_1AE7EA54C();
        sub_1AE8DD7F8(v424);
        sub_1AE8DDA48(v31, v357);
        nullsub_1(v425);
      }
      ++v191;
      v357 = v830;
      v331 = v836;
    }
    while (v35 != v191);
    sub_1AE501F64();
    v409 = v843;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C3B4(v409);
  v836 = v426;
  v427 = sub_1AE7EA44C(v426, sel_timePerWeatherType);
  sub_1AE7EA46C();
  sub_1AE563950();
  v428 = sub_1AE519A1C(0);
  *(_QWORD *)&v843 = v428;
  v429 = sub_1AE4FB75C();
  v430 = sub_1AE5B77A0(v429);
  if (v430)
  {
    v357 = v430;
    v431 = objc_opt_self();
    if (v357 < 1)
      goto LABEL_429;
    v319 = v431;
    sub_1AE7EAD64();
    sub_1AE7EAD1C();
    do
    {
      if ((v35 & 1) == 0)
        sub_1AE4F9510();
      v432 = sub_1AE7EA384(v331 + 8 * v191);
      v433 = sub_1AE7D7C0C(&v840, objc_msgSend(v432, sel_type));
      v434 = v840;
      v435 = sub_1AE4FB8E8((uint64_t)v433, sel_typeValue);
      v33 = v436;
      v437 = sub_1AE509508((uint64_t)v435, sel_seconds);
      v438 = sub_1AE7EA6B0();
      sub_1AE53F468(v438, &qword_1EED996A8);
      sub_1AE4F79F0();
      sub_1AE7EA924();
      v440 = (uint64_t)&v788[v439];
      *v788 = v434;
      sub_1AE7EA8A0(v440);
      v441 = v787[1];
      v442 = v787[0];
      v443 = sub_1AE506A00();
      sub_1AE7EA9D8(v441, v443 ^ 1u, 1, v442);
      sub_1AE506078(v441, 1, v442);
      if (v444)
      {
        sub_1AE52FBE8(v441, &qword_1EEDA3220);
      }
      else
      {
        sub_1AE7EA6BC();
        sub_1AE7EA5B0(v445, v446);
        sub_1AE7EA5B0((uint64_t)v432, v771);
        sub_1AE8DD480();
        v447 = sub_1AE7EA54C();
        sub_1AE8DD7EC(v447);
        v448 = sub_1AE7EB1E0();
        sub_1AE8DD9F0(v448, v449);
        nullsub_1(v450);
      }
      ++v191;
    }
    while (v357 != v191);
    sub_1AE501F64();
    v428 = v843;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C3C8(v428);
  v452 = v451;
  v453 = sub_1AE7EA44C(v451, sel_timePerTerrainType);
  sub_1AE7EA46C();
  sub_1AE563950();
  v454 = sub_1AE519A04(0);
  *(_QWORD *)&v843 = v454;
  v455 = sub_1AE4FB75C();
  v456 = sub_1AE5B77A0(v455);
  v831 = (char *)v452;
  if (v456)
  {
    v357 = v456;
    v457 = objc_opt_self();
    if (v357 < 1)
      goto LABEL_430;
    v319 = v457;
    sub_1AE7EAD64();
    sub_1AE7EAD1C();
    do
    {
      if ((v35 & 1) == 0)
        sub_1AE4F9510();
      v458 = sub_1AE7EA384(v331 + 8 * v191);
      v459 = objc_msgSend(v458, sel_type);
      v460 = sub_1AE7D79A8(v459, type metadata accessor for GDTerrainType, "Unknown: %s. Ignored.", v759);
      v461 = v840;
      v462 = sub_1AE4FB8E8(v460, sel_typeValue);
      v33 = v463;
      v464 = sub_1AE509508((uint64_t)v462, sel_seconds);
      v465 = sub_1AE7EA6B0();
      sub_1AE53F468(v465, &qword_1EED996A8);
      v466 = v782;
      sub_1AE4F79F0();
      sub_1AE7EA924();
      v468 = &v784[v467];
      *v784 = v461;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v835 + 32))(v468, v466, v837);
      sub_1AE7EB35C((uint64_t)&v811);
      v452 = v783;
      v469 = sub_1AE506A00();
      sub_1AE7EA9D8(v461, v469 ^ 1u, 1, v452);
      sub_1AE506078(v461, 1, v452);
      if (v470)
      {
        sub_1AE52FBE8(v461, &qword_1EEDA3238);
      }
      else
      {
        sub_1AE7EA6BC();
        sub_1AE7EA5B0(v471, v472);
        v452 = v770;
        sub_1AE7EA5B0((uint64_t)v458, v770);
        sub_1AE8DD474();
        v473 = sub_1AE7EA54C();
        sub_1AE8DD7E0(v473);
        v474 = sub_1AE7EB1E0();
        sub_1AE8DD9E4(v474, v475);
        nullsub_1(v476);
      }
      ++v191;
    }
    while (v357 != v191);
    sub_1AE501F64();
    v454 = v843;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C3DC(v454);
  v837 = v477;
  sub_1AE7E9EB8(v834, (SEL *)&selRef_lifeEventIds, &qword_1EED94D28);
  if (v478)
  {
    sub_1AE7EB4E0();
    v480 = v479;
    *(_QWORD *)&v843 = v479;
    v481 = sub_1AE4FB75C();
    if (sub_1AE5B77A0(v481))
    {
      sub_1AE7EA5F8();
      if (v482 != v483)
        goto LABEL_449;
      sub_1AE8DBF68(v331);
      sub_1AE7EA61C();
      do
      {
        if ((v357 & 1) == 0)
          sub_1AE4F9510();
        v484 = sub_1AE7EA384(v331 + 8 * v319);
        sub_1AE7EAF60(v484);
        sub_1AE7EB384();
        sub_1AE8DD258();
        sub_1AE7EAFCC();
        v485 = sub_1AE7EB58C();
        nullsub_1(v485);
      }
      while (v452 != v319);
      sub_1AE501F64();
      v480 = v843;
    }
    else
    {
      sub_1AE501F64();
    }
  }
  else
  {
    v480 = 0;
  }
  sub_1AE7E9EB8(v834, (SEL *)&selRef_ktsSegmentIds, &qword_1EED94D28);
  v835 = v480;
  if (v486)
  {
    sub_1AE7EB4E0();
    v357 = v487;
    *(_QWORD *)&v843 = v487;
    v488 = sub_1AE4FB75C();
    if (sub_1AE5B77A0(v488))
    {
      sub_1AE7EA5F8();
      if (v482 != v483)
        goto LABEL_450;
      sub_1AE8DBF68(v331);
      sub_1AE7EA61C();
      do
      {
        if ((v357 & 1) == 0)
          sub_1AE4F9510();
        v489 = sub_1AE7EA384(v331 + 8 * v319);
        sub_1AE7EAF60(v489);
        sub_1AE7EB384();
        sub_1AE8DD258();
        sub_1AE7EAFCC();
        v490 = sub_1AE7EB58C();
        nullsub_1(v490);
      }
      while (v452 != v319);
      v486 = sub_1AE501F64();
      v357 = v843;
    }
    else
    {
      v486 = sub_1AE501F64();
    }
    v830 = v357;
  }
  else
  {
    v830 = 0;
  }
  v491 = sub_1AE7EA44C(v486, sel_percentTimeSpentAtSpeedBuckets);
  sub_1AE7EA46C();
  sub_1AE563950();
  sub_1AE7EB5E0();
  v493 = v492;
  v844 = v492;
  v494 = sub_1AE4FB75C();
  if (sub_1AE5B77A0(v494))
  {
    sub_1AE7EA5F8();
    if (v482 != v483)
      goto LABEL_431;
    sub_1AE7EAD64();
    sub_1AE7EA61C();
    v35 = (uint64_t)&unk_1EEDA3408;
    v838 = xmmword_1AE95B6F0;
    v191 = (uint64_t)&qword_1EED9AA28;
    do
    {
      if ((v357 & 1) == 0)
        sub_1AE4F9510();
      v495 = sub_1AE7EA384(v331 + 8 * v319);
      v496 = sub_1AE7EB420((uint64_t)objc_msgSend(v495, sel_bucket));
      sub_1AE4FB8E8((uint64_t)v496, sel_bucketValue);
      sub_1AE7EA4E0(v497);
      sub_1AE7EA56C();
      v498 = sub_1AE506A00();
      if ((v498 & 1) == 0)
        sub_1AE7EA610();

      if (v843 != 9)
      {
        sub_1AE7EACC0();
        sub_1AE7EAA14();
        v499 = sub_1AE7EAA5C();
        nullsub_1(v499);
      }
      sub_1AE7EA680();
    }
    while (!v222);
    sub_1AE501F64();
    v493 = v844;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C1FC(v493);
  v812 = v500;
  v501 = sub_1AE7EA44C(v500, sel_percentTimeSpentAtTrafficBuckets);
  sub_1AE7EA46C();
  sub_1AE563950();
  sub_1AE7EB5E8();
  v844 = v502;
  v503 = sub_1AE4FB75C();
  if (sub_1AE5B77A0(v503))
  {
    sub_1AE7EA5F8();
    if (v482 != v483)
      goto LABEL_432;
    sub_1AE8DBF68(v331);
    sub_1AE7EA61C();
    v191 = (uint64_t)"Unknown traffic bucket: %s. Ignored.";
    v838 = xmmword_1AE95B6E0;
    v31 = (uint64_t)&qword_1EED9AA20;
    do
    {
      if ((v357 & 1) == 0)
        sub_1AE4F9510();
      v504 = sub_1AE7EA384(v331 + 8 * v319);
      v505 = sub_1AE7EB0CC((uint64_t)objc_msgSend(v504, sel_bucket), (uint64_t)type metadata accessor for GDTrafficBucket);
      v35 = v842;
      sub_1AE4FB8E8(v505, sel_bucketValue);
      sub_1AE7EA788(v506);
      sub_1AE7EA8DC();
      v507 = sub_1AE506A00();
      if ((v507 & 1) == 0)
        sub_1AE7EA610();

      sub_1AE7EAF80();
      if (!v222)
      {
        sub_1AE7EACCC();
        sub_1AE7EB0A4();
        v508 = sub_1AE7EAC88(v35);
        nullsub_1(v508);
      }
      sub_1AE7EA680();
    }
    while (!v222);
  }
  sub_1AE501F64();
  sub_1AE62C1D8();
  v811 = v509;
  v510 = sub_1AE7EA44C(v509, sel_percentTimeSpentAtRelativeSpeeds);
  sub_1AE7EA46C();
  sub_1AE563950();
  sub_1AE7EB608();
  v512 = v511;
  v844 = v511;
  v513 = sub_1AE4FB75C();
  if (sub_1AE5B77A0(v513))
  {
    sub_1AE7EA5F8();
    if (v482 != v483)
      goto LABEL_433;
    sub_1AE7EAD64();
    sub_1AE7EA61C();
    v35 = (uint64_t)&unk_1EEDA3418;
    v838 = xmmword_1AE95B700;
    v191 = (uint64_t)&qword_1EED9AA18;
    do
    {
      if ((v357 & 1) == 0)
        sub_1AE4F9510();
      v514 = sub_1AE7EA384(v331 + 8 * v319);
      v515 = sub_1AE7EB418((uint64_t)objc_msgSend(v514, sel_bucket));
      sub_1AE4FB8E8((uint64_t)v515, sel_bucketValue);
      sub_1AE7EA4E0(v516);
      sub_1AE7EA56C();
      v517 = sub_1AE506A00();
      if ((v517 & 1) == 0)
        sub_1AE7EA610();

      if (v843 != 7)
      {
        sub_1AE7EACB4();
        sub_1AE7EAA34();
        v518 = sub_1AE7EAA4C();
        nullsub_1(v518);
      }
      sub_1AE7EA680();
    }
    while (!v222);
    sub_1AE501F64();
    v512 = v844;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C210(v512);
  v810 = v519;
  v520 = sub_1AE7EA44C(v519, sel_percentTimeSpentAtRoadTypes);
  sub_1AE7EA46C();
  sub_1AE563950();
  sub_1AE7EB5F0();
  *(_QWORD *)&v843 = v521;
  v522 = sub_1AE4FB75C();
  if (sub_1AE5B77A0(v522))
  {
    sub_1AE7EA5F8();
    if (v482 != v483)
      goto LABEL_434;
    sub_1AE7EAD64();
    sub_1AE7EA61C();
    do
    {
      if ((v357 & 1) == 0)
        sub_1AE4F9510();
      v523 = sub_1AE7EA384(v331 + 8 * v319++);
      v524 = sub_1AE7EAE64((uint64_t)objc_msgSend(v523, sel_type));
      LOBYTE(v35) = v840;
      sub_1AE4FB8E8((uint64_t)v524, sel_typeValue);
      sub_1AE646138();
      sub_1AE7EB3FC();
      sub_1AE7EA9F0();
      v525 = sub_1AE7EAA78();
      nullsub_1(v525);
    }
    while (v452 != v319);
  }
  sub_1AE501F64();
  sub_1AE7EB51C();
  v809 = v526;
  v527 = sub_1AE7EA44C(v526, sel_percentTimeSpentInWeatherTypes);
  sub_1AE7EA46C();
  sub_1AE563950();
  sub_1AE7EB600();
  v529 = v528;
  v844 = v528;
  v530 = sub_1AE4FB75C();
  if (sub_1AE5B77A0(v530))
  {
    sub_1AE7EA5F8();
    if (v482 != v483)
      goto LABEL_435;
    sub_1AE7EAD64();
    sub_1AE7EA61C();
    v35 = (uint64_t)&unk_1EEDA3420;
    v838 = xmmword_1AE95B720;
    v191 = (uint64_t)&qword_1EED9AA08;
    do
    {
      if ((v357 & 1) == 0)
        sub_1AE4F9510();
      v531 = sub_1AE7EA384(v331 + 8 * v319);
      objc_msgSend(v531, sel_type);
      v532 = sub_1AE7EB428();
      sub_1AE4FB8E8(v532, sel_typeValue);
      sub_1AE7EA4E0(v533);
      sub_1AE7EA56C();
      v534 = sub_1AE506A00();
      if ((v534 & 1) == 0)
        sub_1AE7EA610();

      if (v843 != 8)
      {
        sub_1AE7EACA8();
        sub_1AE7EAA24();
        v535 = sub_1AE7EAA4C();
        nullsub_1(v535);
      }
      sub_1AE7EA680();
    }
    while (!v222);
    sub_1AE501F64();
    v529 = v844;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C238(v529);
  v808 = v536;
  v537 = sub_1AE7EA44C(v536, sel_percentTimeSpentInTerrainTypes);
  sub_1AE7EA46C();
  sub_1AE563950();
  sub_1AE7EB5F8();
  v844 = v538;
  v539 = sub_1AE4FB75C();
  if (sub_1AE5B77A0(v539))
  {
    sub_1AE7EA5F8();
    if (v482 != v483)
      goto LABEL_436;
    sub_1AE7EAD64();
    sub_1AE7EA61C();
    v191 = (uint64_t)"Unknown: %s. Ignored.";
    v838 = xmmword_1AE95B6E0;
    v31 = (uint64_t)&qword_1EED9AA00;
    do
    {
      if ((v357 & 1) == 0)
        sub_1AE4F9510();
      v540 = sub_1AE7EA384(v331 + 8 * v319);
      v541 = sub_1AE7EB0CC((uint64_t)objc_msgSend(v540, sel_type), (uint64_t)type metadata accessor for GDTerrainType);
      LOBYTE(v35) = v842;
      sub_1AE4FB8E8(v541, sel_typeValue);
      sub_1AE7EA788(v542);
      sub_1AE7EA8DC();
      v543 = sub_1AE506A00();
      if ((v543 & 1) == 0)
        sub_1AE7EA610();

      sub_1AE7EAF80();
      if (!v222)
      {
        sub_1AE7EACD8();
        sub_1AE7EB094();
        v544 = sub_1AE7EB228();
        nullsub_1(v544);
      }
      sub_1AE7EA680();
    }
    while (!v222);
  }
  sub_1AE501F64();
  sub_1AE62C24C();
  v807 = v545;
  v546 = sub_1AE7EA44C(v545, sel_percentDistanceTraveledAtSpeedBuckets);
  sub_1AE7EA46C();
  sub_1AE563950();
  sub_1AE7EB5E0();
  v548 = v547;
  v844 = v547;
  v549 = sub_1AE4FB75C();
  if (sub_1AE5B77A0(v549))
  {
    sub_1AE7EA5F8();
    if (v482 != v483)
      goto LABEL_437;
    sub_1AE7EAD64();
    sub_1AE7EA61C();
    v35 = (uint64_t)&unk_1EEDA3408;
    v838 = xmmword_1AE95B6F0;
    v191 = (uint64_t)&qword_1EED9AA28;
    do
    {
      if ((v357 & 1) == 0)
        sub_1AE4F9510();
      v550 = sub_1AE7EA384(v331 + 8 * v319);
      v551 = sub_1AE7EB420((uint64_t)objc_msgSend(v550, sel_bucket));
      sub_1AE4FB8E8((uint64_t)v551, sel_bucketValue);
      sub_1AE7EA4E0(v552);
      sub_1AE7EA56C();
      v553 = sub_1AE506A00();
      if ((v553 & 1) == 0)
        sub_1AE7EA610();

      if (v843 != 9)
      {
        sub_1AE7EACC0();
        sub_1AE7EAA14();
        v554 = sub_1AE7EAA5C();
        nullsub_1(v554);
      }
      sub_1AE7EA680();
    }
    while (!v222);
    sub_1AE501F64();
    v548 = v844;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C1FC(v548);
  v806 = v555;
  v556 = sub_1AE7EA44C(v555, sel_percentDistanceTraveledAtTrafficBuckets);
  sub_1AE7EA46C();
  sub_1AE563950();
  sub_1AE7EB5E8();
  v844 = v557;
  v558 = sub_1AE4FB75C();
  if (sub_1AE5B77A0(v558))
  {
    sub_1AE7EA5F8();
    if (v482 != v483)
      goto LABEL_438;
    sub_1AE8DBF68(v331);
    sub_1AE7EA61C();
    v191 = (uint64_t)"Unknown traffic bucket: %s. Ignored.";
    v838 = xmmword_1AE95B6E0;
    v31 = (uint64_t)&qword_1EED9AA20;
    do
    {
      if ((v357 & 1) == 0)
        sub_1AE4F9510();
      v559 = sub_1AE7EA384(v331 + 8 * v319);
      v560 = sub_1AE7EB0CC((uint64_t)objc_msgSend(v559, sel_bucket), (uint64_t)type metadata accessor for GDTrafficBucket);
      v35 = v842;
      sub_1AE4FB8E8(v560, sel_bucketValue);
      sub_1AE7EA788(v561);
      sub_1AE7EA8DC();
      v562 = sub_1AE506A00();
      if ((v562 & 1) == 0)
        sub_1AE7EA610();

      sub_1AE7EAF80();
      if (!v222)
      {
        sub_1AE7EACCC();
        sub_1AE7EB0A4();
        v563 = sub_1AE7EAC88(v35);
        nullsub_1(v563);
      }
      sub_1AE7EA680();
    }
    while (!v222);
  }
  sub_1AE501F64();
  sub_1AE62C1D8();
  v805 = v564;
  v565 = sub_1AE7EA44C(v564, sel_percentDistanceTraveledAtRelativeSpeeds);
  sub_1AE7EA46C();
  sub_1AE563950();
  sub_1AE7EB608();
  v567 = v566;
  v844 = v566;
  v568 = sub_1AE4FB75C();
  if (sub_1AE5B77A0(v568))
  {
    sub_1AE7EA5F8();
    if (v482 != v483)
      goto LABEL_439;
    sub_1AE7EAD64();
    sub_1AE7EA61C();
    v35 = (uint64_t)&unk_1EEDA3418;
    v838 = xmmword_1AE95B700;
    v191 = (uint64_t)&qword_1EED9AA18;
    do
    {
      if ((v357 & 1) == 0)
        sub_1AE4F9510();
      v569 = sub_1AE7EA384(v331 + 8 * v319);
      v570 = sub_1AE7EB418((uint64_t)objc_msgSend(v569, sel_bucket));
      sub_1AE4FB8E8((uint64_t)v570, sel_bucketValue);
      sub_1AE7EA4E0(v571);
      sub_1AE7EA56C();
      v572 = sub_1AE506A00();
      if ((v572 & 1) == 0)
        sub_1AE7EA610();

      if (v843 != 7)
      {
        sub_1AE7EACB4();
        sub_1AE7EAA34();
        v573 = sub_1AE7EAA4C();
        nullsub_1(v573);
      }
      sub_1AE7EA680();
    }
    while (!v222);
    sub_1AE501F64();
    v567 = v844;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C210(v567);
  v804 = (_BYTE *)v574;
  v575 = sub_1AE7EA44C(v574, sel_percentDistanceTraveledForRoadTypes);
  sub_1AE7EA46C();
  sub_1AE563950();
  sub_1AE7EB5F0();
  *(_QWORD *)&v843 = v576;
  v577 = sub_1AE4FB75C();
  if (sub_1AE5B77A0(v577))
  {
    sub_1AE7EA5F8();
    if (v482 != v483)
      goto LABEL_440;
    sub_1AE7EAD64();
    sub_1AE7EA61C();
    do
    {
      if ((v357 & 1) == 0)
        sub_1AE4F9510();
      v578 = sub_1AE7EA384(v331 + 8 * v319++);
      v579 = sub_1AE7EAE64((uint64_t)objc_msgSend(v578, sel_type));
      LOBYTE(v35) = v840;
      sub_1AE4FB8E8((uint64_t)v579, sel_typeValue);
      sub_1AE646138();
      sub_1AE7EB3FC();
      sub_1AE7EA9F0();
      v580 = sub_1AE7EAA78();
      nullsub_1(v580);
    }
    while (v452 != v319);
  }
  sub_1AE501F64();
  sub_1AE7EB51C();
  v803 = v581;
  v582 = sub_1AE7EA44C(v581, sel_percentDistanceTraveledInWeatherTypes);
  sub_1AE7EA46C();
  sub_1AE563950();
  sub_1AE7EB600();
  v584 = v583;
  v844 = v583;
  v585 = sub_1AE4FB75C();
  if (sub_1AE5B77A0(v585))
  {
    sub_1AE7EA5F8();
    if (v482 != v483)
      goto LABEL_441;
    sub_1AE7EAD64();
    sub_1AE7EA61C();
    v35 = (uint64_t)&unk_1EEDA3420;
    v838 = xmmword_1AE95B720;
    v191 = (uint64_t)&qword_1EED9AA08;
    do
    {
      if ((v357 & 1) == 0)
        sub_1AE4F9510();
      v586 = sub_1AE7EA384(v331 + 8 * v319);
      objc_msgSend(v586, sel_type);
      v587 = sub_1AE7EB428();
      sub_1AE4FB8E8(v587, sel_typeValue);
      sub_1AE7EA4E0(v588);
      sub_1AE7EA56C();
      v589 = sub_1AE506A00();
      if ((v589 & 1) == 0)
        sub_1AE7EA610();

      if (v843 != 8)
      {
        sub_1AE7EACA8();
        sub_1AE7EAA24();
        v590 = sub_1AE7EAA4C();
        nullsub_1(v590);
      }
      sub_1AE7EA680();
    }
    while (!v222);
    sub_1AE501F64();
    v584 = v844;
  }
  else
  {
    sub_1AE501F64();
  }
  sub_1AE62C238(v584);
  v592 = (void *)v591;
  v593 = sub_1AE7EA44C(v591, sel_percentDistanceTraveledInTerrainTypes);
  sub_1AE7EA46C();
  sub_1AE563950();
  sub_1AE7EB5F8();
  v844 = v594;
  v595 = sub_1AE4FB75C();
  v596 = sub_1AE5B77A0(v595);
  v802 = (uint64_t)v592;
  if (v596)
  {
    sub_1AE7EA5F8();
    if (v482 != v483)
      goto LABEL_442;
    sub_1AE7EAD64();
    sub_1AE7EA61C();
    v191 = (uint64_t)"Unknown: %s. Ignored.";
    v838 = xmmword_1AE95B6E0;
    v31 = (uint64_t)&qword_1EED9AA00;
    do
    {
      if ((v592 & 1) == 0)
        sub_1AE4F9510();
      v597 = sub_1AE7EA384(v331 + 8 * v319);
      v598 = sub_1AE7EB0CC((uint64_t)objc_msgSend(v597, sel_type), (uint64_t)type metadata accessor for GDTerrainType);
      LOBYTE(v35) = v842;
      sub_1AE4FB8E8(v598, sel_typeValue);
      sub_1AE7EA788(v599);
      sub_1AE7EA8DC();
      v600 = sub_1AE506A00();
      if ((v600 & 1) == 0)
        sub_1AE7EA610();

      sub_1AE7EAF80();
      if (!v222)
      {
        sub_1AE7EACD8();
        sub_1AE7EB094();
        v601 = sub_1AE7EB228();
        nullsub_1(v601);
      }
      sub_1AE7EA680();
    }
    while (!v222);
  }
  sub_1AE501F64();
  sub_1AE62C24C();
  v801 = v602;
  v603 = sub_1AE7EA44C(v602, sel_scorePerSpeedBucket);
  sub_1AE7EA46C();
  sub_1AE7EAEE0();
  sub_1AE7EB5E0();
  v605 = v604;
  v844 = v604;
  v606 = sub_1AE4F66C4();
  v607 = sub_1AE5B77A0(v606);
  if (v607)
  {
    v592 = (void *)v607;
    if (v607 < 1)
      goto LABEL_443;
    v608 = sub_1AE8DBF68(v452);
    v319 = 0;
    v35 = (uint64_t)&unk_1EEDA3408;
    v838 = xmmword_1AE95B6F0;
    v191 = (uint64_t)&qword_1EED9AA28;
    do
    {
      if ((v608 & 1) == 0)
        sub_1AE7EAD00();
      v609 = sub_1AE7EA384(v452 + 8 * v319);
      v610 = sub_1AE7EB420((uint64_t)objc_msgSend(v609, sel_bucket));
      sub_1AE4FB8E8((uint64_t)v610, sel_bucketValue);
      sub_1AE7EA4E0(v611);
      sub_1AE7EA56C();
      v612 = sub_1AE506A00();
      if ((v612 & 1) == 0)
        sub_1AE7EA610();

      if (v843 != 9)
      {
        sub_1AE7EACC0();
        sub_1AE7EAA14();
        v613 = sub_1AE7EAA5C();
        nullsub_1(v613);
      }
      ++v319;
    }
    while (v592 != (void *)v319);
    sub_1AE4F6824();
    v605 = v844;
  }
  else
  {
    sub_1AE4F6824();
  }
  sub_1AE62C1FC(v605);
  v615 = v614;
  v616 = sub_1AE7EA44C(v614, sel_scorePerTrafficBucket);
  sub_1AE7EA46C();
  sub_1AE7EB63C();
  sub_1AE7EB5E8();
  v844 = v617;
  v618 = sub_1AE4F6730();
  v619 = sub_1AE5B77A0(v618);
  v826 = v615;
  if (v619)
  {
    sub_1AE7EA5F8();
    if (v482 != v483)
      goto LABEL_444;
    sub_1AE8DBF68(v592);
    sub_1AE7EAD1C();
    v319 = (uint64_t)"Unknown traffic bucket: %s. Ignored.";
    v838 = xmmword_1AE95B6E0;
    v31 = (uint64_t)&qword_1EED9AA20;
    do
    {
      if ((v35 & 1) == 0)
        sub_1AE7EAEF8();
      v620 = sub_1AE7EA384((uint64_t)v592 + 8 * v191);
      v621 = objc_msgSend(v620, sel_bucket);
      v622 = sub_1AE7D79A8(v621, type metadata accessor for GDTrafficBucket, "Unknown traffic bucket: %s. Ignored.", v759);
      v623 = v842;
      sub_1AE4FB8E8(v622, sel_bucketValue);
      LOBYTE(v840) = v623;
      v841 = v624;
      sub_1AE501548(&qword_1EEDA3410);
      sub_1AE7EA8DC();
      v625 = sub_1AE506A00();
      if ((v625 & 1) == 0)
        sub_1AE7EA610();

      sub_1AE7EAF80();
      if (!v222)
      {
        sub_1AE7EACCC();
        v626 = *(_QWORD *)(v844 + 16);
        sub_1AE8DD798(v626);
        v627 = sub_1AE7EAC88(v626);
        nullsub_1(v627);
      }
      ++v191;
    }
    while (v452 != v191);
  }
  sub_1AE4F6824();
  sub_1AE62C1D8();
  v800 = (_BYTE *)v628;
  v629 = sub_1AE7EA44C(v628, sel_scorePerRelativeSpeed);
  sub_1AE7EA46C();
  sub_1AE7EAEE0();
  sub_1AE7EB608();
  v631 = v630;
  v844 = v630;
  v632 = sub_1AE4F66C4();
  v633 = sub_1AE5B77A0(v632);
  if (v633)
  {
    v634 = v633;
    if (v633 < 1)
      goto LABEL_445;
    v635 = sub_1AE8DBF68(v452);
    v319 = 0;
    v592 = &unk_1EEDA3418;
    v838 = xmmword_1AE95B700;
    do
    {
      if ((v635 & 1) == 0)
        sub_1AE7EAD00();
      v636 = sub_1AE7EA384(v452 + 8 * v319);
      v637 = sub_1AE7EB418((uint64_t)objc_msgSend(v636, sel_bucket));
      v638 = v842;
      sub_1AE4FB8E8((uint64_t)v637, sel_bucketValue);
      LOBYTE(v840) = v638;
      sub_1AE7EB2C4(v639);
      sub_1AE7EA56C();
      v640 = sub_1AE506A00();
      if ((v640 & 1) == 0)
        sub_1AE7EA610();

      if (v843 != 7)
      {
        sub_1AE7EACB4();
        sub_1AE7EAA34();
        v641 = sub_1AE7EAA4C();
        nullsub_1(v641);
      }
      ++v319;
    }
    while (v634 != v319);
    sub_1AE4F6824();
    v631 = v844;
  }
  else
  {
    sub_1AE4F6824();
  }
  sub_1AE62C210(v631);
  v643 = v642;
  v644 = sub_1AE7EA44C(v642, sel_scorePerRoadType);
  sub_1AE7EA46C();
  sub_1AE563950();
  sub_1AE7EB5F0();
  *(_QWORD *)&v843 = v645;
  v646 = sub_1AE4FB75C();
  v647 = sub_1AE5B77A0(v646);
  v825 = v643;
  if (v647)
  {
    sub_1AE7EA5F8();
    if (v482 != v483)
      goto LABEL_446;
    sub_1AE7EAD64();
    sub_1AE7EA61C();
    do
    {
      if ((v592 & 1) == 0)
        sub_1AE4F9510();
      v648 = sub_1AE7EA384(v631 + 8 * v319++);
      v649 = sub_1AE7EAE64((uint64_t)objc_msgSend(v648, sel_type));
      sub_1AE4FB8E8((uint64_t)v649, sel_typeValue);
      sub_1AE646138();
      sub_1AE7EB3FC();
      sub_1AE7EA9F0();
      v650 = sub_1AE7EAA78();
      nullsub_1(v650);
    }
    while (v452 != v319);
  }
  sub_1AE501F64();
  sub_1AE7EB51C();
  v824 = (_BYTE *)v651;
  v652 = sub_1AE7EA44C(v651, sel_scorePerWeatherType);
  sub_1AE7EA46C();
  sub_1AE7EAEE0();
  sub_1AE7EB600();
  v654 = v653;
  v844 = v653;
  v655 = sub_1AE4F66C4();
  v656 = sub_1AE5B77A0(v655);
  if (v656)
  {
    v657 = v656;
    if (v656 < 1)
      goto LABEL_447;
    v658 = sub_1AE8DBF68(v452);
    v659 = 0;
    v838 = xmmword_1AE95B720;
    do
    {
      if ((v658 & 1) == 0)
        sub_1AE7EAD00();
      v660 = sub_1AE7EA384(v452 + 8 * v659);
      objc_msgSend(v660, sel_type);
      v661 = sub_1AE7EB428();
      v662 = v842;
      sub_1AE4FB8E8(v661, sel_typeValue);
      LOBYTE(v840) = v662;
      sub_1AE7EB2C4(v663);
      sub_1AE501548(&qword_1EED9AA08);
      v664 = sub_1AE506A00();
      if ((v664 & 1) == 0)
        sub_1AE7EA610();

      v665 = v843;
      if (v843 != 8)
      {
        sub_1AE7EACA8();
        sub_1AE7EAA24();
        v666 = sub_1AE8DDD78(v31, v665, v33);
        nullsub_1(v666);
      }
      ++v659;
    }
    while (v657 != v659);
    sub_1AE4F6824();
    v654 = v844;
  }
  else
  {
    sub_1AE4F6824();
  }
  sub_1AE62C238(v654);
  v829 = v667;
  v668 = sub_1AE7EA44C(v667, sel_scorePerTerrainType);
  sub_1AE7EA46C();
  sub_1AE7EAEE0();
  sub_1AE7EB5F8();
  v844 = v669;
  v670 = sub_1AE4F66C4();
  v671 = sub_1AE5B77A0(v670);
  if (v671)
  {
    v672 = v671;
    if (v671 < 1)
      goto LABEL_448;
    v673 = sub_1AE8DBF68(v452);
    v674 = 0;
    v838 = xmmword_1AE95B6E0;
    do
    {
      if ((v673 & 1) == 0)
        sub_1AE7EAD00();
      v675 = sub_1AE7EA384(v452 + 8 * v674);
      v676 = objc_msgSend(v675, sel_type);
      v677 = sub_1AE7D79A8(v676, type metadata accessor for GDTerrainType, "Unknown: %s. Ignored.", v759);
      v678 = v842;
      sub_1AE4FB8E8(v677, sel_typeValue);
      LOBYTE(v840) = v678;
      v841 = v679;
      sub_1AE501548(&qword_1EEDA3428);
      sub_1AE7EA56C();
      v680 = sub_1AE506A00();
      if ((v680 & 1) == 0)
        sub_1AE7EA610();

      v681 = v843;
      if (v843 != 4)
      {
        sub_1AE7EACD8();
        v682 = *(_QWORD *)(v844 + 16);
        sub_1AE8DD7D4(v682);
        v683 = sub_1AE8DDD78(v682, v681, v33);
        nullsub_1(v683);
      }
      ++v674;
    }
    while (v672 != v674);
  }
  sub_1AE4F6824();
  sub_1AE62C24C();
  *(_QWORD *)&v838 = v684;
  v685 = sub_1AE7E9F20(v834);
  if (v685)
  {
    v828 = sub_1AE7D6218(v685);
    v685 = sub_1AE4F6648();
  }
  else
  {
    v828 = 0;
  }
  v686 = sub_1AE4FB8E8(v685, sel_distanceInMeters);
  sub_1AE4F77B8((uint64_t)v686, &qword_1EED996A0);
  sub_1AE7EAB9C();

  v688 = sub_1AE4FB8E8(v687, sel_elevationGainInMeters);
  sub_1AE7EAB9C();

  v690 = sub_1AE4FB8E8(v689, sel_durationInSeconds);
  sub_1AE4F77B8((uint64_t)v690, &qword_1EED996A8);
  sub_1AE7EAEF0();

  v692 = sub_1AE4FB8E8(v691, sel_expectedDurationInSecondsNoTraffic);
  sub_1AE7EAEF0();

  v694 = sub_1AE4FB8E8(v693, sel_averageSpeedInMetersPerSecond);
  sub_1AE4F77B8((uint64_t)v694, &qword_1EED99690);
  sub_1AE7EB430();

  v696 = sub_1AE4FB8E8(v695, sel_score);
  v697 = sub_1AE4FB8E8((uint64_t)v696, sel_usageKwh);
  sub_1AE4F77B8((uint64_t)v697, &qword_1EED99698);
  v698 = v765;
  sub_1AE7EAEF0();

  v700 = sub_1AE4FB8E8(v699, sel_optimalUsageKwh);
  v701 = v766;
  sub_1AE7EAEF0();

  v703 = sub_1AE4FB8E8(v702, sel_numBrakingEvents);
  v799 = (int)v703;
  v704 = sub_1AE4FB8E8((uint64_t)v703, sel_numAccelEvents);
  v798 = (int)v704;
  v705 = sub_1AE4FB8E8((uint64_t)v704, sel_numHighSpeedEvents);
  v706 = (int)v705;
  v707 = sub_1AE4FB8E8((uint64_t)v705, sel_maxTripDistanceInMeters);
  v708 = v761;
  sub_1AE7EAB9C();

  v710 = sub_1AE4FB8E8(v709, sel_avgTripDistanceInMeters);
  v711 = v762;
  sub_1AE7EAB9C();

  v713 = sub_1AE4FB8E8(v712, sel_maxElevationGainInMeters);
  v714 = v763;
  sub_1AE7EAB9C();

  v716 = sub_1AE4FB8E8(v715, sel_avgElevationGainInMeters);
  v717 = v764;
  sub_1AE7EAB9C();

  v719 = sub_1AE4FB8E8(v718, sel_avgNumBrakingEvents);
  v720 = sub_1AE4FB8E8((uint64_t)v719, sel_avgNumAccelEvents);
  v721 = sub_1AE4FB8E8((uint64_t)v720, sel_avgNumHighSpeedEvents);
  sub_1AE4FB8E8((uint64_t)v721, sel_mostEfficientDriveScore);
  type metadata accessor for KTSDataAggregateRepresentation(0);
  sub_1AE4FCE84();
  v758 = (uint64_t)v828;
  v757 = v838;
  v756 = v829;
  v755 = (uint64_t)v824;
  v754 = v825;
  v753 = (uint64_t)v800;
  v752 = v826;
  v751 = v801;
  v750 = v802;
  v749 = v803;
  v748 = (uint64_t)v804;
  v747 = v805;
  v746 = v806;
  v745 = v807;
  v744 = v808;
  v743 = v809;
  v742 = v810;
  v741 = v811;
  v740 = v812;
  v739 = v830;
  v738 = v835;
  v737 = v817;
  v736 = v815;
  v735 = v816;
  v734 = v818;
  v733 = v798;
  v732 = v799;
  v731 = v769;
  v730 = v837;
  v729 = v813;
  v728 = (uint64_t)v831;
  v727 = (uint64_t)v814;
  v726 = v836;
  v725 = v827;
  v724 = v819;
  v723 = v820;
  sub_1AE7EAE78();
  KTSDataAggregateRepresentation.init(startTime:endTime:distanceInMeters:elevationGainInMeters:distanceBuckets:durationInSeconds:expectedDurationInSecondsNoTraffic:distanceSpentInTrafficBuckets:timeSpentInTrafficBuckets:distanceSpentAtSpeedBuckets:timeSpentAtSpeedBuckets:distanceSpentAtRelativeSpeeds:timeSpentAtRelativeSpeeds:distancePerRoadType:timePerRoadType:distancePerWeatherType:timePerWeatherType:distancePerTerrainType:timePerTerrainType:averageSpeedInMetersPerSecond:score:usageKwh:optimalUsageKwh:numBrakingEvents:numAccelEvents:numHighSpeedEvents:roadDistancesInMeters:roadSpeedBuckets:roadRelativeSpeedBuckets:roadTimes:lifeEventIds:ktsSegmentIds:maxTripDistanceInMeters:avgTripDistanceInMeters:maxElevationGainInMeters:avgElevationGainInMeters:percentTimeSpentAtSpeedBuckets:percentTimeSpentAtTrafficBuckets:percentTimeSpentAtRelativeSpeeds:percentTimeSpentAtRoadTypes:percentTimeSpentInWeatherTypes:percentTimeSpentInTerrainTypes:percentDistanceTraveledAtSpeedBuckets:percentDistanceTraveledAtTrafficBuckets:p(v833, v767, v760, v832, v768, v781, v823, v822, v722, v723, v724, v725, v726, v727, v728, v729, v730, v731, v698,
    v701,
    v732,
    v733,
    v706,
    v734,
    v735,
    v736,
    v737,
    v738,
    v739,
    v708,
    v711,
    v714,
    v717,
    v740,
    v741,
    v742,
    v743,
    v744,
    v745,
    v746,
    v747,
    v748,
    v749,
    v750,
    v751,
    v752,
    v753,
    v754,
    v755,
    v756,
    v757,
    v758,
    (uint64_t)v759,
    v760,
    v761,
    v762,
    v763,
    v764,
    v765,
    v766,
    v767,
    v768,
    v769);
  sub_1AE505BEC();
}

void sub_1AE7DF050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  sub_1AE4FCAE4();
  v3 = v2;
  v5 = v4;
  v47 = sub_1AE501548(&qword_1EEDA33C0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE506540(v7, v38[0]);
  v8 = sub_1AE501548(&qword_1EED9E350);
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE607F48(v10, v38[0]);
  sub_1AE501548(&qword_1EEDA3168);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE50688C();
  v12 = sub_1AE501548(&qword_1EED9A6F0);
  v40 = *(_QWORD *)(v12 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  v44 = (uint64_t)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9350();
  v16 = MEMORY[0x1E0C80A78](v15);
  sub_1AE7EAD6C(v16, v17, v18, v19, v20, v21, v22, v23, v38[0]);
  if (v24)
  {
    sub_1AE4FB75C();
    v25 = sub_1AE926AD8();
  }
  else
  {
    v25 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1AE4FB75C();
  }
  v38[2] = v5;
  if (!v25)
  {
    sub_1AE4F6648();
    v27 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    sub_1AE62C328(v27);
    sub_1AE7EB524(v37);
    sub_1AE4FCE0C();
    return;
  }
  v43 = (id)objc_opt_self();
  if (v25 >= 1)
  {
    v38[1] = v0;
    v26 = 0;
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1AE7EB578();
    do
    {
      if (v41)
        sub_1AE7EB510();
      v28 = sub_1AE7EB560();
      sub_1AE7D7580(&v48, objc_msgSend(v28, sel_bucket));
      objc_msgSend(v28, sel_bucketValue);
      v29 = objc_msgSend(v43, sel_meters);
      v30 = sub_1AE595C08();
      sub_1AE53F468(v30, &qword_1EED996A0);
      sub_1AE7EABF4();
      sub_1AE7EA9B8();
      v31 = sub_1AE7EABA4();
      sub_1AE7EB0D4(v31);
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, v12) == 1)
      {
        sub_1AE52FBE8(v1, &qword_1EEDA3168);
      }
      else
      {
        v32 = v39;
        sub_1AE7EA6E0(v1, v39);
        sub_1AE7EA6E0(v32, v44);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE78D0D4();
          sub_1AE51BB28();
          v27 = v35;
        }
        if (*(_QWORD *)(v27 + 16) >= *(_QWORD *)(v27 + 24) >> 1)
        {
          sub_1AE51BB28();
          v27 = v36;
        }
        v33 = sub_1AE7EA990();
        sub_1AE7EA350(v33, v34, &qword_1EED9A6F0);
      }
      ++v26;
    }
    while (v42 != v26);
    sub_1AE4F6648();
    goto LABEL_18;
  }
  __break(1u);
}

void sub_1AE7DF308()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  sub_1AE4FCAE4();
  v3 = v2;
  v5 = v4;
  v47 = sub_1AE501548(&qword_1EEDA33B0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE506540(v7, v38[0]);
  v8 = sub_1AE501548(&qword_1EED9E350);
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE607F48(v10, v38[0]);
  sub_1AE501548(&qword_1EEDA3178);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE50688C();
  v12 = sub_1AE501548(&qword_1EED9A710);
  v40 = *(_QWORD *)(v12 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  v44 = (uint64_t)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9350();
  v16 = MEMORY[0x1E0C80A78](v15);
  sub_1AE7EAD6C(v16, v17, v18, v19, v20, v21, v22, v23, v38[0]);
  if (v24)
  {
    sub_1AE4FB75C();
    v25 = sub_1AE926AD8();
  }
  else
  {
    v25 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_1AE4FB75C();
  }
  v38[2] = v5;
  if (!v25)
  {
    sub_1AE4F6648();
    v27 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    sub_1AE62C350(v27);
    sub_1AE7EB524(v37);
    sub_1AE4FCE0C();
    return;
  }
  v43 = (id)objc_opt_self();
  if (v25 >= 1)
  {
    v38[1] = v0;
    v26 = 0;
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1AE7EB578();
    do
    {
      if (v41)
        sub_1AE7EB510();
      v28 = sub_1AE7EB560();
      sub_1AE7D768C(&v48, objc_msgSend(v28, sel_bucket));
      objc_msgSend(v28, sel_bucketValue);
      v29 = objc_msgSend(v43, sel_meters);
      v30 = sub_1AE595C08();
      sub_1AE53F468(v30, &qword_1EED996A0);
      sub_1AE7EABF4();
      sub_1AE7EA9B8();
      v31 = sub_1AE7EABA4();
      sub_1AE7EB0D4(v31);
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, v12) == 1)
      {
        sub_1AE52FBE8(v1, &qword_1EEDA3178);
      }
      else
      {
        v32 = v39;
        sub_1AE7EA6E0(v1, v39);
        sub_1AE7EA6E0(v32, v44);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE78D0D4();
          sub_1AE51BB00();
          v27 = v35;
        }
        if (*(_QWORD *)(v27 + 16) >= *(_QWORD *)(v27 + 24) >> 1)
        {
          sub_1AE51BB00();
          v27 = v36;
        }
        v33 = sub_1AE7EA990();
        sub_1AE7EA350(v33, v34, &qword_1EED9A710);
      }
      ++v26;
    }
    while (v42 != v26);
    sub_1AE4F6648();
    goto LABEL_18;
  }
  __break(1u);
}

void sub_1AE7DF5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t _0a;
  uint64_t v69;
  os_log_type_t type;
  os_log_t log;
  os_log_t loga;
  os_log_t logb;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE v93[176];
  uint64_t v94;
  uint64_t v95;

  sub_1AE4F67EC();
  a19 = v22;
  a20 = v23;
  sub_1AE7EA6E0(v20, (uint64_t)&v88);
  v25 = *(_QWORD *)(v20 + 208);
  v24 = *(_QWORD *)(v20 + 216);
  sub_1AE7EA6E0((uint64_t)&v88, (uint64_t)v93);
  v26 = sub_1AE7EA338((uint64_t)v93);
  if (v26 == 1)
    v27 = v25;
  else
    v27 = v94;
  if (v26 == 1)
    v28 = v24;
  else
    v28 = v95;
  sub_1AE4F6730();
  v29 = sub_1AE7E4670((Class *)off_1E5DA2340, (SEL *)&selRef_initWithOriginContexts_ktsContexts_destinationContexts_);
  if (v21)
  {
    sub_1AE4F81B8();
  }
  else
  {
    v30 = (void *)v29;
    sub_1AE7DF908();
    v32 = v31;
    if (qword_1EED99830 != -1)
      swift_once();
    v33 = sub_1AE4F6854();
    sub_1AE4FB608(v33, (uint64_t)qword_1EED9F800);
    swift_bridgeObjectRetain_n();
    v34 = v30;
    v35 = v32;
    v36 = sub_1AE7EAC80();
    v37 = v32;
    v38 = sub_1AE925B54();
    v39 = sub_1AE9265D4();
    v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      v41 = sub_1AE4F66A0();
      v74 = sub_1AE4F66A0();
      a10 = v74;
      *(_DWORD *)v41 = 136315650;
      sub_1AE4F6730();
      sub_1AE520ED4(v27, v28, (uint64_t)&a10, v42, v43, v44, v45, v46, v67, (unint64_t)log, v74, v77, v80, (uint64_t)v37, v85, v88, v89, v90, v91,
        v92);
      sub_1AE7EAB6C();
      sub_1AE92676C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v41 + 12) = 2080;
      v81 = v27;
      v47 = v36;
      v78 = (uint64_t)v36;
      v48 = objc_msgSend(v47, sel_description);
      HIDWORD(_0a) = v40;
      v49 = sub_1AE925E3C();
      v51 = v50;

      sub_1AE520ED4(v49, v51, (uint64_t)&a10, v52, v53, v54, v55, v56, _0a, (unint64_t)v38, v75, v78, v81, v83, v86, v88, v89, v90, v91,
        v92);
      sub_1AE7EB478();
      sub_1AE92676C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 22) = 2080;
      v57 = v84;
      v58 = objc_msgSend(v57, sel_description);
      v59 = sub_1AE925E3C();
      v61 = v60;

      sub_1AE520ED4(v59, v61, (uint64_t)&a10, v62, v63, v64, v65, v66, v69, (unint64_t)loga, v76, v79, v82, (uint64_t)v84, v87, v88, v89, v90, v91,
        v92);
      sub_1AE7EB478();
      sub_1AE92676C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AE4F2000, logb, type, "Adding trip ID: %s, trip context: %s, data: %s", (uint8_t *)v41, 0x20u);
      swift_arrayDestroy();
      sub_1AE4F9064();
    }

    swift_bridgeObjectRelease_n();
    sub_1AE7EA298(v27, v28, v36, v37, 0);
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE7DF8E4()
{
  return sub_1AE7E4670((Class *)off_1E5DA2340, (SEL *)&selRef_initWithOriginContexts_ktsContexts_destinationContexts_);
}

void sub_1AE7DF908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  _BYTE *v134;
  uint64_t v135;
  _BYTE *v136;
  uint64_t v137;
  _BYTE *v138;
  uint64_t v139;
  _BYTE *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _BYTE *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _BYTE *v171;
  uint64_t v172;
  _BYTE *v173;
  uint64_t v174;
  _BYTE *v175;
  uint64_t v176;
  _BYTE *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _BYTE *v181;
  uint64_t v182;
  _BYTE *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  int v195;
  unint64_t v196;
  int v197;
  uint64_t *v198;
  char v199;
  char v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  int v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  _BYTE *v219;
  uint64_t v220;
  uint64_t v221;
  void (*v222)(_QWORD, _QWORD);
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char v226;
  char v227;
  _BYTE *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  int v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char v236;
  uint64_t v237;
  uint64_t v238;
  _BYTE *v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char v245;
  uint64_t v246;
  uint64_t v247;
  _BYTE *v248;
  _BYTE *v249;
  void (*v250)(_QWORD, _QWORD);
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char v254;
  char v255;
  uint64_t v256;
  char v257;
  uint64_t v258;
  int v259;
  char v260;
  uint64_t v261;
  uint64_t v262;
  char v263;
  uint64_t v264;
  _BYTE *v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  char v270;
  _BYTE *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char v275;
  _BYTE *v276;
  uint64_t v277;
  uint64_t v278;
  char v279;
  uint64_t v280;
  int v281;
  uint64_t v282;
  uint64_t v283;
  char v284;
  uint64_t v285;
  _BYTE *v286;
  uint64_t v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  char v291;
  _BYTE *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char v296;
  _BYTE *v297;
  unint64_t v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  int v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  char *v311;
  char v312;
  _BYTE *v313;
  uint64_t v314;
  uint64_t v315;
  void (*v316)(_QWORD, _QWORD);
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  char v321;
  char v322;
  uint64_t v323;
  uint64_t v324;
  _BYTE *v325;
  uint64_t v326;
  _BYTE *v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  _QWORD *v332;
  _BYTE *v333;
  uint64_t *v334;
  uint64_t v335;
  uint64_t *v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  _BYTE *v349;
  _BYTE *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  _BYTE *v354;
  uint64_t v355;
  _BYTE *v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  _BYTE *v360;
  uint64_t v361;
  _BYTE *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  _BYTE *v366;
  uint64_t v367;
  _BYTE *v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  _BYTE *v372;
  uint64_t v373;
  _BYTE *v374;
  uint64_t v375;
  char v376;
  double v377;
  uint64_t v378;
  char *v379;
  char *v380;
  uint64_t v381;
  char v382;
  double v383;
  uint64_t v384;
  char *v385;
  char *v386;
  uint64_t v387;
  char v388;
  double v389;
  uint64_t v390;
  _BYTE *v391;
  _BYTE *v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  int v396;
  int v397;
  char v398;
  char v399;
  char v400;
  double v401;
  uint64_t v402;
  int v403;
  char v404;
  _BYTE *v405;
  _BYTE *v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  int v410;
  int v411;
  char v412;
  char v413;
  double v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  char v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  int v423;
  int v424;
  char v425;
  char v426;
  double v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  char v431;
  char *v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  char v441;
  char v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  id v456;
  id v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  char v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  _QWORD *v470;
  uint64_t v471;
  uint64_t v472;
  void (*v473)(_QWORD, _QWORD, _QWORD);
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t *v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  char v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  char *v491;
  char *v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  char v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  id v510;
  double v511;
  double v512;
  double v513;
  double v514;
  double v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  int v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  char *v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  char *v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  char *v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  char *v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  char *v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  char *v621;
  uint64_t v622;
  uint64_t v623;
  char *v624;
  char *v625;
  char *v626;
  char *v627;
  uint64_t v628;
  uint64_t v629;
  char *v630;
  char *v631;
  uint64_t v632;
  _BYTE *v633;
  _BYTE *v634;
  char *v635;
  char *v636;
  _BYTE *v637;
  _BYTE *v638;
  char *v639;
  _BYTE *v640;
  _BYTE *v641;
  uint64_t v642;
  _BYTE *v643;
  _BYTE *v644;
  char *v645;
  _BYTE *v646;
  _BYTE *v647;
  uint64_t v648;
  _BYTE *v649;
  _BYTE *v650;
  char *v651;
  char *v652;
  _BYTE *v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  _BYTE *v657;
  _BYTE *v658;
  uint64_t v659;
  _BYTE *v660;
  _BYTE *v661;
  uint64_t v662;
  uint64_t v663;
  _BYTE *v664;
  uint64_t v665;
  char *v666;
  uint64_t v667;
  uint64_t v668;
  _QWORD *v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  _QWORD *v673;
  uint64_t v674;
  char *v675;
  uint64_t v676;
  char v677;
  uint64_t v678;
  uint64_t v679[4];
  uint64_t v680;
  uint64_t v681;
  _BYTE *v682;
  _BYTE *v683;
  uint64_t v684;
  _BYTE *v685;
  _QWORD v686[3];

  v5 = sub_1AE501548((uint64_t *)&unk_1EED9E340);
  v565 = *(_QWORD *)(v5 - 8);
  v566 = v5;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F686C();
  v582 = v7;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE5094B0();
  v581 = v9;
  v10 = sub_1AE501548(&qword_1EED9A888);
  v563 = *(_QWORD *)(v10 - 8);
  v564 = v10;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F9024();
  v578 = v12;
  v670 = sub_1AE501548(&qword_1EED9A850);
  v671 = *(_QWORD *)(v670 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F686C();
  v580 = v14;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE5094B0();
  v579 = v16;
  v672 = sub_1AE501548(&qword_1EED9E350);
  v673 = *(_QWORD **)(v672 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE4F686C();
  v562 = v18;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE4F6A60();
  v561 = v20;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v21);
  sub_1AE4F6A60();
  v560 = v22;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v23);
  sub_1AE4F6A60();
  v559 = v24;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v25);
  sub_1AE4F6A60();
  v577 = v26;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v27);
  sub_1AE4F6A60();
  v576 = v28;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v29);
  sub_1AE4F6A60();
  v575 = v30;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v31);
  sub_1AE4F6A60();
  v574 = v32;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v33);
  sub_1AE4F6A60();
  v573 = v34;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v35);
  sub_1AE5094B0();
  v583 = v36;
  v588 = sub_1AE501548((uint64_t *)&qword_1EEDA3370);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v37);
  sub_1AE4F686C();
  v587 = v38;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v39);
  v586 = (char *)&v558 - v40;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v41);
  v585 = (uint64_t)&v558 - v42;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v43);
  v584 = (uint64_t)&v558 - v44;
  v45 = sub_1AE7EB48C();
  v590 = *(_QWORD *)(v45 - 8);
  v46 = MEMORY[0x1E0C80A78](v45);
  v593 = (uint64_t)&v558 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v46);
  sub_1AE5094B0();
  v592 = v48;
  v589 = v49;
  MEMORY[0x1E0C80A78](v50);
  sub_1AE5094B0();
  v591 = v51;
  v599 = sub_1AE501548((uint64_t *)&qword_1EEDA3248);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v52);
  sub_1AE4F686C();
  v598 = v53;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v54);
  v597 = (char *)&v558 - v55;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v56);
  sub_1AE4F6A60();
  v596 = v57;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v58);
  sub_1AE4F6A60();
  v595 = v59;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v60);
  sub_1AE5094B0();
  v594 = v61;
  v605 = sub_1AE501548((uint64_t *)&qword_1EEDA31F8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v62);
  sub_1AE4F686C();
  v604 = v63;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v64);
  v603 = (char *)&v558 - v65;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v66);
  sub_1AE4F6A60();
  v602 = v67;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v68);
  sub_1AE4F6A60();
  v601 = v69;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v70);
  sub_1AE5094B0();
  v600 = v71;
  v611 = sub_1AE501548((uint64_t *)&qword_1EEDA3218);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v72);
  sub_1AE4F686C();
  v610 = v73;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v74);
  v609 = (char *)&v558 - v75;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v76);
  sub_1AE4F6A60();
  v608 = v77;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v78);
  sub_1AE4F6A60();
  v607 = v79;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v80);
  sub_1AE5094B0();
  v606 = v81;
  v617 = sub_1AE501548((uint64_t *)&qword_1EEDA31F0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v82);
  sub_1AE4F686C();
  v616 = v83;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v84);
  v615 = (char *)&v558 - v85;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v86);
  sub_1AE4F6A60();
  v614 = v87;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v88);
  sub_1AE4F6A60();
  v613 = v89;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v90);
  sub_1AE5094B0();
  v612 = v91;
  v623 = sub_1AE501548((uint64_t *)&qword_1EEDA3230);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v92);
  sub_1AE4F686C();
  v622 = v93;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v94);
  v621 = (char *)&v558 - v95;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v96);
  sub_1AE4F6A60();
  v620 = v97;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v98);
  sub_1AE4F6A60();
  v619 = v99;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v100);
  sub_1AE5094B0();
  v618 = v101;
  v628 = sub_1AE501548((uint64_t *)&qword_1EEDA31E8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v102);
  v627 = (char *)&v558 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v104);
  v626 = (char *)&v558 - v105;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v106);
  v625 = (char *)&v558 - v107;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v108);
  v624 = (char *)&v558 - v109;
  sub_1AE4F9350();
  v111 = MEMORY[0x1E0C80A78](v110);
  sub_1AE7EB498(v111, v112, v113, v114, v115, v116, v117, v118, v558);
  v665 = sub_1AE501548((uint64_t *)&qword_1EEDA3200);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v119);
  sub_1AE4F686C();
  v632 = v120;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v121);
  v631 = (char *)&v558 - v122;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v123);
  v630 = (char *)&v558 - v124;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v125);
  sub_1AE4F6A60();
  v629 = v126;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v127);
  sub_1AE4F6A60();
  v664 = v128;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v129);
  v636 = (char *)&v558 - v130;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v131);
  sub_1AE4F6A60();
  v635 = v132;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v133);
  sub_1AE4F6A60();
  v634 = v134;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v135);
  sub_1AE5094B0();
  v633 = v136;
  v642 = sub_1AE501548((uint64_t *)&qword_1EEDA32B8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v137);
  sub_1AE4F686C();
  v641 = v138;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v139);
  sub_1AE4F6A60();
  v640 = v140;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v141);
  sub_1AE4F6A60();
  v639 = (char *)v142;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v143);
  v638 = (char *)&v558 - v144;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v145);
  sub_1AE5094B0();
  v637 = v146;
  v648 = sub_1AE501548((uint64_t *)&qword_1EEDA3208);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v147);
  v647 = (char *)&v558 - ((v148 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v149);
  v646 = (char *)&v558 - v150;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v151);
  v645 = (char *)&v558 - v152;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v153);
  v644 = (char *)&v558 - v154;
  sub_1AE4F9350();
  v156 = MEMORY[0x1E0C80A78](v155);
  sub_1AE7EB4AC(v156, v157, v158, v159, v160, v161, v162, v163, v558);
  v654 = sub_1AE501548((uint64_t *)&qword_1EEDA3290);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v164);
  sub_1AE4F686C();
  v653 = v165;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v166);
  sub_1AE4F6A60();
  v652 = v167;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v168);
  sub_1AE4F6A60();
  v651 = (char *)v169;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v170);
  sub_1AE4F6A60();
  v650 = v171;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v172);
  sub_1AE5094B0();
  v649 = v173;
  v662 = sub_1AE501548((uint64_t *)&qword_1EEDA3210);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v174);
  sub_1AE4F686C();
  v661 = v175;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v176);
  sub_1AE4F6A60();
  v660 = v177;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v178);
  sub_1AE4F6A60();
  v659 = v179;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v180);
  sub_1AE4F6A60();
  v658 = v181;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v182);
  sub_1AE5094B0();
  v657 = v183;
  v184 = sub_1AE4F675C();
  v571 = *(_QWORD *)(v184 - 8);
  v572 = v184;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v185);
  sub_1AE4F686C();
  v568 = v186;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v187);
  sub_1AE4F6A60();
  v567 = v188;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v189);
  sub_1AE7EB248();
  MEMORY[0x1E0C80A78](v190);
  sub_1AE7EB4C0();
  sub_1AE4F9094();
  v569 = v2;
  sub_1AE924858();
  sub_1AE4F9094();
  v570 = v1;
  sub_1AE924858();
  v663 = v0;
  v191 = (uint64_t *)(v0 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceBuckets);
  sub_1AE500FE4();
  v192 = *v191;
  v193 = *(_QWORD *)(*v191 + 16);
  if (v193)
  {
    v686[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    v191 = v686;
    sub_1AE69015C();
    v194 = sub_1AE64A338(v192);
    if ((v194 & 0x8000000000000000) == 0)
    {
      v196 = v194;
      if (v194 < 1 << *(_BYTE *)(v192 + 32))
      {
        v197 = v195;
        v191 = (uint64_t *)(v192 + 64);
        while (1)
        {
          v3 = 1 << v196;
          if ((v191[v196 >> 6] & (1 << v196)) == 0)
            break;
          if (*(_DWORD *)(v192 + 36) != v197)
            goto LABEL_397;
          v669 = (_QWORD *)v193;
          v198 = v191;
          sub_1AE7EB2D0();
          sub_1AE507EE4(objc_allocWithZone((Class)GDDistanceBucketValue), sel_initWithBucket_bucketValue_);
          v191 = v686;
          sub_1AE9269B8();
          sub_1AE68FBA4();
          sub_1AE9269F4();
          sub_1AE9269C4();
          sub_1AE7EB2B0();
          if (v199 == v200)
            goto LABEL_398;
          if ((v198[v196 >> 6] & v3) == 0)
            goto LABEL_399;
          if (*(_DWORD *)(v192 + 36) != v197)
            goto LABEL_400;
          v201 = sub_1AE7EAC94();
          v193 = (unint64_t)v669 - 1;
          if (v669 == (_QWORD *)1)
            goto LABEL_15;
          v196 = v201;
          if ((v201 & 0x8000000000000000) == 0)
          {
            v197 = *(_DWORD *)(v192 + 36);
            if (v201 < 1 << *(_BYTE *)(v192 + 32))
              continue;
          }
          goto LABEL_14;
        }
        __break(1u);
LABEL_397:
        __break(1u);
LABEL_398:
        __break(1u);
LABEL_399:
        __break(1u);
LABEL_400:
        __break(1u);
        goto LABEL_401;
      }
    }
LABEL_14:
    __break(1u);
LABEL_15:
    v558 = v686[0];
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE519BBC(0);
    v558 = v202;
  }
  sub_1AE7EA604();
  sub_1AE500FE4();
  v203 = *v191;
  v204 = *(_QWORD *)(*v191 + 16);
  if (v204)
  {
    v685 = (_BYTE *)MEMORY[0x1E0DEE9D8];
    sub_1AE4F6708();
    sub_1AE9269DC();
    v193 = sub_1AE64A338(v203);
    v656 = v203 + 64;
    v655 = v203;
    v3 = (uint64_t)v673;
    while ((v193 & 0x8000000000000000) == 0)
    {
      sub_1AE7EB26C();
      if (v199 == v200)
        break;
      if (((*(_QWORD *)(v656 + ((v193 >> 3) & 0xFFFFFFFFFFFFF8)) >> v193) & 1) == 0)
        goto LABEL_402;
      if (*(_DWORD *)(v203 + 36) != (_DWORD)v205)
        goto LABEL_403;
      v669 = (_QWORD *)v204;
      v207 = v662;
      v208 = (uint64_t)v657;
      v209 = (uint64_t)&v657[*(int *)(v662 + 48)];
      v210 = *(_QWORD *)(v203 + 56);
      v211 = *(_BYTE *)(*(_QWORD *)(v203 + 48) + v193);
      *v657 = v211;
      v212 = *(_QWORD *)(v3 + 72);
      v668 = v205;
      v213 = v672;
      LODWORD(v667) = v206;
      sub_1AE7EAF8C(v209, v210 + v212 * v193);
      v214 = (uint64_t)v658;
      *v658 = v211;
      sub_1AE7EAF8C(v214 + *(int *)(v207 + 48), v209);
      v4 = v659;
      sub_1AE5066F4(v214, v659);
      sub_1AE7EA484(v208);
      v215 = *(int *)(v207 + 48);
      v216 = (uint64_t)&v660[v215];
      v666 = &v660[v215];
      LOBYTE(v208) = *(_BYTE *)v4;
      *v660 = *(_BYTE *)v4;
      sub_1AE7EAF8C(v216, v4 + v215);
      v217 = *(int *)(v207 + 48);
      v218 = (uint64_t)v669;
      v219 = &v661[v217];
      *v661 = v208;
      v220 = sub_1AE7EAB90();
      sub_1AE7EAF8C(v220, v221);
      sub_1AE92445C();
      v222 = *(void (**)(_QWORD, _QWORD))(v3 + 8);
      v222(v219, v213);
      sub_1AE507EE4(objc_allocWithZone((Class)GDTrafficBucketValue), sel_initWithBucket_bucketValue_);
      v223 = v213;
      v203 = v655;
      v222(v666, v223);
      sub_1AE52FBE8(v4, (uint64_t *)&qword_1EEDA3210);
      v191 = (uint64_t *)&v685;
      sub_1AE9269B8();
      sub_1AE68FBA4();
      sub_1AE7EB558();
      sub_1AE9269C4();
      v224 = sub_1AE7EAAA0();
      v193 = v224;
      v227 = v226 & 1;
      v204 = v218 - 1;
      if (!v204)
      {
        sub_1AE5CDFE8(v224, v225, v227);
        v660 = v685;
        sub_1AE4F76D8();
        goto LABEL_27;
      }
    }
LABEL_401:
    __break(1u);
LABEL_402:
    __break(1u);
LABEL_403:
    __break(1u);
    goto LABEL_404;
  }
  sub_1AE7EAEB4();
  v660 = v228;
LABEL_27:
  sub_1AE7EA604();
  sub_1AE500FE4();
  v229 = *v191;
  v230 = *(_QWORD *)(*v191 + 16);
  if (v230)
  {
    v684 = MEMORY[0x1E0DEE9D8];
    sub_1AE4F6708();
    sub_1AE9269DC();
    v193 = sub_1AE64A338(v229);
    v662 = v229 + 64;
    v661 = (_BYTE *)v229;
    v3 = v671;
    while ((v193 & 0x8000000000000000) == 0)
    {
      sub_1AE7EB26C();
      if (v199 == v200)
        break;
      if (((*(_QWORD *)(v662 + ((v193 >> 3) & 0xFFFFFFFFFFFFF8)) >> v193) & 1) == 0)
        goto LABEL_405;
      if (*(_DWORD *)(v229 + 36) != (_DWORD)v231)
        goto LABEL_406;
      v669 = (_QWORD *)v230;
      v233 = v654;
      v234 = (uint64_t)&v649[*(int *)(v654 + 48)];
      v235 = *(_QWORD *)(v229 + 56);
      v236 = *(_BYTE *)(*(_QWORD *)(v229 + 48) + v193);
      *v649 = v236;
      v237 = *(_QWORD *)(v3 + 72);
      v668 = v231;
      v238 = v670;
      LODWORD(v667) = v232;
      sub_1AE76210C(v234, v235 + v237 * v193);
      v239 = v650;
      *v650 = v236;
      sub_1AE76210C((uint64_t)&v239[*(int *)(v233 + 48)], v234);
      v240 = (uint64_t)v239;
      v241 = v651;
      sub_1AE5066F4(v240, (uint64_t)v651);
      sub_1AE7EA454();
      v242 = *(int *)(v233 + 48);
      v243 = (uint64_t)&v652[v242];
      v666 = &v652[v242];
      v244 = (uint64_t)&v241[v242];
      v245 = *v241;
      *v652 = *v241;
      sub_1AE76210C(v243, (uint64_t)&v241[v242]);
      v246 = *(int *)(v233 + 48);
      v247 = (uint64_t)v669;
      v248 = v653;
      v249 = &v653[v246];
      *v653 = v245;
      sub_1AE76210C((uint64_t)&v248[v246], v244);
      sub_1AE92445C();
      v250 = *(void (**)(_QWORD, _QWORD))(v3 + 8);
      v250(v249, v238);
      v4 = (uint64_t)sub_1AE507EE4(objc_allocWithZone((Class)GDTrafficBucketValue), sel_initWithBucket_bucketValue_);
      v251 = v238;
      v229 = (uint64_t)v661;
      v250(v666, v251);
      sub_1AE52FBE8((uint64_t)v241, (uint64_t *)&qword_1EEDA3290);
      sub_1AE9269B8();
      sub_1AE7EA48C();
      sub_1AE7EA524();
      v191 = &v684;
      sub_1AE9269C4();
      v252 = sub_1AE7EAAA0();
      v193 = v252;
      v255 = v254 & 1;
      v230 = v247 - 1;
      if (!v230)
      {
        sub_1AE5CDFE8(v252, v253, v255);
        v659 = v684;
        sub_1AE4F76D8();
        goto LABEL_37;
      }
    }
LABEL_404:
    __break(1u);
LABEL_405:
    __break(1u);
LABEL_406:
    __break(1u);
    goto LABEL_407;
  }
  sub_1AE7EAEB4();
  v659 = v256;
LABEL_37:
  sub_1AE7EA604();
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  if (v193)
  {
    v683 = (_BYTE *)MEMORY[0x1E0DEE9D8];
    sub_1AE4F66C4();
    sub_1AE69015C();
    sub_1AE64A338(0);
    sub_1AE7EAE2C();
    while ((v229 & 0x8000000000000000) == 0)
    {
      sub_1AE4F6D10();
      if (v199 == v200)
        break;
      sub_1AE7EA530();
      if ((v257 & 1) == 0)
        goto LABEL_408;
      sub_1AE505C14();
      if (!v260)
        goto LABEL_409;
      v669 = (_QWORD *)v193;
      v193 = v648;
      v261 = (uint64_t)&v643[*(int *)(v648 + 48)];
      v262 = *(_QWORD *)(v230 + 56);
      v263 = *(_BYTE *)(*(_QWORD *)(v230 + 48) + v229);
      *v643 = v263;
      v264 = *(_QWORD *)(v3 + 72);
      v668 = v258;
      v230 = v672;
      LODWORD(v667) = v259;
      sub_1AE4F95F8(v261, v262 + v264 * v229);
      v265 = v644;
      *v644 = v263;
      sub_1AE4F95F8((uint64_t)&v265[*(int *)(v193 + 48)], v261);
      v266 = (uint64_t)v265;
      v267 = v645;
      sub_1AE5066F4(v266, (uint64_t)v645);
      sub_1AE7EA454();
      v268 = *(int *)(v193 + 48);
      v269 = (uint64_t)&v646[v268];
      v666 = &v646[v268];
      v4 = (uint64_t)&v267[v268];
      v270 = *v267;
      *v646 = *v267;
      sub_1AE4F95F8(v269, (uint64_t)&v267[v268]);
      sub_1AE7EABC4();
      v271 = v647;
      *v647 = v270;
      sub_1AE4F95F8((uint64_t)&v271[v272], v4);
      sub_1AE7EA5E4();
      sub_1AE506A40();
      sub_1AE507EE4(objc_allocWithZone((Class)GDSpeedBucketValue), sel_initWithBucket_bucketValue_);
      sub_1AE7EA8C8();
      sub_1AE52FBE8((uint64_t)v267, (uint64_t *)&qword_1EEDA3208);
      sub_1AE9269B8();
      sub_1AE7EA48C();
      sub_1AE7EA524();
      v191 = (uint64_t *)&v683;
      sub_1AE9269C4();
      sub_1AE508CF4();
      sub_1AE507758();
      if (v260)
      {
        sub_1AE7EA510(v273, v274, v275);
        v658 = v683;
        sub_1AE4F665C();
        goto LABEL_49;
      }
    }
LABEL_407:
    __break(1u);
LABEL_408:
    __break(1u);
LABEL_409:
    __break(1u);
    goto LABEL_410;
  }
  sub_1AE7EAEAC();
  v658 = v276;
LABEL_49:
  sub_1AE7EA604();
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  if (v193)
  {
    v682 = (_BYTE *)MEMORY[0x1E0DEE9D8];
    sub_1AE4F66C4();
    sub_1AE69015C();
    v277 = sub_1AE64A338(v230);
    v662 = v230 + 64;
    v661 = (_BYTE *)v230;
    v278 = v671;
    while ((v277 & 0x8000000000000000) == 0)
    {
      sub_1AE4F6D10();
      if (v199 == v200)
        break;
      sub_1AE7EA530();
      if ((v279 & 1) == 0)
        goto LABEL_411;
      sub_1AE505C14();
      if (!v260)
        goto LABEL_412;
      v669 = (_QWORD *)v193;
      v193 = v642;
      v282 = (uint64_t)&v637[*(int *)(v642 + 48)];
      v283 = *(_QWORD *)(v230 + 56);
      v284 = *(_BYTE *)(*(_QWORD *)(v230 + 48) + v277);
      *v637 = v284;
      v285 = *(_QWORD *)(v278 + 72);
      v668 = v280;
      v230 = v670;
      LODWORD(v667) = v281;
      sub_1AE4F95F8(v282, v283 + v285 * v277);
      v286 = v638;
      *v638 = v284;
      sub_1AE4F95F8((uint64_t)&v286[*(int *)(v193 + 48)], v282);
      v287 = (uint64_t)v286;
      v288 = v639;
      sub_1AE5066F4(v287, (uint64_t)v639);
      sub_1AE7EA454();
      v289 = *(int *)(v193 + 48);
      v290 = (uint64_t)&v640[v289];
      v666 = &v640[v289];
      v4 = (uint64_t)&v288[v289];
      v291 = *v288;
      *v640 = *v288;
      sub_1AE4F95F8(v290, (uint64_t)&v288[v289]);
      sub_1AE7EABC4();
      v292 = v641;
      *v641 = v291;
      sub_1AE4F95F8((uint64_t)&v292[v293], v4);
      sub_1AE7EA5E4();
      sub_1AE506A40();
      sub_1AE507EE4(objc_allocWithZone((Class)GDSpeedBucketValue), sel_initWithBucket_bucketValue_);
      sub_1AE7EA8C8();
      sub_1AE52FBE8((uint64_t)v288, (uint64_t *)&qword_1EEDA32B8);
      sub_1AE9269B8();
      sub_1AE7EA48C();
      sub_1AE7EA524();
      v191 = (uint64_t *)&v682;
      sub_1AE9269C4();
      sub_1AE508CF4();
      sub_1AE507758();
      if (v260)
      {
        sub_1AE7EA510(v294, v295, v296);
        v657 = v682;
        sub_1AE4F665C();
        goto LABEL_61;
      }
    }
LABEL_410:
    __break(1u);
LABEL_411:
    __break(1u);
LABEL_412:
    __break(1u);
    goto LABEL_413;
  }
  sub_1AE7EAEAC();
  v657 = v297;
LABEL_61:
  sub_1AE7EA604();
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  if (v193)
  {
    v661 = v191;
    v681 = MEMORY[0x1E0DEE9D8];
    sub_1AE4F66C4();
    sub_1AE69015C();
    v298 = sub_1AE7EB238();
    v666 = (char *)(v230 + 64);
    v662 = v230;
    v299 = v665;
    v300 = v635;
    while ((v298 & 0x8000000000000000) == 0)
    {
      sub_1AE7EA5B8();
      if (v199 == v200)
        break;
      if (((*(_QWORD *)&v666[(v298 >> 3) & 0xFFFFFFFFFFFFF8] >> v298) & 1) == 0)
        goto LABEL_414;
      sub_1AE505C14();
      if (!v260)
        goto LABEL_415;
      v303 = (uint64_t)v633;
      v304 = (uint64_t)&v633[*(int *)(v299 + 48)];
      v305 = *(_QWORD *)(v230 + 56);
      v306 = *(_BYTE *)(*(_QWORD *)(v230 + 48) + v298);
      *v633 = v306;
      v307 = v673[9];
      v668 = v301;
      v669 = (_QWORD *)v193;
      v308 = v672;
      LODWORD(v667) = v302;
      sub_1AE7EAA0C(v304, v305 + v307 * v298);
      v309 = (uint64_t)v634;
      *v634 = v306;
      sub_1AE7EAA0C(v309 + *(int *)(v299 + 48), v304);
      sub_1AE5066F4(v309, (uint64_t)v300);
      sub_1AE7EA484(v303);
      v310 = *(int *)(v299 + 48);
      v311 = v636;
      v4 = (uint64_t)&v636[v310];
      v312 = *v300;
      *v636 = *v300;
      sub_1AE7EAA0C((uint64_t)&v311[v310], (uint64_t)&v300[v310]);
      v313 = &v664[*(int *)(v299 + 48)];
      *v664 = v312;
      v314 = sub_1AE7EAB90();
      sub_1AE7EAA0C(v314, v315);
      sub_1AE92445C();
      v316 = (void (*)(_QWORD, _QWORD))v673[1];
      v316(v313, v308);
      sub_1AE507EE4(objc_allocWithZone((Class)GDRelativeFlowSpeedBucketValue), sel_initWithBucket_bucketValue_);
      v317 = v308;
      v318 = (uint64_t)v669;
      v316(v4, v317);
      sub_1AE52FBE8((uint64_t)v300, (uint64_t *)&qword_1EEDA3200);
      sub_1AE9269B8();
      sub_1AE9269E8();
      v230 = v662;
      sub_1AE9269F4();
      sub_1AE9269C4();
      v319 = sub_1AE7E9FC0(v298, v668, v667 & 1, v230);
      v298 = v319;
      v322 = v321 & 1;
      v193 = v318 - 1;
      if (!v193)
      {
        sub_1AE5CDFE8(v319, v320, v322);
        v656 = v681;
        sub_1AE4F665C();
        goto LABEL_72;
      }
    }
LABEL_413:
    __break(1u);
LABEL_414:
    __break(1u);
LABEL_415:
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    __break(1u);
    goto LABEL_416;
  }
  sub_1AE7EAE94();
  v656 = v323;
LABEL_72:
  sub_1AE7EA5EC();
  sub_1AE7EAE94();
  v655 = v324;
  sub_1AE7EA604();
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  sub_1AE7EB240();
  v661 = v325;
  sub_1AE7EA604();
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  sub_1AE7EB240();
  v654 = v326;
  sub_1AE7EA604();
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  sub_1AE7EAEA4();
  v653 = v327;
  sub_1AE7EA604();
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  sub_1AE7EAEA4();
  v652 = v328;
  sub_1AE7EA604();
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  sub_1AE7EAE9C();
  v651 = (char *)v329;
  sub_1AE7EA604();
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  sub_1AE7EAE9C();
  v665 = v330;
  v331 = v663;
  v332 = (_QWORD *)(v663 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_roadTimes);
  sub_1AE500FE4();
  v333 = (_BYTE *)*v332;
  v334 = (uint64_t *)(v331 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_roadDistancesInMeters);
  sub_1AE500FE4();
  v335 = *v334;
  v336 = (uint64_t *)(v331 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_route);
  sub_1AE500FE4();
  v337 = *v336;
  v664 = v333;
  v662 = v335;
  if (v337)
  {
    v338 = sub_1AE5B7810(v337);
    if (v338)
    {
      v339 = v338;
      v680 = MEMORY[0x1E0DEE9D8];
      sub_1AE4F6708();
      sub_1AE4F6804();
      sub_1AE4F66C4();
      v340 = sub_1AE69015C();
      if (v339 < 0)
      {
LABEL_498:
        __break(1u);
        goto LABEL_499;
      }
      sub_1AE4F77B8(v340, &qword_1EED9A668);
      j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
      sub_1AE7EAD1C();
      do
      {
        if ((v335 & 1) != 0)
        {
          v341 = v591;
          sub_1AE7EB18C();
          sub_1AE640264(v342 + v343 * v4, v341);
        }
        else
        {
          v344 = sub_1AE7E90E0(v4, v337);
          if (v589 != 8)
            goto LABEL_489;
          v679 = v344;
          sub_1AE640264((uint64_t)&v679, v591);
          swift_unknownObjectRelease();
        }
        ++v4;
        v345 = v592;
        sub_1AE7EA074();
        v346 = v593;
        sub_1AE640264(v345, v593);
        CLLocation.init(model:)(v346);
        sub_1AE57B7C0(v345);
        sub_1AE9269B8();
        sub_1AE7EA4B8();
        sub_1AE506414();
        sub_1AE9269C4();
      }
      while (v339 != v4);
      v648 = v680;
      sub_1AE4F665C();
    }
    else
    {
      sub_1AE4F6708();
      sub_1AE4F6804();
      sub_1AE51997C(0);
      v648 = v347;
    }
  }
  else
  {
    sub_1AE4F6708();
    sub_1AE4F6804();
    v648 = 0;
  }
  v348 = v663;
  sub_1AE500FE4();
  sub_1AE4F66CC();
  sub_1AE7D651C();
  v650 = v349;
  sub_1AE4F9038();
  sub_1AE500FE4();
  sub_1AE4F66CC();
  sub_1AE7D66C8();
  v649 = v350;
  v668 = 0;
  sub_1AE4F9038();
  v351 = *(_QWORD *)(v348
                   + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_percentTimeSpentAtSpeedBuckets);
  v352 = *(_QWORD *)(v351 + 16);
  if (v352)
  {
    sub_1AE7EA494(MEMORY[0x1E0DEE9D8]);
    sub_1AE7EA460();
    if ((sub_1AE64A338(v351) & 0x8000000000000000) == 0)
    {
      sub_1AE5088A0();
      if (v199 != v200)
      {
        sub_1AE7EA4C0();
        while (1)
        {
          sub_1AE7EA418();
          if (v260)
            break;
          sub_1AE7EA7C8();
          if (!v260)
            goto LABEL_417;
          sub_1AE7EA3C4();
          sub_1AE507EE4(objc_allocWithZone((Class)GDSpeedBucketValue), sel_initWithBucket_bucketValue_);
          sub_1AE7EA4AC();
          sub_1AE50A694();
          sub_1AE7EA3DC();
          sub_1AE7EA564();
          sub_1AE508470();
          if (v199 == v200)
            goto LABEL_418;
          sub_1AE7EA7BC();
          if (v260)
            goto LABEL_419;
          sub_1AE7EA7B0();
          if (!v260)
            goto LABEL_420;
          sub_1AE509208();
          sub_1AE7EA7A4();
          if (v260)
            goto LABEL_101;
          sub_1AE7EA798();
          if ((v353 & 0x8000000000000000) == 0)
          {
            sub_1AE7EA404();
            if (v199 != v200)
              continue;
          }
          goto LABEL_100;
        }
LABEL_416:
        __break(1u);
LABEL_417:
        __break(1u);
LABEL_418:
        __break(1u);
LABEL_419:
        __break(1u);
LABEL_420:
        __break(1u);
        goto LABEL_421;
      }
    }
LABEL_100:
    __break(1u);
LABEL_101:
    v647 = (_BYTE *)v678;
    sub_1AE4F6728();
  }
  else
  {
    sub_1AE7EAEAC();
    v647 = v354;
  }
  sub_1AE7EA53C();
  if (v352)
  {
    sub_1AE7EA494(MEMORY[0x1E0DEE9D8]);
    sub_1AE7EA460();
    if ((sub_1AE64A338(v351) & 0x8000000000000000) == 0)
    {
      sub_1AE5088A0();
      if (v199 != v200)
      {
        sub_1AE7EA4C0();
        while (1)
        {
          sub_1AE7EA418();
          if (v260)
            break;
          sub_1AE7EA7C8();
          if (!v260)
            goto LABEL_422;
          sub_1AE7EA3C4();
          sub_1AE507EE4(objc_allocWithZone((Class)GDTrafficBucketValue), sel_initWithBucket_bucketValue_);
          sub_1AE7EA4AC();
          sub_1AE50A694();
          sub_1AE7EA3DC();
          sub_1AE7EA564();
          sub_1AE508470();
          if (v199 == v200)
            goto LABEL_423;
          sub_1AE7EA7BC();
          if (v260)
            goto LABEL_424;
          sub_1AE7EA7B0();
          if (!v260)
            goto LABEL_425;
          sub_1AE509208();
          sub_1AE7EA7A4();
          if (v260)
            goto LABEL_120;
          sub_1AE7EA798();
          if ((v355 & 0x8000000000000000) == 0)
          {
            sub_1AE7EA404();
            if (v199 != v200)
              continue;
          }
          goto LABEL_119;
        }
LABEL_421:
        __break(1u);
LABEL_422:
        __break(1u);
LABEL_423:
        __break(1u);
LABEL_424:
        __break(1u);
LABEL_425:
        __break(1u);
        goto LABEL_426;
      }
    }
LABEL_119:
    __break(1u);
LABEL_120:
    v646 = (_BYTE *)v678;
    sub_1AE4F6728();
  }
  else
  {
    sub_1AE7EAEB4();
    v646 = v356;
  }
  sub_1AE7EA53C();
  if (v352)
  {
    sub_1AE7EA494(MEMORY[0x1E0DEE9D8]);
    sub_1AE7EA460();
    if ((sub_1AE64A338(v351) & 0x8000000000000000) == 0)
    {
      sub_1AE5088A0();
      if (v199 != v200)
      {
        sub_1AE7EA4C0();
        while (1)
        {
          sub_1AE7EA418();
          if (v260)
            break;
          sub_1AE7EA7C8();
          if (!v260)
            goto LABEL_427;
          sub_1AE7EA3C4();
          sub_1AE507EE4(objc_allocWithZone((Class)GDRelativeFlowSpeedBucketValue), sel_initWithBucket_bucketValue_);
          sub_1AE7EA4AC();
          sub_1AE50A694();
          sub_1AE7EA3DC();
          sub_1AE7EA564();
          sub_1AE508470();
          if (v199 == v200)
            goto LABEL_428;
          sub_1AE7EA7BC();
          if (v260)
            goto LABEL_429;
          sub_1AE7EA7B0();
          if (!v260)
            goto LABEL_430;
          sub_1AE509208();
          sub_1AE7EA7A4();
          if (v260)
            goto LABEL_139;
          sub_1AE7EA798();
          if ((v357 & 0x8000000000000000) == 0)
          {
            sub_1AE7EA404();
            if (v199 != v200)
              continue;
          }
          goto LABEL_138;
        }
LABEL_426:
        __break(1u);
LABEL_427:
        __break(1u);
LABEL_428:
        __break(1u);
LABEL_429:
        __break(1u);
LABEL_430:
        __break(1u);
        goto LABEL_431;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    v645 = (char *)v678;
    sub_1AE4F6728();
  }
  else
  {
    sub_1AE7EAE94();
    v645 = (char *)v358;
  }
  sub_1AE7EA53C();
  if (v352)
  {
    sub_1AE7EA494(MEMORY[0x1E0DEE9D8]);
    sub_1AE7EA460();
    if ((sub_1AE64A338(v351) & 0x8000000000000000) == 0)
    {
      sub_1AE5088A0();
      if (v199 != v200)
      {
        sub_1AE7EA4C0();
        while (1)
        {
          sub_1AE7EA418();
          if (v260)
            break;
          sub_1AE7EA7C8();
          if (!v260)
            goto LABEL_432;
          sub_1AE7EB058();
          sub_1AE507EE4(objc_allocWithZone((Class)GDRoadTypeValue), sel_initWithType_typeValue_);
          sub_1AE7EA4AC();
          sub_1AE50A694();
          sub_1AE7EA3DC();
          sub_1AE7EA564();
          sub_1AE508470();
          if (v199 == v200)
            goto LABEL_433;
          sub_1AE7EA7BC();
          if (v260)
            goto LABEL_434;
          sub_1AE7EA7B0();
          if (!v260)
            goto LABEL_435;
          sub_1AE509208();
          sub_1AE7EA7A4();
          if (v260)
            goto LABEL_158;
          sub_1AE7EA798();
          if ((v359 & 0x8000000000000000) == 0)
          {
            sub_1AE7EA404();
            if (v199 != v200)
              continue;
          }
          goto LABEL_157;
        }
LABEL_431:
        __break(1u);
LABEL_432:
        __break(1u);
LABEL_433:
        __break(1u);
LABEL_434:
        __break(1u);
LABEL_435:
        __break(1u);
        goto LABEL_436;
      }
    }
LABEL_157:
    __break(1u);
LABEL_158:
    v644 = (_BYTE *)v678;
    sub_1AE4F6728();
  }
  else
  {
    sub_1AE7EAE9C();
    v644 = v360;
  }
  sub_1AE7EA53C();
  if (v352)
  {
    sub_1AE7EA494(MEMORY[0x1E0DEE9D8]);
    sub_1AE7EA460();
    if ((sub_1AE64A338(v351) & 0x8000000000000000) == 0)
    {
      sub_1AE5088A0();
      if (v199 != v200)
      {
        sub_1AE7EA4C0();
        while (1)
        {
          sub_1AE7EA418();
          if (v260)
            break;
          sub_1AE7EA7C8();
          if (!v260)
            goto LABEL_437;
          sub_1AE7EA3C4();
          sub_1AE507EE4(objc_allocWithZone((Class)GDWeatherTypeValue), sel_initWithType_typeValue_);
          sub_1AE7EA4AC();
          sub_1AE50A694();
          sub_1AE7EA3DC();
          sub_1AE7EA564();
          sub_1AE508470();
          if (v199 == v200)
            goto LABEL_438;
          sub_1AE7EA7BC();
          if (v260)
            goto LABEL_439;
          sub_1AE7EA7B0();
          if (!v260)
            goto LABEL_440;
          sub_1AE509208();
          sub_1AE7EA7A4();
          if (v260)
            goto LABEL_177;
          sub_1AE7EA798();
          if ((v361 & 0x8000000000000000) == 0)
          {
            sub_1AE7EA404();
            if (v199 != v200)
              continue;
          }
          goto LABEL_176;
        }
LABEL_436:
        __break(1u);
LABEL_437:
        __break(1u);
LABEL_438:
        __break(1u);
LABEL_439:
        __break(1u);
LABEL_440:
        __break(1u);
        goto LABEL_441;
      }
    }
LABEL_176:
    __break(1u);
LABEL_177:
    v643 = (_BYTE *)v678;
    sub_1AE4F6728();
  }
  else
  {
    sub_1AE7EAEA4();
    v643 = v362;
  }
  sub_1AE7EA53C();
  if (v352)
  {
    sub_1AE7EA494(MEMORY[0x1E0DEE9D8]);
    sub_1AE7EA460();
    if ((sub_1AE64A338(v351) & 0x8000000000000000) == 0)
    {
      sub_1AE5088A0();
      if (v199 != v200)
      {
        sub_1AE7EA4C0();
        while (1)
        {
          sub_1AE7EA418();
          if (v260)
            break;
          sub_1AE7EA7C8();
          if (!v260)
            goto LABEL_442;
          sub_1AE7EA3C4();
          sub_1AE507EE4(objc_allocWithZone((Class)GDTerrainTypeValue), sel_initWithType_typeValue_);
          sub_1AE7EA4AC();
          sub_1AE50A694();
          sub_1AE7EA3DC();
          sub_1AE7EA564();
          sub_1AE508470();
          if (v199 == v200)
            goto LABEL_443;
          sub_1AE7EA7BC();
          if (v260)
            goto LABEL_444;
          sub_1AE7EA7B0();
          if (!v260)
            goto LABEL_445;
          sub_1AE509208();
          sub_1AE7EA7A4();
          if (v260)
            goto LABEL_196;
          sub_1AE7EA798();
          if ((v363 & 0x8000000000000000) == 0)
          {
            sub_1AE7EA404();
            if (v199 != v200)
              continue;
          }
          goto LABEL_195;
        }
LABEL_441:
        __break(1u);
LABEL_442:
        __break(1u);
LABEL_443:
        __break(1u);
LABEL_444:
        __break(1u);
LABEL_445:
        __break(1u);
        goto LABEL_446;
      }
    }
LABEL_195:
    __break(1u);
LABEL_196:
    v642 = v678;
    sub_1AE4F6728();
  }
  else
  {
    sub_1AE7EB240();
    v642 = v364;
  }
  sub_1AE7EA53C();
  if (v352)
  {
    sub_1AE7EA494(MEMORY[0x1E0DEE9D8]);
    sub_1AE7EA460();
    if ((sub_1AE64A338(v351) & 0x8000000000000000) == 0)
    {
      sub_1AE5088A0();
      if (v199 != v200)
      {
        sub_1AE7EA4C0();
        while (1)
        {
          sub_1AE7EA418();
          if (v260)
            break;
          sub_1AE7EA7C8();
          if (!v260)
            goto LABEL_447;
          sub_1AE7EA3C4();
          sub_1AE507EE4(objc_allocWithZone((Class)GDSpeedBucketValue), sel_initWithBucket_bucketValue_);
          sub_1AE7EA4AC();
          sub_1AE50A694();
          sub_1AE7EA3DC();
          sub_1AE7EA564();
          sub_1AE508470();
          if (v199 == v200)
            goto LABEL_448;
          sub_1AE7EA7BC();
          if (v260)
            goto LABEL_449;
          sub_1AE7EA7B0();
          if (!v260)
            goto LABEL_450;
          sub_1AE509208();
          sub_1AE7EA7A4();
          if (v260)
            goto LABEL_215;
          sub_1AE7EA798();
          if ((v365 & 0x8000000000000000) == 0)
          {
            sub_1AE7EA404();
            if (v199 != v200)
              continue;
          }
          goto LABEL_214;
        }
LABEL_446:
        __break(1u);
LABEL_447:
        __break(1u);
LABEL_448:
        __break(1u);
LABEL_449:
        __break(1u);
LABEL_450:
        __break(1u);
        goto LABEL_451;
      }
    }
LABEL_214:
    __break(1u);
LABEL_215:
    v641 = (_BYTE *)v678;
    sub_1AE4F6728();
  }
  else
  {
    sub_1AE7EAEAC();
    v641 = v366;
  }
  sub_1AE7EA53C();
  if (v352)
  {
    sub_1AE7EA494(MEMORY[0x1E0DEE9D8]);
    sub_1AE7EA460();
    if ((sub_1AE64A338(v351) & 0x8000000000000000) == 0)
    {
      sub_1AE5088A0();
      if (v199 != v200)
      {
        sub_1AE7EA4C0();
        while (1)
        {
          sub_1AE7EA418();
          if (v260)
            break;
          sub_1AE7EA7C8();
          if (!v260)
            goto LABEL_452;
          sub_1AE7EA3C4();
          sub_1AE507EE4(objc_allocWithZone((Class)GDTrafficBucketValue), sel_initWithBucket_bucketValue_);
          sub_1AE7EA4AC();
          sub_1AE50A694();
          sub_1AE7EA3DC();
          sub_1AE7EA564();
          sub_1AE508470();
          if (v199 == v200)
            goto LABEL_453;
          sub_1AE7EA7BC();
          if (v260)
            goto LABEL_454;
          sub_1AE7EA7B0();
          if (!v260)
            goto LABEL_455;
          sub_1AE509208();
          sub_1AE7EA7A4();
          if (v260)
            goto LABEL_234;
          sub_1AE7EA798();
          if ((v367 & 0x8000000000000000) == 0)
          {
            sub_1AE7EA404();
            if (v199 != v200)
              continue;
          }
          goto LABEL_233;
        }
LABEL_451:
        __break(1u);
LABEL_452:
        __break(1u);
LABEL_453:
        __break(1u);
LABEL_454:
        __break(1u);
LABEL_455:
        __break(1u);
        goto LABEL_456;
      }
    }
LABEL_233:
    __break(1u);
LABEL_234:
    v640 = (_BYTE *)v678;
    sub_1AE4F6728();
  }
  else
  {
    sub_1AE7EAEB4();
    v640 = v368;
  }
  sub_1AE7EA53C();
  if (v352)
  {
    sub_1AE7EA494(MEMORY[0x1E0DEE9D8]);
    sub_1AE7EA460();
    if ((sub_1AE64A338(v351) & 0x8000000000000000) == 0)
    {
      sub_1AE5088A0();
      if (v199 != v200)
      {
        sub_1AE7EA4C0();
        while (1)
        {
          sub_1AE7EA418();
          if (v260)
            break;
          sub_1AE7EA7C8();
          if (!v260)
            goto LABEL_457;
          sub_1AE7EA3C4();
          sub_1AE507EE4(objc_allocWithZone((Class)GDRelativeFlowSpeedBucketValue), sel_initWithBucket_bucketValue_);
          sub_1AE7EA4AC();
          sub_1AE50A694();
          sub_1AE7EA3DC();
          sub_1AE7EA564();
          sub_1AE508470();
          if (v199 == v200)
            goto LABEL_458;
          sub_1AE7EA7BC();
          if (v260)
            goto LABEL_459;
          sub_1AE7EA7B0();
          if (!v260)
            goto LABEL_460;
          sub_1AE509208();
          sub_1AE7EA7A4();
          if (v260)
            goto LABEL_253;
          sub_1AE7EA798();
          if ((v369 & 0x8000000000000000) == 0)
          {
            sub_1AE7EA404();
            if (v199 != v200)
              continue;
          }
          goto LABEL_252;
        }
LABEL_456:
        __break(1u);
LABEL_457:
        __break(1u);
LABEL_458:
        __break(1u);
LABEL_459:
        __break(1u);
LABEL_460:
        __break(1u);
        goto LABEL_461;
      }
    }
LABEL_252:
    __break(1u);
LABEL_253:
    v639 = (char *)v678;
    sub_1AE4F6728();
  }
  else
  {
    sub_1AE7EAE94();
    v639 = (char *)v370;
  }
  sub_1AE7EA53C();
  if (v352)
  {
    sub_1AE7EA494(MEMORY[0x1E0DEE9D8]);
    sub_1AE7EA460();
    if ((sub_1AE64A338(v351) & 0x8000000000000000) == 0)
    {
      sub_1AE5088A0();
      if (v199 != v200)
      {
        sub_1AE7EA4C0();
        while (1)
        {
          sub_1AE7EA418();
          if (v260)
            break;
          sub_1AE7EA7C8();
          if (!v260)
            goto LABEL_462;
          sub_1AE7EB058();
          sub_1AE507EE4(objc_allocWithZone((Class)GDRoadTypeValue), sel_initWithType_typeValue_);
          sub_1AE7EA4AC();
          sub_1AE50A694();
          sub_1AE7EA3DC();
          sub_1AE7EA564();
          sub_1AE508470();
          if (v199 == v200)
            goto LABEL_463;
          sub_1AE7EA7BC();
          if (v260)
            goto LABEL_464;
          sub_1AE7EA7B0();
          if (!v260)
            goto LABEL_465;
          sub_1AE509208();
          sub_1AE7EA7A4();
          if (v260)
            goto LABEL_272;
          sub_1AE7EA798();
          if ((v371 & 0x8000000000000000) == 0)
          {
            sub_1AE7EA404();
            if (v199 != v200)
              continue;
          }
          goto LABEL_271;
        }
LABEL_461:
        __break(1u);
LABEL_462:
        __break(1u);
LABEL_463:
        __break(1u);
LABEL_464:
        __break(1u);
LABEL_465:
        __break(1u);
        goto LABEL_466;
      }
    }
LABEL_271:
    __break(1u);
LABEL_272:
    v638 = (_BYTE *)v678;
    sub_1AE4F6728();
  }
  else
  {
    sub_1AE7EAE9C();
    v638 = v372;
  }
  sub_1AE7EA53C();
  if (v352)
  {
    sub_1AE7EA494(MEMORY[0x1E0DEE9D8]);
    sub_1AE7EA460();
    if ((sub_1AE64A338(v351) & 0x8000000000000000) == 0)
    {
      sub_1AE5088A0();
      if (v199 != v200)
      {
        sub_1AE7EA4C0();
        while (1)
        {
          sub_1AE7EA418();
          if (v260)
            break;
          sub_1AE7EA7C8();
          if (!v260)
            goto LABEL_467;
          sub_1AE7EA3C4();
          sub_1AE507EE4(objc_allocWithZone((Class)GDWeatherTypeValue), sel_initWithType_typeValue_);
          sub_1AE7EA4AC();
          sub_1AE50A694();
          sub_1AE7EA3DC();
          sub_1AE7EA564();
          sub_1AE508470();
          if (v199 == v200)
            goto LABEL_468;
          sub_1AE7EA7BC();
          if (v260)
            goto LABEL_469;
          sub_1AE7EA7B0();
          if (!v260)
            goto LABEL_470;
          sub_1AE509208();
          sub_1AE7EA7A4();
          if (v260)
            goto LABEL_291;
          sub_1AE7EA798();
          if ((v373 & 0x8000000000000000) == 0)
          {
            sub_1AE7EA404();
            if (v199 != v200)
              continue;
          }
          goto LABEL_290;
        }
LABEL_466:
        __break(1u);
LABEL_467:
        __break(1u);
LABEL_468:
        __break(1u);
LABEL_469:
        __break(1u);
LABEL_470:
        __break(1u);
        goto LABEL_471;
      }
    }
LABEL_290:
    __break(1u);
LABEL_291:
    v637 = (_BYTE *)v678;
    sub_1AE4F6728();
  }
  else
  {
    sub_1AE7EAEA4();
    v637 = v374;
  }
  sub_1AE7EAF70();
  if (v352)
  {
    v678 = MEMORY[0x1E0DEE9D8];
    sub_1AE4F6730();
    sub_1AE7EA460();
    sub_1AE64A338(v348);
    sub_1AE7EA930();
    sub_1AE4F77B8(v375, &qword_1EED9A670);
    while ((v335 & 0x8000000000000000) == 0)
    {
      sub_1AE7EA5B8();
      if (v199 == v200)
        break;
      sub_1AE7EA71C();
      if ((v376 & 1) == 0)
        goto LABEL_472;
      if (*(_DWORD *)(v348 + 36) != (_DWORD)v4)
        goto LABEL_473;
      v377 = sub_1AE7EB304();
      sub_1AE7E7440(v378, (SEL *)&selRef_initWithType_typeValue_, v377);
      sub_1AE7EA55C();
      sub_1AE7EB5AC();
      sub_1AE9269F4();
      sub_1AE7EA564();
      sub_1AE7EA7F4();
      sub_1AE7EAB38();
      if (v260)
      {
        sub_1AE7EA7D4();
        v636 = v379;
        sub_1AE4F81B8();
        goto LABEL_304;
      }
    }
LABEL_471:
    __break(1u);
LABEL_472:
    __break(1u);
LABEL_473:
    __break(1u);
    goto LABEL_474;
  }
  sub_1AE7EB240();
  v636 = v380;
LABEL_304:
  sub_1AE7EAF70();
  if (v352)
  {
    v678 = MEMORY[0x1E0DEE9D8];
    sub_1AE4F6730();
    sub_1AE7EA460();
    sub_1AE64A338(v348);
    sub_1AE7EA930();
    sub_1AE4F77B8(v381, &qword_1EED9A678);
    while ((v335 & 0x8000000000000000) == 0)
    {
      sub_1AE7EA5B8();
      if (v199 == v200)
        break;
      sub_1AE7EA71C();
      if ((v382 & 1) == 0)
        goto LABEL_475;
      if (*(_DWORD *)(v348 + 36) != (_DWORD)v4)
        goto LABEL_476;
      v383 = sub_1AE7EB304();
      sub_1AE7E7440(v384, (SEL *)&selRef_initWithBucket_bucketValue_, v383);
      sub_1AE7EA55C();
      sub_1AE50A694();
      sub_1AE7EA68C();
      sub_1AE7EA564();
      sub_1AE7EA7F4();
      sub_1AE7EAB38();
      if (v260)
      {
        sub_1AE7EA7D4();
        v635 = v385;
        sub_1AE4F81B8();
        goto LABEL_315;
      }
    }
LABEL_474:
    __break(1u);
LABEL_475:
    __break(1u);
LABEL_476:
    __break(1u);
    goto LABEL_477;
  }
  sub_1AE7EAEAC();
  v635 = v386;
LABEL_315:
  sub_1AE7EAF70();
  if (v352)
  {
    v678 = MEMORY[0x1E0DEE9D8];
    sub_1AE4F6730();
    sub_1AE7EA460();
    sub_1AE64A338(v348);
    sub_1AE7EA930();
    sub_1AE4F77B8(v387, &qword_1EED9A680);
    while ((v335 & 0x8000000000000000) == 0)
    {
      sub_1AE7EA5B8();
      if (v199 == v200)
        break;
      sub_1AE7EA71C();
      if ((v388 & 1) == 0)
        goto LABEL_478;
      if (*(_DWORD *)(v348 + 36) != (_DWORD)v4)
        goto LABEL_479;
      v389 = sub_1AE7EAFDC(*(_QWORD *)(v348 + 48));
      sub_1AE7E7440(v390, (SEL *)&selRef_initWithBucket_bucketValue_, v389);
      sub_1AE7EA55C();
      sub_1AE50A694();
      sub_1AE7EA68C();
      sub_1AE7EA564();
      sub_1AE7EA7F4();
      sub_1AE7EAB38();
      if (v260)
      {
        sub_1AE7EA7D4();
        v634 = v391;
        sub_1AE4F81B8();
        goto LABEL_326;
      }
    }
LABEL_477:
    __break(1u);
LABEL_478:
    __break(1u);
LABEL_479:
    __break(1u);
    goto LABEL_480;
  }
  sub_1AE7EAEB4();
  v634 = v392;
LABEL_326:
  v393 = *(_QWORD *)(v663 + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerRelativeSpeed);
  v394 = *(_QWORD *)(v393 + 16);
  if (v394)
  {
    v678 = MEMORY[0x1E0DEE9D8];
    sub_1AE4F6708();
    sub_1AE69015C();
    v395 = sub_1AE64A338(v393);
    v397 = v396;
    v399 = v398 & 1;
    v669 = (_QWORD *)(v393 + 64);
    sub_1AE4F77B8(v395, &qword_1EED9A688);
    while ((v395 & 0x8000000000000000) == 0)
    {
      sub_1AE7EA5B8();
      if (v199 == v200)
        break;
      sub_1AE7EA71C();
      if ((v400 & 1) == 0)
        goto LABEL_481;
      if (*(_DWORD *)(v393 + 36) != v397)
        goto LABEL_482;
      v401 = sub_1AE7EAFDC(*(_QWORD *)(v393 + 48));
      sub_1AE7E7440(v402, (SEL *)&selRef_initWithBucket_bucketValue_, v401);
      sub_1AE7EA55C();
      sub_1AE50A694();
      sub_1AE7EA68C();
      sub_1AE7EA564();
      v395 = sub_1AE7EADA8(v395, v397, v399 & 1);
      v397 = v403;
      v399 = v404 & 1;
      if (!--v394)
      {
        sub_1AE7EA7D4();
        v633 = v405;
        sub_1AE4F76D8();
        goto LABEL_336;
      }
    }
LABEL_480:
    __break(1u);
LABEL_481:
    __break(1u);
LABEL_482:
    __break(1u);
    goto LABEL_483;
  }
  sub_1AE7EAE94();
  v633 = v406;
LABEL_336:
  v407 = *(_QWORD *)(v663 + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerRoadType);
  v408 = *(_QWORD *)(v407 + 16);
  if (v408)
  {
    v678 = MEMORY[0x1E0DEE9D8];
    sub_1AE4F6708();
    sub_1AE68FD90();
    v409 = sub_1AE64A338(v407);
    v411 = v410;
    v413 = v412 & 1;
    v669 = (_QWORD *)(v407 + 64);
    sub_1AE4F77B8(v409, &qword_1EED9A690);
    while ((v409 & 0x8000000000000000) == 0 && v409 < 1 << *(_BYTE *)(v407 + 32))
    {
      if (((*(_QWORD *)((char *)v669 + (((unint64_t)v409 >> 3) & 0xFFFFFFFFFFFFF8)) >> v409) & 1) == 0)
        goto LABEL_484;
      if (*(_DWORD *)(v407 + 36) != v411)
        goto LABEL_485;
      v414 = *(double *)(*(_QWORD *)(v407 + 56) + 8 * v409);
      v677 = *(_BYTE *)(*(_QWORD *)(v407 + 48) + v409);
      v415 = sub_1AE7D7994();
      sub_1AE7E7440(v415, (SEL *)&selRef_initWithType_typeValue_, v414);
      sub_1AE7EA55C();
      sub_1AE50A694();
      sub_1AE7EA68C();
      sub_1AE7EA564();
      v416 = sub_1AE7EADA8(v409, v411, v413 & 1);
      v409 = v416;
      v411 = v417;
      v413 = v418 & 1;
      if (!--v408)
      {
        sub_1AE5CDFE8(v416, v417, v418 & 1);
        v632 = v678;
        sub_1AE4F76D8();
        goto LABEL_345;
      }
    }
LABEL_483:
    __break(1u);
LABEL_484:
    __break(1u);
LABEL_485:
    __break(1u);
LABEL_486:
    __break(1u);
LABEL_487:
    __break(1u);
LABEL_488:
    __break(1u);
LABEL_489:
    __break(1u);
    goto LABEL_490;
  }
  sub_1AE7EAE9C();
  v632 = v419;
LABEL_345:
  v420 = *(_QWORD *)(v663 + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_scorePerWeatherType);
  v421 = *(_QWORD *)(v420 + 16);
  if (v421)
  {
    v678 = MEMORY[0x1E0DEE9D8];
    sub_1AE4F6708();
    sub_1AE68FD90();
    v422 = sub_1AE64A338(v420);
    v424 = v423;
    v426 = v425 & 1;
    v669 = (_QWORD *)(v420 + 64);
    sub_1AE4F77B8(v422, &qword_1EED9A698);
    while ((v422 & 0x8000000000000000) == 0 && v422 < 1 << *(_BYTE *)(v420 + 32))
    {
      if (((*(_QWORD *)((char *)v669 + (((unint64_t)v422 >> 3) & 0xFFFFFFFFFFFFF8)) >> v422) & 1) == 0)
        goto LABEL_487;
      if (*(_DWORD *)(v420 + 36) != v424)
        goto LABEL_488;
      v427 = *(double *)(*(_QWORD *)(v420 + 56) + 8 * v422);
      v677 = *(_BYTE *)(*(_QWORD *)(v420 + 48) + v422);
      v428 = sub_1AE7D7E20();
      sub_1AE7E7440(v428, (SEL *)&selRef_initWithType_typeValue_, v427);
      sub_1AE7EA55C();
      sub_1AE50A694();
      sub_1AE7EA68C();
      sub_1AE7EA564();
      v429 = sub_1AE7EADA8(v422, v424, v426 & 1);
      v422 = v429;
      v424 = v430;
      v426 = v431 & 1;
      if (!--v421)
      {
        sub_1AE5CDFE8(v429, v430, v431 & 1);
        v631 = (char *)v678;
        sub_1AE4F76D8();
        goto LABEL_354;
      }
    }
    goto LABEL_486;
  }
  sub_1AE7EAEA4();
  v631 = v432;
LABEL_354:
  v433 = v663;
  v434 = sub_1AE4F66CC();
  v435 = sub_1AE7D5B98(v434);
  sub_1AE4F9038();
  v669 = *(_QWORD **)(v433 + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_routeHeatMap);
  v630 = (char *)v435;
  if (v669 && (v436 = v669[2]) != 0)
  {
    v678 = MEMORY[0x1E0DEE9D8];
    v437 = (uint64_t)v669;
    sub_1AE4F66C4();
    sub_1AE7E971C(v436, (uint64_t (*)(void))sub_1AE52232C);
    v438 = sub_1AE64A338(v437);
    v440 = v439;
    v442 = v441 & 1;
    v667 = sub_1AE4F77B8(v438, &qword_1EED9A668);
    v666 = (char *)sub_1AE4F77B8(v667, (unint64_t *)&qword_1ED318F50);
    v443 = (uint64_t)v586;
    do
    {
      v668 = v436;
      v444 = v440;
      v445 = v438;
      v446 = v588;
      v447 = *(int *)(v588 + 48);
      v448 = v442 & 1;
      v449 = v584;
      sub_1AE56C9F0(v584, v438, v444, v448, (uint64_t)v669);
      v451 = v450;
      *(_QWORD *)(v449 + v447) = v450;
      v452 = v585;
      sub_1AE640264(v449, v585);
      *(_QWORD *)(v452 + *(int *)(v446 + 48)) = v451;
      sub_1AE7EB294(v452, v443);
      sub_1AE52FBE8(v449, (uint64_t *)&qword_1EEDA3370);
      v453 = *(int *)(v446 + 48);
      v454 = v587;
      sub_1AE640264(v443, v587);
      v455 = *(_QWORD *)(v443 + v453);
      v456 = CLLocation.init(model:)(v454);
      v457 = sub_1AE62C8FC(v455);
      sub_1AE52FBE8(v443, (uint64_t *)&qword_1EEDA3370);
      sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE52232C);
      v458 = *(_QWORD *)(v678 + 16);
      sub_1AE7E9998(v458, (uint64_t (*)(BOOL))sub_1AE52232C);
      v459 = v678;
      *(_QWORD *)(v678 + 16) = v458 + 1;
      v460 = v459 + 16 * v458;
      v461 = v668;
      *(_QWORD *)(v460 + 32) = v456;
      *(_QWORD *)(v460 + 40) = v457;
      v438 = sub_1AE7E9FC0(v445, v444, v448, (uint64_t)v669);
      v440 = v462;
      v442 = v463 & 1;
      sub_1AE5CDFE8(v445, v444, v448);
      v436 = v461 - 1;
    }
    while (v436);
    v464 = sub_1AE7EAB90();
    sub_1AE5CDFE8(v464, v465, v442);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE519B38(0);
    v459 = v466;
  }
  sub_1AE62C3F0(v459);
  v468 = v467;
  v469 = v663;
  v470 = (_QWORD *)v673[2];
  v471 = v672;
  sub_1AE7EAD44(v583, v663 + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_maxTripDistanceInMeters);
  sub_1AE7EAD44(v573, v469 + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgTripDistanceInMeters);
  sub_1AE7EAD44(v574, v469 + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_maxElevationGainInMeters);
  sub_1AE7EAD44(v575, v469 + OBJC_IVAR____TtC20IntelligencePlatform30KTSDataAggregateRepresentation_avgElevationGainInMeters);
  v472 = v572;
  v473 = *(void (**)(_QWORD, _QWORD, _QWORD))(v571 + 16);
  v473(v567, v569, v572);
  v473(v568, v570, v472);
  v474 = v469 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceInMeters;
  sub_1AE500FE4();
  sub_1AE7EAD44(v576, v474);
  v475 = v469 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_elevationGainInMeters;
  sub_1AE500FE4();
  v669 = v470;
  ((void (*)(uint64_t, uint64_t, uint64_t))v470)(v577, v475, v471);
  v476 = v469 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_durationInSeconds;
  sub_1AE500FE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v671 + 16))(v579, v476, v670);
  sub_1AE500FE4();
  sub_1AE7EAEBC(v580);
  v477 = v469 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_averageSpeedInMetersPerSecond;
  sub_1AE500FE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v563 + 16))(v578, v477, v564);
  sub_1AE500FE4();
  sub_1AE500FE4();
  sub_1AE7EAEBC(v581);
  sub_1AE500FE4();
  sub_1AE7EAEBC(v582);
  v478 = (uint64_t *)(v469 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_numBrakingEvents);
  sub_1AE500FE4();
  sub_1AE7EA778();
  if (v199 != v200)
    goto LABEL_492;
  sub_1AE7EAC18();
  if (!(v199 ^ v200 | v260))
    goto LABEL_493;
  v671 = v479;
  sub_1AE7EA604();
  sub_1AE500FE4();
  sub_1AE7EA778();
  if (v199 != v200)
  {
LABEL_494:
    __break(1u);
LABEL_495:
    __break(1u);
    goto LABEL_496;
  }
  sub_1AE7EAC18();
  if (!(v199 ^ v200 | v260))
    goto LABEL_495;
  v670 = v480;
  sub_1AE7EA604();
  sub_1AE500FE4();
  sub_1AE7EA778();
  if (v199 != v200)
  {
LABEL_496:
    __break(1u);
LABEL_497:
    __break(1u);
    goto LABEL_498;
  }
  sub_1AE7EAC18();
  if (!(v199 ^ v200 | v260))
    goto LABEL_497;
  v667 = v481;
  v668 = v468;
  sub_1AE7EA604();
  sub_1AE500FE4();
  v482 = *v478;
  if (!*v478)
  {
    v491 = 0;
    goto LABEL_382;
  }
  v483 = sub_1AE5B7810(*v478);
  if (!v483)
  {
    sub_1AE519B24(0);
    v491 = v492;
LABEL_382:
    sub_1AE7EA604();
    sub_1AE500FE4();
    v493 = *v478;
    v666 = v491;
    if (v493)
    {
      v494 = sub_1AE5B7810(v493);
      if (v494)
      {
        v495 = v494;
        v676 = MEMORY[0x1E0DEE9D8];
        sub_1AE4F6804();
        v496 = sub_1AE9269DC();
        if (v495 < 0)
          goto LABEL_500;
        sub_1AE4F77B8(v496, &qword_1EED94D28);
        v497 = sub_1AE7EB668();
        v498 = 0;
        while (v495 != v498)
        {
          if ((v497 & 1) != 0)
          {
            v499 = *(_QWORD *)(v493 + 8 * v498 + 32);
          }
          else
          {
            v499 = sub_1AE7EB598();
            swift_unknownObjectRelease();
          }
          v674 = v499;
          v500 = EntityIdentifier.stringValue.getter();
          if (!sub_1AE7E748C(v500, v501))
            goto LABEL_502;
          ++v498;
          sub_1AE9269B8();
          sub_1AE7EA4B8();
          sub_1AE7EB558();
          sub_1AE9269C4();
          if (v495 == v498)
          {
            v629 = v676;
            sub_1AE4F67AC();
            goto LABEL_395;
          }
        }
        goto LABEL_491;
      }
      sub_1AE519B24(0);
      v629 = v502;
    }
    else
    {
      v629 = 0;
    }
LABEL_395:
    v503 = v559;
    ((void (*)(uint64_t, uint64_t, uint64_t))v669)(v559, v583, v672);
    v504 = v560;
    v505 = v573;
    sub_1AE7EAA0C(v560, v573);
    v506 = v561;
    v507 = v574;
    sub_1AE7EAA0C(v561, v574);
    v508 = v562;
    v509 = v575;
    sub_1AE7EAA0C(v562, v575);
    v510 = objc_allocWithZone((Class)GDKTSDataAggregateRepresentation);
    v557 = v668;
    v556 = (uint64_t)v630;
    v555 = (uint64_t)v631;
    v554 = v632;
    v553 = (uint64_t)v633;
    v552 = (uint64_t)v634;
    v551 = (uint64_t)v635;
    v550 = (uint64_t)v636;
    v549 = (uint64_t)v637;
    v548 = (uint64_t)v638;
    v547 = (uint64_t)v639;
    v546 = (uint64_t)v640;
    v545 = (uint64_t)v641;
    v544 = v642;
    v543 = (uint64_t)v643;
    v542 = (uint64_t)v644;
    v541 = (uint64_t)v645;
    v540 = (uint64_t)v646;
    v539 = (uint64_t)v647;
    v538 = v629;
    v537 = (uint64_t)v666;
    v536 = v648;
    v535 = (uint64_t)v664;
    v534 = (uint64_t)v649;
    v533 = (uint64_t)v650;
    v532 = v662;
    v531 = v667;
    v530 = __PAIR64__(v670, v671);
    v529 = v582;
    v528 = v581;
    v527 = v578;
    v526 = v654;
    v525 = (uint64_t)v661;
    v524 = (uint64_t)v652;
    v523 = (uint64_t)v653;
    v522 = v665;
    v521 = (uint64_t)v651;
    v520 = v655;
    v519 = v656;
    v518 = (uint64_t)v657;
    v517 = (uint64_t)v658;
    v511 = sub_1AE7EAE78();
    sub_1AE7E7F80(v567, v568, v576, v577, v511, v512, v513, v514, v515, v558, v579, v580, (uint64_t)v660, v516, v517, v518, v519, v520, v521,
      v522,
      v523,
      v524,
      v525,
      v526,
      v527,
      v528,
      v529,
      v530,
      v531,
      v532,
      v533,
      v534,
      v535,
      v536,
      v537,
      v538,
      v503,
      v504,
      v506,
      v508,
      v539,
      v540,
      v541,
      v542,
      v543,
      v544,
      v545,
      v546,
      v547,
      v548,
      v549,
      v550,
      v551,
      v552,
      v553,
      v554,
      v555,
      v556,
      v557);
    sub_1AE7EA91C(v509);
    sub_1AE7EA91C(v507);
    sub_1AE7EA91C(v505);
    sub_1AE7EA91C(v583);
    sub_1AE7EA91C(v570);
    sub_1AE7EA91C(v569);
    return;
  }
  v484 = v483;
  v675 = (char *)MEMORY[0x1E0DEE9D8];
  sub_1AE4F6804();
  v485 = sub_1AE690468();
  if ((v484 & 0x8000000000000000) == 0)
  {
    sub_1AE4F77B8(v485, &qword_1EED94D28);
    v486 = sub_1AE7EB668();
    v487 = 0;
    while (v484 != v487)
    {
      if ((v486 & 1) != 0)
      {
        v488 = *(_QWORD *)(v482 + 8 * v487 + 32);
      }
      else
      {
        v488 = sub_1AE7EB598();
        swift_unknownObjectRelease();
      }
      v676 = v488;
      v489 = EntityIdentifier.stringValue.getter();
      if (!sub_1AE7E748C(v489, v490))
        goto LABEL_501;
      ++v487;
      sub_1AE9269B8();
      sub_1AE7EA48C();
      sub_1AE7EB558();
      v478 = (uint64_t *)&v675;
      sub_1AE9269C4();
      if (v484 == v487)
      {
        v491 = v675;
        sub_1AE4F67AC();
        goto LABEL_382;
      }
    }
LABEL_490:
    __break(1u);
LABEL_491:
    __break(1u);
LABEL_492:
    __break(1u);
LABEL_493:
    __break(1u);
    goto LABEL_494;
  }
LABEL_499:
  __break(1u);
LABEL_500:
  __break(1u);
LABEL_501:
  __break(1u);
LABEL_502:
  __break(1u);
}

void sub_1AE7E35CC()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  os_log_type_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  sub_1AE4F67EC();
  v76 = v3;
  v77 = v4;
  v6 = v5;
  v8 = sub_1AE4FB8E8(v7, sel_identifier);
  v9 = sub_1AE925E3C();
  v11 = v10;

  v13 = sub_1AE4FB8E8(v12, sel_context);
  objc_opt_self();
  v14 = swift_dynamicCastObjCClass();
  if (v14)
  {
    v15 = sub_1AE4FB8E8(v14, sel_data);
    sub_1AE7E38D0();
    if (v1)
    {
      sub_1AE4F81B8();
      sub_1AE4FC5B4();

    }
    else
    {
      v40 = v16;
      sub_1AE7DB084(v16, v17, v18, v19, v20, v21, v22, v23, v48, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59,
        v60,
        v61,
        v62,
        v63,
        v64,
        v65,
        v66,
        v67,
        v68);
      v42 = v41;
      sub_1AE4FC5B4();

      sub_1AE7EA378(&v50);
      sub_1AE7EA350((uint64_t)&v50, (uint64_t)&v69, &qword_1EEDA3400);
      v71 = v42;
      v72 = v40;
      v73 = v9;
      v74 = v11;
      sub_1AE7EB1A4(v6, &v69);
    }
  }
  else
  {
    sub_1AE4F81B8();
    sub_1AE4FC5B4();
    if (qword_1EED99830 != -1)
      swift_once();
    v24 = sub_1AE4F6854();
    v25 = (void *)sub_1AE4FB608(v24, (uint64_t)qword_1EED9F800);
    v26 = v0;
    sub_1AE925B54();
    v27 = sub_1AE4FCF04();
    if (sub_1AE4FB89C(v27))
    {
      sub_1AE4F66A0();
      v75 = sub_1AE4F66A0();
      v69 = v75;
      sub_1AE7EAFA4(4.8149e-34);
      v49 = v28;
      v29 = v26;
      v30 = objc_msgSend(v29, sel_description);
      sub_1AE7EB5A4();
      sub_1AE7EAD88();

      sub_1AE7EB3F4((uint64_t)v26, v31, (uint64_t)&v69, v32, v33, v34, v35, v36, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59,
        v60);
      v50 = v37;
      sub_1AE7EB624();

      sub_1AE4F6648();
      sub_1AE563344(&dword_1AE4F2000, v38, v39, "Couldn't convert to aggregate representation: %s.");
      sub_1AE7EA8E8();
      sub_1AE4F9064();
    }

    sub_1AE92691C();
    swift_bridgeObjectRelease();
    v69 = 0xD00000000000002ELL;
    v70 = 0x80000001AE9863E0;
    v43 = objc_msgSend(v26, sel_description);
    sub_1AE7EB280();
    sub_1AE7EAED4();

    sub_1AE7EAD4C();
    sub_1AE4F76D8();
    sub_1AE507768();
    v44 = v69;
    v45 = v70;
    sub_1AE7D2544();
    v46 = sub_1AE4F6778();
    *v47 = v44;
    v47[1] = v45;
    sub_1AE7EA4D0(v46, (uint64_t)v47);
  }
}

void sub_1AE7E38D0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;

  sub_1AE7EAD94();
  sub_1AE4FCE84();
  v1 = sub_1AE9243B4();
  v2 = sub_1AE507664(v1, sel_originContexts);
  sub_1AE9261CC();

  sub_1AE4FCFE8();
  sub_1AE7EA734();
  if (v0)
  {
    sub_1AE4F6700();
    sub_1AE4F66E8();
  }
  else
  {
    v3 = sub_1AE4F66E8();
    v4 = sub_1AE507664(v3, sel_ktsContexts);
    sub_1AE9261CC();

    sub_1AE4FCFE8();
    sub_1AE7EA734();
    v5 = sub_1AE4F6728();
    v6 = sub_1AE507664(v5, sel_destinationContexts);
    sub_1AE9261CC();

    sub_1AE4FCFE8();
    sub_1AE7EA734();
    sub_1AE4F6728();
    type metadata accessor for KTSContextAggregateRepresentation();
    sub_1AE4F66BC();
    sub_1AE7EB65C();
    v7 = sub_1AE7EB154();
    KTSContextAggregateRepresentation.init(originContexts:ktsContexts:destinationContexts:graphLifeEventContext:)(v7);
    sub_1AE4F6700();
  }
  sub_1AE4FD94C();
}

void sub_1AE7E3A38(void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  __int128 v35;
  uint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  id v39;
  os_log_type_t v40;
  uint8_t *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  _OWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint8_t *buf;
  uint8_t *bufa;
  uint8_t *bufb;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  uint64_t v70;
  uint64_t v71;

  v5 = v2;
  v8 = sub_1AE507664((uint64_t)a1, sel_identifier);
  v9 = (void *)sub_1AE925E3C();

  v11 = sub_1AE507664(v10, sel_context);
  objc_opt_self();
  v12 = sub_1AE7EA8FC();
  if (v12)
  {
    v13 = sub_1AE507664(v12, sel_data);
    sub_1AE7E38D0();
    if (v3)
    {
      sub_1AE4F6710();
      sub_1AE50327C();

      return;
    }
    v30 = v14;
    v31 = v13;
    sub_1AE7D7F98();
    v32 = sub_1AE614A44();
    type metadata accessor for KTSDataAggregateRepresentation(v32);
    sub_1AE7EAC0C();
    if (swift_dynamicCastClass())
    {
      v67 = 0;
      v65 = 0u;
      v66 = 0u;
      sub_1AE50668C();
      KTSData.init(identifier:data:context:metadata:)();
      v31 = v69;
      if (v69)
      {
        v33 = v70;

        sub_1AE50327C();
        sub_1AE4FDCE8();
        *a2 = v68;
        a2[1] = v31;
        a2[2] = v33;
        return;
      }
    }
    else
    {
      sub_1AE4F6710();
      swift_release();
    }
    if (qword_1EED99830 != -1)
      swift_once();
    v71 = v30;
    v38 = sub_1AE4F6854();
    sub_1AE4FB608(v38, (uint64_t)qword_1EED9F800);
    v39 = sub_1AE7EAC80();
    sub_1AE7EB050();
    v40 = sub_1AE4FCF04();
    if (sub_1AE7EAF00(v40))
    {
      v41 = (uint8_t *)sub_1AE4F66A0();
      v62 = sub_1AE4F66A0();
      *(_QWORD *)&v65 = v62;
      *(_DWORD *)v41 = 136315138;
      v57 = (uint64_t)(v41 + 4);
      bufa = v41;
      v64 = (uint64_t)v5;
      v42 = v5;
      v43 = objc_msgSend(v42, sel_description);
      v44 = sub_1AE925E3C();
      v46 = v45;

      sub_1AE520ED4(v44, v46, (uint64_t)&v65, v47, v48, v49, v50, v51, v57, (unint64_t)bufa, v62, v64, v65, *((uint64_t *)&v65 + 1), v66, *((uint64_t *)&v66 + 1), v67, v68, (uint64_t)v69,
        v70);
      sub_1AE7EB43C();
      sub_1AE92676C();

      sub_1AE4F76D8();
      _os_log_impl(&dword_1AE4F2000, v31, OS_LOG_TYPE_DEFAULT, "Couldn't make a KTSSliceData object: %s.", bufb, 0xCu);
      swift_arrayDestroy();
      sub_1AE4F9064();
    }

    *(_QWORD *)&v65 = 0;
    *((_QWORD *)&v65 + 1) = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    v52 = sub_1AE7EB16C();
    v53 = objc_msgSend(v52, sel_description);
    sub_1AE925E3C();

    sub_1AE925F74();
    sub_1AE4F66E8();
    sub_1AE507768();
    sub_1AE7D2544();
    v54 = sub_1AE4F6778();
    *v55 = v65;
    sub_1AE7EA4D0(v54, (uint64_t)v55);
    sub_1AE50327C();

    swift_release();
  }
  else
  {
    sub_1AE4F6710();
    sub_1AE50327C();
    if (qword_1EED99830 != -1)
      swift_once();
    v15 = sub_1AE4F6854();
    sub_1AE4FB608(v15, (uint64_t)qword_1EED9F800);
    v16 = sub_1AE7EAC80();
    sub_1AE7EB050();
    v17 = sub_1AE4FCF04();
    if (sub_1AE4FB89C(v17))
    {
      sub_1AE4F66A0();
      v71 = sub_1AE4F66A0();
      sub_1AE7EAFA4(4.8149e-34);
      v63 = v19;
      *(_QWORD *)&v65 = v18;
      v20 = v5;
      v21 = objc_msgSend(v20, sel_description);
      sub_1AE7EB5A4();
      sub_1AE7EAD88();

      sub_1AE7EB3F4(v4, v22, (uint64_t)&v65, v23, v24, v25, v26, v27, v56, (unint64_t)buf, v61, v63, v65, *((uint64_t *)&v65 + 1), v66, *((uint64_t *)&v66 + 1), v67, v68, (uint64_t)v69,
        v70);
      sub_1AE7EB43C();
      sub_1AE7EB624();

      sub_1AE4F6648();
      sub_1AE563344(&dword_1AE4F2000, v28, v29, "Couldn't convert to aggregate representation: %s.");
      sub_1AE7EA8E8();
      sub_1AE4F9064();
    }

    *(_QWORD *)&v65 = 0;
    *((_QWORD *)&v65 + 1) = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    v34 = objc_msgSend(sub_1AE7EB16C(), sel_description);
    sub_1AE7EB280();
    sub_1AE7EAED4();

    sub_1AE7EAD4C();
    sub_1AE4F76D8();
    sub_1AE507768();
    v35 = v65;
    sub_1AE7D2544();
    v36 = sub_1AE4F6778();
    *v37 = v35;
    sub_1AE7EA4D0(v36, (uint64_t)v37);
  }
}

uint64_t sub_1AE7E3F60@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  id v19;
  os_log_type_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  id v46;
  os_log_type_t v47;
  _DWORD *v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint8_t *buf;
  uint8_t *bufa;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  __int128 v81;
  uint64_t v82;
  _QWORD *v83;

  v5 = v2;
  v7 = sub_1AE507664(a1, sel_identifier);
  sub_1AE925E3C();
  v9 = v8;

  v11 = sub_1AE507664(v10, sel_context);
  objc_opt_self();
  v12 = sub_1AE7EA8FC();
  if (v12)
  {
    v83 = a2;
    v13 = sub_1AE507664(v12, sel_data);
    sub_1AE7D7F98();
    v15 = v14;

    sub_1AE7E44E4();
    if (v3)
    {
      sub_1AE4F6728();
      sub_1AE50327C();
      return swift_release();
    }
    v32 = v16;
    v33 = sub_1AE507664(v16, sel_segmentId);
    v72 = v32;
    v34 = sub_1AE925E3C();
    v36 = v35;

    v75 = v36;
    swift_retain();
    swift_retain();
    KTSSegmentData.init(identifier:data:context:metadata:)();
    v37 = v80;
    if (!v80)
    {
      if (qword_1EED99830 != -1)
        swift_once();
      v45 = sub_1AE4F6854();
      sub_1AE4FB608(v45, (uint64_t)qword_1EED9F800);
      v46 = sub_1AE7EAC80();
      sub_1AE7EB050();
      v47 = sub_1AE4FCF04();
      if (sub_1AE7EAF00(v47))
      {
        v48 = (_DWORD *)sub_1AE4F66A0();
        v68 = sub_1AE4F66A0();
        v79 = v68;
        *v48 = 136315138;
        v83 = v15;
        v49 = v5;
        v50 = objc_msgSend(v49, sel_description);
        v51 = sub_1AE925E3C();
        v53 = v52;

        sub_1AE520ED4(v51, v53, (uint64_t)&v79, v54, v55, v56, v57, v58, (uint64_t)(v48 + 1), (unint64_t)v48, v68, v69, v70, v72, v34, v75, v76, (uint64_t)&type metadata for KTSSegmentData.Metadata, (uint64_t)&protocol witness table for KTSSegmentData.Metadata,
          v79);
        sub_1AE7EAB6C();
        sub_1AE92676C();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1AE4F2000, 0, (os_log_type_t)v9, "Couldn't make a KTSData object: %s.", bufa, 0xCu);
        swift_arrayDestroy();
        sub_1AE4F9064();
      }

      sub_1AE92691C();
      swift_bridgeObjectRelease();
      v59 = sub_1AE7EB17C();
      v60 = objc_msgSend(v59, sel_description);
      sub_1AE925E3C();

      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE507768();
      sub_1AE7D2544();
      v61 = sub_1AE4F6778();
      *v62 = 0;
      v62[1] = 0xE000000000000000;
      sub_1AE7EA4D0(v61, (uint64_t)v62);
      sub_1AE50327C();
      swift_release();
      return swift_release();
    }
    v38 = v82;
    v67 = v81;
    sub_1AE50327C();
    sub_1AE507978();
    result = swift_release();
    v39 = v83;
    *v83 = v79;
    v39[1] = v37;
    *((_OWORD *)v39 + 1) = v67;
    v39[4] = v38;
  }
  else
  {
    sub_1AE4F6728();
    sub_1AE50327C();
    if (qword_1EED99830 != -1)
      swift_once();
    v18 = sub_1AE4F6854();
    sub_1AE4FB608(v18, (uint64_t)qword_1EED9F800);
    v19 = sub_1AE7EAC80();
    sub_1AE7EB050();
    v20 = sub_1AE4FCF04();
    if (sub_1AE4FB89C(v20))
    {
      sub_1AE4F66A0();
      v83 = (_QWORD *)sub_1AE4F66A0();
      sub_1AE7EAFA4(4.8149e-34);
      v71 = v21;
      v22 = v5;
      v23 = objc_msgSend(v22, sel_description);
      sub_1AE7EB5A4();
      sub_1AE7EAD88();

      sub_1AE7EB3F4(v9, v24, (uint64_t)&v79, v25, v26, v27, v28, v29, v63, (unint64_t)buf, v66, v69, v70, v71, v73, v74, v76, v77, v78,
        (uint64_t)v83);
      sub_1AE7EAB6C();
      sub_1AE7EB624();

      sub_1AE4F6648();
      sub_1AE563344(&dword_1AE4F2000, v30, v31, "Couldn't convert to context representation: %s.");
      sub_1AE7EA8E8();
      sub_1AE4F9064();
    }

    v79 = 0;
    v80 = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    v40 = objc_msgSend(sub_1AE7EB17C(), sel_description);
    sub_1AE7EB280();
    sub_1AE7EAED4();

    sub_1AE7EAD4C();
    sub_1AE4F76D8();
    sub_1AE507768();
    v41 = v79;
    v42 = v80;
    sub_1AE7D2544();
    v43 = sub_1AE4F6778();
    *v44 = v41;
    v44[1] = v42;
    return sub_1AE7EA4D0(v43, (uint64_t)v44);
  }
  return result;
}

void sub_1AE7E44E4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1AE7EAD94();
  sub_1AE4FCE84();
  v1 = sub_1AE9243B4();
  v2 = sub_1AE507664(v1, sel_originContext);
  sub_1AE9261CC();

  sub_1AE4FCFE8();
  sub_1AE7EA734();
  if (v0)
  {
    sub_1AE4F6700();
    sub_1AE4F66E8();
  }
  else
  {
    v3 = sub_1AE4F66E8();
    v4 = sub_1AE507664(v3, sel_ktsContext);
    sub_1AE9261CC();

    sub_1AE4FCFE8();
    sub_1AE7EA734();
    v5 = sub_1AE4F6728();
    v6 = sub_1AE507664(v5, sel_destinationContext);
    sub_1AE9261CC();

    sub_1AE4FCFE8();
    sub_1AE7EA734();
    sub_1AE4F6728();
    type metadata accessor for KTSContextRepresentation();
    sub_1AE4F66BC();
    sub_1AE7EB65C();
    v7 = sub_1AE7EB154();
    KTSContextRepresentation.init(originContext:ktsContext:destinationContext:graphLifeEventContext:)(v7, v8, v9, v10);
    sub_1AE4F6700();
  }
  sub_1AE4FD94C();
}

uint64_t sub_1AE7E464C()
{
  return sub_1AE7E4670((Class *)off_1E5DA2348, (SEL *)&selRef_initWithOriginContext_ktsContext_destinationContext_);
}

uint64_t sub_1AE7E4670(Class *a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  sub_1AE924408();
  v5 = sub_1AE4FCE84();
  sub_1AE9243FC();
  swift_retain();
  v6 = sub_1AE4F67A4();
  sub_1AE7EAEC8(v6);
  if (v2)
  {
    sub_1AE4F682C();
    sub_1AE4F6728();
  }
  else
  {
    sub_1AE4F6728();
    sub_1AE50668C();
    v7 = swift_bridgeObjectRetain();
    sub_1AE7EAEC8(v7);
    sub_1AE4F6710();
    sub_1AE50668C();
    v8 = swift_bridgeObjectRetain();
    v10 = sub_1AE7EAEC8(v8);
    sub_1AE4F66E8();
    v11 = objc_allocWithZone(*a1);
    v12 = sub_1AE7EAB90();
    v5 = (uint64_t)sub_1AE7E76D4(v12, v13, v10, a2);
    sub_1AE4F682C();
  }
  return v5;
}

void sub_1AE7E4790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  _BYTE *v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  int v168;
  unint64_t v169;
  int v170;
  uint64_t *v171;
  uint64_t *v172;
  char v173;
  char v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  _BYTE *v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  _BYTE *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  _BYTE *v200;
  void (*v201)(uint64_t);
  uint64_t v202;
  uint64_t v203;
  char v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t v207;
  char v208;
  uint64_t v209;
  int v210;
  char v211;
  uint64_t v212;
  uint64_t v213;
  char v214;
  _BYTE *v215;
  uint64_t v216;
  unsigned __int8 *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char v224;
  _BYTE **v225;
  _BYTE *v226;
  uint64_t v227;
  char v228;
  uint64_t v229;
  char v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  int v234;
  _BYTE *v235;
  uint64_t v236;
  unsigned __int8 *v237;
  uint64_t v238;
  uint64_t v239;
  _BYTE *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t v247;
  char v248;
  uint64_t v249;
  char v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  int v254;
  _BYTE *v255;
  uint64_t v256;
  unsigned __int8 *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  _BYTE *v261;
  uint64_t v262;
  uint64_t v263;
  char v264;
  uint64_t v265;
  _BYTE *v266;
  uint64_t v267;
  _BYTE *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  int v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char v276;
  _QWORD *v277;
  uint64_t v278;
  _BYTE *v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char v285;
  uint64_t v286;
  _BYTE *v287;
  _BYTE *v288;
  void (*v289)(_QWORD);
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  char v294;
  char v295;
  char v296;
  uint64_t v297;
  int v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char v305;
  uint64_t v306;
  _BYTE *v307;
  uint64_t v308;
  uint64_t v309;
  _BYTE *v310;
  uint64_t v311;
  char v312;
  uint64_t v313;
  void (*v314)(uint64_t);
  _BYTE *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char v320;
  char v321;
  uint64_t v322;
  char v323;
  uint64_t v324;
  int v325;
  uint64_t v326;
  uint64_t v327;
  char v328;
  uint64_t v329;
  _BYTE *v330;
  uint64_t v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  char v335;
  _BYTE *v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char v340;
  char v341;
  uint64_t v342;
  int v343;
  uint64_t v344;
  uint64_t v345;
  char v346;
  uint64_t v347;
  _BYTE *v348;
  uint64_t v349;
  char *v350;
  uint64_t v351;
  uint64_t v352;
  char v353;
  _BYTE *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  char v358;
  char v359;
  uint64_t v360;
  int v361;
  uint64_t v362;
  uint64_t v363;
  char v364;
  uint64_t v365;
  _BYTE *v366;
  uint64_t v367;
  char *v368;
  uint64_t v369;
  uint64_t v370;
  char v371;
  _BYTE *v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  char v376;
  char v377;
  uint64_t v378;
  int v379;
  uint64_t v380;
  uint64_t v381;
  char v382;
  uint64_t v383;
  _BYTE *v384;
  uint64_t v385;
  char *v386;
  uint64_t v387;
  uint64_t v388;
  char v389;
  _BYTE *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  char v394;
  uint64_t v395;
  char v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  int v401;
  uint64_t v402;
  char *v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  _BYTE *v409;
  uint64_t v410;
  uint64_t v411;
  char v412;
  uint64_t v413;
  char v414;
  char *v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  int v419;
  uint64_t v420;
  char *v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  _BYTE *v427;
  uint64_t v428;
  uint64_t v429;
  char v430;
  uint64_t *v431;
  uint64_t v432;
  uint64_t *v433;
  uint64_t v434;
  uint64_t *v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  void (*v450)(uint64_t, uint64_t, uint64_t);
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  double *v454;
  double v455;
  _QWORD *v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t *v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  id v465;
  uint64_t *v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  id v473;
  uint64_t v474;
  id v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  _BYTE *v498;
  _BYTE *v499;
  uint64_t v500;
  _BYTE *v501;
  char *v502;
  _BYTE *v503;
  char *v504;
  _BYTE *v505;
  _BYTE *v506;
  uint64_t v507;
  uint64_t v508;
  _BYTE *v509;
  char *v510;
  _BYTE *v511;
  _BYTE *v512;
  uint64_t v513;
  _BYTE *v514;
  _BYTE *v515;
  char *v516;
  char *v517;
  _BYTE *v518;
  uint64_t v519;
  _BYTE *v520;
  _BYTE *v521;
  char *v522;
  char *v523;
  _BYTE *v524;
  uint64_t v525;
  _BYTE *v526;
  _BYTE *v527;
  char *v528;
  char *v529;
  _BYTE *v530;
  uint64_t v531;
  _BYTE *v532;
  _BYTE *v533;
  char *v534;
  char *v535;
  _BYTE *v536;
  uint64_t v537;
  _BYTE *v538;
  _BYTE *v539;
  char *v540;
  char *v541;
  _BYTE *v542;
  unsigned __int8 *v543;
  _BYTE *v544;
  char *v545;
  uint64_t v546;
  uint64_t v547;
  _BYTE *v548;
  unsigned __int8 *v549;
  _BYTE *v550;
  _BYTE *v551;
  uint64_t v552;
  _BYTE *v553;
  _BYTE *v554;
  unsigned __int8 *v555;
  _BYTE *v556;
  uint64_t v557;
  _BYTE *v558;
  uint64_t v559;
  uint64_t v560;
  _BYTE *v561;
  _BYTE *v562;
  void (*v563)(uint64_t);
  _BYTE *v564;
  _BYTE *v565;
  uint64_t v566;
  _BYTE *v567;
  uint64_t v568;
  char *v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  _QWORD *v576;
  uint64_t v577;
  uint64_t v578;
  unint64_t v579;
  uint64_t v580;
  unint64_t v581;
  uint64_t v582;
  uint64_t v583;
  _QWORD v584[3];
  _QWORD v585[3];
  _BYTE *v586;
  uint64_t v587;
  uint64_t v588;
  _BYTE *v589;
  _BYTE *v590;
  _QWORD v591[3];
  _QWORD v592[3];
  _BYTE *v593;
  _BYTE *v594;
  uint64_t v595;

  v6 = sub_1AE501548((uint64_t *)&unk_1EED9E340);
  v482 = *(_QWORD *)(v6 - 8);
  v483 = v6;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F686C();
  v496 = v8;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE5094B0();
  v495 = v10;
  v11 = sub_1AE501548(&qword_1EED9A888);
  v480 = *(_QWORD *)(v11 - 8);
  v481 = v11;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F9024();
  v493 = v13;
  v573 = sub_1AE501548(&qword_1EED9A850);
  v574 = *(_QWORD *)(v573 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F686C();
  v494 = v15;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE5094B0();
  v492 = v17;
  v575 = sub_1AE501548(&qword_1EED9E350);
  v576 = *(_QWORD **)(v575 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F686C();
  v491 = v19;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v20);
  sub_1AE5094B0();
  v490 = v21;
  v22 = sub_1AE7EB48C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  sub_1AE501F28();
  MEMORY[0x1E0C80A78](v24);
  sub_1AE507774();
  v507 = sub_1AE501548(&qword_1EEDA3248);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v25);
  sub_1AE4F686C();
  v506 = v26;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v27);
  sub_1AE4F6A60();
  v505 = v28;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v29);
  v504 = (char *)&v476 - v30;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v31);
  v503 = (char *)&v476 - v32;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v33);
  v502 = (char *)&v476 - v34;
  v513 = sub_1AE501548(&qword_1EEDA31F8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v35);
  sub_1AE4F686C();
  v512 = v36;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v37);
  sub_1AE4F6A60();
  v511 = v38;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v39);
  sub_1AE4F6A60();
  v510 = (char *)v40;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v41);
  sub_1AE4F6A60();
  v509 = v42;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v43);
  sub_1AE5094B0();
  v508 = v44;
  v519 = sub_1AE501548(&qword_1EEDA3218);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v45);
  sub_1AE4F686C();
  v518 = v46;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v47);
  sub_1AE4F6A60();
  v517 = v48;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v49);
  sub_1AE4F6A60();
  v516 = (char *)v50;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v51);
  v515 = (char *)&v476 - v52;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v53);
  sub_1AE5094B0();
  v514 = v54;
  v525 = sub_1AE501548(&qword_1EEDA31F0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v55);
  sub_1AE4F686C();
  v524 = v56;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v57);
  sub_1AE4F6A60();
  v523 = v58;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v59);
  sub_1AE4F6A60();
  v522 = (char *)v60;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v61);
  v521 = (char *)&v476 - v62;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v63);
  sub_1AE5094B0();
  v520 = v64;
  v531 = sub_1AE501548(&qword_1EEDA3230);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v65);
  sub_1AE4F686C();
  v530 = v66;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v67);
  sub_1AE4F6A60();
  v529 = v68;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v69);
  sub_1AE4F6A60();
  v528 = (char *)v70;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v71);
  v527 = (char *)&v476 - v72;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v73);
  sub_1AE5094B0();
  v526 = v74;
  v537 = sub_1AE501548(&qword_1EEDA31E8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v75);
  sub_1AE4F686C();
  v536 = v76;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v77);
  sub_1AE4F6A60();
  v535 = v78;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v79);
  sub_1AE4F6A60();
  v534 = (char *)v80;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v81);
  v533 = (char *)&v476 - v82;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v83);
  sub_1AE5094B0();
  v532 = v84;
  v568 = sub_1AE501548(&qword_1EEDA3200);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v85);
  sub_1AE4F686C();
  v501 = v86;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v87);
  sub_1AE4F6A60();
  v500 = v88;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v89);
  sub_1AE4F6A60();
  v499 = v90;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v91);
  sub_1AE4F6A60();
  v498 = v92;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v93);
  sub_1AE4F6A60();
  v567 = v94;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v95);
  sub_1AE4F6A60();
  v541 = v96;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v97);
  sub_1AE4F6A60();
  v540 = (char *)v98;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v99);
  v539 = (char *)&v476 - v100;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v101);
  sub_1AE5094B0();
  v538 = v102;
  v546 = sub_1AE501548(&qword_1EEDA32B8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v103);
  v545 = (char *)&v476 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v105);
  v544 = (char *)&v476 - v106;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v107);
  v543 = (unsigned __int8 *)&v476 - v108;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v109);
  v542 = (char *)&v476 - v110;
  sub_1AE4F9350();
  v112 = MEMORY[0x1E0C80A78](v111);
  sub_1AE7EB498(v112, v113, v114, v115, v116, v117, v118, v119, v476);
  v552 = sub_1AE501548(&qword_1EEDA3208);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v120);
  sub_1AE4F686C();
  v551 = v121;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v122);
  sub_1AE4F6A60();
  v550 = v123;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v124);
  v549 = (unsigned __int8 *)&v476 - v125;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v126);
  v548 = (char *)&v476 - v127;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v128);
  sub_1AE5094B0();
  v547 = v129;
  v558 = (_BYTE *)sub_1AE501548(&qword_1EEDA3290);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v130);
  sub_1AE4F686C();
  v557 = v131;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v132);
  v556 = (char *)&v476 - v133;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v134);
  sub_1AE4F6A60();
  v555 = (unsigned __int8 *)v135;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v136);
  v554 = (char *)&v476 - v137;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v138);
  sub_1AE5094B0();
  v553 = v139;
  v566 = sub_1AE501548(&qword_1EEDA3210);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v140);
  v565 = (char *)&v476 - ((v141 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v142);
  v564 = (char *)&v476 - v143;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v144);
  v563 = (void (*)(uint64_t))((char *)&v476 - v145);
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v146);
  v562 = (char *)&v476 - v147;
  sub_1AE4F9350();
  v149 = MEMORY[0x1E0C80A78](v148);
  sub_1AE7EB4AC(v149, v150, v151, v152, v153, v154, v155, v156, v476);
  v157 = sub_1AE4F675C();
  v488 = *(_QWORD *)(v157 - 8);
  v489 = v157;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v158);
  sub_1AE4F686C();
  v487 = v159;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v160);
  sub_1AE4F6A60();
  v486 = v161;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v162);
  sub_1AE7EB248();
  MEMORY[0x1E0C80A78](v163);
  sub_1AE7EB4C0();
  sub_1AE4F9094();
  v484 = v2;
  sub_1AE924858();
  sub_1AE4F9094();
  v485 = v1;
  sub_1AE924858();
  v164 = (uint64_t *)(v0 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceBuckets);
  sub_1AE4F9094();
  v165 = *v164;
  v166 = *(_QWORD *)(*v164 + 16);
  v497 = v0;
  v477 = v4;
  v478 = v3;
  v476 = v23;
  if (v166)
  {
    v595 = MEMORY[0x1E0DEE9D8];
    sub_1AE4F67A4();
    sub_1AE69015C();
    v167 = sub_1AE64A338(v165);
    if ((v167 & 0x8000000000000000) == 0)
    {
      v169 = v167;
      if (v167 < 1 << *(_BYTE *)(v165 + 32))
      {
        v170 = v168;
        v171 = (uint64_t *)(v165 + 64);
        while (1)
        {
          v4 = 1 << v169;
          if ((v171[v169 >> 6] & (1 << v169)) == 0)
            break;
          if (*(_DWORD *)(v165 + 36) != v170)
            goto LABEL_192;
          v572 = v166;
          v172 = v171;
          sub_1AE7EB2D0();
          sub_1AE507EE4(objc_allocWithZone((Class)GDDistanceBucketValue), sel_initWithBucket_bucketValue_);
          v23 = v165;
          v171 = &v595;
          sub_1AE9269B8();
          v5 = *(_QWORD *)(v595 + 16);
          sub_1AE7EA4B8();
          sub_1AE9269F4();
          sub_1AE9269C4();
          sub_1AE7EB2B0();
          if (v173 == v174)
            goto LABEL_193;
          if ((v172[v169 >> 6] & v4) == 0)
            goto LABEL_194;
          if (*(_DWORD *)(v165 + 36) != v170)
            goto LABEL_195;
          v175 = sub_1AE7EAC94();
          v166 = v572 - 1;
          if (v572 == 1)
            goto LABEL_15;
          v169 = v175;
          if ((v175 & 0x8000000000000000) == 0)
          {
            v170 = *(_DWORD *)(v165 + 36);
            if (v175 < 1 << *(_BYTE *)(v165 + 32))
              continue;
          }
          goto LABEL_14;
        }
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
LABEL_194:
        __break(1u);
LABEL_195:
        __break(1u);
        goto LABEL_196;
      }
    }
LABEL_14:
    __break(1u);
LABEL_15:
    v479 = v595;
    sub_1AE4F6728();
    v0 = v497;
  }
  else
  {
    v479 = MEMORY[0x1E0DEE9D8];
  }
  v176 = (uint64_t *)(v0 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceSpentInTrafficBuckets);
  sub_1AE4F9094();
  v177 = *v176;
  v178 = *(_QWORD *)(*v176 + 16);
  if (v178)
  {
    v594 = (_BYTE *)MEMORY[0x1E0DEE9D8];
    sub_1AE4F6730();
    sub_1AE690468();
    v180 = sub_1AE64A338(v177);
    v182 = v181 & 1;
    v560 = v177 + 64;
    v559 = v177;
    v23 = v566;
    v183 = v575;
    v5 = (uint64_t)v563;
    while ((v180 & 0x8000000000000000) == 0 && v180 < 1 << *(_BYTE *)(v177 + 32))
    {
      if (((*(_QWORD *)(v560 + (((unint64_t)v180 >> 3) & 0xFFFFFFFFFFFFF8)) >> v180) & 1) == 0)
        goto LABEL_197;
      if (*(_DWORD *)(v177 + 36) != (_DWORD)v179)
        goto LABEL_198;
      v184 = *(int *)(v23 + 48);
      v572 = v178;
      v185 = v561;
      v186 = (uint64_t)&v561[v184];
      v187 = *(_QWORD *)(v177 + 56);
      v188 = *(_BYTE *)(*(_QWORD *)(v177 + 48) + v180);
      *v561 = v188;
      v189 = v576[9];
      v571 = v179;
      LODWORD(v570) = v182;
      sub_1AE7D3524(v186, v187 + v189 * v180);
      v190 = v562;
      *v562 = v188;
      sub_1AE7D3524((uint64_t)&v190[*(int *)(v23 + 48)], v186);
      v191 = sub_1AE7ADF7C();
      sub_1AE5066F4(v191, v192);
      v193 = (uint64_t)v185;
      v194 = v572;
      sub_1AE7EA484(v193);
      v195 = *(int *)(v23 + 48);
      v196 = (uint64_t)&v564[v195];
      v569 = &v564[v195];
      v197 = v5 + v195;
      v198 = *(_BYTE *)v5;
      *v564 = *(_BYTE *)v5;
      sub_1AE7D3524(v196, v5 + v195);
      v199 = *(int *)(v23 + 48);
      v200 = v565;
      *v565 = v198;
      sub_1AE7D3524((uint64_t)&v200[v199], v197);
      sub_1AE92445C();
      v201 = (void (*)(uint64_t))v576[1];
      v202 = sub_1AE7EAB90();
      v201(v202);
      LOBYTE(v4) = sub_1AE507EE4(objc_allocWithZone((Class)GDTrafficBucketValue), sel_initWithBucket_bucketValue_);
      ((void (*)(char *, uint64_t))v201)(v569, v183);
      v177 = v559;
      sub_1AE52FBE8(v5, &qword_1EEDA3210);
      sub_1AE9269B8();
      sub_1AE7EA48C();
      sub_1AE7EA518();
      sub_1AE9269C4();
      v203 = sub_1AE7E9FC0(v180, v571, v570 & 1, v177);
      v180 = v203;
      v182 = v204 & 1;
      v178 = v194 - 1;
      if (!v178)
      {
        sub_1AE5CDFE8(v203, v179, v182);
        v562 = v594;
        sub_1AE4F81B8();
        v0 = v497;
        goto LABEL_26;
      }
    }
LABEL_196:
    __break(1u);
LABEL_197:
    __break(1u);
LABEL_198:
    __break(1u);
    goto LABEL_199;
  }
  v562 = (_BYTE *)MEMORY[0x1E0DEE9D8];
LABEL_26:
  v205 = (uint64_t *)(v0 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_timeSpentInTrafficBuckets);
  sub_1AE4F9094();
  v206 = *v205;
  v207 = *(_QWORD *)(v206 + 16);
  if (v207)
  {
    v593 = (_BYTE *)MEMORY[0x1E0DEE9D8];
    sub_1AE4F66C4();
    sub_1AE69015C();
    sub_1AE64A338(v206);
    sub_1AE7EAE48();
    while (1)
    {
      sub_1AE4F6D10();
      if (v173 == v174)
        break;
      sub_1AE7EA530();
      if ((v208 & 1) == 0)
        goto LABEL_200;
      sub_1AE505C14();
      if (!v211)
        goto LABEL_201;
      v572 = v207;
      v207 = (uint64_t)v558;
      v212 = (uint64_t)&v553[*((int *)v558 + 12)];
      v213 = *(_QWORD *)(v206 + 56);
      v214 = **(_BYTE **)(v206 + 48);
      *v553 = v214;
      v571 = v209;
      v206 = v573;
      LODWORD(v570) = v210;
      sub_1AE4F95F8(v212, v213);
      v215 = v554;
      *v554 = v214;
      sub_1AE4F95F8((uint64_t)&v215[*(int *)(v207 + 48)], v212);
      v216 = (uint64_t)v215;
      v217 = v555;
      sub_1AE5066F4(v216, (uint64_t)v555);
      sub_1AE7EA454();
      v218 = *(int *)(v207 + 48);
      v219 = (uint64_t)&v556[v218];
      v569 = &v556[v218];
      v4 = (uint64_t)&v217[v218];
      v5 = *v217;
      *v556 = v5;
      sub_1AE4F95F8(v219, (uint64_t)&v217[v218]);
      sub_1AE7EABD0();
      v220 = v557;
      *(_BYTE *)v557 = v5;
      sub_1AE4F95F8(v220 + v221, v4);
      sub_1AE7EA5E4();
      sub_1AE506A40();
      sub_1AE507EE4(objc_allocWithZone((Class)GDTrafficBucketValue), sel_initWithBucket_bucketValue_);
      sub_1AE7EA864();
      sub_1AE52FBE8((uint64_t)v217, &qword_1EEDA3290);
      sub_1AE9269B8();
      sub_1AE7EA48C();
      sub_1AE7EA518();
      sub_1AE9269C4();
      sub_1AE7EA38C();
      sub_1AE507758();
      if (v211)
      {
        sub_1AE7EA510(v222, v223, v224);
        v561 = v593;
        sub_1AE4F665C();
        v0 = v497;
        goto LABEL_37;
      }
    }
LABEL_199:
    __break(1u);
LABEL_200:
    __break(1u);
LABEL_201:
    __break(1u);
    goto LABEL_202;
  }
  v561 = (_BYTE *)MEMORY[0x1E0DEE9D8];
LABEL_37:
  v225 = (_BYTE **)(v0 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceSpentAtSpeedBuckets);
  sub_1AE4F9094();
  v226 = *v225;
  v227 = *((_QWORD *)v226 + 2);
  if (v227)
  {
    v592[0] = MEMORY[0x1E0DEE9D8];
    sub_1AE4F66C4();
    sub_1AE69015C();
    v178 = sub_1AE64A338((uint64_t)v226);
    v566 = (uint64_t)(v226 + 64);
    v565 = v226;
    v23 = (uint64_t)v576;
    while ((v178 & 0x8000000000000000) == 0)
    {
      sub_1AE4F6D10();
      if (v173 == v174)
        break;
      sub_1AE7EA530();
      if ((v228 & 1) == 0)
        goto LABEL_203;
      sub_1AE505C14();
      if (!v211)
        goto LABEL_204;
      v572 = v227;
      v227 = v552;
      sub_1AE7EB610();
      v230 = *(_BYTE *)(v229 + v178);
      *(_BYTE *)v5 = v230;
      v231 = *(_QWORD *)(v23 + 72);
      v571 = v232;
      LODWORD(v570) = v234;
      sub_1AE4F95F8((uint64_t)v592, v233 + v231 * v178);
      v235 = v548;
      *v548 = v230;
      sub_1AE4F95F8((uint64_t)&v235[*(int *)(v227 + 48)], (uint64_t)v592);
      v236 = (uint64_t)v235;
      v237 = v549;
      sub_1AE5066F4(v236, (uint64_t)v549);
      sub_1AE7EA454();
      v238 = *(int *)(v227 + 48);
      v239 = (uint64_t)&v550[v238];
      v569 = &v550[v238];
      v4 = (uint64_t)&v237[v238];
      v5 = *v237;
      *v550 = v5;
      sub_1AE4F95F8(v239, (uint64_t)&v237[v238]);
      sub_1AE7EABD0();
      v240 = v551;
      *v551 = v5;
      sub_1AE4F95F8((uint64_t)&v240[v241], v4);
      sub_1AE7EA5E4();
      sub_1AE506A40();
      sub_1AE507EE4(objc_allocWithZone((Class)GDSpeedBucketValue), sel_initWithBucket_bucketValue_);
      sub_1AE7EA864();
      sub_1AE52FBE8((uint64_t)v237, &qword_1EEDA3208);
      sub_1AE9269B8();
      sub_1AE7EA48C();
      sub_1AE7EA518();
      sub_1AE9269C4();
      sub_1AE7EA38C();
      sub_1AE507758();
      if (v211)
      {
        sub_1AE7EA510(v242, v243, v244);
        v560 = v592[0];
        sub_1AE4F665C();
        v0 = v497;
        goto LABEL_49;
      }
    }
LABEL_202:
    __break(1u);
LABEL_203:
    __break(1u);
LABEL_204:
    __break(1u);
    goto LABEL_205;
  }
  v560 = MEMORY[0x1E0DEE9D8];
LABEL_49:
  v245 = (uint64_t *)(v0 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_timeSpentAtSpeedBuckets);
  sub_1AE4F9094();
  v246 = *v245;
  v247 = *(_QWORD *)(v246 + 16);
  if (v247)
  {
    v591[0] = MEMORY[0x1E0DEE9D8];
    sub_1AE4F66C4();
    sub_1AE69015C();
    sub_1AE64A338(v246);
    sub_1AE7EAE48();
    while ((v178 & 0x8000000000000000) == 0)
    {
      sub_1AE4F6D10();
      if (v173 == v174)
        break;
      sub_1AE7EA530();
      if ((v248 & 1) == 0)
        goto LABEL_206;
      sub_1AE505C14();
      if (!v211)
        goto LABEL_207;
      v572 = v247;
      sub_1AE7EB1AC();
      v250 = *(_BYTE *)(v249 + v178);
      *(_BYTE *)v5 = v250;
      v251 = *(_QWORD *)(v23 + 72);
      v571 = v252;
      LODWORD(v570) = v254;
      sub_1AE4F95F8((uint64_t)v591, v253 + v251 * v178);
      v255 = v542;
      *v542 = v250;
      sub_1AE4F95F8((uint64_t)&v255[*(int *)(v247 + 48)], (uint64_t)v591);
      v256 = (uint64_t)v255;
      v257 = v543;
      sub_1AE5066F4(v256, (uint64_t)v543);
      sub_1AE7EA454();
      v258 = *(int *)(v247 + 48);
      v259 = (uint64_t)&v544[v258];
      v569 = &v544[v258];
      v4 = (uint64_t)&v257[v258];
      v5 = *v257;
      *v544 = v5;
      sub_1AE4F95F8(v259, (uint64_t)&v257[v258]);
      sub_1AE7EABD0();
      v261 = sub_1AE7EB538(v260);
      sub_1AE4F95F8((uint64_t)v261, v4);
      sub_1AE7EA5E4();
      sub_1AE506A40();
      sub_1AE507EE4(objc_allocWithZone((Class)GDSpeedBucketValue), sel_initWithBucket_bucketValue_);
      sub_1AE7EA864();
      sub_1AE52FBE8((uint64_t)v257, &qword_1EEDA32B8);
      sub_1AE9269B8();
      sub_1AE7EA48C();
      sub_1AE7EA518();
      sub_1AE9269C4();
      sub_1AE7EA38C();
      sub_1AE507758();
      if (v211)
      {
        sub_1AE7EA510(v262, v263, v264);
        v559 = v591[0];
        sub_1AE4F665C();
        v0 = v497;
        goto LABEL_61;
      }
    }
LABEL_205:
    __break(1u);
LABEL_206:
    __break(1u);
LABEL_207:
    __break(1u);
    goto LABEL_208;
  }
  v559 = MEMORY[0x1E0DEE9D8];
LABEL_61:
  v265 = v0 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceSpentAtRelativeSpeeds;
  sub_1AE500FE4();
  v266 = *(_BYTE **)v265;
  v267 = *(_QWORD *)(*(_QWORD *)v265 + 16);
  v268 = (_BYTE *)MEMORY[0x1E0DEE9D8];
  if (v267)
  {
    v557 = v265;
    v590 = (_BYTE *)MEMORY[0x1E0DEE9D8];
    sub_1AE4F66C4();
    sub_1AE690468();
    v23 = sub_1AE7EB238();
    v565 = v266 + 64;
    v564 = v266;
    v269 = v568;
    v270 = v575;
    while ((v23 & 0x8000000000000000) == 0 && v23 < 1 << v266[32])
    {
      if (((*(_QWORD *)&v565[((unint64_t)v23 >> 3) & 0xFFFFFFFFFFFFF8] >> v23) & 1) == 0)
        goto LABEL_209;
      sub_1AE505C14();
      if (!v211)
        goto LABEL_210;
      v273 = (uint64_t)v538;
      v274 = (uint64_t)&v538[*(int *)(v269 + 48)];
      v275 = *((_QWORD *)v266 + 7);
      v276 = *(_BYTE *)(*((_QWORD *)v266 + 6) + v23);
      *v538 = v276;
      v277 = v576;
      v278 = v576[9];
      v571 = v271;
      v566 = v278;
      v247 = v576[2];
      LODWORD(v570) = v272;
      sub_1AE7EB1D8(v274, v275 + v278 * v23);
      v572 = v267;
      v279 = v539;
      *v539 = v276;
      sub_1AE7EB1D8((uint64_t)&v279[*(int *)(v269 + 48)], v274);
      v280 = (uint64_t)v279;
      v281 = v540;
      sub_1AE5066F4(v280, (uint64_t)v540);
      sub_1AE7EA484(v273);
      v282 = *(int *)(v269 + 48);
      v283 = (uint64_t)&v541[v282];
      v569 = &v541[v282];
      v284 = (uint64_t)&v281[v282];
      v285 = *v281;
      *v541 = *v281;
      sub_1AE7EB1D8(v283, (uint64_t)&v281[v282]);
      v286 = *(int *)(v269 + 48);
      v287 = v567;
      v288 = &v567[v286];
      *v567 = v285;
      sub_1AE7EB1D8((uint64_t)&v287[v286], v284);
      sub_1AE92445C();
      v289 = (void (*)(_QWORD))v277[1];
      ((void (*)(_BYTE *, uint64_t))v289)(v288, v270);
      sub_1AE507EE4(objc_allocWithZone((Class)GDRelativeFlowSpeedBucketValue), sel_initWithBucket_bucketValue_);
      ((void (*)(char *, uint64_t))v289)(v569, v270);
      v290 = (uint64_t)v281;
      v291 = v572;
      sub_1AE52FBE8(v290, &qword_1EEDA3200);
      sub_1AE9269B8();
      sub_1AE9269E8();
      v266 = v564;
      sub_1AE9269F4();
      sub_1AE9269C4();
      v292 = sub_1AE7E9FC0(v23, v571, v570 & 1, (uint64_t)v266);
      v23 = v292;
      v295 = v294 & 1;
      v267 = v291 - 1;
      if (!v267)
      {
        sub_1AE5CDFE8(v292, v293, v295);
        v558 = v590;
        sub_1AE4F665C();
        v266 = *(_BYTE **)v557;
        v4 = *(_QWORD *)(*(_QWORD *)v557 + 16);
        v268 = (_BYTE *)MEMORY[0x1E0DEE9D8];
        if (!v4)
          goto LABEL_80;
        v590 = (_BYTE *)MEMORY[0x1E0DEE9D8];
        sub_1AE4F66C4();
        sub_1AE68FD90();
        v267 = sub_1AE7EB238();
        v569 = v266 + 64;
        v563 = v289;
        v565 = v266;
        while ((v267 & 0x8000000000000000) == 0)
        {
          sub_1AE4F6D10();
          if (v173 == v174)
            break;
          sub_1AE7EA530();
          if ((v296 & 1) == 0)
            goto LABEL_230;
          sub_1AE505C14();
          if (!v211)
            goto LABEL_231;
          v299 = v247;
          v300 = v568;
          v301 = (uint64_t)v498;
          v302 = (uint64_t)&v498[*(int *)(v568 + 48)];
          v303 = *((_QWORD *)v266 + 6);
          v304 = *((_QWORD *)v266 + 7);
          v572 = v4;
          v305 = *(_BYTE *)(v303 + v267);
          *v498 = v305;
          v571 = v297;
          v306 = v575;
          LODWORD(v570) = v298;
          sub_1AE4F95F8(v302, v304 + v566 * v267);
          v307 = v499;
          *v499 = v305;
          sub_1AE4F95F8((uint64_t)&v307[*(int *)(v300 + 48)], v302);
          v308 = (uint64_t)v307;
          v23 = v500;
          sub_1AE5066F4(v308, v500);
          sub_1AE7EA484(v301);
          v309 = *(int *)(v300 + 48);
          v310 = v501;
          v311 = v23 + v309;
          v312 = *(_BYTE *)v23;
          *v501 = *(_BYTE *)v23;
          sub_1AE4F95F8((uint64_t)&v310[v309], v23 + v309);
          v313 = *(int *)(v300 + 48);
          v247 = v299;
          v314 = v563;
          v315 = v567;
          *v567 = v312;
          ((void (*)(_BYTE *, uint64_t, uint64_t))v247)(&v315[v313], v311, v306);
          sub_1AE7EA5E4();
          sub_1AE506A40();
          sub_1AE507EE4(objc_allocWithZone((Class)GDRelativeFlowSpeedBucketValue), sel_initWithBucket_bucketValue_);
          v316 = sub_1AE7EB1E0();
          v266 = v565;
          v314(v316);
          sub_1AE52FBE8(v23, &qword_1EEDA3200);
          sub_1AE9269B8();
          sub_1AE7EA48C();
          v317 = v572;
          sub_1AE9269F4();
          sub_1AE9269C4();
          v318 = sub_1AE7EA38C();
          v267 = v318;
          v321 = v320 & 1;
          v4 = v317 - 1;
          if (!v4)
          {
            sub_1AE7EA510(v318, v319, v321);
            v564 = v590;
            sub_1AE4F665C();
            goto LABEL_81;
          }
        }
        goto LABEL_229;
      }
    }
LABEL_208:
    __break(1u);
LABEL_209:
    __break(1u);
LABEL_210:
    __break(1u);
    goto LABEL_211;
  }
  v558 = (_BYTE *)MEMORY[0x1E0DEE9D8];
LABEL_80:
  v564 = v268;
LABEL_81:
  v322 = v497;
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  if (v247)
  {
    v589 = (_BYTE *)MEMORY[0x1E0DEE9D8];
    sub_1AE4F66C4();
    sub_1AE69015C();
    sub_1AE64A338((uint64_t)v266);
    sub_1AE7EADBC();
    while ((v267 & 0x8000000000000000) == 0)
    {
      sub_1AE4F6D10();
      if (v173 == v174)
        break;
      sub_1AE7EA530();
      if ((v323 & 1) == 0)
        goto LABEL_212;
      sub_1AE505C14();
      if (!v211)
        goto LABEL_213;
      v572 = v247;
      v247 = v537;
      v326 = (uint64_t)&v532[*(int *)(v537 + 48)];
      v327 = *((_QWORD *)v266 + 7);
      v328 = *(_BYTE *)(*((_QWORD *)v266 + 6) + v267);
      *v532 = v328;
      v329 = *(_QWORD *)(v23 + 72);
      v571 = v324;
      v266 = (_BYTE *)v575;
      LODWORD(v570) = v325;
      sub_1AE4F95F8(v326, v327 + v329 * v267);
      v330 = v533;
      *v533 = v328;
      sub_1AE4F95F8((uint64_t)&v330[*(int *)(v247 + 48)], v326);
      v331 = (uint64_t)v330;
      v332 = v534;
      sub_1AE5066F4(v331, (uint64_t)v534);
      sub_1AE7EA454();
      v333 = *(int *)(v247 + 48);
      v334 = (uint64_t)&v535[v333];
      v569 = &v535[v333];
      v4 = (uint64_t)&v332[v333];
      v335 = *v332;
      *v535 = *v332;
      sub_1AE4F95F8(v334, (uint64_t)&v332[v333]);
      sub_1AE7EABD0();
      v336 = v536;
      *v536 = v335;
      sub_1AE4F95F8((uint64_t)&v336[v337], v4);
      sub_1AE7EA5E4();
      sub_1AE506A40();
      sub_1AE507EE4(objc_allocWithZone((Class)GDTerrainTypeValue), sel_initWithType_typeValue_);
      sub_1AE7EA66C();
      sub_1AE52FBE8((uint64_t)v332, &qword_1EEDA31E8);
      sub_1AE9269B8();
      sub_1AE7EA48C();
      sub_1AE7EA518();
      sub_1AE9269C4();
      sub_1AE7EA38C();
      sub_1AE507758();
      if (v211)
      {
        sub_1AE7EA510(v338, v339, v340);
        v565 = v589;
        sub_1AE4F665C();
        v322 = v497;
        goto LABEL_93;
      }
    }
LABEL_211:
    __break(1u);
LABEL_212:
    __break(1u);
LABEL_213:
    __break(1u);
    goto LABEL_214;
  }
  v565 = (_BYTE *)MEMORY[0x1E0DEE9D8];
LABEL_93:
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  if (v247)
  {
    v588 = MEMORY[0x1E0DEE9D8];
    sub_1AE4F66C4();
    sub_1AE69015C();
    sub_1AE64A338((uint64_t)v266);
    sub_1AE7EADD8();
    while ((v267 & 0x8000000000000000) == 0)
    {
      sub_1AE4F6D10();
      if (v173 == v174)
        break;
      sub_1AE7EA530();
      if ((v341 & 1) == 0)
        goto LABEL_215;
      sub_1AE505C14();
      if (!v211)
        goto LABEL_216;
      v572 = v247;
      v247 = v531;
      v344 = (uint64_t)&v526[*(int *)(v531 + 48)];
      v345 = *((_QWORD *)v266 + 7);
      v346 = *(_BYTE *)(*((_QWORD *)v266 + 6) + v267);
      *v526 = v346;
      v347 = *(_QWORD *)(v23 + 72);
      v571 = v342;
      v266 = (_BYTE *)v573;
      LODWORD(v570) = v343;
      sub_1AE4F95F8(v344, v345 + v347 * v267);
      v348 = v527;
      *v527 = v346;
      sub_1AE4F95F8((uint64_t)&v348[*(int *)(v247 + 48)], v344);
      v349 = (uint64_t)v348;
      v350 = v528;
      sub_1AE5066F4(v349, (uint64_t)v528);
      sub_1AE7EA454();
      v351 = *(int *)(v247 + 48);
      v352 = (uint64_t)&v529[v351];
      v569 = &v529[v351];
      v4 = (uint64_t)&v350[v351];
      v353 = *v350;
      *v529 = *v350;
      sub_1AE4F95F8(v352, (uint64_t)&v350[v351]);
      sub_1AE7EABD0();
      v354 = v530;
      *v530 = v353;
      sub_1AE4F95F8((uint64_t)&v354[v355], v4);
      sub_1AE7EA5E4();
      sub_1AE506A40();
      sub_1AE507EE4(objc_allocWithZone((Class)GDTerrainTypeValue), sel_initWithType_typeValue_);
      sub_1AE7EA66C();
      sub_1AE52FBE8((uint64_t)v350, &qword_1EEDA3230);
      sub_1AE9269B8();
      sub_1AE7EA48C();
      sub_1AE7EA518();
      sub_1AE9269C4();
      sub_1AE7EA38C();
      sub_1AE507758();
      if (v211)
      {
        sub_1AE7EA510(v356, v357, v358);
        v563 = (void (*)(uint64_t))v588;
        sub_1AE4F665C();
        v322 = v497;
        goto LABEL_105;
      }
    }
LABEL_214:
    __break(1u);
LABEL_215:
    __break(1u);
LABEL_216:
    __break(1u);
    goto LABEL_217;
  }
  v563 = (void (*)(uint64_t))MEMORY[0x1E0DEE9D8];
LABEL_105:
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  if (v247)
  {
    v587 = MEMORY[0x1E0DEE9D8];
    sub_1AE4F66C4();
    sub_1AE69015C();
    sub_1AE64A338((uint64_t)v266);
    sub_1AE7EADBC();
    while ((v267 & 0x8000000000000000) == 0)
    {
      sub_1AE4F6D10();
      if (v173 == v174)
        break;
      sub_1AE7EA530();
      if ((v359 & 1) == 0)
        goto LABEL_218;
      sub_1AE505C14();
      if (!v211)
        goto LABEL_219;
      v572 = v247;
      v247 = v525;
      v362 = (uint64_t)&v520[*(int *)(v525 + 48)];
      v363 = *((_QWORD *)v266 + 7);
      v364 = *(_BYTE *)(*((_QWORD *)v266 + 6) + v267);
      *v520 = v364;
      v365 = *(_QWORD *)(v23 + 72);
      v571 = v360;
      v266 = (_BYTE *)v575;
      LODWORD(v570) = v361;
      sub_1AE4F95F8(v362, v363 + v365 * v267);
      v366 = v521;
      *v521 = v364;
      sub_1AE4F95F8((uint64_t)&v366[*(int *)(v247 + 48)], v362);
      v367 = (uint64_t)v366;
      v368 = v522;
      sub_1AE5066F4(v367, (uint64_t)v522);
      sub_1AE7EA454();
      v369 = *(int *)(v247 + 48);
      v370 = (uint64_t)&v523[v369];
      v569 = &v523[v369];
      v4 = (uint64_t)&v368[v369];
      v371 = *v368;
      *v523 = *v368;
      sub_1AE4F95F8(v370, (uint64_t)&v368[v369]);
      sub_1AE7EABD0();
      v372 = v524;
      *v524 = v371;
      sub_1AE4F95F8((uint64_t)&v372[v373], v4);
      sub_1AE7EA5E4();
      sub_1AE506A40();
      sub_1AE507EE4(objc_allocWithZone((Class)GDWeatherTypeValue), sel_initWithType_typeValue_);
      sub_1AE7EA66C();
      sub_1AE52FBE8((uint64_t)v368, &qword_1EEDA31F0);
      sub_1AE9269B8();
      sub_1AE7EA48C();
      sub_1AE7EA518();
      sub_1AE9269C4();
      sub_1AE7EA38C();
      sub_1AE507758();
      if (v211)
      {
        sub_1AE7EA510(v374, v375, v376);
        v557 = v587;
        sub_1AE4F665C();
        v322 = v497;
        goto LABEL_117;
      }
    }
LABEL_217:
    __break(1u);
LABEL_218:
    __break(1u);
LABEL_219:
    __break(1u);
    goto LABEL_220;
  }
  v557 = MEMORY[0x1E0DEE9D8];
LABEL_117:
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  if (v247)
  {
    v586 = (_BYTE *)MEMORY[0x1E0DEE9D8];
    sub_1AE4F66C4();
    sub_1AE69015C();
    sub_1AE64A338((uint64_t)v266);
    sub_1AE7EADD8();
    while ((v267 & 0x8000000000000000) == 0)
    {
      sub_1AE4F6D10();
      if (v173 == v174)
        break;
      sub_1AE7EA530();
      if ((v377 & 1) == 0)
        goto LABEL_221;
      sub_1AE505C14();
      if (!v211)
        goto LABEL_222;
      v572 = v247;
      v247 = v519;
      v380 = (uint64_t)&v514[*(int *)(v519 + 48)];
      v381 = *((_QWORD *)v266 + 7);
      v382 = *(_BYTE *)(*((_QWORD *)v266 + 6) + v267);
      *v514 = v382;
      v383 = *(_QWORD *)(v23 + 72);
      v571 = v378;
      v266 = (_BYTE *)v573;
      LODWORD(v570) = v379;
      sub_1AE4F95F8(v380, v381 + v383 * v267);
      v384 = v515;
      *v515 = v382;
      sub_1AE4F95F8((uint64_t)&v384[*(int *)(v247 + 48)], v380);
      v385 = (uint64_t)v384;
      v386 = v516;
      sub_1AE5066F4(v385, (uint64_t)v516);
      sub_1AE7EA454();
      v387 = *(int *)(v247 + 48);
      v388 = (uint64_t)&v517[v387];
      v569 = &v517[v387];
      v4 = (uint64_t)&v386[v387];
      v389 = *v386;
      *v517 = *v386;
      sub_1AE4F95F8(v388, (uint64_t)&v386[v387]);
      sub_1AE7EABD0();
      v390 = v518;
      *v518 = v389;
      sub_1AE4F95F8((uint64_t)&v390[v391], v4);
      sub_1AE7EA5E4();
      sub_1AE506A40();
      sub_1AE507EE4(objc_allocWithZone((Class)GDWeatherTypeValue), sel_initWithType_typeValue_);
      sub_1AE7EA66C();
      sub_1AE52FBE8((uint64_t)v386, &qword_1EEDA3218);
      sub_1AE9269B8();
      sub_1AE7EA48C();
      sub_1AE7EA518();
      sub_1AE9269C4();
      sub_1AE7EA38C();
      sub_1AE507758();
      if (v211)
      {
        sub_1AE7EA510(v392, v393, v394);
        v556 = v586;
        sub_1AE4F665C();
        v322 = v497;
        goto LABEL_129;
      }
    }
LABEL_220:
    __break(1u);
LABEL_221:
    __break(1u);
LABEL_222:
    __break(1u);
    goto LABEL_223;
  }
  v556 = (_BYTE *)MEMORY[0x1E0DEE9D8];
LABEL_129:
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  if (v247)
  {
    v585[0] = MEMORY[0x1E0DEE9D8];
    sub_1AE4F66C4();
    sub_1AE69015C();
    sub_1AE64A338((uint64_t)v266);
    sub_1AE7EB1EC();
    v395 = v513;
    while ((v267 & 0x8000000000000000) == 0)
    {
      sub_1AE4F6D10();
      if (v173 == v174)
        break;
      sub_1AE7EA530();
      if ((v396 & 1) == 0)
        goto LABEL_224;
      sub_1AE505C14();
      if (!v211)
        goto LABEL_225;
      v572 = v247;
      v397 = v508;
      sub_1AE7EB464();
      v398 = v576[9];
      v571 = v399;
      LODWORD(v570) = v401;
      sub_1AE7EA968((uint64_t)v585, v400 + v398 * v267);
      v402 = (uint64_t)v509;
      *v509 = v4;
      sub_1AE7EA968(v402 + *(int *)(v395 + 48), (uint64_t)v585);
      v403 = v510;
      sub_1AE5066F4(v402, (uint64_t)v510);
      v404 = v397;
      v247 = v572;
      sub_1AE7EA484(v404);
      v405 = *(int *)(v395 + 48);
      v406 = (uint64_t)&v511[v405];
      v569 = &v511[v405];
      v4 = (uint64_t)&v403[v405];
      v407 = *v403;
      *v511 = v407;
      sub_1AE7EA968(v406, (uint64_t)&v403[v405]);
      v568 = qword_1AE95C578[v407];
      v408 = *(int *)(v395 + 48);
      v409 = v512;
      *v512 = v407;
      sub_1AE7EA968((uint64_t)&v409[v408], v4);
      sub_1AE92445C();
      sub_1AE7EB134((uint64_t)v576);
      sub_1AE507EE4(objc_allocWithZone((Class)GDRoadTypeValue), sel_initWithType_typeValue_);
      sub_1AE7EB040();
      v266 = (_BYTE *)v566;
      sub_1AE52FBE8((uint64_t)v403, &qword_1EEDA31F8);
      sub_1AE9269B8();
      sub_1AE7EA48C();
      sub_1AE7EA518();
      sub_1AE9269C4();
      sub_1AE7EA38C();
      sub_1AE507758();
      if (v211)
      {
        sub_1AE7EA510(v410, v411, v412);
        v555 = (unsigned __int8 *)v585[0];
        sub_1AE4F665C();
        v322 = v497;
        goto LABEL_141;
      }
    }
LABEL_223:
    __break(1u);
LABEL_224:
    __break(1u);
LABEL_225:
    __break(1u);
LABEL_226:
    __break(1u);
LABEL_227:
    __break(1u);
LABEL_228:
    __break(1u);
LABEL_229:
    __break(1u);
LABEL_230:
    __break(1u);
LABEL_231:
    __break(1u);
    goto LABEL_232;
  }
  v555 = (unsigned __int8 *)MEMORY[0x1E0DEE9D8];
LABEL_141:
  sub_1AE500FE4();
  sub_1AE7EA5EC();
  if (v247)
  {
    v584[0] = MEMORY[0x1E0DEE9D8];
    sub_1AE4F66C4();
    sub_1AE69015C();
    sub_1AE64A338((uint64_t)v266);
    sub_1AE7EB1EC();
    v413 = v507;
    while ((v267 & 0x8000000000000000) == 0)
    {
      sub_1AE4F6D10();
      if (v173 == v174)
        break;
      sub_1AE7EA530();
      if ((v414 & 1) == 0)
        goto LABEL_227;
      sub_1AE505C14();
      if (!v211)
        goto LABEL_228;
      v572 = v247;
      v415 = v502;
      sub_1AE7EB464();
      v416 = *(_QWORD *)(v574 + 72);
      v571 = v417;
      LODWORD(v570) = v419;
      sub_1AE7EA968((uint64_t)v584, v418 + v416 * v267);
      v420 = (uint64_t)v503;
      *v503 = v4;
      sub_1AE7EA968(v420 + *(int *)(v413 + 48), (uint64_t)v584);
      v421 = v504;
      sub_1AE5066F4(v420, (uint64_t)v504);
      v422 = (uint64_t)v415;
      v247 = v572;
      sub_1AE7EA484(v422);
      v423 = *(int *)(v413 + 48);
      v424 = (uint64_t)&v505[v423];
      v569 = &v505[v423];
      v4 = (uint64_t)&v421[v423];
      v425 = *v421;
      *v505 = v425;
      sub_1AE7EA968(v424, (uint64_t)&v421[v423]);
      v568 = qword_1AE95C578[v425];
      v426 = *(int *)(v413 + 48);
      v427 = v506;
      *v506 = v425;
      sub_1AE7EA968((uint64_t)&v427[v426], v4);
      sub_1AE92445C();
      sub_1AE7EB134(v574);
      sub_1AE507EE4(objc_allocWithZone((Class)GDRoadTypeValue), sel_initWithType_typeValue_);
      sub_1AE7EB040();
      sub_1AE52FBE8((uint64_t)v421, &qword_1EEDA3248);
      sub_1AE9269B8();
      sub_1AE7EA48C();
      sub_1AE7EA518();
      sub_1AE9269C4();
      sub_1AE7EA38C();
      sub_1AE507758();
      if (v211)
      {
        sub_1AE7EA510(v428, v429, v430);
        v571 = v584[0];
        sub_1AE4F665C();
        v322 = v497;
        goto LABEL_153;
      }
    }
    goto LABEL_226;
  }
  v571 = MEMORY[0x1E0DEE9D8];
LABEL_153:
  v431 = (uint64_t *)(v322 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_roadTimes);
  sub_1AE500FE4();
  v432 = *v431;
  v433 = (uint64_t *)(v322 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_roadDistancesInMeters);
  sub_1AE500FE4();
  v434 = *v433;
  v435 = (uint64_t *)(v322 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_route);
  sub_1AE500FE4();
  v436 = *v435;
  v570 = v432;
  v572 = v434;
  if (v436)
  {
    v437 = *(_QWORD *)(v436 + 16);
    if (v437)
    {
      v583 = MEMORY[0x1E0DEE9D8];
      sub_1AE4F66C4();
      sub_1AE4F6708();
      sub_1AE4F6730();
      v438 = sub_1AE68FD90();
      sub_1AE4F77B8(v438, &qword_1EED9A668);
      v439 = v477;
      v440 = *(unsigned __int8 *)(v476 + 80);
      v569 = (char *)v436;
      v441 = v436 + ((v440 + 32) & ~v440);
      v442 = *(_QWORD *)(v476 + 72);
      v443 = v478;
      do
      {
        sub_1AE640264(v441, v439);
        sub_1AE640264(v439, v443);
        CLLocation.init(model:)(v443);
        sub_1AE57B7C0(v439);
        sub_1AE9269B8();
        sub_1AE7EA4B8();
        sub_1AE506414();
        sub_1AE9269C4();
        v441 += v442;
        --v437;
      }
      while (v437);
      v444 = v583;
      swift_bridgeObjectRelease();
      v434 = v572;
      v322 = v497;
    }
    else
    {
      sub_1AE4F66C4();
      sub_1AE4F6708();
      v444 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    sub_1AE4F66C4();
    sub_1AE4F6708();
    v444 = 0;
  }
  sub_1AE500FE4();
  sub_1AE4F66CC();
  sub_1AE7D651C();
  v446 = v445;
  sub_1AE4F9038();
  sub_1AE500FE4();
  sub_1AE4F66CC();
  sub_1AE7D66C8();
  v448 = v447;
  sub_1AE4F9038();
  v449 = v489;
  v450 = *(void (**)(uint64_t, uint64_t, uint64_t))(v488 + 16);
  v450(v486, v484, v489);
  v450(v487, v485, v449);
  v451 = v322 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_distanceInMeters;
  sub_1AE500FE4();
  ((void (*)(uint64_t, uint64_t, uint64_t))v576[2])(v490, v451, v575);
  sub_1AE500FE4();
  sub_1AE7EAA88(v491);
  v452 = v322 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_durationInSeconds;
  sub_1AE500FE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v574 + 16))(v492, v452, v573);
  sub_1AE500FE4();
  sub_1AE7EAA88(v494);
  v453 = v322 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_averageSpeedInMetersPerSecond;
  sub_1AE500FE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v480 + 16))(v493, v453, v481);
  v454 = (double *)(v322 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_score);
  sub_1AE500FE4();
  v455 = *v454;
  sub_1AE500FE4();
  sub_1AE7EAA88(v495);
  sub_1AE500FE4();
  sub_1AE7EAA88(v496);
  sub_1AE500FE4();
  sub_1AE7EA778();
  if (v173 != v174)
  {
LABEL_232:
    __break(1u);
LABEL_233:
    __break(1u);
    goto LABEL_234;
  }
  sub_1AE7EAC18();
  if (!(v173 ^ v174 | v211))
    goto LABEL_233;
  v576 = v456;
  sub_1AE500FE4();
  sub_1AE7EA778();
  if (v173 != v174)
  {
LABEL_234:
    __break(1u);
LABEL_235:
    __break(1u);
    goto LABEL_236;
  }
  sub_1AE7EAC18();
  if (!(v173 ^ v174 | v211))
    goto LABEL_235;
  v575 = v457;
  sub_1AE500FE4();
  sub_1AE7EA778();
  if (v173 != v174)
  {
LABEL_236:
    __break(1u);
    goto LABEL_237;
  }
  sub_1AE7EAC18();
  if (v173 ^ v174 | v211)
  {
    v574 = v458;
    v573 = v448;
    v459 = (uint64_t *)(v322 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_lifeEventIds);
    sub_1AE500FE4();
    v460 = *v459;
    if (*v459)
    {
      v461 = *(_QWORD *)(v460 + 16);
      if (v461)
      {
        v567 = (_BYTE *)v446;
        v568 = v444;
        v578 = MEMORY[0x1E0DEE9D8];
        sub_1AE4F6804();
        sub_1AE9269DC();
        v462 = 0;
        while (1)
        {
          v463 = *(_QWORD *)(v460 + 8 * v462 + 32);
          v464 = (v463 & 0x80000000000000) != 0 ? 3826797 : 3828069;
          v580 = v464;
          v581 = 0xE300000000000000;
          v582 = v463;
          sub_1AE7EB54C();
          sub_1AE925F74();
          swift_bridgeObjectRelease();
          v465 = objc_allocWithZone((Class)GDEntityIdentifier);
          if (!sub_1AE7EACE4())
            goto LABEL_238;
          ++v462;
          sub_1AE9269B8();
          sub_1AE7EB5AC();
          sub_1AE7EB5C0();
          sub_1AE9269C4();
          if (v461 == v462)
          {
            v569 = (char *)v578;
            sub_1AE4F67AC();
            v322 = v497;
            v434 = v572;
            v444 = v568;
            v446 = (uint64_t)v567;
            goto LABEL_180;
          }
        }
      }
      v569 = (char *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v569 = 0;
    }
LABEL_180:
    v466 = (uint64_t *)(v322 + OBJC_IVAR____TtC20IntelligencePlatform21KTSDataRepresentation_ktsSegmentIds);
    sub_1AE500FE4();
    v467 = *v466;
    if (*v466)
    {
      v468 = *(_QWORD *)(v467 + 16);
      v469 = MEMORY[0x1E0DEE9D8];
      if (v468)
      {
        v567 = (_BYTE *)v446;
        v568 = v444;
        v582 = MEMORY[0x1E0DEE9D8];
        sub_1AE4F6804();
        sub_1AE9269DC();
        v470 = 0;
        while (1)
        {
          v471 = *(_QWORD *)(v467 + 8 * v470 + 32);
          v472 = (v471 & 0x80000000000000) != 0 ? 3826797 : 3828069;
          v578 = v472;
          v579 = 0xE300000000000000;
          v577 = v471;
          sub_1AE7EB54C();
          sub_1AE925F74();
          sub_1AE4F665C();
          v473 = objc_allocWithZone((Class)GDEntityIdentifier);
          if (!sub_1AE7EACE4())
            goto LABEL_239;
          ++v470;
          sub_1AE9269B8();
          sub_1AE7EB5AC();
          sub_1AE7EB5C0();
          sub_1AE9269C4();
          if (v468 == v470)
          {
            v469 = v582;
            sub_1AE4F67AC();
            v434 = v572;
            v444 = v568;
            v446 = (uint64_t)v567;
            break;
          }
        }
      }
    }
    else
    {
      v469 = 0;
    }
    v474 = v573;
    v475 = objc_allocWithZone((Class)GDKTSDataRepresentation);
    sub_1AE7E77D4(v486, v487, v490, v491, v455, v479, v492, v494, (uint64_t)v562, (uint64_t)v561, v560, v559, (uint64_t)v558, (uint64_t)v564, (uint64_t)v555, v571, v557, (uint64_t)v556, (uint64_t)v565,
      (uint64_t)v563,
      v493,
      v495,
      v496,
      __SPAIR64__(v575, v576),
      v574,
      v434,
      v446,
      v474,
      v570,
      v444,
      (uint64_t)v569,
      v469);
    sub_1AE7EA91C(v485);
    sub_1AE7EA91C(v484);
    return;
  }
LABEL_237:
  __break(1u);
LABEL_238:
  __break(1u);
LABEL_239:
  __break(1u);
}

uint64_t sub_1AE7E6EE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;
  _QWORD *v11;

  objc_opt_self();
  if (sub_1AE7EA8FC())
  {
    *(_QWORD *)(a1 + 24) = &type metadata for KTSSegmentData;
    *(_QWORD *)(a1 + 32) = sub_1AE7EA160();
    v3 = sub_1AE4F66BC();
    sub_1AE7EB124(v3);
    v4 = sub_1AE7EB144();
    sub_1AE7E3F60(v4, v5);
  }
  else
  {
    objc_opt_self();
    if (sub_1AE7EA8FC())
    {
      *(_QWORD *)(a1 + 24) = &type metadata for KTSData;
      *(_QWORD *)(a1 + 32) = sub_1AE7EA124();
      swift_unknownObjectRetain();
      v6 = (void *)sub_1AE7EB144();
      sub_1AE7E3A38(v6, v7);
    }
    else
    {
      objc_opt_self();
      if (!sub_1AE7EA8FC())
      {
        sub_1AE7D2544();
        v10 = sub_1AE4F6778();
        *v11 = 0xD000000000000022;
        v11[1] = 0x80000001AE9864A0;
        return sub_1AE7EA4D0(v10, (uint64_t)v11);
      }
      *(_QWORD *)(a1 + 24) = &type metadata for KTSSliceData;
      *(_QWORD *)(a1 + 32) = sub_1AE7EA09C();
      v8 = sub_1AE4F66BC();
      sub_1AE7EB124(v8);
      sub_1AE7EB144();
      sub_1AE7E35CC();
    }
  }
  if (v1)
    sub_1AE7739BC(a1);
  return sub_1AE50327C();
}

void sub_1AE7E7050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[28];
  uint64_t v48[28];
  _BYTE v49[224];
  uint64_t v50[28];
  uint64_t v51;

  sub_1AE4F67EC();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4FFEB4();
  v4 = v2 - v3;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v42 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v42 - v10;
  MEMORY[0x1E0C80A78](v9);
  sub_1AE7EAA94((uint64_t)&v42 - v12);
  if (sub_1AE7EA88C())
  {
    swift_release();
    sub_1AE4F6A6C();
    sub_1AE4F66E8();
    sub_1AE7EAA94((uint64_t)v11);
    if (sub_1AE7EAD08())
    {
      v44 = v50[0];
      v13 = v50[1];
      v14 = v50[3];
      v43 = sub_1AE7EB398(v50[2]);
      v45 = v15;
      v46 = v13;
      sub_1AE4F6804();
      v16 = sub_1AE7E4670((Class *)off_1E5DA2348, (SEL *)&selRef_initWithOriginContext_ktsContext_destinationContext_);
      if (v0)
      {
        sub_1AE4FDCE8();
        sub_1AE507978();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v33 = (void *)v16;
        v42 = v14;
        sub_1AE7E4790();
        v35 = v34;
        sub_1AE53F468(0, (unint64_t *)&qword_1EEDA33F8);
        v36 = v33;
        v37 = v35;
        v38 = sub_1AE7EB674();
        sub_1AE7EF7CC(v43, v45, v36, v37, (uint64_t)v38);
        sub_1AE4FDCE8();
        swift_release();
        swift_bridgeObjectRelease();

      }
      goto LABEL_18;
    }
    sub_1AE7D2544();
    sub_1AE4F6778();
    sub_1AE7EAB28();
    v22 = v21 + 7;
    v23 = "Can't get self as KTSSegmentData";
LABEL_17:
    *v20 = v22;
    v20[1] = (unint64_t)(v23 - 32) | 0x8000000000000000;
    sub_1AE7EA4D0(v19, (uint64_t)v20);
    goto LABEL_18;
  }
  if (!sub_1AE7EA88C())
  {
    if (sub_1AE7EA88C())
    {
      sub_1AE7EB1A4(v50, &v51);
      sub_1AE7EA1D0(v50);
      sub_1AE7EAA94(v4);
      if (sub_1AE7EAD08())
      {
        sub_1AE7EB1A4(v48, v49);
        v24 = sub_1AE7EB1A4(v47, v49);
        sub_1AE7DF5C0((uint64_t)v24, v25, v26, v27, v28, v29, v30, v31, v42, v43, v44, v45, v46, v47[0], v47[1], v47[2], v47[3], v47[4], v47[5],
          v47[6]);
        sub_1AE7EA1D0(v48);
        goto LABEL_18;
      }
      sub_1AE7D2544();
      sub_1AE4F6778();
      sub_1AE7EAB28();
      v22 = v39 + 5;
      v23 = "Can't get self as KTSSliceData";
    }
    else
    {
      sub_1AE7D2544();
      sub_1AE4F6778();
      sub_1AE7EAB28();
      v22 = v32 + 12;
      v23 = "Can't get self as any Trip data type.";
    }
    goto LABEL_17;
  }
  swift_release();
  sub_1AE507978();
  sub_1AE7EAA94((uint64_t)v8);
  if (!sub_1AE7EAD08())
  {
    sub_1AE7D2544();
    sub_1AE4F6778();
    sub_1AE7EAB28();
    v23 = "Can't get self as KTSData";
    goto LABEL_17;
  }
  v45 = sub_1AE7EB398(v50[0]);
  v46 = v17;
  v18 = sub_1AE7E4670((Class *)off_1E5DA2340, (SEL *)&selRef_initWithOriginContexts_ktsContexts_destinationContexts_);
  if (v0)
  {
    sub_1AE4F6A6C();
    sub_1AE4FDCE8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v40 = (void *)v18;
    sub_1AE7DF908();
    sub_1AE7EF784(v45, v46, v40, v41, 0);
    sub_1AE4F6A6C();
    sub_1AE4FDCE8();
  }
LABEL_18:
  sub_1AE505380();
  sub_1AE4F667C();
}

id sub_1AE7E7440(uint64_t a1, SEL *a2, double a3)
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), *a2, a1, a3);
}

id sub_1AE7E748C(uint64_t a1, uint64_t a2)
{
  id v4;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return sub_1AE7E7774(a1, a2);
}

id sub_1AE7E74D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  void *v15;
  void *v16;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v27;

  v16 = v15;
  v19 = sub_1AE9248DC();
  v20 = 0;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v19) != 1)
  {
    v20 = (void *)sub_1AE92487C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a1, v19);
  }
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a2, 1, v19) == 1)
  {
    v21 = 0;
  }
  else
  {
    v21 = (void *)sub_1AE92487C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a2, v19);
  }
  if (a11)
  {
    v22 = (void *)sub_1AE925E18();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  if (a13)
  {
    v23 = (void *)sub_1AE925E18();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  v27 = objc_msgSend(v16, sel_initWithStartTime_endTime_inclusionType_distanceMinInMeters_distanceMaxInMeters_elevationGainMinInMeters_elevationGainMaxInMeters_durationMinInSeconds_durationMaxInSeconds_roadType_roadName_originId_destinationId_, v20, v21, a3, a4, a5, a6, a7, a8, a9, v22, v23, a14, a15);

  return v27;
}

unint64_t sub_1AE7E7698()
{
  unint64_t result;

  result = qword_1EEDA3368;
  if (!qword_1EEDA3368)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSDataRequest.Cadence, &type metadata for KTSDataRequest.Cadence);
    atomic_store(result, (unint64_t *)&qword_1EEDA3368);
  }
  return result;
}

id sub_1AE7E76D4(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v4;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v6 = (void *)sub_1AE7EB2E4();
  sub_1AE4F76D8();
  v7 = (void *)sub_1AE7EB2E4();
  sub_1AE4F81B8();
  v8 = (void *)sub_1AE7EB2E4();
  sub_1AE4F665C();
  v9 = objc_msgSend(v4, *a4, v6, v7, v8);

  return v9;
}

id sub_1AE7E7774(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)sub_1AE925E18();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithString_, v3);

  return v4;
}

id sub_1AE7E77D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void (*v47)(uint64_t, uint64_t);
  void (*v48)(uint64_t, uint64_t);
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;

  v65 = (void *)sub_1AE92487C();
  v72 = a2;
  v64 = (void *)sub_1AE92487C();
  v38 = sub_1AE501548(&qword_1EED9E350);
  v71 = a3;
  v63 = (void *)sub_1AE924414();
  v70 = a4;
  v62 = (void *)sub_1AE924414();
  sub_1AE53F468(0, &qword_1EED9A660);
  v61 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v39 = sub_1AE501548(&qword_1EED9A850);
  v60 = (void *)sub_1AE924414();
  v69 = a8;
  v54 = (void *)sub_1AE924414();
  sub_1AE53F468(0, &qword_1EED9A680);
  v59 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v58 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  sub_1AE53F468(0, &qword_1EED9A678);
  v81 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v78 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  sub_1AE53F468(0, &qword_1EED9A688);
  v57 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v86 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  sub_1AE53F468(0, &qword_1EED9A690);
  v85 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v84 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  sub_1AE53F468(0, &qword_1EED9A698);
  v83 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v82 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  sub_1AE53F468(0, &qword_1EED9A670);
  v80 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v79 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v56 = sub_1AE501548(&qword_1EED9A888);
  v77 = (void *)sub_1AE924414();
  v40 = sub_1AE501548((uint64_t *)&unk_1EED9E340);
  v76 = (void *)sub_1AE924414();
  v55 = v40;
  v75 = (void *)sub_1AE924414();
  v74 = (void *)sub_1AE925C44();
  swift_bridgeObjectRelease();
  sub_1AE501548(&qword_1EEDA3378);
  v41 = (void *)sub_1AE925C44();
  swift_bridgeObjectRelease();
  sub_1AE501548(&qword_1EEDA3380);
  v42 = (void *)sub_1AE925C44();
  swift_bridgeObjectRelease();
  v68 = v39;
  v43 = (void *)sub_1AE925C44();
  swift_bridgeObjectRelease();
  if (a30)
  {
    sub_1AE53F468(0, &qword_1EED9A668);
    v44 = (void *)sub_1AE9261C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v44 = 0;
  }
  if (a31)
  {
    sub_1AE53F468(0, &qword_1EED94D28);
    v45 = (void *)sub_1AE9261C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v45 = 0;
  }
  if (a32)
  {
    sub_1AE53F468(0, &qword_1EED94D28);
    v46 = (void *)sub_1AE9261C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = 0;
  }
  LODWORD(v53) = a25;
  v67 = objc_msgSend(v66, sel_initWithStartTime_endTime_distanceInMeters_elevationGainInMeters_distanceBuckets_durationInSeconds_expectedDurationInSecondsNoTraffic_distanceSpentInTrafficBuckets_timeSpentInTrafficBuckets_distanceSpentAtSpeedBuckets_timeSpentAtSpeedBuckets_distanceSpentAtRelativeSpeeds_timeSpentAtRelativeSpeeds_distancePerRoadType_timePerRoadType_distancePerWeatherType_timePerWeatherType_distancePerTerrainType_timePerTerrainType_averageSpeedInMetersPerSecond_score_usageKwh_optimalUsageKwh_numBrakingEvents_numAccelEvents_numHighSpeedEvents_roadDistancesInMeters_roadSpeedBuckets_roadRelativeSpeedBuckets_roadTimes_route_lifeEventIds_ktsSegmentIds_, v65, v64, v63, v62, v61, v60, a5, v54, v59, v58, v81, v78, v57, v86, v85, v84, v83,
          v82,
          v80,
          v79,
          v77,
          v76,
          v75,
          a24,
          v53,
          v74,
          v41,
          v42,
          v43,
          v44,
          v45,
          v46);

  v47 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8);
  v47(a23, v55);
  v47(a22, v55);
  (*(void (**)(uint64_t))(*(_QWORD *)(v56 - 8) + 8))(a21);
  v48 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8);
  v48(v69, v68);
  v48(a7, v68);
  v49 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8);
  v49(v70, v38);
  v49(v71, v38);
  v50 = sub_1AE9248DC();
  v51 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8);
  v51(v72, v50);
  v51(a1, v50);
  return v67;
}

id sub_1AE7E7F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void (*v79)(uint64_t, uint64_t);
  void (*v80)(uint64_t, uint64_t);
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t);
  uint64_t v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  uint64_t v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  uint64_t v97;
  id v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  uint64_t v141;

  v96 = (void *)sub_1AE92487C();
  v105 = a2;
  v95 = (void *)sub_1AE92487C();
  v141 = sub_1AE501548(&qword_1EED9E350);
  v104 = a3;
  v94 = (void *)sub_1AE924414();
  v103 = a4;
  v93 = (void *)sub_1AE924414();
  sub_1AE53F468(0, &qword_1EED9A660);
  v91 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v69 = sub_1AE501548(&qword_1EED9A850);
  v102 = a11;
  v90 = (void *)sub_1AE924414();
  v101 = a12;
  v89 = (void *)sub_1AE924414();
  sub_1AE53F468(0, &qword_1EED9A680);
  v88 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v87 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  sub_1AE53F468(0, &qword_1EED9A678);
  v86 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v140 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  sub_1AE53F468(0, &qword_1EED9A688);
  v139 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v138 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  sub_1AE53F468(0, &qword_1EED9A690);
  v137 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v136 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  sub_1AE53F468(0, &qword_1EED9A698);
  v135 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v134 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  sub_1AE53F468(0, &qword_1EED9A670);
  v133 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v132 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v97 = sub_1AE501548(&qword_1EED9A888);
  v131 = (void *)sub_1AE924414();
  v70 = sub_1AE501548((uint64_t *)&unk_1EED9E340);
  v130 = (void *)sub_1AE924414();
  v92 = v70;
  v129 = (void *)sub_1AE924414();
  v128 = (void *)sub_1AE925C44();
  swift_bridgeObjectRelease();
  sub_1AE501548(&qword_1EEDA3378);
  v127 = (void *)sub_1AE925C44();
  swift_bridgeObjectRelease();
  sub_1AE501548(&qword_1EEDA3380);
  v126 = (void *)sub_1AE925C44();
  swift_bridgeObjectRelease();
  v100 = v69;
  v125 = (void *)sub_1AE925C44();
  swift_bridgeObjectRelease();
  if (a34)
  {
    sub_1AE53F468(0, &qword_1EED9A668);
    v124 = (void *)sub_1AE9261C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v124 = 0;
  }
  if (a35)
  {
    sub_1AE53F468(0, &qword_1EED94D28);
    v123 = (void *)sub_1AE9261C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v123 = 0;
  }
  if (a36)
  {
    sub_1AE53F468(0, &qword_1EED94D28);
    v122 = (void *)sub_1AE9261C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v122 = 0;
  }
  v121 = (void *)sub_1AE924414();
  v120 = (void *)sub_1AE924414();
  v119 = (void *)sub_1AE924414();
  v118 = (void *)sub_1AE924414();
  v117 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v113 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v116 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v115 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v114 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v110 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v108 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v112 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v111 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v109 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v107 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v71 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v72 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v73 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v74 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v75 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v76 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v77 = (void *)sub_1AE9261C0();
  swift_bridgeObjectRelease();
  if (a59)
  {
    sub_1AE53F468(0, &qword_1EED9A668);
    sub_1AE53F468(0, (unint64_t *)&qword_1ED318F50);
    sub_1AE7D25C0();
    v78 = (void *)sub_1AE925C44();
    swift_bridgeObjectRelease();
  }
  else
  {
    v78 = 0;
  }
  LODWORD(v85) = a29;
  v99 = objc_msgSend(v98, sel_initWithStartTime_endTime_distanceInMeters_elevationGainInMeters_distanceBuckets_durationInSeconds_expectedDurationInSecondsNoTraffic_distanceSpentInTrafficBuckets_timeSpentInTrafficBuckets_distanceSpentAtSpeedBuckets_timeSpentAtSpeedBuckets_distanceSpentAtRelativeSpeeds_timeSpentAtRelativeSpeeds_distancePerRoadType_timePerRoadType_distancePerWeatherType_timePerWeatherType_distancePerTerrainType_timePerTerrainType_averageSpeedInMetersPerSecond_score_usageKwh_optimalUsageKwh_numBrakingEvents_numAccelEvents_numHighSpeedEvents_roadDistancesInMeters_roadSpeedBuckets_roadRelativeSpeedBuckets_roadTimes_route_lifeEventIds_ktsSegmentIds_maxTripDistanceInMeters_avgTripDistanceInMeters_maxElevationGainInMeters_avgElevationGainInMeters_percentTimeSpentAtSpeedBuckets_percentTimeSpentAtTrafficBuckets_percentTimeSpentAtRelativeSpeeds_percentTimeSpentAtRoadTypes_percentTimeSpentInWeatherTypes_percentTimeSpentInTerrainTypes_percentDistanceTraveledAtSpeedBuckets_percentDistanceTraveledAtTrafficBuckets_percentDistanceTraveledAtRelativeSpeeds_percentDistanceTraveledForRoadTypes_percentDistanceTraveledInWeatherTypes_percentDistanceTraveledInTerrainTypes_scorePerSpeedBucket_scorePerTrafficBucket_scorePerRelativeSpeed_scorePerRoadType_scorePerWeatherType_scorePerTerrainType_avgNumBrakingEvents_avgNumAccelEvents_avgNumHighSpeedEvents_mostEfficientDriveScore_routeHeatMap_, v96, v95, v94, v93, v91, v90, a5, a6, a7, a8, a9, v89, v88, v87, v86, v140, v139,
          v138,
          v137,
          v136,
          v135,
          v134,
          v133,
          v132,
          v131,
          v130,
          v129,
          a28,
          v85,
          v128,
          v127,
          v126,
          v125,
          v124,
          v123,
          v122,
          v121,
          v120,
          v119,
          v118,
          v117,
          v113,
          v116,
          v115,
          v114,
          v110,
          v108,
          v112,
          v111,
          v109,
          v107,
          v71,
          v72,
          v73,
          v74,
          v75,
          v76,
          v77,
          v78);

  v79 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 8);
  v79(a40, v141);
  v79(a39, v141);
  v79(a38, v141);
  v79(a37, v141);
  v80 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 8);
  v80(a27, v92);
  v80(a26, v92);
  (*(void (**)(uint64_t))(*(_QWORD *)(v97 - 8) + 8))(a25);
  v81 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 8);
  v81(v101, v100);
  v81(v102, v100);
  v79(v103, v141);
  v79(v104, v141);
  v82 = sub_1AE9248DC();
  v83 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 8);
  v83(v105, v82);
  v83(a1, v82);
  return v99;
}

uint64_t sub_1AE7E8C38(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(_QWORD *)(a2 + 16) <= a1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v2 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  swift_unknownObjectRetain_n();
  if (swift_dynamicCast())
    return v2;
LABEL_7:
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE925F74();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_1AE926FDC();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  result = sub_1AE926AC0();
  __break(1u);
  return result;
}

uint64_t sub_1AE7E8D90(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t result;
  _BYTE __dst[144];
  _QWORD __src[19];

  if (a1 < 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1AE7EB034();
  if (!(!v3 & v2))
    goto LABEL_7;
  sub_1AE7EB024();
  __src[18] = v1;
  sub_1AE7EA74C();
  if (sub_1AE506A00())
  {
    memcpy(__dst, __src, sizeof(__dst));
    sub_1AE525BB8((uint64_t)__dst);
    return v1;
  }
LABEL_8:
  sub_1AE7EAB20();
  sub_1AE7EAA00();
  sub_1AE925F74();
  sub_1AE7EA3A4();
  sub_1AE7EAB80();
  sub_1AE7EA740();
  sub_1AE7EA758();
  sub_1AE925F74();
  sub_1AE4F6648();
  result = sub_1AE7EA5A0();
  __break(1u);
  return result;
}

uint64_t sub_1AE7E8EA0(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 v9;
  unsigned __int8 v10;

  if (a1 < 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1AE7EB034();
  if (!(!v3 & v2))
    goto LABEL_7;
  sub_1AE7EB024();
  sub_1AE7EA74C();
  if (sub_1AE506A00())
  {
    sub_1AE525C94(v5, v6, v7, v8, v9, v10);
    sub_1AE4F67AC();
    sub_1AE4F76D8();
    sub_1AE4F81B8();
    sub_1AE4F9038();
    sub_1AE4F665C();
    return v1;
  }
LABEL_8:
  sub_1AE7EA8B4();
  sub_1AE7EAA00();
  sub_1AE925F74();
  sub_1AE7EA3A4();
  sub_1AE7EAB80();
  sub_1AE7EA740();
  sub_1AE7EA758();
  sub_1AE7EACF8();
  sub_1AE4F6648();
  result = sub_1AE7EA5A0();
  __break(1u);
  return result;
}

uint64_t sub_1AE7E8FCC(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1AE7EB034();
  if (!(!v3 & v2))
    goto LABEL_7;
  sub_1AE7EB024();
  sub_1AE7EA74C();
  sub_1AE501548(&qword_1EED9AD18);
  if (sub_1AE506A00())
  {
    swift_bridgeObjectRelease();
    sub_1AE4F9038();
    return v1;
  }
LABEL_8:
  sub_1AE7EAB20();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE7EA3A4();
  sub_1AE7EAB80();
  sub_1AE7EA740();
  sub_1AE7EA758();
  sub_1AE925F74();
  sub_1AE4F6648();
  result = sub_1AE7EA5A0();
  __break(1u);
  return result;
}

uint64_t sub_1AE7E90E0(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v4 = type metadata accessor for CodableLocation();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(_QWORD *)(a2 + 16) <= a1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  v9[0] = v7;
  swift_unknownObjectRetain_n();
  if (swift_dynamicCast())
  {
    sub_1AE57B7C0((uint64_t)v6);
    return v7;
  }
LABEL_7:
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE925F74();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_1AE926FDC();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  result = sub_1AE926AC0();
  __break(1u);
  return result;
}

uint64_t sub_1AE7E927C(uint64_t a1)
{
  return sub_1AE7E9318(a1);
}

uint64_t sub_1AE7E9288(uint64_t a1)
{
  return sub_1AE7E9318(a1);
}

uint64_t sub_1AE7E9294(uint64_t a1)
{
  return sub_1AE7E9318(a1);
}

uint64_t sub_1AE7E92A0(uint64_t a1)
{
  return sub_1AE7E9318(a1);
}

uint64_t sub_1AE7E92AC(uint64_t a1)
{
  return sub_1AE7E9318(a1);
}

uint64_t sub_1AE7E92B8(uint64_t a1)
{
  return sub_1AE7E9318(a1);
}

uint64_t sub_1AE7E92C4(unint64_t a1, uint64_t a2)
{
  return sub_1AE7E9424(a1, a2, &qword_1EED9A888);
}

uint64_t sub_1AE7E92D0(uint64_t a1)
{
  return sub_1AE7E9318(a1);
}

uint64_t sub_1AE7E92DC(uint64_t a1)
{
  return sub_1AE7E9318(a1);
}

uint64_t sub_1AE7E92E8(uint64_t a1)
{
  return sub_1AE7E9318(a1);
}

uint64_t sub_1AE7E92F4(uint64_t a1)
{
  return sub_1AE7E9318(a1);
}

uint64_t sub_1AE7E9300(uint64_t a1)
{
  return sub_1AE7E9318(a1);
}

uint64_t sub_1AE7E930C(uint64_t a1)
{
  return sub_1AE7E9318(a1);
}

uint64_t sub_1AE7E9318(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1AE7EB034();
  if (!(!v5 & v4))
    goto LABEL_7;
  v6 = v3;
  v7 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 8 * v1 + 0x20);
  sub_1AE7EA74C();
  sub_1AE501548(v6);
  if (sub_1AE506A00())
  {
    swift_bridgeObjectRelease();
    return v7;
  }
LABEL_8:
  sub_1AE7EA8B4();
  sub_1AE7EAA00();
  sub_1AE7EB5B4();
  sub_1AE7EACF8();
  sub_1AE4F665C();
  sub_1AE7EA3A4();
  sub_1AE7EAB80();
  sub_1AE7EA740();
  sub_1AE7EA758();
  sub_1AE7EACF8();
  sub_1AE4F6648();
  result = sub_1AE7EA5A0();
  __break(1u);
  return result;
}

uint64_t sub_1AE7E940C(unint64_t a1, uint64_t a2)
{
  return sub_1AE7E9424(a1, a2, &qword_1EED9A850);
}

uint64_t sub_1AE7E9418(unint64_t a1, uint64_t a2)
{
  return sub_1AE7E9424(a1, a2, &qword_1EED9E350);
}

uint64_t sub_1AE7E9424(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = sub_1AE52FD5C(a1, a2, a3);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4FD234();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(_QWORD *)(a2 + 16) <= a1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  sub_1AE7EA74C();
  if (sub_1AE506A00())
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
    return v8;
  }
LABEL_7:
  sub_1AE7EAB20();
  sub_1AE7EAA00();
  sub_1AE7EB5B4();
  sub_1AE925F74();
  sub_1AE4F665C();
  sub_1AE7EA3A4();
  sub_1AE7EAB80();
  sub_1AE7EA740();
  sub_1AE7EA758();
  sub_1AE925F74();
  sub_1AE4F6648();
  result = sub_1AE7EA5A0();
  __break(1u);
  return result;
}

uint64_t sub_1AE7E9550(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1AE7EB034();
  if (!(!v4 & v3))
    goto LABEL_7;
  v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 8 * v1 + 0x20);
  sub_1AE7EA74C();
  sub_1AE501548((uint64_t *)&unk_1EED9A840);
  if (sub_1AE506A00())
  {
    swift_bridgeObjectRelease();
    return v5;
  }
LABEL_8:
  sub_1AE7EA8B4();
  sub_1AE7EACF8();
  sub_1AE925F74();
  sub_1AE7EA3A4();
  sub_1AE7EAB80();
  sub_1AE7EA740();
  sub_1AE7EA758();
  sub_1AE7EACF8();
  sub_1AE4F6648();
  result = sub_1AE7EA5A0();
  __break(1u);
  return result;
}

uint64_t sub_1AE7E9650(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE521A0C);
}

uint64_t sub_1AE7E965C(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE521FB8);
}

uint64_t sub_1AE7E9668(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE521FEC);
}

uint64_t sub_1AE7E9674(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE522020);
}

uint64_t sub_1AE7E9680(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE522054);
}

uint64_t sub_1AE7E968C(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE522088);
}

uint64_t sub_1AE7E9698(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE5220BC);
}

uint64_t sub_1AE7E96A4(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE5220F0);
}

uint64_t sub_1AE7E96B0(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE522124);
}

uint64_t sub_1AE7E96BC(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE522158);
}

uint64_t sub_1AE7E96C8(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE52218C);
}

uint64_t sub_1AE7E96D4(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE5221C0);
}

uint64_t sub_1AE7E96E0(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE5221F4);
}

uint64_t sub_1AE7E96EC(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE522228);
}

uint64_t sub_1AE7E96F8(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE52225C);
}

uint64_t sub_1AE7E9704(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE522290);
}

uint64_t sub_1AE7E9710(uint64_t a1)
{
  return sub_1AE7E971C(a1, (uint64_t (*)(void))sub_1AE5222C4);
}

uint64_t sub_1AE7E971C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t result;

  v4 = *v2;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  if (!(_DWORD)result || a1 > *(_QWORD *)(v4 + 24) >> 1)
    return a2();
  return result;
}

uint64_t sub_1AE7E9794()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE52173C);
}

uint64_t sub_1AE7E97A0()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE521A0C);
}

uint64_t sub_1AE7E97AC()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE521FB8);
}

uint64_t sub_1AE7E97B8()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE521FEC);
}

uint64_t sub_1AE7E97C4()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE522020);
}

uint64_t sub_1AE7E97D0()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE522054);
}

uint64_t sub_1AE7E97DC()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE522088);
}

uint64_t sub_1AE7E97E8()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE5220BC);
}

uint64_t sub_1AE7E97F4()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE5220F0);
}

uint64_t sub_1AE7E9800()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE522124);
}

uint64_t sub_1AE7E980C()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE522158);
}

uint64_t sub_1AE7E9818()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE52218C);
}

uint64_t sub_1AE7E9824()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE5221C0);
}

uint64_t sub_1AE7E9830()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE5221F4);
}

uint64_t sub_1AE7E983C()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE522228);
}

uint64_t sub_1AE7E9848()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE52225C);
}

uint64_t sub_1AE7E9854()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE522290);
}

uint64_t sub_1AE7E9860()
{
  return sub_1AE7E986C((uint64_t (*)(uint64_t))sub_1AE5222C4);
}

uint64_t sub_1AE7E986C(uint64_t (*a1)(uint64_t))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v2;
  if ((result & 1) == 0)
  {
    v4 = sub_1AE505FE4();
    return a1(v4);
  }
  return result;
}

uint64_t sub_1AE7E98C0(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE52173C);
}

uint64_t sub_1AE7E98CC(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE521A0C);
}

uint64_t sub_1AE7E98D8(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE521FB8);
}

uint64_t sub_1AE7E98E4(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE521FEC);
}

uint64_t sub_1AE7E98F0(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE522020);
}

uint64_t sub_1AE7E98FC(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE522054);
}

uint64_t sub_1AE7E9908(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE522088);
}

uint64_t sub_1AE7E9914(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE5220BC);
}

uint64_t sub_1AE7E9920(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE5220F0);
}

uint64_t sub_1AE7E992C(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE522124);
}

uint64_t sub_1AE7E9938(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE522158);
}

uint64_t sub_1AE7E9944(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE52218C);
}

uint64_t sub_1AE7E9950(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE5221C0);
}

uint64_t sub_1AE7E995C(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE5221F4);
}

uint64_t sub_1AE7E9968(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE522228);
}

uint64_t sub_1AE7E9974(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE52225C);
}

uint64_t sub_1AE7E9980(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE522290);
}

uint64_t sub_1AE7E998C(uint64_t a1)
{
  return sub_1AE7E9998(a1, (uint64_t (*)(BOOL))sub_1AE5222C4);
}

uint64_t sub_1AE7E9998(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
    return a2(v3 > 1);
  return result;
}

void *sub_1AE7E99C4(uint64_t a1, const void *a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = a1 + 1;
  return memcpy((void *)(v3 + 144 * a1 + 32), a2, 0x90uLL);
}

uint64_t sub_1AE7E99E4(uint64_t result, double a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = result + 1;
  *(double *)(v3 + 8 * result + 32) = a2;
  return result;
}

uint64_t sub_1AE7E99FC(uint64_t a1, uint64_t a2)
{
  return sub_1AE7E9A38(a1, a2, &qword_1EED9A888);
}

uint64_t sub_1AE7E9A08(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = result + 1;
  *(_QWORD *)(v3 + 8 * result + 32) = a2;
  return result;
}

uint64_t sub_1AE7E9A20(uint64_t a1, uint64_t a2)
{
  return sub_1AE7E9A38(a1, a2, &qword_1EED9A850);
}

uint64_t sub_1AE7E9A2C(uint64_t a1, uint64_t a2)
{
  return sub_1AE7E9A38(a1, a2, &qword_1EED9E350);
}

uint64_t sub_1AE7E9A38(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  *(_QWORD *)(v6 + 16) = a1 + 1;
  sub_1AE52FD5C(a1, a2, a3);
  sub_1AE7EB5CC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v6 + v7 + *(_QWORD *)(v8 + 72) * a1, a2);
}

uint64_t sub_1AE7E9A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (sub_1AE926A84())
  {
    sub_1AE501548(&qword_1EED9EBB0);
    v0 = sub_1AE926B14();
  }
  else
  {
    v0 = MEMORY[0x1E0DEE9E0];
  }
  v27 = v0;
  sub_1AE926A78();
  swift_unknownObjectRetain();
  v1 = sub_1AE926A9C();
  if (v1)
  {
    v3 = (void *)v1;
    v4 = v2;
    sub_1AE53F468(0, &qword_1EED9A668);
    while (1)
    {
      swift_dynamicCast();
      v25 = v4;
      sub_1AE53F468(0, (unint64_t *)&qword_1ED318F50);
      swift_dynamicCast();
      v5 = objc_msgSend(v3, sel_integerValue);

      v0 = v27;
      v12 = *(_QWORD *)(v27 + 16);
      if (*(_QWORD *)(v27 + 24) <= v12)
      {
        sub_1AE6376E4(v12 + 1, 1, v6, v7, v8, v9, v10, v11, v24, v25);
        v0 = v27;
      }
      result = sub_1AE9266DC();
      v14 = v0 + 64;
      v15 = -1 << *(_BYTE *)(v0 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v0 + 64 + 8 * (v16 >> 6))) == 0)
        break;
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v0 + 64 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
LABEL_17:
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v0 + 48) + 8 * v18) = v26;
      *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v18) = v5;
      ++*(_QWORD *)(v0 + 16);
      v3 = (void *)sub_1AE926A9C();
      v4 = v23;
      if (!v3)
        goto LABEL_18;
    }
    v19 = 0;
    v20 = (unint64_t)(63 - v15) >> 6;
    while (++v17 != v20 || (v19 & 1) == 0)
    {
      v21 = v17 == v20;
      if (v17 == v20)
        v17 = 0;
      v19 |= v21;
      v22 = *(_QWORD *)(v14 + 8 * v17);
      if (v22 != -1)
      {
        v18 = __clz(__rbit64(~v22)) + (v17 << 6);
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_release();
    return v0;
  }
  return result;
}

_QWORD *sub_1AE7E9CE4(uint64_t a1)
{
  _QWORD *result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;

  sub_1AE501548(&qword_1EED9EBB0);
  result = (_QWORD *)sub_1AE926AF0();
  v3 = result;
  v4 = 0;
  v5 = *(_QWORD *)(a1 + 64);
  v21 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = (char *)(result + 8);
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * i);
    v17 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * i);
    result = objc_msgSend(v16, sel_integerValue);
    *(_QWORD *)&v10[(i >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << i;
    *(_QWORD *)(v3[6] + 8 * i) = v17;
    *(_QWORD *)(v3[7] + 8 * i) = result;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v20;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return v3;
    v14 = *(_QWORD *)(v21 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return v3;
      v14 = *(_QWORD *)(v21 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return v3;
        v14 = *(_QWORD *)(v21 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return v3;
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return v3;
    v14 = *(_QWORD *)(v21 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1AE7E9EB8(void *a1, SEL *a2, unint64_t *a3)
{
  id v4;
  void *v5;

  v4 = objc_msgSend(a1, *a2);
  if (v4)
  {
    v5 = v4;
    sub_1AE53F468(0, a3);
    sub_1AE9261CC();

  }
  sub_1AE4F6624();
}

uint64_t sub_1AE7E9F20(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_routeHeatMap);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1AE53F468(0, &qword_1EED9A668);
  sub_1AE53F468(0, (unint64_t *)&qword_1ED318F50);
  sub_1AE7D25C0();
  v3 = sub_1AE925C5C();

  return v3;
}

uint64_t sub_1AE7E9FC0(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || -(-1 << *(_BYTE *)(a4 + 32)) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + 64 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return sub_1AE926850();
LABEL_8:
  __break(1u);
  return result;
}

void sub_1AE7EA03C(unint64_t *a1)
{
  uint64_t v2;

  if (!*a1)
  {
    type metadata accessor for CustomGraphActivityEvent(255);
    v2 = sub_1AE7EAC0C();
    atomic_store(MEMORY[0x1AF454B70](v2), a1);
  }
  sub_1AE4F6664();
}

void sub_1AE7EA074()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v0 = sub_1AE614A44();
  v2 = v1(v0);
  sub_1AE4F775C(v2);
  sub_1AE4F6664();
}

unint64_t sub_1AE7EA09C()
{
  unint64_t result;

  result = qword_1EEDA33E0;
  if (!qword_1EEDA33E0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSliceData, &type metadata for KTSSliceData);
    atomic_store(result, (unint64_t *)&qword_1EEDA33E0);
  }
  return result;
}

uint64_t sub_1AE7EA0D8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 200))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1AE7EA124()
{
  unint64_t result;

  result = qword_1EEDA33E8;
  if (!qword_1EEDA33E8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSData, &type metadata for KTSData);
    atomic_store(result, (unint64_t *)&qword_1EEDA33E8);
  }
  return result;
}

unint64_t sub_1AE7EA160()
{
  unint64_t result;

  result = qword_1EEDA33F0;
  if (!qword_1EEDA33F0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSegmentData, &type metadata for KTSSegmentData);
    atomic_store(result, (unint64_t *)&qword_1EEDA33F0);
  }
  return result;
}

uint64_t sub_1AE7EA19C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_1AE7EA1D0(uint64_t *a1)
{
  sub_1AE7EA260(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1AE7EA260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t result;

  result = a24;
  if (a24)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1AE7EA298(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8;
  void *v9;
  id v10;

  v8 = objc_allocWithZone((Class)GDKTSSliceData);
  v9 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, sel_initWithIdentifier_context_data_metadata_, v9, a3, a4, a5);

  swift_unknownObjectRelease();
  return v10;
}

uint64_t sub_1AE7EA338(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 184);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

void sub_1AE7EA350(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1AE52FD5C(a1, a2, a3);
  sub_1AE4F775C(v3);
  sub_1AE4F6664();
}

void sub_1AE7EA378(void *a1)
{
  bzero(a1, 0xC0uLL);
}

id sub_1AE7EA384@<X0>(uint64_t a1@<X8>)
{
  return *(id *)(a1 + 32);
}

uint64_t sub_1AE7EA38C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1AE7E9FC0(v2, *(_QWORD *)(v0 + 768), *(_DWORD *)(v0 + 760) & 1, v1);
}

uint64_t sub_1AE7EA3A4()
{
  return sub_1AE925F74();
}

void sub_1AE7EA3C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 896) = v1;
}

uint64_t sub_1AE7EA3DC()
{
  return sub_1AE9269F4();
}

uint64_t sub_1AE7EA3EC()
{
  return sub_1AE92676C();
}

uint64_t sub_1AE7EA42C()
{
  uint64_t v0;
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v0, 1, v1);
}

id sub_1AE7EA44C(uint64_t a1, const char *a2)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(v2 - 256), a2);
}

void sub_1AE7EA454()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1AE52FBE8(v1, v0);
}

uint64_t sub_1AE7EA460()
{
  return sub_1AE9269DC();
}

uint64_t sub_1AE7EA46C()
{
  return sub_1AE9261CC();
}

uint64_t sub_1AE7EA474()
{
  return sub_1AE925E90();
}

void sub_1AE7EA484(uint64_t a1)
{
  uint64_t *v1;

  sub_1AE52FBE8(a1, v1);
}

uint64_t sub_1AE7EA48C()
{
  return sub_1AE9269E8();
}

uint64_t sub_1AE7EA494@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 1240) = a1;
  return swift_bridgeObjectRetain();
}

id sub_1AE7EA4A0(uint64_t a1, const char *a2)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(v2 - 800), a2);
}

uint64_t sub_1AE7EA4AC()
{
  return sub_1AE9269B8();
}

uint64_t sub_1AE7EA4B8()
{
  return sub_1AE9269E8();
}

uint64_t sub_1AE7EA4D0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = 5;
  return swift_willThrow();
}

uint64_t sub_1AE7EA4E0(double a1)
{
  uint64_t *v1;
  char v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 200) = v2;
  *(double *)(v3 - 192) = a1;
  return sub_1AE501548(v1);
}

void sub_1AE7EA4F0(int a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v2, a1 ^ 1u, 1, v3);

}

uint64_t sub_1AE7EA510(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return sub_1AE5CDFE8(v3, a2, a3);
}

uint64_t sub_1AE7EA518()
{
  return sub_1AE9269F4();
}

uint64_t sub_1AE7EA524()
{
  return sub_1AE9269F4();
}

uint64_t sub_1AE7EA54C()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 - 176) + 16);
}

uint64_t sub_1AE7EA55C()
{
  return sub_1AE9269B8();
}

uint64_t sub_1AE7EA564()
{
  return sub_1AE9269C4();
}

uint64_t sub_1AE7EA56C()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

uint64_t sub_1AE7EA5A0()
{
  return sub_1AE926AC0();
}

void sub_1AE7EA5B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1AE7EA350(a1, a2, v2);
}

uint64_t sub_1AE7EA5C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;

  v5 = *(_BYTE **)(v1 - 256);
  *v5 = v2;
  return (*(uint64_t (**)(_BYTE *, uint64_t, _QWORD))(*(_QWORD *)(v4 - 240) + 32))(&v5[a1], v3, *(_QWORD *)(v4 - 224));
}

uint64_t sub_1AE7EA5E4()
{
  return sub_1AE92445C();
}

__n128 sub_1AE7EA610()
{
  uint64_t v0;
  __n128 result;

  result = *(__n128 *)(v0 - 224);
  *(__n128 *)(v0 - 176) = result;
  return result;
}

void sub_1AE7EA628(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1AE7EA350(a1, a2, v2);
}

void sub_1AE7EA630(int a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, a1 ^ 1u, 1, v2);

}

id sub_1AE7EA650@<X0>(const char *a1@<X1>, uint64_t a2@<X8>)
{
  return objc_msgSend(*(id *)(a2 - 256), a1);
}

void sub_1AE7EA658(char a1@<W8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 200) = 0;
  *(_BYTE *)(v1 - 192) = a1;
  JUMPOUT(0x1AF453598);
}

uint64_t sub_1AE7EA66C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t);

  return v2(*(_QWORD *)(v0 + 752), v1);
}

uint64_t sub_1AE7EA68C()
{
  return sub_1AE9269F4();
}

uint64_t sub_1AE7EA69C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t);

  return v2(*(_QWORD *)(v0 + 872), v1);
}

uint64_t sub_1AE7EA6B0()
{
  return 0;
}

uint64_t sub_1AE7EA6C8()
{
  return 0;
}

void sub_1AE7EA6E0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1AE7EA350(a1, a2, v2);
}

uint64_t sub_1AE7EA6E8@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

void sub_1AE7EA734()
{
  sub_1AE7D5D54();
}

uint64_t sub_1AE7EA740()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE7EA74C()
{
  return swift_unknownObjectRetain_n();
}

uint64_t sub_1AE7EA758()
{
  return sub_1AE926FDC();
}

void sub_1AE7EA764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1AE520ED4(a1, a2, (uint64_t)&a10, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void sub_1AE7EA770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1AE520ED4(a1, a2, (uint64_t)&a10, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1AE7EA788(double a1)
{
  char v1;
  uint64_t *v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 200) = v1;
  *(double *)(v3 - 192) = a1;
  return sub_1AE501548(v2);
}

uint64_t sub_1AE7EA7D4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  return sub_1AE5CDFE8(v0, v1, v2);
}

uint64_t sub_1AE7EA7F4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char v3;

  return sub_1AE7E9FC0(v1, v2, v3 & 1, v0);
}

uint64_t sub_1AE7EA808()
{
  return sub_1AE924450();
}

uint64_t sub_1AE7EA81C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;

  v5 = &v3[*(int *)(*(_QWORD *)(a1 - 256) + 48)];
  *v3 = v2;
  return (*(uint64_t (**)(_BYTE *, uint64_t, _QWORD))(*(_QWORD *)(v4 - 208) + 32))(v5, v1, *(_QWORD *)(v4 - 192));
}

uint64_t sub_1AE7EA840@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;

  v5 = &v3[*(int *)(*(_QWORD *)(a1 - 256) + 48)];
  *v3 = v2;
  return (*(uint64_t (**)(_BYTE *, uint64_t, _QWORD))(*(_QWORD *)(v4 - 200) + 32))(v5, v1, *(_QWORD *)(v4 - 184));
}

uint64_t sub_1AE7EA864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t);

  return v2(*(_QWORD *)(v0 + 752), v1);
}

uint64_t sub_1AE7EA878@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t sub_1AE7EA88C()
{
  return swift_dynamicCast();
}

uint64_t sub_1AE7EA8A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 - 248) + 32))(a1, v1, *(_QWORD *)(v2 - 232));
}

uint64_t sub_1AE7EA8B4()
{
  return sub_1AE92691C();
}

uint64_t sub_1AE7EA8C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t);

  return v2(*(_QWORD *)(v0 + 872), v1);
}

uint64_t sub_1AE7EA8DC()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

uint64_t sub_1AE7EA8E8()
{
  return swift_arrayDestroy();
}

uint64_t sub_1AE7EA8FC()
{
  return swift_dynamicCastObjCClass();
}

uint64_t sub_1AE7EA908(float a1)
{
  float *v1;

  *v1 = a1;
  return 0;
}

uint64_t sub_1AE7EA91C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_1AE7EA930()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 896) = v1 + 64;
}

BOOL sub_1AE7EA948@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

id sub_1AE7EA960(uint64_t a1, const char *a2)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(v2 - 240), a2);
}

uint64_t sub_1AE7EA968(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_1AE7EA970()
{
  return sub_1AE925C5C();
}

uint64_t sub_1AE7EA990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = v0;
  return *(_QWORD *)(v2 - 120);
}

uint64_t sub_1AE7EA9B8()
{
  char v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;

  v4 = *(_QWORD *)(v3 - 104);
  v5 = &v2[*(int *)(*(_QWORD *)(v3 - 96) + 48)];
  *v2 = v0;
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 112) + 32))(v5, v1, v4);
}

void sub_1AE7EA9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;

  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a3, a4);

}

uint64_t sub_1AE7EA9E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = a1;
  return sub_1AE9261CC();
}

uint64_t sub_1AE7EA9F0()
{
  uint64_t v0;

  return sub_1AE8DD7BC(*(_QWORD *)(*(_QWORD *)(v0 - 176) + 16));
}

uint64_t sub_1AE7EAA00()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7EAA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_1AE7EAA14()
{
  uint64_t v0;

  return sub_1AE8DD7A4(*(_QWORD *)(*(_QWORD *)(v0 - 160) + 16));
}

uint64_t sub_1AE7EAA24()
{
  uint64_t v0;

  return sub_1AE8DD7C8(*(_QWORD *)(*(_QWORD *)(v0 - 160) + 16));
}

uint64_t sub_1AE7EAA34()
{
  uint64_t v0;

  return sub_1AE8DD7B0(*(_QWORD *)(*(_QWORD *)(v0 - 160) + 16));
}

uint64_t sub_1AE7EAA44()
{
  return objc_opt_self();
}

uint64_t sub_1AE7EAA4C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  return sub_1AE8DDD78(v1, v0, v2);
}

uint64_t sub_1AE7EAA5C()
{
  char v0;
  uint64_t v1;
  double v2;

  return sub_1AE8DD9C8(v1, v0, v2);
}

uint64_t sub_1AE7EAA6C()
{
  return sub_1AE9248A0();
}

uint64_t sub_1AE7EAA78()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  return sub_1AE8DDD78(v1, v0, v2);
}

uint64_t sub_1AE7EAA88(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v1, v3);
}

uint64_t sub_1AE7EAA94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_1AE7EAAA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1AE7E9FC0(v1, *(_QWORD *)(v0 + 888), *(_DWORD *)(v0 + 880) & 1, v2);
}

uint64_t sub_1AE7EAAB8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE7EAAD0(float a1)
{
  float *v1;

  *v1 = a1;
  return 0;
}

uint64_t sub_1AE7EAB20()
{
  return sub_1AE92691C();
}

uint64_t sub_1AE7EAB80()
{
  return swift_getObjectType();
}

uint64_t sub_1AE7EAB88()
{
  return sub_1AE926AD8();
}

uint64_t sub_1AE7EAB90()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7EAB9C()
{
  return sub_1AE924444();
}

uint64_t sub_1AE7EABA4()
{
  return swift_dynamicCast();
}

uint64_t sub_1AE7EABBC()
{
  return sub_1AE924444();
}

uint64_t sub_1AE7EABDC()
{
  return sub_1AE92676C();
}

uint64_t sub_1AE7EABF4()
{
  return sub_1AE924450();
}

uint64_t sub_1AE7EAC0C()
{
  uint64_t v0;

  return v0;
}

id sub_1AE7EAC80()
{
  void *v0;

  return v0;
}

uint64_t sub_1AE7EAC88(uint64_t a1)
{
  uint64_t v1;
  double v2;

  return sub_1AE8DDD78(a1, v1, v2);
}

uint64_t sub_1AE7EAC94()
{
  return sub_1AE926850();
}

void sub_1AE7EACA8()
{
  sub_1AE8DD45C();
}

void sub_1AE7EACB4()
{
  sub_1AE8DD444();
}

void sub_1AE7EACC0()
{
  sub_1AE8DD438();
}

void sub_1AE7EACCC()
{
  sub_1AE8DD42C();
}

void sub_1AE7EACD8()
{
  sub_1AE8DD468();
}

id sub_1AE7EACE4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE7E7774(v0, v1);
}

uint64_t sub_1AE7EACF8()
{
  return sub_1AE925F74();
}

void sub_1AE7EAD00()
{
  JUMPOUT(0x1AF453B80);
}

uint64_t sub_1AE7EAD08()
{
  return swift_dynamicCast();
}

uint64_t sub_1AE7EAD14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 192));
}

uint64_t sub_1AE7EAD44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_1AE7EAD4C()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7EAD64()
{
  uint64_t v0;

  return sub_1AE8DBF68(v0);
}

void sub_1AE7EAD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 184) = (char *)&a9 - v9;
}

void sub_1AE7EAD88()
{
  void *v0;

}

uint64_t sub_1AE7EAD94()
{
  return sub_1AE9243C0();
}

uint64_t sub_1AE7EADA8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1AE7E9FC0(a1, a2, a3, v3);
}

void sub_1AE7EADB0()
{
  JUMPOUT(0x1AF453B80);
}

void sub_1AE7EADBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 744) = v1 + 64;
  *(_QWORD *)(v0 + 736) = v1;
}

void sub_1AE7EADD8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 744) = v1 + 64;
  *(_QWORD *)(v0 + 736) = v1;
}

void sub_1AE7EADF4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 864) = v1 + 64;
  *(_QWORD *)(v0 + 856) = v1;
}

void sub_1AE7EAE10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 864) = v1 + 64;
  *(_QWORD *)(v0 + 856) = v1;
}

void sub_1AE7EAE2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 840) = v1 + 64;
  *(_QWORD *)(v0 + 832) = v1;
}

void sub_1AE7EAE48()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 728) = v1 + 64;
  *(_QWORD *)(v0 + 720) = v1;
}

_QWORD *sub_1AE7EAE64(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE7D6F78((_QWORD *)(v1 - 200), a1);
}

uint64_t sub_1AE7EAE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v2);
}

double sub_1AE7EAE78()
{
  double v0;

  return v0;
}

void sub_1AE7EAE94()
{
  sub_1AE519B80(0);
}

void sub_1AE7EAE9C()
{
  sub_1AE519B6C(0);
}

void sub_1AE7EAEA4()
{
  sub_1AE519B58(0);
}

void sub_1AE7EAEAC()
{
  sub_1AE519BA8(0);
}

void sub_1AE7EAEB4()
{
  sub_1AE519B94(0);
}

uint64_t sub_1AE7EAEBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v1, v3);
}

uint64_t sub_1AE7EAEC8(uint64_t a1)
{
  return sub_1AE7D5A48(a1);
}

void sub_1AE7EAED4()
{
  void *v0;

}

void sub_1AE7EAEE0()
{
  void *v0;

}

uint64_t sub_1AE7EAEE8()
{
  return sub_1AE9261CC();
}

uint64_t sub_1AE7EAEF0()
{
  return sub_1AE924444();
}

void sub_1AE7EAEF8()
{
  JUMPOUT(0x1AF453B80);
}

BOOL sub_1AE7EAF00(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1AE7EAF10()
{
  uint64_t v0;

  sub_1AE592EFC();
  return v0;
}

uint64_t sub_1AE7EAF38()
{
  return sub_1AE925F14();
}

uint64_t sub_1AE7EAF48()
{
  return 0;
}

id sub_1AE7EAF60(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 2888));
}

uint64_t sub_1AE7EAF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_1AE7EAF94()
{
  return sub_1AE924450();
}

void sub_1AE7EAFA4(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t sub_1AE7EAFC4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_1AE7EAFCC()
{
  uint64_t v0;

  return sub_1AE8DD58C(*(_QWORD *)(*(_QWORD *)(v0 - 176) + 16));
}

double sub_1AE7EAFDC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;

  v4 = *(double *)(v1 + 8 * v3);
  *(_BYTE *)(v2 + 1216) = *(_BYTE *)(a1 + v3);
  sub_1AE7D7E20();
  return v4;
}

uint64_t sub_1AE7EB004@<X0>(uint64_t a1@<X8>)
{
  return a1 + 1;
}

uint64_t sub_1AE7EB040()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, uint64_t);
  uint64_t v2;

  return v1(*(_QWORD *)(v0 + 752), v2);
}

uint64_t sub_1AE7EB050()
{
  return sub_1AE925B54();
}

void sub_1AE7EB058()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 896) = v1;
}

BOOL sub_1AE7EB07C@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1AE7EB094()
{
  uint64_t v0;

  return sub_1AE8DD7D4(*(_QWORD *)(*(_QWORD *)(v0 - 160) + 16));
}

uint64_t sub_1AE7EB0A4()
{
  uint64_t v0;

  return sub_1AE8DD798(*(_QWORD *)(*(_QWORD *)(v0 - 160) + 16));
}

uint64_t sub_1AE7EB0B4()
{
  return 0;
}

uint64_t sub_1AE7EB0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AE7D79A8(a1, a2, v2);
}

void sub_1AE7EB0D4(int a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v2, a1 ^ 1u, 1, v3);

}

void sub_1AE7EB0F4(int a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v2, a1 ^ 1u, 1, v3);

}

uint64_t sub_1AE7EB124(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_unknownObjectRetain();
}

uint64_t sub_1AE7EB134@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t sub_1AE7EB144()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7EB154()
{
  uint64_t v0;

  return v0;
}

id sub_1AE7EB16C()
{
  void *v0;

  return v0;
}

id sub_1AE7EB17C()
{
  void *v0;

  return v0;
}

void *sub_1AE7EB1A4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xE0uLL);
}

uint64_t sub_1AE7EB1C4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 240) = result;
  return result;
}

uint64_t sub_1AE7EB1D0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1AE7EB1D8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_1AE7EB1E0()
{
  uint64_t v0;

  return v0;
}

void sub_1AE7EB1EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 736) = v1 + 64;
  *(_QWORD *)(v0 + 728) = v1;
}

void sub_1AE7EB204()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 856) = v1 + 64;
  *(_QWORD *)(v0 + 840) = v1;
}

uint64_t sub_1AE7EB228()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  return sub_1AE8DDD78(v0, v1, v2);
}

uint64_t sub_1AE7EB238()
{
  uint64_t v0;

  return sub_1AE64A338(v0);
}

void sub_1AE7EB240()
{
  sub_1AE519B44(0);
}

id sub_1AE7EB258(uint64_t a1, const char *a2)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(v2 - 184), a2);
}

uint64_t sub_1AE7EB280()
{
  return sub_1AE925E3C();
}

uint64_t sub_1AE7EB288()
{
  return sub_1AE9261CC();
}

void sub_1AE7EB294(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1AE7EA350(a1, a2, v2);
}

uint64_t sub_1AE7EB29C(float a1)
{
  float *v1;

  *v1 = a1;
  return 0;
}

uint64_t sub_1AE7EB2C4(double a1)
{
  uint64_t *v1;
  uint64_t v2;

  *(double *)(v2 - 192) = a1;
  return sub_1AE501548(v1);
}

double sub_1AE7EB2D0()
{
  uint64_t v0;
  uint64_t v1;

  return *(double *)(v0 + 8 * v1);
}

uint64_t sub_1AE7EB2E4()
{
  return sub_1AE9261C0();
}

uint64_t sub_1AE7EB2F8()
{
  return sub_1AE926EC8();
}

double sub_1AE7EB304()
{
  uint64_t v0;
  uint64_t v1;

  return *(double *)(*(_QWORD *)(v0 + 56) + 8 * v1);
}

uint64_t sub_1AE7EB330@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

uint64_t sub_1AE7EB344()
{
  return sub_1AE924450();
}

uint64_t sub_1AE7EB350()
{
  return sub_1AE924450();
}

uint64_t sub_1AE7EB35C@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 - 256);
}

void sub_1AE7EB384()
{
  void *v0;

}

uint64_t sub_1AE7EB398@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 712) = a1;
  return EntityIdentifier.stringValue.getter();
}

BOOL sub_1AE7EB3A4@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

BOOL sub_1AE7EB3B8@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

BOOL sub_1AE7EB3CC@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1AE7EB3EC()
{
  return objc_opt_self();
}

void sub_1AE7EB3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  sub_1AE520ED4(a1, v20, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void sub_1AE7EB3FC()
{
  sub_1AE8DD450();
}

void sub_1AE7EB404(uint64_t a1, void (*a2)(_QWORD *__return_ptr), void (*a3)(uint64_t *__return_ptr, uint64_t *), void (*a4)(uint64_t))
{
  uint64_t v4;

  sub_1AE7D6250(v4, a2, a3, a4);
}

uint64_t sub_1AE7EB410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

_QWORD *sub_1AE7EB418(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE7D768C((_QWORD *)(v1 - 177), a1);
}

_QWORD *sub_1AE7EB420(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE7D7580((_QWORD *)(v1 - 177), a1);
}

uint64_t sub_1AE7EB428()
{
  return sub_1AE7D7C0C();
}

uint64_t sub_1AE7EB430()
{
  return sub_1AE924444();
}

void sub_1AE7EB450()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;

  *v1 = *(_BYTE *)(*(_QWORD *)(v0 + 48) + v2);
}

void sub_1AE7EB464()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;

  *v1 = *(_BYTE *)(*(_QWORD *)(v0 + 48) + v2);
}

uint64_t sub_1AE7EB48C()
{
  return type metadata accessor for CodableLocation();
}

void sub_1AE7EB498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 + 528) = (char *)&a9 - v9;
}

void sub_1AE7EB4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 + 688) = (char *)&a9 - v9;
}

uint64_t sub_1AE7EB4C0()
{
  uint64_t v0;

  return v0 + 16;
}

uint64_t sub_1AE7EB4D4()
{
  return 0;
}

void sub_1AE7EB4E0()
{
  sub_1AE519618(0);
}

void sub_1AE7EB4EC(uint64_t a1, SEL *a2, unint64_t *a3)
{
  uint64_t v3;

  sub_1AE7E9EB8(*(void **)(v3 - 800), a2, a3);
}

uint64_t sub_1AE7EB4F8()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_1AE7EB504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void sub_1AE7EB510()
{
  JUMPOUT(0x1AF453B80);
}

void sub_1AE7EB51C()
{
  uint64_t v0;

  sub_1AE62C224(v0);
}

uint64_t sub_1AE7EB524(uint64_t result)
{
  uint64_t v1;

  **(_QWORD **)(v1 - 192) = result;
  return result;
}

_BYTE *sub_1AE7EB538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;

  v3 = *(_BYTE **)(v1 + 560);
  *v3 = v2;
  return &v3[a1];
}

uint64_t sub_1AE7EB54C()
{
  return sub_1AE926D18();
}

uint64_t sub_1AE7EB558()
{
  return sub_1AE9269F4();
}

id sub_1AE7EB560()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(v0 + 8 * v1 + 32);
}

id sub_1AE7EB56C(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 2888));
}

void sub_1AE7EB578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = v0 & 0xC000000000000001;
  *(_QWORD *)(v2 - 160) = v0;
  *(_QWORD *)(v2 - 152) = v1;
}

uint64_t sub_1AE7EB58C()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE8DD928(v1, v0);
}

uint64_t sub_1AE7EB598()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AE7E8C38(v1, v0);
}

uint64_t sub_1AE7EB5A4()
{
  return sub_1AE925E3C();
}

uint64_t sub_1AE7EB5AC()
{
  return sub_1AE9269E8();
}

uint64_t sub_1AE7EB5B4()
{
  return sub_1AE926FDC();
}

uint64_t sub_1AE7EB5C0()
{
  return sub_1AE9269F4();
}

void sub_1AE7EB5E0()
{
  sub_1AE519940(0);
}

void sub_1AE7EB5E8()
{
  sub_1AE519934(0);
}

void sub_1AE7EB5F0()
{
  sub_1AE519958(0);
}

void sub_1AE7EB5F8()
{
  sub_1AE519970(0);
}

void sub_1AE7EB600()
{
  sub_1AE519964(0);
}

void sub_1AE7EB608()
{
  sub_1AE51994C(0);
}

uint64_t sub_1AE7EB624()
{
  return sub_1AE92676C();
}

uint64_t sub_1AE7EB62C(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void sub_1AE7EB634(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;

  *(_QWORD *)(a2 - 256) = a1;

}

void sub_1AE7EB63C()
{
  void *v0;

}

uint64_t sub_1AE7EB650()
{
  return sub_1AE925E90();
}

uint64_t sub_1AE7EB65C()
{
  return swift_retain();
}

uint64_t sub_1AE7EB668()
{
  return j___sSo18GDVUChangeBookmarkC20IntelligencePlatformE20supportsSecureCodingSbyFZ_0();
}

id sub_1AE7EB674()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithSegmentId_, v1);

  return v2;
}

void sub_1AE7EB6E4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 16))
  {
LABEL_2:
    swift_retain();
  }
  else
  {
    if (qword_1ED31C9B0 != -1)
      goto LABEL_8;
    while (1)
    {
      v2 = (void *)qword_1ED31C9A0;
      sub_1AE501548(&qword_1EED98FE0);
      sub_1AE4F66BC();
      v3 = CustomLifeEventContext.init<>(viewService:)(v2);
      if (v1)
        break;
      *(_QWORD *)(v0 + 16) = v3;
      swift_release();
      if (*(_QWORD *)(v0 + 16))
        goto LABEL_2;
      __break(1u);
LABEL_8:
      swift_once();
    }
  }
  sub_1AE5035EC();
}

void sub_1AE7EB790(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = v1;
  *(_QWORD *)(v3 + 16) = 0;
  type metadata accessor for KTSIndexManager();
  sub_1AE4F66BC();
  v5 = KTSIndexManager.init(viewService:)(a1);
  if (v2)
  {
    swift_release();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v6 = v5;
    type metadata accessor for KTSRequestManager();
    v7 = sub_1AE4F66BC();
    *(_QWORD *)(v7 + 16) = v6;
    *(_BYTE *)(v7 + 24) = 0;
    *(_QWORD *)(v3 + 24) = v7;
  }
  sub_1AE5035EC();
}

void sub_1AE7EB82C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  os_signpost_type_t v23;
  uint8_t *v24;
  os_signpost_id_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint8_t *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[24];
  _BYTE v60[200];
  uint64_t v61;

  sub_1AE4F67EC();
  v53 = (uint8_t *)v0;
  v54 = v1;
  v52 = v5;
  v51 = sub_1AE508FBC();
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4FFEB4();
  v9 = v7 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v47 - v11;
  v13 = sub_1AE4F6854();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1AE5035E4();
  v49 = *(_QWORD *)(v17 - 8);
  v50 = v17;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v18);
  v48 = sub_1AE50A6A8();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE7EFBC4(v20, (uint64_t)v47);
  if (qword_1ED31C728 != -1)
    swift_once();
  v21 = sub_1AE4FB608(v13, (uint64_t)qword_1ED31C710);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v47 = v13;
  v22(v16, v21, v13);
  sub_1AE7EFE84();
  sub_1AE7EFE68();
  sub_1AE7EFE60();
  sub_1AE925B00();
  v23 = sub_1AE7EFE40();
  if ((sub_1AE926700() & 1) != 0)
  {
    v24 = (uint8_t *)sub_1AE4F66A0();
    v25 = sub_1AE7EFC30(v24);
    sub_1AE5079F0(&dword_1AE4F2000, v3, v23, v25, "KTS.InProcessService.request", "", v24);
    sub_1AE4F9064();
  }

  sub_1AE6149B4(v9, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v26 = sub_1AE509980();
  sub_1AE4FBA8C((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v27 = v55;
  *v55 = "KTS.InProcessService.request";
  v27[1] = 28;
  *((_BYTE *)v27 + 16) = 2;
  v27[3] = v26;
  sub_1AE7EFC24((uint64_t)v27 + *(int *)(v48 + 24), v49);
  sub_1AE7D7E28((uint64_t)v60);
  sub_1AE4F6D24(v59, v60);
  v28 = v54;
  sub_1AE7EBCCC();
  if (v28)
  {
    sub_1AE7EF970((uint64_t)v60);
    sub_1AE7EF320((uint64_t)v27);
    sub_1AE50B9EC((uint64_t)v27);
  }
  else
  {
    v30 = v29;
    sub_1AE7EF970((uint64_t)v60);
    v31 = *(_QWORD *)(v30 + 16);
    if (v31)
    {
      v57 = MEMORY[0x1E0DEE9D8];
      sub_1AE9269DC();
      v32 = v30 + 32;
      do
      {
        sub_1AE57C238(v32, (uint64_t)v59);
        sub_1AE4F9858(v59, v59[3]);
        sub_1AE7EFD6C();
        sub_1AE7E7050();
        _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v59);
        sub_1AE9269B8();
        sub_1AE9269E8();
        sub_1AE9269F4();
        sub_1AE9269C4();
        v32 += 40;
        --v31;
      }
      while (v31);
      v33 = v57;
      sub_1AE4F76D8();
    }
    else
    {
      sub_1AE4F76D8();
      v33 = MEMORY[0x1E0DEE9D8];
    }
    v61 = v33;
    v34 = v47;
    if (qword_1EED99830 != -1)
      swift_once();
    sub_1AE4F77E8((uint64_t)v34, (uint64_t)qword_1EED9F800);
    v35 = sub_1AE5062C0();
    if (sub_1AE7EFC5C())
    {
      v36 = (uint8_t *)sub_1AE4F66A0();
      v54 = sub_1AE4F66A0();
      v59[0] = v54;
      *(_DWORD *)v36 = 136315138;
      v53 = v36 + 4;
      sub_1AE4F9094();
      swift_bridgeObjectRetain();
      v37 = sub_1AE501548((uint64_t *)&unk_1EEDA34D0);
      v38 = MEMORY[0x1AF453400](v61, v37);
      v40 = v39;
      swift_bridgeObjectRelease();
      sub_1AE520ED4(v38, v40, (uint64_t)v59, v41, v42, v43, v44, v45, (uint64_t)v47, v48, v49, v50, v51, v52, (uint64_t)v53, v54, (uint64_t)v55, v56, v57,
        v58);
      v56 = v46;
      sub_1AE92676C();
      sub_1AE4F6728();
      sub_1AE508348(&dword_1AE4F2000, v34, v35, "Got an object response: %s", v36);
      sub_1AE5081C8();
      sub_1AE4F9064();
    }

    sub_1AE4F9094();
    sub_1AE7EF320((uint64_t)v27);
    sub_1AE50B9EC((uint64_t)v27);
  }
  sub_1AE4F667C();
}

void sub_1AE7EBCCC()
{
  uint64_t v0;
  char v1;
  char v2;
  const void *v3;
  const void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _DWORD *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 __src;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114[200];

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  sub_1AE4F6D24(v114, v3);
  sub_1AE4F6D24(&__src, v4);
  sub_1AE7F50CC((unsigned __int8 *)&__src);
  if (!v0 && (v2 & 1) != 0)
  {
    HIBYTE(v80) = 2;
    static KTSRecordType.combine(ktsRecords:intoRowWithId:withType:graphContext:)();
    sub_1AE4F9038();
    if (v89)
    {
      sub_1AE50AF58(&v87, (uint64_t)&__src);
      sub_1AE501548(&qword_1EED9A7D8);
      v5 = sub_1AE4F66BC();
      *(_OWORD *)(v5 + 16) = xmmword_1AE934250;
      sub_1AE50AF58(&__src, v5 + 32);
    }
    else
    {
      sub_1AE52982C((uint64_t)&v87, &qword_1EEDA3438);
      if (qword_1EED99830 != -1)
        swift_once();
      v6 = sub_1AE4F6854();
      v7 = sub_1AE4FB608(v6, (uint64_t)qword_1EED9F800);
      v15 = sub_1AE7EFDF8(v7, v8, v9, v10, v11, v12, v13, v14, v73, v80, v87, *((uint64_t *)&v87 + 1), v88, v89, v90, __src, *((uint64_t *)&__src + 1), v92, v93,
              v94,
              v95,
              v96,
              v97,
              v98,
              v99,
              v100,
              v101,
              v102,
              v103,
              v104,
              v105,
              v106,
              v107,
              v108,
              v109,
              v110,
              v111,
              v112,
              v113,
              v114[0]);
      sub_1AE7EFDF8(v15, v16, v17, v18, v19, v20, v21, v22, v74, v81, v87, *((uint64_t *)&v87 + 1), v88, v89, v90, __src, *((uint64_t *)&__src + 1), v92, v93,
        v94,
        v95,
        v96,
        v97,
        v98,
        v99,
        v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114[0]);
      v23 = sub_1AE925B54();
      v24 = sub_1AE9265EC();
      v25 = sub_1AE4F833C(v23);
      if (v25)
      {
        v33 = (_DWORD *)sub_1AE4F66A0();
        *(_QWORD *)&v87 = sub_1AE4F66A0();
        *v33 = 136315138;
        v34 = sub_1AE4F6D24(&__src, v114);
        sub_1AE7EFDF8((uint64_t)v34, v35, v36, v37, v38, v39, v40, v41, v75, v82, v87, *((uint64_t *)&v87 + 1), v88, v89, v90, __src, *((uint64_t *)&__src + 1), v92, v93,
          v94,
          v95,
          v96,
          v97,
          v98,
          v99,
          v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114[0]);
        v42 = sub_1AE7EFDF0();
        sub_1AE520ED4(v42, v43, (uint64_t)&v87, v44, v45, v46, v47, v48, v76, v83, v87, *((uint64_t *)&v87 + 1), v88, v89, v90, __src, *((uint64_t *)&__src + 1), v92, v93,
          v94);
        sub_1AE7EFB84();
        v49 = swift_bridgeObjectRelease();
        v57 = sub_1AE7EFCEC(v49, v50, v51, v52, v53, v54, v55, v56, v77, v84, v87, *((uint64_t *)&v87 + 1), v88, v89, v90, __src, *((uint64_t *)&__src + 1), v92, v93,
                v94,
                v95,
                v96,
                v97,
                v98,
                v99,
                v100,
                v101,
                v102,
                v103,
                v104,
                v105,
                v106,
                v107,
                v108,
                v109,
                v110,
                v111,
                v112,
                v113,
                v114[0]);
        sub_1AE7EFCEC(v57, v58, v59, v60, v61, v62, v63, v64, v78, v85, v87, *((uint64_t *)&v87 + 1), v88, v89, v90, __src, *((uint64_t *)&__src + 1), v92, v93,
          v94,
          v95,
          v96,
          v97,
          v98,
          v99,
          v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114[0]);
        sub_1AE5088B8(&dword_1AE4F2000, v23, v24, "Warn: no results returned for request %s, returning empty data object.");
        sub_1AE505710();
        sub_1AE4F9064();
      }
      v65 = sub_1AE7EFCEC(v25, v26, v27, v28, v29, v30, v31, v32, v75, v82, v87, *((uint64_t *)&v87 + 1), v88, v89, v90, __src, *((uint64_t *)&__src + 1), v92, v93,
              v94,
              v95,
              v96,
              v97,
              v98,
              v99,
              v100,
              v101,
              v102,
              v103,
              v104,
              v105,
              v106,
              v107,
              v108,
              v109,
              v110,
              v111,
              v112,
              v113,
              v114[0]);
      sub_1AE7EFCEC(v65, v66, v67, v68, v69, v70, v71, v72, v79, v86, v87, *((uint64_t *)&v87 + 1), v88, v89, v90, __src, *((uint64_t *)&__src + 1), v92, v93,
        v94,
        v95,
        v96,
        v97,
        v98,
        v99,
        v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114[0]);

    }
  }
  sub_1AE4F667C();
}

void sub_1AE7EBEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  _WORD *v19;
  os_signpost_id_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  unint64_t v29;
  unint64_t v30;
  _BOOL8 v31;
  int64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[25];
  uint64_t v54;
  uint64_t v55;

  sub_1AE4F67EC();
  v47 = v2;
  v46 = v1;
  v6 = v5;
  sub_1AE508FBC();
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F686C();
  v51 = v8;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F6854();
  sub_1AE7EFE70();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1AE5035E4();
  v49 = *(_QWORD *)(v50 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1AE4FBB00();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F90C8();
  if (qword_1ED31C728 != -1)
    swift_once();
  v17 = sub_1AE4FB608(v1, (uint64_t)qword_1ED31C710);
  sub_1AE506F88((uint64_t)v12, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16));
  sub_1AE7EFE9C();
  sub_1AE925B00();
  sub_1AE925AC4();
  v18 = sub_1AE925B00();
  sub_1AE926670();
  if ((sub_1AE7EFE90() & 1) != 0)
  {
    v19 = (_WORD *)sub_1AE4F66A0();
    v45[0] = v4;
    v20 = sub_1AE7EFC9C(v19);
    sub_1AE5079F0(&dword_1AE4F2000, v18, (os_signpost_type_t)v0, v20, "KTS.InProcessService.requestBatch", "", v3);
    sub_1AE4F9064();
  }

  sub_1AE7EFD9C(v51, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  sub_1AE509980();
  sub_1AE501B88(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_1AE4F79FC((uint64_t)"KTS.InProcessService.requestBatch");
  v21 = sub_1AE7EFDCC(v48);
  v22 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(v21, v15, v50);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v2 = v6;
    else
      v2 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v23 = sub_1AE926AD8();
    v22 = sub_1AE4F67AC();
  }
  else
  {
    v23 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v24 = MEMORY[0x1E0DEE9D8];
  v45[1] = v3;
  if (v23)
  {
    v54 = MEMORY[0x1E0DEE9D8];
    sub_1AE7EFE10(v22, v23 & ~(v23 >> 63));
    if (v23 < 0)
    {
      __break(1u);
      return;
    }
    v25 = 0;
    v26 = v54;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v27 = (id)MEMORY[0x1AF453B80](v25, v6);
      else
        v27 = *(id *)(v6 + 8 * v25 + 32);
      v28 = v27;
      sub_1AE7D7E28((uint64_t)v53);

      v30 = *(_QWORD *)(v54 + 16);
      v29 = *(_QWORD *)(v54 + 24);
      if (v30 >= v29 >> 1)
      {
        v31 = sub_1AE7EFCCC(v29);
        sub_1AE522480(v31, v32, v33);
      }
      ++v25;
      *(_QWORD *)(v54 + 16) = v30 + 1;
      sub_1AE4F6D24((void *)(v54 + 192 * v30 + 32), v53);
    }
    while (v23 != v25);
    sub_1AE7EFD58();
    v24 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1AE7EFD58();
  }
  v34 = sub_1AE7EC430(v26, 0);
  if (v2)
  {
    sub_1AE4F66E8();
  }
  else
  {
    v35 = v34;
    sub_1AE4F66E8();
    v36 = *(_QWORD *)(v35 + 16);
    if (v36)
    {
      v55 = v24;
      sub_1AE52244C();
      v37 = 0;
      v51 = v35 + 32;
      v50 = v36;
      do
      {
        v38 = *(_QWORD *)(v51 + 8 * v37);
        v39 = *(_QWORD *)(v38 + 16);
        if (v39)
        {
          v52 = v24;
          swift_bridgeObjectRetain();
          sub_1AE9269DC();
          v40 = v38 + 32;
          do
          {
            sub_1AE57C238(v40, (uint64_t)v53);
            sub_1AE4F9858(v53, v53[3]);
            sub_1AE7E7050();
            _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v53);
            sub_1AE9269B8();
            sub_1AE9269E8();
            sub_1AE9269F4();
            sub_1AE9269C4();
            v40 += 40;
            --v39;
          }
          while (v39);
          v41 = v52;
          sub_1AE4F66E8();
          v24 = MEMORY[0x1E0DEE9D8];
          v36 = v50;
        }
        else
        {
          v41 = v24;
        }
        v42 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE52244C();
          v42 = v55;
        }
        v44 = *(_QWORD *)(v42 + 16);
        v43 = *(_QWORD *)(v42 + 24);
        if (v44 >= v43 >> 1)
        {
          sub_1AE7EFCCC(v43);
          sub_1AE52244C();
          v42 = v55;
        }
        ++v37;
        *(_QWORD *)(v42 + 16) = v44 + 1;
        *(_QWORD *)(v42 + 8 * v44 + 32) = v41;
      }
      while (v37 != v36);
    }
    sub_1AE4F76D8();
  }
  sub_1AE50921C();
  sub_1AE505D74();
  sub_1AE7EFB2C();
  sub_1AE4F667C();
}

uint64_t sub_1AE7EC430(uint64_t a1, int a2)
{
  uint64_t v2;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[192];
  _BYTE v16[200];
  int v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v5 = (const void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_1AE4F6D24(v16, v5);
  sub_1AE4F6D24(v15, v16);
  sub_1AE7EF93C((uint64_t)v16);
  sub_1AE7EFEA8();
  if (v5)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    sub_1AE4F67AC();
    sub_1AE4F81B8();
    sub_1AE7EF970((uint64_t)v16);
  }
  else
  {
    v8 = v6;
    v7 = MEMORY[0x1E0DEE9D8];
    v9 = 224;
    v17 = a2;
    while (1)
    {
      sub_1AE7EF970((uint64_t)v16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE7EFDA8();
        v7 = v12;
      }
      v10 = *(_QWORD *)(v7 + 16);
      if (v10 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1AE7EFDA8();
        v7 = v13;
      }
      *(_QWORD *)(v7 + 16) = v10 + 1;
      *(_QWORD *)(v7 + 8 * v10 + 32) = v8;
      if (!--v2)
        break;
      sub_1AE4F6D24(v16, (const void *)(a1 + v9));
      sub_1AE4F6D24(v15, v16);
      sub_1AE7EF93C((uint64_t)v16);
      sub_1AE7EFEA8();
      v8 = v11;
      v9 += 192;
    }
    sub_1AE4F81B8();
  }
  return v7;
}

void sub_1AE7EC5B0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  NSObject *v22;
  os_signpost_type_t v23;
  uint8_t *v24;
  os_signpost_id_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  NSObject *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  NSObject *v44;
  NSObject *v45;
  os_log_type_t v46;
  _DWORD *v47;
  NSObject *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  uint64_t v57;
  id v58;
  NSObject *v59;
  id v60;
  os_log_type_t v61;
  _DWORD *v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  NSObject *v72;
  _QWORD *v73;
  uint64_t v74[28];
  uint64_t v75[29];
  _BYTE v76[200];

  sub_1AE4F67EC();
  v70 = v0;
  v71 = v1;
  v72 = v4;
  v69 = sub_1AE508FBC();
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4FFEB4();
  v8 = v6 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v64 - v10;
  v12 = sub_1AE4F6854();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1AE5035E4();
  v67 = *(_QWORD *)(v16 - 8);
  v68 = v16;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v17);
  v66 = sub_1AE50A6A8();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v18);
  v73 = (uint64_t *)((char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED31C728 != -1)
    swift_once();
  v20 = sub_1AE4FB608(v12, (uint64_t)qword_1ED31C710);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v65 = v12;
  v21(v15, v20, v12);
  sub_1AE7EFE84();
  sub_1AE7EFE68();
  sub_1AE7EFE60();
  v22 = sub_1AE925B00();
  v23 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v24 = (uint8_t *)sub_1AE4F66A0();
    v25 = sub_1AE7EFC30(v24);
    sub_1AE5079F0(&dword_1AE4F2000, v22, v23, v25, "KTS.InProcessService.requestSlice", "", v24);
    sub_1AE4F9064();
  }

  sub_1AE6149B4(v8, (uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v26 = sub_1AE509980();
  sub_1AE4FBA8C((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  v27 = v73;
  *v73 = "KTS.InProcessService.requestSlice";
  v27[1] = 33;
  *((_BYTE *)v27 + 16) = 2;
  v27[3] = v26;
  v28 = sub_1AE7EFDCC(v66);
  sub_1AE7EFC24(v28, v67);
  v29 = v72;
  sub_1AE7D7E28((uint64_t)v76);
  sub_1AE4F6D24(v75, v76);
  v30 = v71;
  sub_1AE7EBCCC();
  if (v30)
  {
    sub_1AE7EF970((uint64_t)v76);
    goto LABEL_18;
  }
  v32 = v31;
  sub_1AE7EF970((uint64_t)v76);
  v33 = sub_1AE7ECC68(v32);
  sub_1AE4F81B8();
  if (v33)
  {
    v34 = *(_QWORD *)(v33 + 16);
    if (v34)
    {
      sub_1AE7EB1A4(v75, (const void *)(v33 + 32));
      sub_1AE7EF874(v75);
      sub_1AE4F9038();
      if (v34 == 1)
      {
        v35 = sub_1AE7EB1A4(v74, v75);
        sub_1AE7DF5C0((uint64_t)v35, v36, v37, v38, v39, v40, v41, v42, v64, v65, v66, v67, v68, v69, (uint64_t)v70, (uint64_t)v71, (uint64_t)v72, (uint64_t)v73, v74[0],
          v74[1]);
        v57 = qword_1EED99830;
        v58 = v43;
        if (v57 != -1)
          swift_once();
        v59 = sub_1AE4FB608(v65, (uint64_t)qword_1EED9F800);
        v60 = v58;
        sub_1AE925B54();
        v61 = sub_1AE5062C0();
        v72 = v59;
        if (sub_1AE7EFC5C())
        {
          v62 = (_DWORD *)sub_1AE4F66A0();
          v70 = (_QWORD *)sub_1AE4F66A0();
          v71 = v62;
          *v62 = 138412290;
          v74[0] = (uint64_t)v60;
          v63 = v60;
          sub_1AE7EFD88();
          *v70 = v60;

          sub_1AE5088B8(&dword_1AE4F2000, v72, v61, "Got an object response: %@");
          sub_1AE501548(&qword_1ED319410);
          sub_1AE5081C8();
          sub_1AE4F9064();
        }

        sub_1AE7EFE08();
        sub_1AE4F9094();
        goto LABEL_18;
      }
      sub_1AE7EFE08();
    }
    else
    {
      sub_1AE4F9038();
    }
  }
  if (qword_1EED99830 != -1)
    swift_once();
  v44 = sub_1AE4FB608(v65, (uint64_t)qword_1EED9F800);
  v45 = v29;
  sub_1AE925B54();
  v46 = sub_1AE5062C0();
  if (sub_1AE7EFC5C())
  {
    v47 = (_DWORD *)sub_1AE4F66A0();
    v71 = (_QWORD *)sub_1AE4F66A0();
    v72 = 0;
    *v47 = 138412290;
    v75[0] = (uint64_t)v45;
    v48 = v45;
    sub_1AE7EFD88();
    *v71 = v45;

    sub_1AE5088B8(&dword_1AE4F2000, v44, v46, "Warning: No results for request %@; returning empty data and context");
    sub_1AE501548(&qword_1ED319410);
    sub_1AE5081C8();
    sub_1AE4F9064();
  }

  type metadata accessor for KTSContextAggregateRepresentation();
  sub_1AE4F66BC();
  KTSContextAggregateRepresentation.init(originContexts:ktsContexts:destinationContexts:graphLifeEventContext:)(MEMORY[0x1E0DEE9D8]);
  v49 = (void *)sub_1AE7DF8E4();
  sub_1AE4FC564();
  type metadata accessor for KTSDataAggregateRepresentation(0);
  static KTSDataAggregateRepresentation.emptyRepresentation.getter();
  sub_1AE7DF908();
  v51 = v50;
  sub_1AE4F682C();
  v75[28] = (uint64_t)&unk_1EEE21418;
  v72 = swift_dynamicCastObjCProtocolUnconditional();
  v52 = -[NSObject requestID](v45, sel_requestID);
  sub_1AE925E3C();

  v53 = v49;
  v54 = -[NSObject parameters](v45, sel_parameters);
  v55 = objc_allocWithZone((Class)GDKTSSliceData);
  v56 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  objc_msgSend(v55, sel_initWithIdentifier_context_data_parameters_, v56, v53, v72, v54);

LABEL_18:
  sub_1AE7EFBB4();
  sub_1AE7EFBBC();
  sub_1AE4F667C();
}

uint64_t sub_1AE7ECC68(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE v8[224];
  uint64_t v9[28];
  _BYTE v10[224];
  _BYTE v11[40];
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1AE52249C(0, v2, 0);
  v3 = v12;
  if (v2)
  {
    sub_1AE57C238(a1 + 32, (uint64_t)v11);
    sub_1AE501548(&qword_1EEDA34C0);
    if (swift_dynamicCast())
    {
      v4 = a1 + 72;
      while (1)
      {
        nullsub_1(v10);
        sub_1AE7EF9AC((uint64_t)v10, (uint64_t)v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE52249C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v12;
        }
        v6 = *(_QWORD *)(v3 + 16);
        v5 = *(_QWORD *)(v3 + 24);
        if (v6 >= v5 >> 1)
        {
          sub_1AE52249C(v5 > 1, v6 + 1, 1);
          v3 = v12;
        }
        sub_1AE7EF9AC((uint64_t)v9, (uint64_t)v8);
        *(_QWORD *)(v3 + 16) = v6 + 1;
        memcpy((void *)(v3 + 224 * v6 + 32), v8, 0xE0uLL);
        if (!--v2)
          break;
        sub_1AE57C238(v4, (uint64_t)v11);
        sub_1AE501548(&qword_1EEDA34C0);
        v4 += 40;
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_10;
      }
    }
    else
    {
LABEL_10:
      sub_1AE7EF9A4(v8);
      sub_1AE7EF9AC((uint64_t)v8, (uint64_t)v10);
      swift_release();
      sub_1AE7EF9AC((uint64_t)v10, (uint64_t)v9);
      sub_1AE7EF9F4(v9);
      return 0;
    }
  }
  return v3;
}

uint64_t sub_1AE7ECE34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  sub_1AE5224B8();
  v3 = v8;
  if (v2)
  {
    for (i = a1 + 32; ; i += 8)
    {
      swift_bridgeObjectRetain();
      sub_1AE501548((uint64_t *)&unk_1EED9E2A0);
      sub_1AE501548(&qword_1EEDA3450);
      if (!swift_dynamicCast())
        break;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE5224B8();
        v3 = v8;
      }
      v5 = *(_QWORD *)(v3 + 16);
      if (v5 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_1AE5224B8();
        v3 = v8;
      }
      *(_QWORD *)(v3 + 16) = v5 + 1;
      *(_QWORD *)(v3 + 8 * v5 + 32) = v7;
      if (!--v2)
        return v3;
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void sub_1AE7ECF80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint8_t *v21;
  os_signpost_type_t v22;
  os_signpost_id_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67[28];
  uint64_t v68[29];

  sub_1AE4F67EC();
  v60 = v0;
  v61 = v1;
  v4 = v3;
  v5 = sub_1AE508FBC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F686C();
  v65 = v7;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v58 - v9;
  v11 = sub_1AE4F6854();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v12);
  v14 = ((char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_1AE5035E4();
  v63 = *(_QWORD *)(v15 - 8);
  v64 = v15;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v16);
  v62 = sub_1AE4FBB00();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE7EFBC4(v18, v58);
  if (qword_1ED31C728 != -1)
    swift_once();
  v19 = sub_1AE4FB608(v11, (uint64_t)qword_1ED31C710);
  sub_1AE506F88((uint64_t)v14, v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE614A9C();
  sub_1AE925B00();
  sub_1AE7EFD94();
  if ((sub_1AE926700() & 1) != 0)
  {
    v20 = (uint8_t *)sub_1AE4F66A0();
    v59 = v6;
    v21 = v20;
    sub_1AE7EFC3C(v20);
    sub_1AE4F83A0();
    sub_1AE5079F0(&dword_1AE4F2000, v14, v22, v23, "KTS.InProcessService.requestBatchSlice", "", v21);
    sub_1AE4F9064();
  }

  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v65, v10, v5);
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v24 = sub_1AE509980();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  v25 = v66;
  *v66 = "KTS.InProcessService.requestBatchSlice";
  v25[1] = 38;
  *((_BYTE *)v25 + 16) = 2;
  v25[3] = v24;
  v26 = sub_1AE7EFDC0((uint64_t)v25 + *(int *)(v62 + 24), v63);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_1AE926AD8();
    v26 = sub_1AE4F66E8();
  }
  else
  {
    v27 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v28 = MEMORY[0x1E0DEE9D8];
  if (!v27)
  {
LABEL_16:
    v36 = v61;
    v37 = sub_1AE7EC430(v28, 1);
    if (v36)
    {
      sub_1AE4F67AC();
    }
    else
    {
      v39 = v37;
      sub_1AE4F67AC();
      v40 = sub_1AE7ECE34(v39);
      sub_1AE4F9038();
      if (v40)
      {
        v41 = *(_QWORD *)(v40 + 16);
        if (!v41)
        {
LABEL_31:
          sub_1AE4F67AC();
          v57 = v66;
          sub_1AE7EF320((uint64_t)v66);
          sub_1AE50B9EC((uint64_t)v57);
          goto LABEL_19;
        }
        sub_1AE5066FC(MEMORY[0x1E0DEE9D8]);
        v42 = *(_QWORD *)(v40 + 32);
        v43 = *(_QWORD *)(v42 + 16);
        if (v43)
        {
          v44 = 0;
          while (1)
          {
            sub_1AE7EB1A4(v68, (const void *)(v42 + 32));
            if (v43 != 1)
              break;
            sub_1AE7EB1A4(v67, (const void *)(v42 + 32));
            swift_bridgeObjectRetain();
            v45 = sub_1AE7EF874(v68);
            sub_1AE7DF5C0((uint64_t)v45, v46, v47, v48, v49, v50, v51, v52, v58, v59, v60, v61, v62, v63, v64, v65, (uint64_t)v66, v67[0], v67[1],
              v67[2]);
            sub_1AE7EA1D0(v68);
            sub_1AE4F81B8();
            sub_1AE9269B8();
            sub_1AE7EFCBC();
            sub_1AE9269F4();
            sub_1AE9269C4();
            if (v41 - 1 == v44)
              goto LABEL_31;
            v42 = *(_QWORD *)(v40 + 8 * v44 + 40);
            if (!*(_QWORD *)(v42 + 16))
              break;
            v43 = *(_QWORD *)(v42 + 16);
            ++v44;
            if (!v43)
            {
              __break(1u);
              goto LABEL_29;
            }
          }
        }
        swift_bridgeObjectRetain();
        sub_1AE7D2544();
        v55 = sub_1AE4F6778();
        *v56 = 0xD000000000000033;
        v56[1] = 0x80000001AE986880;
        sub_1AE4FE050(v55, (uint64_t)v56);
        sub_1AE4F81B8();
        sub_1AE4F67AC();
        sub_1AE4FC564();
      }
      else
      {
LABEL_29:
        sub_1AE7D2544();
        v53 = sub_1AE4F6778();
        *v54 = 0xD00000000000001BLL;
        v54[1] = 0x80000001AE986860;
        sub_1AE4FE050(v53, (uint64_t)v54);
      }
    }
    v38 = v66;
    sub_1AE7EF320((uint64_t)v66);
    sub_1AE50B9EC((uint64_t)v38);
LABEL_19:
    sub_1AE4F667C();
    return;
  }
  v67[0] = MEMORY[0x1E0DEE9D8];
  sub_1AE7EFE10(v26, v27 & ~(v27 >> 63));
  if ((v27 & 0x8000000000000000) == 0)
  {
    v29 = 0;
    v28 = v67[0];
    v30 = v4 & 0xC000000000000001;
    v31 = v4;
    do
    {
      if (v30)
        v32 = (id)MEMORY[0x1AF453B80](v29, v4);
      else
        v32 = *(id *)(v4 + 8 * v29 + 32);
      v33 = v32;
      sub_1AE7D7E28((uint64_t)v68);

      v67[0] = v28;
      v35 = *(_QWORD *)(v28 + 16);
      v34 = *(_QWORD *)(v28 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_1AE522480(v34 > 1, v35 + 1, 1);
        v28 = v67[0];
      }
      ++v29;
      *(_QWORD *)(v28 + 16) = v35 + 1;
      sub_1AE4F6D24((void *)(v28 + 192 * v35 + 32), v68);
      v4 = v31;
    }
    while (v27 != v29);
    goto LABEL_16;
  }
  __break(1u);
}

void sub_1AE7ED498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  _WORD *v51;
  os_signpost_id_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char *v68;
  id v69;
  char *v70;
  char *v71;
  id v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  sub_1AE4F67EC();
  a19 = v25;
  a20 = v26;
  v85 = v22;
  v79 = v21;
  v80 = v27;
  LODWORD(v82) = v28;
  v75 = v29;
  v81 = v30;
  sub_1AE501548(&qword_1ED30EB60);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v31);
  sub_1AE4F686C();
  v83 = v32;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v33);
  v84 = (uint64_t)&v74 - v34;
  sub_1AE508FBC();
  sub_1AE7EFB74();
  MEMORY[0x1E0C80A78](v35);
  sub_1AE4FFEB4();
  v38 = v36 - v37;
  MEMORY[0x1E0C80A78](v39);
  sub_1AE4F6854();
  sub_1AE7EFE70();
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)&v74 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1AE5035E4();
  v77 = *(_QWORD *)(v43 - 8);
  v78 = v43;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)&v74 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1AE4FBB00();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v47);
  sub_1AE507460(v48, v74);
  if (qword_1ED31C728 != -1)
    swift_once();
  v49 = sub_1AE4FB608(v21, (uint64_t)qword_1ED31C710);
  sub_1AE506F88((uint64_t)v42, v49, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16));
  sub_1AE7EFE9C();
  sub_1AE925B00();
  sub_1AE925AC4();
  v50 = sub_1AE925B00();
  sub_1AE926670();
  if ((sub_1AE7EFE90() & 1) != 0)
  {
    v51 = (_WORD *)sub_1AE4F66A0();
    v52 = sub_1AE7EFC9C(v51);
    sub_1AE5079F0(&dword_1AE4F2000, v50, (os_signpost_type_t)v20, v52, "KTS.InProcessService.ktsSegmentsForStartAndEnd", "", v23);
    sub_1AE4F9064();
  }

  sub_1AE7EFD9C(v38, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  sub_1AE509980();
  sub_1AE501B88(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
  sub_1AE4F79FC((uint64_t)"KTS.InProcessService.ktsSegmentsForStartAndEnd");
  v53 = sub_1AE7EFDCC(v76);
  (*(void (**)(uint64_t, char *, uint64_t))(v77 + 32))(v53, v46, v78);
  v54 = sub_1AE9248DC();
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
  v56 = v84;
  v55(v84, v80, v54);
  sub_1AE7365C8(v56);
  v57 = (uint64_t)v83;
  v55((uint64_t)v83, v81, v54);
  sub_1AE7365C8(v57);
  if ((v82 & 1) != 0)
  {
    LOBYTE(v58) = 8;
  }
  else if (v75 >= 8)
  {
    sub_1AE7D6888(&a10);
    LOBYTE(v58) = a10;
  }
  else
  {
    v58 = 0x706050402010001uLL >> (8 * v75);
  }
  LOBYTE(a10) = v58;
  v59 = v85;
  v60 = sub_1AE7ED950(v56, v57, &a10);
  if (v59)
  {
    sub_1AE7EFD04(v57);
    sub_1AE7EFD04(v56);
  }
  else
  {
    v61 = v60;
    sub_1AE7EFD04(v57);
    sub_1AE7EFD04(v56);
    v62 = *(char **)(v61 + 16);
    if (v62)
    {
      sub_1AE5066FC(MEMORY[0x1E0DEE9D8]);
      v82 = v61;
      v63 = v61 + 64;
      do
      {
        v86 = *(_QWORD *)(v63 - 16);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        v64 = EntityIdentifier.stringValue.getter();
        v84 = v65;
        swift_bridgeObjectRetain();
        v66 = sub_1AE7EFD80();
        v85 = 0;
        v67 = (void *)v66;
        sub_1AE7E4790();
        v83 = v68;
        sub_1AE7EFE00();
        v69 = v67;
        v70 = v83;
        v83 = v62;
        v71 = v70;
        v72 = sub_1AE7EB674();
        sub_1AE7EF7D8(v64, v84, v69, v71, (uint64_t)v72, (Class *)off_1E5DA2378);
        swift_release();
        swift_release();
        sub_1AE4F6728();

        v73 = v83;
        sub_1AE9269B8();
        sub_1AE7EFCBC();
        sub_1AE9269F4();
        sub_1AE9269C4();
        v63 += 40;
        v62 = v73 - 1;
      }
      while (v62);
      sub_1AE7EFD34();
    }
    else
    {
      sub_1AE4F6728();
    }
  }
  sub_1AE7EFBB4();
  sub_1AE7EFBBC();
  sub_1AE4F667C();
}

#error "1AE7EDA9C: call analysis failed (funcsize=179)"

void sub_1AE7EDC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_signpost_type_t v16;
  uint8_t *v17;
  uint8_t *v18;
  os_signpost_id_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1AE4F67EC();
  sub_1AE508FBC();
  sub_1AE7EFB74();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F686C();
  v25 = v3;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - v5;
  v7 = sub_1AE4F6854();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4FB7E8();
  v9 = sub_1AE5035E4();
  v23 = *(_QWORD *)(v9 - 8);
  v24 = v9;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v10);
  v22 = sub_1AE50A6A8();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED31C728 != -1)
    swift_once();
  v14 = sub_1AE4FB608(v7, (uint64_t)qword_1ED31C710);
  sub_1AE506F88(v0, v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  sub_1AE925AF4();
  sub_1AE7EFE68();
  sub_1AE925AC4();
  v15 = sub_1AE925B00();
  v16 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v17 = (uint8_t *)sub_1AE4F66A0();
    v21 = v1;
    v18 = v17;
    *(_WORD *)v17 = 0;
    v19 = sub_1AE925AD0();
    sub_1AE5079F0(&dword_1AE4F2000, v15, v16, v19, "KTS.InProcessService.ktsDataForStartAndEnd", "", v18);
    sub_1AE4F9064();
  }

  sub_1AE6149B4(v25, (uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v20 = sub_1AE509980();
  sub_1AE4FBA8C((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  *(_QWORD *)v13 = "KTS.InProcessService.ktsDataForStartAndEnd";
  *((_QWORD *)v13 + 1) = 42;
  v13[16] = 2;
  *((_QWORD *)v13 + 3) = v20;
  sub_1AE7EFC24((uint64_t)&v13[*(int *)(v22 + 24)], v23);
  sub_1AE7EF320((uint64_t)v13);
  sub_1AE50B9EC((uint64_t)v13);
  sub_1AE4F667C();
}

void sub_1AE7EDE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _WORD *v42;
  os_signpost_id_t v43;
  uint64_t v44;
  void *v45;
  char *v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;

  sub_1AE4F67EC();
  a19 = v25;
  a20 = v26;
  v57 = v20;
  v28 = v27;
  v56 = sub_1AE508FBC();
  sub_1AE7EFB74();
  MEMORY[0x1E0C80A78](v29);
  sub_1AE505DEC();
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v52 - v31;
  v33 = sub_1AE4F6854();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v52 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1AE5035E4();
  v54 = *(_QWORD *)(v37 - 8);
  v55 = v37;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v38);
  v53 = sub_1AE4FBB00();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v39);
  sub_1AE7EFBE0();
  v52 = v40;
  if (qword_1ED31C728 != -1)
    swift_once();
  v41 = sub_1AE4FB608(v33, (uint64_t)qword_1ED31C710);
  sub_1AE506F88((uint64_t)v36, v41, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
  sub_1AE7EFE54();
  sub_1AE925B00();
  sub_1AE925AC4();
  sub_1AE925B00();
  sub_1AE7EFD94();
  if ((sub_1AE7EFE1C() & 1) != 0)
  {
    v42 = (_WORD *)sub_1AE4F66A0();
    v43 = sub_1AE7EFCF4(v42);
    sub_1AE5079F0(&dword_1AE4F2000, v28, (os_signpost_type_t)v36, v43, "KTS.InProcessService.ktsSegmentForSegmentId", "", (uint8_t *)v22);
    sub_1AE4F9064();
  }

  sub_1AE6149B4(v24, (uint64_t)v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  sub_1AE509980();
  sub_1AE4FBA8C((uint64_t)v32, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  sub_1AE507FC4((uint64_t)"KTS.InProcessService.ktsSegmentForSegmentId");
  v44 = sub_1AE7EFDD8(v53);
  sub_1AE7EFDB4(v44, v54);
  a10 = v52;
  sub_1AE7EE150(&a10, (uint64_t)&v59);
  if (!v21)
  {
    v58 = sub_1AE7EFB9C();
    sub_1AE7EFE28();
    sub_1AE7EFD80();
    sub_1AE7EFD4C();
    v57 = v45;
    v56 = sub_1AE7EFE00();
    v46 = v36;
    v47 = v57;
    v48 = sub_1AE7EB674();
    sub_1AE7EFCAC(v58, v49, v50, v51, (uint64_t)v48, (Class *)off_1E5DA2378);
    sub_1AE507978();
    sub_1AE4F77C8();
    sub_1AE4F76D8();

  }
  sub_1AE50921C();
  sub_1AE505D74();
  sub_1AE7EFB2C();
  sub_1AE4F667C();
}

void sub_1AE7EE150(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _DWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26[5];

  v4 = *a1;
  KTSIndexManager.ktsSegmentForSegmentId(segmentId:)(v26);
  if (!v2)
  {
    if (v22)
    {
      *(_QWORD *)a2 = v20;
      *(_QWORD *)(a2 + 8) = v22;
      *(_QWORD *)(a2 + 16) = v23;
      *(_OWORD *)(a2 + 24) = v24;
    }
    else
    {
      if (qword_1EED99830 != -1)
        swift_once();
      v5 = sub_1AE4F6854();
      v6 = sub_1AE4F77E8(v5, (uint64_t)qword_1EED9F800);
      v7 = sub_1AE9265D4();
      if (sub_1AE4F833C(v6))
      {
        v8 = (_DWORD *)sub_1AE4F66A0();
        v21 = sub_1AE4F66A0();
        *v8 = 136315138;
        v26[0] = v4;
        v9 = EntityIdentifier.description.getter();
        sub_1AE7EA770(v9, v10, v11, v12, v13, v14, v15, v16, v19, v21, 0, v23, v24, *((uint64_t *)&v24 + 1), v25, v26[0], v26[1], v26[2], v26[3],
          v26[4]);
        sub_1AE7EFB84();
        sub_1AE4F9038();
        sub_1AE5088B8(&dword_1AE4F2000, v6, v7, "KTSError: Could not get result for request %s");
        sub_1AE505710();
        sub_1AE4F9064();
      }

      sub_1AE4F9600();
      sub_1AE5D8CA4();
      sub_1AE7EFC74();
      v26[0] = v4;
      EntityIdentifier.description.getter();
      sub_1AE7EFC68();
      sub_1AE4F6648();
      sub_1AE7D2544();
      v17 = sub_1AE4F6778();
      *v18 = v20;
      v18[1] = 0;
      sub_1AE4FE050(v17, (uint64_t)v18);
    }
  }
  sub_1AE4FBC3C();
}

void sub_1AE7EE2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  uint8_t *v50;
  uint8_t *v51;
  os_signpost_type_t v52;
  os_signpost_id_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  _QWORD v57[2];
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[5];

  sub_1AE4F67EC();
  a23 = v27;
  a24 = v28;
  v64 = v24;
  v30 = v29;
  a10 = v31;
  v58 = v32;
  v33 = sub_1AE508FBC();
  v62 = *(_QWORD *)(v33 - 8);
  v63 = v33;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v34);
  sub_1AE4FFEB4();
  v37 = v35 - v36;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)v57 - v39;
  v41 = sub_1AE4F6854();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)v57 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1AE5035E4();
  v60 = *(_QWORD *)(v45 - 8);
  v61 = v45;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v46);
  v59 = sub_1AE4FBB00();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v47);
  sub_1AE4F90C8();
  if (qword_1ED31C728 != -1)
    swift_once();
  v48 = sub_1AE4FB608(v41, (uint64_t)qword_1ED31C710);
  sub_1AE506F88((uint64_t)v44, v48, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 16));
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE7EFE60();
  v49 = sub_1AE925B00();
  sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v50 = (uint8_t *)sub_1AE4F66A0();
    v57[1] = v37;
    v51 = v50;
    sub_1AE7EFC30(v50);
    sub_1AE4F83A0();
    sub_1AE5079F0(&dword_1AE4F2000, v49, v52, v53, "KTS.InProcessService.fetchMostRecent", "", v51);
    sub_1AE4F9064();
  }

  v54 = v62;
  sub_1AE6149B4(v37, (uint64_t)v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  sub_1AE509980();
  sub_1AE4FBA8C((uint64_t)v40, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
  sub_1AE4F79FC((uint64_t)"KTS.InProcessService.fetchMostRecent");
  v55 = sub_1AE7EFDCC(v59);
  sub_1AE7EFDC0(v55, v60);
  if ((a10 & 1) != 0)
  {
    LOBYTE(v56) = 3;
  }
  else if (v58 >= 4)
  {
    sub_1AE7D737C(&a14);
    LOBYTE(v56) = a14;
  }
  else
  {
    v56 = 0x2010003u >> (8 * v58);
  }
  a14 = v56;
  sub_1AE7EE5CC(&a14, v30, (uint64_t)v65);
  if (!v25)
  {
    sub_1AE4F9858(v65, v65[3]);
    sub_1AE7EFD6C();
    sub_1AE7E7050();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v65);
  }
  sub_1AE7EFBB4();
  sub_1AE7EFBBC();
  sub_1AE4F667C();
}

void sub_1AE7EE5CC(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v6;
  NSObject *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[5];

  v6 = *a1;
  v7 = *(NSObject **)(v3 + 16);
  LOBYTE(v29[0]) = *a1;
  sub_1AE7F4790(v29, a2);
  if (v26)
  {
    sub_1AE50AF58(&v24, a3);
  }
  else
  {
    sub_1AE52982C((uint64_t)&v24, &qword_1EEDA3438);
    if (qword_1EED99830 != -1)
      swift_once();
    v8 = sub_1AE4F6854();
    sub_1AE4F77E8(v8, (uint64_t)qword_1EED9F800);
    v9 = sub_1AE5062C0();
    if (sub_1AE4F833C(v7))
    {
      v10 = sub_1AE4F66A0();
      *(_QWORD *)&v24 = sub_1AE4F66A0();
      *(_DWORD *)v10 = 136315394;
      LOBYTE(v29[0]) = v6;
      sub_1AE501548((uint64_t *)&unk_1EEDA3440);
      v11 = sub_1AE7EFDF0();
      sub_1AE7EA770(v11, v12, v13, v14, v15, v16, v17, v18, v23, v24, *((uint64_t *)&v24 + 1), v25, v26, v27, v28, v29[0], v29[1], v29[2], v29[3],
        v29[4]);
      v29[0] = v19;
      sub_1AE92676C();
      sub_1AE4F6728();
      *(_WORD *)(v10 + 12) = 2048;
      v29[0] = a2;
      sub_1AE92676C();
      _os_log_impl(&dword_1AE4F2000, v7, v9, "KTSError: Could not get result for cadence %s with offset %ld", (uint8_t *)v10, 0x16u);
      sub_1AE505710();
      sub_1AE4F9064();
    }

    *(_QWORD *)&v24 = 0;
    *((_QWORD *)&v24 + 1) = 0xE000000000000000;
    sub_1AE92691C();
    sub_1AE925F74();
    LOBYTE(v29[0]) = v6;
    sub_1AE501548((uint64_t *)&unk_1EEDA3440);
    sub_1AE7EFDF0();
    sub_1AE925F74();
    sub_1AE4F81B8();
    sub_1AE925F74();
    v29[0] = a2;
    sub_1AE926D18();
    sub_1AE7EFC68();
    sub_1AE4F6648();
    v20 = v24;
    sub_1AE7D2544();
    v21 = sub_1AE4F6778();
    *v22 = v20;
    sub_1AE4FE050(v21, (uint64_t)v22);
  }
  sub_1AE4FBC3C();
}

void sub_1AE7EE838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint8_t *v19;
  os_signpost_type_t v20;
  os_signpost_id_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;

  sub_1AE4F67EC();
  v3 = v2;
  v4 = (_QWORD *)sub_1AE508FBC();
  v36 = *(v4 - 1);
  v37 = v4;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F686C();
  v35 = v6;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v31 - v8;
  v10 = sub_1AE4F6854();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v11);
  v13 = ((char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1AE5035E4();
  v33 = *(_QWORD *)(v14 - 8);
  v34 = v14;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v15);
  v32 = sub_1AE4FBB00();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4FB7E8();
  if (qword_1ED31C728 != -1)
    swift_once();
  v17 = sub_1AE4FB608(v10, (uint64_t)qword_1ED31C710);
  sub_1AE506F88((uint64_t)v13, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  sub_1AE7EFEB4();
  sub_1AE925B00();
  sub_1AE614A9C();
  sub_1AE925B00();
  sub_1AE7EFE40();
  if ((sub_1AE7EFE34() & 1) != 0)
  {
    v18 = (uint8_t *)sub_1AE4F66A0();
    v31[1] = v3;
    v19 = v18;
    sub_1AE7EFC3C(v18);
    sub_1AE4F83A0();
    sub_1AE5079F0(&dword_1AE4F2000, v13, v20, v21, "KTS.InProcessService.ktsSegmentForSourceId", "", v19);
    sub_1AE4F9064();
  }

  v22 = v36;
  sub_1AE6149B4(v35, (uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  sub_1AE509980();
  sub_1AE4FBA8C((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_1AE507FC4((uint64_t)"KTS.InProcessService.ktsSegmentForSourceId");
  v23 = sub_1AE7EFDD8(v32);
  sub_1AE614A70(v23, v33);
  sub_1AE7EEB04();
  if (!v0)
  {
    v38 = sub_1AE7EFB9C();
    sub_1AE7EFE28();
    sub_1AE7EFD80();
    sub_1AE7EFD4C();
    v37 = v24;
    v36 = sub_1AE7EFE00();
    v25 = v9;
    v26 = v37;
    v27 = sub_1AE7EB674();
    sub_1AE7EFCAC(v38, v28, v29, v30, (uint64_t)v27, (Class *)off_1E5DA2378);
    sub_1AE507978();
    sub_1AE4F77C8();
    sub_1AE4F76D8();

  }
  sub_1AE50921C();
  sub_1AE505D74();
  sub_1AE7EFB2C();
  sub_1AE4F667C();
}

void sub_1AE7EEB04()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1AE7EFD1C();
  KTSIndexManager.ktsSegmentForSourceId(sourceId:)();
  if (!v0)
  {
    if (v19)
    {
      *(_QWORD *)v1 = v17;
      *(_QWORD *)(v1 + 8) = v19;
      *(_QWORD *)(v1 + 16) = v20;
      *(_OWORD *)(v1 + 24) = v21;
    }
    else
    {
      if (qword_1EED99830 != -1)
        swift_once();
      v3 = sub_1AE4F6854();
      sub_1AE4FB608(v3, (uint64_t)qword_1EED9F800);
      sub_1AE7EFD0C();
      sub_1AE925B54();
      v4 = sub_1AE5062C0();
      if (sub_1AE4F698C(v4))
      {
        v5 = (uint8_t *)sub_1AE4F66A0();
        v18 = sub_1AE4F66A0();
        v6 = sub_1AE7EFC10(4.8149e-34);
        sub_1AE7EFC8C(v6, v7, v8, v9, v10, v11, v12, v13, v16, v18, 0, v20, v21, *((uint64_t *)&v21 + 1), v22, v23, v24, v25, v26,
          v27);
        sub_1AE7EFB3C();
        sub_1AE7EFE48();
        sub_1AE508348(&dword_1AE4F2000, 0, v2, "KTSError: Could not get result for request %s", v5);
        sub_1AE5081C8();
        sub_1AE4F9064();
      }

      sub_1AE4F6824();
      sub_1AE4F9600();
      sub_1AE5D8CA4();
      sub_1AE7EFB58();
      sub_1AE7D2544();
      v14 = sub_1AE4F6778();
      *v15 = v17;
      v15[1] = 0;
      sub_1AE4FE050(v14, (uint64_t)v15);
    }
  }
}

void sub_1AE7EEC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _WORD *v42;
  os_signpost_id_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_1AE4F67EC();
  a19 = v25;
  a20 = v26;
  v54 = v20;
  v28 = v27;
  v53 = sub_1AE508FBC();
  sub_1AE7EFB74();
  MEMORY[0x1E0C80A78](v29);
  sub_1AE505DEC();
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v49 - v31;
  v33 = sub_1AE4F6854();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v49 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1AE5035E4();
  v51 = *(_QWORD *)(v37 - 8);
  v52 = v37;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v38);
  v50 = sub_1AE4FBB00();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v39);
  sub_1AE7EFBE0();
  v49 = v40;
  if (qword_1ED31C728 != -1)
    swift_once();
  v41 = sub_1AE4FB608(v33, (uint64_t)qword_1ED31C710);
  sub_1AE506F88((uint64_t)v36, v41, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16));
  sub_1AE7EFE54();
  sub_1AE925B00();
  sub_1AE925AC4();
  sub_1AE925B00();
  sub_1AE7EFD94();
  if ((sub_1AE7EFE1C() & 1) != 0)
  {
    v42 = (_WORD *)sub_1AE4F66A0();
    v43 = sub_1AE7EFCF4(v42);
    sub_1AE5079F0(&dword_1AE4F2000, v28, (os_signpost_type_t)v36, v43, "KTS.InProcessService.tripForSegmentId", "", (uint8_t *)v22);
    sub_1AE4F9064();
  }

  sub_1AE6149B4(v24, (uint64_t)v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  sub_1AE509980();
  sub_1AE4FBA8C((uint64_t)v32, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  sub_1AE507FC4((uint64_t)"KTS.InProcessService.tripForSegmentId");
  v44 = sub_1AE7EFDD8(v50);
  sub_1AE7EFDB4(v44, v51);
  a10 = v49;
  sub_1AE7EEEEC(&a10, &v55);
  if (!v21)
  {
    sub_1AE50610C();
    sub_1AE7EFC48();
    sub_1AE7EFD40();
    sub_1AE7EFBFC((uint64_t)v45, v46, v47, v45, v48, (Class *)off_1E5DA2350);
    sub_1AE4F77C8();
    sub_1AE4F682C();
  }
  sub_1AE50921C();
  sub_1AE505D74();
  sub_1AE7EFB2C();
  sub_1AE4F667C();
}

uint64_t sub_1AE7EEEEC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _DWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *a1;
  result = KTSIndexManager.tripForSegmentId(segmentId:)();
  if (!v2)
  {
    if (v23)
    {
      *a2 = v21;
      a2[1] = v23;
      a2[2] = v24;
    }
    else
    {
      if (qword_1EED99830 != -1)
        swift_once();
      v6 = sub_1AE4F6854();
      v7 = sub_1AE4F77E8(v6, (uint64_t)qword_1EED9F800);
      v8 = sub_1AE9265D4();
      if (sub_1AE4F833C(v7))
      {
        v9 = (_DWORD *)sub_1AE4F66A0();
        v22 = sub_1AE4F66A0();
        *v9 = 136315138;
        v10 = EntityIdentifier.description.getter();
        sub_1AE7EA770(v10, v11, v12, v13, v14, v15, v16, v17, v20, v22, 0, v24, v25, v4, v26, v27, v28, v29, v30, v31);
        sub_1AE92676C();
        sub_1AE4F9038();
        sub_1AE5088B8(&dword_1AE4F2000, v7, v8, "KTSError: Could not get result for request %s");
        sub_1AE505710();
        sub_1AE4F9064();
      }

      sub_1AE4F9600();
      sub_1AE5D8CA4();
      sub_1AE7EFC74();
      EntityIdentifier.description.getter();
      sub_1AE7EFC68();
      sub_1AE4F6648();
      sub_1AE7D2544();
      v18 = sub_1AE4F6778();
      *v19 = v21;
      v19[1] = 0;
      return sub_1AE4FE050(v18, (uint64_t)v19);
    }
  }
  return result;
}

void sub_1AE7EF0AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint8_t *v19;
  os_signpost_type_t v20;
  os_signpost_id_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1AE4F67EC();
  v3 = v2;
  v4 = sub_1AE508FBC();
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F686C();
  v32 = v6;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v28 - v8;
  v10 = sub_1AE4F6854();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v11);
  v13 = ((char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1AE5035E4();
  v30 = *(_QWORD *)(v14 - 8);
  v31 = v14;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v15);
  v29 = sub_1AE4FBB00();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4FB7E8();
  if (qword_1ED31C728 != -1)
    swift_once();
  v17 = sub_1AE4FB608(v10, (uint64_t)qword_1ED31C710);
  sub_1AE506F88((uint64_t)v13, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  sub_1AE7EFEB4();
  sub_1AE925B00();
  sub_1AE614A9C();
  sub_1AE925B00();
  sub_1AE7EFE40();
  if ((sub_1AE7EFE34() & 1) != 0)
  {
    v18 = (uint8_t *)sub_1AE4F66A0();
    v28[1] = v3;
    v19 = v18;
    sub_1AE7EFC3C(v18);
    sub_1AE4F83A0();
    sub_1AE5079F0(&dword_1AE4F2000, v13, v20, v21, "KTS.InProcessService.ktsSegmentForSourceId", "", v19);
    sub_1AE4F9064();
  }

  v22 = v33;
  sub_1AE6149B4(v32, (uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  sub_1AE509980();
  sub_1AE4FBA8C((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  sub_1AE507FC4((uint64_t)"KTS.InProcessService.ktsSegmentForSourceId");
  v23 = sub_1AE7EFDD8(v29);
  sub_1AE614A70(v23, v30);
  sub_1AE7EF59C();
  if (!v0)
  {
    sub_1AE50610C();
    sub_1AE7EFC48();
    sub_1AE7EFD40();
    sub_1AE7EFBFC((uint64_t)v24, v25, v26, v24, v27, (Class *)off_1E5DA2350);
    sub_1AE4F77C8();
    sub_1AE4F682C();
  }
  sub_1AE50921C();
  sub_1AE505D74();
  sub_1AE7EFB2C();
  sub_1AE4F667C();
}

uint64_t sub_1AE7EF320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  NSObject *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint8_t *v22;
  os_signpost_id_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  char v31;

  v3 = sub_1AE925B18();
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE507460(v5, v24);
  v6 = sub_1AE925AE8();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1AE925B0C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LogSignpost();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1 + *(int *)(v14 + 24), v10);
  v30 = *(const char **)a1;
  v15 = *(_BYTE *)(a1 + 16);
  swift_retain();
  v16 = sub_1AE925B00();
  sub_1AE925B24();
  v26 = sub_1AE926664();
  result = sub_1AE926700();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v24 = v11;
  v25 = v1;
  if ((v15 & 1) == 0)
  {
    if (v30)
    {
      v19 = v28;
      v18 = v29;
      v20 = v27;
LABEL_9:
      swift_retain();
      sub_1AE925B48();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v19 + 88))(v20, v18) == *MEMORY[0x1E0DF2190])
      {
        v21 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v18);
        v21 = "";
      }
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      v23 = sub_1AE925AD0();
      _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v16, (os_signpost_type_t)v26, v23, v30, v21, v22, 2u);
      MEMORY[0x1AF454C78](v22, -1, -1);
      v11 = v24;
      v1 = v25;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v30 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v30 >> 11 != 27)
  {
    v19 = v28;
    v18 = v29;
    v20 = v27;
    if (v30 >> 16 <= 0x10)
    {
      v30 = &v31;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1AE7EF59C()
{
  uint64_t v0;
  _QWORD *v1;
  os_log_type_t v2;
  uint64_t result;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1AE7EFD1C();
  result = KTSIndexManager.tripForSourceId(sourceId:)();
  if (!v0)
  {
    if (v20)
    {
      *v1 = v18;
      v1[1] = v20;
      v1[2] = v21;
    }
    else
    {
      if (qword_1EED99830 != -1)
        swift_once();
      v4 = sub_1AE4F6854();
      sub_1AE4FB608(v4, (uint64_t)qword_1EED9F800);
      sub_1AE7EFD0C();
      sub_1AE925B54();
      v5 = sub_1AE5062C0();
      if (sub_1AE4F698C(v5))
      {
        v6 = (uint8_t *)sub_1AE4F66A0();
        v19 = sub_1AE4F66A0();
        v7 = sub_1AE7EFC10(4.8149e-34);
        sub_1AE7EFC8C(v7, v8, v9, v10, v11, v12, v13, v14, v17, v19, 0, v21, v22, v23, v24, v25, v26, v27, v28, v29);
        sub_1AE7EFB3C();
        sub_1AE7EFE48();
        sub_1AE508348(&dword_1AE4F2000, 0, v2, "KTSError: Could not get result for request %s", v6);
        sub_1AE5081C8();
        sub_1AE4F9064();
      }

      sub_1AE4F6824();
      sub_1AE4F9600();
      sub_1AE5D8CA4();
      sub_1AE7EFB58();
      sub_1AE7D2544();
      v15 = sub_1AE4F6778();
      *v16 = v18;
      v16[1] = 0;
      return sub_1AE4FE050(v15, (uint64_t)v16);
    }
  }
  return result;
}

uint64_t type metadata accessor for KTSInProcessService()
{
  return objc_opt_self();
}

uint64_t sub_1AE7EF740()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KTSRequestManager()
{
  return objc_opt_self();
}

id sub_1AE7EF784(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_1AE7EF7D8(a1, a2, a3, a4, a5, (Class *)off_1E5DA2350);
}

unint64_t sub_1AE7EF790()
{
  unint64_t result;

  result = qword_1EEDA33F8;
  if (!qword_1EEDA33F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEDA33F8);
  }
  return result;
}

id sub_1AE7EF7CC(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  return sub_1AE7EF7D8(a1, a2, a3, a4, a5, (Class *)off_1E5DA2378);
}

id sub_1AE7EF7D8(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, Class *a6)
{
  id v9;
  void *v10;
  id v11;

  v9 = objc_allocWithZone(*a6);
  v10 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithIdentifier_context_data_metadata_, v10, a3, a4, a5);

  swift_unknownObjectRelease();
  return v11;
}

uint64_t *sub_1AE7EF874(uint64_t *a1)
{
  sub_1AE7EF904(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE7EF904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t result;

  if (a24)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AE7EF93C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE7EF970(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1AE7EF9A4(void *a1)
{
  bzero(a1, 0xE0uLL);
}

uint64_t sub_1AE7EF9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EEDA34C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1AE7EF9F4(uint64_t *a1)
{
  sub_1AE7EFA64(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24]);
  return a1;
}

uint64_t sub_1AE7EFA64(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (a25)
  {
    sub_1AE7EA260(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1AE7EFB2C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7EFB3C()
{
  return sub_1AE92676C();
}

uint64_t sub_1AE7EFB58()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7EFB84()
{
  return sub_1AE92676C();
}

uint64_t sub_1AE7EFB9C()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 120) = *(_QWORD *)(v0 - 104);
  return EntityIdentifier.stringValue.getter();
}

uint64_t sub_1AE7EFBB4()
{
  uint64_t v0;

  return sub_1AE7EF320(v0);
}

uint64_t sub_1AE7EFBBC()
{
  uint64_t v0;

  return sub_1AE50B9EC(v0);
}

void sub_1AE7EFBC4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

id sub_1AE7EFBFC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, Class *a6)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  return sub_1AE7EF7D8(v7, v6, v8, a4, 0, a6);
}

uint64_t sub_1AE7EFC10(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE7EFC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, v2);
}

uint64_t sub_1AE7EFC30(_WORD *a1)
{
  *a1 = 0;
  return sub_1AE925AD0();
}

uint64_t sub_1AE7EFC3C(_WORD *a1)
{
  *a1 = 0;
  return sub_1AE925AD0();
}

uint64_t sub_1AE7EFC48()
{
  return sub_1AE7DF8E4();
}

BOOL sub_1AE7EFC5C()
{
  NSObject *v0;
  os_log_type_t v1;

  return os_log_type_enabled(v0, v1);
}

uint64_t sub_1AE7EFC68()
{
  return sub_1AE925F74();
}

void sub_1AE7EFC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  sub_1AE520ED4(v21, v20, (uint64_t)&a10, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1AE7EFC9C(_WORD *a1)
{
  *a1 = 0;
  return sub_1AE925AD0();
}

id sub_1AE7EFCAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, Class *a6)
{
  uint64_t v6;
  void *v7;
  void *v8;

  return sub_1AE7EF7D8(a1, v6, v7, v8, a5, a6);
}

uint64_t sub_1AE7EFCBC()
{
  return sub_1AE9269E8();
}

BOOL sub_1AE7EFCCC@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_1AE7EFCE4(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE5281B4(a1, v1);
}

uint64_t sub_1AE7EFCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  return sub_1AE7EF970((uint64_t)&a40);
}

uint64_t sub_1AE7EFCF4(_WORD *a1)
{
  *a1 = 0;
  return sub_1AE925AD0();
}

uint64_t sub_1AE7EFD04(uint64_t a1)
{
  uint64_t *v1;

  return sub_1AE52982C(a1, v1);
}

uint64_t sub_1AE7EFD0C()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1AE7EFD34()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE7EFD40()
{
  sub_1AE7DF908();
}

void sub_1AE7EFD4C()
{
  sub_1AE7E4790();
}

uint64_t sub_1AE7EFD6C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE7EFD80()
{
  return sub_1AE7E464C();
}

uint64_t sub_1AE7EFD88()
{
  return sub_1AE92676C();
}

uint64_t sub_1AE7EFD94()
{
  return sub_1AE926670();
}

uint64_t sub_1AE7EFD9C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

void sub_1AE7EFDA8()
{
  sub_1AE51BC1C();
}

uint64_t sub_1AE7EFDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, v2);
}

uint64_t sub_1AE7EFDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, v2);
}

uint64_t sub_1AE7EFDCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + *(int *)(a1 + 24);
}

uint64_t sub_1AE7EFDD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + *(int *)(a1 + 24);
}

void sub_1AE7EFDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  sub_1AE520ED4(a1, a2, v20 - 96, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1AE7EFDF0()
{
  return sub_1AE925E90();
}

uint64_t sub_1AE7EFDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  return sub_1AE7EF93C((uint64_t)&a40);
}

unint64_t sub_1AE7EFE00()
{
  return sub_1AE7EF790();
}

uint64_t *sub_1AE7EFE08()
{
  uint64_t v0;

  return sub_1AE7EA1D0((uint64_t *)(v0 + 304));
}

uint64_t sub_1AE7EFE10(uint64_t a1, int64_t a2)
{
  return sub_1AE522480(0, a2, 0);
}

uint64_t sub_1AE7EFE1C()
{
  return sub_1AE926700();
}

uint64_t sub_1AE7EFE28()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE7EFE34()
{
  return sub_1AE926700();
}

uint64_t sub_1AE7EFE40()
{
  return sub_1AE926670();
}

uint64_t sub_1AE7EFE48()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1AE7EFE54()
{
  return sub_1AE925AF4();
}

uint64_t sub_1AE7EFE60()
{
  return sub_1AE925AC4();
}

uint64_t sub_1AE7EFE68()
{
  return sub_1AE925B00();
}

uint64_t sub_1AE7EFE84()
{
  return sub_1AE925AF4();
}

uint64_t sub_1AE7EFE90()
{
  return sub_1AE926700();
}

uint64_t sub_1AE7EFE9C()
{
  return sub_1AE925AF4();
}

void sub_1AE7EFEA8()
{
  sub_1AE7EBCCC();
}

uint64_t sub_1AE7EFEB4()
{
  return sub_1AE925AF4();
}

void sub_1AE7EFEC0(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  void *v10;
  __int128 v11[2];
  uint64_t v12;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v12 = MEMORY[0x1E0DEE9D8];
      sub_1AE5223FC();
      if (v5 < 0)
        break;
      v6 = 0;
      v7 = v12;
      v10 = a2;
      v8 = &a2[OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service];
      while (v5 != v6)
      {
        if ((a1 & 0xC000000000000001) != 0)
          MEMORY[0x1AF453B80](v6, a1);
        else
          swift_unknownObjectRetain();
        sub_1AE4F9858(v8, *((_QWORD *)v8 + 3));
        sub_1AE7F2BB4();
        if (v2)
        {
          swift_release();
          sub_1AE4FBA84();
LABEL_13:

          return;
        }
        swift_getObjectType();
        sub_1AE7E6EE4((uint64_t)v11);
        sub_1AE4FBA84();
        swift_release();
        v12 = v7;
        v9 = *(_QWORD *)(v7 + 16);
        a2 = (char *)(v9 + 1);
        if (v9 >= *(_QWORD *)(v7 + 24) >> 1)
        {
          sub_1AE5223FC();
          v7 = v12;
        }
        ++v6;
        *(_QWORD *)(v7 + 16) = a2;
        sub_1AE50AF58(v11, v7 + 40 * v9 + 32);
        if (v5 == v6)
          goto LABEL_13;
      }
      __break(1u);
LABEL_16:
      if (a1 < 0)
        v2 = a1;
      else
        v2 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v5 = sub_1AE926AD8();
      swift_bridgeObjectRelease();
      if (!v5)
        goto LABEL_20;
    }
    __break(1u);
  }
  else
  {
LABEL_20:

  }
}

uint64_t sub_1AE7F00C4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t *i;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1AE5224EC();
    v6 = v14;
    for (i = (uint64_t *)(a1 + 32); ; ++i)
    {
      v8 = *i;
      swift_bridgeObjectRetain();
      v9 = a2;
      sub_1AE7EFEC0(v8, v9);
      if (v2)
        break;
      v11 = v10;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v14 + 16);
      if (v12 >= *(_QWORD *)(v14 + 24) >> 1)
        sub_1AE5224EC();
      *(_QWORD *)(v14 + 16) = v12 + 1;
      *(_QWORD *)(v14 + 8 * v12 + 32) = v11;
      if (!--v4)
      {

        return v6;
      }
    }

    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {

    return MEMORY[0x1E0DEE9D8];
  }
  return v6;
}

uint64_t sub_1AE7F01F4(unint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id i;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  _BYTE __dst[224];
  _BYTE __src[224];
  uint64_t v19;

  v3 = v2;
  if (!(a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_3;
LABEL_16:

    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v6 = sub_1AE926AD8();
  swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_16;
LABEL_3:
  v19 = MEMORY[0x1E0DEE9D8];
  result = sub_1AE52249C(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v8 = 0;
    v15 = a2;
    v9 = &a2[OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service];
    v10 = v19;
    v16 = v6 - 1;
    if ((a1 & 0xC000000000000001) == 0)
      goto LABEL_6;
LABEL_5:
    for (i = (id)MEMORY[0x1AF453B80](v8, a1); ; i = *(id *)(a1 + 8 * v8 + 32))
    {
      v12 = i;
      sub_1AE4F9858(v9, *((_QWORD *)v9 + 3));
      sub_1AE7EB6E4();
      if (v3)
      {
        swift_release();

        return v10;
      }
      sub_1AE7E35CC();
      v3 = 0;

      swift_release();
      memcpy(__dst, __src, sizeof(__dst));
      v19 = v10;
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1AE52249C(v13 > 1, v14 + 1, 1);
        v10 = v19;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      memcpy((void *)(v10 + 224 * v14 + 32), __dst, 0xE0uLL);
      if (v16 == v8)
        break;
      ++v8;
      if ((a1 & 0xC000000000000001) != 0)
        goto LABEL_5;
LABEL_6:
      ;
    }

    return v10;
  }
  __break(1u);
  return result;
}

void sub_1AE7F0400(unint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  _QWORD v24[3];
  __int128 v25;
  uint64_t v26;

  v3 = v2;
  v5 = a1;
  if (a1 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      v26 = MEMORY[0x1E0DEE9D8];
      sub_1AE522520();
      if (v6 < 0)
        break;
      v7 = 0;
      v8 = v26;
      v19 = a2;
      v20 = v6;
      v22 = &a2[OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service];
      v23 = v5 & 0xC000000000000001;
      v21 = v5;
      while (v6 != v7)
      {
        if (v23)
          v9 = (id)MEMORY[0x1AF453B80](v7, v5);
        else
          v9 = *(id *)(v5 + 8 * v7 + 32);
        v10 = v9;
        sub_1AE4F9858(v22, *((_QWORD *)v22 + 3));
        sub_1AE7EB6E4();
        if (v3)
        {
          swift_release();

          return;
        }
        sub_1AE7E3F60(v11, v24);
        v3 = 0;

        swift_release();
        v13 = v24[0];
        v12 = v24[1];
        v14 = v24[2];
        v15 = v25;
        v26 = v8;
        v16 = *(_QWORD *)(v8 + 16);
        a2 = (char *)(v16 + 1);
        if (v16 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          v18 = v25;
          sub_1AE522520();
          v15 = v18;
          v8 = v26;
        }
        ++v7;
        *(_QWORD *)(v8 + 16) = a2;
        v17 = v8 + 40 * v16;
        *(_QWORD *)(v17 + 32) = v13;
        *(_QWORD *)(v17 + 40) = v12;
        *(_QWORD *)(v17 + 48) = v14;
        *(_OWORD *)(v17 + 56) = v15;
        v6 = v20;
        v5 = v21;
        if (v20 == v7)
        {

          return;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      v6 = sub_1AE926AD8();
      swift_bridgeObjectRelease();
      if (!v6)
        goto LABEL_17;
    }
    __break(1u);
  }
  else
  {
LABEL_17:

  }
}

void sub_1AE7F0618(unint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  v3 = v2;
  if (a1 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      v21 = MEMORY[0x1E0DEE9D8];
      sub_1AE522554();
      if (v6 < 0)
        break;
      v7 = 0;
      v8 = v21;
      v17 = a2;
      v18 = &a2[OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service];
      while (v6 != v7)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v9 = (id)MEMORY[0x1AF453B80](v7, a1);
        else
          v9 = *(id *)(a1 + 8 * v7 + 32);
        v10 = v9;
        sub_1AE4F9858(v18, *((_QWORD *)v18 + 3));
        sub_1AE7EB6E4();
        if (v3)
        {
          swift_release();

          return;
        }
        sub_1AE7E3A38(v11, &v19);
        v3 = 0;

        swift_release();
        v12 = v19;
        v13 = v20;
        v21 = v8;
        v14 = *(_QWORD *)(v8 + 16);
        a2 = (char *)(v14 + 1);
        if (v14 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          v16 = v20;
          sub_1AE522554();
          v13 = v16;
          v8 = v21;
        }
        ++v7;
        *(_QWORD *)(v8 + 16) = a2;
        v15 = v8 + 24 * v14;
        *(_QWORD *)(v15 + 32) = v12;
        *(_OWORD *)(v15 + 40) = v13;
        if (v6 == v7)
        {

          return;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      v6 = sub_1AE926AD8();
      swift_bridgeObjectRelease();
      if (!v6)
        goto LABEL_17;
    }
    __break(1u);
  }
  else
  {
LABEL_17:

  }
}

id KTSClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id KTSClient.init()()
{
  id v0;
  id v1;

  v0 = objc_allocWithZone((Class)type metadata accessor for KTSClient());
  v1 = KTSClient.init(throwing:)(1);
  swift_getObjectType();
  sub_1AE6217F0();
  swift_deallocPartialClassInstance();
  return v1;
}

id KTSClient.__allocating_init(throwing:)(char a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return KTSClient.init(throwing:)(a1);
}

uint64_t type metadata accessor for KTSClient()
{
  return objc_opt_self();
}

id KTSClient.init(throwing:)(char a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id result;
  objc_super v14;
  __int128 v15;
  uint64_t v16;
  _UNKNOWN **v17;

  v4 = qword_1ED31C9B0;
  v5 = v1;
  if (v4 != -1)
    swift_once();
  v6 = (void *)qword_1ED31C9A0;
  v7 = type metadata accessor for KTSInProcessService();
  swift_allocObject();
  sub_1AE7EB790(v6);
  if (v2)
  {

    if ((a1 & 1) != 0)
    {
      if (qword_1EED99830 != -1)
        swift_once();
      v9 = sub_1AE4F6854();
      sub_1AE4FB608(v9, (uint64_t)qword_1EED9F800);
      v10 = sub_1AE925B54();
      v11 = sub_1AE926604();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)sub_1AE4F69B0();
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_1AE4F2000, v10, v11, "Some or all KTS tables were not available, please try loading via GDXPCViewService().performUpdate(forViewNames: KTSViewName.allCases).", v12, 2u);
        sub_1AE4F9064();
      }

      sub_1AE7F2ADC();
      type metadata accessor for KTSClient();
      sub_1AE6217F0();
      return (id)swift_deallocPartialClassInstance();
    }
    else
    {
      result = (id)sub_1AE926AB4();
      __break(1u);
    }
  }
  else
  {
    v16 = v7;
    v17 = &off_1E5DBA9B0;
    *(_QWORD *)&v15 = v8;
    sub_1AE50AF58(&v15, (uint64_t)v5 + OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service);

    v14.receiver = v5;
    v14.super_class = (Class)type metadata accessor for KTSClient();
    return objc_msgSendSuper2(&v14, sel_init);
  }
  return result;
}

void sub_1AE7F0B58()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_signpost_type_t v20;
  uint8_t *v21;
  os_signpost_id_t v22;
  uint64_t v23;
  uint64_t v24;
  GDKTSQueryParams *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[200];
  char *v39;

  sub_1AE4F67EC();
  v36 = v1;
  v39 = v0;
  v7 = v6;
  v8 = sub_1AE508FBC();
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE7F2A10();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - v11;
  v13 = sub_1AE4F6854();
  sub_1AE506C14();
  MEMORY[0x1E0C80A78](v14);
  v15 = sub_1AE4F6D2C();
  v32 = *(_QWORD *)(v15 - 8);
  v33 = v15;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v16);
  v31 = sub_1AE4FD168();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE4F6744();
  sub_1AE4F6D24(v38, v7);
  if (qword_1ED31C728 != -1)
    swift_once();
  v18 = sub_1AE4FB608(v13, (uint64_t)qword_1ED31C710);
  sub_1AE506F88(v5, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_1AE7F2BC0();
  sub_1AE7F2A48();
  sub_1AE7F2BD4();
  v19 = sub_1AE925B00();
  v20 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v21 = (uint8_t *)sub_1AE4F69B0();
    v22 = sub_1AE507548(v21);
    sub_1AE5079F0(&dword_1AE4F2000, v19, v20, v22, "KTS.Client.request", "", v21);
    sub_1AE4F9064();
  }

  v23 = v34;
  sub_1AE6149B4(v4, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v24 = sub_1AE509980();
  sub_1AE4FBA8C((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
  *(_QWORD *)v2 = "KTS.Client.request";
  *(_QWORD *)(v2 + 8) = 18;
  *(_BYTE *)(v2 + 16) = 2;
  *(_QWORD *)(v2 + 24) = v24;
  sub_1AE614A70(v2 + *(int *)(v31 + 24), v32);
  sub_1AE4F6D24(&v37, v38);
  sub_1AE7D7518(v25);
  v27 = v26;
  sub_1AE4F9858(&v39[OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service], *(_QWORD *)&v39[OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service + 24]);
  v28 = v36;
  sub_1AE7EB82C();
  if (!v28)
  {
    sub_1AE7EFEC0(v29, v39);
    swift_bridgeObjectRelease();
  }

  sub_1AE7F2514(v2);
  sub_1AE50B9EC(v2);
  sub_1AE4F667C();
}

void sub_1AE7F0DF4()
{
  sub_1AE7F10FC();
}

void sub_1AE7F0E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_signpost_type_t v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  uint64_t v25;
  uint64_t v26;
  GDKTSQueryParams *v27;
  void *v28;
  void *v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[200];

  sub_1AE4F67EC();
  v39 = v0;
  v8 = v7;
  v33 = v9;
  v10 = sub_1AE508FBC();
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE5056D0();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1AE5062C8();
  sub_1AE508180();
  MEMORY[0x1E0C80A78](v14);
  v15 = sub_1AE4F9614();
  v35 = *(_QWORD *)(v15 - 8);
  v36 = v15;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F6744();
  v34 = sub_1AE4FBB00();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F6D24(v41, v8);
  if (qword_1ED31C728 != -1)
    swift_once();
  v20 = sub_1AE4FB608(v13, (uint64_t)qword_1ED31C710);
  sub_1AE506F88(v2, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  sub_1AE7F2BAC();
  sub_1AE925B00();
  sub_1AE614A9C();
  v21 = sub_1AE925B00();
  v22 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v23 = (uint8_t *)sub_1AE4F69B0();
    *(_WORD *)v23 = 0;
    v24 = sub_1AE925AD0();
    sub_1AE5079F0(&dword_1AE4F2000, v21, v22, v24, "KTS.Client.request", "", v23);
    sub_1AE4F9064();
  }

  v25 = v37;
  sub_1AE6149B4(v6, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v26 = sub_1AE50A0F0();
  sub_1AE4FBA8C(v5, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
  *(_QWORD *)v19 = "KTS.Client.request";
  *((_QWORD *)v19 + 1) = 18;
  v19[16] = 2;
  *((_QWORD *)v19 + 3) = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(&v19[*(int *)(v34 + 24)], v3, v36);
  sub_1AE4F6D24(&v40, v41);
  sub_1AE7D7518(v27);
  v29 = v28;
  v30 = (_QWORD *)(v39 + OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service);
  sub_1AE4F9858((_QWORD *)(v39 + OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service), *(_QWORD *)(v39 + OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service + 24));
  sub_1AE7EC5B0();
  if (v1)
  {

  }
  else
  {
    v32 = v31;
    sub_1AE4F9858(v30, v30[3]);
    sub_1AE7EB6E4();
    sub_1AE7E35CC();

    swift_release();
  }
  sub_1AE7F2514((uint64_t)v19);
  sub_1AE50B9EC((uint64_t)v19);
  sub_1AE5FBE20();
  sub_1AE4F667C();
}

void sub_1AE7F10D8()
{
  sub_1AE7F10FC();
}

void sub_1AE7F10FC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, char *);
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_signpost_type_t v24;
  uint8_t *v25;
  os_signpost_id_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t i;
  uint64_t v35;
  GDKTSQueryParams *v36;
  void *v37;
  void *v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  void (*v46)(uint64_t, char *);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  char *v55;
  _BYTE v56[169];
  _BYTE v57[200];
  uint64_t v58;

  sub_1AE4F67EC();
  v46 = v3;
  v53 = v1;
  v54 = v4;
  v55 = v0;
  v52 = v5;
  v6 = sub_1AE508FBC();
  v50 = *(_QWORD *)(v6 - 8);
  v51 = (char *)v6;
  sub_1AE4F6630();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v45 - v11;
  v13 = sub_1AE4F6854();
  sub_1AE508180();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1AE5035E4();
  v48 = *(_QWORD *)(v17 - 8);
  v49 = v17;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v18);
  v47 = sub_1AE4FD168();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED31C728 != -1)
    swift_once();
  v22 = sub_1AE4FB608(v13, (uint64_t)qword_1ED31C710);
  sub_1AE506F88((uint64_t)v16, v22, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_1AE925AF4();
  sub_1AE7F2A48();
  sub_1AE925AC4();
  v23 = sub_1AE925B00();
  v24 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v25 = (uint8_t *)sub_1AE4F69B0();
    *(_WORD *)v25 = 0;
    v26 = sub_1AE925AD0();
    sub_1AE5079F0(&dword_1AE4F2000, v23, v24, v26, "KTS.Client.requestBatch", "", v25);
    sub_1AE4F9064();
  }

  v28 = v50;
  v27 = v51;
  (*(void (**)(char *, char *, char *))(v50 + 16))(v10, v12, v51);
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v29 = sub_1AE509980();
  (*(void (**)(char *, char *))(v28 + 8))(v12, v27);
  *(_QWORD *)v21 = "KTS.Client.requestBatch";
  *((_QWORD *)v21 + 1) = 23;
  v21[16] = 2;
  *((_QWORD *)v21 + 3) = v29;
  sub_1AE614A70((uint64_t)&v21[*(int *)(v47 + 24)], v48);
  v30 = v52;
  v31 = *(_QWORD *)(v52 + 16);
  v32 = MEMORY[0x1E0DEE9D8];
  if (v31)
  {
    v51 = v21;
    v58 = MEMORY[0x1E0DEE9D8];
    sub_1AE9269DC();
    v33 = (char *)(v30 + 32);
    for (i = v31 - 1; ; --i)
    {
      sub_1AE4F6D24(v57, v33);
      v35 = v57[169];
      memcpy(v56, v33, sizeof(v56));
      sub_1AE7EF93C((uint64_t)v57);
      KTSQueryParams.convertToGDKTSQueryParams()(v36);
      v38 = v37;
      v39 = objc_allocWithZone((Class)GDKTSDataRequest);
      if (v35 == 3)
        objc_msgSend(v39, sel_initWithParameters_, v38);
      else
        objc_msgSend(v39, sel_initWithParameters_cadence_, v38, v35 + 1);

      sub_1AE7EF970((uint64_t)v57);
      sub_1AE9269B8();
      sub_1AE9269E8();
      sub_1AE9269F4();
      sub_1AE9269C4();
      if (!i)
        break;
      v33 += 192;
    }
    v32 = v58;
    v40 = v55;
    v21 = v51;
  }
  else
  {
    v40 = v55;
  }
  sub_1AE4F9858(&v40[OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service], *(_QWORD *)&v40[OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service + 24]);
  v41 = v53;
  v42 = v54(v32);
  if (v41)
  {
    sub_1AE4F81B8();
  }
  else
  {
    v43 = v42;
    sub_1AE4F81B8();
    v44 = v40;
    v46(v43, v44);
    swift_bridgeObjectRelease();
  }
  sub_1AE7F2514((uint64_t)v21);
  sub_1AE50B9EC((uint64_t)v21);
  sub_1AE4F667C();
}

#error "1AE7F16C4: call analysis failed (funcsize=160)"

void sub_1AE7F1764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _WORD *v19;
  os_signpost_type_t v20;
  os_signpost_id_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[5];

  sub_1AE4F67EC();
  v41 = v8;
  v10 = v9;
  v40 = v11;
  v39 = sub_1AE508FBC();
  sub_1AE508180();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE5056D0();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE5062C8();
  sub_1AE7F2A50();
  MEMORY[0x1E0C80A78](v14);
  v15 = sub_1AE4F9614();
  v36 = *(_QWORD *)(v15 - 8);
  v37 = v15;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v16);
  v35 = sub_1AE4FD168();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE7F2AA4();
  if (qword_1ED31C728 != -1)
    swift_once();
  v18 = sub_1AE4FB608(v0, (uint64_t)qword_1ED31C710);
  sub_1AE506F88(v2, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_1AE7F2BAC();
  sub_1AE7F2A48();
  sub_1AE614A9C();
  sub_1AE925B00();
  sub_1AE614A0C();
  if ((sub_1AE614AEC() & 1) != 0)
  {
    v19 = (_WORD *)sub_1AE4F69B0();
    sub_1AE506E24(v19);
    sub_1AE4F83A0();
    sub_1AE5079F0(&dword_1AE4F2000, v10, v20, v21, "KTS.Client.ktsSegmentsForStartAndEnd", "", (uint8_t *)v3);
    sub_1AE4F9064();
  }

  v22 = (void *)v39;
  sub_1AE6149B4(v7, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v23 = sub_1AE50A0F0();
  sub_1AE4FBA8C(v6, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  *(_QWORD *)v4 = "KTS.Client.ktsSegmentsForStartAndEnd";
  *(_QWORD *)(v4 + 8) = 36;
  *(_BYTE *)(v4 + 16) = 2;
  *(_QWORD *)(v4 + 24) = v23;
  sub_1AE614A70(v4 + *(int *)(v35 + 24), v36);
  sub_1AE7F2B9C(OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service);
  sub_1AE7F2C00();
  v24 = sub_1AE7F2B6C();
  sub_1AE7ED498(v24, v25, v26, v27, v28, v29, v30, v31, v34, v35, v36, v37, v38, v39, v40, v41, v1, v42[0], v42[1],
    v42[2]);
  if (v1)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v42);
  }
  else
  {
    v33 = v32;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v42);
    sub_1AE7F0400(v33, (char *)v22);
    sub_1AE4F9038();
  }
  sub_1AE7F2B8C();
  sub_1AE7F2B84();
  sub_1AE4F667C();
}

void sub_1AE7F19A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _WORD *v16;
  os_signpost_type_t v17;
  os_signpost_id_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _BYTE v25[40];

  sub_1AE4F67EC();
  v9 = v8;
  v24 = (void *)sub_1AE508FBC();
  sub_1AE508180();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE5056D0();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE5062C8();
  sub_1AE7F2A50();
  MEMORY[0x1E0C80A78](v12);
  v23 = *(_QWORD *)(sub_1AE4F9614() - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  v22 = sub_1AE4FD168();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE7F2AA4();
  if (qword_1ED31C728 != -1)
    swift_once();
  v15 = sub_1AE4FB608(v0, (uint64_t)qword_1ED31C710);
  sub_1AE506F88(v2, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_1AE7F2BAC();
  sub_1AE7F2A48();
  sub_1AE614A9C();
  sub_1AE925B00();
  sub_1AE614A0C();
  if ((sub_1AE614AEC() & 1) != 0)
  {
    v16 = (_WORD *)sub_1AE4F69B0();
    sub_1AE506E24(v16);
    sub_1AE4F83A0();
    sub_1AE5079F0(&dword_1AE4F2000, v9, v17, v18, "KTS.Client.ktsDataForStartAndEnd", "", (uint8_t *)v3);
    sub_1AE4F9064();
  }

  sub_1AE6149B4(v7, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v19 = sub_1AE50A0F0();
  sub_1AE4FBA8C(v6, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  *(_QWORD *)v4 = "KTS.Client.ktsDataForStartAndEnd";
  *(_QWORD *)(v4 + 8) = 32;
  *(_BYTE *)(v4 + 16) = 2;
  *(_QWORD *)(v4 + 24) = v19;
  sub_1AE614A70(v4 + *(int *)(v22 + 24), v23);
  sub_1AE7F2B9C(OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service);
  sub_1AE7F2C00();
  sub_1AE7F2B6C();
  sub_1AE7EDC60();
  if (v1)
  {
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v25);
  }
  else
  {
    v21 = v20;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v25);
    sub_1AE7F0618(v21, (char *)v24);
    sub_1AE4F9038();
  }
  sub_1AE7F2B8C();
  sub_1AE7F2B84();
  sub_1AE4F667C();
}

#error "1AE7F1D74: call analysis failed (funcsize=133)"

void sub_1AE7F1E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _WORD *v22;
  os_signpost_type_t v23;
  os_signpost_id_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_1AE4F67EC();
  v35 = v1;
  v36 = v4;
  v30[2] = v5;
  v6 = sub_1AE508FBC();
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE7F2A64(v8, v30[0]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v30 - v10;
  v12 = sub_1AE4F6854();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1AE5035E4();
  v31 = *(_QWORD *)(v16 - 8);
  v32 = v16;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v17);
  v18 = sub_1AE4FD168();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE4FB7E8();
  if (qword_1ED31C728 != -1)
    swift_once();
  v20 = sub_1AE4FB608(v12, (uint64_t)qword_1ED31C710);
  sub_1AE506F88((uint64_t)v15, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_1AE7F2BE8();
  sub_1AE7F2A48();
  sub_1AE925AC4();
  v21 = sub_1AE925B00();
  sub_1AE926670();
  if ((sub_1AE7F2BDC() & 1) != 0)
  {
    v22 = (_WORD *)sub_1AE4F69B0();
    sub_1AE50670C(v22);
    sub_1AE4F83A0();
    sub_1AE5079F0(&dword_1AE4F2000, v21, v23, v24, "KTS.Client.fetchKTSSegmentForId", "", v3);
    sub_1AE4F9064();
  }

  sub_1AE7F2A2C();
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v25 = sub_1AE509980();
  sub_1AE4FBA8C((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  *(_QWORD *)v0 = "KTS.Client.fetchKTSSegmentForId";
  *(_QWORD *)(v0 + 8) = 31;
  *(_BYTE *)(v0 + 16) = 2;
  *(_QWORD *)(v0 + 24) = v25;
  sub_1AE614A70(v0 + *(int *)(v18 + 24), v31);
  sub_1AE7F2B3C(OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service);
  sub_1AE7EE838();
  if (!v1)
  {
    if (v26)
    {
      sub_1AE50ADA0();
      sub_1AE7F2AE4(v29);
      sub_1AE7F2B64();
      sub_1AE4F77C8();
      goto LABEL_7;
    }
    sub_1AE7F2B20();
    sub_1AE506420();
    sub_1AE7F2C24();
    sub_1AE7F2B94();
    v27 = sub_1AE4F6778();
    sub_1AE501F70(v27, v28);
  }
  sub_1AE7F2ADC();
LABEL_7:
  sub_1AE7F2B34();
  sub_1AE505D74();
  sub_1AE5FBE20();
  sub_1AE4F667C();
}

#error "1AE7F220C: call analysis failed (funcsize=133)"

void sub_1AE7F22B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _WORD *v22;
  os_signpost_type_t v23;
  os_signpost_id_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_1AE4F67EC();
  v35 = v1;
  v36 = v4;
  v30[2] = v5;
  v6 = sub_1AE508FBC();
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE7F2A64(v8, v30[0]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v30 - v10;
  v12 = sub_1AE4F6854();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1AE5035E4();
  v31 = *(_QWORD *)(v16 - 8);
  v32 = v16;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v17);
  v18 = sub_1AE4FD168();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE4FB7E8();
  if (qword_1ED31C728 != -1)
    swift_once();
  v20 = sub_1AE4FB608(v12, (uint64_t)qword_1ED31C710);
  sub_1AE506F88((uint64_t)v15, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_1AE7F2BE8();
  sub_1AE7F2A48();
  sub_1AE925AC4();
  v21 = sub_1AE925B00();
  sub_1AE926670();
  if ((sub_1AE7F2BDC() & 1) != 0)
  {
    v22 = (_WORD *)sub_1AE4F69B0();
    sub_1AE50670C(v22);
    sub_1AE4F83A0();
    sub_1AE5079F0(&dword_1AE4F2000, v21, v23, v24, "KTS.Client.fetchKTSSegmentForId", "", v3);
    sub_1AE4F9064();
  }

  sub_1AE7F2A2C();
  sub_1AE5086D0();
  sub_1AE4FCE84();
  v25 = sub_1AE509980();
  sub_1AE4FBA8C((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  *(_QWORD *)v0 = "KTS.Client.fetchKTSSegmentForId";
  *(_QWORD *)(v0 + 8) = 31;
  *(_BYTE *)(v0 + 16) = 2;
  *(_QWORD *)(v0 + 24) = v25;
  sub_1AE614A70(v0 + *(int *)(v18 + 24), v31);
  sub_1AE7F2B3C(OBJC_IVAR____TtC20IntelligencePlatform9KTSClient_service);
  sub_1AE7EF0AC();
  if (!v1)
  {
    if (v26)
    {
      sub_1AE50ADA0();
      sub_1AE7F2AF8(v29);
      sub_1AE7F2B64();
      sub_1AE4F77C8();
      goto LABEL_7;
    }
    sub_1AE7F2B20();
    sub_1AE506420();
    sub_1AE7F2C24();
    sub_1AE7F2B94();
    v27 = sub_1AE4F6778();
    sub_1AE501F70(v27, v28);
  }
  sub_1AE7F2ADC();
LABEL_7:
  sub_1AE7F2B34();
  sub_1AE505D74();
  sub_1AE5FBE20();
  sub_1AE4F667C();
}

uint64_t sub_1AE7F2514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  NSObject *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  const char *v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  char v32;

  v4 = sub_1AE925B18();
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  v28 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1AE925AE8();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1AE925B0C();
  sub_1AE508180();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LogSignpost();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v14, a1 + *(int *)(v15 + 24), v11);
  v31 = *(const char **)a1;
  v16 = *(_BYTE *)(a1 + 16);
  swift_retain();
  v17 = sub_1AE925B00();
  sub_1AE925B24();
  v27 = sub_1AE926664();
  result = sub_1AE926700();
  if ((result & 1) == 0)
  {
LABEL_13:
    swift_release();

    (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v14, v11);
  }
  v25 = v2;
  v26 = v1;
  if ((v16 & 1) == 0)
  {
    if (v31)
    {
      v20 = v29;
      v19 = v30;
      v21 = v28;
LABEL_9:
      swift_retain();
      sub_1AE925B48();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v21, v19) == *MEMORY[0x1E0DF2190])
      {
        v22 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v19);
        v22 = "";
      }
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      v24 = sub_1AE925AD0();
      _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v17, (os_signpost_type_t)v27, v24, v31, v22, v23, 2u);
      MEMORY[0x1AF454C78](v23, -1, -1);
      v2 = v25;
      v1 = v26;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)v31 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v31 >> 11 != 27)
  {
    v20 = v29;
    v19 = v30;
    v21 = v28;
    if (v31 >> 16 <= 0x10)
    {
      v31 = &v32;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

id KTSClient.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for KTSClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for KTSClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KTSClient.__allocating_init(throwing:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of KTSClient.request(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of KTSClient.requestBatch(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of KTSClient.sliceData(request:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of KTSClient.sliceData(requestBatch:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of KTSClient.fetchMostRecent(cadence:offset:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of KTSClient.fetchAllKTSSegmentData(from:to:inclusionType:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of KTSClient.fetchAllKTSData(from:to:inclusionType:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of KTSClient.ktsSegmentForSegmentId(segmentId:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of KTSClient.ktsSegmentForSourceId(sourceId:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of KTSClient.tripForSegmentId(segmentId:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of KTSClient.tripForSourceId(sourceId:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t sub_1AE7F29E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = v1;
  *(_BYTE *)(v2 + 16) = 2;
  *(_QWORD *)(v2 + 24) = v3;
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 144) + 32))(v2 + *(int *)(*(_QWORD *)(v5 - 152) + 24), v4, *(_QWORD *)(v5 - 136));
}

uint64_t sub_1AE7F2A2C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v1 - 128) + 16))(*(_QWORD *)(v1 - 136), v0, *(_QWORD *)(v1 - 120));
}

uint64_t sub_1AE7F2A48()
{
  return sub_1AE925B00();
}

void sub_1AE7F2A64(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1AE7F2A84()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = *v0;
}

void sub_1AE7F2AA4()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = *v0;
}

uint64_t sub_1AE7F2AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v0 + 16))(v2, v1, *(_QWORD *)(v3 - 128));
}

uint64_t sub_1AE7F2ADC()
{
  return swift_willThrow();
}

uint64_t sub_1AE7F2AE4(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE7E3F60(a1, *(_QWORD **)(v1 - 160));
}

void sub_1AE7F2AF8(void *a1)
{
  uint64_t v1;

  sub_1AE7E3A38(a1, *(_QWORD **)(v1 - 160));
}

uint64_t sub_1AE7F2B0C()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0xE000000000000000;
  return sub_1AE92691C();
}

uint64_t sub_1AE7F2B20()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0xE000000000000000;
  return sub_1AE92691C();
}

uint64_t sub_1AE7F2B34()
{
  uint64_t v0;

  return sub_1AE7F2514(v0);
}

uint64_t sub_1AE7F2B3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F9858((_QWORD *)(v1 + a1), *(_QWORD *)(v1 + a1 + 24));
  return *(_QWORD *)(v2 - 104);
}

void sub_1AE7F2B64()
{
  void *v0;

}

uint64_t sub_1AE7F2B6C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 144);
}

uint64_t sub_1AE7F2B84()
{
  uint64_t v0;

  return sub_1AE50B9EC(v0);
}

uint64_t sub_1AE7F2B8C()
{
  uint64_t v0;

  return sub_1AE7F2514(v0);
}

unint64_t sub_1AE7F2B94()
{
  return sub_1AE7D2544();
}

uint64_t sub_1AE7F2B9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AE57C238(*(_QWORD *)(v1 - 72) + a1, v1 - 120);
}

uint64_t sub_1AE7F2BAC()
{
  return sub_1AE925AF4();
}

void sub_1AE7F2BB4()
{
  sub_1AE7EB6E4();
}

uint64_t sub_1AE7F2BC0()
{
  return sub_1AE925AF4();
}

uint64_t sub_1AE7F2BC8()
{
  return sub_1AE926700();
}

uint64_t sub_1AE7F2BD4()
{
  return sub_1AE925AC4();
}

uint64_t sub_1AE7F2BDC()
{
  return sub_1AE926700();
}

uint64_t sub_1AE7F2BE8()
{
  return sub_1AE925AF4();
}

uint64_t sub_1AE7F2BF4()
{
  return sub_1AE925F74();
}

_QWORD *sub_1AE7F2C00()
{
  uint64_t v0;

  return sub_1AE4F9858((_QWORD *)(v0 - 120), *(_QWORD *)(v0 - 96));
}

uint64_t sub_1AE7F2C24()
{
  return sub_1AE925F74();
}

uint64_t KTSDatabaseEngine.init(db:table:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = a3;
  a5[1] = a4;
  a5[2] = result;
  a5[3] = a2;
  return result;
}

_BYTE *KTSDatabaseEngine.executeQuery(params:entities:)(const void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  unint64_t v25;
  _BYTE *v26;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE v54[144];
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[16];
  _BYTE v58[16];
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;

  sub_1AE4F6D48(v54, a1);
  v6 = v3[1];
  v7 = v3[2];
  v40 = *v3;
  v41 = v3[3];
  v39 = a3;
  v8 = *(_QWORD *)(a3 + 16);
  v63 = sub_1AE926238();
  if (qword_1EED99830 != -1)
    swift_once();
  v9 = sub_1AE925B6C();
  sub_1AE4FB608(v9, (uint64_t)qword_1EED9F800);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1AE7F3D98((uint64_t)v54);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1AE7F3D98((uint64_t)v54);
  swift_bridgeObjectRetain();
  v10 = sub_1AE925B54();
  v11 = sub_1AE9265D4();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    *(_DWORD *)v12 = 136315138;
    v49 = v40;
    v50 = v6;
    v51 = v7;
    v52 = v41;
    v53 = v38;
    sub_1AE4F6D48(&v43, v54);
    v13 = sub_1AE7F30A8(&v43, a2);
    if (v42)
    {

      v13 = 0;
      v14 = 0;
    }
    v43 = v13;
    v44 = v14;
    sub_1AE501548(&qword_1ED30FC40);
    v15 = sub_1AE925E90();
    sub_1AE520ED4(v15, v16, (uint64_t)&v53, v17, v18, v19, v20, v21, v38, v8, v39, v40, v41, 0, v43, v44, v45, v46, v47,
      v48);
    v43 = v22;
    sub_1AE92676C();
    sub_1AE4FC5B4();
    sub_1AE4F6718();
    sub_1AE4F76D8();
    sub_1AE5039BC();
    sub_1AE4FC5B4();
    sub_1AE4F6718();
    sub_1AE4F6710();
    sub_1AE5039BC();
    sub_1AE4F6710();
    _os_log_impl(&dword_1AE4F2000, v10, v11, "Executing params SQL: %s", v12, 0xCu);
    swift_arrayDestroy();
    sub_1AE4F9064();
  }
  sub_1AE4FC5B4();
  sub_1AE4F6718();
  sub_1AE5039BC();
  sub_1AE4FC5B4();
  sub_1AE4F6718();
  sub_1AE4F6710();
  sub_1AE5039BC();

  sub_1AE4F6710();
  ObjectType = swift_getObjectType();
  MEMORY[0x1E0C80A78](ObjectType);
  v24 = *(_QWORD *)(v39 + 24);
  v25 = v8;
  v26 = v54;
  sub_1AE924CCC();
  if (v42)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = v25;
    sub_1AE7F3E20((uint64_t)&v55, (uint64_t)v58);
    v29 = sub_1AE7F3E20((uint64_t)v58, (uint64_t)&v59);
    if ((v60 & 1) != 0)
    {
      v30 = v24;
    }
    else
    {
      v31 = v63;
      v43 = v63;
      MEMORY[0x1E0C80A78](v29);
      sub_1AE50ADC0();
      *(_QWORD *)(v32 - 32) = v25;
      *(_QWORD *)(v32 - 24) = v24;
      v30 = v24;
      sub_1AE505850(v33);
      sub_1AE4FBEC0();
      MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF60], v24);
      sub_1AE50051C();
      sub_1AE500FF4();
      v63 = v31;
    }
    sub_1AE7F3E20((uint64_t)&v56, (uint64_t)v57);
    v34 = sub_1AE7F3E20((uint64_t)v57, (uint64_t)&v61);
    v35 = v63;
    if ((v62 & 1) == 0)
    {
      v43 = v63;
      MEMORY[0x1E0C80A78](v34);
      sub_1AE50ADC0();
      *(_QWORD *)(v36 - 32) = v28;
      *(_QWORD *)(v36 - 24) = v30;
      sub_1AE505850(v37);
      sub_1AE4FBEC0();
      MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF60], v24);
      sub_1AE50051C();
      sub_1AE500FF4();
      v63 = v35;
    }
    swift_bridgeObjectRetain();
    sub_1AE501548((uint64_t *)&unk_1EED9E290);
    v26 = (_BYTE *)sub_1AE926A3C();
    swift_bridgeObjectRelease_n();
  }
  return v26;
}

uint64_t sub_1AE7F30A8(const void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __int16 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;

  v3 = v2;
  sub_1AE4F6D48(&v22, a1);
  v5 = sub_1AE7F8594(a2);
  v22 = 0;
  v23 = 0xE000000000000000;
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  v22 = 0xD000000000000013;
  v23 = 0x80000001AE986D30;
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  v21 = v22;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = (__int16 *)(v5 + 56);
    v8 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v9 = *((_QWORD *)v7 - 2);
      v10 = *((_QWORD *)v7 - 1);
      v11 = *v7;
      v22 = *((_QWORD *)v7 - 3);
      v23 = v9;
      v24 = v10;
      v25 = v11;
      sub_1AE7F4054(v22, v9, v10, v11);
      sub_1AE7F88D8();
      v26 = v3;
      if (v3)
        break;
      v14 = v12;
      v15 = v13;
      sub_1AE4FF164();
      if (v15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE4FCA68();
          v8 = v18;
        }
        v16 = *(_QWORD *)(v8 + 16);
        if (v16 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_1AE4FCA68();
          v8 = v19;
        }
        *(_QWORD *)(v8 + 16) = v16 + 1;
        v17 = v8 + 16 * v16;
        *(_QWORD *)(v17 + 32) = v14;
        *(_QWORD *)(v17 + 40) = v15;
      }
      v7 += 16;
      --v6;
      v3 = v26;
      if (!v6)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    sub_1AE4FF164();
    swift_bridgeObjectRelease();
    sub_1AE4F76D8();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v8 + 16))
    {
      v22 = v8;
      sub_1AE501548(&qword_1ED319DE0);
      sub_1AE568D9C();
      sub_1AE925DC4();
      sub_1AE4F76D8();
      v22 = 0x20455245485720;
      v23 = 0xE700000000000000;
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
    }
    swift_bridgeObjectRelease();
    return v21;
  }
}

uint64_t sub_1AE7F3348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const void *a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19;
  char *v20;
  uint64_t v21;
  _QWORD v22[2];
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char *v26;

  v22[0] = a2;
  v22[1] = a1;
  v15 = sub_1AE924FCC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v26 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v23 = a3;
  *((_QWORD *)&v23 + 1) = a4;
  *(_QWORD *)&v24 = a5;
  *((_QWORD *)&v24 + 1) = a6;
  result = sub_1AE7F30A8(a7, a8);
  if (!v8)
  {
    v19 = (uint64_t *)v22[0];
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
    v20 = v26;
    sub_1AE924FC0();
    v21 = sub_1AE924D8C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
    sub_1AE7F4014((uint64_t)&v23);
    *v19 = v21;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AE7F34BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 88))(v17, a3, a5);
  if (!v5)
  {
    v7 = v18;
    v8 = v19;
    sub_1AE4F9858(v17, v18);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 48))(v7, v8);
    v11 = v9;
    v12 = *(_QWORD *)(v9 + 16);
    if (v12)
    {
      v20 = MEMORY[0x1E0DEE9D8];
      sub_1AE5219D8();
      v13 = v20;
      v14 = *(_QWORD *)(v20 + 16);
      v15 = 32;
      do
      {
        v16 = *(_QWORD *)(v11 + v15);
        v20 = v13;
        if (v14 >= *(_QWORD *)(v13 + 24) >> 1)
        {
          sub_1AE5219D8();
          v13 = v20;
        }
        *(_QWORD *)(v13 + 16) = v14 + 1;
        *(_QWORD *)(v13 + 8 * v14 + 32) = v16;
        v15 += 400;
        ++v14;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v13 = MEMORY[0x1E0DEE9D8];
    }
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v17);
    LOBYTE(a2) = sub_1AE56E7A0(a2, v13);
    swift_bridgeObjectRelease();
  }
  return a2 & 1;
}

uint64_t sub_1AE7F3630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 88))(v17, a3, a5);
  if (!v5)
  {
    v7 = v18;
    v8 = v19;
    sub_1AE4F9858(v17, v18);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 96))(v7, v8);
    v11 = v9;
    v12 = *(_QWORD *)(v9 + 16);
    if (v12)
    {
      v20 = MEMORY[0x1E0DEE9D8];
      sub_1AE5219D8();
      v13 = v20;
      v14 = *(_QWORD *)(v20 + 16);
      v15 = 32;
      do
      {
        v16 = *(_QWORD *)(v11 + v15);
        v20 = v13;
        if (v14 >= *(_QWORD *)(v13 + 24) >> 1)
        {
          sub_1AE5219D8();
          v13 = v20;
        }
        *(_QWORD *)(v13 + 16) = v14 + 1;
        *(_QWORD *)(v13 + 8 * v14 + 32) = v16;
        v15 += 400;
        ++v14;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v13 = MEMORY[0x1E0DEE9D8];
    }
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v17);
    LOBYTE(a2) = sub_1AE56E7A0(a2, v13);
    swift_bridgeObjectRelease();
  }
  return a2 & 1;
}

uint64_t KTSDatabaseEngine.fetchRecent(offset:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t *v5;

  if (a1 <= 0)
  {
    ObjectType = swift_getObjectType();
    v5 = &v3;
    MEMORY[0x1E0C80A78](ObjectType);
    sub_1AE501548(qword_1EEDA3548);
    return sub_1AE924CCC();
  }
  else
  {
    sub_1AE7D2544();
    swift_allocError();
    *(_QWORD *)v1 = 0xD0000000000000D1;
    *(_QWORD *)(v1 + 8) = 0x80000001AE986C20;
    *(_BYTE *)(v1 + 16) = 1;
    return swift_willThrow();
  }
}

uint64_t sub_1AE7F38E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  _OWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD v57[2];
  uint64_t v58;
  uint64_t v59;

  v49 = a1;
  v55 = a6;
  v56 = a4;
  v48 = a7;
  v11 = sub_1AE924FCC();
  v52 = *(_QWORD *)(v11 - 8);
  v53 = v11;
  MEMORY[0x1E0C80A78](v11);
  v51 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1AE92670C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v54 = (uint64_t)&v43 - v18;
  if (qword_1EED99830 != -1)
    swift_once();
  v19 = sub_1AE925B6C();
  sub_1AE4FB608(v19, (uint64_t)qword_1EED9F800);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v20 = sub_1AE925B54();
  v21 = sub_1AE9265D4();
  v22 = os_log_type_enabled(v20, v21);
  v47 = v17;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v46 = a5;
    v24 = v23;
    v44 = swift_slowAlloc();
    *(_QWORD *)&v57[0] = v44;
    *(_DWORD *)v24 = 136315394;
    v45 = v14;
    swift_bridgeObjectRetain();
    sub_1AE520ED4(a2, a3, (uint64_t)v57, v25, v26, v27, v28, v29, v43, v44, v45, v46, (uint64_t)v47, v48, v49, v50, v51, v52, v53,
      v54);
    v59 = v30;
    v14 = v45;
    sub_1AE92676C();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v24 + 12) = 2048;
    v59 = v56;
    sub_1AE92676C();
    _os_log_impl(&dword_1AE4F2000, v20, v21, "Fetching from %s: offset %ld", (uint8_t *)v24, 0x16u);
    v31 = v44;
    swift_arrayDestroy();
    MEMORY[0x1AF454C78](v31, -1, -1);
    v32 = v24;
    a5 = v46;
    MEMORY[0x1AF454C78](v32, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v57[0] = 0;
  *((_QWORD *)&v57[0] + 1) = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  v59 = v56;
  sub_1AE926D18();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  v58 = 0;
  memset(v57, 0, sizeof(v57));
  v33 = v51;
  sub_1AE924FC0();
  v34 = v54;
  v35 = v50;
  sub_1AE924D98();
  if (v35)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v33, v53);
    return sub_1AE7F4014((uint64_t)v57);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v33, v53);
  sub_1AE7F4014((uint64_t)v57);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v34, 1, a5) == 1)
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v34, v13);
LABEL_12:
    v39 = (_OWORD *)v48;
    *(_OWORD *)(v48 + 16) = 0u;
    v39[2] = 0u;
    *v39 = 0u;
    return result;
  }
  v37 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v47, v34, v13);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v37, 1, a5) == 1)
  {
    v38 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v38(v34, v13);
    result = ((uint64_t (*)(uint64_t, uint64_t))v38)(v37, v13);
    goto LABEL_12;
  }
  v40 = (uint64_t *)v48;
  v41 = v55;
  *(_QWORD *)(v48 + 24) = a5;
  v40[4] = v41;
  v40[5] = a8;
  v42 = sub_1AE52F6A8(v40);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v42, v37, a5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v34, v13);
}

uint64_t sub_1AE7F3D98(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE7F3DC0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE7F3DE8(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE7F3348(a1, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(const void **)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_1AE7F3E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EEDA2CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE7F3E68(uint64_t a1)
{
  uint64_t *v1;

  return sub_1AE7F3630(a1, v1[5], v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_1AE7F3E88(uint64_t a1)
{
  uint64_t *v1;

  return sub_1AE7F34BC(a1, v1[5], v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_1AE7F3EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1AE7F38E0(a1, v2[5], v2[6], v2[9], v2[2], v2[3], a2, v2[4]);
}

uint64_t sub_1AE7F3ED8()
{
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_1AE7F3F00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *sub_1AE7F3F4C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v4;
  return a1;
}

uint64_t sub_1AE7F3FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = v4;
  return a1;
}

uint64_t type metadata accessor for KTSDatabaseEngine(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KTSDatabaseEngine);
}

uint64_t sub_1AE7F4014(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1EED94840);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AE7F4054(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t result;

  if ((a4 & 0xE000) == 0xA000)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1AE7F4068(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t result;

  if ((a4 & 0xE000) == 0xA000)
    return swift_bridgeObjectRelease();
  return result;
}

IntelligencePlatform::KTSViewName_optional __swiftcall KTSViewName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  IntelligencePlatform::KTSViewName_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1AE926B44();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static KTSViewName.allCases.getter()
{
  return &unk_1E5DA3600;
}

uint64_t KTSViewName.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE7F411C + 4 * byte_1AE95C700[*v0]))(0x656D67655373746BLL, 0xEF656C626154746ELL);
}

unint64_t sub_1AE7F411C()
{
  return 0xD000000000000010;
}

void sub_1AE7F4164()
{
  sub_1AE512970();
}

unint64_t sub_1AE7F4174()
{
  unint64_t result;

  result = qword_1EEDA35D0;
  if (!qword_1EEDA35D0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSViewName, &type metadata for KTSViewName);
    atomic_store(result, (unint64_t *)&qword_1EEDA35D0);
  }
  return result;
}

void sub_1AE7F41B0()
{
  unsigned __int8 *v0;

  sub_1AE512AFC(*v0);
}

void sub_1AE7F41B8()
{
  sub_1AE5E9698();
}

void sub_1AE7F41C0(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE55014C(a1, *v1);
}

IntelligencePlatform::KTSViewName_optional sub_1AE7F41C8(Swift::String *a1)
{
  return KTSViewName.init(rawValue:)(*a1);
}

uint64_t sub_1AE7F41D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = KTSViewName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1AE7F41FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEDA35D8;
  if (!qword_1EEDA35D8)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA35E0);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEDA35D8);
  }
  return result;
}

void sub_1AE7F4240(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5DA3600;
}

uint64_t storeEnumTagSinglePayload for KTSViewName(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AE7F429C + 4 * byte_1AE95C709[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AE7F42D0 + 4 * byte_1AE95C704[v4]))();
}

uint64_t sub_1AE7F42D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7F42D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE7F42E0);
  return result;
}

uint64_t sub_1AE7F42EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE7F42F4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AE7F42F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7F4300(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KTSViewName()
{
  return &type metadata for KTSViewName;
}

void sub_1AE7F431C(uint64_t a1@<X8>)
{
  sub_1AE7F44A8(0x656D67655373746BLL, 0xEF656C626154746ELL, (uint64_t (*)(id, uint64_t, unint64_t))sub_1AE800C4C, a1);
  sub_1AE4FC530();
}

void sub_1AE7F4388(uint64_t a1@<X8>)
{
  sub_1AE4FF178(16, 0x80000001AE97BCB0, (uint64_t (*)(id, uint64_t, unint64_t))sub_1AE801368, a1);
  sub_1AE4FC530();
}

void sub_1AE7F43E8(uint64_t a1@<X8>)
{
  sub_1AE4FF178(17, 0x80000001AE97BCD0, (uint64_t (*)(id, uint64_t, unint64_t))sub_1AE801368, a1);
  sub_1AE4FC530();
}

void sub_1AE7F4448(uint64_t a1@<X8>)
{
  sub_1AE4FF178(16, 0x80000001AE97BCF0, (uint64_t (*)(id, uint64_t, unint64_t))sub_1AE801368, a1);
  sub_1AE4FC530();
}

uint64_t sub_1AE7F44A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(id, uint64_t, unint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void *v10;
  void *v11;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(id, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  unint64_t v20;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(id, uint64_t, unint64_t);
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v39 = *MEMORY[0x1E0C80C00];
  v10 = *(void **)(v4 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  v11 = (void *)sub_1AE925E18();
  v38 = 0;
  v12 = objc_msgSend(v10, sel_requestAssertionForViewName_error_, v11, &v38);

  v13 = v38;
  if (v12)
  {
    v35 = a4;
    v36 = a3;
    v14 = *(_QWORD **)(v4 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    v16 = v14[5];
    v15 = v14[6];
    sub_1AE4F9858(v14 + 2, v16);
    v17 = *(uint64_t (**)(id, uint64_t, uint64_t))(v15 + 8);
    v18 = v13;
    v19 = v17(v12, v16, v15);
    if (v5)
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      v23 = v19;
      v24 = v20;
      if (qword_1EED99830 != -1)
        swift_once();
      v25 = sub_1AE925B6C();
      sub_1AE4FB608(v25, (uint64_t)qword_1EED9F800);
      v26 = sub_1AE925B54();
      v27 = sub_1AE9265D4();
      if (os_log_type_enabled(v26, v27))
      {
        v34 = v24;
        v28 = (uint8_t *)swift_slowAlloc();
        v38 = (id)swift_slowAlloc();
        *(_DWORD *)v28 = 136315138;
        sub_1AE520ED4(a1, a2, (uint64_t)&v38, v29, v30, v31, v32, v33, (uint64_t)(v28 + 4), v34, v23, v35, (uint64_t)v36, v37, (uint64_t)v38, v39, v40, v41, v42,
          v43);
        sub_1AE92676C();
        _os_log_impl(&dword_1AE4F2000, v26, v27, "Got assertion for %s.", v28, 0xCu);
        swift_arrayDestroy();
        sub_1AE4F9064();
      }

      return v36(v12, v23, v24);
    }
  }
  else
  {
    v22 = v38;
    sub_1AE9246B4();

    return swift_willThrow();
  }
}

uint64_t KTSIndexManager.__allocating_init(viewService:)(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  KTSIndexManager.init(viewService:)(a1);
  return v2;
}

void sub_1AE7F4790(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (*a1 == 3 || *(_QWORD *)(*(_QWORD *)(v2 + 72) + 16) && (sub_1AE537564(), (v4 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    sub_1AE7FA5A0();
    sub_1AE7F70F8(a2);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v16 + 1))
    {
      sub_1AE7F9FCC(&v15, &v18);
      v5 = v20;
      v6 = v21;
      v7 = sub_1AE4F9858(&v18, v20);
      KTSRecordProtocol.toData()(v5, v6, (uint64_t)v7, v8, v9, v10, v11, v12, v13, v14, SWORD2(v14), SBYTE6(v14), SHIBYTE(v14), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1),
        v18,
        *((uint64_t *)&v18 + 1),
        v19,
        v20);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v18);
      return;
    }
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
    v15 = 0u;
  }
  sub_1AE52982C((uint64_t)&v15, qword_1EEDA3548);
  sub_1AE4F7A10();
}

void KTSIndexManager.ktsSegmentForSegmentId(segmentId:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  os_log_type_t v39;
  _DWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  char v55;

  v4 = *a1;
  v6 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  sub_1AE7FA58C();
  sub_1AE7FA598();
  sub_1AE7F7DF0(v4, v6, v5, v3, &v51);
  if (v2)
  {
    swift_unknownObjectRelease();
    sub_1AE4F67AC();
  }
  else
  {
    swift_unknownObjectRelease();
    v7 = sub_1AE4F67AC();
    if (v52)
    {
      sub_1AE7F9FCC(&v51, &v53);
      v55 = 0;
      v14 = sub_1AE4F9858(&v53, v54);
      v22 = sub_1AE505EB0((uint64_t)v14, v15, v16, v17, v18, v19, v20, v21, v44, v46, v47, v48, v49, v50);
      sub_1AE5071A0((uint64_t)v22);
      sub_1AE506E34();
      v23 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v46);
      if (v52)
      {
        sub_1AE501548(&qword_1EEDA34C0);
        v30 = sub_1AE506A58();
        if ((v30 & 1) != 0)
        {
          sub_1AE50A6C4(v30, v31, v32, v33, v34, v35, v45, v46, v47, v48);
          goto LABEL_17;
        }
      }
      else
      {
        sub_1AE7FA530(v23, &qword_1EEDA3438, v24, v25, v26, v27, v28, v29);
      }
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v53);
    }
    else
    {
      sub_1AE7FA530(v7, qword_1EEDA3548, v8, v9, v10, v11, v12, v13);
    }
    sub_1AE7D2544();
    sub_1AE4F6778();
    *v36 = 0xD000000000000040;
    v36[1] = 0x80000001AE986D50;
    sub_1AE4FBB3C((uint64_t)v36, 3);
  }
  if (qword_1EED99830 != -1)
    swift_once();
  v37 = sub_1AE4F6854();
  v38 = (void *)sub_1AE4FB608(v37, (uint64_t)qword_1EED9F800);
  sub_1AE4F9650();
  sub_1AE4F9650();
  sub_1AE925B54();
  v39 = sub_1AE4FCF04();
  if (sub_1AE614A24(v39))
  {
    v40 = (_DWORD *)sub_1AE4F66A0();
    v41 = (_QWORD *)sub_1AE4F66A0();
    *v40 = 138412290;
    sub_1AE4F9650();
    _swift_stdlib_bridgeErrorToNSError();
    sub_1AE7FA4AC();
    *v41 = 12;
    sub_1AE4FC858();
    sub_1AE4FC858();
    sub_1AE7FA4FC(&dword_1AE4F2000, v42, v43, "KTSIndexManager error: %@.");
    sub_1AE501548(&qword_1ED319410);
    sub_1AE5081C8();
    sub_1AE4F9064();
  }
  sub_1AE4FC858();
  sub_1AE4FC858();
  sub_1AE4FC858();

  sub_1AE4F7A10();
LABEL_17:
  sub_1AE4FBA00();
}

void KTSIndexManager.ktsSegmentForSourceId(sourceId:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  os_log_type_t v33;
  _DWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  char v49;

  sub_1AE7FA58C();
  sub_1AE7FA598();
  sub_1AE7F8064((uint64_t *)&v45);
  if (v0)
  {
    swift_unknownObjectRelease();
    sub_1AE4F67AC();
  }
  else
  {
    swift_unknownObjectRelease();
    v1 = sub_1AE4F67AC();
    if (v46)
    {
      sub_1AE7F9FCC(&v45, &v47);
      v49 = 0;
      v8 = sub_1AE4F9858(&v47, v48);
      v16 = sub_1AE505EB0((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, v38, v40, v41, v42, v43, v44);
      sub_1AE5071A0((uint64_t)v16);
      sub_1AE506E34();
      v17 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v40);
      if (v46)
      {
        sub_1AE501548(&qword_1EEDA34C0);
        v24 = sub_1AE506A58();
        if ((v24 & 1) != 0)
        {
          sub_1AE50A6C4(v24, v25, v26, v27, v28, v29, v39, v40, v41, v42);
          goto LABEL_17;
        }
      }
      else
      {
        sub_1AE7FA530(v17, &qword_1EEDA3438, v18, v19, v20, v21, v22, v23);
      }
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v47);
    }
    else
    {
      sub_1AE7FA530(v1, qword_1EEDA3548, v2, v3, v4, v5, v6, v7);
    }
    sub_1AE7D2544();
    sub_1AE4F6778();
    *v30 = 0xD000000000000040;
    v30[1] = 0x80000001AE986DA0;
    sub_1AE4FBB3C((uint64_t)v30, 3);
  }
  if (qword_1EED99830 != -1)
    swift_once();
  v31 = sub_1AE4F6854();
  v32 = (void *)sub_1AE4FB608(v31, (uint64_t)qword_1EED9F800);
  sub_1AE4F9650();
  sub_1AE4F9650();
  sub_1AE925B54();
  v33 = sub_1AE4FCF04();
  if (sub_1AE614A24(v33))
  {
    v34 = (_DWORD *)sub_1AE4F66A0();
    v35 = (_QWORD *)sub_1AE4F66A0();
    *v34 = 138412290;
    sub_1AE4F9650();
    _swift_stdlib_bridgeErrorToNSError();
    sub_1AE7FA4AC();
    *v35 = 12;
    sub_1AE4FC858();
    sub_1AE4FC858();
    sub_1AE7FA4FC(&dword_1AE4F2000, v36, v37, "KTSIndexManager error: %@.");
    sub_1AE501548(&qword_1ED319410);
    sub_1AE5081C8();
    sub_1AE4F9064();
  }
  sub_1AE4FC858();
  sub_1AE4FC858();
  sub_1AE4FC858();

  sub_1AE4F7A10();
LABEL_17:
  sub_1AE4FBA00();
}

uint64_t KTSIndexManager.tripForSegmentId(segmentId:)()
{
  _QWORD *v0;

  sub_1AE7D2544();
  sub_1AE4F6778();
  *v0 = 0xD00000000000009ALL;
  v0[1] = 0x80000001AE986DF0;
  return sub_1AE4FBB3C((uint64_t)v0, 6);
}

uint64_t KTSIndexManager.tripForSourceId(sourceId:)()
{
  _QWORD *v0;

  sub_1AE7D2544();
  sub_1AE4F6778();
  *v0 = 0xD00000000000009ALL;
  v0[1] = 0x80000001AE986DF0;
  return sub_1AE4FBB3C((uint64_t)v0, 6);
}

NSObject *sub_1AE7F50CC(unsigned __int8 *__src)
{
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  int v5;
  uint64_t inited;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t isa;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  os_log_t v40;
  os_log_type_t v41;
  const char *v42;
  uint8_t *v43;
  uint32_t v44;
  _QWORD *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE __dst[176];
  _BYTE v95[16];
  _BYTE v96[24];
  NSObject *v97;

  v3 = v2;
  memcpy(__dst, __src, 0xA9uLL);
  v5 = __src[169];
  sub_1AE501548(&qword_1EEDA3630);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE933BD0;
  sub_1AE7F3E20((uint64_t)&__dst[144], (uint64_t)v95);
  sub_1AE7F3E20((uint64_t)v95, inited + 32);
  sub_1AE7F3E20((uint64_t)&__dst[160], (uint64_t)v96);
  sub_1AE7F3E20((uint64_t)v96, inited + 48);
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = MEMORY[0x1E0DEE9D8];
  if ((*(_BYTE *)(inited + 40) & 1) == 0)
  {
    v9 = *(_QWORD *)(inited + 32);
    sub_1AE519D1C();
    v8 = v10;
    v11 = *(_QWORD *)(v10 + 16);
    if (v11 >= *(_QWORD *)(v10 + 24) >> 1)
    {
      sub_1AE5096D8();
      v8 = v75;
    }
    *(_QWORD *)(v8 + 16) = v11 + 1;
    *(_QWORD *)(v8 + 8 * v11 + 32) = v9;
  }
  if ((*(_BYTE *)(inited + 56) & 1) == 0)
  {
    v12 = *(_QWORD *)(inited + 48);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE519D1C();
      v8 = v76;
    }
    v13 = *(_QWORD *)(v8 + 16);
    if (v13 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_1AE5096D8();
      v8 = v77;
    }
    *(_QWORD *)(v8 + 16) = v13 + 1;
    *(_QWORD *)(v8 + 8 * v13 + 32) = v12;
  }
  sub_1AE4F81B8();
  if (v5 == 3)
  {
    isa = (uint64_t)v1[5].isa;
    v15 = (uint64_t)v1[6].isa;
    v17 = (uint64_t)v1[7].isa;
    v16 = (uint64_t)v1[8].isa;
    sub_1AE4F6708();
    sub_1AE7FA5A0();
    v18 = sub_1AE7F64D0((uint64_t)__dst, v8, isa, v15, v17, v16);
    if (v3)
    {
      sub_1AE4F8214();
      sub_1AE4F76D8();
LABEL_18:
      sub_1AE4F6728();
      return v1;
    }
    v47 = v18;
    sub_1AE4F8214();
    sub_1AE4F76D8();
    sub_1AE4F6728();
    if (v47)
    {
      v48 = *(_QWORD *)(v47 + 16);
      if (v48)
      {
        v97 = v7;
        sub_1AE5223FC();
        v49 = v47 + 32;
        do
        {
          sub_1AE56CC74(v49, (uint64_t)&v85);
          v1 = v88;
          v50 = v90;
          v51 = sub_1AE4F9858(&v85, (uint64_t)v88);
          sub_1AE7FA5B4((uint64_t)v1, v50, (uint64_t)v51, v52, v53, v54, v55, v56, v78, v81, SWORD2(v81), SBYTE6(v81), SHIBYTE(v81), v85, v86, v87, (uint64_t)v88, v89, v90,
            v91,
            *((uint64_t *)&v91 + 1),
            v92,
            v93);
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v85);
          if ((sub_1AE7FA580() & 1) == 0)
          {
            sub_1AE5088C4();
            v1 = v97;
          }
          v57 = (unint64_t)v1[2].isa;
          if (v57 >= (unint64_t)v1[3].isa >> 1)
          {
            sub_1AE5223FC();
            v1 = v97;
          }
          v1[2].isa = (Class)(v57 + 1);
          sub_1AE7FA574((uint64_t)&v1[5 * v57], v79, v82, v85, v86, v87, (uint64_t)v88, v89, v90, v91);
          v49 += 48;
          --v48;
        }
        while (v48);
        sub_1AE4F81B8();
        return v1;
      }
      sub_1AE4F81B8();
    }
    if (qword_1EED99830 != -1)
      swift_once();
    v69 = sub_1AE4F6854();
    sub_1AE4FB608(v69, (uint64_t)qword_1EED9F800);
    sub_1AE7FA5EC();
    v70 = sub_1AE4FCF04();
    if (os_log_type_enabled(v1, v70))
    {
      v71 = (uint8_t *)sub_1AE4F66A0();
      *(_WORD *)v71 = 0;
      _os_log_impl(&dword_1AE4F2000, v1, v70, "KTSIndexManager trip index did not return result for query", v71, 2u);
      sub_1AE4F9064();
    }
LABEL_54:

    return MEMORY[0x1E0DEE9D8];
  }
  v19 = v1[9].isa;
  if (v19[2].isa)
  {
    v20 = sub_1AE537564();
    if ((v21 & 1) != 0)
    {
      v22 = (uint64_t *)((char *)v19[7].isa + 40 * v20);
      v24 = *v22;
      v23 = v22[1];
      v25 = v22[2];
      v26 = v22[3];
      v1 = v22[4];
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_unknownObjectRetain_n();
      v27 = sub_1AE7F5E58((uint64_t)__dst, v8, v23, v25, v26, (uint64_t)v1);
      if (v2)
      {
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease();
        goto LABEL_18;
      }
      v58 = v27;
      sub_1AE4F8214();
      sub_1AE4F76D8();
      sub_1AE4F6728();
      if (v58)
      {
        v59 = *(_QWORD *)(v58 + 16);
        if (v59)
        {
          v83 = v24;
          v97 = v7;
          sub_1AE5223FC();
          v60 = v58 + 32;
          do
          {
            sub_1AE56CC74(v60, (uint64_t)&v85);
            v1 = v88;
            v61 = v90;
            v62 = sub_1AE4F9858(&v85, (uint64_t)v88);
            sub_1AE7FA5B4((uint64_t)v1, v61, (uint64_t)v62, v63, v64, v65, v66, v67, v78, v83, SWORD2(v83), SBYTE6(v83), SHIBYTE(v83), v85, v86, v87, (uint64_t)v88, v89, v90,
              v91,
              *((uint64_t *)&v91 + 1),
              v92,
              v93);
            _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v85);
            if ((sub_1AE7FA580() & 1) == 0)
            {
              sub_1AE5088C4();
              v1 = v97;
            }
            v68 = (unint64_t)v1[2].isa;
            if (v68 >= (unint64_t)v1[3].isa >> 1)
            {
              sub_1AE5223FC();
              v1 = v97;
            }
            v1[2].isa = (Class)(v68 + 1);
            sub_1AE7FA574((uint64_t)&v1[5 * v68], v80, v84, v85, v86, v87, (uint64_t)v88, v89, v90, v91);
            v60 += 48;
            --v59;
          }
          while (v59);
          sub_1AE4F66E8();
          sub_1AE4F8214();
          sub_1AE4F76D8();
          swift_unknownObjectRelease();
          return v1;
        }
        sub_1AE4F66E8();
      }
      if (qword_1EED99830 != -1)
        swift_once();
      v72 = sub_1AE4F6854();
      sub_1AE4FB608(v72, (uint64_t)qword_1EED9F800);
      sub_1AE7FA5EC();
      v73 = sub_1AE4FCF04();
      if (sub_1AE614A24(v73))
      {
        v74 = (uint8_t *)sub_1AE4F66A0();
        *(_WORD *)v74 = 0;
        _os_log_impl(&dword_1AE4F2000, v1, (os_log_type_t)v58, "KTSIndexManager Cadence tables did not return result for query", v74, 2u);
        sub_1AE4F9064();
      }
      sub_1AE4F8214();
      sub_1AE4F76D8();
      swift_unknownObjectRelease();
      goto LABEL_54;
    }
  }
  sub_1AE4F6728();
  if (qword_1EED99830 != -1)
    swift_once();
  v28 = sub_1AE4F6854();
  sub_1AE4FB608(v28, (uint64_t)qword_1EED9F800);
  sub_1AE7FA5EC();
  v29 = sub_1AE4FCF04();
  if (os_log_type_enabled(v19, v29))
  {
    v30 = (_DWORD *)sub_1AE4F66A0();
    v85 = sub_1AE4F66A0();
    *v30 = 136315138;
    LOBYTE(v91) = v5;
    v31 = sub_1AE925E90();
    sub_1AE520ED4(v31, v32, (uint64_t)&v85, v33, v34, v35, v36, v37, v78, v81, v85, v86, v87, (uint64_t)v88, v89, v90, v91, *((uint64_t *)&v91 + 1), v92,
      v93);
    *(_QWORD *)&v91 = v38;
    sub_1AE92676C();
    swift_bridgeObjectRelease();
    sub_1AE7FA5CC();
    _os_log_impl(v39, v40, v41, v42, v43, v44);
    sub_1AE5081C8();
    sub_1AE4F9064();
  }

  sub_1AE92691C();
  sub_1AE925F74();
  LOBYTE(v91) = v5;
  sub_1AE925E90();
  sub_1AE925F74();
  sub_1AE4F6648();
  v1 = 0;
  sub_1AE7D2544();
  sub_1AE4F6778();
  *v45 = 0;
  v45[1] = 0xE000000000000000;
  sub_1AE4FBB3C((uint64_t)v45, 4);
  return v1;
}

uint64_t sub_1AE7F5824(uint64_t a1, uint64_t a2, char *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v48[2];
  __int128 v49;
  uint64_t v50[3];
  __int128 v51;
  char v52;
  _QWORD v53[5];
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char v90;

  v4 = v3;
  v8 = sub_1AE9248DC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1AE501548(&qword_1ED30EB60);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v48 - v16;
  if (*a3 == 8)
    v18 = 1;
  else
    v18 = *a3;
  sub_1AE5281B4(a1, (uint64_t)v48 - v16);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v17, 1, v8) == 1)
  {
    sub_1AE52982C((uint64_t)v17, &qword_1ED30EB60);
    v19 = 0;
  }
  else
  {
    sub_1AE924864();
    v19 = v20;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
  }
  sub_1AE5281B4(a2, (uint64_t)v15);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v15, 1, v8) == 1)
  {
    sub_1AE52982C((uint64_t)v15, &qword_1ED30EB60);
    sub_1AE9248AC();
    v15 = v11;
  }
  sub_1AE924864();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  v66 = 0;
  v65 = 0;
  v64 = 1;
  v63 = 1;
  v62 = 1;
  v61 = 1;
  v60 = 1;
  v59 = 1;
  v58 = 1;
  v57 = 1;
  v67 = v19;
  v68 = 0;
  v69 = v22;
  v70 = 0;
  v71 = v18;
  v72 = 0;
  v73 = 1;
  v74 = 0;
  v75 = 1;
  v76 = 0;
  v77 = 1;
  v78 = 0;
  v79 = 1;
  v80 = 0;
  v81 = 1;
  v82 = 0;
  v83 = 1;
  v84 = 5;
  v85 = 0;
  v86 = 0;
  v87 = 0;
  v88 = 1;
  v89 = 0;
  v90 = 1;
  v24 = v4[5];
  v23 = v4[6];
  v26 = v4[7];
  v25 = v4[8];
  swift_bridgeObjectRetain();
  sub_1AE7FA598();
  v27 = &unk_1EED99000;
  v28 = sub_1AE7F64D0((uint64_t)&v67, 0, v24, v23, v26, v25);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (!v28)
    return 0;
  v29 = *(_QWORD *)(v28 + 16);
  if (v29)
  {
    v30 = v28 + 32;
    v48[1] = v28;
    swift_bridgeObjectRetain();
    v31 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      sub_1AE56CC74(v30, (uint64_t)v54);
      v52 = 0;
      v32 = v55;
      v33 = v56;
      v34 = sub_1AE4F9858(v54, v55);
      *(_QWORD *)&v51 = v32;
      *((_QWORD *)&v51 + 1) = v33;
      v35 = sub_1AE52F6A8(v50);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v35, v34, v32);
      sub_1AE7FCBAC();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v50);
      if (!v53[3])
        break;
      sub_1AE501548(&qword_1EEDA34C0);
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_20;
      v36 = v50[0];
      v37 = v50[1];
      v38 = v50[2];
      v49 = v51;
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v54);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE505F58();
        sub_1AE51BC30();
        v31 = v45;
      }
      v39 = *(_QWORD *)(v31 + 16);
      if (v39 >= *(_QWORD *)(v31 + 24) >> 1)
      {
        sub_1AE51BC30();
        v31 = v46;
      }
      *(_QWORD *)(v31 + 16) = v39 + 1;
      v40 = v31 + 40 * v39;
      *(_QWORD *)(v40 + 32) = v36;
      *(_QWORD *)(v40 + 40) = v37;
      *(_QWORD *)(v40 + 48) = v38;
      *(_OWORD *)(v40 + 56) = v49;
      v27 = (_QWORD *)&unk_1EED99000;
LABEL_25:
      v30 += 48;
      if (!--v29)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
    sub_1AE52982C((uint64_t)v53, &qword_1EEDA3438);
LABEL_20:
    if (v27[262] != -1)
      swift_once();
    v41 = sub_1AE4F6854();
    v42 = sub_1AE4FB608(v41, (uint64_t)qword_1EED9F800);
    sub_1AE925B54();
    v43 = sub_1AE4FCF04();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)sub_1AE4F66A0();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_1AE4F2000, v42, v43, "KTSIndexManager error: result of call to executeQuery was not a KTSSegmentData.", v44, 2u);
      sub_1AE4F9064();
    }

    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v54);
    goto LABEL_25;
  }
  v31 = MEMORY[0x1E0DEE9D8];
LABEL_30:
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t KTSIndexManager.fetchAllKTSData(from:to:)()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1AE7F5E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43[2];
  uint64_t v44[2];
  _QWORD v45[12];
  _QWORD v46[12];
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;

  v7 = v6;
  v51 = MEMORY[0x1E0DEE9D8];
  if (qword_1EED99830 != -1)
    swift_once();
  v12 = sub_1AE925B6C();
  sub_1AE4FB608(v12, (uint64_t)qword_1EED9F800);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1AE7F3D98(a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1AE7F3D98(a1);
  swift_bridgeObjectRetain();
  v13 = sub_1AE925B54();
  v14 = sub_1AE9265D4();
  if (os_log_type_enabled(v13, v14))
  {
    v36 = (uint64_t)v13;
    v15 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v42 = v34;
    *(_DWORD *)v15 = 136315138;
    sub_1AE7F6B00(a1, a2);
    if (v6)
    {

      v16 = 0;
      v17 = 0;
    }
    v7 = 0;
    v40 = v16;
    v41 = v17;
    sub_1AE501548(&qword_1ED30FC40);
    v18 = sub_1AE925E90();
    sub_1AE520ED4(v18, v19, (uint64_t)&v42, v20, v21, v22, v23, v24, v33, v34, v36, a1, a6, a3, v40, v41, v42, v43[0], v43[1],
      v44[0]);
    sub_1AE92676C();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v38;
    sub_1AE7F3DC0(v38);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE7F3DC0(v38);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AE4F2000, v37, v14, "Executing params SQL: %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF454C78](v35, -1, -1);
    MEMORY[0x1AF454C78](v15, -1, -1);

  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE7F3DC0(a1);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE7F3DC0(a1);

    swift_bridgeObjectRelease();
  }
  ObjectType = swift_getObjectType();
  MEMORY[0x1E0C80A78](ObjectType);
  v26 = a5;
  sub_1AE924CCC();
  if (v7)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE7F3E20(a1 + 144, (uint64_t)v44);
    sub_1AE7F3E20((uint64_t)v44, (uint64_t)&v47);
    if ((v48 & 1) == 0)
    {
      v27 = v51;
      if (*(_QWORD *)(v51 + 16))
      {
        swift_bridgeObjectRetain();
        memcpy(v46, (const void *)(v27 + 32), sizeof(v46));
        sub_1AE7FA3B8(v46, (void (*)(uint64_t, uint64_t))sub_1AE54C814);
        sub_1AE7F6FD4();
      }
      v28 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      v51 = v28;
    }
    sub_1AE7F3E20(a1 + 160, (uint64_t)v43);
    sub_1AE7F3E20((uint64_t)v43, (uint64_t)&v49);
    v29 = v51;
    if ((v50 & 1) == 0)
    {
      if (*(_QWORD *)(v51 + 16))
      {
        swift_bridgeObjectRetain();
        memcpy(v45, (const void *)(v29 + 32), sizeof(v45));
        sub_1AE7FA3B8(v45, (void (*)(uint64_t, uint64_t))sub_1AE54C814);
        sub_1AE7F6FD4();
      }
      v30 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      v51 = v30;
    }
    v31 = swift_bridgeObjectRetain();
    v26 = sub_1AE83E5EC(v31);
    swift_bridgeObjectRelease_n();
  }
  return v26;
}

uint64_t sub_1AE7F64D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43[2];
  uint64_t v44[2];
  _QWORD v45[14];
  _QWORD v46[14];
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;

  v7 = v6;
  v51 = MEMORY[0x1E0DEE9D8];
  if (qword_1EED99830 != -1)
    swift_once();
  v12 = sub_1AE925B6C();
  sub_1AE4FB608(v12, (uint64_t)qword_1EED9F800);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1AE7F3D98(a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1AE7F3D98(a1);
  swift_bridgeObjectRetain();
  v13 = sub_1AE925B54();
  v14 = sub_1AE9265D4();
  if (os_log_type_enabled(v13, v14))
  {
    v36 = (uint64_t)v13;
    v15 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v42 = v34;
    *(_DWORD *)v15 = 136315138;
    sub_1AE7F6B00(a1, a2);
    if (v6)
    {

      v16 = 0;
      v17 = 0;
    }
    v7 = 0;
    v40 = v16;
    v41 = v17;
    sub_1AE501548(&qword_1ED30FC40);
    v18 = sub_1AE925E90();
    sub_1AE520ED4(v18, v19, (uint64_t)&v42, v20, v21, v22, v23, v24, v33, v34, v36, a1, a6, a3, v40, v41, v42, v43[0], v43[1],
      v44[0]);
    sub_1AE92676C();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v38;
    sub_1AE7F3DC0(v38);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE7F3DC0(v38);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AE4F2000, v37, v14, "Executing params SQL: %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1AF454C78](v35, -1, -1);
    MEMORY[0x1AF454C78](v15, -1, -1);

  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE7F3DC0(a1);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE7F3DC0(a1);

    swift_bridgeObjectRelease();
  }
  ObjectType = swift_getObjectType();
  MEMORY[0x1E0C80A78](ObjectType);
  v26 = a5;
  sub_1AE924CCC();
  if (v7)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE7F3E20(a1 + 144, (uint64_t)v44);
    sub_1AE7F3E20((uint64_t)v44, (uint64_t)&v47);
    if ((v48 & 1) == 0)
    {
      v27 = v51;
      if (*(_QWORD *)(v51 + 16))
      {
        swift_bridgeObjectRetain();
        memcpy(v46, (const void *)(v27 + 32), sizeof(v46));
        sub_1AE7FA088(v46);
        sub_1AE7F6EB0();
      }
      v28 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      v51 = v28;
    }
    sub_1AE7F3E20(a1 + 160, (uint64_t)v43);
    sub_1AE7F3E20((uint64_t)v43, (uint64_t)&v49);
    v29 = v51;
    if ((v50 & 1) == 0)
    {
      if (*(_QWORD *)(v51 + 16))
      {
        swift_bridgeObjectRetain();
        memcpy(v45, (const void *)(v29 + 32), sizeof(v45));
        sub_1AE7FA088(v45);
        sub_1AE7F6EB0();
      }
      v30 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      v51 = v30;
    }
    v31 = swift_bridgeObjectRetain();
    v26 = sub_1AE83E48C(v31);
    swift_bridgeObjectRelease_n();
  }
  return v26;
}

void sub_1AE7F6B00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v4 = sub_1AE7F8594(a2);
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  sub_1AE4F6708();
  sub_1AE925F74();
  sub_1AE4F76D8();
  sub_1AE925F74();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = (__int16 *)(v4 + 56);
    v7 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      sub_1AE7F4054(*((_QWORD *)v6 - 3), *((_QWORD *)v6 - 2), *((_QWORD *)v6 - 1), *v6);
      sub_1AE7F88D8();
      if (v3)
        break;
      v10 = v8;
      v11 = v9;
      sub_1AE4FF164();
      if (v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE505F58();
          sub_1AE519C48();
          v7 = v14;
        }
        v12 = *(_QWORD *)(v7 + 16);
        if (v12 >= *(_QWORD *)(v7 + 24) >> 1)
        {
          sub_1AE519C48();
          v7 = v15;
        }
        *(_QWORD *)(v7 + 16) = v12 + 1;
        v13 = v7 + 16 * v12;
        *(_QWORD *)(v13 + 32) = v10;
        *(_QWORD *)(v13 + 40) = v11;
      }
      v6 += 16;
      --v5;
      v3 = 0;
      if (!v5)
      {
        sub_1AE4F6648();
        goto LABEL_14;
      }
    }
    sub_1AE4FF164();
    swift_bridgeObjectRelease();
    sub_1AE4F76D8();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    sub_1AE4F6648();
    if (*(_QWORD *)(v7 + 16))
    {
      sub_1AE501548(&qword_1ED319DE0);
      sub_1AE568D9C();
      sub_1AE925DC4();
      sub_1AE4F76D8();
      sub_1AE7FA5E0();
      sub_1AE4F67AC();
      sub_1AE925F74();
    }
    swift_bridgeObjectRelease();
  }
  sub_1AE507170();
}

void sub_1AE7F6D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t))
{
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  _OWORD v18[2];
  uint64_t v19;
  char *v20;

  v17[0] = a2;
  v17[1] = a1;
  v12 = sub_1AE924FCC();
  MEMORY[0x1E0C80A78](v12);
  v20 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE7F6B00(a7, a8);
  if (!v9)
  {
    v14 = (uint64_t *)v17[0];
    v19 = 0;
    memset(v18, 0, sizeof(v18));
    v15 = sub_1AE924FC0();
    a9(v15);
    v16 = sub_1AE924D8C();
    sub_1AE4F66E8();
    sub_1AE7FA558();
    sub_1AE52982C((uint64_t)v18, &qword_1EED94840);
    *v14 = v16;
    swift_bridgeObjectRelease();
  }
  sub_1AE4F667C();
}

void sub_1AE7F6EB0()
{
  sub_1AE7FA4E8();
}

void sub_1AE7F6FD4()
{
  sub_1AE7FA4E8();
}

void sub_1AE7F70F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t *v4;

  if (a1 < 1)
  {
    ObjectType = swift_getObjectType();
    v4 = &v2;
    MEMORY[0x1E0C80A78](ObjectType);
    sub_1AE501548(qword_1EEDA3548);
    sub_1AE924CCC();
  }
  else
  {
    sub_1AE7D2544();
    sub_1AE4F6778();
    *v1 = 0xD0000000000000D1;
    v1[1] = 0x80000001AE986C20;
    sub_1AE4FBB3C((uint64_t)v1, 1);
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE7F7204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  unint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[2];
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;

  v6 = v5;
  v45 = a1;
  v43 = a5;
  v10 = sub_1AE924FCC();
  v44 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EED99830 != -1)
    swift_once();
  v13 = sub_1AE925B6C();
  sub_1AE4FB608(v13, (uint64_t)qword_1EED9F800);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v14 = sub_1AE925B54();
  v15 = sub_1AE9265D4();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    *(_QWORD *)&v41 = v10;
    v17 = v16;
    v38 = swift_slowAlloc();
    v48[0] = v38;
    *(_DWORD *)v17 = 136315394;
    v39 = a4;
    swift_bridgeObjectRetain();
    sub_1AE520ED4(a2, a3, (uint64_t)v48, v18, v19, v20, v21, v22, v38, v39, v40, *((uint64_t *)&v40 + 1), v41, *((uint64_t *)&v41 + 1), v42, v43, v44, v45, *(uint64_t *)&v46[0],
      *((uint64_t *)&v46[0] + 1));
    *(_QWORD *)&v46[0] = v23;
    *(_QWORD *)&v40 = v5;
    a4 = v39;
    sub_1AE92676C();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2048;
    *(_QWORD *)&v46[0] = a4;
    v6 = v40;
    sub_1AE92676C();
    _os_log_impl(&dword_1AE4F2000, v14, v15, "Fetching from %s: offset %ld", (uint8_t *)v17, 0x16u);
    v24 = v38;
    swift_arrayDestroy();
    MEMORY[0x1AF454C78](v24, -1, -1);
    v25 = v17;
    v10 = v41;
    MEMORY[0x1AF454C78](v25, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v46[0] = 0;
  *((_QWORD *)&v46[0] + 1) = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  v59 = a4;
  sub_1AE926D18();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  v47 = 0;
  memset(v46, 0, sizeof(v46));
  sub_1AE924FC0();
  sub_1AE7FA138();
  sub_1AE924D98();
  if (v6)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v10);
    return sub_1AE52982C((uint64_t)v46, &qword_1EED94840);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v10);
    result = sub_1AE52982C((uint64_t)v46, &qword_1EED94840);
    v27 = v49;
    if (v49)
    {
      v45 = v58;
      v44 = v57;
      v41 = v56;
      v28 = v55;
      v30 = v53;
      v29 = v54;
      v40 = v52;
      v32 = v50;
      v31 = v51;
      v33 = v48[0];
      v34 = v48[1];
      v35 = (uint64_t *)v43;
      *(_QWORD *)(v43 + 24) = &type metadata for KTSSegmentRecord;
      v35[4] = sub_1AE7FA2B0();
      v35[5] = sub_1AE7FA2EC();
      result = swift_allocObject();
      *v35 = result;
      *(_QWORD *)(result + 16) = v33;
      *(_QWORD *)(result + 24) = v34;
      *(_QWORD *)(result + 32) = v27;
      *(_QWORD *)(result + 40) = v32;
      *(_QWORD *)(result + 48) = v31;
      *(_OWORD *)(result + 56) = v40;
      *(_QWORD *)(result + 72) = v30;
      *(_QWORD *)(result + 80) = v29;
      *(_BYTE *)(result + 88) = v28 & 1;
      *(_BYTE *)(result + 89) = HIBYTE(v28) & 1;
      *(_OWORD *)(result + 96) = v41;
      v36 = v45;
      *(_QWORD *)(result + 112) = v44;
      *(_QWORD *)(result + 120) = v36;
    }
    else
    {
      v37 = (_OWORD *)v43;
      *(_OWORD *)(v43 + 16) = 0u;
      v37[2] = 0u;
      *v37 = 0u;
    }
  }
  return result;
}

uint64_t sub_1AE7F76B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  __int16 v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  *(_QWORD *)&v42 = a1;
  v41 = a5;
  v8 = sub_1AE924FCC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EED99830 != -1)
    swift_once();
  v12 = sub_1AE925B6C();
  sub_1AE4FB608(v12, (uint64_t)qword_1EED9F800);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v13 = sub_1AE925B54();
  v14 = sub_1AE9265D4();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    *(_QWORD *)&v39 = v9;
    v16 = v15;
    v36 = swift_slowAlloc();
    *(_QWORD *)&v46 = v36;
    *(_DWORD *)v16 = 136315394;
    v37 = a4;
    swift_bridgeObjectRetain();
    sub_1AE520ED4(a2, a3, (uint64_t)&v46, v17, v18, v19, v20, v21, v35, v36, v37, (uint64_t)v38, v39, *((uint64_t *)&v39 + 1), v40, v41, v42, *((uint64_t *)&v42 + 1), v43,
      *((uint64_t *)&v43 + 1));
    *(_QWORD *)&v44[0] = v22;
    v38 = v11;
    a4 = v37;
    sub_1AE92676C();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2048;
    *(_QWORD *)&v44[0] = a4;
    v11 = v38;
    sub_1AE92676C();
    _os_log_impl(&dword_1AE4F2000, v13, v14, "Fetching from %s: offset %ld", (uint8_t *)v16, 0x16u);
    v23 = v36;
    swift_arrayDestroy();
    MEMORY[0x1AF454C78](v23, -1, -1);
    v24 = v16;
    v9 = v39;
    MEMORY[0x1AF454C78](v24, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v44[0] = 0;
  *((_QWORD *)&v44[0] + 1) = 0xE000000000000000;
  sub_1AE92691C();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  v55 = a4;
  sub_1AE926D18();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  v45 = 0;
  memset(v44, 0, sizeof(v44));
  sub_1AE924FC0();
  sub_1AE7FA190();
  v25 = v43;
  sub_1AE924D98();
  if (v25)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return sub_1AE52982C((uint64_t)v44, &qword_1EED94840);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    result = sub_1AE52982C((uint64_t)v44, &qword_1EED94840);
    v27 = v50;
    if (v50 == 2)
    {
      v28 = (_OWORD *)v41;
      *(_OWORD *)(v41 + 16) = 0u;
      v28[2] = 0u;
      *v28 = 0u;
    }
    else
    {
      v30 = v53;
      v29 = v54;
      v43 = v52;
      v31 = v51;
      v32 = v49;
      v42 = v48;
      v33 = v47;
      v39 = v46;
      v34 = (uint64_t *)v41;
      *(_QWORD *)(v41 + 24) = &type metadata for KTSSliceRecord;
      v34[4] = sub_1AE7FA1CC();
      v34[5] = sub_1AE7FA208();
      result = swift_allocObject();
      *v34 = result;
      *(_OWORD *)(result + 16) = v39;
      *(_QWORD *)(result + 32) = v33;
      *(_OWORD *)(result + 40) = v42;
      *(_QWORD *)(result + 56) = v32;
      *(_BYTE *)(result + 64) = v27 & 1;
      *(_BYTE *)(result + 65) = HIBYTE(v27) & 1;
      *(_QWORD *)(result + 72) = v31;
      *(_OWORD *)(result + 80) = v43;
      *(_QWORD *)(result + 96) = v30;
      *(_QWORD *)(result + 104) = v29;
    }
  }
  return result;
}

uint64_t sub_1AE7F7B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;

  swift_getObjectType();
  sub_1AE501548(&qword_1EEDA3638);
  sub_1AE924CCC();
  if (!v4)
  {
    a4 = sub_1AE83E48C(v7);
    swift_bridgeObjectRelease();
  }
  return a4;
}

uint64_t sub_1AE7F7C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v9 = sub_1AE924FCC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v16[0] = 0;
  *((_QWORD *)&v16[0] + 1) = 0xE000000000000000;
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  strcpy((char *)v16, "SELECT * from ");
  HIBYTE(v16[0]) = -18;
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE925F74();
  v18 = a8;
  sub_1AE926D18();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_1AE924FC0();
  sub_1AE7FA138();
  v13 = sub_1AE924D8C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1AE52982C((uint64_t)v16, &qword_1EED94840);
  return v13;
}

_OWORD *sub_1AE7F7DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v5;
  _OWORD *result;
  _OWORD *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17[3];
  uint64_t v18;

  result = (_OWORD *)sub_1AE7F7B40(a1, a2, a3, a4);
  if (!v5)
  {
    v9 = result;
    if (result)
    {
      sub_1AE56AE24((uint64_t)result, &v15);
      if (v16)
      {
        sub_1AE7F9FCC(&v15, v17);
        v10 = *((_QWORD *)v9 + 2);
        swift_bridgeObjectRelease();
        if (v10 == 1)
          return sub_1AE7F9FCC(v17, a5);
        *(_QWORD *)&v15 = 0;
        *((_QWORD *)&v15 + 1) = 0xE000000000000000;
        sub_1AE92691C();
        sub_1AE925F74();
        swift_bridgeObjectRetain();
        sub_1AE925F74();
        swift_bridgeObjectRelease();
        sub_1AE925F74();
        v18 = a1;
        EntityIdentifier.description.getter();
        sub_1AE925F74();
        swift_bridgeObjectRelease();
        v13 = v15;
        sub_1AE7D2544();
        swift_allocError();
        *(_OWORD *)v14 = v13;
        *(_BYTE *)(v14 + 16) = 3;
        swift_willThrow();
        return (_OWORD *)_s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v17);
      }
      swift_bridgeObjectRelease();
      sub_1AE52982C((uint64_t)&v15, qword_1EEDA3548);
    }
    *(_QWORD *)&v17[0] = 0;
    *((_QWORD *)&v17[0] + 1) = 0xE000000000000000;
    sub_1AE92691C();
    sub_1AE925F74();
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    *(_QWORD *)&v15 = a1;
    EntityIdentifier.description.getter();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    v11 = v17[0];
    sub_1AE7D2544();
    swift_allocError();
    *(_OWORD *)v12 = v11;
    *(_BYTE *)(v12 + 16) = 3;
    return (_OWORD *)swift_willThrow();
  }
  return result;
}

uint64_t sub_1AE7F8064@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_getObjectType();
  sub_1AE501548(&qword_1EEDA3638);
  result = sub_1AE924CCC();
  if (!v1)
  {
    v4 = *(_QWORD *)(v22 + 16);
    if (v4)
    {
      v19 = *(_QWORD *)(v22 + 40);
      v20 = *(_QWORD *)(v22 + 32);
      v17 = *(_QWORD *)(v22 + 64);
      v18 = *(_QWORD *)(v22 + 56);
      v5 = *(_QWORD *)(v22 + 72);
      v6 = *(_QWORD *)(v22 + 80);
      v7 = *(_QWORD *)(v22 + 88);
      v8 = *(_QWORD *)(v22 + 96);
      v15 = *(_BYTE *)(v22 + 105);
      v16 = *(_BYTE *)(v22 + 104);
      v10 = *(_QWORD *)(v22 + 112);
      v9 = *(_QWORD *)(v22 + 120);
      v11 = *(_QWORD *)(v22 + 128);
      v12 = *(_QWORD *)(v22 + 136);
      v21 = *(_QWORD *)(v22 + 48);
      swift_bridgeObjectRetain();
      sub_1AE54C814(v10, v9);
      sub_1AE54C814(v11, v12);
      swift_bridgeObjectRelease();
      if (v4 == 1)
      {
        a1[3] = (uint64_t)&type metadata for KTSSegmentRecord;
        a1[4] = sub_1AE7FA2B0();
        a1[5] = sub_1AE7FA2EC();
        result = swift_allocObject();
        *a1 = result;
        *(_QWORD *)(result + 16) = v20;
        *(_QWORD *)(result + 24) = v19;
        *(_QWORD *)(result + 32) = v21;
        *(_QWORD *)(result + 40) = v18;
        *(_QWORD *)(result + 48) = v17;
        *(_QWORD *)(result + 56) = v5;
        *(_QWORD *)(result + 64) = v6;
        *(_QWORD *)(result + 72) = v7;
        *(_QWORD *)(result + 80) = v8;
        *(_BYTE *)(result + 88) = v16;
        *(_BYTE *)(result + 89) = v15;
        *(_QWORD *)(result + 96) = v10;
        *(_QWORD *)(result + 104) = v9;
        *(_QWORD *)(result + 112) = v11;
        *(_QWORD *)(result + 120) = v12;
      }
      else
      {
        sub_1AE92691C();
        sub_1AE925F74();
        swift_bridgeObjectRetain();
        sub_1AE925F74();
        swift_bridgeObjectRelease();
        sub_1AE925F74();
        sub_1AE925F74();
        sub_1AE7D2544();
        swift_allocError();
        *(_QWORD *)v14 = 0;
        *(_QWORD *)(v14 + 8) = 0xE000000000000000;
        *(_BYTE *)(v14 + 16) = 3;
        swift_willThrow();
        swift_bridgeObjectRelease();
        sub_1AE50BDB4(v10, v9);
        return sub_1AE50BDB4(v11, v12);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1AE92691C();
      sub_1AE925F74();
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      sub_1AE925F74();
      sub_1AE7D2544();
      swift_allocError();
      *(_QWORD *)v13 = 0;
      *(_QWORD *)(v13 + 8) = 0xE000000000000000;
      *(_BYTE *)(v13 + 16) = 3;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1AE7F83D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;
  uint64_t v9;

  v6 = a1;
  v9 = sub_1AE924FCC();
  v1 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v7[0] = 0;
  *((_QWORD *)&v7[0] + 1) = 0xE000000000000000;
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  strcpy((char *)v7, "SELECT * from ");
  HIBYTE(v7[0]) = -18;
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE925F74();
  v8 = 0;
  memset(v7, 0, sizeof(v7));
  sub_1AE924FC0();
  sub_1AE7FA138();
  v4 = sub_1AE924D8C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v9);
  sub_1AE52982C((uint64_t)v7, &qword_1EED94840);
  return v4;
}

uint64_t sub_1AE7F8594(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int16 v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  __int16 v21;
  uint64_t v22;
  char v23;
  __int16 v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int16 v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = *((unsigned __int8 *)v1 + 8);
  v3 = *((unsigned __int8 *)v1 + 24);
  v4 = *((unsigned __int8 *)v1 + 40);
  v47 = v1[6];
  v48 = v1[4];
  v5 = *((unsigned __int8 *)v1 + 56);
  v50 = v1[8];
  v6 = *((unsigned __int8 *)v1 + 72);
  v49 = v1[10];
  v7 = *((unsigned __int8 *)v1 + 88);
  v52 = v1[12];
  v8 = *((unsigned __int8 *)v1 + 104);
  v51 = v1[14];
  v9 = *((unsigned __int8 *)v1 + 120);
  if (*((_BYTE *)v1 + 25) == 8)
    v10 = 1;
  else
    v10 = *((unsigned __int8 *)v1 + 25);
  v11 = *((unsigned __int8 *)v1 + 121);
  v53 = v11;
  if (v2 == 1 && (v3 & 1) != 0)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    v13 = a1;
  }
  else
  {
    v43 = v1[2];
    v44 = *v1;
    v45 = *((unsigned __int8 *)v1 + 56);
    sub_1AE51BC4C();
    v12 = v14;
    v15 = *(_QWORD *)(v14 + 16);
    if (v15 >= *(_QWORD *)(v14 + 24) >> 1)
    {
      sub_1AE500530();
      v12 = v32;
    }
    *(_QWORD *)(v12 + 16) = v15 + 1;
    v16 = v12 + 32 * v15;
    *(_QWORD *)(v16 + 32) = v44;
    *(_QWORD *)(v16 + 40) = v2;
    *(_QWORD *)(v16 + 48) = v43;
    *(_WORD *)(v16 + 56) = v3 | (v10 << 8);
    v13 = a1;
    v11 = v53;
    v5 = v45;
  }
  v17 = v9;
  if (!v4 || (v5 & 1) == 0)
  {
    v19 = v13;
    v20 = v5;
    v21 = v9;
    v22 = v19;
    v18 = v7;
    if ((sub_1AE4F77E0() & 1) == 0)
    {
      sub_1AE4FF180();
      v12 = v33;
    }
    sub_1AE4F6D50();
    if (v23)
    {
      sub_1AE500530();
      v24 = v20;
      v12 = v34;
    }
    else
    {
      v24 = v20;
    }
    v25 = v24 | (v10 << 8);
    *(_QWORD *)(v12 + 16) = v4;
    v26 = v12 + 32 * v7;
    *(_QWORD *)(v26 + 32) = v48;
    *(_QWORD *)(v26 + 40) = v4;
    *(_QWORD *)(v26 + 48) = v47;
    *(_WORD *)(v26 + 56) = v25 | 0x2000;
    v13 = v22;
    v17 = v21;
    v11 = v53;
    if (!v6)
      goto LABEL_20;
LABEL_19:
    if ((v18 & 1) != 0)
      goto LABEL_25;
    goto LABEL_20;
  }
  v18 = v7;
  if (v6)
    goto LABEL_19;
LABEL_20:
  if ((sub_1AE4F77E0() & 1) == 0)
  {
    sub_1AE4FF180();
    v12 = v35;
  }
  sub_1AE4F6D50();
  if (v23)
  {
    sub_1AE500530();
    v12 = v36;
  }
  *(_QWORD *)(v12 + 16) = v4;
  v27 = v12 + 32 * v7;
  *(_QWORD *)(v27 + 32) = v50;
  *(_QWORD *)(v27 + 40) = v6;
  *(_QWORD *)(v27 + 48) = v49;
  *(_WORD *)(v27 + 56) = v18 | (v10 << 8) | 0x4000;
LABEL_25:
  if (!v8 || (v17 & 1) == 0)
  {
    if ((sub_1AE4F77E0() & 1) == 0)
    {
      sub_1AE4FF180();
      v12 = v37;
    }
    sub_1AE4F6D50();
    if (v23)
    {
      sub_1AE500530();
      v12 = v38;
    }
    *(_QWORD *)(v12 + 16) = v4;
    v28 = v12 + 32 * v7;
    *(_QWORD *)(v28 + 32) = v52;
    *(_QWORD *)(v28 + 40) = v8;
    *(_QWORD *)(v28 + 48) = v51;
    *(_WORD *)(v28 + 56) = v17 | (v10 << 8) | 0x6000;
  }
  if (v11 <= 4)
  {
    if ((sub_1AE4F77E0() & 1) == 0)
    {
      sub_1AE4FF180();
      v12 = v39;
    }
    sub_1AE4F6D50();
    if (v23)
    {
      sub_1AE500530();
      v12 = v40;
    }
    *(_QWORD *)(v12 + 16) = v4;
    v29 = v12 + 32 * v7;
    *(_QWORD *)(v29 + 40) = 0;
    *(_QWORD *)(v29 + 48) = 0;
    *(_QWORD *)(v29 + 32) = v11;
    *(_WORD *)(v29 + 56) = 0x8000;
  }
  if (v13 && *(_QWORD *)(v13 + 16))
  {
    sub_1AE4F6708();
    if ((sub_1AE4F77E0() & 1) == 0)
    {
      sub_1AE4FF180();
      v12 = v41;
    }
    sub_1AE4F6D50();
    if (v23)
    {
      sub_1AE500530();
      v12 = v42;
    }
    *(_QWORD *)(v12 + 16) = v4;
    v30 = v12 + 32 * v7;
    *(_QWORD *)(v30 + 40) = 0;
    *(_QWORD *)(v30 + 48) = 0;
    *(_QWORD *)(v30 + 32) = v13;
    *(_WORD *)(v30 + 56) = -24576;
  }
  return v12;
}

void sub_1AE7F88D8()
{
  __asm { BR              X10 }
}

void sub_1AE7F8924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  __int16 v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  a11 = 0;
  a12 = 0xE000000000000000;
  LOBYTE(a18) = 2;
  sub_1AE926A48();
  v22 = a11;
  LOBYTE(a11) = HIBYTE(v18);
  sub_1AE7F8F0C(v22, a12, v19, v21 & 1, v20, v18 & 1, (unsigned __int8 *)&a11);
  sub_1AE4F67AC();
  sub_1AE507170();
}

_QWORD *KTSIndexManager.init(viewService:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v9;
  _QWORD v10[2];
  __int128 v11;
  uint64_t v12;

  v3 = (_QWORD *)v1;
  sub_1AE7F431C((uint64_t)v10);
  if (v2)
  {

    swift_deallocPartialClassInstance();
  }
  else
  {
    v5 = v10[1];
    v6 = v12;
    *(_QWORD *)(v1 + 32) = v10[0];
    *(_QWORD *)(v1 + 40) = v5;
    *(_OWORD *)(v1 + 48) = v11;
    *(_QWORD *)(v1 + 64) = v6;
    sub_1AE501548(&qword_1EEDA35E8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AE93D190;
    *(_BYTE *)(inited + 32) = 0;
    sub_1AE7F4388(inited + 40);
    *(_BYTE *)(inited + 80) = 1;
    sub_1AE7F43E8(inited + 88);
    *(_BYTE *)(inited + 128) = 2;
    sub_1AE7F4448(inited + 136);
    sub_1AE7F9FE4();
    v9 = sub_1AE925C98();

    v3[9] = v9;
    v3[2] = 0;
    v3[3] = 0;
  }
  return v3;
}

void KTSIndexManager.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE4F6624();
}

uint64_t KTSIndexManager.__deallocating_deinit()
{
  KTSIndexManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE7F8F0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, unsigned __int8 *a7)
{
  uint64_t v7;
  uint64_t v8;

  v7 = *a7;
  if ((a4 & 1) == 0)
  {
    if ((a6 & 1) != 0)
      __asm { BR              X10 }
    __asm { BR              X10 }
  }
  if ((a6 & 1) == 0)
    __asm { BR              X10 }
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE501548(&qword_1EEDA35F8);
  sub_1AE925E90();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  sub_1AE925E90();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE7D2544();
  swift_allocError();
  *(_QWORD *)v8 = 0;
  *(_QWORD *)(v8 + 8) = 0xE000000000000000;
  *(_BYTE *)(v8 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_1AE7F9914()
{
  uint64_t v0;
  char v1;

  v1 = sub_1AE926D60();
  swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    sub_1AE925F74();
    sub_1AE925F74();
    JUMPOUT(0x1AE7F9FC4);
  }
  return ((uint64_t (*)(unint64_t))((char *)sub_1AE7F9D74 + 4 * byte_1AE95C8A6[v0]))(0x80000001AE97BF40);
}

void sub_1AE7F991C()
{
  uint64_t v0;
  char v2;
  uint64_t v3;

  v2 = sub_1AE926D60(0xD000000000000013, 0x80000001AE97BF40, v3, v0 | 0x8000000000000000, 0);
  swift_bridgeObjectRelease(0x80000001AE97BF40);
  if ((v2 & 1) == 0)
    __asm { BR              X10 }
  JUMPOUT(0x1AE7F9CB8);
}

void sub_1AE7F9964()
{
  JUMPOUT(0x1AE7F9974);
}

void sub_1AE7F99E0(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  if ((v1 | 0x8000000000000000) != (a1 | 0x8000000000000000))
  {
    v2 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v2 & 1) != 0)
      JUMPOUT(0x1AE7F9CB8);
    JUMPOUT(0x1AE7F8F90);
  }
  JUMPOUT(0x1AE7F9C5CLL);
}

void sub_1AE7F99E8()
{
  JUMPOUT(0x1AE7F9A20);
}

void sub_1AE7F9A2C()
{
  JUMPOUT(0x1AE7F9A38);
}

void sub_1AE7F9A44()
{
  JUMPOUT(0x1AE7F9A58);
}

void sub_1AE7F9B94(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v2;
  char v3;

  if ((v1 | 0x8000000000000000) == (a1 | 0x8000000000000000))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v3 & 1) == 0)
      JUMPOUT(0x1AE7F8F90);
  }
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE9263AC(v2);
  sub_1AE925F74();
  sub_1AE925F74();
  JUMPOUT(0x1AE7F9B34);
}

uint64_t sub_1AE7F9B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v3 = sub_1AE926D60(0xD000000000000013, 0x80000001AE97BF40, v0 - 3, v1 | 0x8000000000000000, 0);
  swift_bridgeObjectRelease(0x80000001AE97BF40);
  if ((v3 & 1) != 0)
    JUMPOUT(0x1AE7F9F8CLL);
  return ((uint64_t (*)(unint64_t))((char *)sub_1AE7F9D74 + 4 * byte_1AE95C8A6[v2]))(0x80000001AE97BF40);
}

uint64_t sub_1AE7F9BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;

  v4 = (v1 - 32) | 0x8000000000000000;
  v5 = sub_1AE926D60(v0 + 2, v4, v0 - 3, v2 | 0x8000000000000000, 0);
  swift_bridgeObjectRelease(v4);
  if ((v5 & 1) != 0)
    JUMPOUT(0x1AE7F9F8CLL);
  return ((uint64_t (*)(unint64_t))((char *)sub_1AE7F9D74 + 4 * byte_1AE95C8A6[v3]))(0x80000001AE97BF40);
}

void sub_1AE7F9BC8()
{
  uint64_t v0;

  if (0x80000001AE97BF80 != (v0 | 0x8000000000000000))
    JUMPOUT(0x1AE7F9CFCLL);
  JUMPOUT(0x1AE7F9F34);
}

uint64_t sub_1AE7F9BEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v5 = sub_1AE926D60(a1, v4 | 0x8000000000000000, v1 - 3, v2 | 0x8000000000000000, 0);
  swift_bridgeObjectRelease(v4 | 0x8000000000000000);
  if ((v5 & 1) != 0)
    JUMPOUT(0x1AE7F9F8CLL);
  return ((uint64_t (*)(unint64_t))((char *)sub_1AE7F9D74 + 4 * byte_1AE95C8A6[v3]))(0x80000001AE97BF40);
}

void sub_1AE7F9BF4()
{
  JUMPOUT(0x1AE7F9C04);
}

void sub_1AE7F9C0C(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = sub_1AE926D60(v1 + 2, 0x80000001AE97BF60, 0xD000000000000013, a1 | 0x8000000000000000, 0);
  swift_bridgeObjectRelease(0x80000001AE97BF60);
  if ((v2 & 1) != 0)
    JUMPOUT(0x1AE7F9CB8);
  JUMPOUT(0x1AE7F8F90);
}

void sub_1AE7F9C28()
{
  JUMPOUT(0x1AE7F9C80);
}

void sub_1AE7F9C30()
{
  JUMPOUT(0x1AE7F9C40);
}

void sub_1AE7F9C6C()
{
  JUMPOUT(0x1AE7F9C7CLL);
}

void sub_1AE7F9D74(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  if ((v1 | 0x8000000000000000) == (a1 | 0x8000000000000000))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v2 & 1) == 0)
      JUMPOUT(0x1AE7F8F90);
  }
  sub_1AE925F74();
  sub_1AE925F74();
  JUMPOUT(0x1AE7F9FC4);
}

void sub_1AE7F9D7C(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  double v13;
  char v14;
  uint64_t v15;

  v14 = sub_1AE926D60(0xD000000000000015, v11 | 0x8000000000000000, 0xD000000000000013, a1 | 0x8000000000000000, 0);
  swift_bridgeObjectRelease(v11 | 0x8000000000000000);
  v15 = *(_QWORD *)(v12 - 72);
  if ((v14 & 1) != 0)
  {
    a10 = 0;
    a11 = 0xE000000000000000;
    sub_1AE92691C(19);
    sub_1AE925F74(a7, v15);
    sub_1AE925F74(2112544, 0xE300000000000000);
    sub_1AE9263AC(&a10, MEMORY[0x1E0DED578], MEMORY[0x1E0DED588], v13);
    sub_1AE925F74(0x20444E4120, 0xE500000000000000);
    sub_1AE925F74(a7, v15);
    JUMPOUT(0x1AE7F9B34);
  }
  JUMPOUT(0x1AE7F8F90);
}

void sub_1AE7F9D94()
{
  JUMPOUT(0x1AE7F9E08);
}

void sub_1AE7F9DAC()
{
  JUMPOUT(0x1AE7F9DB4);
}

void sub_1AE7F9DE0()
{
  JUMPOUT(0x1AE7F9E08);
}

void sub_1AE7F9DF8()
{
  JUMPOUT(0x1AE7F9E04);
}

void sub_1AE7F9EEC()
{
  JUMPOUT(0x1AE7F9F54);
}

void sub_1AE7F9EFC(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = sub_1AE926D60(v1, 0x80000001AE97BF80, 0xD000000000000013, a1 | 0x8000000000000000, 0);
  swift_bridgeObjectRelease(0x80000001AE97BF80);
  if ((v2 & 1) != 0)
    JUMPOUT(0x1AE7F9F8CLL);
  JUMPOUT(0x1AE7F8F90);
}

void sub_1AE7F9F44()
{
  JUMPOUT(0x1AE7F9F50);
}

_OWORD *sub_1AE7F9FCC(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

unint64_t sub_1AE7F9FE4()
{
  unint64_t result;

  result = qword_1EEDA35F0;
  if (!qword_1EEDA35F0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSDataRequest.Cadence, &type metadata for KTSDataRequest.Cadence);
    atomic_store(result, (unint64_t *)&qword_1EEDA35F0);
  }
  return result;
}

uint64_t type metadata accessor for KTSIndexManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for KTSIndexManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KTSIndexManager.__allocating_init(viewService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_1AE7FA064(uint64_t a1)
{
  sub_1AE7FA380(a1, (void (*)(uint64_t))sub_1AE7FA138);
}

_QWORD *sub_1AE7FA088(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = a1[10];
  v3 = a1[11];
  v4 = a1[12];
  v5 = a1[13];
  swift_bridgeObjectRetain();
  sub_1AE54C814(v2, v3);
  sub_1AE54C814(v4, v5);
  return a1;
}

_QWORD *sub_1AE7FA0E0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = a1[10];
  v3 = a1[11];
  v4 = a1[12];
  v5 = a1[13];
  swift_bridgeObjectRelease();
  sub_1AE50BDB4(v2, v3);
  sub_1AE50BDB4(v4, v5);
  return a1;
}

unint64_t sub_1AE7FA138()
{
  unint64_t result;

  result = qword_1EEDA3600;
  if (!qword_1EEDA3600)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSegmentRecord, &type metadata for KTSSegmentRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3600);
  }
  return result;
}

uint64_t sub_1AE7FA174(uint64_t a1)
{
  return sub_1AE7FA28C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AE7F76B8);
}

unint64_t sub_1AE7FA190()
{
  unint64_t result;

  result = qword_1EEDA3608;
  if (!qword_1EEDA3608)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSliceRecord, &type metadata for KTSSliceRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3608);
  }
  return result;
}

unint64_t sub_1AE7FA1CC()
{
  unint64_t result;

  result = qword_1EEDA3610;
  if (!qword_1EEDA3610)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSliceRecord, &type metadata for KTSSliceRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3610);
  }
  return result;
}

unint64_t sub_1AE7FA208()
{
  unint64_t result;

  result = qword_1EEDA3618;
  if (!qword_1EEDA3618)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSliceRecord, &type metadata for KTSSliceRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3618);
  }
  return result;
}

uint64_t sub_1AE7FA244()
{
  uint64_t v0;

  sub_1AE50BDB4(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  sub_1AE50BDB4(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  return swift_deallocObject();
}

uint64_t sub_1AE7FA270(uint64_t a1)
{
  return sub_1AE7FA28C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AE7F7204);
}

uint64_t sub_1AE7FA28C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

unint64_t sub_1AE7FA2B0()
{
  unint64_t result;

  result = qword_1EEDA3620;
  if (!qword_1EEDA3620)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSegmentRecord, &type metadata for KTSSegmentRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3620);
  }
  return result;
}

unint64_t sub_1AE7FA2EC()
{
  unint64_t result;

  result = qword_1EEDA3628;
  if (!qword_1EEDA3628)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSegmentRecord, &type metadata for KTSSegmentRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3628);
  }
  return result;
}

uint64_t sub_1AE7FA328()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1AE50BDB4(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  sub_1AE50BDB4(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120));
  return swift_deallocObject();
}

void sub_1AE7FA35C(uint64_t a1)
{
  sub_1AE7FA380(a1, (void (*)(uint64_t))sub_1AE7FA190);
}

void sub_1AE7FA380(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t *v2;

  sub_1AE7F6D60(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], a2);
}

void sub_1AE7FA3B8(_QWORD *a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[10];
  v4 = a1[11];
  a2(a1[8], a1[9]);
  a2(v3, v4);
  sub_1AE4F6624();
}

uint64_t sub_1AE7FA3F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v9;
  uint64_t result;

  result = sub_1AE7F7C24(a1, a2, a3, a4, a5, a6, a7, a8);
  if (!v9)
    *a9 = result;
  return result;
}

uint64_t sub_1AE7FA420@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AE7F83D8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1AE7FA458@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AE7FA420(a1, a2);
}

uint64_t sub_1AE7FA488@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1AE7FA3F8(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], a2);
}

uint64_t sub_1AE7FA4AC()
{
  return sub_1AE92676C();
}

void sub_1AE7FA4CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 8 * v3 + 32) = v0;
}

void sub_1AE7FA4E8()
{
  JUMPOUT(0x1AF454348);
}

void sub_1AE7FA4FC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1AE7FA510()
{
  return sub_1AE92676C();
}

uint64_t sub_1AE7FA530(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  return sub_1AE52982C((uint64_t)va, a2);
}

void sub_1AE7FA538()
{
  sub_1AE5219D8();
}

uint64_t sub_1AE7FA548()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1AE7FA558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1AE7FA568()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE7FA574@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10)
{
  return sub_1AE50AF58(&a10, a1 + 32);
}

uint64_t sub_1AE7FA580()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE7FA58C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE7FA598()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1AE7FA5A0()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1AE7FA5A8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE56E7A0(v0, v1);
}

void sub_1AE7FA5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  KTSRecordProtocol.toData()(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23);
}

uint64_t sub_1AE7FA5C0()
{
  return sub_1AE926A48();
}

uint64_t sub_1AE7FA5E0()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE7FA5EC()
{
  return sub_1AE925B54();
}

uint64_t sub_1AE7FA5F4()
{
  return sub_1AE9243C0();
}

void *KTSDataRequest.init(parameters:cadence:)@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  _BYTE __src[170];
  int v14;
  __int16 v15;

  v4 = sub_1AE924918();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &__src[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AE500548(__src);
  v8 = *a1;
  sub_1AE92490C();
  v9 = sub_1AE9248E8();
  v11 = v10;
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  result = memcpy((void *)a2, __src, 0xA9uLL);
  *(_BYTE *)(a2 + 169) = v8;
  *(_DWORD *)(a2 + 170) = v14;
  *(_WORD *)(a2 + 174) = v15;
  *(_QWORD *)(a2 + 176) = v9;
  *(_QWORD *)(a2 + 184) = v11;
  return result;
}

uint64_t KTSSliceData.identifier.getter()
{
  uint64_t v0;
  _BYTE v2[192];
  _BYTE v3[176];

  sub_1AE77235C(v0, (uint64_t)v2, &qword_1EEDA3400);
  sub_1AE77235C((uint64_t)v2, (uint64_t)v3, &qword_1EEDA3400);
  sub_1AE7EA338((uint64_t)v3);
  sub_1AE4F66CC();
  return sub_1AE4F7714();
}

void KTSSliceData.init(identifier:data:context:metadata:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[24];
  _QWORD __src[28];
  _BYTE __dst[224];

  sub_1AE7FC5F0();
  sub_1AE7FA7D0(v5);
  sub_1AE7EA378(v13);
  sub_1AE7FC614(v6, v7, &qword_1EEDA3400, v8, v9, v10, v11, v12, v13[0], v13[1], v13[2], v13[3], v13[4], v13[5], v13[6], v13[7], v13[8], v13[9], v13[10],
    v13[11],
    v13[12],
    v13[13],
    v13[14],
    v13[15],
    v13[16],
    v13[17],
    v13[18],
    v13[19],
    v13[20],
    v13[21],
    v13[22],
    v13[23],
    __src[0]);
  __src[24] = v1;
  __src[25] = v0;
  __src[26] = v3;
  __src[27] = v2;
  memcpy(__dst, __src, sizeof(__dst));
  nullsub_1(__dst);
  sub_1AE77235C((uint64_t)__dst, v4, &qword_1EEDA34C8);
}

uint64_t sub_1AE7FA7D0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1EEDA3640);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void KTSData.identifier.getter()
{
  sub_1AE509224();
  sub_1AE509D68();
}

uint64_t KTSData.init(identifier:data:context:metadata:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char v11;

  sub_1AE4FF18C();
  swift_retain();
  sub_1AE7FC608((uint64_t)&v10);
  if (v11 == 1)
  {
    if (qword_1EED99830 != -1)
      swift_once();
    v3 = sub_1AE925B6C();
    sub_1AE4FB608(v3, (uint64_t)qword_1EED9F800);
    v4 = (void *)sub_1AE925B54();
    v5 = sub_1AE9265EC();
    if (sub_1AE4F698C(v5))
    {
      *(_WORD *)sub_1AE4F69B0() = 0;
      sub_1AE50585C(&dword_1AE4F2000, v6, v7, "Can't make life event entity identifier for trip data object");
      sub_1AE50ADD4();
    }
    sub_1AE4FB730();
    sub_1AE4F6700();

    sub_1AE50A6E4();
    sub_1AE4F6700();
    result = sub_1AE4FB730();
    *v1 = 0;
    v1[1] = 0;
    v1[2] = 0;
  }
  else
  {
    v9 = v10;
    sub_1AE50A6E4();
    *v1 = v9;
    v1[1] = v0;
    v1[2] = v2;
    sub_1AE4F6700();
    return swift_release();
  }
  return result;
}

double KTSSegmentData.init(identifier:data:context:metadata:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  sub_1AE4FF18C();
  swift_retain();
  sub_1AE7FC608((uint64_t)&v13);
  if ((v14 & 1) == 0)
  {
    v4 = v13;
    sub_1AE7FB4CC(v3, (uint64_t)&v13);
    if (v15)
    {
      sub_1AE501548(&qword_1EEDA3648);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1AE50A6E4();
        sub_1AE4F66CC();
        *v1 = v11;
        v1[1] = v12;
        v1[2] = v4;
        v1[3] = v0;
        v1[4] = v2;
        sub_1AE4F6700();
        sub_1AE4FB730();
        sub_1AE4F9038();
        return result;
      }
    }
    else
    {
      sub_1AE7FA7D0((uint64_t)&v13);
    }
  }
  if (qword_1EED99830 != -1)
    swift_once();
  v6 = sub_1AE925B6C();
  sub_1AE4FB608(v6, (uint64_t)qword_1EED9F800);
  v7 = (void *)sub_1AE925B54();
  v8 = sub_1AE9265EC();
  if (sub_1AE4F698C(v8))
  {
    *(_WORD *)sub_1AE4F69B0() = 0;
    sub_1AE50585C(&dword_1AE4F2000, v9, v10, "Can't make a KTS entity identifier for KTS segment data object");
    sub_1AE50ADD4();
  }
  sub_1AE4FB730();
  sub_1AE4F6700();

  sub_1AE50A6E4();
  sub_1AE4F6700();
  sub_1AE4FB730();
  v1[4] = 0;
  result = 0.0;
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  return result;
}

void KTSSegmentData.identifier.getter()
{
  sub_1AE509224();
  sub_1AE509D68();
}

uint64_t KTSDataRequest.Cadence.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x796C68746E6F6DLL;
  if (*v0 != 1)
    v1 = 0x6C61756E6E61;
  if (*v0)
    return v1;
  else
    return 0x796C6B656577;
}

void KTSSegmentData.segmentId.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void KTSSegmentData.entityId.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
}

uint64_t KTSSegmentData.data.getter()
{
  return swift_retain();
}

void KTSSegmentData.data.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release();
  *(_QWORD *)(v1 + 24) = a1;
  sub_1AE4F6664();
}

uint64_t (*KTSSegmentData.data.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KTSSegmentData.context.getter()
{
  return swift_retain();
}

void KTSSegmentData.context.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release();
  *(_QWORD *)(v1 + 32) = a1;
  sub_1AE4F6664();
}

uint64_t (*KTSSegmentData.context.modify())(_QWORD)
{
  return nullsub_1;
}

void KTSSegmentData.Metadata.segmentId.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void KTSSegmentData.Metadata.segmentId.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  sub_1AE4F6624();
}

uint64_t (*KTSSegmentData.Metadata.segmentId.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*sub_1AE7FAC34())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1AE7FAC44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = KTSSegmentData.context.getter();
  *a1 = result;
  return result;
}

void sub_1AE7FAC68(uint64_t *a1)
{
  KTSSegmentData.context.setter(*a1);
}

uint64_t (*sub_1AE7FAC70())(_QWORD)
{
  return nullsub_1;
}

double sub_1AE7FAC84()
{
  return KTSSegmentData.init(identifier:data:context:metadata:)();
}

void KTSData.tripEntityId.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t KTSData.data.getter()
{
  return swift_retain();
}

void KTSData.data.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release();
  *(_QWORD *)(v1 + 8) = a1;
  sub_1AE4F6664();
}

uint64_t (*KTSData.data.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KTSData.context.getter()
{
  return swift_retain();
}

void KTSData.context.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release();
  *(_QWORD *)(v1 + 16) = a1;
  sub_1AE4F6664();
}

uint64_t (*KTSData.context.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*sub_1AE7FAD18())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1AE7FAD28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = KTSData.context.getter();
  *a1 = result;
  return result;
}

void sub_1AE7FAD4C(uint64_t *a1)
{
  KTSData.context.setter(*a1);
}

uint64_t (*sub_1AE7FAD54())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1AE7FAD68()
{
  return KTSData.init(identifier:data:context:metadata:)();
}

uint64_t *KTSSliceData.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v4[24];

  sub_1AE77235C(v1, (uint64_t)v4, &qword_1EEDA3400);
  sub_1AE77235C((uint64_t)v4, a1, &qword_1EEDA3400);
  return sub_1AE7FB514(v4);
}

uint64_t KTSSliceData.data.getter()
{
  return swift_retain();
}

void KTSSliceData.data.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release();
  *(_QWORD *)(v1 + 192) = a1;
  sub_1AE4F6664();
}

uint64_t (*KTSSliceData.data.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KTSSliceData.context.getter()
{
  return swift_retain();
}

void KTSSliceData.context.setter(uint64_t a1)
{
  uint64_t v1;

  swift_release();
  *(_QWORD *)(v1 + 200) = a1;
  sub_1AE4F6664();
}

uint64_t (*KTSSliceData.context.modify())(_QWORD)
{
  return nullsub_1;
}

void *KTSSliceData.init(identifier:data:context:request:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14[24];
  _QWORD __src[28];

  sub_1AE7FC5F0();
  memcpy(v14, v5, sizeof(v14));
  v6 = nullsub_1(v14);
  sub_1AE7FC614(v6, v7, &qword_1EEDA3400, v8, v9, v10, v11, v12, v14[0], v14[1], v14[2], v14[3], v14[4], v14[5], v14[6], v14[7], v14[8], v14[9], v14[10],
    v14[11],
    v14[12],
    v14[13],
    v14[14],
    v14[15],
    v14[16],
    v14[17],
    v14[18],
    v14[19],
    v14[20],
    v14[21],
    v14[22],
    v14[23],
    __src[0]);
  __src[24] = v1;
  __src[25] = v0;
  __src[26] = v3;
  __src[27] = v2;
  return memcpy(v4, __src, 0xE0uLL);
}

uint64_t (*sub_1AE7FAEB4())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1AE7FAEC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = KTSSliceData.context.getter();
  *a1 = result;
  return result;
}

void sub_1AE7FAEE8(uint64_t *a1)
{
  KTSSliceData.context.setter(*a1);
}

uint64_t (*sub_1AE7FAEF0())(_QWORD)
{
  return nullsub_1;
}

void sub_1AE7FAF04()
{
  KTSSliceData.init(identifier:data:context:metadata:)();
}

IntelligencePlatform::KTSDataRequest::Cadence_optional __swiftcall KTSDataRequest.Cadence.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  BOOL v3;
  void *object;
  uint64_t countAndFlagsBits;
  char v6;
  IntelligencePlatform::KTSDataRequest::Cadence_optional result;
  BOOL v8;
  char v10;

  v2 = v1;
  v3 = rawValue._countAndFlagsBits == 0x796C6B656577 && rawValue._object == (void *)0xE600000000000000;
  if (v3 || (object = rawValue._object, countAndFlagsBits = rawValue._countAndFlagsBits, (sub_1AE4FD134() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    v6 = 0;
  }
  else
  {
    v8 = countAndFlagsBits == 0x796C68746E6F6DLL && object == (void *)0xE700000000000000;
    if (v8 || (sub_1AE4FD134() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v6 = 1;
    }
    else if (countAndFlagsBits == 0x6C61756E6E61 && object == (void *)0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      v6 = 2;
    }
    else
    {
      v10 = sub_1AE4FD134();
      sub_1AE4F9038();
      if ((v10 & 1) != 0)
        v6 = 2;
      else
        v6 = 3;
    }
  }
  *v2 = v6;
  sub_1AE4F6624();
  return result;
}

void *static KTSDataRequest.Cadence.allCases.getter()
{
  return &unk_1E5DA6D60;
}

void sub_1AE7FB034(unsigned __int8 *a1, char *a2)
{
  sub_1AE51251C(*a1, *a2);
}

void sub_1AE7FB040()
{
  sub_1AE512B60();
}

uint64_t sub_1AE7FB048()
{
  return sub_1AE5E9364();
}

void sub_1AE7FB050()
{
  sub_1AE54FF58();
}

IntelligencePlatform::KTSDataRequest::Cadence_optional sub_1AE7FB058(Swift::String *a1)
{
  return KTSDataRequest.Cadence.init(rawValue:)(*a1);
}

void sub_1AE7FB064(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = KTSDataRequest.Cadence.rawValue.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

void sub_1AE7FB084(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5DA6D60;
}

uint64_t KTSDataRequest.parameters.getter@<X0>(void *a1@<X8>)
{
  _BYTE v3[176];

  sub_1AE500548(v3);
  sub_1AE500548(a1);
  return sub_1AE7F3D98((uint64_t)v3);
}

void KTSDataRequest.cadence.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 169);
}

void KTSDataRequest.requestId.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

uint64_t static KTSDataRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v13[176];
  _BYTE v14[176];

  sub_1AE500548(v14);
  v4 = *(unsigned __int8 *)(a1 + 169);
  v5 = *(_QWORD *)(a1 + 176);
  v6 = *(_QWORD *)(a1 + 184);
  memcpy(v13, (const void *)a2, 0xA9uLL);
  v7 = *(unsigned __int8 *)(a2 + 169);
  v8 = *(_QWORD *)(a2 + 176);
  v9 = *(_QWORD *)(a2 + 184);
  if ((static KTSQueryParams.== infix(_:_:)((uint64_t)v14, (uint64_t)v13) & 1) == 0)
    return 0;
  if (v4 == 3)
  {
    if (v7 != 3)
      return 0;
  }
  else
  {
    if (v7 == 3)
      return 0;
    sub_1AE51251C(v4, v7);
    if ((v10 & 1) == 0)
      return 0;
  }
  if (v5 == v8 && v6 == v9)
    return 1;
  sub_1AE4F7714();
  return sub_1AE926D60();
}

uint64_t KTSDataRequest.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  int v3;
  uint64_t v5;

  sub_1AE500548(&v5);
  v3 = *(unsigned __int8 *)(v1 + 169);
  KTSQueryParams.hash(into:)(a1);
  sub_1AE926EE0();
  if (v3 != 3)
  {
    sub_1AE5096F0();
    sub_1AE925F14();
    sub_1AE4F9038();
  }
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  return swift_bridgeObjectRelease();
}

uint64_t KTSDataRequest.hashValue.getter()
{
  uint64_t v0;
  int v1;
  _BYTE v3[176];
  _BYTE v4[72];

  sub_1AE500548(v3);
  v1 = *(unsigned __int8 *)(v0 + 169);
  sub_1AE926EC8();
  KTSQueryParams.hash(into:)((uint64_t)v4);
  sub_1AE926EE0();
  if (v1 != 3)
  {
    sub_1AE5096F0();
    sub_1AE925F14();
    sub_1AE4F9038();
  }
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  return sub_1AE926F10();
}

uint64_t sub_1AE7FB3C0()
{
  unsigned __int8 *v0;
  int v1;
  _BYTE __dst[169];
  _BYTE v4[72];

  memcpy(__dst, v0, sizeof(__dst));
  v1 = v0[169];
  sub_1AE926EC8();
  KTSQueryParams.hash(into:)((uint64_t)v4);
  sub_1AE926EE0();
  if (v1 != 3)
  {
    sub_1AE925F14();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  return sub_1AE926F10();
}

uint64_t sub_1AE7FB4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EEDA3640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1AE7FB514(uint64_t *a1)
{
  sub_1AE7EF904(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

void sub_1AE7FB57C()
{
  sub_1AE585700(&qword_1EEDA3650, (uint64_t (*)(uint64_t))type metadata accessor for KTSContextRepresentation, (uint64_t)&protocol conformance descriptor for KTSContextRepresentation);
}

void sub_1AE7FB5A8()
{
  sub_1AE585700(&qword_1EEDA3658, (uint64_t (*)(uint64_t))type metadata accessor for KTSContextAggregateRepresentation, (uint64_t)&protocol conformance descriptor for KTSContextAggregateRepresentation);
}

unint64_t sub_1AE7FB5D8()
{
  unint64_t result;

  result = qword_1EEDA3660;
  if (!qword_1EEDA3660)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSDataRequest.Cadence, &type metadata for KTSDataRequest.Cadence);
    atomic_store(result, (unint64_t *)&qword_1EEDA3660);
  }
  return result;
}

unint64_t sub_1AE7FB618()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEDA3668;
  if (!qword_1EEDA3668)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA3670);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEDA3668);
  }
  return result;
}

unint64_t sub_1AE7FB660()
{
  unint64_t result;

  result = qword_1EEDA3678;
  if (!qword_1EEDA3678)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSDataRequest, &type metadata for KTSDataRequest);
    atomic_store(result, (unint64_t *)&qword_1EEDA3678);
  }
  return result;
}

uint64_t sub_1AE7FB6A0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 6u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for KTSError(uint64_t a1)
{
  return sub_1AE7FB6C8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1AE7FB6C8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 6u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s20IntelligencePlatform8KTSErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1AE7FB6A0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for KTSError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1AE7FB6A0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1AE7FB6C8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for KTSError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1AE7FB6C8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for KTSError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFA && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 249;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 6)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KTSError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

void type metadata accessor for KTSError()
{
  sub_1AE4F67D4();
}

uint64_t dispatch thunk of KTSDataProtocol.data.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of KTSDataProtocol.data.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of KTSDataProtocol.data.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of KTSDataProtocol.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of KTSDataProtocol.context.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of KTSDataProtocol.context.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of KTSDataProtocol.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of KTSDataProtocol.init(identifier:data:context:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 88))();
}

uint64_t destroy for KTSSegmentData()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for KTSSegmentData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for KTSSegmentData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for KTSSegmentData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

void type metadata accessor for KTSSegmentData()
{
  sub_1AE4F67D4();
}

void type metadata accessor for KTSSegmentData.Metadata()
{
  sub_1AE4F67D4();
}

uint64_t destroy for KTSData()
{
  swift_release();
  return swift_release();
}

void _s20IntelligencePlatform7KTSDataVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  sub_1AE4F6664();
}

_QWORD *assignWithCopy for KTSData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for KTSData(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

void type metadata accessor for KTSData()
{
  sub_1AE4F67D4();
}

uint64_t destroy for KTSSliceData(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 184))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_BYTE *initializeWithCopy for KTSSliceData(_BYTE *__dst, _QWORD *__src)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = __src[23];
  if (v4)
  {
    *(_QWORD *)__dst = *__src;
    __dst[8] = *((_BYTE *)__src + 8);
    *((_QWORD *)__dst + 2) = __src[2];
    *((_WORD *)__dst + 12) = *((_WORD *)__src + 12);
    *((_QWORD *)__dst + 4) = __src[4];
    __dst[40] = *((_BYTE *)__src + 40);
    *((_QWORD *)__dst + 6) = __src[6];
    __dst[56] = *((_BYTE *)__src + 56);
    v5 = __src[8];
    __dst[72] = *((_BYTE *)__src + 72);
    *((_QWORD *)__dst + 8) = v5;
    *((_QWORD *)__dst + 10) = __src[10];
    __dst[88] = *((_BYTE *)__src + 88);
    *((_QWORD *)__dst + 12) = __src[12];
    __dst[104] = *((_BYTE *)__src + 104);
    *((_QWORD *)__dst + 14) = __src[14];
    *((_WORD *)__dst + 60) = *((_WORD *)__src + 60);
    v6 = __src[17];
    *((_QWORD *)__dst + 16) = __src[16];
    *((_QWORD *)__dst + 17) = v6;
    __dst[152] = *((_BYTE *)__src + 152);
    *((_QWORD *)__dst + 18) = __src[18];
    *((_QWORD *)__dst + 20) = __src[20];
    *((_WORD *)__dst + 84) = *((_WORD *)__src + 84);
    *((_QWORD *)__dst + 22) = __src[22];
    *((_QWORD *)__dst + 23) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(__dst, __src, 0xC0uLL);
  }
  v7 = __src[25];
  *((_QWORD *)__dst + 24) = __src[24];
  *((_QWORD *)__dst + 25) = v7;
  v8 = __src[26];
  v9 = __src[27];
  *((_QWORD *)__dst + 26) = v8;
  *((_QWORD *)__dst + 27) = v9;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return __dst;
}

_BYTE *assignWithCopy for KTSSliceData(_BYTE *__dst, _QWORD *__src)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = __src[23];
  if (!*((_QWORD *)__dst + 23))
  {
    if (v4)
    {
      v15 = *__src;
      __dst[8] = *((_BYTE *)__src + 8);
      *(_QWORD *)__dst = v15;
      v16 = __src[2];
      __dst[24] = *((_BYTE *)__src + 24);
      *((_QWORD *)__dst + 2) = v16;
      __dst[25] = *((_BYTE *)__src + 25);
      v17 = __src[4];
      __dst[40] = *((_BYTE *)__src + 40);
      *((_QWORD *)__dst + 4) = v17;
      v18 = __src[6];
      __dst[56] = *((_BYTE *)__src + 56);
      *((_QWORD *)__dst + 6) = v18;
      v19 = __src[8];
      __dst[72] = *((_BYTE *)__src + 72);
      *((_QWORD *)__dst + 8) = v19;
      v20 = __src[10];
      __dst[88] = *((_BYTE *)__src + 88);
      *((_QWORD *)__dst + 10) = v20;
      v21 = __src[12];
      __dst[104] = *((_BYTE *)__src + 104);
      *((_QWORD *)__dst + 12) = v21;
      v22 = __src[14];
      __dst[120] = *((_BYTE *)__src + 120);
      *((_QWORD *)__dst + 14) = v22;
      __dst[121] = *((_BYTE *)__src + 121);
      *((_QWORD *)__dst + 16) = __src[16];
      *((_QWORD *)__dst + 17) = __src[17];
      v23 = __src[18];
      __dst[152] = *((_BYTE *)__src + 152);
      *((_QWORD *)__dst + 18) = v23;
      v24 = __src[20];
      __dst[168] = *((_BYTE *)__src + 168);
      *((_QWORD *)__dst + 20) = v24;
      __dst[169] = *((_BYTE *)__src + 169);
      *((_QWORD *)__dst + 22) = __src[22];
      *((_QWORD *)__dst + 23) = __src[23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    memcpy(__dst, __src, 0xC0uLL);
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_1AE7FBF18((uint64_t)__dst);
    goto LABEL_7;
  }
  v5 = *__src;
  __dst[8] = *((_BYTE *)__src + 8);
  *(_QWORD *)__dst = v5;
  v6 = __src[2];
  __dst[24] = *((_BYTE *)__src + 24);
  *((_QWORD *)__dst + 2) = v6;
  __dst[25] = *((_BYTE *)__src + 25);
  v7 = __src[4];
  __dst[40] = *((_BYTE *)__src + 40);
  *((_QWORD *)__dst + 4) = v7;
  v8 = __src[6];
  __dst[56] = *((_BYTE *)__src + 56);
  *((_QWORD *)__dst + 6) = v8;
  v9 = __src[8];
  __dst[72] = *((_BYTE *)__src + 72);
  *((_QWORD *)__dst + 8) = v9;
  v10 = __src[10];
  __dst[88] = *((_BYTE *)__src + 88);
  *((_QWORD *)__dst + 10) = v10;
  v11 = __src[12];
  __dst[104] = *((_BYTE *)__src + 104);
  *((_QWORD *)__dst + 12) = v11;
  v12 = __src[14];
  __dst[120] = *((_BYTE *)__src + 120);
  *((_QWORD *)__dst + 14) = v12;
  __dst[121] = *((_BYTE *)__src + 121);
  *((_QWORD *)__dst + 16) = __src[16];
  *((_QWORD *)__dst + 17) = __src[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = __src[18];
  __dst[152] = *((_BYTE *)__src + 152);
  *((_QWORD *)__dst + 18) = v13;
  v14 = __src[20];
  __dst[168] = *((_BYTE *)__src + 168);
  *((_QWORD *)__dst + 20) = v14;
  __dst[169] = *((_BYTE *)__src + 169);
  *((_QWORD *)__dst + 22) = __src[22];
  *((_QWORD *)__dst + 23) = __src[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *((_QWORD *)__dst + 24) = __src[24];
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 25) = __src[25];
  swift_retain();
  swift_release();
  *((_QWORD *)__dst + 26) = __src[26];
  *((_QWORD *)__dst + 27) = __src[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return __dst;
}

uint64_t sub_1AE7FBF18(uint64_t a1)
{
  destroy for KTSDataRequest();
  return a1;
}

void *initializeWithTake for KTSSliceData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xE0uLL);
}

_QWORD *assignWithTake for KTSSliceData(_QWORD *__dst, _QWORD *__src)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!__dst[23])
    goto LABEL_5;
  v4 = __src[23];
  if (!v4)
  {
    sub_1AE7FBF18((uint64_t)__dst);
LABEL_5:
    memcpy(__dst, __src, 0xC0uLL);
    goto LABEL_6;
  }
  *__dst = *__src;
  *((_BYTE *)__dst + 8) = *((_BYTE *)__src + 8);
  __dst[2] = __src[2];
  *((_WORD *)__dst + 12) = *((_WORD *)__src + 12);
  __dst[4] = __src[4];
  *((_BYTE *)__dst + 40) = *((_BYTE *)__src + 40);
  __dst[6] = __src[6];
  *((_BYTE *)__dst + 56) = *((_BYTE *)__src + 56);
  v5 = __src[8];
  *((_BYTE *)__dst + 72) = *((_BYTE *)__src + 72);
  __dst[8] = v5;
  __dst[10] = __src[10];
  *((_BYTE *)__dst + 88) = *((_BYTE *)__src + 88);
  __dst[12] = __src[12];
  *((_BYTE *)__dst + 104) = *((_BYTE *)__src + 104);
  __dst[14] = __src[14];
  *((_WORD *)__dst + 60) = *((_WORD *)__src + 60);
  v6 = __src[17];
  __dst[16] = __src[16];
  __dst[17] = v6;
  swift_bridgeObjectRelease();
  __dst[18] = __src[18];
  *((_BYTE *)__dst + 152) = *((_BYTE *)__src + 152);
  __dst[20] = __src[20];
  *((_WORD *)__dst + 84) = *((_WORD *)__src + 84);
  __dst[22] = __src[22];
  __dst[23] = v4;
  swift_bridgeObjectRelease();
LABEL_6:
  __dst[24] = __src[24];
  swift_release();
  __dst[25] = __src[25];
  swift_release();
  v7 = __src[27];
  __dst[26] = __src[26];
  __dst[27] = v7;
  swift_bridgeObjectRelease();
  return __dst;
}

uint64_t getEnumTagSinglePayload for KTSSliceData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 224))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 192);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KTSSliceData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 224) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 192) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 224) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for KTSSliceData()
{
  sub_1AE4F67D4();
}

uint64_t destroy for KTSDataRequest()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for KTSDataRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v3 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v3;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  v4 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v4;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  v5 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for KTSDataRequest(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
  v6 = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = a2[6];
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = a2[8];
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = a2[10];
  *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = a2[12];
  *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
  *(_QWORD *)(a1 + 96) = v10;
  v11 = a2[14];
  *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
  *(_QWORD *)(a1 + 112) = v11;
  *(_BYTE *)(a1 + 121) = *((_BYTE *)a2 + 121);
  *(_QWORD *)(a1 + 128) = a2[16];
  *(_QWORD *)(a1 + 136) = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a2[18];
  *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
  *(_QWORD *)(a1 + 144) = v12;
  v13 = a2[20];
  *(_BYTE *)(a1 + 168) = *((_BYTE *)a2 + 168);
  *(_QWORD *)(a1 + 160) = v13;
  *(_BYTE *)(a1 + 169) = *((_BYTE *)a2 + 169);
  *(_QWORD *)(a1 + 176) = a2[22];
  *(_QWORD *)(a1 + 184) = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for KTSDataRequest(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC0uLL);
}

uint64_t assignWithTake for KTSDataRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v4 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  v5 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  v6 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KTSDataRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 192))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 184);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KTSDataRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 184) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 192) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for KTSDataRequest()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for KTSDataRequest.Cadence(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE7FC574 + 4 * byte_1AE95C935[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE7FC5A8 + 4 * byte_1AE95C930[v4]))();
}

uint64_t sub_1AE7FC5A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7FC5B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE7FC5B8);
  return result;
}

uint64_t sub_1AE7FC5C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE7FC5CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE7FC5D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7FC5D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for KTSDataRequest.Cadence()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE7FC608@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;

  return EntityIdentifier.init(_:)(v2, v1, a1);
}

void sub_1AE7FC614(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  sub_1AE77235C((uint64_t)&a9, (uint64_t)&a33, a3);
}

void static KTSRecordType.combine(ktsRecords:intoRowWithId:withType:graphContext:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  sub_1AE4F67EC();
  v7 = *(_QWORD *)(v1 + 16);
  if (!v7)
  {
    *(_QWORD *)(v6 + 32) = 0;
    *(_OWORD *)v6 = 0u;
    *(_OWORD *)(v6 + 16) = 0u;
    goto LABEL_14;
  }
  v46 = v5;
  v41 = v2;
  v42 = v3;
  v43 = (uint64_t *)v6;
  v44 = *v4;
  v8 = v1 + 32;
  swift_bridgeObjectRetain();
  v9 = MEMORY[0x1E0DEE9D8];
  v10 = v8;
  v45 = v7;
  do
  {
    sub_1AE52419C(v10, (uint64_t)&v49);
    v11 = *((_QWORD *)&v50 + 1);
    v12 = v51;
    sub_1AE4F9858(&v49, *((uint64_t *)&v50 + 1));
    v13 = *(void (**)(uint64_t, uint64_t))(v12 + 56);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_1AE52F6A8((uint64_t *)&v56);
    v13(v11, v12);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v49);
    if (AssociatedTypeWitness)
    {
      sub_1AE50AF58(&v56, (uint64_t)&v47);
      sub_1AE50AF58(&v47, (uint64_t)&v56);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE800BBC();
        v9 = v15;
      }
      v14 = *(_QWORD *)(v9 + 16);
      if (v14 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1AE800BBC();
        v9 = v16;
      }
      *(_QWORD *)(v9 + 16) = v14 + 1;
      sub_1AE50AF58(&v56, v9 + 40 * v14 + 32);
    }
    else
    {
      sub_1AE7FCB6C((uint64_t)&v56);
    }
    v10 += 40;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  sub_1AE800B80();
  v17 = sub_1AE7B77B4(v9, v46);
  if (v0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v18 = v17;
  swift_bridgeObjectRelease();
  if (v18)
  {
    *(_QWORD *)&v47 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    v19 = v45;
    do
    {
      sub_1AE52419C(v8, (uint64_t)&v49);
      v20 = *((_QWORD *)&v50 + 1);
      v21 = v51;
      sub_1AE800BA8(&v49);
      (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v20, v21);
      v22 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v49);
      MEMORY[0x1AF4533D0](v22);
      if (*(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1AE926220();
      sub_1AE92625C();
      sub_1AE9261FC();
      v8 += 40;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    type metadata accessor for KTSDataRepresentation(0);
    v23 = sub_1AE7C67C8(v47);
    swift_bridgeObjectRelease();
    if (v23)
    {
      if (v44)
      {
        if (v44 == 1)
        {
          v51 = 0;
          v49 = 0u;
          v50 = 0u;
          swift_bridgeObjectRetain();
          sub_1AE735C14();
          sub_1AE509AC4();
          KTSData.init(identifier:data:context:metadata:)();
          v24 = *((_QWORD *)&v47 + 1);
          if (*((_QWORD *)&v47 + 1))
          {
            v25 = v48;
            v26 = v47;
            v43[4] = sub_1AE800C1C((uint64_t)&type metadata for KTSData);
            sub_1AE4F6A6C();
            sub_1AE4F77C8();
            *v43 = v26;
            v43[1] = v24;
            v43[2] = v25;
          }
          else
          {
            sub_1AE4F6A6C();
            sub_1AE4F77C8();
            v43[4] = 0;
            *(_OWORD *)v43 = 0u;
            *((_OWORD *)v43 + 1) = 0u;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_1AE735C14();
          sub_1AE509AC4();
          sub_1AE7EA378(&v47);
          sub_1AE7FF924((uint64_t)&v47, (uint64_t)&v49);
          v52 = v23;
          v53 = v18;
          v54 = v41;
          v55 = v42;
          v43[3] = (uint64_t)&type metadata for KTSSliceData;
          v43[4] = sub_1AE7EA09C();
          v39 = sub_1AE4F66BC();
          v40 = (void *)(v39 + 16);
          *v43 = v39;
          sub_1AE4F6A6C();
          sub_1AE4F77C8();
          sub_1AE7EB1A4(v40, &v49);
        }
      }
      else
      {
        if (qword_1EED99830 != -1)
          swift_once();
        v33 = sub_1AE4F6854();
        v34 = (void *)sub_1AE4F77E8(v33, (uint64_t)qword_1EED9F800);
        v35 = sub_1AE9265EC();
        if (sub_1AE507DAC(v35))
        {
          *(_WORD *)sub_1AE4F69B0() = 0;
          sub_1AE505D60(&dword_1AE4F2000, v36, v37, "KTSRecord: Can't combine into type ktsSegmentRecordType. Please pick one of ktsSliceRecordType or ktsRecordType");
          sub_1AE4F9064();
        }

        sub_1AE7D2544();
        sub_1AE4F6778();
        sub_1AE50A6EC(v38, 0xD00000000000006FLL);
        sub_1AE4F77C8();
        sub_1AE4F6A6C();
      }
      goto LABEL_14;
    }
    sub_1AE4F77C8();
  }
  if (qword_1EED99830 != -1)
    swift_once();
  v27 = sub_1AE4F6854();
  v28 = (void *)sub_1AE4F77E8(v27, (uint64_t)qword_1EED9F800);
  v29 = sub_1AE9265EC();
  if (sub_1AE507DAC(v29))
  {
    *(_WORD *)sub_1AE4F69B0() = 0;
    sub_1AE505D60(&dword_1AE4F2000, v30, v31, "KTSDataProtocol: Missing result for context or data.");
    sub_1AE4F9064();
  }

  sub_1AE7D2544();
  sub_1AE4F6778();
  sub_1AE50A6EC(v32, 0xD00000000000002ELL);
LABEL_14:
  sub_1AE4F667C();
}

uint64_t sub_1AE7FCB6C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1EEDA3680);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AE7FCBAC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  unsigned __int8 *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  ValueMetadata *v51;
  _UNKNOWN **v52;
  _OWORD v53[5];
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[6];

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  v6 = *v5;
  v7 = v1[3];
  v8 = v1[4];
  sub_1AE800BA8(v1);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v8 + 72))(v53, v7, v8);
  v9 = EntityIdentifier.stringValue.getter();
  v11 = v10;
  v12 = v2[3];
  v13 = v2[4];
  sub_1AE800BA8(v2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v13 + 88))(v62, v12, v13);
  if (!v0)
  {
    v14 = v2[3];
    v15 = v2[4];
    v16 = sub_1AE4F9858(v2, v14);
    (*(void (**)(uint64_t, uint64_t))(v15 + 80))(v14, v15);
    if (v6)
    {
      if (v6 == 1)
      {
        sub_1AE52419C((uint64_t)v62, (uint64_t)v53);
        sub_1AE501548(&qword_1EED9A828);
        sub_1AE800A6C();
        if ((sub_1AE800A18() & 1) != 0)
        {
          v16 = v48;
          sub_1AE7CDDBC();
          if (sub_1AE800BEC())
          {
            memset(v53, 0, 40);
            sub_1AE4F943C();
            sub_1AE4F66E0();
            sub_1AE505390();
            KTSData.init(identifier:data:context:metadata:)();
            v17 = v49;
            if (v49)
            {
              v18 = v50;
              v19 = (uint64_t)v48;
              v4[4] = sub_1AE800C1C((uint64_t)&type metadata for KTSData);
              sub_1AE4FB730();
              sub_1AE4FC564();
              *v4 = v19;
              v4[1] = v17;
              v4[2] = v18;
LABEL_37:
              sub_1AE506340();
              goto LABEL_4;
            }
            sub_1AE506340();
            sub_1AE4FB730();
            goto LABEL_40;
          }
          sub_1AE4FC564();
        }
        sub_1AE4F67AC();
        if (qword_1EED99830 != -1)
          swift_once();
        v39 = sub_1AE4F6854();
        sub_1AE4F77E8(v39, (uint64_t)qword_1EED9F800);
        v40 = sub_1AE4FCF04();
        if (sub_1AE6147E0(v40))
        {
          *(_WORD *)sub_1AE4F69B0() = 0;
          sub_1AE4FBE84(&dword_1AE4F2000, v41, v42, "KTSRecord: Wrong result for KTSData.Context or KTSData.Data.");
          sub_1AE4F9064();
        }

        sub_1AE7D2544();
        sub_1AE4F6778();
        sub_1AE800B10();
      }
      else
      {
        sub_1AE52419C((uint64_t)v62, (uint64_t)v53);
        sub_1AE501548(&qword_1EED9A828);
        sub_1AE800A6C();
        if ((sub_1AE800A18() & 1) != 0)
        {
          v16 = v48;
          sub_1AE7CDDBC();
          v28 = sub_1AE800BEC();
          if (v28)
          {
            v29 = v28;
            sub_1AE4F943C();
            sub_1AE4F66E0();
            sub_1AE7EA378(&v48);
            sub_1AE7FF924((uint64_t)&v48, (uint64_t)v53);
            v58 = v29;
            v59 = v16;
            v60 = v9;
            v61 = v11;
            v4[3] = (uint64_t)&type metadata for KTSSliceData;
            v4[4] = sub_1AE7EA09C();
            v30 = sub_1AE4F66BC();
            v31 = (void *)(v30 + 16);
            *v4 = v30;
            sub_1AE4FB730();
            sub_1AE4FC564();
            sub_1AE7EB1A4(v31, v53);
            goto LABEL_37;
          }
          sub_1AE4FC564();
        }
        sub_1AE4F67AC();
        if (qword_1EED99830 != -1)
          swift_once();
        v43 = sub_1AE4F6854();
        sub_1AE4F77E8(v43, (uint64_t)qword_1EED9F800);
        v44 = sub_1AE4FCF04();
        if (sub_1AE6147E0(v44))
        {
          *(_WORD *)sub_1AE4F69B0() = 0;
          sub_1AE4FBE84(&dword_1AE4F2000, v45, v46, "KTSRecord: Wrong result for TriKTSSliceDatapData.Context or KTSSliceData.Data.");
          sub_1AE4F9064();
        }

        sub_1AE7D2544();
        sub_1AE4F6778();
        sub_1AE800B10();
        v38 = v47 + 26;
      }
    }
    else
    {
      sub_1AE52419C((uint64_t)v2, (uint64_t)&v48);
      sub_1AE501548((uint64_t *)&unk_1EEDA37A0);
      if (swift_dynamicCast())
      {
        v21 = (void *)*((_QWORD *)&v53[0] + 1);
        v20 = *(_QWORD *)&v53[1];
        v22 = v56;
        v23 = v57;
        sub_1AE50BDB4(v54, v55);
        sub_1AE50BDB4(v22, v23);
        sub_1AE52419C((uint64_t)v62, (uint64_t)v53);
        v16 = (void *)sub_1AE501548(&qword_1EED9A828);
        sub_1AE800B80();
        if ((sub_1AE800A18() & 1) != 0)
        {
          v51 = &type metadata for KTSSegmentData.Metadata;
          v52 = &protocol witness table for KTSSegmentData.Metadata;
          v48 = v21;
          v49 = v20;
          sub_1AE4F943C();
          sub_1AE4F66E0();
          sub_1AE505390();
          KTSSegmentData.init(identifier:data:context:metadata:)();
          v24 = *((_QWORD *)&v53[0] + 1);
          if (*((_QWORD *)&v53[0] + 1))
          {
            v25 = *(_QWORD *)&v53[1];
            v26 = *(_QWORD *)&v53[0];
            v4[3] = (uint64_t)&type metadata for KTSSegmentData;
            v4[4] = sub_1AE7EA160();
            v27 = sub_1AE4F66BC();
            *v4 = v27;
            sub_1AE4FB730();
            sub_1AE4FC564();
            *(_QWORD *)(v27 + 16) = v26;
            *(_QWORD *)(v27 + 24) = v24;
            *(_QWORD *)(v27 + 32) = v25;
            *(_OWORD *)(v27 + 40) = *(_OWORD *)((char *)&v53[1] + 8);
            goto LABEL_37;
          }
          sub_1AE506340();
          sub_1AE4FC564();
LABEL_40:
          swift_release();
          v4[4] = 0;
          *(_OWORD *)v4 = 0u;
          *((_OWORD *)v4 + 1) = 0u;
          goto LABEL_4;
        }
        sub_1AE4F6728();
      }
      sub_1AE4F67AC();
      if (qword_1EED99830 != -1)
        swift_once();
      v32 = sub_1AE4F6854();
      sub_1AE4F77E8(v32, (uint64_t)qword_1EED9F800);
      v33 = sub_1AE4FCF04();
      if (sub_1AE6147E0(v33))
      {
        *(_WORD *)sub_1AE4F69B0() = 0;
        sub_1AE4FBE84(&dword_1AE4F2000, v34, v35, "KTSRecord: Wrong result for KTSSegment.Context.");
        sub_1AE4F9064();
      }

      sub_1AE7D2544();
      sub_1AE4F6778();
      sub_1AE800B10();
      v38 = v37 | 3;
    }
    sub_1AE50A6EC(v36, v38);
    sub_1AE4FB730();
    goto LABEL_37;
  }
  sub_1AE4F67AC();
LABEL_4:
  sub_1AE4F667C();
}

void KTSRecordProtocol.toData()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  ValueMetadata *v58;
  _UNKNOWN **v59;
  _QWORD v60[36];

  sub_1AE4F67EC();
  a22 = v25;
  a23 = v26;
  v28 = v27;
  v30 = v29;
  v31 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  sub_1AE4F666C();
  v34 = v33 - v32;
  (*(void (**)(char *__return_ptr))(v35 + 64))(&a13);
  if (a13)
  {
    if (a13 != 1)
    {
      sub_1AE800A00();
      if (v24)
        goto LABEL_23;
      sub_1AE7CDDBC();
      v39 = sub_1AE800BF8();
      if (v39)
      {
        v40 = v39;
        sub_1AE509BAC();
        sub_1AE501548(&qword_1EED9A828);
        sub_1AE800A6C();
        if ((sub_1AE800A18() & 1) != 0)
        {
          v54 = v60[29];
          sub_1AE506434();
          v41 = EntityIdentifier.stringValue.getter();
          v43 = v42;
          sub_1AE5069F0();
          swift_retain();
          sub_1AE7EA378(&v55);
          sub_1AE7FF924((uint64_t)&v55, (uint64_t)v60);
          v60[24] = v40;
          v60[25] = v54;
          v60[26] = v41;
          v60[27] = v43;
          v30[3] = (uint64_t)&type metadata for KTSSliceData;
          v30[4] = sub_1AE7EA09C();
          v44 = sub_1AE4F66BC();
          v45 = (void *)(v44 + 16);
          *v30 = v44;
          sub_1AE4FDCE8();
          swift_release();
          sub_1AE7EB1A4(v45, v60);
          goto LABEL_23;
        }
      }
      goto LABEL_15;
    }
    sub_1AE800A00();
    if (!v24)
    {
      sub_1AE7CDDBC();
      if (sub_1AE800BF8())
      {
        sub_1AE509BAC();
        sub_1AE501548(&qword_1EED9A828);
        sub_1AE800A6C();
        if ((sub_1AE800A18() & 1) != 0)
        {
          sub_1AE506434();
          EntityIdentifier.stringValue.getter();
          memset(v60, 0, 40);
          sub_1AE5069F0();
          sub_1AE735C14();
          KTSData.init(identifier:data:context:metadata:)();
          v36 = v56;
          if (v56)
          {
            v37 = v57;
            v38 = v55;
            v30[4] = sub_1AE800C1C((uint64_t)&type metadata for KTSData);
            sub_1AE4FDCE8();
            sub_1AE4F6A6C();
            *v30 = v38;
            v30[1] = v36;
            v30[2] = v37;
            goto LABEL_23;
          }
          sub_1AE4FDCE8();
        }
      }
LABEL_15:
      swift_release();
      sub_1AE7D2544();
      sub_1AE4F6778();
      *v46 = 0xD000000000000049;
      v46[1] = 0x80000001AE987190;
      sub_1AE4FBB3C((uint64_t)v46, 4);
    }
  }
  else
  {
    sub_1AE800A00();
    if (!v24)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v23, v28);
      if (swift_dynamicCast())
      {
        sub_1AE50BDB4(v60[10], v60[11]);
        sub_1AE50BDB4(v60[12], v60[13]);
        sub_1AE509BAC();
        sub_1AE501548(&qword_1EED9A828);
        sub_1AE800B80();
        if ((sub_1AE800A18() & 1) != 0)
        {
          sub_1AE506434();
          EntityIdentifier.stringValue.getter();
          v58 = &type metadata for KTSSegmentData.Metadata;
          v59 = &protocol witness table for KTSSegmentData.Metadata;
          v55 = v60[1];
          v56 = v60[2];
          sub_1AE5069F0();
          sub_1AE509AC4();
          KTSSegmentData.init(identifier:data:context:metadata:)();
          v47 = v60[1];
          if (v60[1])
          {
            v48 = v60[2];
            v49 = v60[0];
            v50 = sub_1AE7EA160();
            v53 = *(_OWORD *)&v60[3];
            v30[3] = (uint64_t)&type metadata for KTSSegmentData;
            v30[4] = v50;
            v51 = sub_1AE4F66BC();
            *v30 = v51;
            swift_release();
            sub_1AE4FDCE8();
            *(_QWORD *)(v51 + 16) = v49;
            *(_QWORD *)(v51 + 24) = v47;
            *(_QWORD *)(v51 + 32) = v48;
            *(_OWORD *)(v51 + 40) = v53;
            goto LABEL_23;
          }
          sub_1AE4FDCE8();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      sub_1AE7D2544();
      sub_1AE4F6778();
      *v52 = 0xD000000000000044;
      v52[1] = 0x80000001AE987140;
      sub_1AE4FBB3C((uint64_t)v52, 4);
      swift_release();
    }
  }
LABEL_23:
  sub_1AE4F667C();
}

IntelligencePlatform::KTSRecordType_optional __swiftcall KTSRecordType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  IntelligencePlatform::KTSRecordType_optional result;

  v2 = v1;
  v3 = sub_1AE926B44();
  swift_bridgeObjectRelease();
  v4 = 3;
  if (v3 < 3)
    v4 = v3;
  *v2 = v4;
  sub_1AE4F6624();
  return result;
}

unint64_t KTSRecordType.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000012;
  if (*v0 == 1)
    v1 = 0x726F63655273746BLL;
  if (*v0)
    return v1;
  else
    return 0xD000000000000014;
}

void sub_1AE7FD674(char *a1, char *a2)
{
  sub_1AE512678(*a1, *a2);
}

void sub_1AE7FD680()
{
  sub_1AE512B30();
}

uint64_t sub_1AE7FD688(uint64_t a1)
{
  char *v1;

  return sub_1AE5E940C(a1, *v1);
}

void sub_1AE7FD690()
{
  sub_1AE55003C();
}

uint64_t sub_1AE7FD698()
{
  sub_1AE800978();
  return sub_1AE926190();
}

uint64_t sub_1AE7FD6F4()
{
  sub_1AE800978();
  return sub_1AE926148();
}

IntelligencePlatform::KTSRecordType_optional sub_1AE7FD740(Swift::String *a1)
{
  return KTSRecordType.init(rawValue:)(*a1);
}

void sub_1AE7FD74C(unint64_t *a1@<X8>)
{
  unint64_t v2;

  *a1 = KTSRecordType.rawValue.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

uint64_t KTSSegmentRecord.startTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t KTSSegmentRecord.startTime.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*KTSSegmentRecord.startTime.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KTSSegmentRecord.endTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t KTSSegmentRecord.endTime.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*KTSSegmentRecord.endTime.modify())(_QWORD)
{
  return nullsub_1;
}

double KTSSegmentRecord.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void KTSSegmentRecord.score.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

uint64_t (*KTSSegmentRecord.score.modify())(_QWORD)
{
  return nullsub_1;
}

double KTSSegmentRecord.distance.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void KTSSegmentRecord.distance.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 48) = a1;
}

uint64_t (*KTSSegmentRecord.distance.modify())(_QWORD)
{
  return nullsub_1;
}

double KTSSegmentRecord.elevationGain.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

void KTSSegmentRecord.elevationGain.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 56) = a1;
}

uint64_t (*KTSSegmentRecord.elevationGain.modify())(_QWORD)
{
  return nullsub_1;
}

double KTSSegmentRecord.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

void KTSSegmentRecord.duration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 64) = a1;
}

uint64_t (*KTSSegmentRecord.duration.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KTSSegmentRecord.isCity.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t KTSSegmentRecord.isCity.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = result;
  return result;
}

uint64_t (*KTSSegmentRecord.isCity.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KTSSegmentRecord.isHighway.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t KTSSegmentRecord.isHighway.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 73) = result;
  return result;
}

uint64_t (*KTSSegmentRecord.isHighway.modify())(_QWORD)
{
  return nullsub_1;
}

void KTSSegmentRecord.ktsContext.getter()
{
  sub_1AE800A44();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void KTSSegmentRecord.ktsContext.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F83AC();
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = v0;
  sub_1AE4F6624();
}

uint64_t (*KTSSegmentRecord.ktsContext.modify())(_QWORD)
{
  return nullsub_1;
}

void KTSSegmentRecord.ktsData.getter()
{
  sub_1AE800A44();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void KTSSegmentRecord.ktsData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1AE50BDB4(*(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  sub_1AE4F6624();
}

uint64_t (*KTSSegmentRecord.ktsData.modify())(_QWORD)
{
  return nullsub_1;
}

void static KTSSegmentRecord.type.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void KTSSegmentRecord.ktsDataSummary.getter()
{
  MEMORY[0x1AF454348]();
  sub_1AE800B78();
  sub_1AE4FCE84();
  sub_1AE800B88();
  type metadata accessor for KTSDataRepresentation(0);
  sub_1AE585700(&qword_1EEDA3688, type metadata accessor for KTSDataRepresentation, (uint64_t)&protocol conformance descriptor for KTSDataRepresentation);
  sub_1AE800A24();
  swift_release();
  sub_1AE4FF1AC();
  sub_1AE4F68E0();
}

void KTSSegmentRecord.ktsContextSummary.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1AE4F67EC();
  v12 = v11;
  v11[3] = sub_1AE800B80();
  sub_1AE800BA0(&qword_1EEDA3650, v13, (uint64_t)&protocol conformance descriptor for KTSContextRepresentation);
  v12[4] = v14;
  MEMORY[0x1AF454348]();
  sub_1AE800B78();
  sub_1AE4FCE84();
  sub_1AE800B88();
  sub_1AE800BA0(&qword_1EEDA2DB0, v15, (uint64_t)&protocol conformance descriptor for KTSContextRepresentation);
  sub_1AE507FD8();
  swift_release();
  sub_1AE4FCB00();
  if (v10)
    sub_1AE7739BC((uint64_t)v12);
  else
    *v12 = a10;
  sub_1AE4F667C();
}

BOOL static KTSSegmentRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  int v16;
  BOOL v17;
  int v18;
  char v19;
  _BOOL8 result;
  BOOL v24;

  if (*(_QWORD *)a1 != *(_QWORD *)a2)
    return 0;
  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(double *)(a1 + 40);
  v5 = *(double *)(a1 + 48);
  v7 = *(double *)(a1 + 56);
  v6 = *(double *)(a1 + 64);
  v8 = *(unsigned __int8 *)(a1 + 72);
  v9 = *(unsigned __int8 *)(a1 + 73);
  v11 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v12 = *(double *)(a2 + 40);
  v13 = *(double *)(a2 + 48);
  v15 = *(double *)(a2 + 56);
  v14 = *(double *)(a2 + 64);
  v16 = *(unsigned __int8 *)(a2 + 72);
  v17 = *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
  v18 = *(unsigned __int8 *)(a2 + 73);
  if (v17)
  {
    result = 0;
  }
  else
  {
    v19 = sub_1AE926D60();
    result = 0;
    if ((v19 & 1) == 0)
      return result;
  }
  v24 = v2 == v11 && v3 == v10 && v5 == v13 && v7 == v15 && v6 == v14;
  if (v24 && ((v8 ^ v16) & 1) == 0 && ((v9 ^ v18) & 1) == 0)
    return v4 == v12;
  return result;
}

uint64_t sub_1AE7FDB78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  char v17;

  v2 = a1 == 0x656D67655373746BLL && a2 == 0xEC0000006449746ELL;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x656D6954646E65 && a2 == 0xE700000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x65636E6174736964 && a2 == 0xE800000000000000;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x6F69746176656C65 && a2 == 0xED00006E6961476ELL;
              if (v11 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
                if (v12 || (sub_1AE926D60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  v13 = a1 == 0x797469437369 && a2 == 0xE600000000000000;
                  if (v13 || (sub_1AE926D60() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    v14 = a1 == 0x6177686769487369 && a2 == 0xE900000000000079;
                    if (v14 || (sub_1AE926D60() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      v15 = a1 == 0x65746E6F4373746BLL && a2 == 0xEA00000000007478;
                      if (v15 || (sub_1AE926D60() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else if (a1 == 0x6174614473746BLL && a2 == 0xE700000000000000)
                      {
                        swift_bridgeObjectRelease();
                        return 11;
                      }
                      else
                      {
                        v17 = sub_1AE926D60();
                        swift_bridgeObjectRelease();
                        if ((v17 & 1) != 0)
                          return 11;
                        else
                          return 12;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE7FE068(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE7FE0A4 + 4 * byte_1AE95CC20[a1]))(0x656D67655373746BLL, 0xEC0000006449746ELL);
}

uint64_t sub_1AE7FE0A4()
{
  return 0x696669746E656469;
}

uint64_t sub_1AE7FE0C0()
{
  return 0x6D69547472617473;
}

uint64_t sub_1AE7FE0DC()
{
  return 0x656D6954646E65;
}

uint64_t sub_1AE7FE0F4()
{
  return 0x65726F6373;
}

uint64_t sub_1AE7FE108()
{
  return 0x65636E6174736964;
}

uint64_t sub_1AE7FE120()
{
  return 0x6F69746176656C65;
}

uint64_t sub_1AE7FE144()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1AE7FE15C()
{
  return 0x797469437369;
}

uint64_t sub_1AE7FE170()
{
  return 0x6177686769487369;
}

uint64_t sub_1AE7FE190()
{
  return 0x65746E6F4373746BLL;
}

uint64_t sub_1AE7FE1B0()
{
  return 0x6174614473746BLL;
}

uint64_t sub_1AE7FE1C8()
{
  unsigned __int8 *v0;

  return sub_1AE7FE068(*v0);
}

uint64_t sub_1AE7FE1D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE7FDB78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE7FE1F4()
{
  sub_1AE7FF9EC();
  return sub_1AE926F94();
}

uint64_t sub_1AE7FE21C()
{
  sub_1AE7FF9EC();
  return sub_1AE926FA0();
}

void KTSSegmentRecord.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE506A68();
  v3 = v2;
  v4 = sub_1AE501548(&qword_1EEDA3690);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE7FF9EC();
  sub_1AE926F4C();
  sub_1AE52A494();
  sub_1AE4FC9E0();
  if (!v0)
  {
    sub_1AE926C88();
    sub_1AE800B60();
    sub_1AE800B98();
    sub_1AE800C10(3);
    sub_1AE800B98();
    sub_1AE507C10();
    sub_1AE507C10();
    sub_1AE507C10();
    sub_1AE507C10();
    sub_1AE800B48();
    sub_1AE800B90();
    sub_1AE800C10(9);
    sub_1AE800B90();
    sub_1AE5900D8();
    sub_1AE4FC9E0();
    sub_1AE4FC9E0();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  sub_1AE4FCB08();
}

uint64_t KTSSegmentRecord.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v5 = sub_1AE501548(&qword_1EEDA36A0);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE7FF9EC();
  sub_1AE926F34();
  if (v2)
    return sub_1AE4F90EC();
  sub_1AE52A458();
  sub_1AE800ABC();
  sub_1AE800AE8();
  v6 = v24;
  v22 = sub_1AE926BB0();
  v9 = v8;
  swift_bridgeObjectRetain();
  v23 = v9;
  v21 = sub_1AE4F7A20();
  LOBYTE(v24) = 3;
  v10 = sub_1AE4F7A20();
  sub_1AE5039C4(4);
  v12 = v11;
  sub_1AE5039C4(5);
  v14 = v13;
  sub_1AE5039C4(6);
  v16 = v15;
  sub_1AE5039C4(7);
  v20 = v17;
  v19 = sub_1AE800AA4(8);
  v18 = sub_1AE800AA4(9);
  sub_1AE590114();
  sub_1AE800ABC();
  sub_1AE800AE8();
  sub_1AE800C30();
  sub_1AE800ABC();
  sub_1AE800AE8();
  sub_1AE4F68A4();
  swift_bridgeObjectRetain();
  sub_1AE800C30();
  sub_1AE800BB0();
  sub_1AE800B04();
  sub_1AE4F6728();
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v22;
  *(_QWORD *)(a2 + 16) = v23;
  *(_QWORD *)(a2 + 24) = v21;
  *(_QWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v12;
  *(_QWORD *)(a2 + 48) = v14;
  *(_QWORD *)(a2 + 56) = v16;
  *(_QWORD *)(a2 + 64) = v20;
  *(_BYTE *)(a2 + 72) = v19 & 1;
  *(_BYTE *)(a2 + 73) = v18 & 1;
  *(_QWORD *)(a2 + 80) = v24;
  *(_QWORD *)(a2 + 88) = v25;
  *(_QWORD *)(a2 + 96) = v24;
  *(_QWORD *)(a2 + 104) = v25;
  sub_1AE4F90EC();
  sub_1AE4F6728();
  sub_1AE800B04();
  return sub_1AE50BDB4(v24, v25);
}

void sub_1AE7FE854()
{
  KTSSegmentRecord.ktsDataSummary.getter();
}

void sub_1AE7FE868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  KTSSegmentRecord.ktsContextSummary.getter(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

uint64_t sub_1AE7FE8A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return KTSSegmentRecord.init(from:)(a1, a2);
}

void sub_1AE7FE8B8()
{
  KTSSegmentRecord.encode(to:)();
}

uint64_t sub_1AE7FE8CC()
{
  sub_1AE7FFB60();
  return sub_1AE924DA4();
}

uint64_t (*KTSSummaryRecord.startTime.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*KTSSummaryRecord.endTime.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*KTSSummaryRecord.distance.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*KTSSummaryRecord.elevationGain.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*KTSSummaryRecord.duration.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*KTSSummaryRecord.isCity.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*KTSSummaryRecord.isHighway.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*KTSSummaryRecord.score.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*KTSSummaryRecord.ktsContext.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*KTSSummaryRecord.ktsData.modify())(_QWORD)
{
  return nullsub_1;
}

void static KTSSummaryRecord.type.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static KTSSummaryRecord.sourceIdColumn.getter()
{
  sub_1AE4F67D4();
}

uint64_t static KTSSummaryRecord.subjectIdColumn.getter()
{
  return 0x644973746BLL;
}

void KTSSummaryRecord.ktsDataSummary.getter()
{
  sub_1AE7FEF48();
}

void KTSSummaryRecord.ktsContextSummary.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_1AE7FEFF0(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void KTSSummaryRecord.encode(to:)()
{
  sub_1AE7FF154();
}

uint64_t sub_1AE7FEA4C()
{
  return sub_1AE7FF3A8();
}

uint64_t sub_1AE7FEA68(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE7FEA98 + 4 * byte_1AE95CC2C[a1]))(0x644973746BLL, 0xE500000000000000);
}

uint64_t sub_1AE7FEAB8()
{
  return sub_1AE800B20();
}

uint64_t sub_1AE7FEAC8()
{
  return sub_1AE505870();
}

uint64_t sub_1AE7FEAD8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE7FEB08 + 4 * byte_1AE95CC37[a1]))(0x644973746BLL, 0xE500000000000000);
}

uint64_t sub_1AE7FEB28()
{
  return sub_1AE800B20();
}

uint64_t sub_1AE7FEB38()
{
  return sub_1AE505870();
}

uint64_t sub_1AE7FEB48()
{
  return 0x644973746BLL;
}

void sub_1AE7FEB64()
{
  KTSSliceRecord.ktsDataSummary.getter();
}

void sub_1AE7FEB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  KTSSliceRecord.ktsContextSummary.getter(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1AE7FEBB4()
{
  KTSSummaryRecord.encode(to:)();
}

void sub_1AE7FEBCC()
{
  sub_1AE511D1C();
}

void sub_1AE7FEBD8()
{
  unsigned __int8 *v0;

  sub_1AE512BF8(*v0);
}

void sub_1AE7FEBE0()
{
  sub_1AE5E8F2C();
}

void sub_1AE7FEBE8(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FE44(a1, *v1);
}

uint64_t sub_1AE7FEBF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE7FF3A8();
  *a1 = result;
  return result;
}

void sub_1AE7FEC24(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_1AE7FEA68(*v1);
  a1[1] = v3;
  sub_1AE4F6664();
}

uint64_t sub_1AE7FEC48()
{
  unsigned __int8 *v0;

  return sub_1AE7FEAD8(*v0);
}

uint64_t sub_1AE7FEC50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE7FEA4C();
  *a1 = result;
  return result;
}

void sub_1AE7FEC74(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1AE7FEC80()
{
  sub_1AE7FFA28();
  return sub_1AE926F94();
}

uint64_t sub_1AE7FECA8()
{
  sub_1AE7FFA28();
  return sub_1AE926FA0();
}

void KTSSummaryRecord.init(from:)()
{
  sub_1AE7FF604();
}

uint64_t sub_1AE7FECFC()
{
  sub_1AE7FFCF4();
  return sub_1AE924DA4();
}

void sub_1AE7FED4C()
{
  KTSSummaryRecord.init(from:)();
}

uint64_t KTSSliceRecord.startTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t KTSSliceRecord.startTime.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*KTSSliceRecord.startTime.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KTSSliceRecord.endTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t KTSSliceRecord.endTime.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*KTSSliceRecord.endTime.modify())(_QWORD)
{
  return nullsub_1;
}

double KTSSliceRecord.distance.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void KTSSliceRecord.distance.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*KTSSliceRecord.distance.modify())(_QWORD)
{
  return nullsub_1;
}

double KTSSliceRecord.elevationGain.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void KTSSliceRecord.elevationGain.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*KTSSliceRecord.elevationGain.modify())(_QWORD)
{
  return nullsub_1;
}

double KTSSliceRecord.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void KTSSliceRecord.duration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

uint64_t (*KTSSliceRecord.duration.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KTSSliceRecord.isCity.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t KTSSliceRecord.isCity.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*KTSSliceRecord.isCity.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t KTSSliceRecord.isHighway.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t KTSSliceRecord.isHighway.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 49) = result;
  return result;
}

uint64_t (*KTSSliceRecord.isHighway.modify())(_QWORD)
{
  return nullsub_1;
}

double KTSSliceRecord.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

void KTSSliceRecord.score.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 56) = a1;
}

uint64_t (*KTSSliceRecord.score.modify())(_QWORD)
{
  return nullsub_1;
}

void KTSSliceRecord.ktsContext.getter()
{
  sub_1AE800A44();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void _s20IntelligencePlatform16KTSSummaryRecordV10ktsContext10Foundation4DataVvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1AE50BDB4(*(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  sub_1AE4F6624();
}

uint64_t (*KTSSliceRecord.ktsContext.modify())(_QWORD)
{
  return nullsub_1;
}

void KTSSliceRecord.ktsData.getter()
{
  sub_1AE800A44();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void _s20IntelligencePlatform16KTSSummaryRecordV7ktsData10Foundation0F0Vvs_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F83AC();
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = v0;
  sub_1AE4F6624();
}

uint64_t (*KTSSliceRecord.ktsData.modify())(_QWORD)
{
  return nullsub_1;
}

void static KTSSliceRecord.type.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void static KTSSliceRecord.sourceIdColumn.getter()
{
  sub_1AE4F67D4();
}

void static KTSSliceRecord.subjectIdColumn.getter()
{
  sub_1AE4F67D4();
}

void KTSSliceRecord.ktsDataSummary.getter()
{
  sub_1AE7FEF48();
}

void sub_1AE7FEF48()
{
  MEMORY[0x1AF454348]();
  sub_1AE800B78();
  sub_1AE4FCE84();
  sub_1AE800B88();
  sub_1AE7CDDBC();
  sub_1AE585700(&qword_1EEDA36A8, type metadata accessor for KTSDataAggregateRepresentation, (uint64_t)&protocol conformance descriptor for KTSDataRepresentation);
  sub_1AE800A24();
  swift_release();
  sub_1AE4FF1AC();
  sub_1AE4F68E0();
}

void KTSSliceRecord.ktsContextSummary.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_1AE7FEFF0(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1AE7FEFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1AE4F67EC();
  v12 = v11;
  v11[3] = type metadata accessor for KTSContextAggregateRepresentation();
  sub_1AE800BA0(&qword_1EEDA3658, v13, (uint64_t)&protocol conformance descriptor for KTSContextAggregateRepresentation);
  v12[4] = v14;
  MEMORY[0x1AF454348]();
  sub_1AE800B78();
  sub_1AE4FCE84();
  sub_1AE800B88();
  sub_1AE800BA0(&qword_1EEDA2DC0, v15, (uint64_t)&protocol conformance descriptor for KTSContextAggregateRepresentation);
  sub_1AE507FD8();
  swift_release();
  sub_1AE4FCB00();
  if (v10)
    sub_1AE7739BC((uint64_t)v12);
  else
    *v12 = a10;
  sub_1AE4F667C();
}

BOOL _s20IntelligencePlatform16KTSSummaryRecordV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  BOOL v8;

  result = 0;
  v8 = *(_QWORD *)a1 == *(_QWORD *)a2
    && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)
    && *(double *)(a1 + 24) == *(double *)(a2 + 24)
    && *(double *)(a1 + 32) == *(double *)(a2 + 32)
    && *(double *)(a1 + 40) == *(double *)(a2 + 40);
  if (v8
    && ((*(unsigned __int8 *)(a1 + 48) ^ *(unsigned __int8 *)(a2 + 48)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 49) ^ *(unsigned __int8 *)(a2 + 49)) & 1) == 0)
  {
    return *(double *)(a1 + 56) == *(double *)(a2 + 56);
  }
  return result;
}

void KTSSliceRecord.encode(to:)()
{
  sub_1AE7FF154();
}

void sub_1AE7FF154()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);

  sub_1AE506A68();
  v8 = v2;
  v4 = v3;
  v6 = sub_1AE501548(v5);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F683C();
  sub_1AE4F9858(v4, v4[3]);
  v8();
  sub_1AE926F4C();
  sub_1AE52A494();
  sub_1AE926CC4();
  if (!v0)
  {
    sub_1AE800C10(1);
    sub_1AE800B98();
    sub_1AE800B60();
    sub_1AE800B98();
    sub_1AE4FD144();
    sub_1AE4FD144();
    sub_1AE4FD144();
    sub_1AE4FD144();
    sub_1AE800C10(7);
    sub_1AE800B90();
    sub_1AE800B48();
    sub_1AE800B90();
    sub_1AE5900D8();
    sub_1AE800A50();
    sub_1AE800A50();
  }
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
  sub_1AE4FCB08();
}

uint64_t sub_1AE7FF3A8()
{
  unint64_t v0;

  v0 = sub_1AE926B44();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

uint64_t sub_1AE7FF3EC()
{
  return sub_1AE7FF3A8();
}

uint64_t sub_1AE7FF408()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1AE800BC8();
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE7FF42C + 4 * byte_1AE95CC42[v1]))(v0);
}

uint64_t sub_1AE7FF43C()
{
  return sub_1AE509D34();
}

uint64_t sub_1AE7FF450()
{
  return sub_1AE800B20();
}

uint64_t sub_1AE7FF460()
{
  return sub_1AE505870();
}

uint64_t sub_1AE7FF468()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1AE800BC8();
  return ((uint64_t (*)(uint64_t))((char *)sub_1AE7FF48C + 4 * byte_1AE95CC4D[v1]))(v0);
}

uint64_t sub_1AE7FF49C()
{
  return sub_1AE509D34();
}

uint64_t sub_1AE7FF4B0()
{
  return sub_1AE800B20();
}

uint64_t sub_1AE7FF4C0()
{
  return sub_1AE505870();
}

void sub_1AE7FF4CC()
{
  KTSSliceRecord.encode(to:)();
}

void sub_1AE7FF4E0(char *a1)
{
  sub_1AE51236C(*a1);
}

void sub_1AE7FF4EC()
{
  unsigned __int8 *v0;

  sub_1AE512B6C(*v0);
}

void sub_1AE7FF4F4(uint64_t a1)
{
  char *v1;

  sub_1AE5E92A4(a1, *v1);
}

void sub_1AE7FF4FC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FF4C(a1, *v1);
}

uint64_t sub_1AE7FF504@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE7FF3A8();
  *a1 = result;
  return result;
}

void sub_1AE7FF538(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1AE7FF408();
  a1[1] = v2;
  sub_1AE4F6664();
}

uint64_t sub_1AE7FF55C()
{
  return sub_1AE7FF468();
}

uint64_t sub_1AE7FF564@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE7FF3EC();
  *a1 = result;
  return result;
}

uint64_t sub_1AE7FF588()
{
  sub_1AE7FFA64();
  return sub_1AE926F94();
}

uint64_t sub_1AE7FF5B0()
{
  sub_1AE7FFA64();
  return sub_1AE926FA0();
}

void KTSSliceRecord.init(from:)()
{
  sub_1AE7FF604();
}

void sub_1AE7FF604()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;

  sub_1AE506A68();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v22 = sub_1AE501548(v7);
  MEMORY[0x1E0C80A78](v22);
  sub_1AE4F666C();
  sub_1AE4F9858(v4, v4[3]);
  v2();
  sub_1AE926F34();
  if (v0)
  {
    sub_1AE7365C0();
  }
  else
  {
    v8 = sub_1AE800A78();
    v9 = sub_1AE800A78();
    LOBYTE(v23) = 2;
    v10 = sub_1AE800A78();
    sub_1AE4FBECC(3);
    v12 = v11;
    sub_1AE4FBECC(4);
    v14 = v13;
    sub_1AE4FBECC(6);
    v16 = v15;
    v25 = sub_1AE800AD0(7);
    v21 = sub_1AE800AD0(8);
    sub_1AE4FBECC(5);
    v18 = v17;
    sub_1AE590114();
    sub_1AE505F98();
    sub_1AE54C814(v23, v24);
    sub_1AE505F98();
    v19 = sub_1AE505390();
    v20(v19);
    sub_1AE54C814(v23, v24);
    sub_1AE800BB0();
    sub_1AE800C04();
    *(_QWORD *)v6 = v8;
    *(_QWORD *)(v6 + 8) = v9;
    *(_QWORD *)(v6 + 16) = v10;
    *(_QWORD *)(v6 + 24) = v12;
    *(_QWORD *)(v6 + 32) = v14;
    *(_QWORD *)(v6 + 40) = v16;
    *(_BYTE *)(v6 + 48) = v25 & 1;
    *(_BYTE *)(v6 + 49) = v21 & 1;
    *(_QWORD *)(v6 + 56) = v18;
    *(_QWORD *)(v6 + 64) = v23;
    *(_QWORD *)(v6 + 72) = v24;
    *(_QWORD *)(v6 + 80) = v23;
    *(_QWORD *)(v6 + 88) = v24;
    sub_1AE7365C0();
    sub_1AE800C04();
    sub_1AE50BDB4(v23, v24);
  }
  sub_1AE4FCB08();
}

uint64_t sub_1AE7FF8C0()
{
  sub_1AE7FFE4C();
  return sub_1AE924DA4();
}

void sub_1AE7FF910()
{
  KTSSliceRecord.init(from:)();
}

uint64_t sub_1AE7FF924(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EEDA3400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE7FF96C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 200))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AE7FF9B8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1AE7FF9EC()
{
  unint64_t result;

  result = qword_1EEDA3698;
  if (!qword_1EEDA3698)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D544, &type metadata for KTSSegmentRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3698);
  }
  return result;
}

unint64_t sub_1AE7FFA28()
{
  unint64_t result;

  result = qword_1EEDA36B8;
  if (!qword_1EEDA36B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D4F4, &unk_1E5DB7D50);
    atomic_store(result, (unint64_t *)&qword_1EEDA36B8);
  }
  return result;
}

unint64_t sub_1AE7FFA64()
{
  unint64_t result;

  result = qword_1EEDA36D0;
  if (!qword_1EEDA36D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D4A4, &unk_1E5DB6228);
    atomic_store(result, (unint64_t *)&qword_1EEDA36D0);
  }
  return result;
}

unint64_t sub_1AE7FFAA4()
{
  unint64_t result;

  result = qword_1EEDA36E0;
  if (!qword_1EEDA36E0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSRecordType, &type metadata for KTSRecordType);
    atomic_store(result, (unint64_t *)&qword_1EEDA36E0);
  }
  return result;
}

unint64_t sub_1AE7FFAE0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1AE7FA138();
  a1[2] = sub_1AE7FFB24();
  a1[3] = sub_1AE7FFB60();
  a1[4] = sub_1AE7FFB9C();
  result = sub_1AE7FFBD8();
  a1[5] = result;
  return result;
}

unint64_t sub_1AE7FFB24()
{
  unint64_t result;

  result = qword_1EEDA36E8;
  if (!qword_1EEDA36E8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSegmentRecord, &type metadata for KTSSegmentRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA36E8);
  }
  return result;
}

unint64_t sub_1AE7FFB60()
{
  unint64_t result;

  result = qword_1EEDA36F0;
  if (!qword_1EEDA36F0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSegmentRecord, &type metadata for KTSSegmentRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA36F0);
  }
  return result;
}

unint64_t sub_1AE7FFB9C()
{
  unint64_t result;

  result = qword_1EEDA36F8;
  if (!qword_1EEDA36F8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSegmentRecord, &type metadata for KTSSegmentRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA36F8);
  }
  return result;
}

unint64_t sub_1AE7FFBD8()
{
  unint64_t result;

  result = qword_1EEDA3700;
  if (!qword_1EEDA3700)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSegmentRecord, &type metadata for KTSSegmentRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3700);
  }
  return result;
}

void sub_1AE7FFC14(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_1AE7FFF24(a1, a2, a3, (uint64_t (*)(void))sub_1AE7FA138, (uint64_t (*)(void))sub_1AE7FFB60, (uint64_t (*)(void))sub_1AE7FFB9C, (uint64_t (*)(void))sub_1AE7FFBD8);
}

unint64_t sub_1AE7FFC38(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1AE7FFC7C();
  a1[2] = sub_1AE7FFCB8();
  a1[3] = sub_1AE7FFCF4();
  a1[4] = sub_1AE7FFD30();
  result = sub_1AE7FFD6C();
  a1[5] = result;
  return result;
}

unint64_t sub_1AE7FFC7C()
{
  unint64_t result;

  result = qword_1EEDA3708;
  if (!qword_1EEDA3708)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSummaryRecord, &type metadata for KTSSummaryRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3708);
  }
  return result;
}

unint64_t sub_1AE7FFCB8()
{
  unint64_t result;

  result = qword_1EEDA3710;
  if (!qword_1EEDA3710)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSummaryRecord, &type metadata for KTSSummaryRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3710);
  }
  return result;
}

unint64_t sub_1AE7FFCF4()
{
  unint64_t result;

  result = qword_1EEDA3718;
  if (!qword_1EEDA3718)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSummaryRecord, &type metadata for KTSSummaryRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3718);
  }
  return result;
}

unint64_t sub_1AE7FFD30()
{
  unint64_t result;

  result = qword_1EEDA3720;
  if (!qword_1EEDA3720)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSummaryRecord, &type metadata for KTSSummaryRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3720);
  }
  return result;
}

unint64_t sub_1AE7FFD6C()
{
  unint64_t result;

  result = qword_1EEDA3728;
  if (!qword_1EEDA3728)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSummaryRecord, &type metadata for KTSSummaryRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3728);
  }
  return result;
}

void sub_1AE7FFDA8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_1AE7FFF24(a1, a2, a3, (uint64_t (*)(void))sub_1AE7FFC7C, (uint64_t (*)(void))sub_1AE7FFCF4, (uint64_t (*)(void))sub_1AE7FFD30, (uint64_t (*)(void))sub_1AE7FFD6C);
}

unint64_t sub_1AE7FFDCC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1AE7FA190();
  a1[2] = sub_1AE7FFE10();
  a1[3] = sub_1AE7FFE4C();
  a1[4] = sub_1AE7FFE88();
  result = sub_1AE7FFEC4();
  a1[5] = result;
  return result;
}

unint64_t sub_1AE7FFE10()
{
  unint64_t result;

  result = qword_1EEDA3730;
  if (!qword_1EEDA3730)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSliceRecord, &type metadata for KTSSliceRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3730);
  }
  return result;
}

unint64_t sub_1AE7FFE4C()
{
  unint64_t result;

  result = qword_1EEDA3738;
  if (!qword_1EEDA3738)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSliceRecord, &type metadata for KTSSliceRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3738);
  }
  return result;
}

unint64_t sub_1AE7FFE88()
{
  unint64_t result;

  result = qword_1EEDA3740;
  if (!qword_1EEDA3740)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSliceRecord, &type metadata for KTSSliceRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3740);
  }
  return result;
}

unint64_t sub_1AE7FFEC4()
{
  unint64_t result;

  result = qword_1EEDA3748;
  if (!qword_1EEDA3748)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSSliceRecord, &type metadata for KTSSliceRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3748);
  }
  return result;
}

void sub_1AE7FFF00(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_1AE7FFF24(a1, a2, a3, (uint64_t (*)(void))sub_1AE7FA190, (uint64_t (*)(void))sub_1AE7FFE4C, (uint64_t (*)(void))sub_1AE7FFE88, (uint64_t (*)(void))sub_1AE7FFEC4);
}

void sub_1AE7FFF24(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  a1[3] = a6();
  a1[4] = a7();
  sub_1AE4F6624();
}

uint64_t storeEnumTagSinglePayload for KTSRecordType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE7FFFB8 + 4 * byte_1AE95CC5D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE7FFFEC + 4 * byte_1AE95CC58[v4]))();
}

uint64_t sub_1AE7FFFEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE7FFFF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE7FFFFCLL);
  return result;
}

uint64_t sub_1AE800008(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE800010);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE800014(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE80001C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for KTSRecordType()
{
  sub_1AE4F67D4();
}

uint64_t dispatch thunk of static KTSRecordProtocol.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of KTSRecordProtocol.entityId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of KTSRecordProtocol.ktsDataSummary.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of KTSRecordProtocol.ktsContextSummary.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of KTSRecordDataProtocol.startTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of KTSRecordDataProtocol.distance.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of KTSRecordDataProtocol.elevationGain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of KTSRecordDataProtocol.duration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of KTSRecordDataProtocol.isCity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of KTSRecordDataProtocol.isHighway.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of KTSRecordDataProtocol.ktsContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of KTSRecordDataProtocol.ktsData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t destroy for KTSSegmentRecord(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1AE50BDB4(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  return sub_1AE50BDB4(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
}

uint64_t initializeWithCopy for KTSSegmentRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  v4 = *(_QWORD *)(a2 + 80);
  v5 = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  sub_1AE54C814(v4, v5);
  *(_QWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 88) = v5;
  v7 = *(_QWORD *)(a2 + 96);
  v6 = *(_QWORD *)(a2 + 104);
  sub_1AE54C814(v7, v6);
  *(_QWORD *)(a1 + 96) = v7;
  *(_QWORD *)(a1 + 104) = v6;
  return a1;
}

uint64_t assignWithCopy for KTSSegmentRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  v4 = *(_QWORD *)(a2 + 80);
  v5 = *(_QWORD *)(a2 + 88);
  sub_1AE54C814(v4, v5);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v4;
  *(_QWORD *)(a1 + 88) = v5;
  sub_1AE50BDB4(v6, v7);
  v9 = *(_QWORD *)(a2 + 96);
  v8 = *(_QWORD *)(a2 + 104);
  sub_1AE54C814(v9, v8);
  v10 = *(_QWORD *)(a1 + 96);
  v11 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 104) = v8;
  sub_1AE50BDB4(v10, v11);
  return a1;
}

uint64_t assignWithTake for KTSSegmentRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  sub_1AE50BDB4(v4, v5);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  sub_1AE50BDB4(v6, v7);
  return a1;
}

void type metadata accessor for KTSSegmentRecord()
{
  sub_1AE4F67D4();
}

void type metadata accessor for KTSSummaryRecord()
{
  sub_1AE4F67D4();
}

uint64_t _s20IntelligencePlatform14KTSSliceRecordVwxx_0(uint64_t a1)
{
  sub_1AE50BDB4(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  return sub_1AE50BDB4(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
}

void _s20IntelligencePlatform14KTSSliceRecordVwcp_0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  sub_1AE800C24();
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v6;
  sub_1AE800B38();
  *(_QWORD *)(a1 + 80) = v5;
  *(_QWORD *)(a1 + 88) = a2;
  sub_1AE4F6624();
}

void _s20IntelligencePlatform14KTSSliceRecordVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  sub_1AE5072DC((uint64_t)a1, (uint64_t)a2);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(v4 + 72);
  sub_1AE800C24();
  v7 = a1[8];
  v8 = a1[9];
  a1[8] = v5;
  a1[9] = v6;
  sub_1AE50BDB4(v7, v8);
  sub_1AE800B38();
  v9 = a1[10];
  v10 = a1[11];
  a1[10] = v5;
  a1[11] = a2;
  sub_1AE50BDB4(v9, v10);
  sub_1AE4F6624();
}

void _s20IntelligencePlatform14KTSSliceRecordVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1AE5072DC(a1, a2);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  sub_1AE50BDB4(v5, v6);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  sub_1AE50BDB4(v7, v8);
  sub_1AE4F6664();
}

uint64_t _s20IntelligencePlatform14KTSSliceRecordVwet_0(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 96))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 48);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s20IntelligencePlatform14KTSSliceRecordVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = a2 + 1;
  }
  return result;
}

void type metadata accessor for KTSSliceRecord()
{
  sub_1AE4F67D4();
}

void type metadata accessor for KTSSliceRecord.CodingKeys()
{
  sub_1AE4F67D4();
}

uint64_t getEnumTagSinglePayload for QueryNode.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 10) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v5 = v6 - 11;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1AE8005A4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1AE8005F0 + 4 * byte_1AE95CC67[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1AE800624 + 4 * byte_1AE95CC62[v4]))();
}

uint64_t sub_1AE800624(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE80062C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE800634);
  return result;
}

uint64_t sub_1AE800640(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE800648);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1AE80064C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE800654(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for KTSSummaryRecord.CodingKeys()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for KTSSegmentRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1AE8006B8 + 4 * byte_1AE95CC71[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1AE8006EC + 4 * byte_1AE95CC6C[v4]))();
}

uint64_t sub_1AE8006EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8006F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8006FCLL);
  return result;
}

uint64_t sub_1AE800708(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE800710);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1AE800714(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE80071C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KTSSegmentRecord.CodingKeys()
{
  return &type metadata for KTSSegmentRecord.CodingKeys;
}

unint64_t sub_1AE80073C()
{
  unint64_t result;

  result = qword_1EEDA3750;
  if (!qword_1EEDA3750)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D29C, &type metadata for KTSSegmentRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3750);
  }
  return result;
}

unint64_t sub_1AE80077C()
{
  unint64_t result;

  result = qword_1EEDA3758;
  if (!qword_1EEDA3758)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D38C, &unk_1E5DB7D50);
    atomic_store(result, (unint64_t *)&qword_1EEDA3758);
  }
  return result;
}

unint64_t sub_1AE8007BC()
{
  unint64_t result;

  result = qword_1EEDA3760;
  if (!qword_1EEDA3760)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D47C, &unk_1E5DB6228);
    atomic_store(result, (unint64_t *)&qword_1EEDA3760);
  }
  return result;
}

unint64_t sub_1AE8007FC()
{
  unint64_t result;

  result = qword_1EEDA3768;
  if (!qword_1EEDA3768)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D3B4, &unk_1E5DB6228);
    atomic_store(result, (unint64_t *)&qword_1EEDA3768);
  }
  return result;
}

unint64_t sub_1AE80083C()
{
  unint64_t result;

  result = qword_1EEDA3770;
  if (!qword_1EEDA3770)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D3DC, &unk_1E5DB6228);
    atomic_store(result, (unint64_t *)&qword_1EEDA3770);
  }
  return result;
}

unint64_t sub_1AE80087C()
{
  unint64_t result;

  result = qword_1EEDA3778;
  if (!qword_1EEDA3778)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D2C4, &unk_1E5DB7D50);
    atomic_store(result, (unint64_t *)&qword_1EEDA3778);
  }
  return result;
}

unint64_t sub_1AE8008BC()
{
  unint64_t result;

  result = qword_1EEDA3780;
  if (!qword_1EEDA3780)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D2EC, &unk_1E5DB7D50);
    atomic_store(result, (unint64_t *)&qword_1EEDA3780);
  }
  return result;
}

unint64_t sub_1AE8008FC()
{
  unint64_t result;

  result = qword_1EEDA3788;
  if (!qword_1EEDA3788)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D20C, &type metadata for KTSSegmentRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3788);
  }
  return result;
}

unint64_t sub_1AE80093C()
{
  unint64_t result;

  result = qword_1EEDA3790;
  if (!qword_1EEDA3790)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D234, &type metadata for KTSSegmentRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3790);
  }
  return result;
}

unint64_t sub_1AE800978()
{
  unint64_t result;

  result = qword_1EEDA3798;
  if (!qword_1EEDA3798)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSRecordType, &type metadata for KTSRecordType);
    atomic_store(result, (unint64_t *)&qword_1EEDA3798);
  }
  return result;
}

uint64_t sub_1AE800A00()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 80))(v1, v0);
}

uint64_t sub_1AE800A18()
{
  return swift_dynamicCast();
}

uint64_t sub_1AE800A24()
{
  return sub_1AE9243A8();
}

uint64_t sub_1AE800A44()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AE54C814(v0, v1);
}

uint64_t sub_1AE800A50()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE800A6C()
{
  return type metadata accessor for KTSContextAggregateRepresentation();
}

uint64_t sub_1AE800A78()
{
  return sub_1AE926C10();
}

uint64_t _s20IntelligencePlatform16KTSSegmentRecordV14sourceIdColumnSSSgvgZ_0()
{
  return 0x696669746E656469;
}

uint64_t sub_1AE800AA4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 120) = a1;
  return sub_1AE926BBC();
}

uint64_t sub_1AE800AD0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 128) = a1;
  return sub_1AE926BBC();
}

uint64_t sub_1AE800AE8()
{
  return sub_1AE926BEC();
}

uint64_t _s20IntelligencePlatform17KTSRecordProtocolP15subjectIdColumnSSSgvgZTj_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t _s20IntelligencePlatform17KTSRecordProtocolP14sourceIdColumnSSSgvgZTj_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1AE800B04()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AE50BDB4(v0, v1);
}

uint64_t sub_1AE800B20()
{
  return 0x6174614473746BLL;
}

uint64_t sub_1AE800B38()
{
  uint64_t v0;

  return sub_1AE54C814(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1AE800B48()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 128) = 8;
  return v0;
}

uint64_t sub_1AE800B60()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 128) = 2;
  return v0;
}

uint64_t sub_1AE800B78()
{
  return sub_1AE9243C0();
}

uint64_t sub_1AE800B80()
{
  return type metadata accessor for KTSContextRepresentation();
}

uint64_t sub_1AE800B88()
{
  return sub_1AE9243B4();
}

uint64_t sub_1AE800B90()
{
  return sub_1AE926C94();
}

uint64_t sub_1AE800B98()
{
  return sub_1AE926CE8();
}

void sub_1AE800BA0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_1AE585700(a1, v3, a3);
}

_QWORD *sub_1AE800BA8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1AE4F9858(a1, v1);
}

uint64_t sub_1AE800BB0()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AE54C814(v0, v1);
}

void sub_1AE800BBC()
{
  sub_1AE51BB80();
}

uint64_t sub_1AE800BC8()
{
  return 0x4974736575716572;
}

uint64_t sub_1AE800BEC()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1AE800BF8()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1AE800C04()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AE50BDB4(v1, v0);
}

void sub_1AE800C10(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 128) = a1;
}

unint64_t sub_1AE800C1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_1AE7EA124();
}

uint64_t sub_1AE800C24()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AE54C814(v0, v1);
}

uint64_t sub_1AE800C30()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AE54C814(v0, v1);
}

ValueMetadata *type metadata accessor for KTSSegmentView()
{
  return &type metadata for KTSSegmentView;
}

uint64_t sub_1AE800C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t result;

  v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_viewArtifactTableName);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1AE925E3C();
    v12 = v11;

  }
  else
  {
    v12 = 0xEB00000000746E65;
    v10 = 0x6D6765735F73746BLL;
  }
  if (qword_1EED99830 != -1)
    swift_once();
  v13 = sub_1AE925B6C();
  sub_1AE4FB608(v13, (uint64_t)qword_1EED9F800);
  v14 = sub_1AE925B54();
  v15 = sub_1AE9265D4();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1AE4F2000, v14, v15, "Fetching KTSSegmentView for client.", v16, 2u);
    MEMORY[0x1AF454C78](v16, -1, -1);
  }

  result = swift_unknownObjectRelease();
  *a4 = a1;
  a4[1] = v10;
  a4[2] = v12;
  a4[3] = a2;
  a4[4] = a3;
  return result;
}

uint64_t sub_1AE800DD4()
{
  unint64_t v0;

  v0 = sub_1AE926B44();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC)
    return 12;
  else
    return v0;
}

uint64_t sub_1AE800E1C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE800E58 + 4 * byte_1AE95D5A0[a1]))(0x656D67655373746BLL, 0xEC0000006449746ELL);
}

uint64_t sub_1AE800E58()
{
  return 0x696669746E656469;
}

uint64_t sub_1AE800E74()
{
  return 0x6D69547472617473;
}

uint64_t sub_1AE800E90()
{
  return 0x656D6954646E65;
}

uint64_t sub_1AE800EA8()
{
  return 0x65636E6174736964;
}

uint64_t sub_1AE800EC0()
{
  return 0x6F69746176656C65;
}

uint64_t sub_1AE800EE4()
{
  return 0x65726F6373;
}

uint64_t sub_1AE800EF8()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1AE800F10()
{
  return 0x797469437369;
}

uint64_t sub_1AE800F24()
{
  return 0x6177686769487369;
}

uint64_t sub_1AE800F44()
{
  return 0x65746E6F4373746BLL;
}

uint64_t sub_1AE800F64()
{
  return 0x6174614473746BLL;
}

void sub_1AE800F7C()
{
  sub_1AE511078();
}

void sub_1AE800F88()
{
  unsigned __int8 *v0;

  sub_1AE512CE4(*v0);
}

void sub_1AE800F90()
{
  sub_1AE5E8858();
}

void sub_1AE800F98(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FAF4(a1, *v1);
}

uint64_t sub_1AE800FA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE800DD4();
  *a1 = result;
  return result;
}

uint64_t sub_1AE800FCC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1AE800E1C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AE800FF4()
{
  sub_1AE8012E0();
  return sub_1AE924ED0();
}

uint64_t sub_1AE80102C()
{
  sub_1AE80131C();
  return sub_1AE924EB8();
}

uint64_t sub_1AE801064()
{
  sub_1AE801264();
  return sub_1AE9250A4();
}

uint64_t sub_1AE80109C()
{
  sub_1AE801264();
  return sub_1AE925098();
}

uint64_t storeEnumTagSinglePayload for KTSSegmentViewColumns(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1AE801120 + 4 * byte_1AE95D5B1[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1AE801154 + 4 * byte_1AE95D5AC[v4]))();
}

uint64_t sub_1AE801154(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE80115C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE801164);
  return result;
}

uint64_t sub_1AE801170(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE801178);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1AE80117C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE801184(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KTSSegmentViewColumns()
{
  return &type metadata for KTSSegmentViewColumns;
}

unint64_t sub_1AE8011A4()
{
  unint64_t result;

  result = qword_1EEDA37B0;
  if (!qword_1EEDA37B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D648, &type metadata for KTSSegmentViewColumns);
    atomic_store(result, (unint64_t *)&qword_1EEDA37B0);
  }
  return result;
}

unint64_t sub_1AE8011E4()
{
  unint64_t result;

  result = qword_1EEDA37B8;
  if (!qword_1EEDA37B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D5F8, &type metadata for KTSSegmentViewColumns);
    atomic_store(result, (unint64_t *)&qword_1EEDA37B8);
  }
  return result;
}

unint64_t sub_1AE801224()
{
  unint64_t result;

  result = qword_1EEDA37C0;
  if (!qword_1EEDA37C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D620, &type metadata for KTSSegmentViewColumns);
    atomic_store(result, (unint64_t *)&qword_1EEDA37C0);
  }
  return result;
}

unint64_t sub_1AE801264()
{
  unint64_t result;

  result = qword_1EEDA37C8;
  if (!qword_1EEDA37C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D670, &type metadata for KTSSegmentViewColumns);
    atomic_store(result, (unint64_t *)&qword_1EEDA37C8);
  }
  return result;
}

unint64_t sub_1AE8012A4()
{
  unint64_t result;

  result = qword_1EEDA37D0;
  if (!qword_1EEDA37D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D750, &type metadata for KTSSegmentViewColumns);
    atomic_store(result, (unint64_t *)&qword_1EEDA37D0);
  }
  return result;
}

unint64_t sub_1AE8012E0()
{
  unint64_t result;

  result = qword_1EEDA37D8;
  if (!qword_1EEDA37D8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D6D8, &type metadata for KTSSegmentViewColumns);
    atomic_store(result, (unint64_t *)&qword_1EEDA37D8);
  }
  return result;
}

unint64_t sub_1AE80131C()
{
  unint64_t result;

  result = qword_1EEDA37E0;
  if (!qword_1EEDA37E0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D6A8, &type metadata for KTSSegmentViewColumns);
    atomic_store(result, (unint64_t *)&qword_1EEDA37E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for KTSSliceView()
{
  return &type metadata for KTSSliceView;
}

uint64_t sub_1AE801368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v18;

  v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_viewArtifactTableName);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1AE925E3C();
    v12 = v11;

    if (qword_1EED99830 != -1)
      swift_once();
    v13 = sub_1AE925B6C();
    sub_1AE4FB608(v13, (uint64_t)qword_1EED9F800);
    v14 = sub_1AE925B54();
    v15 = sub_1AE9265D4();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1AE4F2000, v14, v15, "Fetching KTSSliceView for client.", v16, 2u);
      MEMORY[0x1AF454C78](v16, -1, -1);
    }

    *a4 = a1;
    a4[1] = v10;
    a4[2] = v12;
    a4[3] = a2;
    a4[4] = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1AE7D2544();
    swift_allocError();
    *(_QWORD *)v18 = 0xD000000000000015;
    *(_QWORD *)(v18 + 8) = 0x80000001AE987290;
    *(_BYTE *)(v18 + 16) = 0;
    swift_willThrow();
    swift_unknownObjectRelease_n();
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_1AE801538()
{
  uint64_t v0;

  v0 = sub_1AE501548(&qword_1ED319190);
  sub_1AE595770(v0, qword_1EEDA37F0);
  sub_1AE4FB608(v0, (uint64_t)qword_1EEDA37F0);
  return sub_1AE925350();
}

uint64_t LanguageView.databaseFilePath.getter()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v9;

  v2 = sub_1AE924780();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v0)
  {
    v6 = objc_msgSend(*v0, sel_viewArtifactURL);
    sub_1AE924744();

    v1 = sub_1AE924750();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_1AE5CB92C();
    swift_allocError();
    *(_QWORD *)v7 = 0xD00000000000001ELL;
    *(_QWORD *)(v7 + 8) = 0x80000001AE9872B0;
    *(_BYTE *)(v7 + 16) = 0;
    swift_willThrow();
  }
  return v1;
}

uint64_t LanguageView.inferredLanguageTriples()()
{
  uint64_t v0;
  uint64_t v2;

  v2 = MEMORY[0x1E0DEE9D8];
  swift_getObjectType();
  sub_1AE924CCC();
  if (v0)
    swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1AE801748(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  if (qword_1EED99878 != -1)
    swift_once();
  v4 = sub_1AE501548(&qword_1ED319190);
  sub_1AE4FB608(v4, (uint64_t)qword_1EEDA37F0);
  result = sub_1AE925344();
  if (!v2)
  {
    *a2 = result;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AE8017E4(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE801748(a1, *(uint64_t **)(v1 + 16));
}

ValueMetadata *type metadata accessor for LanguageView()
{
  return &type metadata for LanguageView;
}

uint64_t getEnumTagSinglePayload for LemmatizedSubgraphView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE801818(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for SearchableViewDatabaseTable();
    return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for LemmatizedSubgraphView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_1AE801898(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for SearchableViewDatabaseTable();
    return (_QWORD *)_s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for LemmatizedSubgraphView()
{
  uint64_t result;

  result = qword_1ED310270;
  if (!qword_1ED310270)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AE80193C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SearchableViewDatabaseTable();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AE8019B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  int *v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t *v16;

  *a4 = a1;
  v7 = objc_msgSend((id)swift_unknownObjectRetain(), sel_viewArtifactTableName);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1AE925E3C();
    v11 = v10;

  }
  else
  {
    v11 = 0x80000001AE9872D0;
    v9 = 0xD000000000000013;
  }
  v12 = (_QWORD *)((char *)a4 + *(int *)(type metadata accessor for LemmatizedSubgraphView() + 20));
  *v12 = a2;
  v12[1] = a3;
  v12[2] = v9;
  v12[3] = v11;
  v13 = (int *)type metadata accessor for SearchableViewDatabaseTable();
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain();
  sub_1AE925350();
  v14 = (_QWORD *)((char *)v12 + v13[9]);
  *v14 = 0x7463656A627573;
  v14[1] = 0xE700000000000000;
  *(_QWORD *)((char *)v12 + v13[8]) = &unk_1E5DA9BA8;
  sub_1AE925F74();
  swift_unknownObjectRelease();
  result = swift_unknownObjectRelease();
  v16 = (_QWORD *)((char *)v12 + v13[7]);
  *v16 = v9;
  v16[1] = v11;
  return result;
}

uint64_t sub_1AE801B18()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 16) = xmmword_1AE95D800;
  *(_QWORD *)(v0 + 32) = &unk_1E5DB06B0;
  *(_OWORD *)(v0 + 40) = xmmword_1AE934390;
  *(_OWORD *)(v0 + 56) = xmmword_1AE95D810;
  *(_QWORD *)(v0 + 72) = 0x80000001AE987320;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1AE5158B8(0, 0);
  return v0;
}

uint64_t type metadata accessor for LessThan()
{
  return objc_opt_self();
}

uint64_t sub_1AE801BD8()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 16) = xmmword_1AE95D830;
  *(_QWORD *)(v0 + 32) = &unk_1E5DA5E18;
  *(_OWORD *)(v0 + 40) = xmmword_1AE934390;
  *(_OWORD *)(v0 + 56) = xmmword_1AE95D840;
  *(_QWORD *)(v0 + 72) = 0x80000001AE987390;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1AE5158B8(0, 0);
  return v0;
}

uint64_t type metadata accessor for LessThanEqual()
{
  return objc_opt_self();
}

void type metadata accessor for LexerGenerator()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE801CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE801CE0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t sub_1AE801D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

void type metadata accessor for Token()
{
  sub_1AE4F67D4();
}

uint64_t getEnumTagSinglePayload for LocationEntityCard.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xED)
  {
    if (a2 + 19 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 19) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 20;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v5 = v6 - 20;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1AE801E14(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_1AE801E60 + 4 * byte_1AE95D875[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_1AE801E94 + 4 * asc_1AE95D870[v4]))();
}

uint64_t sub_1AE801E94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE801E9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE801EA4);
  return result;
}

uint64_t sub_1AE801EB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE801EB8);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_1AE801EBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE801EC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for TokenType()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE801EE0()
{
  unint64_t result;

  result = qword_1ED30FC08;
  if (!qword_1ED30FC08)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95D8E4, &unk_1E5DC86E8);
    atomic_store(result, (unint64_t *)&qword_1ED30FC08);
  }
  return result;
}

void sub_1AE801F20(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;

  v3 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v4 = *(_QWORD *)(a3 + 16);
  if (v4 >= a1)
  {
    v6 = __OFSUB__(v4, v3);
    v5 = (uint64_t)(v4 - v3) < 0;
  }
  else
  {
    v6 = 0;
    v5 = 1;
  }
  if (v5 != v6)
    goto LABEL_11;
  if ((v3 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    sub_1AE4F6624();
    return;
  }
LABEL_12:
  __break(1u);
}

void sub_1AE801F90(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16) < a1)
  {
    __break(1u);
  }
  else if ((a1 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    sub_1AE4F6624();
    return;
  }
  __break(1u);
}

void sub_1AE801FE4()
{
  sub_1AE7B6FE4();
}

uint64_t sub_1AE801FEC()
{
  uint64_t result;

  result = sub_1AE925C98();
  qword_1ED30FB68 = result;
  return result;
}

void sub_1AE802028()
{
  uint64_t v0;

  sub_1AE56C580();
  qword_1ED30FB28 = v0;
}

uint64_t sub_1AE80204C()
{
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  sub_1AE926D18();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  return 0;
}

uint64_t sub_1AE802180()
{
  return sub_1AE80204C();
}

uint64_t sub_1AE802190(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  BOOL v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;

  if (qword_1ED30FB70 != -1)
    goto LABEL_29;
  while (1)
  {
    v34 = qword_1ED30FB68;
    swift_bridgeObjectRetain();
    v3 = sub_1AE925C98();
    v4 = *(_QWORD *)(a2 + 16);
    if (v4)
      break;
LABEL_13:
    swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(a1 + 16);
    if (!v19)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      return v34;
    }
    v20 = (uint64_t *)(a1 + 40);
    while (1)
    {
      v22 = *(v20 - 1);
      v21 = *v20;
      sub_1AE4F6708();
      swift_isUniquelyReferenced_nonNull_native();
      sub_1AE4F6AE0();
      sub_1AE501FA0();
      if (v10)
        break;
      v25 = v23;
      v26 = v24;
      sub_1AE501548(&qword_1ED30FD30);
      if ((sub_1AE926A54() & 1) != 0)
      {
        v27 = sub_1AE4F6AE0();
        if ((v26 & 1) != (v28 & 1))
          goto LABEL_30;
        v25 = v27;
      }
      if ((v26 & 1) != 0)
      {
        *(_BYTE *)(*(_QWORD *)(v3 + 56) + v25) = 1;
      }
      else
      {
        sub_1AE4FFC58(v3 + 8 * (v25 >> 6));
        v30 = (_QWORD *)(v29 + 16 * v25);
        *v30 = v22;
        v30[1] = v21;
        *(_BYTE *)(*(_QWORD *)(v3 + 56) + v25) = 1;
        v31 = *(_QWORD *)(v3 + 16);
        v10 = __OFADD__(v31, 1);
        v32 = v31 + 1;
        if (v10)
          goto LABEL_28;
        *(_QWORD *)(v3 + 16) = v32;
        sub_1AE4F6708();
      }
      v20 += 2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v19)
        goto LABEL_24;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    swift_once();
  }
  v5 = (uint64_t *)(a2 + 40);
  while (1)
  {
    v7 = *(v5 - 1);
    v6 = *v5;
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    sub_1AE4FCB28();
    sub_1AE501FA0();
    if (v10)
    {
      __break(1u);
      goto LABEL_26;
    }
    v11 = v8;
    v12 = v9;
    sub_1AE501548(&qword_1ED30FD30);
    if ((sub_1AE926A54() & 1) != 0)
      break;
LABEL_8:
    if ((v12 & 1) != 0)
    {
      *(_BYTE *)(*(_QWORD *)(v3 + 56) + v11) = 3;
    }
    else
    {
      sub_1AE4FFC58(v3 + 8 * (v11 >> 6));
      v16 = (_QWORD *)(v15 + 16 * v11);
      *v16 = v7;
      v16[1] = v6;
      *(_BYTE *)(*(_QWORD *)(v3 + 56) + v11) = 3;
      v17 = *(_QWORD *)(v3 + 16);
      v10 = __OFADD__(v17, 1);
      v18 = v17 + 1;
      if (v10)
        goto LABEL_27;
      *(_QWORD *)(v3 + 16) = v18;
      swift_bridgeObjectRetain();
    }
    v5 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v4)
      goto LABEL_13;
  }
  v13 = sub_1AE4FCB28();
  if ((v12 & 1) == (v14 & 1))
  {
    v11 = v13;
    goto LABEL_8;
  }
LABEL_30:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

void sub_1AE80244C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 56) = v2;
    if (v2 >= *(_QWORD *)(v3 + 16))
    {
      v4 = sub_1AE802674();
      v6 = v5;
      v8 = v7;
      v10 = v9;
      swift_bridgeObjectRetain();
      sub_1AE8DD318();
      v11 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16);
      sub_1AE8DD684(v11);
      v12 = *(_QWORD *)(v0 + 48);
      *(_QWORD *)(v12 + 16) = v11 + 1;
      v13 = v12 + 32 * v11;
      *(_BYTE *)(v13 + 32) = v4;
      *(_QWORD *)(v13 + 40) = v6;
      *(_QWORD *)(v13 + 48) = v8;
      *(_QWORD *)(v13 + 56) = v10;
      *(_QWORD *)(v0 + 48) = v12;
      goto LABEL_6;
    }
    if ((v2 & 0x8000000000000000) == 0)
    {
      sub_1AE4F6708();
LABEL_6:
      *(_QWORD *)(v0 + 56) = v2 - 1;
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1AE802540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 56);
  if (v1 <= 0)
  {
    v3 = 10;
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 48);
    if ((unint64_t)(v1 - 1) >= *(_QWORD *)(v2 + 16))
      goto LABEL_8;
    v3 = *(unsigned __int8 *)(v2 + 32 * (v1 - 1) + 32);
    result = sub_1AE4F6730();
  }
  if (!__OFSUB__(v1, 1))
  {
    *(_QWORD *)(v0 + 56) = v1 - 1;
    return v3;
  }
  __break(1u);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1AE8025E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 56);
  if (v1 <= 0)
    return 10;
  v2 = *(_QWORD *)(v0 + 48);
  v3 = v1 - 1;
  if (v3 < *(_QWORD *)(v2 + 16))
  {
    v4 = *(unsigned __int8 *)(v2 + 32 * v3 + 32);
    swift_bridgeObjectRetain();
    return v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AE802674()
{
  _QWORD *v0;
  int64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;

  v1 = v0[5];
  v23 = v0[4];
  if (v1 >= v23)
  {
    return 7;
  }
  else
  {
    v2 = v0;
    v3 = *v0;
    while (1)
    {
      sub_1AE4F6730();
      v4 = sub_1AE925F20();
      if (v4)
        break;
      v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_13:
      swift_bridgeObjectRelease();
      if (v1 < 0)
        goto LABEL_35;
      if ((unint64_t)v1 >= v6[2])
        goto LABEL_36;
      v13 = &v6[2 * v1];
      v14 = v13[4];
      v15 = v13[5];
      swift_bridgeObjectRetain();
      swift_release();
      if (*(_QWORD *)(v3 + 16) && (v16 = sub_1AE537024(v14, v15), (v17 & 1) != 0))
        v18 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 56) + v16);
      else
        v18 = 6;
      if (qword_1ED30FB38 != -1)
        swift_once();
      sub_1AE551C0C(v18, qword_1ED30FB28);
      if ((v19 & 1) != 0)
      {
        v2[5] = v1 + 1;
        return v18;
      }
      swift_bridgeObjectRelease();
      if ((_DWORD)v18 != 9)
      {
        if ((_DWORD)v18 == 5)
          return sub_1AE802BB4();
        if ((_DWORD)v18 != 17)
          return sub_1AE802FFC();
        sub_1AE802AE0();
        return v21;
      }
      sub_1AE8028F0();
      v20 = v2[5];
      v1 = v20 + 1;
      if (__OFADD__(v20, 1))
        goto LABEL_37;
      v2[5] = v1;
      if (v1 >= v23)
        return 7;
    }
    v5 = v4;
    if (v4 < 1)
    {
      v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      sub_1AE501548(&qword_1ED31AD40);
      v6 = (_QWORD *)swift_allocObject();
      v7 = j__malloc_size(v6);
      v6[2] = v5;
      v6[3] = 2 * ((uint64_t)(v7 - 32) / 16);
    }
    v8 = v5 & ~(v5 >> 63);
    sub_1AE4F6730();
    v9 = 4;
    while (v8)
    {
      v10 = sub_1AE925F98();
      if (!v11)
        goto LABEL_38;
      v12 = &v6[v9];
      *v12 = v10;
      v12[1] = v11;
      --v8;
      v9 += 2;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

void sub_1AE8028F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0[5];
  v2 = v1 + 1;
  if (!__OFADD__(v1, 1))
  {
    v3 = v0;
    v0[5] = v2;
    v22 = v0[4];
    if (v2 >= v22)
      return;
    v4 = *v0;
    v21 = v1 + 1;
    v5 = v1 + 1;
    while (1)
    {
      swift_bridgeObjectRetain();
      v6 = sub_1AE925F20();
      if (v6)
        break;
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_14:
      swift_bridgeObjectRelease();
      if (v2 < 0)
        goto LABEL_25;
      if (v5 >= v8[2])
        goto LABEL_26;
      v15 = &v8[2 * v5];
      v16 = v15[4];
      v17 = v15[5];
      swift_bridgeObjectRetain();
      swift_release();
      if (!*(_QWORD *)(v4 + 16) || (v18 = sub_1AE537024(v16, v17), (v19 & 1) == 0))
      {
        swift_bridgeObjectRelease();
LABEL_22:
        v3[5] = v5 - 1;
        return;
      }
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 56) + v18);
      swift_bridgeObjectRelease();
      if (v20 != 9)
        goto LABEL_22;
      v3[5] = ++v5;
      if ((uint64_t)v5 >= v22)
        return;
    }
    v7 = v6;
    if (v6 < 1)
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      sub_1AE501548(&qword_1ED31AD40);
      v8 = (_QWORD *)swift_allocObject();
      v9 = j__malloc_size(v8);
      v8[2] = v7;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 16);
    }
    v10 = v7 & ~(v7 >> 63);
    swift_bridgeObjectRetain();
    v11 = 4;
    while (v10)
    {
      v12 = sub_1AE925F98();
      if (!v13)
        goto LABEL_28;
      v14 = &v8[v11];
      *v14 = v12;
      v14[1] = v13;
      --v10;
      v11 += 2;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        v2 = v21;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  __break(1u);
LABEL_28:
  swift_bridgeObjectRelease();
  __break(1u);
}

void sub_1AE802AE0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  *(_QWORD *)(v0 + 40) = v2;
  if (v2 == *(_QWORD *)(v0 + 32))
    return;
  swift_bridgeObjectRetain();
  sub_1AE523D90();
  v4 = v3;
  swift_bridgeObjectRelease();
  if ((v2 & 0x8000000000000000) != 0)
    goto LABEL_8;
  if (v2 >= *(_QWORD *)(v4 + 16))
  {
LABEL_9:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  swift_release();
  *(_QWORD *)(v0 + 40) = v2 + 1;
}

uint64_t sub_1AE802BB4()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  size_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v1 = v0[5];
  v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
LABEL_50:
    __break(1u);
LABEL_51:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_52:
    __break(1u);
  }
  else
  {
    v3 = v0;
    v0[5] = v2;
    v4 = v0[4];
    if (v2 >= v4)
    {
LABEL_35:
      swift_bridgeObjectRelease();
      return 10;
    }
    v5 = *v0;
    v37 = v0[4];
    v35 = v1 + 1;
    v36 = v0;
    while (1)
    {
      swift_bridgeObjectRetain();
      v6 = sub_1AE925F20();
      if (v6)
        break;
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_14:
      swift_bridgeObjectRelease();
      if (v2 < 0)
        goto LABEL_47;
      if ((unint64_t)v2 >= v8[2])
        goto LABEL_48;
      v15 = &v8[2 * v2];
      v16 = v15[4];
      v17 = v15[5];
      swift_bridgeObjectRetain();
      swift_release();
      if (*(_QWORD *)(v5 + 16) && (v18 = sub_1AE537024(v16, v17), (v19 & 1) != 0))
      {
        v20 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 56) + v18);
        swift_bridgeObjectRelease();
        if (v20 == 17)
        {
          v3[5] = v2 + 1;
          if (v2 + 1 == v4)
            goto LABEL_35;
          swift_bridgeObjectRetain();
          v21 = sub_1AE925F20();
          if (v21)
          {
            v22 = v21;
            if (v21 < 1)
            {
              v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            }
            else
            {
              sub_1AE501548(&qword_1ED31AD40);
              v23 = (_QWORD *)swift_allocObject();
              v24 = j__malloc_size(v23);
              v23[2] = v22;
              v23[3] = 2 * ((uint64_t)(v24 - 32) / 16);
            }
            v25 = v22 & ~(v22 >> 63);
            swift_bridgeObjectRetain();
            v26 = 4;
            while (v25)
            {
              v27 = sub_1AE925F98();
              if (!v28)
                goto LABEL_55;
              v29 = &v23[v26];
              *v29 = v27;
              v29[1] = v28;
              --v25;
              v26 += 2;
              if (!--v22)
              {
                swift_bridgeObjectRelease();
                v4 = v37;
                goto LABEL_31;
              }
            }
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
            goto LABEL_50;
          }
          v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_31:
          swift_bridgeObjectRelease();
          if ((unint64_t)(v2 + 1) >= v23[2])
            goto LABEL_49;
          swift_bridgeObjectRetain();
          swift_release();
          v35 = v2 + 2;
          v36[5] = v2 + 2;
          sub_1AE925F74();
          v3 = v36;
          swift_bridgeObjectRelease();
          ++v2;
        }
        if (v20 == 5)
          goto LABEL_37;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v3[5] = ++v2;
      if (v2 >= v4)
        goto LABEL_35;
    }
    v7 = v6;
    if (v6 < 1)
    {
      v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      sub_1AE501548(&qword_1ED31AD40);
      v8 = (_QWORD *)swift_allocObject();
      v9 = j__malloc_size(v8);
      v8[2] = v7;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 16);
    }
    v10 = v7 & ~(v7 >> 63);
    swift_bridgeObjectRetain();
    v11 = 4;
    while (v10)
    {
      v12 = sub_1AE925F98();
      if (!v13)
        goto LABEL_51;
      v14 = &v8[v11];
      *v14 = v12;
      v14[1] = v13;
      --v10;
      v11 += 2;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        v4 = v37;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    sub_1AE523D90();
    v32 = v31;
    swift_bridgeObjectRelease();
    if (v2 < (uint64_t)v35)
      goto LABEL_52;
    if ((v35 & 0x8000000000000000) == 0)
    {
      v33 = *(_QWORD *)(v32 + 16);
      if (v33 >= v35 && v33 >= v2)
      {
        sub_1AE501548((uint64_t *)&unk_1ED30FCC0);
        sub_1AE803330();
        sub_1AE925F5C();
        swift_release();
        v3[5] = v2 + 1;
        return 6;
      }
      goto LABEL_54;
    }
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1AE802FFC()
{
  _QWORD *v0;
  int64_t v1;
  int64_t v2;
  _QWORD *v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t result;
  int64_t v30;
  _QWORD *v31;
  int64_t v32;

  v1 = v0[5];
  v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
LABEL_36:
    __break(1u);
LABEL_37:
    result = swift_bridgeObjectRelease();
    __break(1u);
LABEL_38:
    __break(1u);
  }
  else
  {
    v3 = v0;
    v0[5] = v2;
    v32 = v0[4];
    if (v2 >= v32)
    {
      return 10;
    }
    else
    {
      v30 = v1;
      v31 = v0;
      v4 = *v0;
      v5 = v1 + 1;
      while (1)
      {
        swift_bridgeObjectRetain();
        v6 = sub_1AE925F20();
        if (v6)
        {
          v7 = v6;
          if (v6 < 1)
          {
            v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          }
          else
          {
            sub_1AE501548(&qword_1ED31AD40);
            v8 = (_QWORD *)swift_allocObject();
            v9 = j__malloc_size(v8);
            v8[2] = v7;
            v8[3] = 2 * ((uint64_t)(v9 - 32) / 16);
          }
          v10 = v7 & ~(v7 >> 63);
          swift_bridgeObjectRetain();
          v11 = 4;
          while (v10)
          {
            v12 = sub_1AE925F98();
            if (!v13)
              goto LABEL_37;
            v14 = &v8[v11];
            *v14 = v12;
            v14[1] = v13;
            --v10;
            v11 += 2;
            if (!--v7)
            {
              swift_bridgeObjectRelease();
              v3 = v31;
              goto LABEL_14;
            }
          }
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_14:
        swift_bridgeObjectRelease();
        if (v2 < 0)
          goto LABEL_34;
        if ((unint64_t)v5 >= v8[2])
          goto LABEL_35;
        v15 = &v8[2 * v5];
        v16 = v15[4];
        v17 = v15[5];
        swift_bridgeObjectRetain();
        swift_release();
        if (*(_QWORD *)(v4 + 16) && (v18 = sub_1AE537024(v16, v17), (v19 & 1) != 0))
          v20 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 56) + v18);
        else
          v20 = 6;
        swift_bridgeObjectRelease();
        if (qword_1ED30FB38 != -1)
          swift_once();
        sub_1AE551C0C(v20, qword_1ED30FB28);
        if ((v21 & 1) != 0 || v20 == 9)
          break;
        v3[5] = ++v5;
        if (v5 >= v32)
          return 10;
      }
      swift_bridgeObjectRetain();
      sub_1AE523D90();
      v23 = v22;
      swift_bridgeObjectRelease();
      result = v30;
      if (v5 <= v30)
        goto LABEL_38;
      sub_1AE801F20(v30, v5 - 1, v23);
      swift_release();
      sub_1AE501548((uint64_t *)&unk_1ED30FCC0);
      sub_1AE803330();
      v24 = sub_1AE926028();
      v26 = v25;
      v27 = v3[1];
      swift_bridgeObjectRetain();
      v28 = sub_1AE515CEC(v24, v26, v27);
      swift_bridgeObjectRelease();
      result = 6;
      if (v28 != 20)
      {
        if ((_BYTE)v28)
          return v28;
        else
          return 6;
      }
    }
  }
  return result;
}

unint64_t sub_1AE803330()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED30FCB8;
  if (!qword_1ED30FCB8)
  {
    v1 = sub_1AE523CF0((uint64_t *)&unk_1ED30FCC0);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEBF78], v1);
    atomic_store(result, (unint64_t *)&qword_1ED30FCB8);
  }
  return result;
}

uint64_t sub_1AE803374()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8033A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE803408(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t sub_1AE8034AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t sub_1AE803518(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 65))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1AE803558(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for LexerV2()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE8035B8(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v4;

  v4 = a4 >> 5;
  if (v4 == 4 || v4 == 3)
    return swift_bridgeObjectRetain();
  if (!(a4 >> 5))
    return sub_1AE8035E0(result, a2, a3, a4);
  return result;
}

uint64_t sub_1AE8035E0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1AE8035F8(uint64_t a1)
{
  return sub_1AE80360C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_1AE80360C(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v4;

  v4 = a4 >> 5;
  if (v4 == 4 || v4 == 3)
    return swift_bridgeObjectRelease();
  if (!(a4 >> 5))
    return sub_1AE803634(result, a2, a3, a4);
  return result;
}

uint64_t sub_1AE803634(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_1AE80364C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_1AE805E88(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1AE8035B8);
}

void sub_1AE803658(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1AE805EF0(a1, a2, a3, (uint64_t)sub_1AE8035B8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE80360C);
}

uint64_t *sub_1AE80366C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE805F58(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE80360C);
}

uint64_t sub_1AE803678(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x39 && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 56;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 24) >> 5) & 0xFFFFFFC7 | (8 * ((*(unsigned __int8 *)(a1 + 24) >> 2) & 7))) ^ 0x3F;
      if (v2 >= 0x38)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1AE8036C4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x38)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 57;
    if (a3 >= 0x39)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x39)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_BYTE *)(result + 24) = 4 * (((-a2 >> 3) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1AE803720(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 24) >> 5;
  if (v1 == 7)
    return (*(_DWORD *)a1 + 7);
  else
    return v1;
}

uint64_t sub_1AE80373C(uint64_t result)
{
  *(_BYTE *)(result + 24) &= 0x1Fu;
  return result;
}

uint64_t sub_1AE80374C(uint64_t result, unsigned int a2)
{
  char v2;

  if (a2 < 7)
  {
    v2 = *(_BYTE *)(result + 24) & 3 | (32 * a2);
  }
  else
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 7;
    v2 = -32;
  }
  *(_BYTE *)(result + 24) = v2;
  return result;
}

void type metadata accessor for LexerV2.Token()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE803784(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1AE8037B4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_1AE58FB10);
}

uint64_t sub_1AE803790(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1AE8037B4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_1AE58FC3C);
}

uint64_t sub_1AE80379C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1AE8037B4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_1AE5924A8);
}

uint64_t sub_1AE8037A8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1AE8037B4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_1AE59253C);
}

uint64_t sub_1AE8037B4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, unint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((a4 & 1) == 0)
    goto LABEL_2;
  sub_1AE509230();
  swift_unknownObjectRetain_n();
  v11 = swift_dynamicCastClass();
  if (!v11)
  {
    sub_1AE50327C();
    v11 = MEMORY[0x1E0DEE9D8];
  }
  v12 = *(_QWORD *)(v11 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v12 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    v10 = a5(a1, a2, a3, a4);
    goto LABEL_9;
  }
  v10 = swift_dynamicCastClass();
  if (!v10)
  {
    sub_1AE50327C();
    v10 = MEMORY[0x1E0DEE9D8];
  }
LABEL_9:
  sub_1AE50327C();
  return v10;
}

uint64_t sub_1AE803894@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = HIBYTE(a2) & 0xF;
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  v4 = MEMORY[0x1E0DEE9D8];
  if ((a2 & 0x2000000000000000) == 0)
    v3 = result & 0xFFFFFFFFFFFFLL;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = v3;
  *(_QWORD *)(a3 + 32) = v4;
  *(_QWORD *)(a3 + 40) = 0;
  *(_QWORD *)(a3 + 48) = 0;
  *(_QWORD *)(a3 + 56) = 0;
  *(_BYTE *)(a3 + 64) = 0;
  return result;
}

double sub_1AE8038C4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  BOOL v33;
  BOOL v34;
  BOOL v35;
  BOOL v36;
  BOOL v37;
  BOOL v38;
  char v39;
  uint64_t v40;
  char v41;
  char v42;
  _QWORD *v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char v52;

  sub_1AE803D24();
  sub_1AE803F38();
  if (!v4)
  {
LABEL_44:
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    v18 = -4;
LABEL_85:
    *(_BYTE *)(a1 + 24) = v18;
    return result;
  }
  v6 = v3;
  v7 = v4;
  while (1)
  {
    v8 = v6 == 61 && v7 == 0xE100000000000000;
    if (v8 || (sub_1AE4FF1B4() & 1) != 0)
    {
      sub_1AE4F665C();
      sub_1AE80411C();
      if (!v20)
      {
LABEL_51:
        *(_QWORD *)a1 = 0;
        *(_QWORD *)(a1 + 8) = 0;
        *(_QWORD *)(a1 + 16) = 0;
        goto LABEL_84;
      }
      if (v19 == 61 && v20 == 0xE100000000000000)
      {
        sub_1AE4F665C();
      }
      else
      {
        v22 = sub_1AE4FB6F0();
        sub_1AE4F665C();
        if ((v22 & 1) == 0)
          goto LABEL_51;
      }
      sub_1AE803F38();
      swift_bridgeObjectRelease();
      sub_1AE80411C();
      if (v30)
      {
        if (v29 == 61 && v30 == 0xE100000000000000)
        {
          sub_1AE4F665C();
        }
        else
        {
          v32 = sub_1AE4FB6F0();
          sub_1AE4F665C();
          if ((v32 & 1) == 0)
            goto LABEL_72;
        }
        sub_1AE803F38();
        swift_bridgeObjectRelease();
        v28 = 2;
        goto LABEL_83;
      }
LABEL_72:
      v28 = 1;
      goto LABEL_83;
    }
    v9 = v6 == 33 && v7 == 0xE100000000000000;
    if (v9 || (sub_1AE4FF1B4() & 1) != 0)
    {
      sub_1AE4F665C();
      sub_1AE80411C();
      if (!v24)
        goto LABEL_58;
      if (v23 == 61 && v24 == 0xE100000000000000)
      {
        sub_1AE4F665C();
      }
      else
      {
        v26 = sub_1AE4FB6F0();
        sub_1AE4F665C();
        if ((v26 & 1) == 0)
        {
LABEL_58:
          v27 = *(_QWORD *)(v1 + 56);
          *(_QWORD *)a1 = 0xD000000000000012;
          *(_QWORD *)(a1 + 8) = 0x80000001AE987490;
          *(_QWORD *)(a1 + 16) = v27;
LABEL_59:
          *(_BYTE *)(a1 + 24) = 0;
          return result;
        }
      }
      v28 = 10;
LABEL_83:
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      *(_QWORD *)a1 = v28;
LABEL_84:
      v18 = -32;
      goto LABEL_85;
    }
    v10 = v6 == 44 && v7 == 0xE100000000000000;
    if (v10 || (sub_1AE4FF1B4() & 1) != 0)
    {
      sub_1AE4F665C();
      v28 = 3;
      goto LABEL_83;
    }
    v11 = v6 == 91 && v7 == 0xE100000000000000;
    if (v11 || (sub_1AE4FF1B4() & 1) != 0)
    {
      sub_1AE4F665C();
      v28 = 4;
      goto LABEL_83;
    }
    v12 = v6 == 93 && v7 == 0xE100000000000000;
    if (v12 || (sub_1AE4FF1B4() & 1) != 0)
    {
      sub_1AE4F665C();
      v28 = 5;
      goto LABEL_83;
    }
    v13 = v6 == 40 && v7 == 0xE100000000000000;
    if (v13 || (sub_1AE4FF1B4() & 1) != 0)
    {
      sub_1AE4F665C();
      v28 = 6;
      goto LABEL_83;
    }
    v14 = v6 == 41 && v7 == 0xE100000000000000;
    if (v14 || (sub_1AE4FF1B4() & 1) != 0)
    {
      sub_1AE4F665C();
      v28 = 7;
      goto LABEL_83;
    }
    v15 = v6 == 10 && v7 == 0xE100000000000000;
    if (!v15 && (sub_1AE4FF1B4() & 1) == 0)
      break;
    sub_1AE4F665C();
    sub_1AE803D24();
    sub_1AE803D24();
    sub_1AE803F38();
    v6 = v16;
    v7 = v17;
    if (!v17)
      goto LABEL_44;
  }
  v33 = v6 == 59 && v7 == 0xE100000000000000;
  if (v33 || (sub_1AE4FF1B4() & 1) != 0)
  {
    sub_1AE4F665C();
    v28 = 8;
    goto LABEL_83;
  }
  v34 = v6 == 46 && v7 == 0xE100000000000000;
  if (v34 || (sub_1AE4FF1B4() & 1) != 0)
  {
    sub_1AE4F665C();
    v28 = 9;
    goto LABEL_83;
  }
  v35 = v6 == 45 && v7 == 0xE100000000000000;
  if (v35 || (sub_1AE4FF1B4() & 1) != 0)
  {
    sub_1AE4F665C();
    v28 = 11;
    goto LABEL_83;
  }
  v36 = v6 == 43 && v7 == 0xE100000000000000;
  if (v36 || (sub_1AE4FF1B4() & 1) != 0)
  {
    sub_1AE4F665C();
    v28 = 12;
    goto LABEL_83;
  }
  v37 = v6 == 42 && v7 == 0xE100000000000000;
  if (v37 || (sub_1AE4FF1B4() & 1) != 0)
  {
    sub_1AE4F665C();
    v28 = 13;
    goto LABEL_83;
  }
  v38 = v6 == 47 && v7 == 0xE100000000000000;
  if (v38 || (sub_1AE4FF1B4() & 1) != 0)
  {
    sub_1AE4F665C();
    v28 = 14;
    goto LABEL_83;
  }
  sub_1AE50AC54();
  sub_1AE925D88();
  if ((v39 & 1) != 0)
  {
    v44 = v6 == 39 && v7 == 0xE100000000000000;
    if (!v44 && (sub_1AE4FF1B4() & 1) == 0)
    {
      sub_1AE50AC54();
      if ((sub_1AE925DA0() & 1) == 0)
      {
        sub_1AE925D94();
        sub_1AE4F665C();
        v49 = *(_QWORD *)(v1 + 56);
        *(_QWORD *)a1 = 0;
        *(_QWORD *)(a1 + 8) = 0xE000000000000000;
        *(_QWORD *)(a1 + 16) = v49;
        goto LABEL_59;
      }
      goto LABEL_128;
    }
    v45 = sub_1AE50AC54();
    sub_1AE804E9C(v45, v46, v47);
  }
  else
  {
    sub_1AE804344();
    if (!v40 || (sub_1AE925D88(), v42 = v41, sub_1AE4F76D8(), (v42 & 1) == 0))
    {
      sub_1AE50AC54();
      sub_1AE804950(v43);
      goto LABEL_129;
    }
LABEL_128:
    sub_1AE50AC54();
    sub_1AE8043D0(v48);
  }
LABEL_129:
  sub_1AE4F665C();
  result = *(double *)&v50;
  *(_OWORD *)a1 = v50;
  *(_QWORD *)(a1 + 16) = v51;
  *(_BYTE *)(a1 + 24) = v52;
  return result;
}

void sub_1AE803D24()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;

  while (1)
  {
    v2 = (_QWORD *)v0[4];
    if (v2[2])
    {
      v4 = v2[4];
      v3 = v2[5];
      sub_1AE4F66C4();
      sub_1AE4F76D8();
      v0[5] = v4;
      v0[6] = v3;
      sub_1AE4F66C4();
      goto LABEL_10;
    }
    v5 = v0[7];
    v6 = __OFADD__(v5, 1);
    v7 = v5 + 1;
    if (v6)
      break;
    v0[7] = v7;
    v8 = sub_1AE925F98();
    if (!v9)
      return;
    v10 = v8;
    v11 = v9;
    swift_bridgeObjectRelease();
    v0[5] = v10;
    v0[6] = v11;
    sub_1AE4F6A24();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE505FE4();
      sub_1AE519FB0();
      v2 = v27;
    }
    v12 = v2[2];
    if (v12 >= v2[3] >> 1)
    {
      sub_1AE519FB0();
      v2 = v28;
    }
    v2[2] = v12 + 1;
    v13 = &v2[2 * v12];
    v13[4] = v10;
    v13[5] = v11;
    v0[4] = v2;
LABEL_10:
    v14 = sub_1AE50AC54();
    v16 = sub_1AE805C10(v14, v15);
    if ((v16 & 0x100000000) != 0)
      goto LABEL_33;
    v17 = (v16 - 14) <= 0xFFFFFFFB && (v16 - 8232) >= 2;
    if (!v17 || (_DWORD)v16 == 133)
    {
      sub_1AE4F665C();
    }
    else
    {
      sub_1AE50AC54();
      v25 = sub_1AE925D4C();
      sub_1AE4F665C();
      if ((v25 & 1) == 0)
        return;
    }
    v18 = v2[2];
    if (v18)
    {
      v19 = v2[4];
      v20 = v2[5];
      sub_1AE509230();
      sub_1AE4F6A24();
      sub_1AE4F6708();
      if (!sub_1AE806114())
        sub_1AE4F6648();
      sub_1AE8060C4();
      if (v1 == v18 - 1)
      {
        v21 = sub_1AE806114();
        sub_1AE4F665C();
        if (!v21)
        {
          sub_1AE4F6648();
          v21 = MEMORY[0x1E0DEE9D8];
        }
      }
      else
      {
        sub_1AE4F6648();
        sub_1AE58F9B0();
        v21 = v26;
        sub_1AE4F665C();
      }
      sub_1AE4F6648();
      v0[4] = v21;
    }
    else
    {
      v22 = v0[7];
      v6 = __OFADD__(v22, 1);
      v23 = v22 + 1;
      if (v6)
        goto LABEL_32;
      v0[7] = v23;
      v19 = sub_1AE925F98();
      v20 = v24;
      sub_1AE4F665C();
    }
    v0[5] = v19;
    v0[6] = v20;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

void sub_1AE803F38()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (_QWORD *)v0[4];
  if (v1[2])
  {
    v2 = v1[4];
    v3 = v1[5];
    v4 = sub_1AE5BB1CC(1, (uint64_t)v1);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    swift_bridgeObjectRetain();
    v0[4] = sub_1AE8037B4(v4, v6, v8, v10, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_1AE58F9B0);
LABEL_5:
    swift_bridgeObjectRelease();
    v0[5] = v2;
    v0[6] = v3;
    swift_bridgeObjectRetain();
    return;
  }
  v11 = v0[7];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (!v12)
  {
    v0[7] = v13;
    v2 = sub_1AE925F98();
    v3 = v14;
    goto LABEL_5;
  }
  __break(1u);
}

void sub_1AE803FF8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  _QWORD v34[3];
  char v35;

  v3 = *(_QWORD *)(v1 + 72);
  if (*(_QWORD *)(v3 + 16))
  {
    v4 = *(_QWORD *)(v3 + 32);
    v5 = *(_QWORD *)(v3 + 40);
    v6 = *(_QWORD *)(v3 + 48);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v6;
    v7 = *(_BYTE *)(v3 + 56);
    *(_BYTE *)(a1 + 24) = v7;
    v8 = sub_1AE5BB1CC(1, v3);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v15 = sub_1AE505884();
    sub_1AE8035B8(v15, v16, v17, v18);
    *(_QWORD *)(v1 + 72) = sub_1AE8037B4(v8, v10, v12, v14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_1AE5924A8);
    sub_1AE805E40(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_BYTE *)(v1 + 104));
    *(_QWORD *)(v1 + 80) = v4;
    *(_QWORD *)(v1 + 88) = v5;
    *(_QWORD *)(v1 + 96) = v6;
    *(_BYTE *)(v1 + 104) = v7;
    v19 = sub_1AE505884();
    sub_1AE4FCB34(v19, v20, v21, v22);
  }
  else
  {
    v23 = *(_QWORD *)(v1 + 112);
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v1 + 112) = v25;
      sub_1AE8038C4((uint64_t)v34);
      v26 = v34[0];
      v27 = v34[1];
      v28 = v34[2];
      v29 = v35;
      sub_1AE805E40(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_BYTE *)(v1 + 104));
      *(_QWORD *)(v1 + 80) = v26;
      *(_QWORD *)(v1 + 88) = v27;
      *(_QWORD *)(v1 + 96) = v28;
      *(_BYTE *)(v1 + 104) = v29;
      *(_QWORD *)a1 = v26;
      *(_QWORD *)(a1 + 8) = v27;
      *(_QWORD *)(a1 + 16) = v28;
      *(_BYTE *)(a1 + 24) = v29;
      v30 = sub_1AE505884();
      sub_1AE805E54(v30, v31, v32, v33);
    }
  }
}

void sub_1AE80411C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (_QWORD *)v0[4];
  if (v1[2])
  {
    v2 = v1[4];
    v3 = v1[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v0[5] = v2;
    v0[6] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    v4 = v0[7];
    v5 = __OFADD__(v4, 1);
    v6 = v4 + 1;
    if (v5)
    {
      __break(1u);
    }
    else
    {
      v0[7] = v6;
      v7 = sub_1AE925F98();
      v9 = v8;
      if (v8)
      {
        swift_bridgeObjectRelease();
        v0[5] = v7;
        v0[6] = v9;
        swift_bridgeObjectRetain_n();
        sub_1AE8DD288();
        v10 = *(_QWORD *)(v0[4] + 16);
        sub_1AE8DD5D4(v10);
        v11 = v0[4];
        *(_QWORD *)(v11 + 16) = v10 + 1;
        v12 = v11 + 16 * v10;
        *(_QWORD *)(v12 + 32) = v7;
        *(_QWORD *)(v12 + 40) = v9;
        v0[4] = v11;
      }
    }
  }
}

void sub_1AE8041F8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];
  unsigned __int8 v32;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 72);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = *(_QWORD *)(v4 + 32);
    v6 = *(_QWORD *)(v4 + 40);
    v7 = *(_QWORD *)(v4 + 48);
    v8 = *(_QWORD *)(v2 + 80);
    v9 = *(_QWORD *)(v2 + 88);
    v10 = *(_QWORD *)(v2 + 96);
    v11 = *(_BYTE *)(v4 + 56);
    v12 = *(_BYTE *)(v2 + 104);
    v13 = sub_1AE8060B0();
    sub_1AE8035B8(v13, v14, v15, v16);
    sub_1AE805E40(v8, v9, v10, v12);
    *(_QWORD *)(v2 + 80) = v5;
    *(_QWORD *)(v2 + 88) = v6;
    *(_QWORD *)(v2 + 96) = v7;
    *(_BYTE *)(v2 + 104) = v11;
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 24) = v11;
    v17 = sub_1AE8060B0();
    sub_1AE4FCB34(v17, v18, v19, v20);
  }
  else
  {
    v21 = *(_QWORD *)(v1 + 112);
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(v1 + 112) = v23;
      sub_1AE8038C4((uint64_t)v31);
      v25 = v31[0];
      v24 = v31[1];
      v26 = v31[2];
      v27 = v32;
      if (v32 <= 0xFBu)
      {
        sub_1AE805E40(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_BYTE *)(v1 + 104));
        *(_QWORD *)(v1 + 80) = v25;
        *(_QWORD *)(v1 + 88) = v24;
        *(_QWORD *)(v1 + 96) = v26;
        *(_BYTE *)(v1 + 104) = v27;
        sub_1AE5088DC();
        sub_1AE5088DC();
        sub_1AE8DD510();
        v28 = *(_QWORD *)(*(_QWORD *)(v1 + 72) + 16);
        sub_1AE8DD87C(v28);
        v29 = *(_QWORD *)(v1 + 72);
        *(_QWORD *)(v29 + 16) = v28 + 1;
        v30 = v29 + 32 * v28;
        *(_QWORD *)(v30 + 32) = v25;
        *(_QWORD *)(v30 + 40) = v24;
        *(_QWORD *)(v30 + 48) = v26;
        *(_BYTE *)(v30 + 56) = v27;
        *(_QWORD *)(v1 + 72) = v29;
      }
      *(_QWORD *)a1 = v25;
      *(_QWORD *)(a1 + 8) = v24;
      *(_QWORD *)(a1 + 16) = v26;
      *(_BYTE *)(a1 + 24) = v27;
    }
  }
}

uint64_t sub_1AE804344()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1AE925F98();
  v3 = v2;
  if (v2)
  {
    swift_bridgeObjectRelease();
    v0[5] = v1;
    v0[6] = v3;
    swift_bridgeObjectRetain_n();
    sub_1AE8DD288();
    v4 = *(_QWORD *)(v0[4] + 16);
    sub_1AE8DD5D4(v4);
    v5 = v0[4];
    *(_QWORD *)(v5 + 16) = v4 + 1;
    v6 = v5 + 16 * v4;
    *(_QWORD *)(v6 + 32) = v1;
    *(_QWORD *)(v6 + 40) = v3;
    v0[4] = v5;
  }
  return v1;
}

char sub_1AE8043D0@<W0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  char result;
  uint64_t v29;
  uint64_t *v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t v37;
  char v38;

  v2 = v1;
  sub_1AE925D94();
  v3 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v4 = (_QWORD *)v2[4];
    if (v4[2])
    {
      v6 = v4[4];
      v5 = v4[5];
      sub_1AE4F6708();
      sub_1AE4F9038();
      v2[5] = v6;
      v2[6] = v5;
      sub_1AE4F6708();
    }
    else
    {
      sub_1AE80608C();
      if (v8)
      {
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      v9 = sub_1AE50A708(v7);
      if (!v10)
        goto LABEL_30;
      v6 = v9;
      v5 = v10;
      swift_bridgeObjectRelease();
      v2[5] = v6;
      v2[6] = v5;
      sub_1AE4F6A24();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE505FE4();
        sub_1AE519FB0();
        v4 = v26;
      }
      v12 = v4[2];
      v11 = v4[3];
      if (v12 >= v11 >> 1)
      {
        sub_1AE4FBAB0(v11);
        sub_1AE519FB0();
        v4 = v27;
      }
      v4[2] = v12 + 1;
      v13 = &v4[2 * v12];
      v13[4] = v6;
      v13[5] = v5;
      v2[4] = v4;
    }
    sub_1AE5061E4();
    if ((sub_1AE925DA0() & 1) == 0)
    {
      sub_1AE5061E4();
      sub_1AE925D88();
      if ((v14 & 1) != 0 && (v6 != 95 || v5 != 0xE100000000000000))
      {
        sub_1AE5061E4();
        if ((sub_1AE4FB6F0() & 1) == 0)
          break;
      }
    }
    v16 = sub_1AE5061E4();
    MEMORY[0x1AF453184](v16);
    sub_1AE4F76D8();
    v17 = v4[2];
    if (v17)
    {
      v18 = v4[4];
      v19 = v4[5];
      sub_1AE509230();
      sub_1AE4F6A24();
      swift_bridgeObjectRetain();
      v20 = sub_1AE8060F4();
      if (!v20)
      {
        sub_1AE4F81B8();
        v20 = v3;
      }
      v21 = *(_QWORD *)(v20 + 16);
      swift_release();
      if (v21 == v17 - 1)
      {
        v22 = sub_1AE8060F4();
        sub_1AE4F76D8();
        if (!v22)
        {
          sub_1AE4F81B8();
          v22 = v3;
        }
      }
      else
      {
        sub_1AE4F81B8();
        sub_1AE58F9B0();
        v22 = v25;
        sub_1AE4F76D8();
      }
      sub_1AE4F81B8();
      v2[4] = v22;
    }
    else
    {
      sub_1AE80608C();
      if (v8)
        goto LABEL_42;
      v18 = sub_1AE50A708(v23);
      v19 = v24;
      sub_1AE4F76D8();
    }
    v2[5] = v18;
    v2[6] = v19;
  }
  sub_1AE4F76D8();
LABEL_30:
  if ((sub_1AE4FB6F0() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v29 = 15;
    goto LABEL_32;
  }
  if ((sub_1AE4FB6F0() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v29 = 16;
    goto LABEL_32;
  }
  if ((sub_1AE4FB6F0() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v29 = 17;
    goto LABEL_32;
  }
  if ((sub_1AE4FB6F0() & 1) != 0)
  {
LABEL_43:
    result = swift_bridgeObjectRelease();
    v29 = 18;
LABEL_32:
    v30 = a1;
LABEL_33:
    v30[1] = 0;
    v30[2] = 0;
    *v30 = v29;
    v31 = -32;
    goto LABEL_34;
  }
  if ((sub_1AE4FB6F0() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v29 = 19;
    goto LABEL_32;
  }
  if ((sub_1AE4FB6F0() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v29 = 20;
    goto LABEL_32;
  }
  if ((sub_1AE4FB6F0() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v30 = a1;
    v29 = 21;
    goto LABEL_33;
  }
  if ((sub_1AE4FB6F0() & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v29 = 22;
    goto LABEL_32;
  }
  sub_1AE4F66C4();
  v32 = sub_1AE50AC54();
  sub_1AE792038(v32, v33, v34);
  if ((v38 & 1) != 0)
  {
    sub_1AE4F66C4();
    v35._countAndFlagsBits = sub_1AE50AC54();
    result = KGQ.Keyword.init(rawValue:)(v35).value;
    if (v37 == 17)
    {
      v30 = a1;
      *a1 = 0;
      a1[1] = 0xE000000000000000;
      a1[2] = 0;
      v31 = 0x80;
    }
    else
    {
      result = sub_1AE4F665C();
      v30 = a1;
      a1[1] = 0;
      a1[2] = 0;
      *a1 = v37;
      v31 = -96;
    }
  }
  else
  {
    result = sub_1AE4F665C();
    v30 = a1;
    a1[1] = 0;
    a1[2] = 0;
    *a1 = v37;
    v31 = -64;
  }
LABEL_34:
  *((_BYTE *)v30 + 24) = v31;
  return result;
}

void sub_1AE804950(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char v27;
  char v28;
  unsigned __int8 v29;
  uint64_t v30;

  sub_1AE925D94();
  v4 = (_QWORD *)v1[4];
  if (v4[2])
  {
    v5 = v4[4];
    v2 = v4[5];
    sub_1AE4F6730();
    sub_1AE4F9038();
    v1[5] = v5;
    v1[6] = v2;
    sub_1AE4F6730();
  }
  else
  {
    sub_1AE80608C();
    if (v7)
    {
      __break(1u);
      goto LABEL_44;
    }
    v8 = sub_1AE50A708(v6);
    if (!v9)
      goto LABEL_53;
    v5 = v8;
    v2 = v9;
    swift_bridgeObjectRelease();
    v1[5] = v5;
    v1[6] = v2;
    sub_1AE4F6A24();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE505FE4();
      sub_1AE519FB0();
      v4 = v22;
    }
    v11 = v4[2];
    v10 = v4[3];
    if (v11 >= v10 >> 1)
    {
      sub_1AE4FBAB0(v10);
      sub_1AE519FB0();
      v4 = v23;
    }
    v4[2] = v11 + 1;
    v12 = &v4[2 * v11];
    v12[4] = v5;
    v12[5] = v2;
    v1[4] = v4;
  }
  sub_1AE925D88();
  if ((v13 & 1) != 0)
  {
    v17 = v5 == 46 && v2 == 0xE100000000000000;
    if (v17 || (sub_1AE4FB6F0() & 1) != 0)
    {
      v18 = v4[2];
      if (v18)
      {
        sub_1AE509230();
        sub_1AE4F6A24();
        swift_bridgeObjectRetain();
        if (!sub_1AE50A100())
          sub_1AE4F67AC();
        sub_1AE8060C4();
        if (v3 == v18 - 1)
        {
          v19 = sub_1AE50A100();
          sub_1AE4F81B8();
          if (!v19)
          {
            sub_1AE4F67AC();
            v19 = MEMORY[0x1E0DEE9D8];
          }
        }
        else
        {
          sub_1AE4F67AC();
          sub_1AE5084A0();
          v19 = v24;
          sub_1AE4F81B8();
        }
        sub_1AE4F67AC();
        v1[4] = v19;
LABEL_35:
        sub_1AE508D0C();
      }
      sub_1AE80608C();
      if (!v7)
      {
        sub_1AE50A708(v20);
        sub_1AE4F81B8();
        goto LABEL_35;
      }
      __break(1u);
    }
    else
    {
      sub_1AE4F81B8();
    }
LABEL_53:
    sub_1AE4F9038();
LABEL_54:
    v26 = a1;
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    v27 = 2;
    goto LABEL_55;
  }
  v14 = v4[2];
  if (v14)
  {
    sub_1AE509230();
    sub_1AE4F6A24();
    swift_bridgeObjectRetain();
    if (!sub_1AE50A100())
      sub_1AE4F67AC();
    sub_1AE8060C4();
    if (v3 == v14 - 1)
    {
      v15 = sub_1AE50A100();
      sub_1AE4F81B8();
      if (!v15)
      {
        sub_1AE4F67AC();
        v15 = MEMORY[0x1E0DEE9D8];
      }
    }
    else
    {
      sub_1AE4F67AC();
      sub_1AE5084A0();
      v15 = v21;
      sub_1AE4F81B8();
    }
    sub_1AE4F67AC();
    v1[4] = v15;
LABEL_20:
    sub_1AE508D0C();
  }
  sub_1AE80608C();
  if (!v7)
  {
    sub_1AE50A708(v16);
    sub_1AE4F81B8();
    goto LABEL_20;
  }
LABEL_44:
  __break(1u);
  while (1)
  {
    sub_1AE4F92A4();
    if (!v17 & v28)
      break;
    sub_1AE4FD07C();
    if (!v17)
      break;
    v25 = v30 - v29;
    if (__OFSUB__(v30, v29))
      break;
    sub_1AE5077C4();
    if (v17)
      goto LABEL_41;
  }
  v25 = 0;
  LOBYTE(v2) = 1;
LABEL_41:
  sub_1AE4F9038();
  if ((v2 & 1) != 0)
    goto LABEL_54;
  v26 = a1;
  a1[1] = 0;
  a1[2] = 0;
  *a1 = v25;
  v27 = 32;
LABEL_55:
  *((_BYTE *)v26 + 24) = v27;
  sub_1AE806070();
}

void sub_1AE804E9C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  BOOL v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v21;
  BOOL v22;
  size_t v24;
  char v26;

  v4 = v3;
  v5 = a1 == 39 && a2 == 0xE100000000000000;
  if (!v5 && (sub_1AE4FB6F0() & 1) == 0)
    sub_1AE925D94();
  v6 = 0;
  v8 = v3[5];
  v7 = v3[6];
  while (1)
  {
    v9 = (_QWORD *)v4[4];
    v10 = v9[2];
    if (!v10)
      break;
    v11 = v9[4];
    v12 = v9[5];
    sub_1AE509230();
    sub_1AE4F6A24();
    sub_1AE4F67A4();
    v13 = swift_dynamicCastClass();
    if (!v13)
    {
      sub_1AE4F9038();
      v13 = MEMORY[0x1E0DEE9D8];
    }
    v14 = *(_QWORD *)(v13 + 16);
    swift_release();
    v15 = v10 - 1;
    if (v14 != v15)
    {
      swift_bridgeObjectRelease();
      if (v15)
      {
        sub_1AE501548(&qword_1ED31AD40);
        v16 = (_QWORD *)swift_allocObject();
        v24 = j__malloc_size(v16);
        v16[2] = v15;
        v16[3] = 2 * ((uint64_t)(v24 - 32) / 16);
        if (v9 + 6 < &v16[2 * v15 + 4] && v16 + 4 < &v9[2 * v15 + 6])
          goto LABEL_59;
        swift_arrayInitWithCopy();
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    v16 = (_QWORD *)swift_dynamicCastClass();
    if (!v16)
    {
      sub_1AE4F9038();
LABEL_16:
      v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
LABEL_17:
    sub_1AE4F9038();
    sub_1AE4F81B8();
    v4[4] = v16;
    sub_1AE4F67A4();
    v8 = v11;
LABEL_21:
    v7 = v12;
    v21 = v8 == 39 && v12 == 0xE100000000000000;
    if ((v6 & 1) != 0)
    {
      if (!v21 && (sub_1AE4FB6F0() & 1) == 0)
      {
        v22 = v8 == 92 && v12 == 0xE100000000000000;
        if (!v22 && (sub_1AE4FB6F0() & 1) == 0)
        {
          sub_1AE4F6728();
          v4[5] = v8;
          v4[6] = v12;
          sub_1AE92691C();
          swift_bridgeObjectRelease();
          sub_1AE925F74();
          v26 = 0;
          v18 = v4[7];
LABEL_57:
          *(_QWORD *)a3 = 0;
          *(_QWORD *)(a3 + 8) = 0xE000000000000000;
          *(_QWORD *)(a3 + 16) = v18;
          *(_BYTE *)(a3 + 24) = v26;
          sub_1AE806070();
          return;
        }
      }
LABEL_44:
      MEMORY[0x1AF453184](v8, v12);
      sub_1AE4F6728();
      v6 = 0;
    }
    else
    {
      if (v21)
      {
        swift_bridgeObjectRelease();
        v8 = 39;
LABEL_55:
        v18 = 0;
        v4[5] = v8;
        v4[6] = v12;
        v26 = 96;
        goto LABEL_57;
      }
      if ((sub_1AE4FB6F0() & 1) != 0)
      {
        sub_1AE4F6728();
        goto LABEL_55;
      }
      if (v8 == 92 && v12 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        v6 = 1;
        v8 = 92;
      }
      else
      {
        if ((sub_1AE4FB6F0() & 1) == 0)
          goto LABEL_44;
        sub_1AE4F6728();
        v6 = 1;
      }
    }
  }
  v17 = v4[7];
  v18 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    v4[7] = v18;
    v8 = sub_1AE925F98();
    v12 = v19;
    sub_1AE4F81B8();
    if (!v12)
    {
      v4[5] = v8;
      v4[6] = 0;
      sub_1AE92691C();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      v26 = 0;
      goto LABEL_57;
    }
    sub_1AE4F67A4();
    goto LABEL_21;
  }
  __break(1u);
LABEL_59:
  v4[5] = v8;
  v4[6] = v7;
  sub_1AE926B20();
  __break(1u);
}

void sub_1AE80527C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE8052D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  char v9;
  char v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;

  if (v6 > 0x1F)
  {
    sub_1AE8035E0(v2, v3, v1, v7);
    v29 = sub_1AE8060CC();
LABEL_30:
    sub_1AE8035B8(v29, v30, v31, v32);
    sub_1AE4FE078();
LABEL_31:
    v10 = 0;
    return v10 & 1;
  }
  if (!v7)
  {
    if (v6)
      goto LABEL_21;
    if (v2 == v4 && v3 == v5)
    {
      sub_1AE4FBEE4(v2, v3);
      sub_1AE4F7A34(v2, v3);
    }
    else
    {
      v12 = sub_1AE4FB6F0();
      sub_1AE4FBEE4(v4, v5);
      sub_1AE4F7A34(v4, v5);
      if ((v12 & 1) == 0)
        goto LABEL_31;
    }
    if (v1 != v0)
      goto LABEL_31;
LABEL_29:
    v10 = 1;
    return v10 & 1;
  }
  if (v7 != 1)
  {
    if (v6 != 2 || v0 | v5 | v4)
      goto LABEL_21;
    v13 = sub_1AE806100();
    sub_1AE8035B8(v13, v14, v15, v16);
    v17 = sub_1AE8060E0();
    sub_1AE8035B8(v17, v18, v19, v20);
    v21 = sub_1AE8060E0();
    sub_1AE80360C(v21, v22, v23, v24);
    v25 = sub_1AE806100();
    sub_1AE80360C(v25, v26, v27, v28);
    goto LABEL_29;
  }
  if (v6 != 1)
  {
LABEL_21:
    v29 = sub_1AE509BC0();
    goto LABEL_30;
  }
  if (v2 == v4 && v3 == v5)
  {
    v10 = 1;
    sub_1AE501FB4(v2, v3);
    sub_1AE806120(v2, v3);
  }
  else
  {
    v9 = sub_1AE4FB6F0();
    v10 = 1;
    sub_1AE501FB4(v4, v5);
    sub_1AE806120(v4, v5);
    if ((v9 & 1) == 0)
      goto LABEL_31;
  }
  if (v1 != v0)
    goto LABEL_31;
  return v10 & 1;
}

BOOL sub_1AE805A60(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char v11;
  _BOOL8 result;

  if (a4)
  {
    if (a4 != 1)
      return a8 == 2 && !(a6 | a5 | a7);
    if (a8 != 1)
      return 0;
  }
  else if (a8)
  {
    return 0;
  }
  if (a1 == a5 && a2 == a6)
    return a3 == a7;
  v11 = sub_1AE4FB6F0();
  result = 0;
  if ((v11 & 1) != 0)
    return a3 == a7;
  return result;
}

BOOL sub_1AE805B04(uint64_t a1, uint64_t a2)
{
  return sub_1AE805A60(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

unint64_t sub_1AE805B28(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v12[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v12[2] = v3;
      v12[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v12[0] = a2;
        v12[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v12 + v5) & 0xC0) == 0x80)
        {
          do
            sub_1AE806098();
          while (v9);
          return v8 << 16;
        }
      }
      else
      {
        if ((a2 & 0x1000000000000000) != 0)
        {
          v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
          v7 = a2 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          v11 = result >> 16;
          v6 = sub_1AE926994();
          v5 = v11;
        }
        if (v5 != v7 && (*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
        {
          do
            sub_1AE806098();
          while (v9);
          return v8 << 16;
        }
      }
      v8 = v5;
      return v8 << 16;
    }
    v10 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v10 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v10)
      return sub_1AE926904();
  }
  return result;
}

unint64_t sub_1AE805C10(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unsigned int v5;

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_1AE805CE8(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v5 = sub_1AE926910();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
      {
        sub_1AE50AC54();
        sub_1AE926994();
      }
      v5 = sub_1AE9269A0();
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_1AE805CE8(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_1AE805D84(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_1AE805B28(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_1AE805D84(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_1AE5BBF68(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

uint64_t sub_1AE805DF4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v5;

  v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2)
      return 0;
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  v5 = __OFADD__(result, a2);
  result += a2;
  if (v5)
    goto LABEL_14;
  return result;
}

uint64_t sub_1AE805E40(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0xFBu)
    return sub_1AE80360C(result, a2, a3, a4);
  return result;
}

uint64_t sub_1AE805E54(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0xFBu)
    return sub_1AE8035B8(result, a2, a3, a4);
  return result;
}

uint64_t sub_1AE805E68(uint64_t a1)
{
  return sub_1AE803634(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_1AE805E7C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_1AE805E88(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1AE8035E0);
}

void sub_1AE805E88(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v6, v7, v8);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  sub_1AE4FCDD0();
}

void sub_1AE805EDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1AE805EF0(a1, a2, a3, (uint64_t)sub_1AE8035E0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE803634);
}

void sub_1AE805EF0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = *((_BYTE *)a2 + 24);
  v11 = sub_1AE505884();
  v12(v11);
  v13 = *a1;
  v14 = a1[1];
  v15 = a1[2];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  v16 = *((unsigned __int8 *)a1 + 24);
  *((_BYTE *)a1 + 24) = v10;
  a5(v13, v14, v15, v16);
  sub_1AE4FCDD0();
}

uint64_t *sub_1AE805F4C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE805F58(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE803634);
}

uint64_t *sub_1AE805F58(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v8 = *a1;
  v10 = a1[1];
  v9 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v6;
  v11 = *((unsigned __int8 *)a1 + 24);
  *((_BYTE *)a1 + 24) = v7;
  a4(v8, v10, v9, v11);
  return a1;
}

uint64_t sub_1AE805FA8(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1AE805FE8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AE806030(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1AE806048(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

void type metadata accessor for LexerError()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE8060B0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE8060C4()
{
  return swift_release();
}

uint64_t sub_1AE8060CC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE8060E0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE8060F4()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1AE806100()
{
  return 0;
}

uint64_t sub_1AE806114()
{
  return swift_dynamicCastClass();
}

uint64_t sub_1AE806120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AE80360C(a1, a2, v2, 1u);
}

uint64_t sub_1AE80612C(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806168(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F7D0, type metadata accessor for CustomGraphTransportationActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphTransportationActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE8061A4(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F538, type metadata accessor for CustomGraphWorkingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphWorkingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE8061E0(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F4A0, type metadata accessor for CustomGraphMeetingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphMeetingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE80621C(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F3E8, type metadata accessor for CustomGraphEatingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphEatingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806258(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F6F0, type metadata accessor for CustomGraphWatchingTVActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphWatchingTVActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806294(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F788, type metadata accessor for CustomGraphCommunicatingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphCommunicatingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE8062D0(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F5A0, type metadata accessor for CustomGraphShoppingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphShoppingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE80630C(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F718, type metadata accessor for CustomGraphMindfulnessActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphMindfulnessActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806348(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F5C0, type metadata accessor for CustomGraphSleepingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSleepingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806384(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F638, type metadata accessor for CustomGraphTravelingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphTravelingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE8063C0(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F4D0, type metadata accessor for CustomGraphReadingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphReadingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE8063FC(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F768, type metadata accessor for CustomGraphVacationingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphVacationingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806438(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F408, type metadata accessor for CustomGraphGamingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphGamingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806474(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F740, type metadata accessor for CustomGraphSocializingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSocializingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE8064B0(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F5E8, type metadata accessor for CustomGraphWakingUpActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphWakingUpActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE8064EC(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F680, type metadata accessor for CustomGraphGoingToBedActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphGoingToBedActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806528(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F658, type metadata accessor for CustomGraphExercisingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphExercisingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806564(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F450, type metadata accessor for CustomGraphCommuteActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphCommuteActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE8065A0(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F3C0, type metadata accessor for CustomGraphDiningActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphDiningActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE8065DC(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F7F0, type metadata accessor for CustomGraphAttendingAPerformanceActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphAttendingAPerformanceActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806618(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F6C8, type metadata accessor for CustomGraphStationaryActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphStationaryActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806654(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F7A8, type metadata accessor for CustomGraphLocationVisitActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphLocationVisitActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806690(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F518, type metadata accessor for CustomGraphWalkingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphWalkingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE8066CC(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F4F0, type metadata accessor for CustomGraphRunningActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphRunningActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806708(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F618, type metadata accessor for CustomGraphBicyclingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphBicyclingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806744(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F430, type metadata accessor for CustomGraphHikingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphHikingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806780(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F6A8, type metadata accessor for CustomGraphOnThePhoneActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphOnThePhoneActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE8067BC(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F580, type metadata accessor for CustomGraphFacetimeActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphFacetimeActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE8067F8(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F478, type metadata accessor for CustomGraphDrivingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphDrivingActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AE806834(uint64_t a1)
{
  uint64_t result;

  result = sub_1AE512FA0(&qword_1ED30F560, type metadata accessor for CustomGraphBehaviorActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphBehaviorActivityEvent);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void CustomLifeEventContext.__allocating_init<>()()
{
  void *v0;

  if (qword_1ED31C9B0 != -1)
    swift_once();
  v0 = (void *)qword_1ED31C9A0;
  sub_1AE4F6738();
  CustomLifeEventContext.init<>(viewService:)(v0);
  sub_1AE4FC4F8();
}

void CustomLifeEventContext.earliestActivityEvent()()
{
  sub_1AE806910((void (*)(uint64_t, uint64_t, uint64_t))sub_1AE656300);
}

void CustomLifeEventContext.latestActivityEvent()()
{
  sub_1AE806910((void (*)(uint64_t, uint64_t, uint64_t))sub_1AE6562E4);
}

void sub_1AE806910(void (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1AE4FEE3C();
  v3 = sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  a1(v2, v2, v3);
  sub_1AE4FB76C();
}

void CustomLifeEventContext.enumerateActivityEvents<>(overlapping:order:using:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AE807708(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE656168);
}

{
  sub_1AE807708(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE656148);
}

{
  sub_1AE807708(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE656188);
}

{
  sub_1AE807708(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE6561A8);
}

{
  sub_1AE807708(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE6561C8);
}

uint64_t CustomLifeEventContext.enumerateActivityEvents<>(whose:in:order:using:)(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1AE807300(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655FE8);
}

{
  return sub_1AE807300(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655FC4);
}

{
  return sub_1AE807300(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65600C);
}

{
  return sub_1AE807300(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE656030);
}

{
  return sub_1AE807300(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE656054);
}

void CustomLifeEventContext.enumerateActivityEvents<>(order:using:)()
{
  sub_1AE4FEE3C();
  sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  sub_1AE655EF4();
  sub_1AE4FD94C();
}

uint64_t CustomLifeEventContext.entryView.getter()
{
  return swift_retain();
}

void CustomLifeEventContext.__allocating_init<>(viewService:)(void *a1)
{
  sub_1AE4F6738();
  CustomLifeEventContext.init<>(viewService:)(a1);
  sub_1AE4FC4F8();
}

uint64_t CustomLifeEventContext.__allocating_init(context:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1AE4F6744();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, a1, v4);
  if (qword_1ED31C9B0 != -1)
    swift_once();
  v6 = CustomLifeEventContext.__allocating_init(context:viewService:)(v2, (id)qword_1ED31C9A0);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v6;
}

uint64_t CustomLifeEventContext.__allocating_init(context:viewService:)(uint64_t a1, void *a2)
{
  uint64_t v4;

  v4 = sub_1AE4F6738();
  CustomLifeEventContext.init(context:viewService:)(a1, a2);
  return v4;
}

uint64_t CustomLifeEventContext.init(context:viewService:)(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  void (*v12)(uint64_t, uint64_t);

  v5 = v2;
  v8 = *(_QWORD *)(*(_QWORD *)v5 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1AE4F6744();
  v10 = sub_1AE5061E4();
  v11(v10);
  type metadata accessor for LifeEventView();
  sub_1AE4F6738();
  LifeEventView.init(viewService:)(a2);
  if (!v3)
  {
    sub_1AE512FA0(&qword_1EEDA3808, (uint64_t (*)(uint64_t))type metadata accessor for LifeEventView, (uint64_t)&unk_1AE95EFC0);
    type metadata accessor for EventBaseContext();
  }
  v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v12(a1, v8);
  v12(v4, v8);
  sub_1AE4FD960();
  return v5;
}

uint64_t CustomLifeEventContext.init<>(viewService:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  type metadata accessor for LifeEventView();
  sub_1AE4F6738();
  v5 = a1;
  v6 = LifeEventView.init(viewService:)(v5);
  if (v2)
  {

    sub_1AE4FD960();
  }
  else
  {
    v7 = v6;
    ViewService.subgraphView(name:tableName:batchSize:)(0xD000000000000011, 0x80000001AE9874F0, 0xD000000000000012, (void *)0x80000001AE987510, 10);
    sub_1AE501548((uint64_t *)&unk_1ED318930);
    swift_allocObject();
    v9 = swift_retain();
    v10 = sub_1AE527CC8(v9);
    swift_release();

    sub_1AE501548(&qword_1EED99130);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v7;
    *(_QWORD *)(v11 + 24) = v10;
    *(_QWORD *)(v3 + 16) = v11;
  }
  return v3;
}

void CustomLifeEventContext.activityEvents(order:)()
{
  sub_1AE4FEE3C();
  sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  sub_1AE655934();
  sub_1AE4FB76C();
}

void CustomLifeEventContext.activityEvents<A>(of:order:)()
{
  sub_1AE655934();
  sub_1AE4FD974();
}

void CustomLifeEventContext.activityEvents(whose:in:order:)(char *a1, uint64_t a2, char a3)
{
  sub_1AE806ED8(a1, a2, a3, (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE6559C0);
}

{
  sub_1AE806ED8(a1, a2, a3, (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE6559DC);
}

{
  sub_1AE806ED8(a1, a2, a3, (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE6559F8);
}

{
  sub_1AE806ED8(a1, a2, a3, (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655A14);
}

{
  sub_1AE806ED8(a1, a2, a3, (void (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655A30);
}

void CustomLifeEventContext.activityEvents<A>(of:whose:in:order:)(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  sub_1AE807034(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE6559C0);
}

{
  sub_1AE807034(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE6559DC);
}

{
  sub_1AE807034(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE6559F8);
}

{
  sub_1AE807034(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE655A14);
}

{
  sub_1AE807034(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE655A30);
}

void sub_1AE806ED8(char *a1, uint64_t a2, char a3, void (*a4)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v6 = a3 & 1;
  v7 = *a1;
  v8 = sub_1AE4FEE3C();
  v10 = v7;
  v9 = sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  a4(v8, &v10, a2, v6, v8, v9);
  sub_1AE508BA4();
}

void sub_1AE807034(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, char *, uint64_t, _QWORD, uint64_t, _QWORD))
{
  char v7;

  v7 = *a2;
  a7(a1, &v7, a3, a4 & 1, a5, *(_QWORD *)(a6 + 8));
  sub_1AE4FD974();
}

void CustomLifeEventContext.activityEvents(overlapping:order:)(uint64_t a1, char a2)
{
  sub_1AE8070B8(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655B18);
}

{
  sub_1AE8070B8(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655B34);
}

{
  sub_1AE8070B8(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655B50);
}

{
  sub_1AE8070B8(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655B6C);
}

{
  sub_1AE8070B8(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE655B88);
}

void CustomLifeEventContext.activityEvents<A>(of:overlapping:order:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_1AE8071F4(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE655B18);
}

{
  sub_1AE8071F4(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE655B34);
}

{
  sub_1AE8071F4(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE655B50);
}

{
  sub_1AE8071F4(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE655B6C);
}

{
  sub_1AE8071F4(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE655B88);
}

void sub_1AE8070B8(uint64_t a1, char a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = a2 & 1;
  v6 = sub_1AE4FEE3C();
  v7 = sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  a3(v6, a1, v5, v6, v7);
  sub_1AE4FD94C();
}

void sub_1AE8071F4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))
{
  a6(a1, a2, a3 & 1, a4, *(_QWORD *)(a5 + 8));
  sub_1AE4FD974();
}

uint64_t CustomLifeEventContext.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t CustomLifeEventContext.__deallocating_deinit()
{
  CustomLifeEventContext.deinit();
  return swift_deallocClassInstance();
}

void CustomLifeEventContext.enumerateActivityEvents<>(order:block:)()
{
  CustomLifeEventContext.enumerateActivityEvents<>(order:using:)();
  sub_1AE4FBA7C();
}

void CustomLifeEventContext.enumerateActivityEvents<A>(of:order:using:)()
{
  sub_1AE655EF4();
  sub_1AE4FD974();
}

void CustomLifeEventContext.enumerateActivityEvents<A>(of:order:block:)()
{
  CustomLifeEventContext.enumerateActivityEvents<A>(of:order:using:)();
  sub_1AE508BA4();
}

uint64_t sub_1AE807300(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v17;

  v11 = *a1;
  v12 = a3 & 1;
  v13 = type metadata accessor for CustomGraphActivityEvent(0);
  v17 = v11;
  v14 = sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  return a7(v13, &v17, a2, v12, a4, a5, v13, v14, a6);
}

uint64_t CustomLifeEventContext.enumerateActivityEvents<>(whose:in:order:block:)(char *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1AE527834(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1AE8080F8, (uint64_t (*)(char *, uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<>(whose:in:order:using:));
}

{
  return sub_1AE527834(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1AE8080F8, (uint64_t (*)(char *, uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<>(whose:in:order:using:));
}

{
  return sub_1AE527834(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1AE8080F8, (uint64_t (*)(char *, uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<>(whose:in:order:using:));
}

{
  return sub_1AE527834(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1AE8080F8, (uint64_t (*)(char *, uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<>(whose:in:order:using:));
}

{
  return sub_1AE527834(a1, a2, a3, a4, a5, a6, (uint64_t)sub_1AE8080F8, (uint64_t (*)(char *, uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<>(whose:in:order:using:));
}

void CustomLifeEventContext.enumerateActivityEvents<A>(of:whose:in:order:using:)(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1AE4F9658(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

{
  sub_1AE4F9658(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

{
  sub_1AE4F9658(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

{
  sub_1AE4F9658(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

{
  sub_1AE4F9658(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

void CustomLifeEventContext.enumerateActivityEvents<A>(of:whose:in:order:block:)(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1AE501FF0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FBA7C();
}

{
  sub_1AE501FF0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FBA7C();
}

{
  sub_1AE501FF0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FBA7C();
}

{
  sub_1AE501FF0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FBA7C();
}

{
  sub_1AE501FF0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FBA7C();
}

void sub_1AE807628(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t, char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))
{
  char v10;

  v10 = *a2;
  a10(a1, &v10, a3, a4 & 1, a5, a6, a7, *(_QWORD *)(a8 + 8), a9);
  sub_1AE4FBA7C();
}

uint64_t sub_1AE807694(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t, char *, uint64_t, _QWORD, uint64_t, _BYTE *))
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v12 = *v11;
  v24 = *a2;
  v14 = *(_QWORD *)(v12 + 80);
  v13 = *(_QWORD *)(v12 + 88);
  v17 = v14;
  v18 = a7;
  v19 = v13;
  v20 = a8;
  v21 = a9;
  v22 = a5;
  v23 = a6;
  return a11(a1, &v24, a3, a4 & 1, a10, v16);
}

void sub_1AE807708(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = a2 & 1;
  v12 = type metadata accessor for CustomGraphActivityEvent(0);
  v13 = sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  a6(v12, a1, v11, a3, a4, v12, v13, a5);
  sub_1AE4F667C();
}

void CustomLifeEventContext.enumerateActivityEvents<>(overlapping:order:block:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AE8079C4(a1, a2, a3, a4, a5, (uint64_t)sub_1AE8080F8, (void (*)(uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<>(overlapping:order:using:));
}

{
  sub_1AE8079C4(a1, a2, a3, a4, a5, (uint64_t)sub_1AE807CCC, (void (*)(uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<>(overlapping:order:using:));
}

{
  sub_1AE8079C4(a1, a2, a3, a4, a5, (uint64_t)sub_1AE8080F8, (void (*)(uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<>(overlapping:order:using:));
}

{
  sub_1AE8079C4(a1, a2, a3, a4, a5, (uint64_t)sub_1AE8080F8, (void (*)(uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<>(overlapping:order:using:));
}

{
  sub_1AE8079C4(a1, a2, a3, a4, a5, (uint64_t)sub_1AE8080F8, (void (*)(uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<>(overlapping:order:using:));
}

void CustomLifeEventContext.enumerateActivityEvents<A>(of:overlapping:order:using:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1AE808110(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE656148);
  sub_1AE4FC530();
}

{
  sub_1AE808110(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE656168);
  sub_1AE4FC530();
}

{
  sub_1AE808110(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE656188);
  sub_1AE4FC530();
}

{
  sub_1AE808110(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE6561A8);
  sub_1AE4FC530();
}

{
  sub_1AE808110(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE6561C8);
  sub_1AE4FC530();
}

void CustomLifeEventContext.enumerateActivityEvents<A>(of:overlapping:order:block:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1AE4F6D60(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<A>(of:overlapping:order:using:));
  sub_1AE4FC530();
}

{
  sub_1AE4F6D60(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<A>(of:overlapping:order:using:));
  sub_1AE4FC530();
}

{
  sub_1AE4F6D60(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<A>(of:overlapping:order:using:));
  sub_1AE4FC530();
}

{
  sub_1AE4F6D60(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<A>(of:overlapping:order:using:));
  sub_1AE4FC530();
}

{
  sub_1AE4F6D60(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD *))CustomLifeEventContext.enumerateActivityEvents<A>(of:overlapping:order:using:));
  sub_1AE4FC530();
}

void sub_1AE8079C4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, _QWORD, uint64_t, _QWORD *))
{
  _QWORD v7[4];

  v7[2] = a3;
  v7[3] = a4;
  a7(a1, a2 & 1, a6, v7);
  sub_1AE4FBA7C();
}

void sub_1AE8079EC(uint64_t a1, BOOL *a2, uint64_t (*a3)(char *))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;

  v7 = sub_1AE501548(&qword_1EED9F490);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE674DD0(a1, (uint64_t)v9);
  swift_storeEnumTagMultiPayload();
  v10 = a3(v9);
  sub_1AE674E14((uint64_t)v9);
  if (!v3)
    *a2 = (v10 & 1) == 0;
  sub_1AE4FD94C();
}

void sub_1AE807ACC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))
{
  a9(a1, a2, a3 & 1, a4, a5, a6, *(_QWORD *)(a7 + 8));
  sub_1AE4FD974();
}

void sub_1AE807B1C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD *))
{
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[10];

  v11 = *(_QWORD *)(*(_QWORD *)v10 + 88);
  v12[2] = *(_QWORD *)(*(_QWORD *)v10 + 80);
  v12[3] = a6;
  v12[4] = v11;
  v12[5] = a7;
  v12[6] = a8;
  v12[7] = a4;
  v12[8] = a5;
  a10(a1, a2, a3 & 1, a9, v12);
  sub_1AE508BA4();
}

void sub_1AE807B5C(uint64_t a1, BOOL *a2, uint64_t (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  _QWORD v16[2];

  sub_1AE523CF0((uint64_t *)&unk_1ED319C60);
  v11 = sub_1AE926F28();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))((char *)v16 - v12, a1, a6);
  swift_storeEnumTagMultiPayload();
  v14 = a3(v13);
  if (v6)
  {
    sub_1AE505380();
  }
  else
  {
    v15 = v14;
    sub_1AE505380();
    *a2 = (v15 & 1) == 0;
  }
  sub_1AE4F667C();
}

void CustomLifeEventContext.latestActivityEvent<A>(of:)()
{
  sub_1AE6562E4();
  sub_1AE4FD974();
}

void CustomLifeEventContext.earliestActivityEvent<A>(of:)()
{
  sub_1AE656300();
  sub_1AE4FD974();
}

void sub_1AE807C8C(uint64_t a1, BOOL *a2)
{
  sub_1AE807CA0(a1, a2);
}

void sub_1AE807CA0(uint64_t a1, BOOL *a2)
{
  uint64_t v2;

  sub_1AE807B5C(a1, a2, *(uint64_t (**)(char *))(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
  sub_1AE4FC530();
}

void sub_1AE807CCC(uint64_t a1, BOOL *a2)
{
  uint64_t v2;

  sub_1AE8079EC(a1, a2, *(uint64_t (**)(char *))(v2 + 16));
}

uint64_t sub_1AE807CE4()
{
  return sub_1AE512FA0(&qword_1EEDA3808, (uint64_t (*)(uint64_t))type metadata accessor for LifeEventView, (uint64_t)&unk_1AE95EFC0);
}

uint64_t sub_1AE807D10(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v5 = *a3;
  *(_QWORD *)(a1 + 8) = MEMORY[0x1AF454B70](&unk_1AE95DD90);
  v7 = v5;
  result = MEMORY[0x1AF454B70](&protocol conformance descriptor for <> CustomLifeEventContext<A>, a2, &v7);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AE807D70(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1AF454B70](&protocol conformance descriptor for CustomLifeEventContext<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for CustomLifeEventContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CustomLifeEventContext);
}

uint64_t method lookup function for CustomLifeEventContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CustomLifeEventContext.__allocating_init(context:viewService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of CustomLifeEventContext.__allocating_init<>(viewService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_1AE807DE4()
{
  type metadata accessor for LifeEventEntryView();
  type metadata accessor for CustomGraphActivityEvent(255);
  swift_getAssociatedTypeWitness();
  sub_1AE4FCE04();
  sub_1AE4FE8A0();
  sub_1AE4FE8A0();
  sub_1AE4FCE04();
  sub_1AE4FCE04();
  sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  sub_1AE4FE8A0();
  sub_1AE4FCE04();
  sub_1AE808118();
}

void sub_1AE807F24(uint64_t a1)
{
  sub_1AE512FA0(&qword_1EED99140, (uint64_t (*)(uint64_t))type metadata accessor for LifeEventEntryView, (uint64_t)&unk_1AE95E320);
  MEMORY[0x1AF454B70](&unk_1AE96DA70, a1);
  sub_1AE5088F0();
}

void sub_1AE807F6C(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE948C04, a1);
  sub_1AE4F778C();
}

void sub_1AE807F84()
{
  type metadata accessor for LifeEventEntryView();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1AE4FE0A8();
  sub_1AE4FE0A8();
  sub_1AE5061E4();
  sub_1AE508D20();
  sub_1AE5061E4();
  sub_1AE508D20();
  sub_1AE4FE0A8();
  sub_1AE5061E4();
  sub_1AE508D20();
  sub_1AE808118();
}

void sub_1AE808098(uint64_t a1)
{
  sub_1AE512FA0(&qword_1EED99140, (uint64_t (*)(uint64_t))type metadata accessor for LifeEventEntryView, (uint64_t)&unk_1AE95E320);
  MEMORY[0x1AF454B70](&unk_1AE96DA70, a1);
  sub_1AE5088F0();
}

void sub_1AE8080E0(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE948C04, a1);
  sub_1AE4F778C();
}

void sub_1AE8080F8(uint64_t a1, BOOL *a2)
{
  sub_1AE807CCC(a1, a2);
}

void sub_1AE808110(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void (*a9)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD)@<X8>)
{
  sub_1AE807ACC(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1AE808118()
{
  type metadata accessor for TypedGraphObjectSequence.Iterator();
}

uint64_t LifeEventEntry.startDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1AE4F675C();
  v0 = sub_1AE4FBC98();
  return sub_1AE4FD010(v0, v1, v2, v3);
}

uint64_t LifeEventEntry.endDate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_1AE4F675C();
  v0 = sub_1AE4FBC98();
  return sub_1AE4FD010(v0, v1, v2, v3);
}

void LifeEventEntry.entityClass.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  EntityClass.init(intValue:)(*(_BYTE *)(v2 + 7), (uint64_t)&v13);
  v5 = v14;
  if (v14)
  {
    v6 = v17;
    v8 = v15;
    v7 = v16;
    *(_QWORD *)a2 = v13;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v8;
    *(_QWORD *)(a2 + 24) = v7;
    *(_BYTE *)(a2 + 32) = v6;
  }
  else
  {
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v9 = sub_1AE925B6C();
    sub_1AE4FB608(v9, (uint64_t)qword_1ED31BC90);
    v10 = sub_1AE925B54();
    v11 = sub_1AE9265F8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1AE4F2000, v10, v11, "LifeEventEntry: entityClass: id.untyped.entityClass is nil.", v12, 2u);
      MEMORY[0x1AF454C78](v12, -1, -1);
    }

    static GraphObjectBase.entityClass.getter(*(_QWORD *)(a1 + 16), *(_QWORD *)(*(_QWORD *)(a1 + 24) + 8));
  }
}

void LifeEventEntry.cast<A>(as:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v18 = a4;
  v8 = sub_1AE4F675C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v18 - v13;
  v21 = *(_QWORD *)v4;
  type metadata accessor for TypedEntityIdentifier(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v15);
  v19 = a3;
  v16 = v20;
  TypedEntityIdentifier.cast<A>(as:)(a2, a3, &v22);
  if (!v16)
  {
    v21 = v22;
    v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v17(v14, &v4[*(int *)(a1 + 36)], v8);
    v17(v12, &v4[*(int *)(a1 + 40)], v8);
    sub_1AE8083C8(&v21, (uint64_t)v14, (uint64_t)v12, a2, v19, v18);
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE8083C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v13)(char *, uint64_t, uint64_t);

  *a6 = *a1;
  v9 = type metadata accessor for LifeEventEntry(0, a4, a5, a4);
  v10 = (char *)a6 + *(int *)(v9 + 36);
  v11 = sub_1AE4F675C();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v13(v10, a2, v11);
  return ((uint64_t (*)(char *, uint64_t, uint64_t))v13)((char *)a6 + *(int *)(v9 + 40), a3, v11);
}

uint64_t sub_1AE808464(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE95E1C0, a1);
  return sub_1AE926F94();
}

uint64_t sub_1AE808498(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE95E1C0, a1);
  return sub_1AE926FA0();
}

uint64_t static LifeEventEntry.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v6 = *a1;
  v9 = *a2;
  v10 = v6;
  if (static TypedEntityIdentifier.== infix(_:_:)(&v10, &v9)
    && (type metadata accessor for LifeEventEntry(0, a3, a4, v7), (sub_1AE924894() & 1) != 0))
  {
    return sub_1AE924894();
  }
  else
  {
    return 0;
  }
}

void LifeEventEntry.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = type metadata accessor for LifeEventEntry.CodingKeys(255, v5, v6, a4);
  MEMORY[0x1AF454B70](&unk_1AE95E1C0, v7);
  v8 = sub_1AE926CF4();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE926F4C();
  type metadata accessor for TypedEntityIdentifier(0, v5, v6, v9);
  sub_1AE5032DC();
}

void sub_1AE808668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 - 96);
  sub_1AE926CC4();
  if (v3)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v0, v1);
  }
  else
  {
    v4 = *(_QWORD *)(v2 - 112);
    *(_BYTE *)(v2 - 82) = 1;
    sub_1AE4F675C();
    sub_1AE529874((unint64_t *)&qword_1ED30EB50, MEMORY[0x1E0CB0890]);
    sub_1AE500D58();
    *(_BYTE *)(v2 - 83) = 2;
    sub_1AE500D58();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v1);
  }
  sub_1AE4F667C();
}

void LifeEventEntry.init(from:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[7];
  uint64_t v10;

  v9[2] = a3;
  v10 = sub_1AE4F675C();
  v9[3] = *(_QWORD *)(v10 - 8);
  v5 = MEMORY[0x1E0C80A78](v10);
  v9[4] = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9[6] = (char *)v9 - v7;
  type metadata accessor for LifeEventEntry.CodingKeys(255, a1, a2, v8);
  sub_1AE5032DC();
}

void sub_1AE8087D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v13 = sub_1AE926C28();
  *(_QWORD *)(v12 - 112) = v13;
  *(_QWORD *)(v12 - 152) = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&a9 - v14;
  *(_QWORD *)(v12 - 128) = v10;
  *(_QWORD *)(v12 - 120) = v9;
  v17 = type metadata accessor for LifeEventEntry(0, v10, v9, v16);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  sub_1AE4F9858(v11, v11[3]);
  *(_QWORD *)(v12 - 104) = v15;
  v19 = *(_QWORD *)(v12 - 96);
  sub_1AE926F34();
  if (!v19)
  {
    *(_QWORD *)(v12 - 96) = v18;
    type metadata accessor for TypedEntityIdentifier(0, *(_QWORD *)(v12 - 128), *(_QWORD *)(v12 - 120), v20);
    *(_BYTE *)(v12 - 81) = 0;
    sub_1AE5032DC();
  }
  sub_1AE50AC10();
  sub_1AE4F667C();
}

uint64_t sub_1AE808A40@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;

  v6 = *a1;
  return sub_1AE8083C8(&v6, a2, a3, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), a5);
}

void sub_1AE808A70(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  LifeEventEntry.init(from:)(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

void sub_1AE808A8C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LifeEventEntry.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_1AE808AA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return static LifeEventEntry.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void sub_1AE808AAC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v9[16];
  uint64_t v10;

  v4 = sub_1AE501548(&qword_1EEDA3930);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *v1;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE809174();
  sub_1AE926F4C();
  v10 = v8;
  v9[15] = 0;
  sub_1AE52A494();
  sub_1AE926CC4();
  if (!v2)
  {
    v9[14] = 1;
    sub_1AE4FD144();
    v9[13] = 2;
    sub_1AE4FD144();
  }
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  sub_1AE4FEE48();
}

void sub_1AE808BE0(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = sub_1AE501548(&qword_1EEDA3920);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE809174();
  sub_1AE926F34();
  if (!v2)
  {
    sub_1AE52A458();
    sub_1AE926BEC();
    sub_1AE4FC7EC();
    v7 = v6;
    sub_1AE4FC7EC();
    v9 = v8;
    sub_1AE4F9250();
    *a2 = v10;
    a2[1] = v7;
    a2[2] = v9;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  sub_1AE4FEE48();
}

uint64_t sub_1AE808D30()
{
  sub_1AE809174();
  return sub_1AE926F94();
}

uint64_t sub_1AE808D58()
{
  sub_1AE809174();
  return sub_1AE926FA0();
}

void sub_1AE808D80(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1AE808BE0(a1, a2);
}

void sub_1AE808D94(_QWORD *a1)
{
  sub_1AE808AAC(a1);
}

uint64_t sub_1AE808DA8()
{
  sub_1AE80907C();
  return sub_1AE924DA4();
}

uint64_t sub_1AE808DF8()
{
  return 0x6E6576456566696CLL;
}

uint64_t type metadata accessor for LifeEventEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LifeEventEntry);
}

uint64_t type metadata accessor for LifeEventEntry.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LifeEventEntry.CodingKeys);
}

unint64_t sub_1AE808E38()
{
  unint64_t result;

  result = qword_1EEDA3810;
  if (!qword_1EEDA3810)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E1A4, &type metadata for LifeEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EEDA3810);
  }
  return result;
}

uint64_t sub_1AE808E74(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1AF454B70](&unk_1AE95DE88);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE808EA4()
{
  unint64_t result;

  result = qword_1EEDA3818[0];
  if (!qword_1EEDA3818[0])
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E188, &type metadata for LifeEventEntryRecord);
    atomic_store(result, qword_1EEDA3818);
  }
  return result;
}

uint64_t sub_1AE808EE0(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1AF454B70](&protocol conformance descriptor for LifeEventEntry<A>);
  a1[2] = MEMORY[0x1AF454B70](&protocol conformance descriptor for LifeEventEntry<A>, a2);
  result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LifeEventEntry<A>, a2);
  a1[3] = result;
  return result;
}

uint64_t sub_1AE808F38()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE808F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AE4F675C();
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1 + *(int *)(a3 + 36), a2, v6);
}

uint64_t sub_1AE808F84()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE808F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = sub_1AE4F675C();
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1 + *(int *)(a4 + 36), a2, a2, v7);
}

ValueMetadata *type metadata accessor for LifeEventEntryRecord()
{
  return &type metadata for LifeEventEntryRecord;
}

void sub_1AE808FE8()
{
  JUMPOUT(0x1AF454B70);
}

unint64_t sub_1AE808FFC()
{
  unint64_t result;

  result = qword_1EED99158;
  if (!qword_1EED99158)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E058, &type metadata for LifeEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED99158);
  }
  return result;
}

unint64_t sub_1AE809038(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1AE52F808();
  a1[2] = sub_1AE52F6E4();
  a1[3] = sub_1AE80907C();
  a1[4] = sub_1AE8090B8();
  result = sub_1AE8090F4();
  a1[5] = result;
  return result;
}

unint64_t sub_1AE80907C()
{
  unint64_t result;

  result = qword_1EED99160;
  if (!qword_1EED99160)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E160, &type metadata for LifeEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED99160);
  }
  return result;
}

unint64_t sub_1AE8090B8()
{
  unint64_t result;

  result = qword_1EED99148;
  if (!qword_1EED99148)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E138, &type metadata for LifeEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED99148);
  }
  return result;
}

unint64_t sub_1AE8090F4()
{
  unint64_t result;

  result = qword_1EED99150;
  if (!qword_1EED99150)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E080, &type metadata for LifeEventEntryRecord);
    atomic_store(result, (unint64_t *)&qword_1EED99150);
  }
  return result;
}

unint64_t sub_1AE809130(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE808EA4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1AE809154()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE809164()
{
  JUMPOUT(0x1AF454B70);
}

unint64_t sub_1AE809174()
{
  unint64_t result;

  result = qword_1EEDA3928;
  if (!qword_1EEDA3928)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E2C8, &type metadata for LifeEventEntryRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3928);
  }
  return result;
}

uint64_t _s20IntelligencePlatform20LifeEventEntryRecordV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE8091FC + 4 * byte_1AE95DE65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE809230 + 4 * asc_1AE95DE60[v4]))();
}

uint64_t sub_1AE809230(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE809238(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE809240);
  return result;
}

uint64_t sub_1AE80924C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE809254);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE809258(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE809260(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LifeEventEntryRecord.CodingKeys()
{
  return &type metadata for LifeEventEntryRecord.CodingKeys;
}

unint64_t sub_1AE809280()
{
  unint64_t result;

  result = qword_1EEDA3938;
  if (!qword_1EEDA3938)
  {
    result = MEMORY[0x1AF454B70]("azG7", &type metadata for LifeEventEntryRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3938);
  }
  return result;
}

unint64_t sub_1AE8092C0()
{
  unint64_t result;

  result = qword_1EEDA3940;
  if (!qword_1EEDA3940)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E210, &type metadata for LifeEventEntryRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3940);
  }
  return result;
}

unint64_t sub_1AE809300()
{
  unint64_t result;

  result = qword_1EEDA3948;
  if (!qword_1EEDA3948)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E238, &type metadata for LifeEventEntryRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3948);
  }
  return result;
}

uint64_t LifeEventEntryView.earliestActivityEventEntry<A>(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE809374(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE657E38);
}

uint64_t LifeEventEntryView.latestActivityEventEntry<A>(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AE809374(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1AE657E18);
}

uint64_t sub_1AE809374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;

  v5 = type metadata accessor for LifeEventEntry(0, a2, *(_QWORD *)(a3 + 8), (uint64_t)a4);
  v6 = MEMORY[0x1AF454B70](&unk_1AE95DE88, v5);
  return a4(v5, v5, v6);
}

uint64_t LifeEventEntryView.enumerateActivityEventEntries<A>(of:overlapping:order:using:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1AE809C50(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE657CCC);
}

{
  return sub_1AE809C50(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE657CA0);
}

{
  return sub_1AE809C50(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE657D64);
}

{
  return sub_1AE809C50(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE657DA0);
}

{
  return sub_1AE809C50(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE657DFC);
}

void LifeEventEntryView.enumerateActivityEventEntries<A>(of:whose:in:order:using:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1AE4FBF20(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE6578D0);
  sub_1AE4FC530();
}

{
  sub_1AE4FBF20(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE6578A0);
  sub_1AE4FC530();
}

{
  sub_1AE4FBF20(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE657A90);
  sub_1AE4FC530();
}

{
  sub_1AE4FBF20(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE657AB0);
  sub_1AE4FC530();
}

{
  sub_1AE4FBF20(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE657C80);
  sub_1AE4FC530();
}

void LifeEventEntryView.enumerateActivityEventEntries<A>(of:order:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1AE50ADF8(a1, a2, *(_QWORD *)(a6 + 8), a4, a5);
  sub_1AE505898();
}

void sub_1AE809460()
{
  sub_1AE657864();
}

void ViewService.lifeEventEntryView()()
{
  void *v0;

  type metadata accessor for LifeEventEntryView();
  sub_1AE4F6738();
  LifeEventEntryView.init(viewService:)(v0);
  sub_1AE4FC4F8();
}

void LifeEventEntryView.__allocating_init(viewService:)(void *a1)
{
  sub_1AE4F6738();
  LifeEventEntryView.init(viewService:)(a1);
  sub_1AE4FC4F8();
}

uint64_t type metadata accessor for LifeEventEntryView()
{
  return objc_opt_self();
}

uint64_t LifeEventEntryView.init(viewService:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = sub_1AE52A7D8();

  if (v2)
    swift_deallocPartialClassInstance();
  else
    *(_QWORD *)(v1 + 16) = v4;
  return v1;
}

void LifeEventEntryView.activityEventEntries(order:)(char a1)
{
  sub_1AE5032FC(a1);
  sub_1AE52AA20();
  sub_1AE4FD974();
}

void LifeEventEntryView.activityEventEntries<A>(of:order:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for LifeEventEntry(0, a3, *(_QWORD *)(a4 + 8), a4);
  MEMORY[0x1AF454B70](&unk_1AE95DE88, v4);
  sub_1AE657308();
}

void LifeEventEntryView.activityEventEntries(whose:in:order:)(unsigned __int8 *a1, uint64_t a2, char a3)
{
  sub_1AE80973C(a1, a2, a3, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_1AE52AAC0);
}

{
  sub_1AE80973C(a1, a2, a3, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_1AE52AC48);
}

{
  sub_1AE80973C(a1, a2, a3, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_1AE52ADE8);
}

{
  sub_1AE80973C(a1, a2, a3, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_1AE52AE20);
}

{
  sub_1AE80973C(a1, a2, a3, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_1AE52AF88);
}

void LifeEventEntryView.activityEventEntries<A>(of:whose:in:order:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1AE809770(a1, a2, a3, a4, a5, a6);
}

{
  sub_1AE809770(a1, a2, a3, a4, a5, a6);
}

{
  sub_1AE809770(a1, a2, a3, a4, a5, a6);
}

{
  sub_1AE809770(a1, a2, a3, a4, a5, a6);
}

{
  sub_1AE809770(a1, a2, a3, a4, a5, a6);
}

void sub_1AE80973C(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t (*a4)(_QWORD, uint64_t, _QWORD))
{
  sub_1AE4FCB50(a1, a2, a3, a4);
  sub_1AE4FD974();
}

void sub_1AE809770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1AE50ADF8(a1, a2, *(_QWORD *)(a6 + 8), a4, a5);
  sub_1AE505898();
}

uint64_t sub_1AE8097BC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  return v1(v4, &v6, v2, v3, v4, a1);
}

void LifeEventEntryView.activityEventEntries(overlapping:order:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE4FE8E0();
  sub_1AE52B118(v0, v1, v2, v3);
  sub_1AE4FD974();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE4FE8E0();
  sub_1AE52B158(v0, v1, v2, v3);
  sub_1AE4FD974();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE4FE8E0();
  sub_1AE52B198(v0, v1, v2, v3);
  sub_1AE4FD974();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE4FE8E0();
  sub_1AE52B1D8(v0, v1, v2, v3);
  sub_1AE4FD974();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE4FE8E0();
  sub_1AE52B258(v0, v1, v2, v3);
  sub_1AE4FD974();
}

void LifeEventEntryView.activityEventEntries<A>(of:overlapping:order:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AE80990C(a1, a2, a3, a4, a5);
}

{
  sub_1AE80990C(a1, a2, a3, a4, a5);
}

{
  sub_1AE80990C(a1, a2, a3, a4, a5);
}

{
  sub_1AE80990C(a1, a2, a3, a4, a5);
}

{
  sub_1AE80990C(a1, a2, a3, a4, a5);
}

void sub_1AE80990C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for LifeEventEntry(0, a4, *(_QWORD *)(a5 + 8), a4);
  sub_1AE505898();
}

uint64_t sub_1AE809954(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return v1(v4, v2, v3, v4, a1);
}

void LifeEventEntryView.enumerateActivityEventEntries(order:using:)(char a1)
{
  sub_1AE5032FC(a1);
  sub_1AE52B330();
  sub_1AE4FD974();
}

void LifeEventEntryView.enumerateActivityEventEntries(whose:in:order:using:)(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_1AE80A198(a1, a2, a3, a4, a5, (void (*)(_QWORD, uint64_t, _QWORD))sub_1AE52B378);
}

{
  sub_1AE80A198(a1, a2, a3, a4, a5, (void (*)(_QWORD, uint64_t, _QWORD))sub_1AE52B450);
}

{
  sub_1AE80A198(a1, a2, a3, a4, a5, (void (*)(_QWORD, uint64_t, _QWORD))sub_1AE52B4CC);
}

{
  sub_1AE80A198(a1, a2, a3, a4, a5, (void (*)(_QWORD, uint64_t, _QWORD))sub_1AE52B50C);
}

{
  sub_1AE80A198(a1, a2, a3, a4, a5, (void (*)(_QWORD, uint64_t, _QWORD))sub_1AE52B54C);
}

uint64_t sub_1AE809AAC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;

  v12 = *a2;
  v13 = a4 & 1;
  v14 = type metadata accessor for LifeEventEntry(0, a7, *(_QWORD *)(a8 + 8), a4);
  v17 = v12;
  v15 = MEMORY[0x1AF454B70](&unk_1AE95DE88, v14);
  return a9(v14, &v17, a3, v13, a5, a6, v14, v15);
}

void LifeEventEntryView.enumerateActivityEventEntries(overlapping:order:using:)()
{
  sub_1AE4FE8E0();
  sub_1AE52B59C();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52B610();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52B660();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52B6B0();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52B700();
  sub_1AE4FD974();
}

uint64_t sub_1AE809C50(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v12 = a3 & 1;
  v13 = type metadata accessor for LifeEventEntry(0, a6, *(_QWORD *)(a7 + 8), a4);
  v14 = MEMORY[0x1AF454B70](&unk_1AE95DE88, v13);
  return a8(v13, a2, v12, a4, a5, v13, v14);
}

void LifeEventEntryView.latestActivityEventEntry()(uint64_t a1@<X8>)
{
  sub_1AE52E210(a1);
  sub_1AE4FD974();
}

void LifeEventEntryView.earliestActivityEventEntry()(uint64_t a1@<X8>)
{
  sub_1AE52E210(a1);
  sub_1AE4FD974();
}

void LifeEventEntryView.activityEventIds(order:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1AE5032FC(a1);
  sub_1AE52E8E8();
  if (!v1)
  {
    sub_1AE4F9660(v2);
    sub_1AE4FCE28();
  }
  sub_1AE4FC4F8();
}

void LifeEventEntryView.activityEventIds<A>(of:order:)()
{
  sub_1AE4FE8E0();
  sub_1AE657E58();
  sub_1AE4FD974();
}

void LifeEventEntryView.activityEventIds(whose:in:order:)(unsigned __int8 *a1, uint64_t a2, char a3)
{
  sub_1AE809E7C(a1, a2, a3, sub_1AE52E43C);
}

{
  sub_1AE809E7C(a1, a2, a3, sub_1AE52E54C);
}

{
  sub_1AE809E7C(a1, a2, a3, sub_1AE52E6D0);
}

{
  sub_1AE809E7C(a1, a2, a3, sub_1AE52E6F4);
}

{
  sub_1AE809E7C(a1, a2, a3, sub_1AE52E718);
}

void LifeEventEntryView.activityEventIds<A>(of:whose:in:order:)(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  sub_1AE809ECC(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE657EA0);
}

{
  sub_1AE809ECC(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE657ED4);
}

{
  sub_1AE809ECC(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE657F50);
}

{
  sub_1AE809ECC(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE657F6C);
}

{
  sub_1AE809ECC(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE657F88);
}

void sub_1AE809E7C(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t (*a4)(_QWORD, uint64_t, _QWORD))
{
  uint64_t v4;
  uint64_t v5;

  v5 = sub_1AE4FCB50(a1, a2, a3, a4);
  if (!v4)
  {
    sub_1AE4F9660(v5);
    sub_1AE4FCE28();
  }
  sub_1AE4FC4F8();
}

void sub_1AE809ECC(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, char *, uint64_t, _QWORD, uint64_t, _QWORD))
{
  char v7;

  v7 = *a2;
  a7(a1, &v7, a3, a4 & 1, a5, *(_QWORD *)(a6 + 8));
  sub_1AE4FD974();
}

void LifeEventEntryView.activityEventIds(overlapping:order:)()
{
  sub_1AE809FF8();
}

{
  sub_1AE809FF8();
}

{
  sub_1AE809FF8();
}

{
  sub_1AE809FF8();
}

{
  sub_1AE809FF8();
}

void LifeEventEntryView.activityEventIds<A>(of:overlapping:order:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_1AE8071F4(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE657FE4);
}

{
  sub_1AE8071F4(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE658008);
}

{
  sub_1AE8071F4(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE65806C);
}

{
  sub_1AE8071F4(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE6580BC);
}

{
  sub_1AE8071F4(a1, a2, a3, a4, a5, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))sub_1AE6580D8);
}

void sub_1AE809FF8()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v2;

  sub_1AE4FE8E0();
  v2 = v1();
  if (!v0)
  {
    sub_1AE4F9660(v2);
    sub_1AE4FCE28();
  }
  sub_1AE4FC4F8();
}

void LifeEventEntryView.enumerateActivityEventIds(order:using:)(char a1)
{
  sub_1AE5032FC(a1);
  sub_1AE52BA68();
  sub_1AE4FD974();
}

void LifeEventEntryView.enumerateActivityEventIds<A>(of:order:using:)()
{
  sub_1AE658130();
  sub_1AE4FD974();
}

void LifeEventEntryView.enumerateActivityEventIds(whose:in:order:using:)(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  sub_1AE80A198(a1, a2, a3, a4, a5, (void (*)(_QWORD, uint64_t, _QWORD))sub_1AE52BAB0);
}

{
  sub_1AE80A198(a1, a2, a3, a4, a5, (void (*)(_QWORD, uint64_t, _QWORD))sub_1AE52BB54);
}

{
  sub_1AE80A198(a1, a2, a3, a4, a5, (void (*)(_QWORD, uint64_t, _QWORD))sub_1AE52BC0C);
}

{
  sub_1AE80A198(a1, a2, a3, a4, a5, (void (*)(_QWORD, uint64_t, _QWORD))sub_1AE52BC80);
}

{
  sub_1AE80A198(a1, a2, a3, a4, a5, (void (*)(_QWORD, uint64_t, _QWORD))sub_1AE52BCD0);
}

void LifeEventEntryView.enumerateActivityEventIds<A>(of:whose:in:order:using:)(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1AE501FFC(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE658170);
  sub_1AE4FC530();
}

{
  sub_1AE501FFC(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE6581B0);
  sub_1AE4FC530();
}

{
  sub_1AE501FFC(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE658254);
  sub_1AE4FC530();
}

{
  sub_1AE501FFC(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE65827C);
  sub_1AE4FC530();
}

{
  sub_1AE501FFC(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(uint64_t, char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE6582A4);
  sub_1AE4FC530();
}

void sub_1AE80A198(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD, uint64_t, _QWORD))
{
  a6(*a1, a2, a3 & 1);
  sub_1AE4FD974();
}

void sub_1AE80A1DC(uint64_t a1, char *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))
{
  char v9;

  v9 = *a2;
  a9(a1, &v9, a3, a4 & 1, a5, a6, a7, *(_QWORD *)(a8 + 8));
  sub_1AE4FD974();
}

void LifeEventEntryView.enumerateActivityEventIds(overlapping:order:using:)()
{
  sub_1AE4FE8E0();
  sub_1AE52BD30();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52BDC8();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52BE28();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52BE88();
  sub_1AE4FD974();
}

{
  sub_1AE4FE8E0();
  sub_1AE52BEE8();
  sub_1AE4FD974();
}

void LifeEventEntryView.enumerateActivityEventIds<A>(of:overlapping:order:using:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1AE80A328(a1, a2, a3, a4, a5, a6, a7, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE658324);
}

{
  sub_1AE80A328(a1, a2, a3, a4, a5, a6, a7, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE658358);
}

{
  sub_1AE80A328(a1, a2, a3, a4, a5, a6, a7, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE6583D8);
}

{
  sub_1AE80A328(a1, a2, a3, a4, a5, a6, a7, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE65841C);
}

{
  sub_1AE80A328(a1, a2, a3, a4, a5, a6, a7, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE658448);
}

void sub_1AE80A328(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))
{
  a8(a1, a2, a3 & 1, a4, a5, a6, *(_QWORD *)(a7 + 8));
  sub_1AE4FD974();
}

void LifeEventEntryView.latestActivityEventId()(uint64_t a1@<X8>)
{
  sub_1AE52F46C(a1);
  sub_1AE4FD974();
}

void LifeEventEntryView.latestActivityEventId<A>(of:)(uint64_t a1@<X8>)
{
  sub_1AE6584BC(a1);
  sub_1AE4FD974();
}

void LifeEventEntryView.earliestActivityEventId()(uint64_t a1@<X8>)
{
  sub_1AE52F46C(a1);
  sub_1AE4FD974();
}

void LifeEventEntryView.earliestActivityEventId<A>(of:)(uint64_t a1@<X8>)
{
  sub_1AE6584DC(a1);
  sub_1AE4FD974();
}

uint64_t LifeEventEntryView.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t LifeEventEntryView.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for LifeEventEntryView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LifeEventEntryView.__allocating_init(viewService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t static LifeEventsInferenceInterface.interfaceId.getter()
{
  return 0xD000000000000013;
}

IntelligencePlatform::LifeEventsInferenceInterface::Input __swiftcall LifeEventsInferenceInterface.Input.init(featureDictionary:)(IntelligencePlatform::LifeEventsInferenceInterface::Input featureDictionary)
{
  IntelligencePlatform::LifeEventsInferenceInterface::Input *v1;

  v1->featureDictionary._rawValue = featureDictionary.featureDictionary._rawValue;
  return featureDictionary;
}

uint64_t sub_1AE80A454(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001AE987580)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1AE80A4D8()
{
  return 0xD000000000000011;
}

uint64_t sub_1AE80A4F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE80A454(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE80A520()
{
  sub_1AE80A658();
  return sub_1AE926F94();
}

uint64_t sub_1AE80A548()
{
  sub_1AE80A658();
  return sub_1AE926FA0();
}

void LifeEventsInferenceInterface.Input.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE4F67EC();
  v1 = v0;
  v2 = sub_1AE501548(&qword_1EEDA3950);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F90C8();
  sub_1AE4F9858(v1, v1[3]);
  sub_1AE80A658();
  sub_1AE4FC7AC();
  sub_1AE501548(&qword_1EED9CFE0);
  sub_1AE5CFCD4(&qword_1EED9CFE8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB080], MEMORY[0x1E0DEA0B8]);
  sub_1AE926CC4();
  sub_1AE4FDD44(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1AE4F667C();
}

unint64_t sub_1AE80A658()
{
  unint64_t result;

  result = qword_1EEDA3958;
  if (!qword_1EEDA3958)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95ECD8, &type metadata for LifeEventsInferenceInterface.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3958);
  }
  return result;
}

void LifeEventsInferenceInterface.Input.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  sub_1AE4F67EC();
  v12 = v11;
  v14 = v13;
  sub_1AE501548(&qword_1EEDA3960);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE80C0DC(v12);
  sub_1AE80A658();
  sub_1AE4FD4CC();
  if (!v10)
  {
    sub_1AE501548(&qword_1EED9CFE0);
    sub_1AE5CFCD4(&qword_1EED9CFF8, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEA0D8]);
    sub_1AE926BEC();
    sub_1AE5058A0();
    *v14 = a10;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v12);
  sub_1AE4F667C();
}

void sub_1AE80A78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  LifeEventsInferenceInterface.Input.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1AE80A7A0()
{
  LifeEventsInferenceInterface.Input.encode(to:)();
}

double LifeEventsInferenceInterface.Output.confidence.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t sub_1AE80A7BC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE80A84C()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_1AE80A86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE80A7BC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE80A894()
{
  sub_1AE80A9B0();
  return sub_1AE926F94();
}

uint64_t sub_1AE80A8BC()
{
  sub_1AE80A9B0();
  return sub_1AE926FA0();
}

uint64_t LifeEventsInferenceInterface.Output.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1AE501548(&qword_1EEDA3968);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F6744();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE80A9B0();
  sub_1AE4FC7AC();
  sub_1AE926CA0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
}

unint64_t sub_1AE80A9B0()
{
  unint64_t result;

  result = qword_1EEDA3970;
  if (!qword_1EEDA3970)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95EC88, &type metadata for LifeEventsInferenceInterface.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3970);
  }
  return result;
}

uint64_t LifeEventsInferenceInterface.Output.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1AE501548(&qword_1EEDA3978);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE80C0DC(a1);
  sub_1AE80A9B0();
  sub_1AE4FD4CC();
  if (!v2)
  {
    sub_1AE926BC8();
    v7 = v6;
    sub_1AE5058A0();
    *a2 = v7;
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
}

uint64_t sub_1AE80AAC4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return LifeEventsInferenceInterface.Output.init(from:)(a1, a2);
}

uint64_t sub_1AE80AAD8(_QWORD *a1)
{
  return LifeEventsInferenceInterface.Output.encode(to:)(a1);
}

uint64_t static LifeEventsInferenceInterface.Errors.InitError.== infix(_:_:)()
{
  return 1;
}

uint64_t LifeEventsInferenceInterface.Errors.InitError.hash(into:)()
{
  return sub_1AE926ED4();
}

uint64_t sub_1AE80AB18(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x4D64696C61766E69 && a2 == 0xEC0000006C65646FLL)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE80ABB4()
{
  return 0x4D64696C61766E69;
}

uint64_t sub_1AE80ABD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE80AB18(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE80AC00()
{
  sub_1AE80AD88();
  return sub_1AE926F94();
}

uint64_t sub_1AE80AC28()
{
  sub_1AE80AD88();
  return sub_1AE926FA0();
}

uint64_t sub_1AE80AC50()
{
  sub_1AE80ADC4();
  return sub_1AE926F94();
}

uint64_t sub_1AE80AC78()
{
  sub_1AE80ADC4();
  return sub_1AE926FA0();
}

void LifeEventsInferenceInterface.Errors.InitError.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EEDA3980);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F90C8();
  v5 = sub_1AE501548(&qword_1EEDA3988);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F90F4();
  sub_1AE80C0DC(v3);
  sub_1AE80AD88();
  sub_1AE926F4C();
  sub_1AE80ADC4();
  sub_1AE926C34();
  sub_1AE4FDD44(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v5);
  sub_1AE4F667C();
}

unint64_t sub_1AE80AD88()
{
  unint64_t result;

  result = qword_1EEDA3990;
  if (!qword_1EEDA3990)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95EC38, &type metadata for LifeEventsInferenceInterface.Errors.InitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3990);
  }
  return result;
}

unint64_t sub_1AE80ADC4()
{
  unint64_t result;

  result = qword_1EEDA3998;
  if (!qword_1EEDA3998)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95EBE8, &type metadata for LifeEventsInferenceInterface.Errors.InitError.InvalidModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3998);
  }
  return result;
}

void LifeEventsInferenceInterface.Errors.InitError.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE4F6818();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void LifeEventsInferenceInterface.Errors.InitError.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  sub_1AE4F67EC();
  v3 = v2;
  v18 = sub_1AE501548(&qword_1EEDA39A0);
  v4 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F910C();
  v5 = sub_1AE501548(&qword_1EEDA39A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F90C8();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE80AD88();
  v7 = v3;
  sub_1AE926F34();
  if (v0)
    goto LABEL_6;
  v8 = sub_1AE926C1C();
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9
    || (sub_1AE50AF34(1, v9, v8, v8 + 32, 0, (2 * v9) | 1),
        v11 = v10,
        v13 = v12,
        swift_bridgeObjectRelease(),
        v11 != v13 >> 1))
  {
    v14 = sub_1AE926988();
    sub_1AE4F6778();
    v16 = v15;
    sub_1AE501548(&qword_1EED99C38);
    *v16 = &type metadata for LifeEventsInferenceInterface.Errors.InitError;
    sub_1AE926B5C();
    sub_1AE5078F4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x1E0DEC450], v14);
    swift_willThrow();
    v7 = v3;
    sub_1AE4FBA84();
    sub_1AE4FDD44(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
LABEL_6:
    v17 = (uint64_t)v7;
    goto LABEL_7;
  }
  sub_1AE80ADC4();
  sub_1AE926B50();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v18);
  swift_unknownObjectRelease();
  sub_1AE4FDD44(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v17 = (uint64_t)v3;
LABEL_7:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v17);
  sub_1AE4F667C();
}

void sub_1AE80B068()
{
  LifeEventsInferenceInterface.Errors.InitError.hashValue.getter();
}

uint64_t sub_1AE80B07C()
{
  return LifeEventsInferenceInterface.Errors.InitError.hash(into:)();
}

void sub_1AE80B090()
{
  LifeEventsInferenceInterface.Errors.InitError.init(from:)();
}

void sub_1AE80B0A4()
{
  LifeEventsInferenceInterface.Errors.InitError.encode(to:)();
}

BOOL static LifeEventsInferenceInterface.Errors.RunError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t LifeEventsInferenceInterface.Errors.RunError.hash(into:)()
{
  return sub_1AE926ED4();
}

uint64_t sub_1AE80B0F8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001AE9875A0 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AE9875C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1AE80B1E0(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0xD000000000000011;
}

unint64_t sub_1AE80B21C()
{
  char *v0;

  return sub_1AE80B1E0(*v0);
}

uint64_t sub_1AE80B224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE80B0F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE80B248()
{
  sub_1AE80B860();
  return sub_1AE926F94();
}

uint64_t sub_1AE80B270()
{
  sub_1AE80B860();
  return sub_1AE926FA0();
}

uint64_t sub_1AE80B298()
{
  sub_1AE80B8D8();
  return sub_1AE926F94();
}

uint64_t sub_1AE80B2C0()
{
  sub_1AE80B8D8();
  return sub_1AE926FA0();
}

uint64_t sub_1AE80B2E8()
{
  sub_1AE80B89C();
  return sub_1AE926F94();
}

uint64_t sub_1AE80B310()
{
  sub_1AE80B89C();
  return sub_1AE926FA0();
}

void LifeEventsInferenceInterface.Errors.RunError.encode(to:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1AE4F67EC();
  v5 = v4;
  v6 = sub_1AE501548(&qword_1EEDA39B0);
  v15 = *(_QWORD *)(v6 - 8);
  v16 = v6;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F90F4();
  v8 = sub_1AE501548(&qword_1EEDA39B8);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F910C();
  v10 = sub_1AE501548(&qword_1EEDA39C0);
  v17 = *(_QWORD *)(v10 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F6744();
  v12 = *v0;
  sub_1AE4F9858(v5, v5[3]);
  sub_1AE80B860();
  sub_1AE926F4C();
  if ((v12 & 1) != 0)
  {
    sub_1AE509238();
    sub_1AE4F6974();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v2, v16);
  }
  else
  {
    sub_1AE80B8D8();
    sub_1AE4F6974();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v3, v14);
  }
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v10);
  sub_1AE4F667C();
}

void LifeEventsInferenceInterface.Errors.RunError.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE4F6694();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void LifeEventsInferenceInterface.Errors.RunError.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;

  sub_1AE4F67EC();
  v3 = v2;
  v35 = v4;
  v33 = sub_1AE501548(&qword_1EEDA39E0);
  v37 = *(_QWORD *)(v33 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  v36 = v7 - v6;
  v34 = sub_1AE501548(&qword_1EEDA39E8);
  v8 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  sub_1AE4F666C();
  v11 = v10 - v9;
  v12 = sub_1AE501548(&qword_1EEDA39F0);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F666C();
  v16 = v15 - v14;
  sub_1AE80C0DC(v3);
  sub_1AE80B860();
  sub_1AE926F34();
  if (v0)
    goto LABEL_9;
  v31 = v11;
  v32 = v3;
  v17 = sub_1AE926C1C();
  v18 = *(_QWORD *)(v17 + 16);
  v19 = v12;
  if (!v18)
  {
    v26 = v16;
LABEL_8:
    v27 = sub_1AE926988();
    sub_1AE4F6778();
    v29 = v28;
    sub_1AE501548(&qword_1EED99C38);
    *v29 = &type metadata for LifeEventsInferenceInterface.Errors.RunError;
    sub_1AE926B5C();
    sub_1AE5078F4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x1E0DEC450], v27);
    swift_willThrow();
    sub_1AE4FBA84();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v26, v19);
    v3 = v32;
LABEL_9:
    v30 = (uint64_t)v3;
    goto LABEL_10;
  }
  v20 = *(_BYTE *)(v17 + 32);
  sub_1AE50AF34(1, v18, v17, v17 + 32, 0, (2 * v18) | 1);
  v22 = v21;
  v24 = v23;
  swift_bridgeObjectRelease();
  if (v22 != v24 >> 1)
  {
    v26 = v16;
    v19 = v12;
    goto LABEL_8;
  }
  if ((v20 & 1) != 0)
  {
    sub_1AE509238();
    sub_1AE926B50();
    v25 = v35;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v33);
  }
  else
  {
    sub_1AE80B8D8();
    sub_1AE926B50();
    v25 = v35;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v31, v34);
  }
  sub_1AE4FBA84();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v16, v12);
  *v25 = v20;
  v30 = (uint64_t)v32;
LABEL_10:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v30);
  sub_1AE4F667C();
}

void sub_1AE80B81C()
{
  LifeEventsInferenceInterface.Errors.RunError.init(from:)();
}

void sub_1AE80B830()
{
  LifeEventsInferenceInterface.Errors.RunError.encode(to:)();
}

unint64_t sub_1AE80B844()
{
  static LifeEventsInferenceInterface.interfaceId.getter();
  return 0xD000000000000013;
}

unint64_t sub_1AE80B860()
{
  unint64_t result;

  result = qword_1EEDA39C8;
  if (!qword_1EEDA39C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95EB98, &type metadata for LifeEventsInferenceInterface.Errors.RunError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA39C8);
  }
  return result;
}

unint64_t sub_1AE80B89C()
{
  unint64_t result;

  result = qword_1EEDA39D0;
  if (!qword_1EEDA39D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95EB48, &type metadata for LifeEventsInferenceInterface.Errors.RunError.InvalidInferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA39D0);
  }
  return result;
}

unint64_t sub_1AE80B8D8()
{
  unint64_t result;

  result = qword_1EEDA39D8;
  if (!qword_1EEDA39D8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95EAF8, &type metadata for LifeEventsInferenceInterface.Errors.RunError.InvalidFeatureKeyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA39D8);
  }
  return result;
}

unint64_t sub_1AE80B918()
{
  unint64_t result;

  result = qword_1EEDA39F8;
  if (!qword_1EEDA39F8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LifeEventsInferenceInterface.Errors.InitError, &type metadata for LifeEventsInferenceInterface.Errors.InitError);
    atomic_store(result, (unint64_t *)&qword_1EEDA39F8);
  }
  return result;
}

unint64_t sub_1AE80B958()
{
  unint64_t result;

  result = qword_1EEDA3A00;
  if (!qword_1EEDA3A00)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LifeEventsInferenceInterface.Errors.RunError, &type metadata for LifeEventsInferenceInterface.Errors.RunError);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A00);
  }
  return result;
}

unint64_t sub_1AE80B998()
{
  unint64_t result;

  result = qword_1EEDA3A08;
  if (!qword_1EEDA3A08)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LifeEventsInferenceInterface.Errors.InitError, &type metadata for LifeEventsInferenceInterface.Errors.InitError);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A08);
  }
  return result;
}

unint64_t sub_1AE80B9D8()
{
  unint64_t result;

  result = qword_1EEDA3A10;
  if (!qword_1EEDA3A10)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LifeEventsInferenceInterface.Errors.RunError, &type metadata for LifeEventsInferenceInterface.Errors.RunError);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A10);
  }
  return result;
}

unint64_t sub_1AE80BA18()
{
  unint64_t result;

  result = qword_1EEDA3A18;
  if (!qword_1EEDA3A18)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LifeEventsInferenceInterface.Errors, &type metadata for LifeEventsInferenceInterface.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A18);
  }
  return result;
}

void type metadata accessor for LifeEventsInferenceInterface()
{
  sub_1AE4F67D4();
}

void type metadata accessor for LifeEventsInferenceInterface.Input()
{
  sub_1AE4F67D4();
}

void type metadata accessor for LifeEventsInferenceInterface.Output()
{
  sub_1AE4F67D4();
}

void type metadata accessor for LifeEventsInferenceInterface.Errors()
{
  sub_1AE4F67D4();
}

void type metadata accessor for LifeEventsInferenceInterface.Errors.InitError()
{
  sub_1AE4F67D4();
}

void type metadata accessor for LifeEventsInferenceInterface.Errors.RunError()
{
  sub_1AE4F67D4();
}

uint64_t _s20IntelligencePlatform28LifeEventsInferenceInterfaceO6ErrorsO8RunErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE80BAF0 + 4 * byte_1AE95E385[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE80BB24 + 4 * byte_1AE95E380[v4]))();
}

uint64_t sub_1AE80BB24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE80BB2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE80BB34);
  return result;
}

uint64_t sub_1AE80BB40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE80BB48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE80BB4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE80BB54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LifeEventsInferenceInterface.Errors.RunError.CodingKeys()
{
  return &type metadata for LifeEventsInferenceInterface.Errors.RunError.CodingKeys;
}

ValueMetadata *type metadata accessor for LifeEventsInferenceInterface.Errors.RunError.InvalidFeatureKeyCodingKeys()
{
  return &type metadata for LifeEventsInferenceInterface.Errors.RunError.InvalidFeatureKeyCodingKeys;
}

ValueMetadata *type metadata accessor for LifeEventsInferenceInterface.Errors.RunError.InvalidInferenceCodingKeys()
{
  return &type metadata for LifeEventsInferenceInterface.Errors.RunError.InvalidInferenceCodingKeys;
}

ValueMetadata *type metadata accessor for LifeEventsInferenceInterface.Errors.InitError.CodingKeys()
{
  return &type metadata for LifeEventsInferenceInterface.Errors.InitError.CodingKeys;
}

ValueMetadata *type metadata accessor for LifeEventsInferenceInterface.Errors.InitError.InvalidModelCodingKeys()
{
  return &type metadata for LifeEventsInferenceInterface.Errors.InitError.InvalidModelCodingKeys;
}

ValueMetadata *type metadata accessor for LifeEventsInferenceInterface.Output.CodingKeys()
{
  return &type metadata for LifeEventsInferenceInterface.Output.CodingKeys;
}

uint64_t _s20IntelligencePlatform28LifeEventsInferenceInterfaceO6ErrorsO9InitErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE80BC00 + 4 * byte_1AE95E38A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE80BC20 + 4 * byte_1AE95E38F[v4]))();
}

_BYTE *sub_1AE80BC00(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE80BC20(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE80BC28(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE80BC30(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE80BC38(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE80BC40(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LifeEventsInferenceInterface.Input.CodingKeys()
{
  return &type metadata for LifeEventsInferenceInterface.Input.CodingKeys;
}

unint64_t sub_1AE80BC60()
{
  unint64_t result;

  result = qword_1EEDA3A20;
  if (!qword_1EEDA3A20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E7B8, &type metadata for LifeEventsInferenceInterface.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A20);
  }
  return result;
}

unint64_t sub_1AE80BCA0()
{
  unint64_t result;

  result = qword_1EEDA3A28;
  if (!qword_1EEDA3A28)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E870, &type metadata for LifeEventsInferenceInterface.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A28);
  }
  return result;
}

unint64_t sub_1AE80BCE0()
{
  unint64_t result;

  result = qword_1EEDA3A30;
  if (!qword_1EEDA3A30)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E978, &type metadata for LifeEventsInferenceInterface.Errors.InitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A30);
  }
  return result;
}

unint64_t sub_1AE80BD20()
{
  unint64_t result;

  result = qword_1EEDA3A38;
  if (!qword_1EEDA3A38)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95EAD0, &type metadata for LifeEventsInferenceInterface.Errors.RunError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A38);
  }
  return result;
}

unint64_t sub_1AE80BD60()
{
  unint64_t result;

  result = qword_1EEDA3A40;
  if (!qword_1EEDA3A40)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E9F0, &type metadata for LifeEventsInferenceInterface.Errors.RunError.InvalidFeatureKeyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A40);
  }
  return result;
}

unint64_t sub_1AE80BDA0()
{
  unint64_t result;

  result = qword_1EEDA3A48;
  if (!qword_1EEDA3A48)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95EA18, &type metadata for LifeEventsInferenceInterface.Errors.RunError.InvalidFeatureKeyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A48);
  }
  return result;
}

unint64_t sub_1AE80BDE0()
{
  unint64_t result;

  result = qword_1EEDA3A50;
  if (!qword_1EEDA3A50)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E9A0, &type metadata for LifeEventsInferenceInterface.Errors.RunError.InvalidInferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A50);
  }
  return result;
}

unint64_t sub_1AE80BE20()
{
  unint64_t result;

  result = qword_1EEDA3A58;
  if (!qword_1EEDA3A58)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E9C8, &type metadata for LifeEventsInferenceInterface.Errors.RunError.InvalidInferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A58);
  }
  return result;
}

unint64_t sub_1AE80BE60()
{
  unint64_t result;

  result = qword_1EEDA3A60;
  if (!qword_1EEDA3A60)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95EA40, &type metadata for LifeEventsInferenceInterface.Errors.RunError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A60);
  }
  return result;
}

unint64_t sub_1AE80BEA0()
{
  unint64_t result;

  result = qword_1EEDA3A68;
  if (!qword_1EEDA3A68)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95EA68, &type metadata for LifeEventsInferenceInterface.Errors.RunError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A68);
  }
  return result;
}

unint64_t sub_1AE80BEE0()
{
  unint64_t result;

  result = qword_1EEDA3A70;
  if (!qword_1EEDA3A70)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E898, &type metadata for LifeEventsInferenceInterface.Errors.InitError.InvalidModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A70);
  }
  return result;
}

unint64_t sub_1AE80BF20()
{
  unint64_t result;

  result = qword_1EEDA3A78;
  if (!qword_1EEDA3A78)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E8C0, &type metadata for LifeEventsInferenceInterface.Errors.InitError.InvalidModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A78);
  }
  return result;
}

unint64_t sub_1AE80BF60()
{
  unint64_t result;

  result = qword_1EEDA3A80;
  if (!qword_1EEDA3A80)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E8E8, &type metadata for LifeEventsInferenceInterface.Errors.InitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A80);
  }
  return result;
}

unint64_t sub_1AE80BFA0()
{
  unint64_t result;

  result = qword_1EEDA3A88;
  if (!qword_1EEDA3A88)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E910, &type metadata for LifeEventsInferenceInterface.Errors.InitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A88);
  }
  return result;
}

unint64_t sub_1AE80BFE0()
{
  unint64_t result;

  result = qword_1EEDA3A90;
  if (!qword_1EEDA3A90)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E7E0, &type metadata for LifeEventsInferenceInterface.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A90);
  }
  return result;
}

unint64_t sub_1AE80C020()
{
  unint64_t result;

  result = qword_1EEDA3A98;
  if (!qword_1EEDA3A98)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E808, &type metadata for LifeEventsInferenceInterface.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3A98);
  }
  return result;
}

unint64_t sub_1AE80C060()
{
  unint64_t result;

  result = qword_1EEDA3AA0;
  if (!qword_1EEDA3AA0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E728, &type metadata for LifeEventsInferenceInterface.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3AA0);
  }
  return result;
}

unint64_t sub_1AE80C0A0()
{
  unint64_t result;

  result = qword_1EEDA3AA8;
  if (!qword_1EEDA3AA8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95E750, &type metadata for LifeEventsInferenceInterface.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3AA8);
  }
  return result;
}

_QWORD *sub_1AE80C0DC(_QWORD *a1)
{
  uint64_t v1;

  return sub_1AE4F9858(a1, v1);
}

uint64_t sub_1AE80C0F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1AE4FD0B8();
}

uint64_t sub_1AE80C108()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E9B0]), sel_init);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_1AE80C184;
  return sub_1AE9266AC();
}

uint64_t sub_1AE80C184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1AE4F6A90();
  v4 = *v3;
  *v5 = v4;
  *(_QWORD *)(v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();

  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v0);
}

void sub_1AE80C200(uint64_t a1)
{
  sub_1AE80C214(a1, (unint64_t *)&qword_1ED318F40);
}

void sub_1AE80C214(uint64_t a1, unint64_t *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  BOOL v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  void *v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _OWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  _OWORD v46[2];

  v2 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1AE501548(&qword_1EED99568);
    v3 = (_QWORD *)sub_1AE926B14();
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v38 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 64);
  v37 = (unint64_t)(63 - v4) >> 6;
  v7 = &v43;
  v8 = &v45;
  sub_1AE4FB75C();
  v9 = 0;
  v10 = MEMORY[0x1E0DEE9B8] + 8;
  while (1)
  {
    while (1)
    {
      if (v6)
      {
        v11 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v12 = v11 | (v9 << 6);
      }
      else
      {
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
          goto LABEL_38;
        if (v13 >= v37)
        {
LABEL_35:
          sub_1AE592EFC();
          return;
        }
        v14 = *(_QWORD *)(v38 + 8 * v13);
        v15 = v9 + 1;
        if (!v14)
        {
          sub_1AE4F6D68();
          if (v16 == v17)
            goto LABEL_35;
          sub_1AE4F9668();
          if (!v14)
          {
            sub_1AE4F6D68();
            if (v16 == v17)
              goto LABEL_35;
            sub_1AE4F9668();
            if (!v14)
            {
              sub_1AE4F6D68();
              if (v16 == v17)
                goto LABEL_35;
              sub_1AE4F9668();
              if (!v14)
              {
                v19 = v18 + 4;
                if (v19 >= v37)
                  goto LABEL_35;
                v14 = *(_QWORD *)(v38 + 8 * v19);
                if (!v14)
                {
                  while (!__OFADD__(v19, 1))
                  {
                    sub_1AE4F6D68();
                    if (v16 == v17)
                      goto LABEL_35;
                    sub_1AE4F9668();
                    v19 = v20 + 1;
                    if (v14)
                      goto LABEL_29;
                  }
                  goto LABEL_39;
                }
                v15 = v19;
              }
            }
          }
        }
LABEL_29:
        v6 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v15 << 6);
        v9 = v15;
      }
      v21 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v12);
      v22 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v12);
      v41 = *v21;
      v42 = v21[1];
      sub_1AE53F468(0, a2);
      swift_bridgeObjectRetain();
      v23 = v22;
      swift_dynamicCast();
      sub_1AE53F2F4(v7, v8);
      sub_1AE53F2F4(v8, v46);
      sub_1AE53F2F4(v46, &v44);
      v24 = sub_1AE536EDC(v41, v42);
      v25 = v24;
      if ((v26 & 1) == 0)
        break;
      v39 = v6;
      v27 = v8;
      v28 = v7;
      v29 = v2;
      v30 = v9;
      v31 = v10;
      v32 = (uint64_t *)(v3[6] + 16 * v24);
      swift_bridgeObjectRelease();
      *v32 = v41;
      v32[1] = v42;
      v10 = v31;
      v9 = v30;
      v2 = v29;
      v7 = v28;
      v8 = v27;
      v6 = v39;
      v33 = (_OWORD *)(v3[7] + 32 * v25);
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v33);
      sub_1AE53F2F4(&v44, v33);
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v24;
    v34 = (uint64_t *)(v3[6] + 16 * v24);
    *v34 = v41;
    v34[1] = v42;
    sub_1AE53F2F4(&v44, (_OWORD *)(v3[7] + 32 * v24));
    v35 = v3[2];
    v17 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v17)
      goto LABEL_37;
    v3[2] = v36;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

unint64_t static LifeEventsMLModelInferenceServiceDefinition.definitionId.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_1AE80C560()
{
  sub_1AE80C6B8();
  return sub_1AE926F94();
}

uint64_t sub_1AE80C588()
{
  sub_1AE80C6B8();
  return sub_1AE926FA0();
}

void LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  char v10;
  char v11;

  v4 = sub_1AE501548(&qword_1EEDA3AB0);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v8[1] = *(_QWORD *)(v1 + 24);
  v8[2] = v7;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE80C6B8();
  sub_1AE926F4C();
  v11 = 0;
  sub_1AE4FB9C4();
  if (!v2)
  {
    v10 = 1;
    sub_1AE4FB9C4();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v4);
  sub_1AE4F667C();
}

unint64_t sub_1AE80C6B8()
{
  unint64_t result;

  result = qword_1EEDA3AB8;
  if (!qword_1EEDA3AB8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95EF64, &type metadata for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3AB8);
  }
  return result;
}

void LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  v5 = sub_1AE501548(&qword_1EEDA3AC0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE80C6B8();
  sub_1AE926F34();
  if (v2)
  {
    sub_1AE4F90EC();
  }
  else
  {
    v7 = sub_1AE4F9230();
    v9 = v8;
    swift_bridgeObjectRetain();
    v10 = sub_1AE4F9230();
    v12 = v11;
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v14 = v10;
    sub_1AE4FDB48(v13);
    *a2 = v7;
    a2[1] = v9;
    a2[2] = v14;
    a2[3] = v12;
    swift_bridgeObjectRetain();
    sub_1AE4F90EC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1AE4F667C();
}

void sub_1AE80C844(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.init(from:)(a1, a2);
}

void sub_1AE80C858(_QWORD *a1)
{
  LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.encode(to:)(a1);
}

void LifeEventsMLModelInferenceServiceDefinition.Runner.cost.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 120);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 112);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_1AE80C880(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v10;

  v3[2] = a2;
  v3[3] = v2;
  v4 = *a1;
  v5 = a1[1];
  v3[4] = *(_QWORD *)v2;
  v3[5] = v5;
  v6 = a1[2];
  v7 = a1[3];
  v3[6] = v7;
  swift_defaultActor_initialize();
  *(_QWORD *)(v2 + 112) = 0;
  *(_BYTE *)(v2 + 120) = 1;
  v10 = (char *)&dword_1EED9EF60 + dword_1EED9EF60;
  v8 = (_QWORD *)swift_task_alloc();
  v3[7] = v8;
  *v8 = v3;
  v8[1] = sub_1AE80C934;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))v10)(v6, v7, v4, v5, 0);
}

uint64_t sub_1AE80C934(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 64) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
    goto LABEL_2;
  if (!a1)
  {
    sub_1AE80B998();
    sub_1AE4F6778();
    swift_willThrow();
LABEL_2:
    swift_defaultActor_destroy();
    swift_release();
    swift_deallocPartialClassInstance();
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
  *(_QWORD *)(*(_QWORD *)(v4 + 24) + 128) = a1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_1AE80CA34()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 24));
}

uint64_t LifeEventsMLModelInferenceServiceDefinition.Runner.run(input:context:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a1;
  v4[4] = a3;
  v5 = *a2;
  v4[5] = v3;
  v4[6] = v5;
  return sub_1AE4FD0B8();
}

uint64_t sub_1AE80CA94()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t *v37;

  v37 = (uint64_t *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 48);
  sub_1AE53F468(0, (unint64_t *)&qword_1EEDA3AD0);
  v2 = (_QWORD *)sub_1AE925C98();
  v34 = v1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(v1 + 64);
  v35 = (unint64_t)(63 - v4) >> 6;
  v36 = v1;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  if (!v5)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v8 | (v7 << 6); ; i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    v13 = (uint64_t *)(*(_QWORD *)(v36 + 48) + 16 * i);
    v15 = *v13;
    v14 = v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * i);
    sub_1AE501548(&qword_1EED9A458);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1AE934250;
    *(_QWORD *)(v17 + 32) = v16;
    *v37 = v17;
    sub_1AE4FB75C();
    sub_1AE501548(&qword_1EEDA3AD8);
    sub_1AE5BA550(&qword_1EEDA3AE0, &qword_1EEDA3AD8, MEMORY[0x1E0DEAF50]);
    v18 = sub_1AE9265BC();
    swift_isUniquelyReferenced_nonNull_native();
    result = sub_1AE4FBF28();
    if (__OFADD__(v2[2], (v19 & 1) == 0))
      break;
    v20 = result;
    v21 = v19;
    sub_1AE501548(&qword_1EEDA3AE8);
    result = sub_1AE926A54();
    if ((result & 1) != 0)
    {
      result = sub_1AE4FBF28();
      if ((v21 & 1) != (v22 & 1))
      {
        sub_1AE5039DC();
        return sub_1AE926DE4();
      }
      v20 = result;
    }
    if ((v21 & 1) != 0)
    {
      v23 = v2[7];

      *(_QWORD *)(v23 + 8 * v20) = v18;
    }
    else
    {
      v2[(v20 >> 6) + 8] |= 1 << v20;
      v24 = (_QWORD *)(v2[6] + 16 * v20);
      *v24 = v15;
      v24[1] = v14;
      *(_QWORD *)(v2[7] + 8 * v20) = v18;
      v25 = v2[2];
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        goto LABEL_32;
      v2[2] = v27;
      sub_1AE4FB75C();
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_4;
LABEL_5:
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_33;
    if (v10 >= v35)
    {
LABEL_29:
      swift_release();
      sub_1AE80C214((uint64_t)v2, (unint64_t *)&qword_1EEDA3AD0);
      swift_bridgeObjectRelease();
      v28 = objc_allocWithZone(MEMORY[0x1E0C9E8F8]);
      v29 = sub_1AE80D3A4();
      *(_QWORD *)(v33 + 56) = v29;
      v30 = v29;
      v31 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v33 + 64) = v31;
      *v31 = v33;
      v31[1] = sub_1AE80CED4;
      sub_1AE5039DC();
      __asm { BR              X2 }
    }
    v11 = *(_QWORD *)(v34 + 8 * v10);
    ++v7;
    if (!v11)
    {
      v7 = v10 + 1;
      if (v10 + 1 >= v35)
        goto LABEL_29;
      v11 = *(_QWORD *)(v34 + 8 * v7);
      if (!v11)
      {
        v7 = v10 + 2;
        if (v10 + 2 >= v35)
          goto LABEL_29;
        v11 = *(_QWORD *)(v34 + 8 * v7);
        if (!v11)
        {
          v12 = v10 + 3;
          if (v12 >= v35)
            goto LABEL_29;
          v11 = *(_QWORD *)(v34 + 8 * v12);
          if (!v11)
          {
            while (1)
            {
              v7 = v12 + 1;
              if (__OFADD__(v12, 1))
                goto LABEL_34;
              if (v7 >= v35)
                goto LABEL_29;
              v11 = *(_QWORD *)(v34 + 8 * v7);
              ++v12;
              if (v11)
                goto LABEL_18;
            }
          }
          v7 = v12;
        }
      }
    }
LABEL_18:
    v5 = (v11 - 1) & v11;
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1AE80CED4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = v1;
  swift_task_dealloc();

  return sub_1AE4FD190();
}

uint64_t sub_1AE80CF44()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  void *v11;
  _BYTE *v12;

  v1 = (void *)v0[9];
  v2 = (void *)sub_1AE925E18();
  v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  if (v3
    && (v4 = objc_msgSend(v3, sel_multiArrayValue), v3, v4)
    && (v5 = objc_msgSend(v4, sel_objectAtIndexedSubscript_, 0),
        v4,
        v5))
  {
    v6 = (void *)v0[7];
    v7 = v0[3];
    objc_msgSend(v5, sel_doubleValue);
    v9 = v8;

    swift_unknownObjectRelease();
    *(_QWORD *)v7 = v9;
    *(_QWORD *)(v7 + 8) = 0;
    *(_BYTE *)(v7 + 16) = 1;
    v10 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v11 = (void *)v0[7];
    sub_1AE80B9D8();
    sub_1AE4F6778();
    *v12 = 1;
    swift_willThrow();
    swift_unknownObjectRelease();

    v10 = (uint64_t (*)(void))v0[1];
  }
  return v10();
}

uint64_t sub_1AE80D0A0()
{
  uint64_t v0;

  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t LifeEventsMLModelInferenceServiceDefinition.Runner.deinit()
{
  uint64_t v0;

  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t LifeEventsMLModelInferenceServiceDefinition.Runner.__deallocating_deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

void LifeEventsMLModelInferenceServiceDefinition.Runner.unownedExecutor.getter()
{
  sub_1AE4F67D4();
}

void sub_1AE80D11C()
{
  LifeEventsMLModelInferenceServiceDefinition.Runner.unownedExecutor.getter();
}

void sub_1AE80D134(uint64_t a1@<X8>)
{
  LifeEventsMLModelInferenceServiceDefinition.Runner.cost.getter(a1);
}

uint64_t sub_1AE80D154(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1AE753970;
  return LifeEventsMLModelInferenceServiceDefinition.Runner.run(input:context:)(a1, a2, a3);
}

uint64_t static LifeEventsMLModelInferenceServiceDefinition.buildRunner(config:context:)(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = a1[6];
  v5 = a1[7];
  v6 = a1[8];
  v2[2] = a1[5];
  v2[3] = v4;
  v2[4] = v5;
  v2[5] = v6;
  type metadata accessor for LifeEventsMLModelInferenceServiceDefinition.Runner();
  swift_allocObject();
  sub_1AE4FB75C();
  swift_bridgeObjectRetain();
  swift_retain();
  v7 = (_QWORD *)swift_task_alloc();
  v2[6] = (uint64_t)v7;
  *v7 = v2;
  v7[1] = sub_1AE80D268;
  return sub_1AE80C880(v2 + 2, a2);
}

uint64_t sub_1AE80D268(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 56) = v1;
  swift_task_dealloc();
  if (v1)
    return sub_1AE4FD190();
  else
    return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1AE80D2D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1AE80D2E0()
{
  static LifeEventsMLModelInferenceServiceDefinition.definitionId.getter();
  return 0xD000000000000021;
}

uint64_t sub_1AE80D2FC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1AE80D354;
  return static LifeEventsMLModelInferenceServiceDefinition.buildRunner(config:context:)(a2, a3);
}

uint64_t sub_1AE80D354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1AE4F6A90();
  v4 = *v3;
  *v5 = v4;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v2 + 16) = v0;
  return (*(uint64_t (**)(void))(v4 + 8))();
}

id sub_1AE80D3A4()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1AE925C44();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initWithDictionary_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1AE9246B4();

    swift_willThrow();
  }
  return v2;
}

uint64_t type metadata accessor for LifeEventsMLModelInferenceServiceDefinition.Runner()
{
  return objc_opt_self();
}

unint64_t sub_1AE80D4A8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AE80D4D4();
  result = sub_1AE80D510();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AE80D4D4()
{
  unint64_t result;

  result = qword_1EEDA3B08;
  if (!qword_1EEDA3B08)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters, &type metadata for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters);
    atomic_store(result, (unint64_t *)&qword_1EEDA3B08);
  }
  return result;
}

unint64_t sub_1AE80D510()
{
  unint64_t result;

  result = qword_1EEDA3B10;
  if (!qword_1EEDA3B10)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters, &type metadata for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters);
    atomic_store(result, (unint64_t *)&qword_1EEDA3B10);
  }
  return result;
}

unint64_t sub_1AE80D54C(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE80D570();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE80D570()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEDA3B18;
  if (!qword_1EEDA3B18)
  {
    v1 = type metadata accessor for LifeEventsMLModelInferenceServiceDefinition.Runner();
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LifeEventsMLModelInferenceServiceDefinition.Runner, v1);
    atomic_store(result, (unint64_t *)&qword_1EEDA3B18);
  }
  return result;
}

uint64_t sub_1AE80D5AC()
{
  return sub_1AE5BA550(&qword_1EEDA3B20, (uint64_t *)&unk_1EEDA3B28, (uint64_t)&protocol conformance descriptor for InferenceServiceRunnerExtendedResponse<A>);
}

unint64_t sub_1AE80D5DC()
{
  unint64_t result;

  result = qword_1EEDA3B38;
  if (!qword_1EEDA3B38)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters, &type metadata for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters);
    atomic_store(result, (unint64_t *)&qword_1EEDA3B38);
  }
  return result;
}

unint64_t sub_1AE80D61C()
{
  unint64_t result;

  result = qword_1EEDA3B40;
  if (!qword_1EEDA3B40)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LifeEventsInferenceInterface, &type metadata for LifeEventsInferenceInterface);
    atomic_store(result, (unint64_t *)&qword_1EEDA3B40);
  }
  return result;
}

void type metadata accessor for LifeEventsMLModelInferenceServiceDefinition()
{
  sub_1AE4F67D4();
}

void type metadata accessor for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters()
{
  sub_1AE4F67D4();
}

uint64_t method lookup function for LifeEventsMLModelInferenceServiceDefinition.Runner()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE80D6CC + 4 * byte_1AE95ED35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE80D700 + 4 * byte_1AE95ED30[v4]))();
}

uint64_t sub_1AE80D700(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE80D708(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE80D710);
  return result;
}

uint64_t sub_1AE80D71C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE80D724);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE80D728(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE80D730(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.CodingKeys()
{
  return &type metadata for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.CodingKeys;
}

unint64_t sub_1AE80D750()
{
  unint64_t result;

  result = qword_1EEDA3B50;
  if (!qword_1EEDA3B50)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95EF3C, &type metadata for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3B50);
  }
  return result;
}

unint64_t sub_1AE80D790()
{
  unint64_t result;

  result = qword_1EEDA3B58;
  if (!qword_1EEDA3B58)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95EEAC, &type metadata for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3B58);
  }
  return result;
}

unint64_t sub_1AE80D7D0()
{
  unint64_t result;

  result = qword_1EEDA3B60;
  if (!qword_1EEDA3B60)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95EED4, &type metadata for LifeEventsMLModelInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3B60);
  }
  return result;
}

void ViewService.lifeEventView()()
{
  void *v0;

  type metadata accessor for LifeEventView();
  sub_1AE4F6738();
  LifeEventView.init(viewService:)(v0);
  sub_1AE4FC4F8();
}

uint64_t LifeEventView.entryView.getter()
{
  return swift_retain();
}

void LifeEventView.__allocating_init(viewService:)(void *a1)
{
  sub_1AE4F6738();
  LifeEventView.init(viewService:)(a1);
  sub_1AE4FC4F8();
}

uint64_t type metadata accessor for LifeEventView()
{
  return objc_opt_self();
}

uint64_t LifeEventView.init(viewService:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1;
  type metadata accessor for LifeEventEntryView();
  sub_1AE4F6738();
  v5 = LifeEventEntryView.init(viewService:)(a1);
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v6 = v5;
    sub_1AE501548(&qword_1EED99118);
    v7 = sub_1AE4F6738();
    *(_QWORD *)(v7 + 16) = v6;
    *(_QWORD *)(v3 + 16) = v7;
  }
  return v3;
}

void LifeEventView.activityEvents<A>(from:order:)()
{
  sub_1AE4FBE98();
  sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  sub_1AE4FC540();
  sub_1AE65A9DC();
  sub_1AE4FCE34();
}

void LifeEventView.activityEvents<A, B>(of:from:order:)()
{
  sub_1AE65A9DC();
  sub_1AE4FD974();
}

uint64_t LifeEventView.activityEvents<A>(whose:in:from:order:)(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return sub_1AE80DA48(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AA80);
}

{
  return sub_1AE80DA48(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AAA4);
}

{
  return sub_1AE80DA48(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AAC8);
}

{
  return sub_1AE80DA48(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AAEC);
}

{
  return sub_1AE80DA48(a1, a2, a3, a4, a5, a6, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AB10);
}

void LifeEventView.activityEvents<A, B>(of:whose:in:from:order:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1AE50A714(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1AE4FC530();
}

{
  sub_1AE50A714(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1AE4FC530();
}

{
  sub_1AE50A714(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1AE4FC530();
}

{
  sub_1AE50A714(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1AE4FC530();
}

{
  sub_1AE50A714(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1AE4FC530();
}

uint64_t sub_1AE80DA48(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v17;

  v11 = *a1;
  v12 = a4 & 1;
  v13 = sub_1AE4FBE98();
  v17 = v11;
  v14 = sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  return a7(v13, &v17, a2, a3, v12, v13, a5, v14, a6);
}

void sub_1AE80DBE8(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(uint64_t, char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t))
{
  char v10;

  v10 = *a2;
  a10(a1, &v10, a3, a4, a5 & 1, a6, a7, *(_QWORD *)(a8 + 8), a9);
  sub_1AE4FBA7C();
}

uint64_t LifeEventView.activityEvents<A>(overlapping:from:order:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_1AE80DC80(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65ABF4);
}

{
  return sub_1AE80DC80(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AC14);
}

{
  return sub_1AE80DC80(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AC34);
}

{
  return sub_1AE80DC80(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AC54);
}

{
  return sub_1AE80DC80(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AC74);
}

void LifeEventView.activityEvents<A, B>(of:overlapping:from:order:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1AE4F6D74(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1AE4FC530();
}

{
  sub_1AE4F6D74(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1AE4FC530();
}

{
  sub_1AE4F6D74(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1AE4FC530();
}

{
  sub_1AE4F6D74(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1AE4FC530();
}

{
  sub_1AE4F6D74(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_1AE4FC530();
}

uint64_t sub_1AE80DC80(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v10 = a3 & 1;
  v11 = sub_1AE4FBE98();
  v12 = sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  return a6(v11, a1, a2, v10, v11, a4, v12, a5);
}

void sub_1AE80DE04(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD))
{
  a9(a1, a2, a3, a4 & 1, a5, a6, *(_QWORD *)(a7 + 8));
  sub_1AE4FD974();
}

void LifeEventView.enumerateActivityEvents<A>(from:order:using:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2 & 1;
  v14 = sub_1AE4FBE98();
  v15 = sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  sub_1AE65AD48(v14, a1, v13, a3, a4, v14, a5, v15, a6, a7);
}

void LifeEventView.enumerateActivityEvents<A, B>(of:from:order:using:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_1AE65AD48(a1, a2, a3 & 1, a4, a5, a6, a7, *(_QWORD *)(a8 + 8), a9, a10);
  sub_1AE4FBA7C();
}

void LifeEventView.enumerateActivityEvents<A>(whose:in:from:order:using:)(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1AE4F9674(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

{
  sub_1AE4F9674(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

{
  sub_1AE4F9674(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

{
  sub_1AE4F9674(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

{
  sub_1AE4F9674(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  sub_1AE4FC530();
}

void LifeEventView.enumerateActivityEvents<A, B>(of:whose:in:from:order:using:)()
{
  __n128 v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1AE509F98();
  sub_1AE4FF1C8(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0);
  sub_1AE4FC538();
}

{
  __n128 v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1AE509F98();
  sub_1AE4FF1C8(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0);
  sub_1AE4FC538();
}

{
  __n128 v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1AE509F98();
  sub_1AE4FF1C8(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0);
  sub_1AE4FC538();
}

{
  __n128 v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1AE509F98();
  sub_1AE4FF1C8(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0);
  sub_1AE4FC538();
}

{
  __n128 v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1AE509F98();
  sub_1AE4FF1C8(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0);
  sub_1AE4FC538();
}

uint64_t sub_1AE80DF7C(char *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v21;

  v14 = *a1;
  v15 = a4 & 1;
  v16 = sub_1AE4FBE98();
  v21 = v14;
  v17 = sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  return a10(v16, &v21, a2, a3, v15, a5, a6, v16, a7, v17, a8, a9);
}

void sub_1AE80E13C(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(uint64_t, char *, uint64_t, uint64_t, _QWORD))
{
  char v13;

  v13 = *a2;
  a13(a1, &v13, a3, a4, a5 & 1);
  sub_1AE4FC538();
}

void LifeEventView.enumerateActivityEvents<A>(overlapping:from:order:using:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1AE80E6FC(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AF80);
  sub_1AE4FC530();
}

{
  sub_1AE80E6FC(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AFA4);
  sub_1AE4FC530();
}

{
  sub_1AE80E6FC(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AFC8);
  sub_1AE4FC530();
}

{
  sub_1AE80E6FC(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65AFEC);
  sub_1AE4FC530();
}

{
  sub_1AE80E6FC(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE65B010);
  sub_1AE4FC530();
}

void LifeEventView.enumerateActivityEvents<A, B>(of:overlapping:from:order:using:)()
{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1AE4F9488();
  sub_1AE501024(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0);
  sub_1AE4FBA7C();
}

{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1AE4F9488();
  sub_1AE501024(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0);
  sub_1AE4FBA7C();
}

{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1AE4F9488();
  sub_1AE501024(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0);
  sub_1AE4FBA7C();
}

{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1AE4F9488();
  sub_1AE501024(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0);
  sub_1AE4FBA7C();
}

{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_1AE4F9488();
  sub_1AE501024(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0);
  sub_1AE4FBA7C();
}

uint64_t sub_1AE80E1EC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = a3 & 1;
  v16 = sub_1AE4FBE98();
  v17 = sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  return a9(v16, a1, a2, v15, a4, a5, v16, a6, v17, a7, a8);
}

void sub_1AE80E39C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  a12(a1, a2, a3, a4 & 1);
  sub_1AE4FC538();
}

void LifeEventView.latestActivityEvent<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AE80E42C(a1, a2, a3, sub_1AE65B0F0);
}

void LifeEventView.latestActivityEvent<A, B>(of:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1AE80E4CC(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE65B0F0);
}

void LifeEventView.earliestActivityEvent<A>(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AE80E42C(a1, a2, a3, sub_1AE65B10C);
}

void sub_1AE80E42C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_1AE4FBE98();
  v9 = sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  a4(v8, a1, v8, a2, v9, a3);
  sub_1AE4FCE34();
}

void LifeEventView.earliestActivityEvent<A, B>(of:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1AE80E4CC(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1AE65B10C);
}

void sub_1AE80E4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))
{
  a7(a1, a2, a3, a4, *(_QWORD *)(a5 + 8));
  sub_1AE4FD974();
}

uint64_t LifeEventView.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t LifeEventView.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE80E52C()
{
  return sub_1AE512FA0(&qword_1EED99140, (uint64_t (*)(uint64_t))type metadata accessor for LifeEventEntryView, (uint64_t)&unk_1AE95E320);
}

uint64_t method lookup function for LifeEventView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LifeEventView.__allocating_init(viewService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_1AE80E57C()
{
  type metadata accessor for LifeEventEntryView();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1AE4FE0A8();
  sub_1AE4FE0A8();
  sub_1AE508D20();
  sub_1AE508D20();
  sub_1AE4FE0A8();
  sub_1AE508D20();
  sub_1AE808118();
}

void sub_1AE80E69C(uint64_t a1)
{
  sub_1AE512FA0(&qword_1EED99140, (uint64_t (*)(uint64_t))type metadata accessor for LifeEventEntryView, (uint64_t)&unk_1AE95E320);
  MEMORY[0x1AF454B70](&unk_1AE96DA70, a1);
  sub_1AE5088F0();
}

void sub_1AE80E6E4(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE948C04, a1);
  sub_1AE4F778C();
}

uint64_t sub_1AE80E6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  return sub_1AE80E1EC(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1AE80E704()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  sub_1AE4FC4D4();
  sub_1AE5FC2B4();
  sub_1AE501548(&qword_1EED9E350);
  sub_1AE4F7878();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE501F28();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE507774();
  sub_1AE501548(&qword_1EEDA32B0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F94A4();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE509704();
  if (v8 || (sub_1AE507C18(), !v8))
  {
LABEL_36:
    sub_1AE506A88();
    sub_1AE4F8180();
    return;
  }
  sub_1AE500588();
  while (1)
  {
    if (v2)
    {
      sub_1AE5058B4();
LABEL_7:
      v9 = sub_1AE5039FC();
      sub_1AE501030(v9);
      v10 = sub_1AE812C70();
      sub_1AE812D34((uint64_t)v10, v11, v12, v13);
      goto LABEL_30;
    }
    sub_1AE812D10();
    if (v14)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1AE5084B4();
    v1 = v28;
    if (v15 != v14)
    {
      sub_1AE812D04();
      if (v17)
        goto LABEL_12;
      sub_1AE812CA4(v16);
      if (v15 != v14)
      {
        sub_1AE812CEC();
        if (v19)
          goto LABEL_16;
        sub_1AE50A10C();
        if (v15 != v14)
          break;
      }
    }
LABEL_29:
    v24 = sub_1AE812C88();
    sub_1AE4F967C(v24);
LABEL_30:
    sub_1AE5FBF04();
    sub_1AE812BBC();
    v25 = sub_1AE812C88();
    sub_1AE50A71C(v25);
    if (v8)
      goto LABEL_36;
    sub_1AE4FD4E4();
    v26 = sub_1AE536F4C(v0);
    if ((v27 & 1) == 0)
    {
      sub_1AE509858();
      goto LABEL_36;
    }
    sub_1AE4FE0BC(v26);
    sub_1AE52FB78(&qword_1EEDA3C80, &qword_1EED9E350, MEMORY[0x1E0CAE350]);
    sub_1AE4FBF38();
    sub_1AE4F6D7C();
    sub_1AE7D32D8(v3);
    if ((v1 & 1) == 0)
      goto LABEL_36;
  }
  sub_1AE812CF8();
  if (v21)
  {
    v16 = v20;
    goto LABEL_12;
  }
  sub_1AE812C90();
  if (v15 == v14)
    goto LABEL_29;
  sub_1AE812D28();
  if (v22)
  {
LABEL_16:
    v16 = v18;
LABEL_12:
    sub_1AE4FCB60(v16);
    goto LABEL_7;
  }
  while (!__OFADD__(v18, 1))
  {
    sub_1AE5084B4();
    if (v15 == v14)
    {
      sub_1AE812D1C();
      goto LABEL_29;
    }
    sub_1AE507FFC();
    if (v23)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_1AE80E8DC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  sub_1AE4FC4D4();
  sub_1AE5FC2B4();
  sub_1AE501548(&qword_1EED9E350);
  sub_1AE4F7878();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE501F28();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE507774();
  sub_1AE501548(&qword_1EEDA32D0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F94A4();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE509704();
  if (v8 || (sub_1AE507C18(), !v8))
  {
LABEL_36:
    sub_1AE506A88();
    sub_1AE4F8180();
    return;
  }
  sub_1AE500588();
  while (1)
  {
    if (v2)
    {
      sub_1AE5058B4();
LABEL_7:
      v9 = sub_1AE5039FC();
      sub_1AE501030(v9);
      v10 = sub_1AE812C70();
      sub_1AE812D34((uint64_t)v10, v11, v12, v13);
      goto LABEL_30;
    }
    sub_1AE812D10();
    if (v14)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1AE5084B4();
    v1 = v28;
    if (v15 != v14)
    {
      sub_1AE812D04();
      if (v17)
        goto LABEL_12;
      sub_1AE812CA4(v16);
      if (v15 != v14)
      {
        sub_1AE812CEC();
        if (v19)
          goto LABEL_16;
        sub_1AE50A10C();
        if (v15 != v14)
          break;
      }
    }
LABEL_29:
    v24 = sub_1AE812C88();
    sub_1AE4F967C(v24);
LABEL_30:
    sub_1AE5FBF04();
    sub_1AE812BBC();
    v25 = sub_1AE812C88();
    sub_1AE50A71C(v25);
    if (v8)
      goto LABEL_36;
    sub_1AE4FD4E4();
    v26 = sub_1AE536F4C(v0);
    if ((v27 & 1) == 0)
    {
      sub_1AE509858();
      goto LABEL_36;
    }
    sub_1AE4FE0BC(v26);
    sub_1AE52FB78(&qword_1EEDA3C80, &qword_1EED9E350, MEMORY[0x1E0CAE350]);
    sub_1AE4FBF38();
    sub_1AE4F6D7C();
    sub_1AE7D32D8(v3);
    if ((v1 & 1) == 0)
      goto LABEL_36;
  }
  sub_1AE812CF8();
  if (v21)
  {
    v16 = v20;
    goto LABEL_12;
  }
  sub_1AE812C90();
  if (v15 == v14)
    goto LABEL_29;
  sub_1AE812D28();
  if (v22)
  {
LABEL_16:
    v16 = v18;
LABEL_12:
    sub_1AE4FCB60(v16);
    goto LABEL_7;
  }
  while (!__OFADD__(v18, 1))
  {
    sub_1AE5084B4();
    if (v15 == v14)
    {
      sub_1AE812D1C();
      goto LABEL_29;
    }
    sub_1AE507FFC();
    if (v23)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_1AE80EAB4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  sub_1AE4FC4D4();
  sub_1AE5FC2B4();
  sub_1AE501548(&qword_1EED9E350);
  sub_1AE4F7878();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE501F28();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE507774();
  sub_1AE501548(&qword_1EEDA32E8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F94A4();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE509704();
  if (v8 || (sub_1AE507C18(), !v8))
  {
LABEL_36:
    sub_1AE506A88();
    sub_1AE4F8180();
    return;
  }
  sub_1AE500588();
  while (1)
  {
    if (v2)
    {
      sub_1AE5058B4();
LABEL_7:
      v9 = sub_1AE5039FC();
      sub_1AE501030(v9);
      v10 = sub_1AE812C70();
      sub_1AE812D34((uint64_t)v10, v11, v12, v13);
      goto LABEL_30;
    }
    sub_1AE812D10();
    if (v14)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1AE5084B4();
    v1 = v28;
    if (v15 != v14)
    {
      sub_1AE812D04();
      if (v17)
        goto LABEL_12;
      sub_1AE812CA4(v16);
      if (v15 != v14)
      {
        sub_1AE812CEC();
        if (v19)
          goto LABEL_16;
        sub_1AE50A10C();
        if (v15 != v14)
          break;
      }
    }
LABEL_29:
    v24 = sub_1AE812C88();
    sub_1AE4F967C(v24);
LABEL_30:
    sub_1AE5FBF04();
    sub_1AE812BBC();
    v25 = sub_1AE812C88();
    sub_1AE50A71C(v25);
    if (v8)
      goto LABEL_36;
    sub_1AE4FD4E4();
    v26 = sub_1AE536F4C(v0);
    if ((v27 & 1) == 0)
    {
      sub_1AE509858();
      goto LABEL_36;
    }
    sub_1AE4FE0BC(v26);
    sub_1AE52FB78(&qword_1EEDA3C80, &qword_1EED9E350, MEMORY[0x1E0CAE350]);
    sub_1AE4FBF38();
    sub_1AE4F6D7C();
    sub_1AE7D32D8(v3);
    if ((v1 & 1) == 0)
      goto LABEL_36;
  }
  sub_1AE812CF8();
  if (v21)
  {
    v16 = v20;
    goto LABEL_12;
  }
  sub_1AE812C90();
  if (v15 == v14)
    goto LABEL_29;
  sub_1AE812D28();
  if (v22)
  {
LABEL_16:
    v16 = v18;
LABEL_12:
    sub_1AE4FCB60(v16);
    goto LABEL_7;
  }
  while (!__OFADD__(v18, 1))
  {
    sub_1AE5084B4();
    if (v15 == v14)
    {
      sub_1AE812D1C();
      goto LABEL_29;
    }
    sub_1AE507FFC();
    if (v23)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_1AE80EC8C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  sub_1AE4FC4D4();
  sub_1AE5FC2B4();
  sub_1AE501548(&qword_1EED9A850);
  sub_1AE4F7878();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE501F28();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE507774();
  sub_1AE501548(&qword_1EEDA32C8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F94A4();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE509704();
  if (v8 || (sub_1AE507C18(), !v8))
  {
LABEL_36:
    sub_1AE506A88();
    sub_1AE4F8180();
    return;
  }
  sub_1AE500588();
  while (1)
  {
    if (v2)
    {
      sub_1AE5058B4();
LABEL_7:
      v9 = sub_1AE5039FC();
      sub_1AE501030(v9);
      v10 = sub_1AE812C70();
      sub_1AE812D34((uint64_t)v10, v11, v12, v13);
      goto LABEL_30;
    }
    sub_1AE812D10();
    if (v14)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1AE5084B4();
    v1 = v28;
    if (v15 != v14)
    {
      sub_1AE812D04();
      if (v17)
        goto LABEL_12;
      sub_1AE812CA4(v16);
      if (v15 != v14)
      {
        sub_1AE812CEC();
        if (v19)
          goto LABEL_16;
        sub_1AE50A10C();
        if (v15 != v14)
          break;
      }
    }
LABEL_29:
    v24 = sub_1AE812C88();
    sub_1AE4F967C(v24);
LABEL_30:
    sub_1AE5FBF04();
    sub_1AE812BBC();
    v25 = sub_1AE812C88();
    sub_1AE50A71C(v25);
    if (v8)
      goto LABEL_36;
    sub_1AE4FD4E4();
    v26 = sub_1AE536F4C(v0);
    if ((v27 & 1) == 0)
    {
      sub_1AE509858();
      goto LABEL_36;
    }
    sub_1AE4FE0BC(v26);
    sub_1AE52FB78(&qword_1EEDA3C78, &qword_1EED9A850, MEMORY[0x1E0CAE350]);
    sub_1AE4FBF38();
    sub_1AE4F6D7C();
    sub_1AE7D32D8(v3);
    if ((v1 & 1) == 0)
      goto LABEL_36;
  }
  sub_1AE812CF8();
  if (v21)
  {
    v16 = v20;
    goto LABEL_12;
  }
  sub_1AE812C90();
  if (v15 == v14)
    goto LABEL_29;
  sub_1AE812D28();
  if (v22)
  {
LABEL_16:
    v16 = v18;
LABEL_12:
    sub_1AE4FCB60(v16);
    goto LABEL_7;
  }
  while (!__OFADD__(v18, 1))
  {
    sub_1AE5084B4();
    if (v15 == v14)
    {
      sub_1AE812D1C();
      goto LABEL_29;
    }
    sub_1AE507FFC();
    if (v23)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_1AE80EE64()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  sub_1AE4FC4D4();
  sub_1AE5FC2B4();
  sub_1AE501548(&qword_1EED9A850);
  sub_1AE4F7878();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE501F28();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE507774();
  sub_1AE501548(&qword_1EEDA32A0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F94A4();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE509704();
  if (v8 || (sub_1AE507C18(), !v8))
  {
LABEL_36:
    sub_1AE506A88();
    sub_1AE4F8180();
    return;
  }
  sub_1AE500588();
  while (1)
  {
    if (v2)
    {
      sub_1AE5058B4();
LABEL_7:
      v9 = sub_1AE5039FC();
      sub_1AE501030(v9);
      v10 = sub_1AE812C70();
      sub_1AE812D34((uint64_t)v10, v11, v12, v13);
      goto LABEL_30;
    }
    sub_1AE812D10();
    if (v14)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1AE5084B4();
    v1 = v28;
    if (v15 != v14)
    {
      sub_1AE812D04();
      if (v17)
        goto LABEL_12;
      sub_1AE812CA4(v16);
      if (v15 != v14)
      {
        sub_1AE812CEC();
        if (v19)
          goto LABEL_16;
        sub_1AE50A10C();
        if (v15 != v14)
          break;
      }
    }
LABEL_29:
    v24 = sub_1AE812C88();
    sub_1AE4F967C(v24);
LABEL_30:
    sub_1AE5FBF04();
    sub_1AE812BBC();
    v25 = sub_1AE812C88();
    sub_1AE50A71C(v25);
    if (v8)
      goto LABEL_36;
    sub_1AE4FD4E4();
    v26 = sub_1AE536F4C(v0);
    if ((v27 & 1) == 0)
    {
      sub_1AE509858();
      goto LABEL_36;
    }
    sub_1AE4FE0BC(v26);
    sub_1AE52FB78(&qword_1EEDA3C78, &qword_1EED9A850, MEMORY[0x1E0CAE350]);
    sub_1AE4FBF38();
    sub_1AE4F6D7C();
    sub_1AE7D32D8(v3);
    if ((v1 & 1) == 0)
      goto LABEL_36;
  }
  sub_1AE812CF8();
  if (v21)
  {
    v16 = v20;
    goto LABEL_12;
  }
  sub_1AE812C90();
  if (v15 == v14)
    goto LABEL_29;
  sub_1AE812D28();
  if (v22)
  {
LABEL_16:
    v16 = v18;
LABEL_12:
    sub_1AE4FCB60(v16);
    goto LABEL_7;
  }
  while (!__OFADD__(v18, 1))
  {
    sub_1AE5084B4();
    if (v15 == v14)
    {
      sub_1AE812D1C();
      goto LABEL_29;
    }
    sub_1AE507FFC();
    if (v23)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_1AE80F03C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  sub_1AE4FC4D4();
  sub_1AE5FC2B4();
  sub_1AE501548(&qword_1EED9A850);
  sub_1AE4F7878();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE501F28();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE507774();
  sub_1AE501548(&qword_1EEDA32E0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F94A4();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE509704();
  if (v8 || (sub_1AE507C18(), !v8))
  {
LABEL_36:
    sub_1AE506A88();
    sub_1AE4F8180();
    return;
  }
  sub_1AE500588();
  while (1)
  {
    if (v2)
    {
      sub_1AE5058B4();
LABEL_7:
      v9 = sub_1AE5039FC();
      sub_1AE501030(v9);
      v10 = sub_1AE812C70();
      sub_1AE812D34((uint64_t)v10, v11, v12, v13);
      goto LABEL_30;
    }
    sub_1AE812D10();
    if (v14)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1AE5084B4();
    v1 = v28;
    if (v15 != v14)
    {
      sub_1AE812D04();
      if (v17)
        goto LABEL_12;
      sub_1AE812CA4(v16);
      if (v15 != v14)
      {
        sub_1AE812CEC();
        if (v19)
          goto LABEL_16;
        sub_1AE50A10C();
        if (v15 != v14)
          break;
      }
    }
LABEL_29:
    v24 = sub_1AE812C88();
    sub_1AE4F967C(v24);
LABEL_30:
    sub_1AE5FBF04();
    sub_1AE812BBC();
    v25 = sub_1AE812C88();
    sub_1AE50A71C(v25);
    if (v8)
      goto LABEL_36;
    sub_1AE4FD4E4();
    v26 = sub_1AE536F4C(v0);
    if ((v27 & 1) == 0)
    {
      sub_1AE509858();
      goto LABEL_36;
    }
    sub_1AE4FE0BC(v26);
    sub_1AE52FB78(&qword_1EEDA3C78, &qword_1EED9A850, MEMORY[0x1E0CAE350]);
    sub_1AE4FBF38();
    sub_1AE4F6D7C();
    sub_1AE7D32D8(v3);
    if ((v1 & 1) == 0)
      goto LABEL_36;
  }
  sub_1AE812CF8();
  if (v21)
  {
    v16 = v20;
    goto LABEL_12;
  }
  sub_1AE812C90();
  if (v15 == v14)
    goto LABEL_29;
  sub_1AE812D28();
  if (v22)
  {
LABEL_16:
    v16 = v18;
LABEL_12:
    sub_1AE4FCB60(v16);
    goto LABEL_7;
  }
  while (!__OFADD__(v18, 1))
  {
    sub_1AE5084B4();
    if (v15 == v14)
    {
      sub_1AE812D1C();
      goto LABEL_29;
    }
    sub_1AE507FFC();
    if (v23)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_1AE80F214()
{
  sub_1AE80F3D8();
}

void sub_1AE80F238(uint64_t a1, uint64_t a2)
{
  sub_1AE80F250(a1, a2);
}

void sub_1AE80F244(uint64_t a1, uint64_t a2)
{
  sub_1AE80F250(a1, a2);
}

void sub_1AE80F250(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t (*v5)(uint64_t, uint64_t);
  char v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  if (a1 == a2 || (sub_1AE812D48(), !v6))
  {
LABEL_26:
    sub_1AE506210();
    return;
  }
  v7 = v5;
  v8 = 0;
  sub_1AE506E64();
  while (1)
  {
    if (v3)
    {
      sub_1AE812D68();
      goto LABEL_21;
    }
    v10 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v10 >= v16)
      goto LABEL_26;
    v11 = *(_QWORD *)(a1 + 8 * v10);
    ++v8;
    if (!v11)
    {
      v8 = v10 + 1;
      if (v10 + 1 >= v16)
        goto LABEL_26;
      v11 = *(_QWORD *)(a1 + 8 * v8);
      if (!v11)
      {
        v8 = v10 + 2;
        if (v10 + 2 >= v16)
          goto LABEL_26;
        v11 = *(_QWORD *)(a1 + 8 * v8);
        if (!v11)
          break;
      }
    }
LABEL_20:
    v3 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v8 << 6);
LABEL_21:
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v9);
    sub_1AE4F6804();
    sub_1AE4F6730();
    sub_1AE812DD0();
    sub_1AE812D58();
    if ((v2 & 1) == 0)
    {
      sub_1AE4F81B8();
      goto LABEL_26;
    }
    v14 = sub_1AE4F6708();
    v15 = v7(v14, v13);
    sub_1AE4F81B8();
    sub_1AE4F76D8();
    if ((v15 & 1) == 0)
      goto LABEL_26;
  }
  v12 = v10 + 3;
  if (v12 >= v16)
    goto LABEL_26;
  v11 = *(_QWORD *)(a1 + 8 * v12);
  if (v11)
  {
    v8 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v8 >= v16)
      goto LABEL_26;
    v11 = *(_QWORD *)(a1 + 8 * v8);
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_28:
  __break(1u);
}

void sub_1AE80F3B4()
{
  sub_1AE80F3D8();
}

void sub_1AE80F3D8()
{
  char *v0;
  uint64_t *v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char *v51;
  char v52;
  void (*v53)(char *, uint64_t);
  int64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t *v61;
  unint64_t *v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;

  sub_1AE4FC4D4();
  v61 = v1;
  v62 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v65 = sub_1AE501548(v1);
  v11 = *(_QWORD *)(v65 - 8);
  v12 = MEMORY[0x1E0C80A78](v65);
  v60 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v54 - v14;
  v64 = v6;
  sub_1AE501548(v6);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE501F28();
  MEMORY[0x1E0C80A78](v17);
  if (v10 == v8 || *(_QWORD *)(v10 + 16) != *(_QWORD *)(v8 + 16))
  {
LABEL_33:
    sub_1AE4F8180();
    return;
  }
  v63 = (int64_t *)((char *)&v54 - v18);
  v58 = v8;
  v59 = v11;
  v66 = 0;
  v67 = v4;
  v57 = v10;
  v21 = *(_QWORD *)(v10 + 64);
  v20 = v10 + 64;
  v19 = v21;
  v22 = 1 << *(_BYTE *)(v20 - 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v19;
  v55 = v20;
  v56 = (unint64_t)(v22 + 63) >> 6;
  v54 = v56 - 1;
  while (1)
  {
    if (v24)
    {
      v25 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      v26 = v65;
      v27 = v25 | (v66 << 6);
      v28 = v59;
LABEL_8:
      v29 = (uint64_t *)(*(_QWORD *)(v57 + 48) + 16 * v27);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v57 + 56) + *(_QWORD *)(v28 + 72) * v27;
      v33 = sub_1AE812DC8();
      (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(&v0[*(int *)(v33 + 48)], v32, v26);
      *(_QWORD *)v0 = v31;
      *((_QWORD *)v0 + 1) = v30;
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v0, 0, 1, v33);
      swift_bridgeObjectRetain();
      v34 = v63;
      goto LABEL_27;
    }
    v35 = v66 + 1;
    if (__OFADD__(v66, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    v28 = v59;
    v26 = v65;
    v34 = v63;
    if (v35 < v56)
    {
      v36 = *(_QWORD *)(v55 + 8 * v35);
      if (v36)
        goto LABEL_12;
      v37 = v66 + 2;
      ++v66;
      if (v35 + 1 < v56)
      {
        v36 = *(_QWORD *)(v55 + 8 * v37);
        if (v36)
          goto LABEL_15;
        v66 = v35 + 1;
        if (v35 + 2 < v56)
        {
          v36 = *(_QWORD *)(v55 + 8 * (v35 + 2));
          if (v36)
          {
            v35 += 2;
            goto LABEL_12;
          }
          v37 = v35 + 3;
          v66 = v35 + 2;
          if (v35 + 3 < v56)
            break;
        }
      }
    }
LABEL_26:
    v38 = sub_1AE812DC8();
    sub_1AE812D94((uint64_t)v0, 1, v39, v38);
    v24 = 0;
LABEL_27:
    sub_1AE812BBC();
    v40 = sub_1AE812DC8();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v34, 1, v40) == 1)
      goto LABEL_33;
    v41 = v0;
    v42 = (char *)v34 + *(int *)(v40 + 48);
    v44 = *v34;
    v43 = v34[1];
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v15, v42, v26);
    v45 = v58;
    v46 = v26;
    v47 = v15;
    v48 = sub_1AE536EDC(v44, v43);
    LOBYTE(v44) = v49;
    sub_1AE4F665C();
    if ((v44 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v47, v46);
      goto LABEL_33;
    }
    v50 = *(_QWORD *)(v45 + 56) + *(_QWORD *)(v28 + 72) * v48;
    v51 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v60, v50, v46);
    sub_1AE52FB78(v62, v61, MEMORY[0x1E0CAE350]);
    v52 = sub_1AE925E00();
    v53 = *(void (**)(char *, uint64_t))(v28 + 8);
    v53(v51, v46);
    v53(v47, v46);
    v15 = v47;
    v0 = v41;
    if ((v52 & 1) == 0)
      goto LABEL_33;
  }
  v36 = *(_QWORD *)(v55 + 8 * v37);
  if (v36)
  {
LABEL_15:
    v35 = v37;
LABEL_12:
    v24 = (v36 - 1) & v36;
    v27 = __clz(__rbit64(v36)) + (v35 << 6);
    v66 = v35;
    goto LABEL_8;
  }
  while (1)
  {
    v35 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    if (v35 >= v56)
    {
      v66 = v54;
      goto LABEL_26;
    }
    v36 = *(_QWORD *)(v55 + 8 * v35);
    ++v37;
    if (v36)
      goto LABEL_12;
  }
LABEL_35:
  __break(1u);
}

void sub_1AE80F7A8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  sub_1AE4FC4D4();
  sub_1AE5FC2B4();
  sub_1AE501548(&qword_1EED9E350);
  sub_1AE4F7878();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE501F28();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE507774();
  sub_1AE501548(&qword_1EEDA3288);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F94A4();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE509704();
  if (v8 || (sub_1AE507C18(), !v8))
  {
LABEL_36:
    sub_1AE506A88();
    sub_1AE4F8180();
    return;
  }
  sub_1AE500588();
  while (1)
  {
    if (v2)
    {
      sub_1AE5058B4();
LABEL_7:
      v9 = sub_1AE5039FC();
      sub_1AE501030(v9);
      v10 = sub_1AE812C70();
      sub_1AE812D34((uint64_t)v10, v11, v12, v13);
      goto LABEL_30;
    }
    sub_1AE812D10();
    if (v14)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1AE5084B4();
    v1 = v28;
    if (v15 != v14)
    {
      sub_1AE812D04();
      if (v17)
        goto LABEL_12;
      sub_1AE812CA4(v16);
      if (v15 != v14)
      {
        sub_1AE812CEC();
        if (v19)
          goto LABEL_16;
        sub_1AE50A10C();
        if (v15 != v14)
          break;
      }
    }
LABEL_29:
    v24 = sub_1AE812C88();
    sub_1AE4F967C(v24);
LABEL_30:
    sub_1AE5FBF04();
    sub_1AE812BBC();
    v25 = sub_1AE812C88();
    sub_1AE50A71C(v25);
    if (v8)
      goto LABEL_36;
    sub_1AE4FD4E4();
    v26 = sub_1AE536F4C(v0);
    if ((v27 & 1) == 0)
    {
      sub_1AE509858();
      goto LABEL_36;
    }
    sub_1AE4FE0BC(v26);
    sub_1AE52FB78(&qword_1EEDA3C80, &qword_1EED9E350, MEMORY[0x1E0CAE350]);
    sub_1AE4FBF38();
    sub_1AE4F6D7C();
    sub_1AE7D32D8(v3);
    if ((v1 & 1) == 0)
      goto LABEL_36;
  }
  sub_1AE812CF8();
  if (v21)
  {
    v16 = v20;
    goto LABEL_12;
  }
  sub_1AE812C90();
  if (v15 == v14)
    goto LABEL_29;
  sub_1AE812D28();
  if (v22)
  {
LABEL_16:
    v16 = v18;
LABEL_12:
    sub_1AE4FCB60(v16);
    goto LABEL_7;
  }
  while (!__OFADD__(v18, 1))
  {
    sub_1AE5084B4();
    if (v15 == v14)
    {
      sub_1AE812D1C();
      goto LABEL_29;
    }
    sub_1AE507FFC();
    if (v23)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_1AE80F980()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  sub_1AE4FC4D4();
  sub_1AE5FC2B4();
  sub_1AE501548(&qword_1EED9A850);
  sub_1AE4F7878();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE501F28();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE507774();
  sub_1AE501548(&qword_1EEDA3258);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F94A4();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE509704();
  if (v8 || (sub_1AE507C18(), !v8))
  {
LABEL_36:
    sub_1AE506A88();
    sub_1AE4F8180();
    return;
  }
  sub_1AE500588();
  while (1)
  {
    if (v2)
    {
      sub_1AE5058B4();
LABEL_7:
      v9 = sub_1AE5039FC();
      sub_1AE501030(v9);
      v10 = sub_1AE812C70();
      sub_1AE812D34((uint64_t)v10, v11, v12, v13);
      goto LABEL_30;
    }
    sub_1AE812D10();
    if (v14)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1AE5084B4();
    v1 = v28;
    if (v15 != v14)
    {
      sub_1AE812D04();
      if (v17)
        goto LABEL_12;
      sub_1AE812CA4(v16);
      if (v15 != v14)
      {
        sub_1AE812CEC();
        if (v19)
          goto LABEL_16;
        sub_1AE50A10C();
        if (v15 != v14)
          break;
      }
    }
LABEL_29:
    v24 = sub_1AE812C88();
    sub_1AE4F967C(v24);
LABEL_30:
    sub_1AE5FBF04();
    sub_1AE812BBC();
    v25 = sub_1AE812C88();
    sub_1AE50A71C(v25);
    if (v8)
      goto LABEL_36;
    sub_1AE4FD4E4();
    v26 = sub_1AE536F4C(v0);
    if ((v27 & 1) == 0)
    {
      sub_1AE509858();
      goto LABEL_36;
    }
    sub_1AE4FE0BC(v26);
    sub_1AE52FB78(&qword_1EEDA3C78, &qword_1EED9A850, MEMORY[0x1E0CAE350]);
    sub_1AE4FBF38();
    sub_1AE4F6D7C();
    sub_1AE7D32D8(v3);
    if ((v1 & 1) == 0)
      goto LABEL_36;
  }
  sub_1AE812CF8();
  if (v21)
  {
    v16 = v20;
    goto LABEL_12;
  }
  sub_1AE812C90();
  if (v15 == v14)
    goto LABEL_29;
  sub_1AE812D28();
  if (v22)
  {
LABEL_16:
    v16 = v18;
LABEL_12:
    sub_1AE4FCB60(v16);
    goto LABEL_7;
  }
  while (!__OFADD__(v18, 1))
  {
    sub_1AE5084B4();
    if (v15 == v14)
    {
      sub_1AE812D1C();
      goto LABEL_29;
    }
    sub_1AE507FFC();
    if (v23)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_1AE80FB58()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  sub_1AE4FC4D4();
  sub_1AE5FC2B4();
  sub_1AE501548(&qword_1EED9A850);
  sub_1AE4F7878();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE501F28();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE507774();
  sub_1AE501548(&qword_1EEDA3240);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F94A4();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE509704();
  if (v8 || (sub_1AE507C18(), !v8))
  {
LABEL_36:
    sub_1AE506A88();
    sub_1AE4F8180();
    return;
  }
  sub_1AE500588();
  while (1)
  {
    if (v2)
    {
      sub_1AE5058B4();
LABEL_7:
      v9 = sub_1AE5039FC();
      sub_1AE501030(v9);
      v10 = sub_1AE812C70();
      sub_1AE812D34((uint64_t)v10, v11, v12, v13);
      goto LABEL_30;
    }
    sub_1AE812D10();
    if (v14)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1AE5084B4();
    v1 = v28;
    if (v15 != v14)
    {
      sub_1AE812D04();
      if (v17)
        goto LABEL_12;
      sub_1AE812CA4(v16);
      if (v15 != v14)
      {
        sub_1AE812CEC();
        if (v19)
          goto LABEL_16;
        sub_1AE50A10C();
        if (v15 != v14)
          break;
      }
    }
LABEL_29:
    v24 = sub_1AE812C88();
    sub_1AE4F967C(v24);
LABEL_30:
    sub_1AE5FBF04();
    sub_1AE812BBC();
    v25 = sub_1AE812C88();
    sub_1AE50A71C(v25);
    if (v8)
      goto LABEL_36;
    sub_1AE4FD4E4();
    v26 = sub_1AE536F4C(v0);
    if ((v27 & 1) == 0)
    {
      sub_1AE509858();
      goto LABEL_36;
    }
    sub_1AE4FE0BC(v26);
    sub_1AE52FB78(&qword_1EEDA3C78, &qword_1EED9A850, MEMORY[0x1E0CAE350]);
    sub_1AE4FBF38();
    sub_1AE4F6D7C();
    sub_1AE7D32D8(v3);
    if ((v1 & 1) == 0)
      goto LABEL_36;
  }
  sub_1AE812CF8();
  if (v21)
  {
    v16 = v20;
    goto LABEL_12;
  }
  sub_1AE812C90();
  if (v15 == v14)
    goto LABEL_29;
  sub_1AE812D28();
  if (v22)
  {
LABEL_16:
    v16 = v18;
LABEL_12:
    sub_1AE4FCB60(v16);
    goto LABEL_7;
  }
  while (!__OFADD__(v18, 1))
  {
    sub_1AE5084B4();
    if (v15 == v14)
    {
      sub_1AE812D1C();
      goto LABEL_29;
    }
    sub_1AE507FFC();
    if (v23)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_1AE80FD30()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  sub_1AE4FC4D4();
  sub_1AE5FC2B4();
  sub_1AE501548(&qword_1EED9A850);
  sub_1AE4F7878();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE501F28();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE507774();
  sub_1AE501548(&qword_1EEDA3228);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F94A4();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE509704();
  if (v8 || (sub_1AE507C18(), !v8))
  {
LABEL_36:
    sub_1AE506A88();
    sub_1AE4F8180();
    return;
  }
  sub_1AE500588();
  while (1)
  {
    if (v2)
    {
      sub_1AE5058B4();
LABEL_7:
      v9 = sub_1AE5039FC();
      sub_1AE501030(v9);
      v10 = sub_1AE812C70();
      sub_1AE812D34((uint64_t)v10, v11, v12, v13);
      goto LABEL_30;
    }
    sub_1AE812D10();
    if (v14)
    {
      __break(1u);
      goto LABEL_38;
    }
    sub_1AE5084B4();
    v1 = v28;
    if (v15 != v14)
    {
      sub_1AE812D04();
      if (v17)
        goto LABEL_12;
      sub_1AE812CA4(v16);
      if (v15 != v14)
      {
        sub_1AE812CEC();
        if (v19)
          goto LABEL_16;
        sub_1AE50A10C();
        if (v15 != v14)
          break;
      }
    }
LABEL_29:
    v24 = sub_1AE812C88();
    sub_1AE4F967C(v24);
LABEL_30:
    sub_1AE5FBF04();
    sub_1AE812BBC();
    v25 = sub_1AE812C88();
    sub_1AE50A71C(v25);
    if (v8)
      goto LABEL_36;
    sub_1AE4FD4E4();
    v26 = sub_1AE536F4C(v0);
    if ((v27 & 1) == 0)
    {
      sub_1AE509858();
      goto LABEL_36;
    }
    sub_1AE4FE0BC(v26);
    sub_1AE52FB78(&qword_1EEDA3C78, &qword_1EED9A850, MEMORY[0x1E0CAE350]);
    sub_1AE4FBF38();
    sub_1AE4F6D7C();
    sub_1AE7D32D8(v3);
    if ((v1 & 1) == 0)
      goto LABEL_36;
  }
  sub_1AE812CF8();
  if (v21)
  {
    v16 = v20;
    goto LABEL_12;
  }
  sub_1AE812C90();
  if (v15 == v14)
    goto LABEL_29;
  sub_1AE812D28();
  if (v22)
  {
LABEL_16:
    v16 = v18;
LABEL_12:
    sub_1AE4FCB60(v16);
    goto LABEL_7;
  }
  while (!__OFADD__(v18, 1))
  {
    sub_1AE5084B4();
    if (v15 == v14)
    {
      sub_1AE812D1C();
      goto LABEL_29;
    }
    sub_1AE507FFC();
    if (v23)
      goto LABEL_12;
  }
LABEL_38:
  __break(1u);
}

void sub_1AE80FF08(uint64_t a1, uint64_t a2)
{
  sub_1AE80FF14(a1, a2);
}

void sub_1AE80FF14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v5)(_QWORD);
  char v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char v19;

  if (a1 == a2)
    return;
  sub_1AE812D48();
  if (!v6)
    return;
  v7 = v5;
  v8 = 0;
  v9 = a1 + 64;
  sub_1AE506440();
  v11 = v10 >> 6;
  while (1)
  {
    if (v2)
    {
      sub_1AE812D80();
      v13 = v12 | (v8 << 6);
      goto LABEL_21;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      return;
    v15 = *(_QWORD *)(v9 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v11)
        return;
      v15 = *(_QWORD *)(v9 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v11)
          return;
        v15 = *(_QWORD *)(v9 + 8 * v8);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v2 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_21:
    v17 = *(double *)(*(_QWORD *)(a1 + 56) + 8 * v13);
    v18 = v7(*(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v13));
    if ((v19 & 1) == 0 || *(double *)(*(_QWORD *)(a2 + 56) + 8 * v18) != v17)
      return;
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    return;
  v15 = *(_QWORD *)(v9 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v11)
      return;
    v15 = *(_QWORD *)(v9 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

void sub_1AE810058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  sub_1AE4FC4D4();
  v2 = v1;
  v4 = v3;
  v5 = type metadata accessor for CodableLocation();
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  v8 = v7 - v6;
  sub_1AE501548(&qword_1EEDA3C70);
  sub_1AE4F66F0();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v36 - v13;
  if (v4 == v2 || *(_QWORD *)(v4 + 16) != *(_QWORD *)(v2 + 16))
  {
LABEL_32:
    sub_1AE4F8180();
    return;
  }
  v39 = 0;
  v37 = v4;
  sub_1AE506440();
  v36[1] = v4 + 64;
  v36[2] = v15 >> 6;
  v36[0] = (v15 >> 6) - 1;
  while (1)
  {
    if (v0)
    {
      sub_1AE812D80();
      v17 = v16 | (v39 << 6);
LABEL_6:
      v18 = v37;
      sub_1AE640264(*(_QWORD *)(v37 + 48) + *(_QWORD *)(v38 + 72) * v17, (uint64_t)v12);
      v19 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v17);
      v20 = sub_1AE812C88();
      *(_QWORD *)&v12[*(int *)(v20 + 48)] = v19;
      sub_1AE812D94((uint64_t)v12, 0, v21, v20);
      goto LABEL_29;
    }
    sub_1AE812D10();
    if (v22)
    {
      __break(1u);
      goto LABEL_34;
    }
    sub_1AE5084B4();
    if (v23 != v22)
    {
      sub_1AE812D04();
      if (v25)
        goto LABEL_11;
      sub_1AE812CA4(v24);
      if (v23 != v22)
      {
        sub_1AE812CEC();
        if (v25)
          goto LABEL_15;
        sub_1AE50A10C();
        if (v23 != v22)
          break;
      }
    }
LABEL_28:
    v28 = sub_1AE812C88();
    sub_1AE812D94((uint64_t)v12, 1, v29, v28);
    v0 = 0;
LABEL_29:
    sub_1AE812BBC();
    v30 = sub_1AE812C88();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v14, 1, v30) != 1)
    {
      v31 = *(int *)(v30 + 48);
      sub_1AE640220((uint64_t)v14, v8);
      v32 = *(_QWORD *)&v14[v31];
      v33 = sub_1AE536F04();
      v35 = v34;
      sub_1AE57B7C0(v8);
      if ((v35 & 1) != 0 && *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v33) == v32)
        continue;
    }
    goto LABEL_32;
  }
  sub_1AE812CF8();
  if (v25)
  {
    v24 = v27;
    goto LABEL_11;
  }
  sub_1AE812C90();
  if (v23 == v22)
    goto LABEL_28;
  sub_1AE812D28();
  if (v25)
  {
LABEL_15:
    v24 = v26;
LABEL_11:
    v0 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v24 << 6);
    v39 = v24;
    goto LABEL_6;
  }
  while (!__OFADD__(v26, 1))
  {
    sub_1AE5084B4();
    if (v23 == v22)
    {
      sub_1AE812D1C();
      goto LABEL_28;
    }
    sub_1AE507FFC();
    if (v25)
      goto LABEL_11;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_1AE8102D4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  char v22;

  if (result == a2)
    return 1;
  v2 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        return 1;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          return 1;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
          break;
      }
    }
LABEL_21:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    v14 = *(_QWORD *)(v2 + 48) + 24 * v10;
    v15 = *(_QWORD *)v14;
    v16 = *(_QWORD *)(v14 + 8);
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v10);
    v18 = *(unsigned __int8 *)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AE536FA8(v15, v16, v18);
    LOBYTE(v18) = v19;
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v20 = swift_bridgeObjectRetain();
    sub_1AE79539C(v20, v17);
    v22 = v21;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
      return 0;
  }
  v13 = v11 + 3;
  if (v13 >= v8)
    return 1;
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      return 1;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_1AE8104A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;

  sub_1AE4FC4D4();
  if (v0 == v1 || (v2 = v0, sub_1AE812D48(), !v3))
  {
LABEL_30:
    sub_1AE4F8180();
    return;
  }
  v4 = 0;
  v5 = v2 + 64;
  v6 = 1 << *(_BYTE *)(v2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v2 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_25;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 >= v9)
      goto LABEL_30;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        goto LABEL_30;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          goto LABEL_30;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            goto LABEL_30;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_24:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_25:
    v15 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v11);
    sub_1AE4F6708();
    swift_retain();
    sub_1AE536EDC(v16, v17);
    v20 = v19;
    sub_1AE4F76D8();
    if ((v20 & 1) == 0)
    {
      swift_release();
      goto LABEL_30;
    }
    type metadata accessor for KnosisQueryParam();
    v21 = swift_retain();
    sub_1AE885B88(v21, v18);
    v23 = v22;
    swift_release();
    swift_release();
    if ((v23 & 1) == 0)
      goto LABEL_30;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    goto LABEL_30;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      goto LABEL_30;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_24;
  }
LABEL_32:
  __break(1u);
}

void sub_1AE81066C(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  BOOL v22;
  char v23;
  uint64_t v24;

  if (a1 == a2 || (sub_1AE812D48(), !v22))
  {
LABEL_37:
    sub_1AE506210();
    return;
  }
  v6 = 0;
  sub_1AE506E64();
  while (1)
  {
    if (v3)
    {
      sub_1AE812D68();
      goto LABEL_27;
    }
    v8 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v8 >= v24)
      goto LABEL_37;
    v9 = *(_QWORD *)(a1 + 8 * v8);
    ++v6;
    if (!v9)
    {
      v6 = v8 + 1;
      sub_1AE812D9C();
      if (v11 == v12)
        goto LABEL_37;
      v9 = *(_QWORD *)(a1 + 8 * v6);
      if (!v9)
      {
        v6 = v10 + 2;
        sub_1AE812D9C();
        if (v11 == v12)
          goto LABEL_37;
        v9 = *(_QWORD *)(a1 + 8 * v6);
        if (!v9)
        {
          v6 = v13 + 3;
          sub_1AE812D9C();
          if (v11 == v12)
            goto LABEL_37;
          v9 = *(_QWORD *)(a1 + 8 * v6);
          if (!v9)
            break;
        }
      }
    }
LABEL_26:
    v3 = (v9 - 1) & v9;
    v7 = __clz(__rbit64(v9)) + (v6 << 6);
LABEL_27:
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v7);
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v7);
    v20 = *v18;
    v19 = v18[1];
    sub_1AE4F6804();
    sub_1AE4F66C4();
    sub_1AE812DD0();
    sub_1AE812D58();
    if ((v2 & 1) == 0)
    {
      sub_1AE4F665C();
      goto LABEL_37;
    }
    v21 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v17);
    v22 = *v21 == v20 && v21[1] == v19;
    if (v22)
    {
      sub_1AE4F665C();
    }
    else
    {
      v23 = sub_1AE926D60();
      sub_1AE4F665C();
      if ((v23 & 1) == 0)
        goto LABEL_37;
    }
  }
  v15 = v14 + 4;
  if (v15 >= v24)
    goto LABEL_37;
  v9 = *(_QWORD *)(a1 + 8 * v15);
  if (v9)
  {
    v6 = v15;
    goto LABEL_26;
  }
  while (1)
  {
    v6 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    sub_1AE812D9C();
    if (v11 == v12)
      goto LABEL_37;
    v9 = *(_QWORD *)(a1 + 8 * v6);
    v15 = v16 + 1;
    if (v9)
      goto LABEL_26;
  }
LABEL_39:
  __break(1u);
}

IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifierType_optional __swiftcall LiveGlobalKnowledge.ExternalIdentifierType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifierType_optional result;

  v2 = v1;
  v3 = sub_1AE926B44();
  sub_1AE4F6648();
  v4 = 5;
  if (v3 < 5)
    v4 = v3;
  *v2 = v4;
  sub_1AE4F6624();
  return result;
}

void *static LiveGlobalKnowledge.ExternalIdentifierType.allCases.getter()
{
  return &unk_1E5DA85F0;
}

uint64_t LiveGlobalKnowledge.ExternalIdentifierType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE810874 + 4 * byte_1AE95F020[*v0]))(0x44495F474BLL, 0xE500000000000000);
}

uint64_t sub_1AE810874()
{
  return 0x61746164696B6957;
}

uint64_t sub_1AE810894()
{
  return 0x44495F6D616441;
}

uint64_t sub_1AE8108AC()
{
  return 0x44495F434D55;
}

uint64_t sub_1AE8108C0()
{
  return 0x44495F7374617453;
}

void sub_1AE8108D8()
{
  sub_1AE511560();
}

void sub_1AE8108E4()
{
  unsigned __int8 *v0;

  sub_1AE512C9C(*v0);
}

void sub_1AE8108EC()
{
  sub_1AE5E8240();
}

void sub_1AE8108F4(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FC84(a1, *v1);
}

IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifierType_optional sub_1AE8108FC(Swift::String *a1)
{
  return LiveGlobalKnowledge.ExternalIdentifierType.init(rawValue:)(*a1);
}

uint64_t sub_1AE810908@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = LiveGlobalKnowledge.ExternalIdentifierType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1AE81092C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5DA85F0;
}

uint64_t sub_1AE81093C()
{
  sub_1AE812C34();
  return sub_1AE926190();
}

uint64_t sub_1AE810998()
{
  sub_1AE812C34();
  return sub_1AE926148();
}

uint64_t LiveGlobalKnowledge.ExternalIdentifier.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void LiveGlobalKnowledge.ExternalIdentifier.idType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

void LiveGlobalKnowledge.ExternalIdentifier.stringValue.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1AE810A68()
{
  uint64_t v1;

  sub_1AE925F74();
  sub_1AE4F81B8();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  sub_1AE4F6648();
  return v1;
}

IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifier __swiftcall LiveGlobalKnowledge.ExternalIdentifier.init(id:idType:)(Swift::String id, IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifierType idType)
{
  uint64_t v2;
  char v3;
  IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifier result;

  v3 = *(_BYTE *)idType;
  *(Swift::String *)v2 = id;
  *(_BYTE *)(v2 + 16) = v3;
  result.id = id;
  result.idType = idType;
  return result;
}

IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifier_optional __swiftcall LiveGlobalKnowledge.ExternalIdentifier.init(id:idTypeValue:)(Swift::String id, Swift::String idTypeValue)
{
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifierType_optional v8;
  char v9;
  char v10;
  IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifier_optional result;

  object = id._object;
  countAndFlagsBits = id._countAndFlagsBits;
  v5 = v2;
  LOBYTE(v6) = LiveGlobalKnowledge.ExternalIdentifierType.init(rawValue:)(idTypeValue);
  v9 = v10;
  if (v10 == 5)
  {
    v6 = swift_bridgeObjectRelease();
    countAndFlagsBits = 0;
    object = 0;
    v9 = 0;
  }
  *(_QWORD *)v5 = countAndFlagsBits;
  *(_QWORD *)(v5 + 8) = object;
  *(_BYTE *)(v5 + 16) = v9;
  result.value.id._object = v7;
  result.value.id._countAndFlagsBits = v6;
  result.value.idType = v8.value;
  return result;
}

IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifier_optional __swiftcall LiveGlobalKnowledge.ExternalIdentifier.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifierType v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  char countAndFlagsBits;
  IntelligencePlatform::LiveGlobalKnowledge::ExternalIdentifier_optional result;

  v2 = v1;
  countAndFlagsBits = stringValue._countAndFlagsBits;
  sub_1AE4F7630();
  v3 = (_QWORD *)sub_1AE9267D8();
  sub_1AE4F665C();
  if (v3[2] == 2)
  {
    v4 = v3[8];
    v5 = v3[9];
    v6 = v3[10];
    v7 = v3[11];
    sub_1AE4F6804();
    v8 = MEMORY[0x1AF4530E8](v4, v5, v6, v7);
    v10 = v9;
    v11 = swift_bridgeObjectRelease();
    if (!v3[2])
    {
      __break(1u);
      goto LABEL_8;
    }
    v14 = v3[4];
    v15 = v3[5];
    v16 = v3[6];
    v17 = v3[7];
    swift_bridgeObjectRetain();
    sub_1AE4F81B8();
    v18 = MEMORY[0x1AF4530E8](v14, v15, v16, v17);
    v20 = v19;
    swift_bridgeObjectRelease();
    v21._countAndFlagsBits = v18;
    v21._object = v20;
    LOBYTE(v11) = LiveGlobalKnowledge.ExternalIdentifierType.init(rawValue:)(v21);
    if (countAndFlagsBits != 5)
    {
      *(_QWORD *)v2 = v8;
      *(_QWORD *)(v2 + 8) = v10;
      *(_BYTE *)(v2 + 16) = countAndFlagsBits;
      goto LABEL_8;
    }
  }
  v11 = swift_bridgeObjectRelease();
  *(_QWORD *)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  *(_BYTE *)(v2 + 16) = 0;
LABEL_8:
  result.value.id._object = v12;
  result.value.id._countAndFlagsBits = v11;
  result.value.idType = v13;
  return result;
}

uint64_t LiveGlobalKnowledge.ExternalIdentifier.description.getter()
{
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE4F66C4();
  sub_1AE925F74();
  sub_1AE4F665C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE4FF0F0();
  return 0;
}

void LiveGlobalKnowledge.ExternalIdentifier.hash(into:)()
{
  sub_1AE4F6730();
  sub_1AE925F14();
  sub_1AE4F81B8();
  sub_1AE5E8240();
}

void static LiveGlobalKnowledge.ExternalIdentifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_1AE926D60() & 1) != 0)
    sub_1AE511560();
}

uint64_t sub_1AE810E50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657079546469 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE810F1C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x657079546469;
  else
    return 25705;
}

uint64_t sub_1AE810F44()
{
  char *v0;

  return sub_1AE810F1C(*v0);
}

uint64_t sub_1AE810F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE810E50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE810F70()
{
  sub_1AE812048();
  return sub_1AE926F94();
}

uint64_t sub_1AE810F98()
{
  sub_1AE812048();
  return sub_1AE926FA0();
}

void LiveGlobalKnowledge.ExternalIdentifier.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE4F67EC();
  v2 = v1;
  v3 = sub_1AE501548(&qword_1EEDA3B68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F683C();
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE812048();
  sub_1AE926F4C();
  sub_1AE5FBF04();
  sub_1AE926C88();
  if (!v0)
  {
    sub_1AE812084();
    sub_1AE4FD9D4();
  }
  sub_1AE4FC6EC(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_1AE4F667C();
}

void LiveGlobalKnowledge.ExternalIdentifier.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE4F66C4();
  sub_1AE7ADE58();
  sub_1AE4F665C();
  sub_1AE812DA8();
  sub_1AE4F905C();
  sub_1AE4F685C();
}

void LiveGlobalKnowledge.ExternalIdentifier.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  sub_1AE4F67EC();
  v14 = v13;
  v16 = v15;
  sub_1AE501548(&qword_1EEDA3B80);
  sub_1AE5635D8();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE4F666C();
  sub_1AE4F9858(v14, v14[3]);
  sub_1AE812048();
  sub_1AE926F34();
  if (v12)
  {
    sub_1AE4F90EC();
  }
  else
  {
    v18 = sub_1AE926BB0();
    v20 = v19;
    v21 = sub_1AE8120C0();
    swift_bridgeObjectRetain();
    sub_1AE73548C();
    sub_1AE4F777C();
    if (v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      *(_QWORD *)v16 = v18;
      *(_QWORD *)(v16 + 8) = v20;
      *(_BYTE *)(v16 + 16) = a12;
    }
    sub_1AE4F90EC();
    swift_bridgeObjectRelease();
  }
  sub_1AE4F667C();
}

void sub_1AE811250()
{
  sub_1AE926EC8();
  sub_1AE4F66C4();
  sub_1AE7ADE58();
  sub_1AE4F665C();
  sub_1AE812DA8();
  sub_1AE4F905C();
  sub_1AE4F685C();
}

void sub_1AE811298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  LiveGlobalKnowledge.ExternalIdentifier.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_1AE8112AC()
{
  LiveGlobalKnowledge.ExternalIdentifier.encode(to:)();
}

IntelligencePlatform::LiveGlobalKnowledge::Client_optional __swiftcall LiveGlobalKnowledge.Client.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  IntelligencePlatform::LiveGlobalKnowledge::Client_optional result;

  v2 = v1;
  v3 = sub_1AE926B44();
  sub_1AE4F6648();
  v4 = 3;
  if (v3 < 3)
    v4 = v3;
  *v2 = v4;
  sub_1AE4F6624();
  return result;
}

void *static LiveGlobalKnowledge.Client.allCases.getter()
{
  return &unk_1E5DA86B0;
}

uint64_t LiveGlobalKnowledge.Client.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000013;
  if (*v0 != 1)
    v1 = 0x6C6F6F747069;
  if (*v0)
    return v1;
  else
    return 0x6B5A7374726F7073;
}

void sub_1AE81137C(unsigned __int8 *a1, char *a2)
{
  sub_1AE511474(*a1, *a2);
}

void sub_1AE811388()
{
  sub_1AE512CA8();
}

uint64_t sub_1AE811390()
{
  return sub_1AE5E8B1C();
}

void sub_1AE811398()
{
  sub_1AE54FC00();
}

IntelligencePlatform::LiveGlobalKnowledge::Client_optional sub_1AE8113A0(Swift::String *a1)
{
  return LiveGlobalKnowledge.Client.init(rawValue:)(*a1);
}

uint64_t sub_1AE8113AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = LiveGlobalKnowledge.Client.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1AE8113D0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5DA86B0;
}

uint64_t sub_1AE8113E0()
{
  sub_1AE812BF8();
  return sub_1AE926190();
}

uint64_t sub_1AE81143C()
{
  sub_1AE812BF8();
  return sub_1AE926148();
}

uint64_t LiveGlobalKnowledge.IdSearchRequest.subRequests.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LiveGlobalKnowledge.IdSearchRequest.clientIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 24);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1AE526540(v2, v3, v4);
}

void LiveGlobalKnowledge.IdSearchRequest.client.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 25);
}

__n128 LiveGlobalKnowledge.IdSearchRequest.init(subRequests:clientIdentifier:client:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v4;
  char v5;
  __n128 result;

  v4 = a2[1].n128_u8[0];
  v5 = *a3;
  *(_QWORD *)a4 = a1;
  result = *a2;
  *(__n128 *)(a4 + 8) = *a2;
  *(_BYTE *)(a4 + 24) = v4;
  *(_BYTE *)(a4 + 25) = v5;
  return result;
}

uint64_t LiveGlobalKnowledge.IdSearchRequest.description.getter()
{
  sub_1AE92691C();
  sub_1AE50A664();
  swift_bridgeObjectRetain();
  sub_1AE501548(&qword_1ED30F940);
  sub_1AE8120FC();
  sub_1AE925C68();
  sub_1AE925F74();
  sub_1AE4F6648();
  sub_1AE4F665C();
  sub_1AE50A664();
  sub_1AE926A48();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE4F6648();
  sub_1AE4FF0F0();
  return 0;
}

#error "1AE811694: call analysis failed (funcsize=59)"

void static LiveGlobalKnowledge.IdSearchRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  _QWORD v10[2];
  char v11;
  _QWORD v12[2];
  char v13;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 25);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  v9 = *(_BYTE *)(a2 + 25);
  if ((sub_1AE8102D4(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0)
  {
    v12[0] = v2;
    v12[1] = v3;
    v13 = v4;
    v10[0] = v6;
    v10[1] = v7;
    v11 = v8;
    if ((static ClientProcessIdentifier.== infix(_:_:)((uint64_t)v12, (uint64_t)v10) & 1) != 0)
      sub_1AE511474(v5, v9);
  }
}

uint64_t sub_1AE811800(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6575716552627573 && a2 == 0xEB00000000737473;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AE987710 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E65696C63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1AE811958(char a1)
{
  if (!a1)
    return 0x6575716552627573;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0x746E65696C63;
}

uint64_t sub_1AE8119B8()
{
  char *v0;

  return sub_1AE811958(*v0);
}

uint64_t sub_1AE8119C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE811800(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8119E4()
{
  sub_1AE812138();
  return sub_1AE926F94();
}

uint64_t sub_1AE811A0C()
{
  sub_1AE812138();
  return sub_1AE926FA0();
}

void LiveGlobalKnowledge.IdSearchRequest.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE4F67EC();
  v2 = v1;
  v3 = sub_1AE501548(&qword_1EEDA3B98);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F683C();
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE812138();
  sub_1AE926F4C();
  sub_1AE501548(&qword_1EEDA3BA8);
  sub_1AE812174();
  sub_1AE4FD9D4();
  if (!v0)
  {
    sub_1AE812234();
    sub_1AE4FD9D4();
    sub_1AE812270();
    sub_1AE4FD9D4();
  }
  sub_1AE4FC6EC(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_1AE4F667C();
}

#error "1AE811BD8: call analysis failed (funcsize=61)"

void LiveGlobalKnowledge.IdSearchRequest.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  sub_1AE501548(&qword_1EEDA3BD8);
  sub_1AE5635D8();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE812138();
  sub_1AE926F34();
  if (v0)
  {
    sub_1AE4F90EC();
  }
  else
  {
    sub_1AE501548(&qword_1EEDA3BA8);
    sub_1AE8122AC();
    sub_1AE73548C();
    v6 = sub_1AE8123D4();
    swift_bridgeObjectRetain();
    sub_1AE812DB4();
    sub_1AE73548C();
    if (v6)
    {
      sub_1AE4F68A4();
      sub_1AE4F66E8();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
      sub_1AE4F66E8();
    }
    else
    {
      sub_1AE526540(v7, v8, v9);
      sub_1AE812410();
      sub_1AE812DB4();
      sub_1AE926BEC();
      sub_1AE4F68A4();
      swift_bridgeObjectRetain();
      sub_1AE526540(v7, v8, v9);
      sub_1AE579F84(v7, v8, v9);
      sub_1AE4F66E8();
      *(_QWORD *)v4 = v7;
      *(_QWORD *)(v4 + 8) = v7;
      *(_QWORD *)(v4 + 16) = v8;
      *(_BYTE *)(v4 + 24) = v9;
      *(_BYTE *)(v4 + 25) = v7;
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
      sub_1AE4F66E8();
      sub_1AE579F84(v7, v8, v9);
    }
  }
  sub_1AE4F667C();
}

#error "1AE811F04: call analysis failed (funcsize=77)"

void sub_1AE81201C()
{
  LiveGlobalKnowledge.IdSearchRequest.init(from:)();
}

void sub_1AE812030()
{
  LiveGlobalKnowledge.IdSearchRequest.encode(to:)();
}

unint64_t sub_1AE812048()
{
  unint64_t result;

  result = qword_1EEDA3B70;
  if (!qword_1EEDA3B70)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95F6C4, &type metadata for LiveGlobalKnowledge.ExternalIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3B70);
  }
  return result;
}

unint64_t sub_1AE812084()
{
  unint64_t result;

  result = qword_1EEDA3B78;
  if (!qword_1EEDA3B78)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.ExternalIdentifierType, &type metadata for LiveGlobalKnowledge.ExternalIdentifierType);
    atomic_store(result, (unint64_t *)&qword_1EEDA3B78);
  }
  return result;
}

unint64_t sub_1AE8120C0()
{
  unint64_t result;

  result = qword_1EEDA3B88;
  if (!qword_1EEDA3B88)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.ExternalIdentifierType, &type metadata for LiveGlobalKnowledge.ExternalIdentifierType);
    atomic_store(result, (unint64_t *)&qword_1EEDA3B88);
  }
  return result;
}

unint64_t sub_1AE8120FC()
{
  unint64_t result;

  result = qword_1EEDA3B90;
  if (!qword_1EEDA3B90)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.ExternalIdentifier, &type metadata for LiveGlobalKnowledge.ExternalIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EEDA3B90);
  }
  return result;
}

unint64_t sub_1AE812138()
{
  unint64_t result;

  result = qword_1EEDA3BA0;
  if (!qword_1EEDA3BA0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95F674, &type metadata for LiveGlobalKnowledge.IdSearchRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3BA0);
  }
  return result;
}

unint64_t sub_1AE812174()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA3BB0;
  if (!qword_1EEDA3BB0)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA3BA8);
    v2[0] = sub_1AE8121F8();
    v2[1] = sub_1AE81236C(&qword_1EEDA3BC0, (uint64_t (*)(void))sub_1AE5C7844, MEMORY[0x1E0DEB3B8]);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA3BB0);
  }
  return result;
}

unint64_t sub_1AE8121F8()
{
  unint64_t result;

  result = qword_1EEDA3BB8;
  if (!qword_1EEDA3BB8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.ExternalIdentifier, &type metadata for LiveGlobalKnowledge.ExternalIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EEDA3BB8);
  }
  return result;
}

unint64_t sub_1AE812234()
{
  unint64_t result;

  result = qword_1EEDA3BC8;
  if (!qword_1EEDA3BC8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ClientProcessIdentifier, &type metadata for ClientProcessIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EEDA3BC8);
  }
  return result;
}

unint64_t sub_1AE812270()
{
  unint64_t result;

  result = qword_1EEDA3BD0;
  if (!qword_1EEDA3BD0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.Client, &type metadata for LiveGlobalKnowledge.Client);
    atomic_store(result, (unint64_t *)&qword_1EEDA3BD0);
  }
  return result;
}

unint64_t sub_1AE8122AC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEDA3BE0;
  if (!qword_1EEDA3BE0)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA3BA8);
    v2[0] = sub_1AE812330();
    v2[1] = sub_1AE81236C(&qword_1EEDA3BF0, (uint64_t (*)(void))sub_1AE5C77CC, MEMORY[0x1E0DEB3D8]);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEDA3BE0);
  }
  return result;
}

unint64_t sub_1AE812330()
{
  unint64_t result;

  result = qword_1EEDA3BE8;
  if (!qword_1EEDA3BE8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.ExternalIdentifier, &type metadata for LiveGlobalKnowledge.ExternalIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EEDA3BE8);
  }
  return result;
}

uint64_t sub_1AE81236C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1AE523CF0(&qword_1ED30F940);
    v8 = a2();
    result = MEMORY[0x1AF454B70](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AE8123D4()
{
  unint64_t result;

  result = qword_1EEDA3BF8;
  if (!qword_1EEDA3BF8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ClientProcessIdentifier, &type metadata for ClientProcessIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EEDA3BF8);
  }
  return result;
}

unint64_t sub_1AE812410()
{
  unint64_t result;

  result = qword_1EEDA3C00;
  if (!qword_1EEDA3C00)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.Client, &type metadata for LiveGlobalKnowledge.Client);
    atomic_store(result, (unint64_t *)&qword_1EEDA3C00);
  }
  return result;
}

unint64_t sub_1AE812450()
{
  unint64_t result;

  result = qword_1EEDA3C08;
  if (!qword_1EEDA3C08)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.ExternalIdentifierType, &type metadata for LiveGlobalKnowledge.ExternalIdentifierType);
    atomic_store(result, (unint64_t *)&qword_1EEDA3C08);
  }
  return result;
}

void sub_1AE81248C()
{
  sub_1AE52FB78(&qword_1EEDA3C10, &qword_1EEDA3C18, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1AE8124BC()
{
  unint64_t result;

  result = qword_1ED3187F8;
  if (!qword_1ED3187F8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.ExternalIdentifier, &type metadata for LiveGlobalKnowledge.ExternalIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED3187F8);
  }
  return result;
}

unint64_t sub_1AE8124FC()
{
  unint64_t result;

  result = qword_1EEDA3C20;
  if (!qword_1EEDA3C20)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.Client, &type metadata for LiveGlobalKnowledge.Client);
    atomic_store(result, (unint64_t *)&qword_1EEDA3C20);
  }
  return result;
}

void sub_1AE812538()
{
  sub_1AE52FB78(&qword_1EEDA3C28, &qword_1EEDA3C30, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1AE812568()
{
  unint64_t result;

  result = qword_1EEDA3C38;
  if (!qword_1EEDA3C38)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.IdSearchRequest, &type metadata for LiveGlobalKnowledge.IdSearchRequest);
    atomic_store(result, (unint64_t *)&qword_1EEDA3C38);
  }
  return result;
}

void type metadata accessor for LiveGlobalKnowledge()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for LiveGlobalKnowledge.ExternalIdentifierType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AE8125FC + 4 * byte_1AE95F02F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AE812630 + 4 * byte_1AE95F02A[v4]))();
}

uint64_t sub_1AE812630(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE812638(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE812640);
  return result;
}

uint64_t sub_1AE81264C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE812654);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AE812658(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE812660(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for LiveGlobalKnowledge.ExternalIdentifierType()
{
  sub_1AE4F67D4();
}

void type metadata accessor for LiveGlobalKnowledge.ExternalIdentifier()
{
  sub_1AE4F67D4();
}

void type metadata accessor for LiveGlobalKnowledge.Client()
{
  sub_1AE4F67D4();
}

uint64_t destroy for LiveGlobalKnowledge.IdSearchRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1AE579F84(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for LiveGlobalKnowledge.IdSearchRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_1AE526540(v4, v5, v6);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

uint64_t assignWithCopy for LiveGlobalKnowledge.IdSearchRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1AE526540(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v9 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1AE579F84(v7, v8, v9);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

__n128 initializeWithTake for LiveGlobalKnowledge.IdSearchRequest(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LiveGlobalKnowledge.IdSearchRequest(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1AE579F84(v5, v6, v7);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveGlobalKnowledge.IdSearchRequest(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 26))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveGlobalKnowledge.IdSearchRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 26) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for LiveGlobalKnowledge.IdSearchRequest()
{
  sub_1AE4F67D4();
}

uint64_t _s20IntelligencePlatform19LiveGlobalKnowledgeO6ClientOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE8128F0 + 4 * byte_1AE95F039[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE812924 + 4 * byte_1AE95F034[v4]))();
}

uint64_t sub_1AE812924(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE81292C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE812934);
  return result;
}

uint64_t sub_1AE812940(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE812948);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE81294C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE812954(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveGlobalKnowledge.IdSearchRequest.CodingKeys()
{
  return &type metadata for LiveGlobalKnowledge.IdSearchRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LiveGlobalKnowledge.ExternalIdentifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE8129BC + 4 * byte_1AE95F043[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE8129F0 + 4 * byte_1AE95F03E[v4]))();
}

uint64_t sub_1AE8129F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8129F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE812A00);
  return result;
}

uint64_t sub_1AE812A0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE812A14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE812A18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE812A20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveGlobalKnowledge.ExternalIdentifier.CodingKeys()
{
  return &type metadata for LiveGlobalKnowledge.ExternalIdentifier.CodingKeys;
}

unint64_t sub_1AE812A40()
{
  unint64_t result;

  result = qword_1EEDA3C40;
  if (!qword_1EEDA3C40)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95F594, &type metadata for LiveGlobalKnowledge.ExternalIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3C40);
  }
  return result;
}

unint64_t sub_1AE812A80()
{
  unint64_t result;

  result = qword_1EEDA3C48;
  if (!qword_1EEDA3C48)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95F64C, &type metadata for LiveGlobalKnowledge.IdSearchRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3C48);
  }
  return result;
}

unint64_t sub_1AE812AC0()
{
  unint64_t result;

  result = qword_1EEDA3C50;
  if (!qword_1EEDA3C50)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95F5BC, &type metadata for LiveGlobalKnowledge.IdSearchRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3C50);
  }
  return result;
}

unint64_t sub_1AE812B00()
{
  unint64_t result;

  result = qword_1EEDA3C58;
  if (!qword_1EEDA3C58)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95F5E4, &type metadata for LiveGlobalKnowledge.IdSearchRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3C58);
  }
  return result;
}

unint64_t sub_1AE812B40()
{
  unint64_t result;

  result = qword_1EEDA3C60;
  if (!qword_1EEDA3C60)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95F504, &type metadata for LiveGlobalKnowledge.ExternalIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3C60);
  }
  return result;
}

unint64_t sub_1AE812B80()
{
  unint64_t result;

  result = qword_1EEDA3C68;
  if (!qword_1EEDA3C68)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95F52C, &type metadata for LiveGlobalKnowledge.ExternalIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3C68);
  }
  return result;
}

void sub_1AE812BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  sub_1AE5FC2B4();
  v3 = sub_1AE501548(v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v0, v1, v3);
  sub_1AE4F6664();
}

unint64_t sub_1AE812BF8()
{
  unint64_t result;

  result = qword_1EEDA3C88;
  if (!qword_1EEDA3C88)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.Client, &type metadata for LiveGlobalKnowledge.Client);
    atomic_store(result, (unint64_t *)&qword_1EEDA3C88);
  }
  return result;
}

unint64_t sub_1AE812C34()
{
  unint64_t result;

  result = qword_1EEDA3C90;
  if (!qword_1EEDA3C90)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LiveGlobalKnowledge.ExternalIdentifierType, &type metadata for LiveGlobalKnowledge.ExternalIdentifierType);
    atomic_store(result, (unint64_t *)&qword_1EEDA3C90);
  }
  return result;
}

_BYTE *sub_1AE812C70()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
  return v1;
}

uint64_t sub_1AE812C88()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

void sub_1AE812C90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
}

void sub_1AE812CA4(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
}

void sub_1AE812D1C()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 88) = *(_QWORD *)(v0 - 128);
}

uint64_t sub_1AE812D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a3, a4);
}

uint64_t sub_1AE812D58()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE812D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, a4);
}

void sub_1AE812DA8()
{
  sub_1AE5E8240();
}

uint64_t sub_1AE812DC8()
{
  uint64_t *v0;

  return sub_1AE501548(v0);
}

uint64_t sub_1AE812DD0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v0, v1);
}

uint64_t sub_1AE812DDC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1AE812E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;

  v9 = swift_allocObject();
  sub_1AE812E88(a1, v10, a3, a4, a5);
  return v9;
}

void sub_1AE812E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  v8 = *(_OWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 48) = v9;
  *(_QWORD *)(v5 + 56) = v10;
  *(_QWORD *)(v5 + 88) = a4;
  *(_QWORD *)(v5 + 96) = a5;
  v11 = sub_1AE52F6A8((uint64_t *)(v5 + 64));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v11, a3, a4);
  sub_1AE4F6624();
}

uint64_t sub_1AE812EDC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v3[11] = *v2;
  return swift_task_switch();
}

uint64_t sub_1AE812F00()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = (_QWORD *)v0[10];
  sub_1AE4F9858(v1 + 8, v1[11]);
  v3 = v1[2];
  v2 = v1[3];
  v0[12] = v2;
  v4 = v1[4];
  v5 = v1[5];
  v0[13] = v5;
  v6 = v1[6];
  v7 = v1[7];
  v0[14] = v7;
  v0[2] = v3;
  v0[3] = v2;
  v0[4] = v4;
  v0[5] = v5;
  v0[6] = v6;
  v0[7] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)swift_task_alloc();
  v0[15] = v8;
  *v8 = v0;
  v8[1] = sub_1AE812FD4;
  return sub_1AE750B94();
}

uint64_t sub_1AE812FD4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 128) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1AE813068()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1AE813074()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 64);
  sub_1AE4F6624();
}

uint64_t sub_1AE8130B8()
{
  sub_1AE813074();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LocalInferenceServiceInstanceClient(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LocalInferenceServiceInstanceClient);
}

uint64_t sub_1AE8130E4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE813128(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1AE56794C;
  return sub_1AE812EDC(a1, a2);
}

double CodableLocation.latitude.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double CodableLocation.longitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double CodableLocation.altitude.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double CodableLocation.horizontalAccuracy.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double CodableLocation.verticalAccuracy.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double CodableLocation.speed.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double CodableLocation.course.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

uint64_t CodableLocation.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(sub_1AE4FBF50() + 44);
  v4 = sub_1AE4F675C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for CodableLocation()
{
  uint64_t result;

  result = qword_1EEDA3CD0;
  if (!qword_1EEDA3CD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t CodableLocation.hash(into:)()
{
  sub_1AE4FF1D8();
  sub_1AE4FF1D8();
  sub_1AE4FF1D8();
  sub_1AE4FF1D8();
  sub_1AE4FF1D8();
  sub_1AE4FF1D8();
  sub_1AE4FF1D8();
  sub_1AE4FBF50();
  sub_1AE4F675C();
  sub_1AE512FA0(&qword_1EEDA3CA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  return sub_1AE925D34();
}

uint64_t static CodableLocation.== infix(_:_:)(double *a1, double *a2)
{
  if (*a1 != *a2
    || a1[1] != a2[1]
    || a1[2] != a2[2]
    || a1[3] != a2[3]
    || a1[4] != a2[4]
    || a1[5] != a2[5]
    || a1[6] != a2[6])
  {
    return 0;
  }
  sub_1AE4FBF50();
  return sub_1AE924894();
}

uint64_t sub_1AE813390(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6564757469746C61 && a2 == 0xE800000000000000;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000012 && a2 == 0x80000001AE974F40 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x80000001AE974F60 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = a1 == 0x6465657073 && a2 == 0xE500000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v9 = a1 == 0x657372756F63 && a2 == 0xE600000000000000;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            v11 = sub_1AE926D60();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 7;
            else
              return 8;
          }
        }
      }
    }
  }
}

uint64_t sub_1AE813690(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE8136C4 + 4 * byte_1AE95F7D0[a1]))(0x656475746974616CLL, 0xE800000000000000);
}

uint64_t sub_1AE8136C4()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_1AE8136E0(uint64_t a1)
{
  return a1 + 2805;
}

unint64_t sub_1AE8136E8()
{
  return 0xD000000000000012;
}

unint64_t sub_1AE813708()
{
  return 0xD000000000000010;
}

uint64_t sub_1AE813724()
{
  return 0x6465657073;
}

uint64_t sub_1AE813738()
{
  return 0x657372756F63;
}

uint64_t sub_1AE81374C()
{
  return 0x6D617473656D6974;
}

uint64_t sub_1AE81376C()
{
  unsigned __int8 *v0;

  return sub_1AE813690(*v0);
}

uint64_t sub_1AE813774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE813390(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE813798()
{
  sub_1AE8139C8();
  return sub_1AE926F94();
}

uint64_t sub_1AE8137C0()
{
  sub_1AE8139C8();
  return sub_1AE926FA0();
}

uint64_t CodableLocation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1AE501548(&qword_1EEDA3CB0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE8139C8();
  sub_1AE926F4C();
  sub_1AE4FD144();
  if (!v1)
  {
    sub_1AE4FD144();
    sub_1AE4FD144();
    sub_1AE4FD144();
    sub_1AE4FD144();
    sub_1AE4FD144();
    sub_1AE4FD144();
    type metadata accessor for CodableLocation();
    sub_1AE9248DC();
    sub_1AE512FA0((unint64_t *)&qword_1ED30EB50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1AE926CC4();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

unint64_t sub_1AE8139C8()
{
  unint64_t result;

  result = qword_1EEDA3CB8;
  if (!qword_1EEDA3CB8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95F9A8, &type metadata for CodableLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3CB8);
  }
  return result;
}

void CodableLocation.hashValue.getter()
{
  sub_1AE926EC8();
  CodableLocation.hash(into:)();
  sub_1AE926F10();
  sub_1AE4F6650();
}

uint64_t CodableLocation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v22 = a2;
  v23 = sub_1AE9248DC();
  v21 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1AE501548(&qword_1EEDA3CC0);
  MEMORY[0x1E0C80A78](v24);
  sub_1AE4F683C();
  v5 = type metadata accessor for CodableLocation();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v25 = a1;
  sub_1AE4F9858(a1, v8);
  sub_1AE8139C8();
  v9 = v26;
  sub_1AE926F34();
  if (v9)
  {
    v14 = (uint64_t)v25;
  }
  else
  {
    v26 = v5;
    v10 = v4;
    v11 = v23;
    v34 = 0;
    sub_1AE926BC8();
    *(_QWORD *)v7 = v13;
    v33 = 1;
    sub_1AE50104C();
    v14 = (uint64_t)v25;
    *((_QWORD *)v7 + 1) = v15;
    v32 = 2;
    sub_1AE50104C();
    *((_QWORD *)v7 + 2) = v16;
    v31 = 3;
    sub_1AE50104C();
    *((_QWORD *)v7 + 3) = v17;
    v30 = 4;
    sub_1AE50104C();
    *((_QWORD *)v7 + 4) = v18;
    v29 = 5;
    sub_1AE50104C();
    *((_QWORD *)v7 + 5) = v19;
    v28 = 6;
    sub_1AE50104C();
    *((_QWORD *)v7 + 6) = v20;
    v27 = 7;
    sub_1AE512FA0(&qword_1ED318D00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1AE926BEC();
    sub_1AE503A18();
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v7[*(int *)(v26 + 44)], v10, v11);
    sub_1AE640220((uint64_t)v7, v22);
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v14);
}

uint64_t sub_1AE813CEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CodableLocation.init(from:)(a1, a2);
}

uint64_t sub_1AE813D00(_QWORD *a1)
{
  return CodableLocation.encode(to:)(a1);
}

void sub_1AE813D1C()
{
  sub_1AE926EC8();
  CodableLocation.hash(into:)();
  sub_1AE926F10();
  sub_1AE4F6650();
}

uint64_t sub_1AE813D4C()
{
  return sub_1AE512FA0(&qword_1EEDA3CC8, (uint64_t (*)(uint64_t))type metadata accessor for CodableLocation, (uint64_t)&protocol conformance descriptor for CodableLocation);
}

_QWORD *initializeBufferWithCopyOfBuffer for CodableLocation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_QWORD *)(a1 + 48) = a2[6];
    v6 = *(int *)(a3 + 44);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_1AE9248DC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for CodableLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 44);
  v3 = sub_1AE9248DC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for CodableLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 44);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1AE9248DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for CodableLocation(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  v4 = *(int *)(a3 + 44);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1AE9248DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for CodableLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 44);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1AE9248DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CodableLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 44);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1AE9248DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CodableLocation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE814028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 44);
  v5 = sub_1AE4F675C();
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for CodableLocation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE814068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 44);
  v6 = sub_1AE4F675C();
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v5, a2, a2, v6);
}

uint64_t sub_1AE8140A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AE9248DC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CodableLocation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1AE814170 + 4 * byte_1AE95F7DD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1AE8141A4 + 4 * byte_1AE95F7D8[v4]))();
}

uint64_t sub_1AE8141A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8141AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8141B4);
  return result;
}

uint64_t sub_1AE8141C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8141C8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1AE8141CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8141D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CodableLocation.CodingKeys()
{
  return &type metadata for CodableLocation.CodingKeys;
}

unint64_t sub_1AE8141F4()
{
  unint64_t result;

  result = qword_1EEDA3CE0;
  if (!qword_1EEDA3CE0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95F980, &type metadata for CodableLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3CE0);
  }
  return result;
}

unint64_t sub_1AE814234()
{
  unint64_t result;

  result = qword_1EEDA3CE8;
  if (!qword_1EEDA3CE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95F8F0, &type metadata for CodableLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3CE8);
  }
  return result;
}

unint64_t sub_1AE814274()
{
  unint64_t result;

  result = qword_1EEDA3CF0;
  if (!qword_1EEDA3CF0)
  {
    result = MEMORY[0x1AF454B70]("9hG7", &type metadata for CodableLocation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3CF0);
  }
  return result;
}

uint64_t LocationEmbedderInferenceInterface.Input.init(charArray:bpeArray:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

unint64_t static LocationEmbedderInferenceInterface.interfaceId.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1AE8142D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6172724172616863 && a2 == 0xE900000000000079;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7961727241657062 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE8143CC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7961727241657062;
  else
    return 0x6172724172616863;
}

uint64_t sub_1AE814408()
{
  char *v0;

  return sub_1AE8143CC(*v0);
}

uint64_t sub_1AE814410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8142D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE814434()
{
  sub_1AE814588();
  return sub_1AE926F94();
}

uint64_t sub_1AE81445C()
{
  sub_1AE814588();
  return sub_1AE926FA0();
}

void LocationEmbedderInferenceInterface.Input.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1AE4F67EC();
  v2 = v1;
  v3 = sub_1AE501548(&qword_1EEDA3CF8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F666C();
  v7 = v6 - v5;
  sub_1AE50869C(v2);
  sub_1AE814588();
  sub_1AE4FC7AC();
  sub_1AE501548(&qword_1EEDA3D08);
  sub_1AE814734(&qword_1EEDA3D10, &qword_1EEDA3D18, MEMORY[0x1E0DEDBD0], MEMORY[0x1E0DEAF10]);
  sub_1AE4FD500();
  if (!v0)
    sub_1AE4FD500();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  sub_1AE4F667C();
}

unint64_t sub_1AE814588()
{
  unint64_t result;

  result = qword_1EEDA3D00;
  if (!qword_1EEDA3D00)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9602A8, &type metadata for LocationEmbedderInferenceInterface.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3D00);
  }
  return result;
}

void LocationEmbedderInferenceInterface.Input.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE4F67EC();
  v12 = v11;
  v14 = v13;
  v15 = sub_1AE501548(&qword_1EEDA3D20);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F9858(v12, v12[3]);
  sub_1AE814588();
  sub_1AE926F34();
  if (v10)
  {
    sub_1AE4F90EC();
  }
  else
  {
    sub_1AE501548(&qword_1EEDA3D08);
    sub_1AE814734(&qword_1EEDA3D28, &qword_1EEDA3D30, MEMORY[0x1E0DEDBF8], MEMORY[0x1E0DEAF40]);
    sub_1AE503A28();
    swift_bridgeObjectRetain();
    sub_1AE503A28();
    sub_1AE4FDB48(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    *v14 = a10;
    v14[1] = a10;
    swift_bridgeObjectRetain();
    sub_1AE4F90EC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE814734(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = sub_1AE523CF0(&qword_1EEDA3D08);
    v10 = sub_1AE814C4C(a2, (uint64_t *)&unk_1EED9E3F0, a3, a4);
    result = MEMORY[0x1AF454B70](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AE8147BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  LocationEmbedderInferenceInterface.Input.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1AE8147D0()
{
  LocationEmbedderInferenceInterface.Input.encode(to:)();
}

uint64_t LocationEmbedderInferenceInterface.Output.embedding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1AE501548(&qword_1EED9AD58);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1AE814820(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6E69646465626D65 && a2 == 0xE900000000000067)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE8148B0()
{
  return 0x6E69646465626D65;
}

uint64_t sub_1AE8148D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE814820(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE8148F8()
{
  sub_1AE814A48();
  return sub_1AE926F94();
}

uint64_t sub_1AE814920()
{
  sub_1AE814A48();
  return sub_1AE926FA0();
}

uint64_t LocationEmbedderInferenceInterface.Output.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1AE501548(&qword_1EEDA3D38);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F666C();
  v6 = v5 - v4;
  sub_1AE50869C(a1);
  sub_1AE814A48();
  sub_1AE4FC7AC();
  sub_1AE501548(&qword_1EED9AD58);
  sub_1AE814C4C(&qword_1EEDA3D48, &qword_1EED9AD58, MEMORY[0x1E0DEB198], MEMORY[0x1E0C9E6D0]);
  sub_1AE926CC4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_1AE814A48()
{
  unint64_t result;

  result = qword_1EEDA3D40;
  if (!qword_1EEDA3D40)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960258, &type metadata for LocationEmbedderInferenceInterface.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3D40);
  }
  return result;
}

void LocationEmbedderInferenceInterface.Output.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE4F67EC();
  v3 = v2;
  v14 = v4;
  v16 = sub_1AE501548(&qword_1EED9AD58);
  v13 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F666C();
  v15 = v6 - v5;
  v7 = sub_1AE501548(&qword_1EEDA3D50);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F910C();
  v9 = type metadata accessor for LocationEmbedderInferenceInterface.Output();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F666C();
  v12 = v11 - v10;
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE814A48();
  sub_1AE926F34();
  if (!v0)
  {
    sub_1AE814C4C(&qword_1EEDA3D58, &qword_1EED9AD58, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0C9E6D8]);
    sub_1AE926BEC();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v12, v15, v16);
    sub_1AE5242C4(v12, v14);
  }
  sub_1AE4F90EC();
  sub_1AE4F667C();
}

uint64_t type metadata accessor for LocationEmbedderInferenceInterface.Output()
{
  uint64_t result;

  result = qword_1EED945B8;
  if (!qword_1EED945B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AE814C4C(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = sub_1AE523CF0(a2);
    v9 = a3;
    result = MEMORY[0x1AF454B70](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AE814CA8()
{
  LocationEmbedderInferenceInterface.Output.init(from:)();
}

uint64_t sub_1AE814CBC(_QWORD *a1)
{
  return LocationEmbedderInferenceInterface.Output.encode(to:)(a1);
}

uint64_t static LocationEmbedderInferenceInterface.Errors.InitError.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1AE814CD8()
{
  sub_1AE814E44();
  return sub_1AE926F94();
}

uint64_t sub_1AE814D00()
{
  sub_1AE814E44();
  return sub_1AE926FA0();
}

uint64_t sub_1AE814D28()
{
  sub_1AE814E80();
  return sub_1AE926F94();
}

uint64_t sub_1AE814D50()
{
  sub_1AE814E80();
  return sub_1AE926FA0();
}

void LocationEmbedderInferenceInterface.Errors.InitError.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EEDA3D60);
  sub_1AE507C28();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F90C8();
  sub_1AE501548(&qword_1EEDA3D68);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE814E44();
  sub_1AE509BF0();
  sub_1AE814E80();
  sub_1AE509718();
  sub_1AE4FDD44(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1AE4FDB48(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1AE4F667C();
}

unint64_t sub_1AE814E44()
{
  unint64_t result;

  result = qword_1EEDA3D70;
  if (!qword_1EEDA3D70)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960208, &type metadata for LocationEmbedderInferenceInterface.Errors.InitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3D70);
  }
  return result;
}

unint64_t sub_1AE814E80()
{
  unint64_t result;

  result = qword_1EEDA3D78;
  if (!qword_1EEDA3D78)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9601B8, &type metadata for LocationEmbedderInferenceInterface.Errors.InitError.InvalidModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3D78);
  }
  return result;
}

void LocationEmbedderInferenceInterface.Errors.InitError.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EEDA3D80);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F910C();
  sub_1AE501548(&qword_1EEDA3D88);
  sub_1AE506E98();
  MEMORY[0x1E0C80A78](v5);
  v6 = v3[3];
  v7 = v3[4];
  sub_1AE50869C(v3);
  sub_1AE814E44();
  sub_1AE4FBF58();
  if (v1)
    goto LABEL_6;
  sub_1AE815F64();
  sub_1AE507300();
  if (!v8 || (v9 = sub_1AE4F6D90(), sub_1AE50AF34(v9, v10, v11, v12, v13, v14), sub_1AE50A120(), v7 != v6 >> 1))
  {
    v6 = sub_1AE926988();
    sub_1AE4F6778();
    sub_1AE501548(&qword_1EED99C38);
    sub_1AE508D28((uint64_t)&type metadata for LocationEmbedderInferenceInterface.Errors.InitError);
    v15 = sub_1AE4FCB7C();
    sub_1AE4F96A0(v15, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1AE507C3C();
    sub_1AE4FDD44(MEMORY[8]);
LABEL_6:
    v16 = v6;
    goto LABEL_7;
  }
  sub_1AE814E80();
  sub_1AE5058D0();
  sub_1AE50800C();
  swift_unknownObjectRelease();
  sub_1AE4FDD44(MEMORY[8]);
  v16 = v0;
LABEL_7:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v16);
  sub_1AE4F667C();
}

uint64_t sub_1AE815054()
{
  return LocationEmbedderInferenceInterface.Errors.RunError.hashValue.getter();
}

uint64_t sub_1AE815068()
{
  return LocationEmbedderInferenceInterface.Errors.RunError.hash(into:)();
}

void sub_1AE81507C()
{
  LocationEmbedderInferenceInterface.Errors.InitError.init(from:)();
}

void sub_1AE815090()
{
  LocationEmbedderInferenceInterface.Errors.InitError.encode(to:)();
}

uint64_t static LocationEmbedderInferenceInterface.Errors.RunError.== infix(_:_:)()
{
  return 1;
}

uint64_t LocationEmbedderInferenceInterface.Errors.RunError.hash(into:)()
{
  return sub_1AE926ED4();
}

uint64_t sub_1AE8150D0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001AE987740)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1AE815154()
{
  return 0xD000000000000012;
}

uint64_t sub_1AE815174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8150D0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE81519C()
{
  sub_1AE8154E4();
  return sub_1AE926F94();
}

uint64_t sub_1AE8151C4()
{
  sub_1AE8154E4();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8151EC()
{
  sub_1AE815520();
  return sub_1AE926F94();
}

uint64_t sub_1AE815214()
{
  sub_1AE815520();
  return sub_1AE926FA0();
}

void LocationEmbedderInferenceInterface.Errors.RunError.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EEDA3D90);
  sub_1AE507C28();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F90C8();
  sub_1AE501548(&qword_1EEDA3D98);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE8154E4();
  sub_1AE509BF0();
  sub_1AE815520();
  sub_1AE509718();
  sub_1AE4FDD44(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1AE4FDB48(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_1AE4F667C();
}

void LocationEmbedderInferenceInterface.Errors.RunError.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EEDA3DB0);
  sub_1AE4FB7D8();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F910C();
  sub_1AE501548(&qword_1EEDA3DB8);
  sub_1AE506E98();
  MEMORY[0x1E0C80A78](v5);
  v6 = v3[3];
  v7 = v3[4];
  sub_1AE50869C(v3);
  sub_1AE8154E4();
  sub_1AE4FBF58();
  if (v1)
    goto LABEL_6;
  sub_1AE815F64();
  sub_1AE507300();
  if (!v8 || (v9 = sub_1AE4F6D90(), sub_1AE50AF34(v9, v10, v11, v12, v13, v14), sub_1AE50A120(), v7 != v6 >> 1))
  {
    v6 = sub_1AE926988();
    sub_1AE4F6778();
    sub_1AE501548(&qword_1EED99C38);
    sub_1AE508D28((uint64_t)&type metadata for LocationEmbedderInferenceInterface.Errors.RunError);
    v15 = sub_1AE4FCB7C();
    sub_1AE4F96A0(v15, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1AE507C3C();
    sub_1AE4FDD44(MEMORY[8]);
LABEL_6:
    v16 = v6;
    goto LABEL_7;
  }
  sub_1AE815520();
  sub_1AE5058D0();
  sub_1AE50800C();
  swift_unknownObjectRelease();
  sub_1AE4FDD44(MEMORY[8]);
  v16 = v0;
LABEL_7:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v16);
  sub_1AE4F667C();
}

void sub_1AE8154A0()
{
  LocationEmbedderInferenceInterface.Errors.RunError.init(from:)();
}

void sub_1AE8154B4()
{
  LocationEmbedderInferenceInterface.Errors.RunError.encode(to:)();
}

unint64_t sub_1AE8154C8()
{
  static LocationEmbedderInferenceInterface.interfaceId.getter();
  return 0xD000000000000019;
}

unint64_t sub_1AE8154E4()
{
  unint64_t result;

  result = qword_1EEDA3DA0;
  if (!qword_1EEDA3DA0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960168, &type metadata for LocationEmbedderInferenceInterface.Errors.RunError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3DA0);
  }
  return result;
}

unint64_t sub_1AE815520()
{
  unint64_t result;

  result = qword_1EEDA3DA8;
  if (!qword_1EEDA3DA8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960118, &type metadata for LocationEmbedderInferenceInterface.Errors.RunError.InvalidStringInputCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3DA8);
  }
  return result;
}

unint64_t sub_1AE815560()
{
  unint64_t result;

  result = qword_1EEDA3DC0;
  if (!qword_1EEDA3DC0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEmbedderInferenceInterface.Errors.InitError, &type metadata for LocationEmbedderInferenceInterface.Errors.InitError);
    atomic_store(result, (unint64_t *)&qword_1EEDA3DC0);
  }
  return result;
}

unint64_t sub_1AE8155A0()
{
  unint64_t result;

  result = qword_1EEDA3DC8;
  if (!qword_1EEDA3DC8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEmbedderInferenceInterface.Errors.RunError, &type metadata for LocationEmbedderInferenceInterface.Errors.RunError);
    atomic_store(result, (unint64_t *)&qword_1EEDA3DC8);
  }
  return result;
}

unint64_t sub_1AE8155E0()
{
  unint64_t result;

  result = qword_1EEDA3DD0;
  if (!qword_1EEDA3DD0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEmbedderInferenceInterface.Errors.InitError, &type metadata for LocationEmbedderInferenceInterface.Errors.InitError);
    atomic_store(result, (unint64_t *)&qword_1EEDA3DD0);
  }
  return result;
}

unint64_t sub_1AE815620()
{
  unint64_t result;

  result = qword_1EEDA3DD8;
  if (!qword_1EEDA3DD8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEmbedderInferenceInterface.Errors.RunError, &type metadata for LocationEmbedderInferenceInterface.Errors.RunError);
    atomic_store(result, (unint64_t *)&qword_1EEDA3DD8);
  }
  return result;
}

unint64_t sub_1AE815660()
{
  unint64_t result;

  result = qword_1EEDA3DE0;
  if (!qword_1EEDA3DE0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEmbedderInferenceInterface.Errors, &type metadata for LocationEmbedderInferenceInterface.Errors);
    atomic_store(result, (unint64_t *)&qword_1EEDA3DE0);
  }
  return result;
}

void type metadata accessor for LocationEmbedderInferenceInterface()
{
  sub_1AE4F67D4();
}

void type metadata accessor for LocationEmbedderInferenceInterface.Input()
{
  sub_1AE4F67D4();
}

uint64_t initializeBufferWithCopyOfBuffer for LocationEmbedderInferenceInterface.Output(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9AD58);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for LocationEmbedderInferenceInterface.Output(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1EED9AD58);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for LocationEmbedderInferenceInterface.Output(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9AD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for LocationEmbedderInferenceInterface.Output(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9AD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for LocationEmbedderInferenceInterface.Output(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9AD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for LocationEmbedderInferenceInterface.Output(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9AD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationEmbedderInferenceInterface.Output()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE815858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9AD58);
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LocationEmbedderInferenceInterface.Output()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE81589C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9AD58);
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a2, v4);
}

void sub_1AE8158D8()
{
  unint64_t v0;

  sub_1AE815940();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1AE815940()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EED946B0)
  {
    v0 = sub_1AE925B90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EED946B0);
  }
}

void type metadata accessor for LocationEmbedderInferenceInterface.Errors()
{
  sub_1AE4F67D4();
}

void type metadata accessor for LocationEmbedderInferenceInterface.Errors.InitError()
{
  sub_1AE4F67D4();
}

void type metadata accessor for LocationEmbedderInferenceInterface.Errors.RunError()
{
  sub_1AE4F67D4();
}

ValueMetadata *type metadata accessor for LocationEmbedderInferenceInterface.Errors.RunError.CodingKeys()
{
  return &type metadata for LocationEmbedderInferenceInterface.Errors.RunError.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationEmbedderInferenceInterface.Errors.RunError.InvalidStringInputCodingKeys()
{
  return &type metadata for LocationEmbedderInferenceInterface.Errors.RunError.InvalidStringInputCodingKeys;
}

ValueMetadata *type metadata accessor for LocationEmbedderInferenceInterface.Errors.InitError.CodingKeys()
{
  return &type metadata for LocationEmbedderInferenceInterface.Errors.InitError.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationEmbedderInferenceInterface.Errors.InitError.InvalidModelCodingKeys()
{
  return &type metadata for LocationEmbedderInferenceInterface.Errors.InitError.InvalidModelCodingKeys;
}

uint64_t _s20IntelligencePlatform34LocationEmbedderInferenceInterfaceO6ErrorsO9InitErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE815A38 + 4 * byte_1AE95FA00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE815A58 + 4 * byte_1AE95FA05[v4]))();
}

_BYTE *sub_1AE815A38(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE815A58(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE815A60(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE815A68(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE815A70(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE815A78(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LocationEmbedderInferenceInterface.Output.CodingKeys()
{
  return &type metadata for LocationEmbedderInferenceInterface.Output.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for LocationEmbedderInferenceInterface.Input.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE815AE0 + 4 * byte_1AE95FA0F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE815B14 + 4 * byte_1AE95FA0A[v4]))();
}

uint64_t sub_1AE815B14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE815B1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE815B24);
  return result;
}

uint64_t sub_1AE815B30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE815B38);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE815B3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE815B44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationEmbedderInferenceInterface.Input.CodingKeys()
{
  return &type metadata for LocationEmbedderInferenceInterface.Input.CodingKeys;
}

unint64_t sub_1AE815B64()
{
  unint64_t result;

  result = qword_1EEDA3DE8;
  if (!qword_1EEDA3DE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95FE28, &type metadata for LocationEmbedderInferenceInterface.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3DE8);
  }
  return result;
}

unint64_t sub_1AE815BA4()
{
  unint64_t result;

  result = qword_1EEDA3DF0;
  if (!qword_1EEDA3DF0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95FEE0, &type metadata for LocationEmbedderInferenceInterface.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3DF0);
  }
  return result;
}

unint64_t sub_1AE815BE4()
{
  unint64_t result;

  result = qword_1EEDA3DF8;
  if (!qword_1EEDA3DF8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95FFE8, &type metadata for LocationEmbedderInferenceInterface.Errors.InitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3DF8);
  }
  return result;
}

unint64_t sub_1AE815C24()
{
  unint64_t result;

  result = qword_1EEDA3E00;
  if (!qword_1EEDA3E00)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9600F0, &type metadata for LocationEmbedderInferenceInterface.Errors.RunError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3E00);
  }
  return result;
}

unint64_t sub_1AE815C64()
{
  unint64_t result;

  result = qword_1EEDA3E08;
  if (!qword_1EEDA3E08)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960010, &type metadata for LocationEmbedderInferenceInterface.Errors.RunError.InvalidStringInputCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3E08);
  }
  return result;
}

unint64_t sub_1AE815CA4()
{
  unint64_t result;

  result = qword_1EEDA3E10;
  if (!qword_1EEDA3E10)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960038, &type metadata for LocationEmbedderInferenceInterface.Errors.RunError.InvalidStringInputCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3E10);
  }
  return result;
}

unint64_t sub_1AE815CE4()
{
  unint64_t result;

  result = qword_1EEDA3E18;
  if (!qword_1EEDA3E18)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960060, &type metadata for LocationEmbedderInferenceInterface.Errors.RunError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3E18);
  }
  return result;
}

unint64_t sub_1AE815D24()
{
  unint64_t result;

  result = qword_1EEDA3E20;
  if (!qword_1EEDA3E20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960088, &type metadata for LocationEmbedderInferenceInterface.Errors.RunError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3E20);
  }
  return result;
}

unint64_t sub_1AE815D64()
{
  unint64_t result;

  result = qword_1EEDA3E28;
  if (!qword_1EEDA3E28)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95FF08, &type metadata for LocationEmbedderInferenceInterface.Errors.InitError.InvalidModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3E28);
  }
  return result;
}

unint64_t sub_1AE815DA4()
{
  unint64_t result;

  result = qword_1EEDA3E30;
  if (!qword_1EEDA3E30)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95FF30, &type metadata for LocationEmbedderInferenceInterface.Errors.InitError.InvalidModelCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3E30);
  }
  return result;
}

unint64_t sub_1AE815DE4()
{
  unint64_t result;

  result = qword_1EEDA3E38;
  if (!qword_1EEDA3E38)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95FF58, &type metadata for LocationEmbedderInferenceInterface.Errors.InitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3E38);
  }
  return result;
}

unint64_t sub_1AE815E24()
{
  unint64_t result;

  result = qword_1EEDA3E40;
  if (!qword_1EEDA3E40)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95FF80, &type metadata for LocationEmbedderInferenceInterface.Errors.InitError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3E40);
  }
  return result;
}

unint64_t sub_1AE815E64()
{
  unint64_t result;

  result = qword_1EEDA3E48;
  if (!qword_1EEDA3E48)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95FE50, &type metadata for LocationEmbedderInferenceInterface.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3E48);
  }
  return result;
}

unint64_t sub_1AE815EA4()
{
  unint64_t result;

  result = qword_1EEDA3E50;
  if (!qword_1EEDA3E50)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95FE78, &type metadata for LocationEmbedderInferenceInterface.Output.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3E50);
  }
  return result;
}

unint64_t sub_1AE815EE4()
{
  unint64_t result;

  result = qword_1EEDA3E58;
  if (!qword_1EEDA3E58)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95FD98, &type metadata for LocationEmbedderInferenceInterface.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3E58);
  }
  return result;
}

unint64_t sub_1AE815F24()
{
  unint64_t result;

  result = qword_1EEDA3E60;
  if (!qword_1EEDA3E60)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE95FDC0, &type metadata for LocationEmbedderInferenceInterface.Input.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3E60);
  }
  return result;
}

uint64_t sub_1AE815F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = v0;
  *(_QWORD *)(v2 - 72) = v1;
  return sub_1AE926C1C();
}

void sub_1AE815FD0()
{
  sub_1AE56BB6C();
}

uint64_t sub_1AE815FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  BOOL v18;
  uint64_t result;
  uint64_t v21;
  int v22;
  uint64_t v23;

  v5 = 0x307475706E69;
  v6 = sub_1AE501548(&qword_1EEDA3E88);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v23 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v23 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v23 - v16;
  v18 = a1 == 0x307475706E69 && a2 == 0xE600000000000000;
  if (v18 || (v5 = 0xE600000000000000, sub_1AE81790C(), (sub_1AE5005DC() & 1) != 0))
  {
    v9 = (char *)(v2 + OBJC_IVAR____TtC20IntelligencePlatform13EmbedderInput_encoderCharInput);
    sub_1AE4FB9BC();
    sub_1AE817870((uint64_t)v9, (uint64_t)v17);
    v2 = sub_1AE501548(&qword_1EEDA3E90);
    v12 = (char *)sub_1AE817920((uint64_t)v17);
    sub_1AE52982C((uint64_t)v17, &qword_1EEDA3E88);
    result = 0;
    if ((_DWORD)v12 == 1)
      return result;
    sub_1AE817870((uint64_t)v9, (uint64_t)v15);
    if (sub_1AE817920((uint64_t)v15) != 1)
      goto LABEL_16;
    __break(1u);
  }
  if (a1 != 0x317475706E69 || a2 != v5)
  {
    sub_1AE81790C();
    if ((sub_1AE5005DC() & 1) == 0)
      return 0;
  }
  v21 = v2 + OBJC_IVAR____TtC20IntelligencePlatform13EmbedderInput_encoderBPEInput;
  sub_1AE4FB9BC();
  sub_1AE817870(v21, (uint64_t)v12);
  sub_1AE501548(&qword_1EEDA3E90);
  v22 = sub_1AE509C04((uint64_t)v12);
  sub_1AE52982C((uint64_t)v12, &qword_1EEDA3E88);
  result = 0;
  if (v22 != 1)
  {
    sub_1AE817870(v21, (uint64_t)v9);
    result = sub_1AE509C04((uint64_t)v9);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      return result;
    }
LABEL_16:
    sub_1AE5D6324();
    return sub_1AE92661C();
  }
  return result;
}

uint64_t sub_1AE816290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2 + OBJC_IVAR____TtC20IntelligencePlatform13EmbedderInput_encoderCharInput;
  sub_1AE501548(&qword_1EEDA3E90);
  sub_1AE50A594(v5);
  v6 = v2 + OBJC_IVAR____TtC20IntelligencePlatform13EmbedderInput_encoderBPEInput;
  sub_1AE50A594(v2 + OBJC_IVAR____TtC20IntelligencePlatform13EmbedderInput_encoderBPEInput);
  sub_1AE4FB9BC();
  sub_1AE8178B8(a1, v5);
  swift_endAccess();
  sub_1AE4FB9BC();
  sub_1AE8178B8(a2, v6);
  swift_endAccess();
  return v2;
}

uint64_t sub_1AE81634C()
{
  uint64_t v0;

  sub_1AE52982C(v0 + OBJC_IVAR____TtC20IntelligencePlatform13EmbedderInput_encoderCharInput, &qword_1EEDA3E88);
  sub_1AE52982C(v0 + OBJC_IVAR____TtC20IntelligencePlatform13EmbedderInput_encoderBPEInput, &qword_1EEDA3E88);
  return swift_deallocClassInstance();
}

unint64_t static LocationEmbedderInferenceServiceDefinition.definitionId.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_1AE8163C0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7079546C65646F6DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE816450()
{
  return 0x7079546C65646F6DLL;
}

uint64_t sub_1AE816470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8163C0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE816498()
{
  sub_1AE8165A8();
  return sub_1AE926F94();
}

uint64_t sub_1AE8164C0()
{
  sub_1AE8165A8();
  return sub_1AE926FA0();
}

void LocationEmbedderInferenceServiceDefinition.ConfigParameters.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1AE501548(&qword_1EEDA3E68);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F6744();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE8165A8();
  sub_1AE926F4C();
  sub_1AE926C88();
  sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1AE4F667C();
}

unint64_t sub_1AE8165A8()
{
  unint64_t result;

  result = qword_1EEDA3E70;
  if (!qword_1EEDA3E70)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96055C, &type metadata for LocationEmbedderInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3E70);
  }
  return result;
}

void LocationEmbedderInferenceServiceDefinition.ConfigParameters.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = sub_1AE501548(&qword_1EEDA3E78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F6744();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE8165A8();
  sub_1AE926F34();
  if (!v2)
  {
    v7 = sub_1AE926BB0();
    v9 = v8;
    sub_1AE4FE920(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *a2 = v7;
    a2[1] = v9;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  sub_1AE4F667C();
}

void sub_1AE8166CC(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  LocationEmbedderInferenceServiceDefinition.ConfigParameters.init(from:)(a1, a2);
}

void sub_1AE8166E0(_QWORD *a1)
{
  LocationEmbedderInferenceServiceDefinition.ConfigParameters.encode(to:)(a1);
}

void LocationEmbedderInferenceServiceDefinition.Runner.cost.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 120);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 112);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_1AE816708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  id v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v4[3] = a3;
  v4[4] = v3;
  v4[2] = a2;
  v4[5] = *(_QWORD *)v3;
  swift_defaultActor_initialize();
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = a2;
  *(_QWORD *)(v3 + 112) = 0;
  *(_BYTE *)(v3 + 120) = 1;
  v7 = objc_allocWithZone(MEMORY[0x1E0C9E958]);
  swift_bridgeObjectRetain();
  v8 = objc_msgSend(v7, sel_init);
  v4[6] = v8;
  objc_msgSend(v8, sel_setComputeUnits_, 2);
  objc_msgSend(v8, sel_setAllowBackgroundGPUCompute_, 1);
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EED9EF60 + dword_1EED9EF60);
  v9 = v8;
  v10 = (_QWORD *)swift_task_alloc();
  v4[7] = v10;
  *v10 = v4;
  v10[1] = sub_1AE816828;
  return v12(a1, a2, 0xD000000000000010, 0x80000001AE9878C0, (uint64_t)v8);
}

uint64_t sub_1AE816828(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  void *v4;
  uint64_t v5;
  void *v6;

  v4 = *(void **)(*v2 + 48);
  v5 = *v2;
  *(_QWORD *)(v5 + 64) = a1;
  swift_task_dealloc();

  if (v1)
  {
    v6 = *(void **)(v5 + 48);
    swift_bridgeObjectRelease();
LABEL_3:

    swift_bridgeObjectRelease();
    swift_defaultActor_destroy();
    swift_release();
    swift_deallocPartialClassInstance();
    return (*(uint64_t (**)(void))(v5 + 8))();
  }
  swift_bridgeObjectRelease();
  if (!a1)
  {
    v6 = *(void **)(v5 + 48);
    sub_1AE8155E0();
    swift_allocError();
    swift_willThrow();
    goto LABEL_3;
  }
  *(_QWORD *)(*(_QWORD *)(v5 + 32) + 144) = a1;
  sub_1AE4F943C();
  return swift_task_switch();
}

uint64_t sub_1AE816940()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  swift_release();

  swift_release();
  return sub_1AE4FE914(*(_QWORD *)(v0 + 32), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t LocationEmbedderInferenceServiceDefinition.Runner.run(input:context:)(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 40) = a3;
  *(_QWORD *)(v4 + 48) = v3;
  *(_QWORD *)(v4 + 32) = a1;
  sub_1AE501548(&qword_1EED9DD98);
  *(_QWORD *)(v4 + 56) = sub_1AE4FC554();
  v6 = sub_1AE501548(&qword_1EED9AD58);
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 72) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 80) = sub_1AE4FC554();
  sub_1AE501548(&qword_1EEDA3E88);
  *(_QWORD *)(v4 + 88) = sub_1AE4FE0D8();
  *(_QWORD *)(v4 + 96) = sub_1AE4FD1D8();
  v7 = sub_1AE501548(&qword_1EEDA3E90);
  *(_QWORD *)(v4 + 104) = v7;
  *(_QWORD *)(v4 + 112) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 120) = sub_1AE4FE0D8();
  *(_QWORD *)(v4 + 128) = sub_1AE4FD1D8();
  *(_OWORD *)(v4 + 136) = *a2;
  return sub_1AE4F77A8();
}

void sub_1AE816A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void (*v43)(uint64_t);

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = 0;
    v4 = v1 + 32;
    v5 = MEMORY[0x1E0DEE9D8];
    v6 = 1;
    v7 = *(_QWORD *)(v1 + 16);
    v41 = *(_QWORD *)(v0 + 136);
    while (1)
    {
      v8 = v6;
      v9 = *(_QWORD *)(*(_QWORD *)v4 + 16);
      if (v9)
        break;
LABEL_12:
      if (v8 == v2)
        goto LABEL_16;
      v7 = *(_QWORD *)(v41 + 16);
      v6 = v8 + 1;
      v3 = v8;
      if (!v7)
      {
        __break(1u);
        goto LABEL_15;
      }
    }
    if (v3 >= v7)
      goto LABEL_34;
    v10 = 0;
    while (1)
    {
      v11 = *(_QWORD *)(v4 + 8 * v3);
      if (v10 >= *(_QWORD *)(v11 + 16))
        break;
      v12 = *(_DWORD *)(v11 + 4 * v10 + 32);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE4F6DAC();
        v5 = v14;
      }
      v13 = *(_QWORD *)(v5 + 16);
      if (v13 >= *(_QWORD *)(v5 + 24) >> 1)
      {
        sub_1AE4F6DAC();
        v5 = v15;
      }
      ++v10;
      *(_QWORD *)(v5 + 16) = v13 + 1;
      *(_DWORD *)(v5 + 4 * v13 + 32) = v12;
      if (v9 == v10)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    v5 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    v38[19] = v5;
    v16 = v38[18];
    if (!*(_QWORD *)(v16 + 16))
    {
LABEL_30:
      v19 = MEMORY[0x1E0DEE9D8];
LABEL_31:
      v38[20] = v19;
      v30 = v38[16];
      v37 = v38[15];
      v31 = v38[13];
      v33 = v38[11];
      v32 = v38[12];
      v40 = v38[14];
      v38[2] = v5;
      swift_bridgeObjectRetain();
      sub_1AE501548((uint64_t *)&unk_1EED9E3F0);
      sub_1AE5BA550(&qword_1EEDA3E98, (uint64_t *)&unk_1EED9E3F0, MEMORY[0x1E0DEAF38]);
      sub_1AE925B84();
      v38[3] = v19;
      swift_bridgeObjectRetain();
      sub_1AE925B84();
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16);
      v34(v32, v30, v31);
      sub_1AE5005CC(v32);
      v34(v33, v37, v31);
      sub_1AE5005CC(v33);
      type metadata accessor for EmbedderInput();
      v35 = swift_allocObject();
      v38[21] = v35;
      sub_1AE816290(v32, v33);
      v43 = (void (*)(uint64_t))((char *)&dword_1EEDA3AF0 + dword_1EEDA3AF0);
      sub_1AE4F943C();
      v36 = (_QWORD *)sub_1AE4FD1D8();
      v38[22] = v36;
      *v36 = v38;
      v36[1] = sub_1AE816DFC;
      v43(v35);
      return;
    }
    v17 = 0;
    v18 = v16 + 32;
    v19 = MEMORY[0x1E0DEE9D8];
    v20 = 1;
    v21 = *(_QWORD *)(v16 + 16);
    v39 = v38[18];
    v42 = v21;
    while (1)
    {
      v22 = v20;
      v23 = *(_QWORD *)(*(_QWORD *)v18 + 16);
      if (v23)
        break;
LABEL_27:
      if (v22 == v42)
        goto LABEL_31;
      v21 = *(_QWORD *)(v39 + 16);
      v20 = v22 + 1;
      v17 = v22;
      if (!v21)
      {
        __break(1u);
        goto LABEL_30;
      }
    }
    if (v17 >= v21)
      goto LABEL_35;
    v24 = 0;
    while (1)
    {
      v25 = *(_QWORD *)(v18 + 8 * v17);
      if (v24 >= *(_QWORD *)(v25 + 16))
        break;
      v26 = *(_DWORD *)(v25 + 4 * v24 + 32);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE817900();
        v19 = v28;
      }
      v27 = *(_QWORD *)(v19 + 16);
      if (v27 >= *(_QWORD *)(v19 + 24) >> 1)
      {
        sub_1AE817900();
        v19 = v29;
      }
      ++v24;
      *(_QWORD *)(v19 + 16) = v27 + 1;
      *(_DWORD *)(v19 + 4 * v27 + 32) = v26;
      if (v23 == v24)
        goto LABEL_27;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

uint64_t sub_1AE816DFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 184) = a1;
  *(_QWORD *)(v3 + 192) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_1AE4F77A8();
}

uint64_t sub_1AE816E90()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v18;

  v1 = *(void **)(v0 + 184);
  v2 = (void *)sub_1AE925E18();
  v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  if (v3)
  {
    sub_1AE926610();

    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v5, 1, v4) != 1)
    {
      v7 = *(_QWORD *)(v0 + 120);
      v6 = *(_QWORD *)(v0 + 128);
      v8 = *(_QWORD *)(v0 + 104);
      v9 = *(_QWORD *)(v0 + 112);
      v10 = *(_QWORD *)(v0 + 80);
      v11 = *(_QWORD *)(v0 + 64);
      v18 = *(_QWORD *)(v0 + 72);
      v12 = *(_QWORD *)(v0 + 56);
      v13 = *(_QWORD *)(v0 + 32);
      swift_unknownObjectRelease();
      swift_release();
      v14 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v14(v7, v8);
      v14(v6, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
      v15(v10, v12, v11);
      v15(v13, v10, v11);
      v16 = v13 + *(int *)(sub_1AE501548(&qword_1EEDA3EA0) + 28);
      *(_QWORD *)v16 = 0;
      *(_BYTE *)(v16 + 8) = 1;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  else
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(*(_QWORD *)(v0 + 56), 1, 1, *(_QWORD *)(v0 + 64));
  }
  sub_1AE52982C(*(_QWORD *)(v0 + 56), &qword_1EED9DD98);
  return sub_1AE926AB4();
}

uint64_t sub_1AE8170C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  swift_release();
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v1, v3);
  v5(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LocationEmbedderInferenceServiceDefinition.Runner.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t LocationEmbedderInferenceServiceDefinition.Runner.__deallocating_deinit()
{
  LocationEmbedderInferenceServiceDefinition.Runner.deinit();
  return swift_defaultActor_deallocate();
}

void LocationEmbedderInferenceServiceDefinition.Runner.unownedExecutor.getter()
{
  sub_1AE4F67D4();
}

void sub_1AE8171C0()
{
  LocationEmbedderInferenceServiceDefinition.Runner.unownedExecutor.getter();
}

void sub_1AE8171D8(uint64_t a1@<X8>)
{
  LocationEmbedderInferenceServiceDefinition.Runner.cost.getter(a1);
}

uint64_t sub_1AE8171F8(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1AE817264;
  return LocationEmbedderInferenceServiceDefinition.Runner.run(input:context:)(a1, a2, a3);
}

uint64_t sub_1AE817264()
{
  uint64_t v0;

  sub_1AE4FD1AC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static LocationEmbedderInferenceServiceDefinition.buildRunner(config:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v2[2] = a2;
  v2[3] = v3;
  v2[4] = v4;
  return swift_task_switch();
}

uint64_t sub_1AE8172C0()
{
  uint64_t *v0;
  _QWORD *v1;

  type metadata accessor for LocationEmbedderInferenceServiceDefinition.Runner();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1AE4F943C();
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1AE62DA5C;
  return sub_1AE816708(v0[3], v0[4], v0[2]);
}

unint64_t sub_1AE817348()
{
  static LocationEmbedderInferenceServiceDefinition.definitionId.getter();
  return 0xD000000000000020;
}

uint64_t sub_1AE817364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1AE8173BC;
  return static LocationEmbedderInferenceServiceDefinition.buildRunner(config:context:)(a2, a3);
}

uint64_t sub_1AE8173BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t type metadata accessor for EmbedderInput()
{
  uint64_t result;

  result = qword_1EEDA3EF8;
  if (!qword_1EEDA3EF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for LocationEmbedderInferenceServiceDefinition.Runner()
{
  return objc_opt_self();
}

unint64_t sub_1AE817470(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AE81749C();
  result = sub_1AE8174D8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AE81749C()
{
  unint64_t result;

  result = qword_1EEDA3EB8;
  if (!qword_1EEDA3EB8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEmbedderInferenceServiceDefinition.ConfigParameters, &type metadata for LocationEmbedderInferenceServiceDefinition.ConfigParameters);
    atomic_store(result, (unint64_t *)&qword_1EEDA3EB8);
  }
  return result;
}

unint64_t sub_1AE8174D8()
{
  unint64_t result;

  result = qword_1EEDA3EC0;
  if (!qword_1EEDA3EC0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEmbedderInferenceServiceDefinition.ConfigParameters, &type metadata for LocationEmbedderInferenceServiceDefinition.ConfigParameters);
    atomic_store(result, (unint64_t *)&qword_1EEDA3EC0);
  }
  return result;
}

unint64_t sub_1AE817514(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE817538();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE817538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEDA3EC8;
  if (!qword_1EEDA3EC8)
  {
    v1 = type metadata accessor for LocationEmbedderInferenceServiceDefinition.Runner();
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEmbedderInferenceServiceDefinition.Runner, v1);
    atomic_store(result, (unint64_t *)&qword_1EEDA3EC8);
  }
  return result;
}

uint64_t sub_1AE817574()
{
  return sub_1AE5BA550((unint64_t *)&unk_1EEDA3ED0, &qword_1EEDA3EA0, (uint64_t)&protocol conformance descriptor for InferenceServiceRunnerExtendedResponse<A>);
}

unint64_t sub_1AE8175A4()
{
  unint64_t result;

  result = qword_1EEDA3EE0;
  if (!qword_1EEDA3EE0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEmbedderInferenceServiceDefinition.ConfigParameters, &type metadata for LocationEmbedderInferenceServiceDefinition.ConfigParameters);
    atomic_store(result, (unint64_t *)&qword_1EEDA3EE0);
  }
  return result;
}

unint64_t sub_1AE8175E4()
{
  unint64_t result;

  result = qword_1EEDA3EE8;
  if (!qword_1EEDA3EE8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEmbedderInferenceInterface, &type metadata for LocationEmbedderInferenceInterface);
    atomic_store(result, (unint64_t *)&qword_1EEDA3EE8);
  }
  return result;
}

uint64_t sub_1AE817624()
{
  return type metadata accessor for EmbedderInput();
}

void sub_1AE81762C()
{
  unint64_t v0;

  sub_1AE817698();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1AE817698()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEDA3F08)
  {
    sub_1AE523CF0(&qword_1EEDA3E90);
    v0 = sub_1AE92670C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEDA3F08);
  }
}

void type metadata accessor for LocationEmbedderInferenceServiceDefinition()
{
  sub_1AE4F67D4();
}

void type metadata accessor for LocationEmbedderInferenceServiceDefinition.ConfigParameters()
{
  sub_1AE4F67D4();
}

uint64_t method lookup function for LocationEmbedderInferenceServiceDefinition.Runner()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for LocationEmbedderInferenceServiceDefinition.ConfigParameters.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE817754 + 4 * byte_1AE960300[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE817774 + 4 * byte_1AE960305[v4]))();
}

_BYTE *sub_1AE817754(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE817774(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE81777C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE817784(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE81778C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE817794(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LocationEmbedderInferenceServiceDefinition.ConfigParameters.CodingKeys()
{
  return &type metadata for LocationEmbedderInferenceServiceDefinition.ConfigParameters.CodingKeys;
}

unint64_t sub_1AE8177B4()
{
  unint64_t result;

  result = qword_1EEDA3F10;
  if (!qword_1EEDA3F10)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960534, &type metadata for LocationEmbedderInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3F10);
  }
  return result;
}

unint64_t sub_1AE8177F4()
{
  unint64_t result;

  result = qword_1EEDA3F18;
  if (!qword_1EEDA3F18)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9604A4, &type metadata for LocationEmbedderInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3F18);
  }
  return result;
}

unint64_t sub_1AE817834()
{
  unint64_t result;

  result = qword_1EEDA3F20;
  if (!qword_1EEDA3F20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9604CC, &type metadata for LocationEmbedderInferenceServiceDefinition.ConfigParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3F20);
  }
  return result;
}

uint64_t sub_1AE817870(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EEDA3E88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE8178B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EEDA3E88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1AE817900()
{
  sub_1AE51A3F4();
}

uint64_t sub_1AE81790C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE817920(uint64_t a1)
{
  uint64_t v1;

  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v1);
}

uint64_t LocationEntityCard.subject.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t LocationEntityCard.subject.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*LocationEntityCard.subject.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summaryInfos.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summaryInfos.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summaryInfos.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summary7Days.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summary7Days.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summary7Days.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summary7DaysWithPeople.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summary7DaysWithPeople.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summary7DaysWithPeople.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summaryAllTime.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summaryAllTime.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summaryAllTime.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summaryAllTimeWithPeople.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summaryAllTimeWithPeople.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = v2;
  *(_QWORD *)(v1 + 80) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summaryAllTimeWithPeople.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.name.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.name.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 88) = v2;
  *(_QWORD *)(v1 + 96) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.name.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.city.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.city.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 104) = v2;
  *(_QWORD *)(v1 + 112) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.city.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summary7DaysActivities.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summary7DaysActivities.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 120) = v2;
  *(_QWORD *)(v1 + 128) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summary7DaysActivities.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summary7DaysSpantext.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summary7DaysSpantext.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 136) = v2;
  *(_QWORD *)(v1 + 144) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summary7DaysSpantext.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summary7DaysWithPeopleActivities.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summary7DaysWithPeopleActivities.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 152) = v2;
  *(_QWORD *)(v1 + 160) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summary7DaysWithPeopleActivities.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summary7DaysWithPeopleSpantext.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summary7DaysWithPeopleSpantext.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 168) = v2;
  *(_QWORD *)(v1 + 176) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summary7DaysWithPeopleSpantext.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summary7DaysWithPeoplePeople.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summary7DaysWithPeoplePeople.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 184) = v2;
  *(_QWORD *)(v1 + 192) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summary7DaysWithPeoplePeople.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summary7DaysWithPeoplePeopleNames.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summary7DaysWithPeoplePeopleNames.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 200) = v2;
  *(_QWORD *)(v1 + 208) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summary7DaysWithPeoplePeopleNames.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summaryAllTimeActivities.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summaryAllTimeActivities.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 216) = v2;
  *(_QWORD *)(v1 + 224) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summaryAllTimeActivities.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summaryAllTimeSpantext.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summaryAllTimeSpantext.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 232) = v2;
  *(_QWORD *)(v1 + 240) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summaryAllTimeSpantext.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summaryAllTimeWithPeopleActivities.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summaryAllTimeWithPeopleActivities.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 248) = v2;
  *(_QWORD *)(v1 + 256) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summaryAllTimeWithPeopleActivities.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summaryAllTimeWithPeopleSpantext.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summaryAllTimeWithPeopleSpantext.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 264) = v2;
  *(_QWORD *)(v1 + 272) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summaryAllTimeWithPeopleSpantext.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summaryAllTimeWithPeoplePeople.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summaryAllTimeWithPeoplePeople.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 280) = v2;
  *(_QWORD *)(v1 + 288) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summaryAllTimeWithPeoplePeople.modify())(_QWORD)
{
  return nullsub_1;
}

void LocationEntityCard.summaryAllTimeWithPeoplePeopleNames.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F7714();
  sub_1AE4F6664();
}

void LocationEntityCard.summaryAllTimeWithPeoplePeopleNames.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F6B50();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 296) = v2;
  *(_QWORD *)(v1 + 304) = v0;
  sub_1AE4F6624();
}

uint64_t (*LocationEntityCard.summaryAllTimeWithPeoplePeopleNames.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1AE817FD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v11;

  v2 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x497972616D6D7573 && a2 == 0xEC000000736F666ELL;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x377972616D6D7573 && a2 == 0xEC00000073796144;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x80000001AE987900 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x417972616D6D7573 && a2 == 0xEE00656D69546C6CLL;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000018 && a2 == 0x80000001AE987920 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v9 = a1 == 1701667182 && a2 == 0xE400000000000000;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v10 = a1 == 2037672291 && a2 == 0xE400000000000000;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x80000001AE987940 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD000000000000014 && a2 == 0x80000001AE987960 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000020 && a2 == 0x80000001AE987980 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AE9879B0 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 11;
            }
            else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AE9879D0 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 12;
            }
            else if (a1 == 0xD000000000000021 && a2 == 0x80000001AE9879F0 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 13;
            }
            else if (a1 == 0xD000000000000018 && a2 == 0x80000001AE987A20 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 14;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x80000001AE987A40 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 15;
            }
            else if (a1 == 0xD000000000000022 && a2 == 0x80000001AE987A60 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 16;
            }
            else if (a1 == 0xD000000000000020 && a2 == 0x80000001AE987A90 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 17;
            }
            else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AE987AC0 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 18;
            }
            else if (a1 == 0xD000000000000023 && a2 == 0x80000001AE987AE0)
            {
              swift_bridgeObjectRelease();
              return 19;
            }
            else
            {
              v11 = sub_1AE926D60();
              swift_bridgeObjectRelease();
              if ((v11 & 1) != 0)
                return 19;
              else
                return 20;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE818734()
{
  return 20;
}

uint64_t sub_1AE81873C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE818770 + 4 * byte_1AE9605B0[a1]))(0x7463656A627573, 0xE700000000000000);
}

uint64_t sub_1AE818770()
{
  return 0x497972616D6D7573;
}

uint64_t sub_1AE818790()
{
  return 0x377972616D6D7573;
}

unint64_t sub_1AE8187B0()
{
  return 0xD000000000000016;
}

unint64_t sub_1AE8188D0()
{
  return 0xD000000000000022;
}

unint64_t sub_1AE8188E8()
{
  return 0xD000000000000020;
}

unint64_t sub_1AE818900()
{
  return 0xD00000000000001ELL;
}

void sub_1AE818918()
{
  JUMPOUT(0x1AE81892CLL);
}

uint64_t sub_1AE818938()
{
  unsigned __int8 *v0;

  return sub_1AE81873C(*v0);
}

uint64_t sub_1AE818940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE817FD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE818964@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE818734();
  *a1 = result;
  return result;
}

uint64_t sub_1AE818988()
{
  sub_1AE818E68();
  return sub_1AE926F94();
}

uint64_t sub_1AE8189B0()
{
  sub_1AE818E68();
  return sub_1AE926FA0();
}

void LocationEntityCard.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[36];
  uint64_t v24;
  char v25;

  v3 = sub_1AE501548(&qword_1EEDA3F30);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[1];
  v23[34] = v1[2];
  v23[35] = v7;
  v8 = v1[3];
  v23[32] = v1[4];
  v23[33] = v8;
  v9 = v1[5];
  v23[30] = v1[6];
  v23[31] = v9;
  v10 = v1[8];
  v23[28] = v1[7];
  v23[29] = v10;
  v11 = v1[10];
  v23[26] = v1[9];
  v23[27] = v11;
  v12 = v1[12];
  v23[24] = v1[11];
  v23[25] = v12;
  v13 = v1[14];
  v23[22] = v1[13];
  v23[23] = v13;
  v14 = v1[16];
  v23[20] = v1[15];
  v23[21] = v14;
  v15 = v1[18];
  v23[18] = v1[17];
  v23[19] = v15;
  v16 = v1[20];
  v23[16] = v1[19];
  v23[17] = v16;
  v23[15] = v1[21];
  v23[14] = v1[22];
  v23[13] = v1[23];
  v23[12] = v1[24];
  v23[11] = v1[25];
  v23[10] = v1[26];
  v23[9] = v1[27];
  v23[8] = v1[28];
  v23[7] = v1[29];
  v23[6] = v1[30];
  v23[5] = v1[31];
  v23[4] = v1[32];
  v23[1] = v1[33];
  v23[0] = v1[34];
  v23[3] = v1[35];
  v23[2] = v1[36];
  v17 = v1[38];
  v18 = a1[3];
  v19 = a1;
  v21 = v20;
  sub_1AE4F9858(v19, v18);
  sub_1AE818E68();
  sub_1AE926F4C();
  v25 = 0;
  v22 = v24;
  sub_1AE926CDC();
  if (!v22)
  {
    v24 = v17;
    sub_1AE50A740(1);
    sub_1AE4FCB98();
    sub_1AE50A740(2);
    sub_1AE4FCB98();
    sub_1AE50A740(3);
    sub_1AE4FCB98();
    sub_1AE50A740(4);
    sub_1AE4FCB98();
    sub_1AE50A740(5);
    sub_1AE4FCB98();
    sub_1AE50A740(6);
    sub_1AE4FCB98();
    sub_1AE50A740(7);
    sub_1AE4FCB98();
    sub_1AE50A740(8);
    sub_1AE4FCB98();
    sub_1AE50A740(9);
    sub_1AE4FCB98();
    sub_1AE50A740(10);
    sub_1AE4FCB98();
    sub_1AE50A740(11);
    sub_1AE503A4C();
    sub_1AE50A740(12);
    sub_1AE503A4C();
    sub_1AE50A740(13);
    sub_1AE503A4C();
    sub_1AE50A740(14);
    sub_1AE503A4C();
    sub_1AE50A740(15);
    sub_1AE503A4C();
    sub_1AE50A740(16);
    sub_1AE503A4C();
    sub_1AE50A740(17);
    sub_1AE503A4C();
    sub_1AE50A740(18);
    sub_1AE503A4C();
    sub_1AE50A740(19);
    sub_1AE4FCB98();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v21);
  sub_1AE4F667C();
}

unint64_t sub_1AE818E68()
{
  unint64_t result;

  result = qword_1EEDA3F38;
  if (!qword_1EEDA3F38)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9608F4, &type metadata for LocationEntityCard.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3F38);
  }
  return result;
}

void LocationEntityCard.init(from:)(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[39];
  _QWORD v78[40];
  char v79;

  v5 = sub_1AE501548(&qword_1EEDA3F40);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE818E68();
  sub_1AE926F34();
  if (v2)
  {
    sub_1AE4FD520();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE4FBF74();
    sub_1AE7AE168();
    sub_1AE50A134();
    sub_1AE81B1C8();
    swift_bridgeObjectRelease();
    sub_1AE507FA8();
    sub_1AE50821C();
    sub_1AE50972C();
    sub_1AE5088FC();
    sub_1AE4F6718();
    sub_1AE4F76D8();
    sub_1AE4F66E8();
    sub_1AE4F6710();
    sub_1AE4F9038();
    sub_1AE4F81B8();
    sub_1AE4F67AC();
    sub_1AE4F6728();
  }
  else
  {
    v6 = sub_1AE926C04();
    v7 = sub_1AE502004();
    v9 = v8;
    sub_1AE509358();
    v76 = v9;
    v66 = sub_1AE502004();
    v11 = v10;
    sub_1AE509358();
    v75 = v11;
    v65 = sub_1AE502004();
    v74 = v12;
    sub_1AE509358();
    v64 = sub_1AE502004();
    v73 = v13;
    sub_1AE509358();
    v62 = v7;
    v63 = sub_1AE502004();
    v15 = v14;
    sub_1AE509358();
    v68 = v15;
    v16 = sub_1AE502004();
    v18 = v17;
    v60 = v16;
    v61 = v6;
    v59 = a2;
    v19 = v15;
    sub_1AE509358();
    v71 = v18;
    v20 = sub_1AE502004();
    v22 = v21;
    v58 = v20;
    sub_1AE509358();
    v57 = sub_1AE502004();
    v70 = v22;
    v69 = v23;
    sub_1AE509358();
    v24 = sub_1AE4FF1E4();
    v72 = v25;
    v26 = v24;
    swift_bridgeObjectRetain();
    v27 = sub_1AE4FF1E4();
    v56 = v28;
    v29 = v27;
    swift_bridgeObjectRetain();
    v54 = sub_1AE4FF1E4();
    v55 = v30;
    swift_bridgeObjectRetain();
    v52 = sub_1AE4FF1E4();
    v53 = v31;
    swift_bridgeObjectRetain();
    v50 = sub_1AE4FF1E4();
    v51 = v32;
    swift_bridgeObjectRetain();
    v48 = sub_1AE4FF1E4();
    v49 = v33;
    swift_bridgeObjectRetain();
    v46 = sub_1AE4FF1E4();
    v47 = v34;
    swift_bridgeObjectRetain();
    v44 = sub_1AE4FF1E4();
    v45 = v35;
    swift_bridgeObjectRetain();
    v42 = sub_1AE4FF1E4();
    v43 = v36;
    LOBYTE(v78[0]) = 18;
    swift_bridgeObjectRetain();
    v41 = sub_1AE4FF1E4();
    v67 = v37;
    v79 = 19;
    swift_bridgeObjectRetain();
    v40 = sub_1AE926B68();
    v39 = v38;
    sub_1AE5005E8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v77[0] = v61;
    v77[1] = v62;
    v77[2] = v76;
    v77[3] = v66;
    v77[4] = v75;
    v77[5] = v65;
    v77[6] = v74;
    v77[7] = v64;
    v77[8] = v73;
    v77[9] = v63;
    v77[10] = v19;
    v77[11] = v60;
    v77[12] = v71;
    v77[13] = v58;
    v77[14] = v70;
    v77[15] = v57;
    v77[16] = v69;
    v77[17] = v26;
    v77[18] = v72;
    v77[19] = v29;
    v77[20] = v56;
    v77[21] = v54;
    v77[22] = v55;
    v77[23] = v52;
    v77[24] = v53;
    v77[25] = v50;
    v77[26] = v51;
    v77[27] = v48;
    v77[28] = v49;
    v77[29] = v46;
    v77[30] = v47;
    v77[31] = v44;
    v77[32] = v45;
    v77[33] = v42;
    v77[34] = v43;
    v77[35] = v41;
    v77[36] = v67;
    v77[37] = v40;
    v77[38] = v39;
    sub_1AE8199E8((uint64_t)v77);
    sub_1AE4FBF74();
    sub_1AE4F67AC();
    sub_1AE4F9038();
    sub_1AE81B1C8();
    sub_1AE4F76D8();
    sub_1AE4F6718();
    sub_1AE4F81B8();
    sub_1AE50972C();
    sub_1AE5088FC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE4F6710();
    sub_1AE4F6718();
    sub_1AE4F9038();
    sub_1AE4F81B8();
    sub_1AE4F6728();
    sub_1AE4F67AC();
    sub_1AE4F66E8();
    memcpy(v59, v77, 0x138uLL);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
    v78[0] = v61;
    v78[1] = v62;
    v78[2] = v76;
    v78[3] = v66;
    v78[4] = v75;
    v78[5] = v65;
    v78[6] = v74;
    v78[7] = v64;
    v78[8] = v73;
    v78[9] = v63;
    v78[10] = v68;
    v78[11] = v60;
    v78[12] = v71;
    v78[13] = v58;
    v78[14] = v70;
    v78[15] = v57;
    v78[16] = v69;
    v78[17] = v26;
    v78[18] = v72;
    v78[19] = v29;
    v78[20] = v56;
    v78[21] = v54;
    v78[22] = v55;
    v78[23] = v52;
    v78[24] = v53;
    v78[25] = v50;
    v78[26] = v51;
    v78[27] = v48;
    v78[28] = v49;
    v78[29] = v46;
    v78[30] = v47;
    v78[31] = v44;
    v78[32] = v45;
    v78[33] = v42;
    v78[34] = v43;
    v78[35] = v41;
    v78[36] = v67;
    v78[37] = v40;
    v78[38] = v39;
    sub_1AE819B24((uint64_t)v78);
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE8199E8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AE819B24(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1AE819C60(_QWORD *a1@<X0>, void *a2@<X8>)
{
  LocationEntityCard.init(from:)(a1, a2);
}

void sub_1AE819C74(_QWORD *a1)
{
  LocationEntityCard.encode(to:)(a1);
}

uint64_t sub_1AE819C88()
{
  sub_1AE81B0D8();
  return sub_1AE924DA4();
}

uint64_t sub_1AE819CDC()
{
  return sub_1AE924F84();
}

uint64_t sub_1AE819CF0()
{
  return sub_1AE924F78();
}

uint64_t sub_1AE819D08()
{
  sub_1AE81B09C();
  return sub_1AE924F90();
}

uint64_t sub_1AE819D58()
{
  sub_1AE81B09C();
  return sub_1AE924F84();
}

uint64_t sub_1AE819D9C()
{
  return sub_1AE9251A0();
}

uint64_t sub_1AE819DB0()
{
  sub_1AE81B09C();
  return sub_1AE924F78();
}

uint64_t sub_1AE819DF4()
{
  return sub_1AE92517C() & 1;
}

uint64_t sub_1AE819E0C()
{
  return sub_1AE925188() & 1;
}

uint64_t sub_1AE819E24()
{
  sub_1AE81B060();
  return sub_1AE924D44();
}

uint64_t ViewService.locationEntityCardsView.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(id, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v16;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  v5 = (void *)sub_1AE925E18();
  v17[0] = 0;
  v6 = objc_msgSend(v4, sel_requestAssertionForViewName_error_, v5, v17);

  v7 = v17[0];
  if (v6)
  {
    v8 = *(_QWORD **)(v1 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    v9 = v8[5];
    v10 = v8[6];
    sub_1AE4F9858(v8 + 2, v9);
    v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 8);
    v12 = v7;
    v13 = v11(v6, v9, v10);
    if (v2)
      return swift_unknownObjectRelease();
    else
      return sub_1AE819FE8(v6, v13, v14, a1);
  }
  else
  {
    v16 = v17[0];
    sub_1AE9246B4();

    return swift_willThrow();
  }
}

uint64_t sub_1AE819FE8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;

  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v8 = objc_msgSend(a1, sel_viewArtifactTableName);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1AE925E3C();
    v12 = v11;
    swift_unknownObjectRelease();

  }
  else
  {
    swift_unknownObjectRelease();
    v12 = 0x80000001AE987B40;
    v10 = 0xD000000000000018;
  }
  result = swift_unknownObjectRelease();
  *a4 = a1;
  a4[1] = v10;
  a4[2] = v12;
  a4[3] = a2;
  a4[4] = a3;
  return result;
}

uint64_t ViewService.LocationEntityCardsView.getEntityCard(locationId:)()
{
  sub_1AE507C48();
  return sub_1AE924CCC();
}

void *sub_1AE81A12C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _BYTE v23[312];
  _QWORD v24[39];
  _QWORD v25[42];

  v19 = a1;
  v18 = a3;
  v4 = sub_1AE501548(&qword_1EEDA3F98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AE501548(&qword_1EEDA3FA0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1AE925368();
  v24[0] = a2;
  LOBYTE(v24[1]) = 0;
  sub_1AE925308();
  sub_1AE5BA550(&qword_1EEDA3FB8, &qword_1EEDA3F98, MEMORY[0x1E0D24290]);
  sub_1AE81B114();
  v12 = v20;
  sub_1AE924B34();
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1AE81B150((uint64_t)v25, (uint64_t)v23);
  sub_1AE81B150((uint64_t)v23, (uint64_t)v24);
  if (sub_1AE81B198((uint64_t)v24) == 1)
  {
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    v21 = 0xD000000000000021;
    v22 = 0x80000001AE987B10;
    v25[41] = a2;
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    v13 = v21;
    v14 = v22;
    sub_1AE5CB92C();
    swift_allocError();
    *(_QWORD *)v15 = v13;
    *(_QWORD *)(v15 + 8) = v14;
    *(_BYTE *)(v15 + 16) = 1;
    swift_willThrow();
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return memcpy(v18, v24, 0x138uLL);
}

void *sub_1AE81A3B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;

  return sub_1AE81A12C(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t ViewService.LocationEntityCardsView.getEntityCards(locationIds:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1AE507C48();
  sub_1AE501548(&qword_1EEDA3F48);
  result = sub_1AE924CCC();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1AE81A460@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[5];
  uint64_t v18[7];

  v14 = a2;
  v3 = sub_1AE501548(&qword_1EEDA3F98);
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1AE501548(&qword_1EEDA3FA0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1AE925368();
  v18[6] = a1;
  v17[3] = sub_1AE925374();
  v17[4] = MEMORY[0x1E0D24668];
  sub_1AE52F6A8(v17);
  sub_1AE925380();
  v18[3] = sub_1AE924C9C();
  v18[4] = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8(v18);
  sub_1AE501548(&qword_1EEDA3FA8);
  sub_1AE5BA550(&qword_1EEDA3FB0, &qword_1EEDA3FA8, MEMORY[0x1E0DEB3D0]);
  sub_1AE926058();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v17);
  sub_1AE925320();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v18);
  sub_1AE5BA550(&qword_1EEDA3FB8, &qword_1EEDA3F98, MEMORY[0x1E0D24290]);
  sub_1AE81B114();
  v10 = v16;
  v11 = sub_1AE924B28();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v10)
    *v14 = v11;
  return result;
}

uint64_t sub_1AE81A69C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1AE81A460(*(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1AE81A6B8()
{
  unint64_t result;

  result = qword_1EEDA3F50;
  if (!qword_1EEDA3F50)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEntityCard, &type metadata for LocationEntityCard);
    atomic_store(result, (unint64_t *)&qword_1EEDA3F50);
  }
  return result;
}

unint64_t sub_1AE81A6F8()
{
  unint64_t result;

  result = qword_1EEDA3F58;
  if (!qword_1EEDA3F58)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEntityCard, &type metadata for LocationEntityCard);
    atomic_store(result, (unint64_t *)&qword_1EEDA3F58);
  }
  return result;
}

unint64_t sub_1AE81A738()
{
  unint64_t result;

  result = qword_1EEDA3F60;
  if (!qword_1EEDA3F60)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEntityCard, &type metadata for LocationEntityCard);
    atomic_store(result, (unint64_t *)&qword_1EEDA3F60);
  }
  return result;
}

uint64_t destroy for LocationEntityCard()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocationEntityCard(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  v11 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v11;
  v12 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v12;
  v13 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v13;
  v14 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v14;
  v15 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v15;
  v16 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v16;
  v17 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v17;
  v18 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v18;
  v19 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v19;
  v20 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v20;
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for LocationEntityCard(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  a1[22] = a2[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[23] = a2[23];
  a1[24] = a2[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[25] = a2[25];
  a1[26] = a2[26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[27] = a2[27];
  a1[28] = a2[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[29] = a2[29];
  a1[30] = a2[30];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[31] = a2[31];
  a1[32] = a2[32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[33] = a2[33];
  a1[34] = a2[34];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[35] = a2[35];
  a1[36] = a2[36];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[37] = a2[37];
  a1[38] = a2[38];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for LocationEntityCard(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x138uLL);
}

uint64_t assignWithTake for LocationEntityCard(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationEntityCard(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 312))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationEntityCard(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 312) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 312) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationEntityCard()
{
  return &type metadata for LocationEntityCard;
}

ValueMetadata *type metadata accessor for ViewService.LocationEntityCardsView()
{
  return &type metadata for ViewService.LocationEntityCardsView;
}

uint64_t storeEnumTagSinglePayload for LocationEntityCard.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_1AE81AF20 + 4 * byte_1AE9605C9[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_1AE81AF54 + 4 * byte_1AE9605C4[v4]))();
}

uint64_t sub_1AE81AF54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE81AF5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE81AF64);
  return result;
}

uint64_t sub_1AE81AF70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE81AF78);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_1AE81AF7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE81AF84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationEntityCard.CodingKeys()
{
  return &type metadata for LocationEntityCard.CodingKeys;
}

unint64_t sub_1AE81AFA4()
{
  unint64_t result;

  result = qword_1EEDA3F68;
  if (!qword_1EEDA3F68)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE9608CC, &type metadata for LocationEntityCard.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3F68);
  }
  return result;
}

unint64_t sub_1AE81AFE4()
{
  unint64_t result;

  result = qword_1EEDA3F70;
  if (!qword_1EEDA3F70)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96083C, &type metadata for LocationEntityCard.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3F70);
  }
  return result;
}

unint64_t sub_1AE81B024()
{
  unint64_t result;

  result = qword_1EEDA3F78;
  if (!qword_1EEDA3F78)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960864, &type metadata for LocationEntityCard.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA3F78);
  }
  return result;
}

unint64_t sub_1AE81B060()
{
  unint64_t result;

  result = qword_1EEDA3F80;
  if (!qword_1EEDA3F80)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEntityCard, &type metadata for LocationEntityCard);
    atomic_store(result, (unint64_t *)&qword_1EEDA3F80);
  }
  return result;
}

unint64_t sub_1AE81B09C()
{
  unint64_t result;

  result = qword_1EEDA3F88;
  if (!qword_1EEDA3F88)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEntityCard, &type metadata for LocationEntityCard);
    atomic_store(result, (unint64_t *)&qword_1EEDA3F88);
  }
  return result;
}

unint64_t sub_1AE81B0D8()
{
  unint64_t result;

  result = qword_1EEDA3F90;
  if (!qword_1EEDA3F90)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEntityCard, &type metadata for LocationEntityCard);
    atomic_store(result, (unint64_t *)&qword_1EEDA3F90);
  }
  return result;
}

unint64_t sub_1AE81B114()
{
  unint64_t result;

  result = qword_1EEDA3FC0;
  if (!qword_1EEDA3FC0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for LocationEntityCard, &type metadata for LocationEntityCard);
    atomic_store(result, (unint64_t *)&qword_1EEDA3FC0);
  }
  return result;
}

uint64_t sub_1AE81B150(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EEDA3FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE81B198(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_1AE81B1BC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE81B1C8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE81B1D0()
{
  return swift_bridgeObjectRelease();
}

void UnfairLockedBox.__allocating_init(contents:)(uint64_t a1)
{
  sub_1AE81B8F0(a1, (void (*)(uint64_t))UnfairLockedBox.init(contents:));
}

uint64_t sub_1AE81B1E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  sub_1AE4FE0EC(a1);
  sub_1AE4F9094();
  sub_1AE4FB9BC();
  sub_1AE509AC4();
  sub_1AE4F6730();
  v3 = sub_1AE515C74(v2, v1);
  sub_1AE4F81B8();
  if (!v3)
  {
    swift_endAccess();
LABEL_5:
    type metadata accessor for EntityResolutionCAEventLogger();
    Strong = sub_1AE4F6738();
    sub_1AE4F99B0();
    *(_QWORD *)(Strong + 16) = sub_1AE925C98();
    type metadata accessor for EntityResolutionCAEventLoggerProvider.CachedLogger();
    sub_1AE4F6738();
    sub_1AE4F6730();
    swift_retain();
    v5 = sub_1AE5DE5E0();
    sub_1AE4FB9BC();
    sub_1AE655038(v5, v2, v1, v6, v7, v8, v9, v10, v12, v13);
    sub_1AE4F96E0();
    sub_1AE4F81B8();
    sub_1AE5DE640();
    goto LABEL_6;
  }
  swift_endAccess();
  Strong = swift_weakLoadStrong();
  swift_release();
  if (!Strong)
    goto LABEL_5;
LABEL_6:
  sub_1AE4F77C8();
  sub_1AE81BB18();
  sub_1AE4F81B8();
  return Strong;
}

void sub_1AE81B340(uint64_t a1)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 24));
  sub_1AE4F9094();
  sub_1AE4FB9BC();
  sub_1AE501548((uint64_t *)&unk_1ED30EBB8);
  sub_1AE925CC8();
  sub_1AE4F96E0();
  sub_1AE4FCBA0();
}

uint64_t sub_1AE81B3C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 24));
  sub_1AE4F9094();
  sub_1AE4FB9BC();
  sub_1AE509AC4();
  sub_1AE4F6730();
  sub_1AE654B44(a2, a3, v5, v6, v7, v8, v9, v10, v12, v13);
  sub_1AE4F96E0();
  sub_1AE4F77C8();
  sub_1AE4F81B8();
  swift_release();
  sub_1AE81BB18();
  return sub_1AE4F81B8();
}

uint64_t sub_1AE81B470(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  sub_1AE4FE0EC(a1);
  sub_1AE4F9094();
  v4 = *(_QWORD *)(v1 + 16);
  sub_1AE4FB9BC();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v5 + 16);
  sub_1AE509AC4();
  sub_1AE4F6730();
  if (v6 && (v7 = sub_1AE536EDC(v3, v2), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v7);
    swift_retain();
  }
  else
  {
    v9 = 0;
  }
  sub_1AE4F96E0();
  sub_1AE4F77C8();
  sub_1AE4F81B8();
  sub_1AE81BB18();
  sub_1AE4F81B8();
  return v9;
}

void sub_1AE81B51C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  _BYTE v7[40];

  sub_1AE4FBF7C(a1);
  sub_1AE4F9094();
  v4 = *(void **)(*(_QWORD *)(v2 + 16)
                + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_peopleKnosisServer);
  if (v4)
  {
    swift_retain();
  }
  else
  {
    sub_1AE501058();
    swift_unknownObjectRetain();
    sub_1AE509330();
    sub_1AE7AF4B4((uint64_t)v7);
    if (v1)
    {
      sub_1AE4F682C();
      sub_1AE4FCBA0();
      sub_1AE50A74C();
      goto LABEL_6;
    }
    sub_1AE50A13C(v6);

    v4 = 0;
  }
  v5 = v4;
  sub_1AE4F682C();
  sub_1AE4FCBA0();
  sub_1AE50A74C();
LABEL_6:
  sub_1AE500388();
}

void sub_1AE81B5E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  _BYTE v7[40];

  sub_1AE4FBF7C(a1);
  sub_1AE4F9094();
  v4 = *(void **)(*(_QWORD *)(v2 + 16)
                + OBJC_IVAR____TtCC20IntelligencePlatform27EntityResolutionServicePool11GuardedData_entityKnosisServer);
  if (v4)
  {
    swift_retain();
  }
  else
  {
    sub_1AE501058();
    swift_unknownObjectRetain();
    sub_1AE509330();
    sub_1AE7AF4E0((uint64_t)v7);
    if (v1)
    {
      sub_1AE4F682C();
      sub_1AE4FCBA0();
      sub_1AE50A74C();
      goto LABEL_6;
    }
    sub_1AE50A13C(v6);

    v4 = 0;
  }
  v5 = v4;
  sub_1AE4F682C();
  sub_1AE4FCBA0();
  sub_1AE50A74C();
LABEL_6:
  sub_1AE500388();
}

_DWORD *UnsafeMutablePointer<A>.init()()
{
  _DWORD *result;

  result = (_DWORD *)sub_1AE4F66A0();
  *result = 0;
  return result;
}

void UnsafeMutablePointer<A>.cleanupLock()()
{
  JUMPOUT(0x1AF454C78);
}

BOOL UnsafeMutablePointer<A>.trylock()(os_unfair_lock_s *a1)
{
  return os_unfair_lock_trylock(a1);
}

_QWORD *UnsafeMutablePointer<A>.init()()
{
  _QWORD *result;

  result = (_QWORD *)sub_1AE4F66A0();
  *result = 0;
  return result;
}

uint64_t UnsafeMutablePointer<A>.lock()()
{
  return os_unfair_recursive_lock_lock_with_options();
}

uint64_t UnsafeMutablePointer<A>.trylock()()
{
  return os_unfair_recursive_lock_trylock();
}

void UnfairLockedBox.init(contents:)()
{
  _DWORD *v0;

  v0 = (_DWORD *)sub_1AE4F66A0();
  *v0 = 0;
  sub_1AE503A60((uint64_t)v0);
  sub_1AE4F6624();
}

uint64_t UnfairLockedBox.__deallocating_deinit()
{
  return sub_1AE7C67A4((void (*)(void))UnfairLockedBox.deinit);
}

void sub_1AE81B76C(uint64_t a1)
{
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 96)));
}

void UnfairLockedBox.replace(contents:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;

  v3 = *v1;
  v4 = *(os_unfair_lock_s **)((char *)v1 + *(_QWORD *)(*v1 + 96));
  os_unfair_lock_lock(v4);
  v5 = (uint64_t)v1 + *(_QWORD *)(*v1 + 88);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 24))(v5, a1);
  swift_endAccess();
  os_unfair_lock_unlock(v4);
}

void UnfairLockedBox.replace(_:)(void (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + *(_QWORD *)(v8 + 96)));
  a1();
  if (!v2)
  {
    v9 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 88);
    sub_1AE4FB9BC();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v9, v7, v4);
    swift_endAccess();
  }
  sub_1AE81B76C(v1);
}

void UnfairRecursiveLockedBox.__allocating_init(contents:)(uint64_t a1)
{
  sub_1AE81B8F0(a1, (void (*)(uint64_t))UnfairRecursiveLockedBox.init(contents:));
}

void sub_1AE81B8F0(uint64_t a1, void (*a2)(uint64_t))
{
  swift_allocObject();
  a2(a1);
  sub_1AE4F6624();
}

void UnfairRecursiveLockedBox.init(contents:)()
{
  _QWORD *v0;

  v0 = (_QWORD *)sub_1AE4F66A0();
  *v0 = 0;
  sub_1AE503A60((uint64_t)v0);
  sub_1AE4F6624();
}

uint64_t *_s20IntelligencePlatform15UnfairLockedBoxCfd_0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  MEMORY[0x1AF454C78](*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 96)), -1, -1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 88));
  return v0;
}

uint64_t UnfairRecursiveLockedBox.__deallocating_deinit()
{
  return sub_1AE7C67A4((void (*)(void))UnfairRecursiveLockedBox.deinit);
}

uint64_t UnfairRecursiveLockedBox.access<A>(_:)(void (*a1)(uint64_t))
{
  uint64_t v1;

  os_unfair_recursive_lock_lock_with_options();
  a1(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88));
  return sub_1AE81BA48();
}

uint64_t sub_1AE81BA48()
{
  return os_unfair_recursive_lock_unlock();
}

uint64_t type metadata accessor for UnfairLockedBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnfairLockedBox);
}

uint64_t method lookup function for UnfairLockedBox()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UnfairLockedBox.__allocating_init(contents:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1AE81BA7C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for UnfairRecursiveLockedBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnfairRecursiveLockedBox);
}

uint64_t method lookup function for UnfairRecursiveLockedBox()
{
  return swift_lookUpClassMethod();
}

void sub_1AE81BB18()
{
  os_unfair_lock_s *v0;

  os_unfair_lock_unlock(v0);
}

uint64_t sub_1AE81BB20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  sub_1AE4F9094();
  result = *(_QWORD *)(a2 + 32);
  if (result)
  {
    result = (uint64_t)sub_1AE56AB3C(result);
    if (v8)
    {
      v9 = v7;
      swift_bridgeObjectRelease();
      sub_1AE4F9094();
      v10 = *(_QWORD *)(v9 + 24);
      if (v10)
      {
        v11 = *(_QWORD *)(v10 + 16);
        v12 = *(_QWORD *)(v10 + 24);
        v13 = qword_1ED30FB60;
        swift_retain();
        swift_bridgeObjectRetain();
        if (v13 != -1)
          swift_once();
        v14 = qword_1ED3274B8;
        if (*(_QWORD *)(qword_1ED3274B8 + 16))
        {
          swift_bridgeObjectRetain();
          v15 = sub_1AE536EDC(v11, v12);
          if ((v16 & 1) != 0)
          {
            sub_1AE57C238(*(_QWORD *)(v14 + 56) + 40 * v15, (uint64_t)&v19);
          }
          else
          {
            v21 = 0;
            v19 = 0u;
            v20 = 0u;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v21 = 0;
          v19 = 0u;
          v20 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v20 + 1))
        {
          sub_1AE50AF58(&v19, (uint64_t)v22);
          v17 = v23;
          v18 = v24;
          sub_1AE4F9858(v22, v23);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 32))(a1, v10, v17, v18);
          sub_1AE507978();
          sub_1AE4F6A6C();
          return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v22);
        }
        sub_1AE507978();
        sub_1AE4F6A6C();
        result = sub_1AE582F80((uint64_t)&v19);
      }
      else
      {
        result = sub_1AE507978();
      }
    }
  }
  *a3 = *(_BYTE *)(a2 + 64);
  return result;
}

uint64_t sub_1AE81BCD8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Context;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  uint64_t *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  _OWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  _OWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _BOOL4 v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  int v230;
  uint64_t v231;
  int v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  int *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  _UNKNOWN **v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unsigned int v269;
  unint64_t v270;
  uint64_t *v271;
  uint64_t v272;
  uint64_t v273;
  _QWORD v274[11];
  char v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  unint64_t v287;
  uint64_t v288;
  char v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  _UNKNOWN **v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t v301;
  uint64_t v302;
  unsigned __int8 v303;
  uint64_t v304;

  v9 = v7;
  v270 = a7;
  v271 = a1;
  v254 = a3;
  v255 = a4;
  v253 = a2;
  Context = type metadata accessor for QueryContext();
  MEMORY[0x1E0C80A78](Context);
  v13 = (char *)&v215 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1AE50767C();
  v15 = sub_1AE4F9148();
  v16 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v15 + 16) = sub_1AE925C98();
  *(_QWORD *)(v15 + 24) = v16;
  v293 = type metadata accessor for LogicalOperator();
  v294 = &off_1E5DB6C60;
  v290 = v9;
  swift_retain();
  sub_1AE82DF78(&v290);
  v18 = v17;
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v290);
  if (v8)
  {
    swift_willThrow();
    return swift_release();
  }
  v258 = (uint64_t *)v13;
  v234 = v9;
  v235 = a5;
  v217 = v14;
  v20 = *(_QWORD *)(v18 + 16);
  if (!v20)
  {
    sub_1AE4F66E8();
    v165 = v271;
    result = swift_release();
    v165[1] = v15;
    return result;
  }
  v268 = 0;
  v243 = (int *)Context;
  v244 = 0;
  v222 = v15;
  v21 = 0;
  v256 = 0;
  v257 = 0;
  v247 = 0;
  v248 = 0;
  v249 = 0;
  v250 = 0;
  v251 = 0;
  v252 = 0;
  v22 = 0;
  v245 = 0;
  v246 = 0;
  v269 = 0;
  v23 = (uint64_t *)(v235 + 32);
  v218 = v18;
  v219 = v270 + 1;
  v24 = __OFADD__(v270, 1);
  v220 = v24;
  v216 = v274;
  v270 = 0x1FFFFFFFELL;
  v221 = (uint64_t *)(v235 + 32);
  while (1)
  {
    v26 = *(_QWORD *)(v18 + v21 + 32);
    v25 = *(_QWORD *)(v18 + v21 + 40);
    sub_1AE507C54();
    v27 = *v23;
    if (!*v23)
    {
      sub_1AE4F6730();
LABEL_17:
      swift_endAccess();
      sub_1AE4F81B8();
      goto LABEL_18;
    }
    v28 = *(_QWORD *)(v27 + 16);
    sub_1AE4F6730();
    if (!v28)
      goto LABEL_17;
    sub_1AE4F6730();
    v29 = sub_1AE536EDC(v26, v25);
    if ((v30 & 1) == 0)
    {
      sub_1AE4F81B8();
      goto LABEL_17;
    }
    v31 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v29);
    swift_endAccess();
    swift_retain();
    sub_1AE4F6824();
    sub_1AE4F9094();
    v304 = *(_QWORD *)(v31 + 24);
    if (v304)
    {
      if ((sub_1AE881FF4() & 1) == 0)
        break;
    }
    swift_release();
LABEL_18:
    v21 += 16;
    if (!--v20)
    {
      v242 = v22;
      sub_1AE4F66E8();
      v154 = v222;
      goto LABEL_48;
    }
  }
  v223 = v31;
  v32 = v271;
  v33 = v271[1];
  v267 = *v271;
  v242 = v22;
  if (v33)
  {
    sub_1AE4F66E0();
    swift_retain();
    v231 = v33;
    v233 = v33;
  }
  else
  {
    v34 = sub_1AE4F9148();
    sub_1AE4F66E0();
    swift_retain();
    v35 = MEMORY[0x1E0DEE9D8];
    v36 = sub_1AE925C98();
    v231 = 0;
    *(_QWORD *)(v34 + 16) = v36;
    *(_QWORD *)(v34 + 24) = v35;
    v233 = v34;
  }
  v236 = v32[2];
  v37 = v243;
  v38 = v243[7];
  v39 = (char *)v32 + v38;
  v40 = v32;
  v41 = v258;
  v42 = (char *)v258 + v38;
  v43 = sub_1AE9248DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v42, v39, v43);
  v44 = v37[9];
  v45 = (uint64_t)v40 + v37[8];
  v46 = *(_QWORD *)v45;
  v238 = *(_QWORD *)(v45 + 8);
  v239 = v46;
  v47 = *(_QWORD *)(v45 + 24);
  v240 = *(_QWORD *)(v45 + 16);
  v241 = v47;
  v48 = *(_QWORD *)(v45 + 40);
  v259 = *(_QWORD *)(v45 + 32);
  v260 = v48;
  v49 = *(_QWORD *)(v45 + 56);
  v50 = *(_QWORD *)(v45 + 64);
  v224 = *(_QWORD *)(v45 + 48);
  v225 = v49;
  v52 = *(_QWORD *)(v45 + 72);
  v51 = *(_QWORD *)(v45 + 80);
  v226 = v50;
  v227 = v52;
  v262 = v51;
  v53 = *(_QWORD *)(v45 + 96);
  v228 = *(_QWORD *)(v45 + 88);
  v54 = v228;
  v229 = v53;
  v265 = *(uint64_t *)((char *)v40 + v44);
  v55 = v37[14];
  v230 = *((unsigned __int8 *)v40 + v37[13]);
  v56 = v40;
  LOBYTE(v40) = *(_BYTE *)(v45 + 104);
  v57 = v37[11];
  v237 = *(uint64_t *)((char *)v56 + v37[10]);
  v263 = *(uint64_t *)((char *)v56 + v57);
  v264 = *(uint64_t *)((char *)v56 + v57 + 8);
  v266 = *(uint64_t *)((char *)v56 + v57 + 24);
  v232 = *((unsigned __int8 *)v56 + v55);
  LODWORD(v261) = *((unsigned __int8 *)v56 + v57 + 16);
  swift_retain();
  v214 = v54;
  v211 = v52;
  v58 = v224;
  v59 = v225;
  sub_1AE582F40(v239, v238, v240, v241, v259, v260, v224, v225, v50, v211, v262, v214, v53, v40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE526540(v263, v264, v261);
  swift_bridgeObjectRetain();
  v60 = MEMORY[0x1E0DEE9D8];
  result = sub_1AE4F6824();
  v61 = (char *)v41 + v37[8];
  v62 = v37[10];
  *v41 = v267;
  v63 = v37[12];
  v64 = v37[13];
  v65 = v37[14];
  v66 = v236;
  v41[1] = v233;
  v41[2] = v66;
  v67 = v238;
  *(_QWORD *)v61 = v239;
  *((_QWORD *)v61 + 1) = v67;
  v68 = v241;
  *((_QWORD *)v61 + 2) = v240;
  *((_QWORD *)v61 + 3) = v68;
  v69 = v260;
  *((_QWORD *)v61 + 4) = v259;
  *((_QWORD *)v61 + 5) = v69;
  *((_QWORD *)v61 + 6) = v58;
  *((_QWORD *)v61 + 7) = v59;
  v70 = v227;
  *((_QWORD *)v61 + 8) = v226;
  *((_QWORD *)v61 + 9) = v70;
  v71 = v228;
  *((_QWORD *)v61 + 10) = v262;
  *((_QWORD *)v61 + 11) = v71;
  *((_QWORD *)v61 + 12) = v229;
  v61[104] = (char)v40;
  *(uint64_t *)((char *)v41 + v37[9]) = v265;
  *((_BYTE *)v41 + v64) = v230;
  v72 = (uint64_t *)((char *)v41 + v63);
  *v72 = 0;
  v72[1] = v60;
  v72[2] = v60;
  *(uint64_t *)((char *)v41 + v62) = v237;
  v73 = (char *)v41 + v37[11];
  v74 = v264;
  *(_QWORD *)v73 = v263;
  *((_QWORD *)v73 + 1) = v74;
  v73[16] = v261;
  *((_QWORD *)v73 + 3) = v266;
  *((_BYTE *)v41 + v65) = v232;
  if (v220)
  {
    __break(1u);
LABEL_60:
    __break(1u);
    return result;
  }
  v75 = v268;
  v76 = sub_1AE82B5A8((uint64_t)&v290, (uint64_t)v41, (uint64_t)&v304, v235, v219, v253, v254, v255);
  if (v75)
  {
    v166 = sub_1AE4FBF94();
    sub_1AE4FF1F8(v166, v167, v168, v169, v170, v171, v172, v173, v242, v246, v245, v270, v244, v269);
    sub_1AE4F6DB8();
    sub_1AE50AE04();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v77 = v76;
  v238 = v291;
  v239 = v290;
  v262 = v292;
  v263 = v293;
  v266 = v295;
  v267 = (uint64_t)v294;
  v264 = v297;
  v265 = v296;
  v260 = v299;
  v261 = v298;
  v259 = v300;
  v78 = v301;
  v240 = v302;
  v25 = v303;
  result = (*(uint64_t (**)(unint64_t, uint64_t *))(*(_QWORD *)v234 + 240))(v76, &v290);
  if ((result & 1) == 0)
  {
    v174 = sub_1AE5005F8(result, v79, v80, v81, v82, v83, v84, v85, v210, v212, v213, v78, v240, v25);
    sub_1AE4FF1F8(v174, v175, v176, v177, v178, v179, v180, v181, v242, v246, v245, v270, v244, v269);
    sub_1AE81D974();
    v182 = v222;
    sub_1AE85D50C();
    sub_1AE4F6A6C();
    sub_1AE4FBF94();
    sub_1AE50AE04();
    sub_1AE508C10();
    result = sub_1AE81D998();
    *(_QWORD *)(v25 + 8) = v182;
    return result;
  }
  v86 = (uint64_t *)((char *)v271 + v243[12]);
  v87 = *v86 + *v72;
  if (__OFADD__(*v86, *v72))
    goto LABEL_60;
  v241 = v77;
  v268 = 0;
  *v86 = v87;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1AE60EE2C();
  swift_bridgeObjectRetain();
  sub_1AE60F498();
  sub_1AE4F66E8();
  v88 = sub_1AE4F6728();
  v96 = (uint64_t)v258;
  v97 = v258[2];
  if (v97 <= v236)
    v97 = v236;
  v271[2] = v97;
  if (!v304 || (*(_BYTE *)(v304 + 81) & 1) == 0)
  {
    v98 = v78;
    v18 = v218;
    if (v78 >> 1 != 0xFFFFFFFF || (v25 & 0x1E) != 0)
    {
      v120 = v242;
      v122 = v244;
      v121 = v245;
      if (v21)
      {
        v276 = v256;
        v277 = v247;
        v278 = v248;
        v279 = v249;
        v280 = (uint64_t)v250;
        v281 = v257;
        v282 = v251;
        v283 = v252;
        v284 = v242;
        v285 = v246;
        v286 = v245;
        v287 = v270;
        v288 = v244;
        v289 = v269;
        v272 = v239;
        v273 = v238;
        v274[0] = v262;
        v274[1] = v263;
        v274[2] = v267;
        v274[3] = v266;
        v274[4] = v265;
        v274[5] = v264;
        v274[6] = v261;
        v274[7] = v260;
        v274[8] = v259;
        v274[9] = v78;
        v274[10] = v240;
        v275 = v25;
        v123 = *(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t *))(*(_QWORD *)v234 + 232);
        LODWORD(v237) = v25;
        v124 = v240;
        v125 = v268;
        v126 = v98;
        v123(&v290, &v276, &v272);
        v268 = v125;
        if (v125)
        {
          sub_1AE4F94FC();
          sub_1AE4F6DB8();
          v183 = sub_1AE4FBF94();
          sub_1AE4FF1F8(v183, v184, v185, v186, v187, v188, v189, v190, v242, v246, v121, v270, v122, v269);
          sub_1AE5058E8();
          v191 = sub_1AE4F66E8();
          sub_1AE5005F8(v191, v192, v193, v194, v195, v196, v197, v198, v207, v208, v209, v126, v124, v237);
          return sub_1AE508C10();
        }
        sub_1AE4F94FC();
        v127 = sub_1AE4FBF94();
        sub_1AE4FF1F8(v127, v128, v129, v130, v131, v132, v133, v134, v242, v246, v121, v270, v122, v269);
        v135 = sub_1AE5058E8();
        sub_1AE5005F8(v135, v136, v137, v138, v139, v140, v141, v142, v207, v208, v209, v126, v124, v237);
        v118 = v290;
        v119 = v291;
        v262 = v292;
        v263 = v293;
        v266 = v295;
        v267 = (uint64_t)v294;
        v264 = v297;
        v265 = v296;
        v260 = v299;
        v261 = v298;
        v259 = v300;
        v99 = v302;
        v237 = v301;
        v25 = v303;
        goto LABEL_44;
      }
      v237 = v78;
      v99 = v240;
      v144 = sub_1AE581398((uint64_t)v258);
      sub_1AE4FF1F8(v144, v145, v146, v147, v148, v149, v150, v151, v120, v246, v121, v270, v122, v269);
      sub_1AE4F94FC();
      sub_1AE4FBF94();
      v23 = v221;
      v119 = v238;
      v118 = v239;
    }
    else
    {
      v22 = v242;
      v99 = v244;
      if (v21)
      {
        v100 = v256;
        v101 = v257;
        v23 = v221;
        if (v270 >> 1 != 0xFFFFFFFF || (v269 & 0x1E) != 0)
        {
          if ((v269 & 0x10) != 0)
          {
            swift_bridgeObjectRetain();
            v152 = v247;
            v153 = v248;
            v25 = v249;
            sub_1AE526540(v247, v248, v249);
            sub_1AE4F94FC();
            sub_1AE4FBF94();
            sub_1AE582FC0(v256, v152, v153, v25, (uint64_t)v250, v257, v251, v252, v22, v246, v245, v270, v244, v269);
            sub_1AE5058E8();
            swift_release();
            v23 = v221;
            goto LABEL_18;
          }
          swift_beginAccess();
          v102 = swift_bridgeObjectRetain();
          v103 = sub_1AE898358(v102);
          v276 = v100;
          v277 = v247;
          v278 = v248;
          v279 = v249;
          v280 = (uint64_t)v250;
          v281 = v101;
          v282 = v251;
          v283 = v252;
          v284 = v22;
          v285 = v246;
          v104 = v244;
          v286 = v245;
          v105 = v270;
          v287 = v270;
          v288 = v244;
          v289 = v269;
          v272 = 0;
          v273 = v103;
          v106 = v216;
          *v216 = 0u;
          v106[1] = 0u;
          v106[2] = 0u;
          v106[3] = 0u;
          v106[4] = 0u;
          *((_QWORD *)v106 + 10) = 0;
          v275 = 32;
          v107 = v268;
          (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t *))(*(_QWORD *)v234 + 232))(&v290, &v276, &v272);
          v268 = v107;
          if (v107)
          {
            swift_bridgeObjectRelease_n();
            sub_1AE4F81B8();
            sub_1AE4F94FC();
            sub_1AE4F6DB8();
            v199 = sub_1AE4FBF94();
            sub_1AE4FF1F8(v199, v200, v201, v202, v203, v204, v205, v206, v22, v246, v245, v105, v104, v269);
            sub_1AE5058E8();
            sub_1AE4F66E8();
            return sub_1AE508C10();
          }
          swift_bridgeObjectRelease_n();
          v108 = sub_1AE4F81B8();
          sub_1AE4FF1F8(v108, v109, v110, v111, v112, v113, v114, v115, v22, v246, v245, v105, v104, v269);
          v247 = v291;
          v248 = v292;
          v249 = v293;
          v250 = v294;
          v256 = v290;
          v257 = v295;
          v22 = v298;
          v251 = v296;
          v252 = v297;
          v245 = v300;
          v246 = v299;
          v270 = v301;
          v244 = v302;
          v269 = v303;
          v23 = v221;
        }
        v116 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v234 + 224);
        v117 = swift_retain();
        v116(v117, v241);
        swift_release();
        sub_1AE4FBF94();
        sub_1AE4F6700();
        sub_1AE50AE04();
        v262 = v248;
        v263 = v249;
        v118 = v256;
        v266 = v257;
        v267 = (uint64_t)v250;
        v264 = v252;
        v265 = v251;
        v261 = v22;
        v119 = v247;
        v99 = v244;
        v259 = v245;
        v260 = v246;
        v237 = v270;
        v25 = v269;
        goto LABEL_46;
      }
      v143 = v245;
      sub_1AE581398(v96);
      sub_1AE4FBF94();
      sub_1AE4F6DB8();
      v262 = v248;
      v263 = v249;
      v266 = v257;
      v267 = (uint64_t)v250;
      v264 = v252;
      v265 = v251;
      v261 = v22;
      v119 = v247;
      v259 = v143;
      v260 = v246;
      v118 = v256;
      v237 = v270;
      v25 = v269;
      v222 = v241;
LABEL_44:
      v23 = v221;
    }
LABEL_46:
    sub_1AE508C10();
    v247 = v119;
    v248 = v262;
    v249 = v263;
    v250 = (_UNKNOWN **)v267;
    v256 = v118;
    v257 = v266;
    v251 = v265;
    v252 = v264;
    v22 = v261;
    v245 = v259;
    v246 = v260;
    v270 = v237;
    v244 = v99;
    v269 = v25;
    goto LABEL_18;
  }
  sub_1AE5005F8(v88, v89, v90, v91, v92, v93, v94, v95, v210, v212, v213, v78, v240, v25);
  sub_1AE81D974();
  v154 = sub_1AE4F9148();
  v25 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v154 + 16) = sub_1AE925C98();
  *(_QWORD *)(v154 + 24) = v25;
  sub_1AE4F94FC();
  sub_1AE4F6DB8();
  sub_1AE4FBF94();
  sub_1AE581398(v96);
  sub_1AE508C10();
LABEL_48:
  result = sub_1AE81D998();
  *(_QWORD *)(v25 + 8) = v154;
  v156 = v251;
  v155 = v252;
  v158 = v249;
  v157 = (uint64_t)v250;
  v160 = v247;
  v159 = v248;
  v161 = v246;
  if (v270 >> 1 != 0xFFFFFFFF || (v269 & 0x1E) != 0)
  {
    v162 = (char *)v271 + v243[8];
    result = sub_1AE582FC0(*(_QWORD *)v162, *((_QWORD *)v162 + 1), *((_QWORD *)v162 + 2), *((_QWORD *)v162 + 3), *((_QWORD *)v162 + 4), *((_QWORD *)v162 + 5), *((_QWORD *)v162 + 6), *((_QWORD *)v162 + 7), *((_QWORD *)v162 + 8), *((_QWORD *)v162 + 9), *((_QWORD *)v162 + 10), *((_QWORD *)v162 + 11), *((_QWORD *)v162 + 12), v162[104]);
    *(_QWORD *)v162 = v256;
    *((_QWORD *)v162 + 1) = v160;
    *((_QWORD *)v162 + 2) = v159;
    *((_QWORD *)v162 + 3) = v158;
    v163 = v257;
    *((_QWORD *)v162 + 4) = v157;
    *((_QWORD *)v162 + 5) = v163;
    *((_QWORD *)v162 + 6) = v156;
    *((_QWORD *)v162 + 7) = v155;
    *((_QWORD *)v162 + 8) = v242;
    *((_QWORD *)v162 + 9) = v161;
    v164 = v270;
    *((_QWORD *)v162 + 10) = v245;
    *((_QWORD *)v162 + 11) = v164;
    *((_QWORD *)v162 + 12) = v244;
    v162[104] = v269;
  }
  return result;
}

uint64_t sub_1AE81CB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t result;
  int64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned __int8 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *(*v193)(uint64_t *__return_ptr, _QWORD *, uint64_t *);
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unsigned __int8 v213;
  unsigned __int8 v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unsigned __int8 v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  void (*v262)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  _QWORD v291[3];
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  unsigned __int8 v302;
  uint64_t v303;
  unint64_t v304;
  uint64_t v305;
  uint64_t v306;
  void (*v307)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  unint64_t v314;
  uint64_t v315;
  unsigned __int8 v316;
  uint64_t v317;

  v13 = a2 + *(int *)(type metadata accessor for QueryContext() + 32);
  v14 = *(_QWORD *)(v13 + 88);
  v15 = *(_BYTE *)(v13 + 104);
  v16 = v14 >> 1 == 0xFFFFFFFF && (v15 & 0x1E) == 0;
  v317 = v6;
  if (!v16)
  {
    v17 = *(_QWORD *)(v13 + 96);
    v19 = *(_QWORD *)(v13 + 72);
    v18 = *(_QWORD *)(v13 + 80);
    v20 = *(_QWORD *)(v13 + 56);
    v21 = *(_QWORD *)(v13 + 64);
    v22 = *(_QWORD *)(v13 + 40);
    v23 = *(_QWORD *)(v13 + 48);
    v24 = *(_QWORD *)(v13 + 24);
    v25 = *(_QWORD *)(v13 + 32);
    v26 = *(_QWORD *)(v13 + 8);
    v27 = *(_QWORD *)(v13 + 16);
    v28 = *(_QWORD *)v13;
    *(_QWORD *)a1 = *(_QWORD *)v13;
    *(_QWORD *)(a1 + 8) = v26;
    *(_QWORD *)(a1 + 16) = v27;
    *(_QWORD *)(a1 + 24) = v24;
    *(_QWORD *)(a1 + 32) = v25;
    *(_QWORD *)(a1 + 40) = v22;
    *(_QWORD *)(a1 + 48) = v23;
    *(_QWORD *)(a1 + 56) = v20;
    *(_QWORD *)(a1 + 64) = v21;
    *(_QWORD *)(a1 + 72) = v19;
    *(_QWORD *)(a1 + 80) = v18;
    *(_QWORD *)(a1 + 88) = v14;
    *(_QWORD *)(a1 + 96) = v17;
    *(_BYTE *)(a1 + 104) = v15;
    sub_1AE5263DC(v28, v26, v27, v24, v25, v22, v23, v20, v21, v19, v18, v14, v17, v15);
LABEL_6:
    v29 = 0;
    return v29 & 1;
  }
  v222 = a5;
  v179 = a1;
  sub_1AE4F9094();
  v215 = a2;
  v218 = a3;
  v273 = a6;
  if (*(_QWORD *)(a6 + 32))
  {
    v30 = *(_QWORD *)(a6 + 32);
  }
  else
  {
    type metadata accessor for KnosisQueryParam();
    v30 = sub_1AE925C98();
  }
  v31 = v30 + 64;
  v32 = 1 << *(_BYTE *)(v30 + 32);
  v33 = -1;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  v34 = v33 & *(_QWORD *)(v30 + 64);
  v35 = (unint64_t)(v32 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v37 = 0;
  v275 = MEMORY[0x1E0DEE9D8];
  v202 = v30 + 64;
  v205 = a4;
  v212 = v30;
  v199 = v35;
  while (v34)
  {
    v38 = __clz(__rbit64(v34));
    v34 &= v34 - 1;
    v39 = v38 | (v37 << 6);
LABEL_26:
    v43 = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v39);
    result = sub_1AE4F9094();
    v44 = *(_QWORD *)(v43 + 24);
    if (v44)
    {
      v277 = *(_QWORD *)(v43 + 24);
      swift_retain();
      swift_retain();
      v45 = v317;
      sub_1AE82EC08((uint64_t)&v277, a4, (uint64_t)v291);
      v317 = v45;
      if (v45)
      {
        sub_1AE81D96C();
        sub_1AE4F6700();
        sub_1AE4FB730();
        sub_1AE4FDCE8();
        return v29 & 1;
      }
      v46 = v293;
      v267 = v292;
      sub_1AE4F9858(v291, v292);
      v262 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 64);
      swift_retain();
      v146 = v46;
      v47 = v317;
      v262(&v303, v215, v218, a4, v222, v44, v273, v267);
      v317 = v47;
      if (v47)
      {
        sub_1AE81D96C();
        sub_1AE81D980();
        sub_1AE4FDCE8();
        v126 = swift_release_n();
        goto LABEL_59;
      }
      sub_1AE4FB730();
      v48 = v304;
      v49 = v305;
      v50 = v314;
      v51 = v316;
      v234 = v303;
      v238 = v312;
      v262 = v307;
      v267 = v306;
      v252 = v309;
      v257 = v308;
      v242 = v311;
      v247 = v310;
      v226 = v315;
      v230 = v313;
      if (((*(uint64_t (**)(_QWORD, uint64_t *))(*(_QWORD *)v272 + 240))(0, &v303) & 1) == 0)
      {
        sub_1AE582FC0(v234, v48, v49, v267, (uint64_t)v262, v257, v252, v247, v242, v238, v230, v50, v226, v51);
        sub_1AE81D96C();
        sub_1AE81D980();
        sub_1AE4FB730();
        v134 = sub_1AE4FDCE8();
        *(_QWORD *)(v179 + 80) = 0;
        *(_OWORD *)(v179 + 48) = 0u;
        *(_OWORD *)(v179 + 64) = 0u;
        *(_OWORD *)(v179 + 16) = 0u;
        *(_OWORD *)(v179 + 32) = 0u;
        *(_OWORD *)v179 = 0u;
        *(_OWORD *)(v179 + 88) = xmmword_1AE934380;
        *(_BYTE *)(v179 + 104) = 0;
        sub_1AE81D990(v134, v135, v136, v137, v138, v139, v140, v141, v150, v155, v160, v165, v170, v175, v176, v179, v182, v187, v192,
          v196,
          v199,
          v202,
          v205,
          v208,
          v212,
          v215,
          v218,
          v222,
          v226,
          v230,
          v234,
          v238,
          v242,
          v247,
          v252,
          v257,
          (uint64_t)v262,
          v267,
          v272,
          v273,
          v275,
          v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291[0]);
        goto LABEL_6;
      }
      if (v50 >> 1 == 0xFFFFFFFF && (v51 & 0x1E) == 0)
      {
        sub_1AE81D96C();
        v303 = 0;
        v304 = 0xE000000000000000;
        sub_1AE92691C();
        swift_bridgeObjectRelease();
        v303 = 0x6F6E20646C696863;
        v304 = 0xEB00000000206564;
        sub_1AE4FB75C();
        sub_1AE507008();
        swift_bridgeObjectRelease();
        sub_1AE925F74();
        sub_1AE4FB75C();
        sub_1AE507008();
        swift_bridgeObjectRelease();
        sub_1AE925F74();
        v142 = v303;
        v143 = v304;
        sub_1AE5322E0();
        v144 = swift_allocError();
        *(_QWORD *)v145 = v142;
        *(_QWORD *)(v145 + 8) = v143;
        *(_BYTE *)(v145 + 16) = 1;
        v317 = v144;
        swift_willThrow();
        sub_1AE4FDCE8();
        sub_1AE81D980();
        v126 = sub_1AE4FB730();
LABEL_59:
        sub_1AE81D990(v126, v127, v128, v129, v130, v131, v132, v133, v146, v151, v156, v161, v166, v171, v176, v179, v182, v187, v192,
          v196,
          v199,
          v202,
          v205,
          v208,
          v212,
          v215,
          v218,
          v222,
          v226,
          v230,
          v234,
          v238,
          v242,
          v247,
          v252,
          v257,
          (uint64_t)v262,
          v267,
          v272,
          v273,
          v275,
          v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291[0]);
        return v29 & 1;
      }
      v209 = v49;
      v52 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v53 = v275;
      }
      else
      {
        sub_1AE51A284();
        v53 = v65;
      }
      v35 = v199;
      v54 = *(_QWORD *)(v53 + 16);
      v55 = v54 + 1;
      if (v54 >= *(_QWORD *)(v53 + 24) >> 1)
      {
        sub_1AE51A284();
        v55 = v54 + 1;
        v53 = v66;
      }
      *(_QWORD *)(v53 + 16) = v55;
      v276 = v53;
      v56 = v53 + 112 * v54;
      *(_QWORD *)(v56 + 32) = v234;
      *(_QWORD *)(v56 + 40) = v52;
      *(_QWORD *)(v56 + 48) = v209;
      *(_QWORD *)(v56 + 56) = v267;
      *(_QWORD *)(v56 + 64) = v262;
      *(_QWORD *)(v56 + 72) = v257;
      *(_QWORD *)(v56 + 80) = v252;
      *(_QWORD *)(v56 + 88) = v247;
      *(_QWORD *)(v56 + 96) = v242;
      *(_QWORD *)(v56 + 104) = v238;
      *(_QWORD *)(v56 + 112) = v230;
      *(_QWORD *)(v56 + 120) = v50;
      *(_QWORD *)(v56 + 128) = v226;
      *(_BYTE *)(v56 + 136) = v51;
      sub_1AE4FB730();
      v57 = sub_1AE4FDCE8();
      result = sub_1AE81D990(v57, v58, v59, v60, v61, v62, v63, v64, v146, v151, v156, v161, v166, v171, v176, v179, v182, v187, v192,
                 v196,
                 v199,
                 v202,
                 v205,
                 v209,
                 v212,
                 v215,
                 v218,
                 v222,
                 v226,
                 v230,
                 v234,
                 v238,
                 v242,
                 v247,
                 v252,
                 v257,
                 (uint64_t)v262,
                 v267,
                 v272,
                 v273,
                 v276,
                 v277,
                 v278,
                 v279,
                 v280,
                 v281,
                 v282,
                 v283,
                 v284,
                 v285,
                 v286,
                 v287,
                 v288,
                 v289,
                 v290,
                 v291[0]);
      v30 = v212;
      v31 = v202;
      a4 = v205;
    }
  }
  if (__OFADD__(v37++, 1))
  {
    __break(1u);
    goto LABEL_62;
  }
  if (v37 >= v35)
    goto LABEL_42;
  v41 = *(_QWORD *)(v31 + 8 * v37);
  if (v41)
  {
LABEL_25:
    v34 = (v41 - 1) & v41;
    v39 = __clz(__rbit64(v41)) + (v37 << 6);
    goto LABEL_26;
  }
  v42 = v37 + 1;
  if (v37 + 1 >= v35)
    goto LABEL_42;
  v41 = *(_QWORD *)(v31 + 8 * v42);
  if (v41)
    goto LABEL_24;
  v42 = v37 + 2;
  if (v37 + 2 >= v35)
    goto LABEL_42;
  v41 = *(_QWORD *)(v31 + 8 * v42);
  if (v41)
    goto LABEL_24;
  v42 = v37 + 3;
  if (v37 + 3 >= v35)
  {
LABEL_42:
    sub_1AE4F6700();
    if (((1 << *(_BYTE *)(v273 + 64)) & 0x1FA) == 0 || (v67 = *(_QWORD *)(v275 + 16)) == 0)
    {
      sub_1AE4F81B8();
      v29 = 0;
      *(_QWORD *)(v179 + 80) = 0;
      *(_OWORD *)(v179 + 48) = 0u;
      *(_OWORD *)(v179 + 64) = 0u;
      *(_OWORD *)(v179 + 16) = 0u;
      *(_OWORD *)(v179 + 32) = 0u;
      *(_OWORD *)v179 = 0u;
      *(_OWORD *)(v179 + 88) = xmmword_1AE934380;
      *(_BYTE *)(v179 + 104) = 0;
      return v29 & 1;
    }
    v68 = *(_QWORD *)(v275 + 32);
    v69 = *(_QWORD *)(v275 + 40);
    v70 = *(_QWORD *)(v275 + 56);
    v71 = *(_QWORD *)(v275 + 64);
    v72 = *(_QWORD *)(v275 + 72);
    v73 = *(_QWORD *)(v275 + 80);
    v74 = *(_QWORD *)(v275 + 88);
    v258 = *(_BYTE *)(v275 + 136);
    v248 = *(_QWORD *)(v275 + 128);
    v253 = *(_QWORD *)(v275 + 120);
    v263 = *(_QWORD *)(v275 + 112);
    v268 = *(_QWORD *)(v275 + 104);
    v243 = *(_QWORD *)(v275 + 96);
    v274 = *(_QWORD *)(v275 + 48);
    sub_1AE5263DC(v68, v69, v274, v70, v71, v72, v73, v74, v243, v268, v263, v253, v248, v258);
    if (v67 != 1)
    {
      v76 = 0;
      v77 = v275;
      v78 = v274;
      v79 = v243;
      v80 = v248;
      v82 = v263;
      v81 = v268;
      v83 = v253;
      v84 = v258;
      while (1)
      {
        if (v76)
        {
          v183 = v76;
          v188 = v67;
          v85 = v77 + v76;
          v86 = *(_QWORD *)(v85 + 32);
          v87 = *(_QWORD *)(v85 + 40);
          v88 = *(_QWORD *)(v85 + 48);
          v89 = *(_QWORD *)(v85 + 56);
          v90 = *(_QWORD *)(v85 + 64);
          v91 = *(_QWORD *)(v85 + 72);
          v92 = *(_QWORD *)(v85 + 80);
          v93 = *(_QWORD *)(v85 + 88);
          v94 = *(_QWORD *)(v85 + 96);
          v95 = *(_QWORD *)(v85 + 104);
          v96 = *(_QWORD *)(v85 + 112);
          v97 = *(_QWORD *)(v85 + 120);
          v98 = *(_QWORD *)(v85 + 128);
          v99 = *(unsigned __int8 *)(v85 + 136);
          v291[0] = v68;
          v291[1] = v69;
          v291[2] = v78;
          v292 = v70;
          v293 = v71;
          v294 = v72;
          v295 = v73;
          v296 = v74;
          v297 = v79;
          v298 = v81;
          v299 = v82;
          v300 = v83;
          v301 = v80;
          v302 = v84;
          v277 = v86;
          v278 = v87;
          v279 = v88;
          v280 = v89;
          v281 = v90;
          v282 = v91;
          v283 = v92;
          v284 = v93;
          v285 = v94;
          v286 = v95;
          v287 = v96;
          v288 = v97;
          v289 = v98;
          LOBYTE(v290) = v99;
          v193 = *(_QWORD *(**)(uint64_t *__return_ptr, _QWORD *, uint64_t *))(*(_QWORD *)v272 + 232);
          LODWORD(v212) = v99;
          v219 = v97;
          v223 = v96;
          v227 = v95;
          v231 = v94;
          v235 = v86;
          v239 = v87;
          v244 = v88;
          v249 = v89;
          v254 = v90;
          v259 = v91;
          v264 = v92;
          v269 = v93;
          sub_1AE5263DC(v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99);
          v100 = v317;
          v101 = v193(&v303, v291, &v277);
          v317 = v100;
          if (v100)
          {
            sub_1AE503A84((uint64_t)v101, v102, v103, v104, v105, v106, v107, v108, v147, v152, v157, v162, v167, v172, v176, v179, v183, v188, (uint64_t)v193,
              v72,
              v73,
              v74,
              v68,
              v69,
              v212,
              v98,
              v219,
              v223,
              v227,
              v231,
              v235,
              v239,
              v244,
              v249,
              v254,
              v259,
              v264,
              v269,
              v272,
              v78);
            v118 = sub_1AE81D96C();
            sub_1AE501088(v118, v119, v120, v121, v122, v123, v124, v125, v149, v154, v159, v164, v169, v174, v178, v181, v186, v191, v195,
              v198,
              v201,
              v204,
              v207,
              v211,
              v214,
              v217,
              v221,
              v225,
              v229,
              v233,
              v237,
              v241,
              v246,
              v251,
              v256,
              v261,
              v266,
              v271);
            return v29 & 1;
          }
          v109 = sub_1AE503A84((uint64_t)v101, v102, v103, v104, v105, v106, v107, v108, v147, v152, v157, v162, v167, v172, v176, v179, v183, v188, (uint64_t)v193,
                   v72,
                   v73,
                   v74,
                   v68,
                   v69,
                   v212,
                   v98,
                   v219,
                   v223,
                   v227,
                   v231,
                   v235,
                   v239,
                   v244,
                   v249,
                   v254,
                   v259,
                   v264,
                   v269,
                   v272,
                   v78);
          sub_1AE501088(v109, v110, v111, v112, v113, v114, v115, v116, v148, v153, v158, v163, v168, v173, v177, v180, v184, v189, v194,
            v197,
            v200,
            v203,
            v206,
            v210,
            v213,
            v216,
            v220,
            v224,
            v228,
            v232,
            v236,
            v240,
            v245,
            v250,
            v255,
            v260,
            v265,
            v270);
          v68 = v303;
          v69 = v304;
          v78 = v305;
          v70 = v306;
          v71 = (uint64_t)v307;
          v72 = v308;
          v73 = v309;
          v74 = v310;
          v79 = v311;
          v81 = v312;
          v82 = v313;
          v83 = v314;
          v80 = v315;
          v84 = v316;
          v77 = v275;
          v76 = v185;
          v67 = v190;
        }
        v76 += 112;
        if (!--v67)
        {
          v117 = v79;
          v263 = v82;
          v268 = v81;
          v248 = v80;
          v253 = v83;
          v258 = v84;
          swift_bridgeObjectRelease();
          v75 = v179;
          *(_QWORD *)v179 = v68;
          *(_QWORD *)(v179 + 8) = v69;
          *(_QWORD *)(v179 + 16) = v78;
          *(_QWORD *)(v179 + 24) = v70;
          *(_QWORD *)(v179 + 32) = v71;
          *(_QWORD *)(v179 + 40) = v72;
          *(_QWORD *)(v179 + 48) = v73;
          *(_QWORD *)(v179 + 56) = v74;
          *(_QWORD *)(v179 + 64) = v117;
          goto LABEL_53;
        }
      }
    }
    sub_1AE4F81B8();
    v75 = v179;
    *(_QWORD *)v179 = v68;
    *(_QWORD *)(v179 + 8) = v69;
    *(_QWORD *)(v179 + 16) = v274;
    *(_QWORD *)(v179 + 24) = v70;
    *(_QWORD *)(v179 + 32) = v71;
    *(_QWORD *)(v179 + 40) = v72;
    *(_QWORD *)(v179 + 48) = v73;
    *(_QWORD *)(v179 + 56) = v74;
    *(_QWORD *)(v179 + 64) = v243;
LABEL_53:
    *(_QWORD *)(v75 + 72) = v268;
    *(_QWORD *)(v75 + 80) = v263;
    *(_QWORD *)(v75 + 88) = v253;
    *(_QWORD *)(v75 + 96) = v248;
    v29 = 1;
    *(_BYTE *)(v75 + 104) = v258;
    return v29 & 1;
  }
  v41 = *(_QWORD *)(v31 + 8 * v42);
  if (v41)
  {
LABEL_24:
    v37 = v42;
    goto LABEL_25;
  }
  while (1)
  {
    v37 = v42 + 1;
    if (__OFADD__(v42, 1))
      break;
    if (v37 >= v35)
      goto LABEL_42;
    v41 = *(_QWORD *)(v31 + 8 * v37);
    ++v42;
    if (v41)
      goto LABEL_25;
  }
LABEL_62:
  __break(1u);
  return result;
}

uint64_t sub_1AE81D3C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  _UNKNOWN **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  _QWORD v83[3];
  uint64_t v84;
  _UNKNOWN **v85;
  uint64_t v86;

  v5 = v4;
  v8 = MEMORY[0x1E0DEE9D8];
  if ((*(_BYTE *)(a2 + 80) & 1) == 0)
  {
    if (*(_QWORD *)(a1 + 8))
    {
      sub_1AE4FB75C();
    }
    else
    {
      sub_1AE50767C();
      v28 = sub_1AE4F9148();
      sub_1AE4FB75C();
      *(_QWORD *)(v28 + 16) = sub_1AE81D988();
      *(_QWORD *)(v28 + 24) = v8;
    }
    swift_retain();
    return (uint64_t)a3;
  }
  v10 = sub_1AE50767C();
  v11 = sub_1AE4F9148();
  *(_QWORD *)(v11 + 16) = sub_1AE81D988();
  *(_QWORD *)(v11 + 24) = v8;
  v84 = type metadata accessor for LogicalOperator();
  v85 = &off_1E5DB6C60;
  v83[0] = v3;
  sub_1AE4F66E0();
  sub_1AE82DF78(v83);
  if (!v4)
  {
    v29 = v12;
    sub_1AE509244(v12, v13, v14, v15, v16, v17, v18, v19, v74, v10, v76, v77, v78, v79, v80);
    v30 = *(_QWORD *)(v29 + 16);
    v79 = v29;
    if (!v30)
    {
LABEL_38:
      sub_1AE506C5C();
      return sub_1AE85E1E0();
    }
    v31 = v29;
    v76 = a1;
    v77 = (uint64_t)a3;
    v78 = v3;
    v32 = (uint64_t *)(a2 + 32);
    a3 = (uint64_t *)(v31 + 40);
    while (1)
    {
      v34 = *(a3 - 1);
      v33 = *a3;
      sub_1AE507C54();
      v35 = *v32;
      if (!*v32)
        break;
      v36 = *(_QWORD *)(v35 + 16);
      sub_1AE4F67A4();
      if (!v36)
        goto LABEL_23;
      sub_1AE4F67A4();
      v37 = sub_1AE536EDC(v34, v33);
      if ((v38 & 1) == 0)
      {
        sub_1AE4F6728();
        goto LABEL_23;
      }
      v39 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v37);
      swift_endAccess();
      swift_retain();
      sub_1AE4F6824();
      sub_1AE4F9094();
      v40 = *(_QWORD *)(v39 + 24);
      if (!v40 || (*(_BYTE *)(v40 + 81) & 1) != 0)
      {
        sub_1AE4FDCE8();
      }
      else
      {
        v86 = v5;
        v41 = *(_QWORD *)(v40 + 16);
        v42 = *(_QWORD *)(v40 + 24);
        v43 = qword_1ED30FB60;
        swift_retain();
        sub_1AE4F67A4();
        if (v43 != -1)
          swift_once();
        v44 = qword_1ED3274B8;
        if (*(_QWORD *)(qword_1ED3274B8 + 16))
        {
          sub_1AE4F67A4();
          v45 = sub_1AE536EDC(v41, v42);
          if ((v46 & 1) != 0)
          {
            sub_1AE57C238(*(_QWORD *)(v44 + 56) + 40 * v45, (uint64_t)&v80);
          }
          else
          {
            v82 = 0;
            v80 = 0u;
            v81 = 0u;
          }
          sub_1AE4F6728();
        }
        else
        {
          v82 = 0;
          v80 = 0u;
          v81 = 0u;
        }
        sub_1AE4F6728();
        if (*((_QWORD *)&v81 + 1))
        {
          sub_1AE50AF58(&v80, (uint64_t)v83);
          *(_BYTE *)(v40 + 80) = 1;
          v47 = v84;
          v48 = v85;
          sub_1AE4F9858(v83, v84);
          v49 = v86;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v48[10])(v76, v40, v77, v47, v48);
          v5 = v49;
          if (v49)
          {
            sub_1AE4FDCE8();
            sub_1AE4FFCA0();
            sub_1AE4F6700();
            v20 = sub_1AE506C5C();
            goto LABEL_6;
          }
          v51 = v50;
          swift_bridgeObjectRelease();
          if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v78 + 248))(v51) & 1) == 0)
          {
            sub_1AE506C5C();
            v63 = sub_1AE4F9148();
            v64 = MEMORY[0x1E0DEE9D8];
            v65 = sub_1AE81D988();
            sub_1AE4FDCE8();
            sub_1AE4FFCA0();
            sub_1AE4F6A6C();
            v66 = sub_1AE4F6700();
            *(_QWORD *)(v63 + 16) = v65;
            *(_QWORD *)(v63 + 24) = v64;
            sub_1AE509244(v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80);
            return v64;
          }
          sub_1AE85DEC4(*(_QWORD *)(v40 + 48));
          if (!sub_1AE85D040())
          {
            v52 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v78 + 224);
            v53 = swift_retain();
            v52(v53, v51);
            sub_1AE4F6700();
          }
          sub_1AE4FDCE8();
          sub_1AE4FFCA0();
          v54 = swift_release();
          sub_1AE509244(v54, v55, v56, v57, v58, v59, v60, v61, v74, v75, v76, v77, v78, v79, v80);
        }
        else
        {
          sub_1AE4FDCE8();
          sub_1AE4FFCA0();
          sub_1AE582F80((uint64_t)&v80);
          v5 = v86;
        }
      }
LABEL_24:
      a3 += 2;
      if (!--v30)
        goto LABEL_38;
    }
    sub_1AE4F67A4();
LABEL_23:
    swift_endAccess();
    sub_1AE4F6728();
    goto LABEL_24;
  }
  v20 = sub_1AE4F6700();
LABEL_6:
  sub_1AE509244(v20, v21, v22, v23, v24, v25, v26, v27, v74, v75, v76, v77, v78, v79, v80);
  return (uint64_t)a3;
}

uint64_t sub_1AE81D7D4(uint64_t result, uint64_t a2)
{
  if (result)
    return sub_1AE85D078(a2);
  return result;
}

double sub_1AE81D7FC@<D0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  double result;
  uint64_t v29;
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  unsigned __int8 v36;
  _QWORD v37[13];
  unsigned __int8 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  char v46;
  _OWORD v47[6];
  uint64_t v48;
  char v49;

  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  v9 = a1[3];
  v10 = a1[4];
  v11 = *((_QWORD *)a1 + 10);
  v12 = *(__int128 *)((char *)a1 + 88);
  v13 = *((_BYTE *)a1 + 104);
  v14 = *(_QWORD *)a2;
  v15 = *(_QWORD *)(a2 + 8);
  v16 = *(_QWORD *)(a2 + 16);
  v17 = *(_QWORD *)(a2 + 24);
  v18 = *(_QWORD *)(a2 + 32);
  v19 = *(_QWORD *)(a2 + 40);
  v20 = *(_QWORD *)(a2 + 48);
  v21 = *(_QWORD *)(a2 + 56);
  v22 = *(_QWORD *)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 72);
  v24 = *(_QWORD *)(a2 + 80);
  v25 = *(_QWORD *)(a2 + 88);
  v26 = *(_QWORD *)(a2 + 96);
  v27 = *(_BYTE *)(a2 + 104);
  if ((unint64_t)v12 >> 1 != 0xFFFFFFFF || (v13 & 0x1E) != 0)
  {
    v39 = v6;
    v40 = v7;
    v41 = v8;
    v42 = v9;
    v43 = v10;
    v44 = v11;
    v45 = v12;
    v46 = v13;
    v37[0] = v14;
    v37[1] = v15;
    v37[2] = v16;
    v37[3] = v17;
    v37[4] = v18;
    v37[5] = v19;
    v37[6] = v20;
    v37[7] = v21;
    v37[8] = v22;
    v37[9] = v23;
    v37[10] = v24;
    v37[11] = v25;
    v37[12] = v26;
    v38 = v27;
    v36 = 1;
    sub_1AE84D160((uint64_t)v37, &v36, (uint64_t)v47);
    if (!v3)
    {
      v29 = v48;
      v30 = v49;
      result = *(double *)v47;
      v31 = v47[1];
      v32 = v47[2];
      v33 = v47[3];
      v34 = v47[4];
      v35 = v47[5];
      *(_OWORD *)a3 = v47[0];
      *(_OWORD *)(a3 + 16) = v31;
      *(_OWORD *)(a3 + 32) = v32;
      *(_OWORD *)(a3 + 48) = v33;
      *(_OWORD *)(a3 + 64) = v34;
      *(_OWORD *)(a3 + 80) = v35;
      *(_QWORD *)(a3 + 96) = v29;
      *(_BYTE *)(a3 + 104) = v30;
    }
  }
  else
  {
    *(_QWORD *)a3 = v14;
    *(_QWORD *)(a3 + 8) = v15;
    *(_QWORD *)(a3 + 16) = v16;
    *(_QWORD *)(a3 + 24) = v17;
    *(_QWORD *)(a3 + 32) = v18;
    *(_QWORD *)(a3 + 40) = v19;
    *(_QWORD *)(a3 + 48) = v20;
    *(_QWORD *)(a3 + 56) = v21;
    *(_QWORD *)(a3 + 64) = v22;
    *(_QWORD *)(a3 + 72) = v23;
    *(_QWORD *)(a3 + 80) = v24;
    *(_QWORD *)(a3 + 88) = v25;
    *(_QWORD *)(a3 + 96) = v26;
    *(_BYTE *)(a3 + 104) = v27;
    sub_1AE5263DC(v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
  }
  return result;
}

uint64_t type metadata accessor for LogicalOperator()
{
  return objc_opt_self();
}

uint64_t sub_1AE81D96C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE81D974()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE81D980()
{
  return swift_release();
}

uint64_t sub_1AE81D988()
{
  return sub_1AE925C98();
}

uint64_t sub_1AE81D990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&a56);
}

uint64_t sub_1AE81D998()
{
  return swift_release();
}

uint64_t LRUCache.__allocating_init(capacity:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  LRUCache.init(capacity:)(a1);
  return v2;
}

_QWORD *LRUCache.init(capacity:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 88);
  sub_1AE92670C();
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  v9 = *(_QWORD *)(v4 + 80);
  sub_1AE92670C();
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v14 - v11;
  v2[2] = a1;
  type metadata accessor for LRUCacheNode(255, v9, v5, *(_QWORD *)(v4 + 96));
  swift_getTupleTypeMetadata2();
  sub_1AE926238();
  v2[3] = sub_1AE925C98();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 1, 1, v9);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v5);
  v2[4] = sub_1AE50238C((uint64_t)v12, (uint64_t)v8);
  swift_weakAssign();
  swift_weakAssign();
  return v2;
}

void LRUCache.remove(key:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4FB9BC();
  v8 = v1[3];
  v9 = *(_QWORD *)(v3 + 88);
  v10 = *(_QWORD *)(v3 + 96);
  v11 = type metadata accessor for LRUCacheNode(0, v4, v9, v10);
  MEMORY[0x1AF452F2C](&v12, a1, v8, v4, v11, v10);
  if (v12)
  {
    sub_1AE4F690C();
    sub_1AE50184C();
    sub_1AE4F94EC((uint64_t)v7, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
    v12 = 0;
    sub_1AE4FB9BC();
    sub_1AE925CF8();
    sub_1AE925D1C();
    sub_1AE4F690C();
    swift_release();
  }
  else
  {
    sub_1AE4F690C();
  }
  sub_1AE4F8180();
}

uint64_t LRUCache.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t LRUCache.__deallocating_deinit()
{
  LRUCache.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE81DCAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return LRUCache.get(_:)(a1, a2);
}

void sub_1AE81DCCC(uint64_t a1, uint64_t a2)
{
  LRUCache.set(_:forKey:)(a1, a2);
}

void sub_1AE81DCEC(uint64_t a1)
{
  LRUCache.remove(key:)(a1);
}

void sub_1AE81DD0C()
{
  LRUCache.clear()();
}

uint64_t sub_1AE81DD2C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1AE92670C();
  if (v1 <= 0x3F)
  {
    result = sub_1AE92670C();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1AE81DDC8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for LRUCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LRUCache);
}

uint64_t method lookup function for LRUCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LRUCache.__allocating_init(capacity:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1AE81DE48()
{
  return swift_arrayDestroy();
}

uint64_t sub_1AE81DE54()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 16) = xmmword_1AE960A80;
  *(_QWORD *)(v0 + 32) = &unk_1E5DB0160;
  *(_OWORD *)(v0 + 40) = xmmword_1AE934390;
  *(_OWORD *)(v0 + 56) = xmmword_1AE960A90;
  *(_QWORD *)(v0 + 72) = 0x80000001AE987C20;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1AE5158B8(0, 0);
  return v0;
}

uint64_t sub_1AE81DEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  char v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  char v25;
  __int128 *v26;
  unint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  unsigned __int8 v44;
  _QWORD v45[6];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  char v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  char v67;

  if (((1 << *(_BYTE *)(a6 + 64)) & 0x1FA) == 0)
  {
LABEL_30:
    v25 = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 88) = xmmword_1AE934380;
    *(_BYTE *)(a1 + 104) = 0;
    return v25 & 1;
  }
  v10 = (_QWORD *)(a6 + 32);
  sub_1AE4FE110();
  if (*(_QWORD *)(a6 + 32))
  {
    v11 = sub_1AE4F96E8(115);
    if (!v11)
    {
      sub_1AE4FF20C();
      goto LABEL_10;
    }
    sub_1AE4FF20C();
    sub_1AE4FB9BC();
    v12 = *(_QWORD *)(v11 + 16);
    sub_1AE4FB930();
    swift_release();
    if (*(_QWORD *)(v12 + 16))
    {
      v11 = sub_1AE898358(v12);
      goto LABEL_10;
    }
    sub_1AE4F66E8();
  }
  else
  {
    sub_1AE4FF20C();
  }
  v11 = 0;
LABEL_10:
  sub_1AE4FE110();
  if (!*v10)
  {
    sub_1AE4FF20C();
LABEL_17:
    v13 = 0;
    goto LABEL_18;
  }
  v13 = sub_1AE4F96E8(112);
  if (!v13)
  {
    sub_1AE4FF20C();
    goto LABEL_18;
  }
  sub_1AE4FF20C();
  sub_1AE4FB9BC();
  v14 = *(_QWORD *)(v13 + 16);
  sub_1AE4F67A4();
  swift_release();
  if (!*(_QWORD *)(v14 + 16))
  {
    sub_1AE4F6728();
    goto LABEL_17;
  }
  v13 = sub_1AE898358(v14);
LABEL_18:
  sub_1AE4FE110();
  if (*v10 && (v15 = sub_1AE4F96E8(111)) != 0)
  {
    v16 = v15;
    sub_1AE4FF20C();
    sub_1AE4FB9BC();
    v17 = *(_QWORD *)(v16 + 16);
    sub_1AE4F67A4();
    swift_release();
    if (*(_QWORD *)(v17 + 16))
    {
      v18 = sub_1AE898358(v17);
      goto LABEL_24;
    }
    sub_1AE4F6728();
  }
  else
  {
    sub_1AE4FF20C();
  }
  v18 = 0;
LABEL_24:
  sub_1AE501548((uint64_t *)&unk_1EED94CD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE93D190;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v13;
  *(_QWORD *)(inited + 48) = v18;
  v20 = sub_1AE89DEDC(inited);
  swift_setDeallocating();
  sub_1AE4F67A4();
  sub_1AE4F6804();
  sub_1AE4FB930();
  sub_1AE85EB44();
  if ((v20 & 1) != 0)
  {
    sub_1AE4F6728();
    swift_bridgeObjectRelease();
    sub_1AE4F66E8();
    if (qword_1ED3193F0 != -1)
      swift_once();
    v21 = sub_1AE925B6C();
    sub_1AE4FB608(v21, (uint64_t)qword_1ED3193D8);
    v22 = sub_1AE925B54();
    v23 = sub_1AE9265EC();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1AE4F2000, v22, v23, "Match operator must have at least one of subject predicate object", v24, 2u);
      MEMORY[0x1AF454C78](v24, -1, -1);
    }

    goto LABEL_30;
  }
  v26 = (__int128 *)(a2 + *(int *)(type metadata accessor for QueryContext() + 32));
  v27 = *((_QWORD *)v26 + 11);
  v28 = *((_BYTE *)v26 + 104);
  v29 = 32;
  if (v27 >> 1 != 0xFFFFFFFF || (*((_BYTE *)v26 + 104) & 0x1E) != 0)
  {
    v37 = *((_QWORD *)v26 + 12);
    v38 = *((_QWORD *)v26 + 10);
    v39 = v26[1];
    v51 = *v26;
    v40 = v26[2];
    v41 = v26[3];
    v52 = v39;
    v53 = v40;
    v42 = v26[4];
    v54 = v41;
    v55 = v42;
    v56 = v38;
    v57 = v27;
    v58 = v37;
    v59 = v28;
    v45[0] = 0;
    v45[1] = v11;
    v45[2] = 0;
    v45[3] = v13;
    v45[4] = 0;
    v45[5] = v18;
    v46 = 0u;
    v47 = 0u;
    v48 = 0u;
    v49 = 0;
    v50 = 32;
    v44 = 1;
    sub_1AE84D160((uint64_t)v45, &v44, (uint64_t)&v60);
    swift_bridgeObjectRelease_n();
    sub_1AE4F6728();
    sub_1AE4F66E8();
    swift_bridgeObjectRelease();
    if (v6)
      return v25 & 1;
    v30 = v60;
    v31 = v61;
    v32 = v62;
    v34 = v63;
    v33 = v64;
    v35 = v65;
    v36 = v66;
    v29 = v67;
  }
  else
  {
    v30 = 0;
    v31 = (unint64_t)v11;
    v32 = (unint64_t)v13;
    v33 = 0uLL;
    v34 = (unint64_t)v18;
    v35 = 0uLL;
    v36 = 0uLL;
  }
  *(_QWORD *)a1 = v30;
  *(_OWORD *)(a1 + 8) = v31;
  *(_OWORD *)(a1 + 24) = v32;
  *(_OWORD *)(a1 + 40) = v34;
  *(_OWORD *)(a1 + 56) = v33;
  *(_OWORD *)(a1 + 72) = v35;
  *(_OWORD *)(a1 + 88) = v36;
  v25 = 1;
  *(_BYTE *)(a1 + 104) = v29;
  return v25 & 1;
}

void sub_1AE81E320(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for ResultGraph();
  v3 = swift_allocObject();
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 16) = sub_1AE925C98();
  *(_QWORD *)(v3 + 24) = v4;
  v5 = sub_1AE507314();
  sub_1AE898358(v5);
  v6 = sub_1AE507314();
  sub_1AE898358(v6);
  __asm { BR              X10 }
}

uint64_t sub_1AE81E3D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t inited;
  uint64_t v28;
  char v29;
  uint64_t v30;
  BOOL v31;
  char v32;
  uint64_t v33;
  uint64_t i;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = sub_1AE507314();
  v2 = sub_1AE898358(v1);
  v48 = *(_QWORD *)(v40 + 16);
  if (!v48)
  {
    sub_1AE4F81B8();
    goto LABEL_46;
  }
  v44 = v2 + 56;
  swift_bridgeObjectRetain();
  v3 = 0;
  v45 = v2;
  do
  {
    v4 = (uint64_t *)(v40 + 32 + 88 * v3);
    v5 = v4[1];
    v6 = v4[2];
    v8 = v4[3];
    v7 = v4[4];
    v9 = v4[5];
    v10 = v4[7];
    v50 = v4[8];
    v51 = v4[6];
    v11 = v4[9];
    v12 = v4[10];
    v49 = *v4;
    if (!*(_QWORD *)(v2 + 16))
    {
      sub_1AE4FB764();
      swift_bridgeObjectRetain();
      sub_1AE4F6730();
      sub_1AE4F66C4();
      sub_1AE4FB930();
      sub_1AE4F67A4();
      if (!v10)
        goto LABEL_18;
      goto LABEL_16;
    }
    sub_1AE81EE38();
    sub_1AE4FB764();
    swift_bridgeObjectRetain();
    sub_1AE4F6A24();
    sub_1AE4F6730();
    sub_1AE4FB930();
    sub_1AE4F67A4();
    sub_1AE925F14();
    v13 = sub_1AE50801C();
    v14 = v2;
    v15 = -1 << *(_BYTE *)(v2 + 32);
    v16 = v13 & ~v15;
    sub_1AE509C1C();
    if ((v18 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1AE4F6710();
      sub_1AE4F6728();
      sub_1AE4F66E8();
      sub_1AE4F81B8();
      sub_1AE4F6824();
      v2 = v14;
      goto LABEL_25;
    }
    v43 = v11;
    v19 = v17;
    sub_1AE506EAC(*(_QWORD *)(v14 + 48) + 16 * v16);
    v22 = v22 && v20 == v7;
    if (v22)
    {
      sub_1AE4F665C();
      v2 = v45;
      v12 = v19;
LABEL_15:
      v11 = v43;
      if (!v10)
        goto LABEL_18;
LABEL_16:
      if (*(_QWORD *)(v46 + 16))
      {
        sub_1AE4F67A4();
        sub_1AE551594(v51, v10, v46);
        v24 = v23;
        sub_1AE4F6728();
        if ((v24 & 1) == 0)
        {
          sub_1AE4F6718();
          sub_1AE4F6728();
          sub_1AE4F665C();
          sub_1AE4F81B8();
          sub_1AE4F66E8();
LABEL_24:
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
      }
LABEL_18:
      if (!v11
        || !*(_QWORD *)(v47 + 16)
        || (sub_1AE4FB764(), sub_1AE551594(v50, v11, v47), v26 = v25, sub_1AE4F6710(), (v26 & 1) != 0))
      {
        sub_1AE501548((uint64_t *)&unk_1EED9C8C0);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1AE934250;
        *(_QWORD *)(inited + 32) = v49;
        *(_QWORD *)(inited + 40) = v5;
        *(_QWORD *)(inited + 48) = v6;
        *(_QWORD *)(inited + 56) = v8;
        *(_QWORD *)(inited + 64) = v7;
        *(_QWORD *)(inited + 72) = v9;
        *(_QWORD *)(inited + 80) = v51;
        *(_QWORD *)(inited + 88) = v10;
        *(_QWORD *)(inited + 96) = v50;
        *(_QWORD *)(inited + 104) = v11;
        *(_QWORD *)(inited + 112) = v12;
        *(_BYTE *)(v0 - 192) = 0;
        sub_1AE85DA40(inited, v0 - 192);
        swift_setDeallocating();
        v2 = v45;
        sub_1AE85EB1C();
        goto LABEL_25;
      }
      sub_1AE4F6718();
      sub_1AE4F6710();
      sub_1AE4F665C();
      sub_1AE4F81B8();
      sub_1AE4F66E8();
      goto LABEL_24;
    }
    v42 = v21;
    v12 = v19;
    if ((sub_1AE4FB6F0() & 1) != 0)
    {
      sub_1AE4F665C();
      v2 = v45;
      goto LABEL_15;
    }
    v41 = ~v15;
    v28 = (v16 + 1) & ~v15;
    sub_1AE509C1C();
    if ((v29 & 1) != 0)
    {
      sub_1AE506EAC(v42 + 16 * v28);
      v31 = v22 && v30 == v7;
      v11 = v43;
      if (v31 || (v32 = sub_1AE4FB6F0(), v33 = v42, (v32 & 1) != 0))
      {
LABEL_33:
        sub_1AE4F665C();
        v2 = v45;
        if (!v10)
          goto LABEL_18;
        goto LABEL_16;
      }
      for (i = v28 + 1; ; i = v35 + 1)
      {
        v35 = i & v41;
        if (((*(_QWORD *)(v44 + (((i & (unint64_t)v41) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v41)) & 1) == 0)
          break;
        sub_1AE506EAC(v33 + 16 * v35);
        if (v22 && v36 == v7)
          goto LABEL_33;
        v38 = sub_1AE4FB6F0();
        v33 = v42;
        if ((v38 & 1) != 0)
          goto LABEL_33;
      }
    }
    sub_1AE4F6718();
    swift_bridgeObjectRelease();
    sub_1AE4F6728();
    sub_1AE4F66E8();
    sub_1AE4F81B8();
    sub_1AE4F6824();
    v2 = v45;
LABEL_25:
    ++v3;
  }
  while (v3 != v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_46:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1AE85E1E0();
}

void sub_1AE81E7A4()
{
  sub_1AE4F81B8();
  sub_1AE4F665C();
  JUMPOUT(0x1AE81E780);
}

void sub_1AE81E7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  BOOL v62;
  char v63;
  uint64_t v64;
  uint64_t v66;
  unint64_t i;
  uint64_t v68;
  _QWORD *v69;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  if (*(_QWORD *)(v27 + 8))
    v31 = sub_1AE85DB30();
  else
    v31 = MEMORY[0x1E0DEE9D8];
  v74 = *(_QWORD *)(v31 + 16);
  if (!v74)
  {
LABEL_65:
    sub_1AE4F665C();
    sub_1AE4F6648();
    JUMPOUT(0x1AE81E770);
  }
  v32 = 0;
  v72 = v31;
  v73 = v31 + 32;
  v77 = v29 + 56;
  v78 = v28 + 56;
  while (1)
  {
    if (v32 >= *(_QWORD *)(v31 + 16))
    {
LABEL_67:
      __break(1u);
      JUMPOUT(0x1AE81EC6CLL);
    }
    v33 = (uint64_t *)(v73 + 40 * v32);
    v34 = v33[1];
    v79 = *v33;
    v35 = v33[2];
    sub_1AE4F6708();
    sub_1AE4F6A24();
    sub_1AE889508(v35);
    v37 = v36;
    sub_1AE4F66E8();
    v83 = *(_QWORD *)(v37 + 16);
    if (v83)
      break;
    sub_1AE4F66E8();
    sub_1AE4F76D8();
    swift_release();
LABEL_64:
    if (++v32 == v74)
      goto LABEL_65;
  }
  v75 = v32;
  v80 = v34;
  v38 = 0;
  v82 = v37 + 32;
  v39 = v37;
  v81 = v37;
  while (1)
  {
    if (v38 >= *(_QWORD *)(v39 + 16))
    {
      __break(1u);
      goto LABEL_67;
    }
    v40 = (uint64_t *)(v82 + 88 * v38);
    v41 = v40[1];
    v42 = v40[2];
    v43 = v40[4];
    v84 = v40[3];
    v85 = *v40;
    v44 = v40[5];
    v45 = v40[7];
    v86 = v40[6];
    v87 = v40[8];
    v47 = v40[9];
    v46 = v40[10];
    if (!v45)
      break;
    if (!*(_QWORD *)(v28 + 16))
    {
      sub_1AE4FB764();
      sub_1AE4F6804();
      sub_1AE4F67A4();
      sub_1AE4FB75C();
      sub_1AE4F6708();
      goto LABEL_21;
    }
    sub_1AE81EE38();
    sub_1AE4FB764();
    sub_1AE4F6804();
    sub_1AE4F6A24();
    sub_1AE4F67A4();
    sub_1AE4FB75C();
    sub_1AE4F6708();
    sub_1AE925F14();
    v48 = v28;
    v49 = sub_1AE50801C() & ~(-1 << *(_BYTE *)(v28 + 32));
    if (((*(_QWORD *)(v78 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
    {
      sub_1AE4F67AC();
      sub_1AE4F6710();
      sub_1AE4F6728();
      sub_1AE4F6648();
      swift_bridgeObjectRelease();
      sub_1AE4F6824();
      v28 = v48;
      goto LABEL_36;
    }
    sub_1AE506EAC(*(_QWORD *)(v48 + 48) + 16 * v49);
    v51 = v51 && v45 == v50;
    if (v51 || (sub_1AE4FB6F0() & 1) != 0)
    {
      sub_1AE4F6718();
      v28 = a26;
      v39 = v81;
    }
    else
    {
      sub_1AE81EE1C();
      if ((v60 & 1) == 0)
      {
        sub_1AE4F67AC();
        sub_1AE4F6710();
        sub_1AE4F76D8();
        sub_1AE4F6648();
        swift_bridgeObjectRelease();
        sub_1AE4F6824();
        goto LABEL_35;
      }
      sub_1AE81EE40();
      v62 = v51 && v45 == v61;
      v28 = a26;
      if (!v62)
      {
        while (1)
        {
          if ((sub_1AE4FB6F0() & 1) != 0)
            goto LABEL_51;
          sub_1AE81EE1C();
          if ((v63 & 1) == 0)
            break;
          sub_1AE81EE40();
          if (v51 && v45 == v64)
            goto LABEL_51;
        }
        sub_1AE4F67AC();
        sub_1AE4F6710();
        sub_1AE4F76D8();
        sub_1AE4F6648();
        sub_1AE4F6728();
        sub_1AE4F6824();
        goto LABEL_36;
      }
LABEL_51:
      sub_1AE4F6718();
      v39 = v81;
    }
LABEL_24:
    v52 = v87;
    if (v47 && *(_QWORD *)(a27 + 16))
    {
      sub_1AE81EE38();
      sub_1AE4FB764();
      sub_1AE925F14();
      v53 = sub_1AE50801C();
      v54 = -1 << *(_BYTE *)(a27 + 32);
      v55 = v53 & ~v54;
      if (((*(_QWORD *)(v77 + ((v55 >> 3) & 0xFFFFFFFFFFFFF8)) >> v55) & 1) == 0)
        goto LABEL_34;
      v76 = *(_QWORD *)(a27 + 48);
      v56 = (_QWORD *)(v76 + 16 * v55);
      if (*v56 != v87 || v47 != v56[1])
      {
        v58 = sub_1AE4FB6F0();
        v59 = v87;
        if ((v58 & 1) == 0)
        {
          v66 = ~v54;
          for (i = v55 + 1; ; i = v68 + 1)
          {
            v68 = i & v66;
            if (((*(_QWORD *)(v77 + (((i & v66) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v66)) & 1) == 0)
              break;
            v69 = (_QWORD *)(v76 + 16 * v68);
            if (*v69 == v59 && v47 == v69[1])
              goto LABEL_32;
            v71 = sub_1AE4FB6F0();
            v59 = v87;
            if ((v71 & 1) != 0)
              goto LABEL_32;
          }
LABEL_34:
          sub_1AE4F67AC();
          sub_1AE4F6648();
          sub_1AE4F6728();
          sub_1AE4F6824();
          swift_bridgeObjectRelease();
          sub_1AE4F6718();
LABEL_35:
          v28 = a26;
LABEL_36:
          v39 = v81;
          goto LABEL_37;
        }
      }
LABEL_32:
      sub_1AE4F6710();
      v52 = v87;
      v28 = a26;
      v39 = v81;
    }
    *(_QWORD *)(v30 - 192) = v85;
    *(_QWORD *)(v30 - 184) = v41;
    *(_QWORD *)(v30 - 176) = v42;
    *(_QWORD *)(v30 - 168) = v84;
    *(_QWORD *)(v30 - 160) = v43;
    *(_QWORD *)(v30 - 152) = v44;
    *(_QWORD *)(v30 - 144) = v86;
    *(_QWORD *)(v30 - 136) = v45;
    *(_QWORD *)(v30 - 128) = v52;
    *(_QWORD *)(v30 - 120) = v47;
    *(_QWORD *)(v30 - 112) = v46;
    sub_1AE81EC90(a23, (_QWORD *)(v30 - 192), v79, v80);
    sub_1AE4F67AC();
    sub_1AE4F6710();
    sub_1AE4F6648();
    sub_1AE4F6728();
    sub_1AE4F76D8();
    sub_1AE4F6718();
LABEL_37:
    if (++v38 == v83)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v31 = v72;
      v32 = v75;
      goto LABEL_64;
    }
  }
  sub_1AE4FB764();
  sub_1AE4F6804();
  sub_1AE4F67A4();
  sub_1AE4FB75C();
LABEL_21:
  swift_bridgeObjectRetain();
  goto LABEL_24;
}

uint64_t sub_1AE81EC90(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t result;
  __n128 *inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;

  v28 = a2[5];
  v27 = a2[6];
  v5 = a2[8];
  v4 = a2[9];
  v6 = a2[3] == a3 && a2[4] == a4;
  if (v6 || (result = sub_1AE4FB6F0(), (result & 1) != 0))
  {
    sub_1AE501548((uint64_t *)&unk_1EED9C8C0);
    inited = (__n128 *)swift_initStackObject();
    sub_1AE4FBFB0(inited, (__n128)xmmword_1AE934250, v11, v12, v13, v14, v15, v16, v17, v26, v27, v28);
    v29 = 0;
    sub_1AE4FB930();
    sub_1AE4F6804();
    sub_1AE4F6730();
    sub_1AE4F66C4();
    sub_1AE4FB75C();
LABEL_7:
    swift_bridgeObjectRetain();
    sub_1AE85DA40(inited, &v29);
    swift_setDeallocating();
    return sub_1AE85EB1C();
  }
  if (v4)
  {
    v18 = v5 == a3 && v4 == a4;
    if (v18 || (result = sub_1AE4FB6F0(), (result & 1) != 0))
    {
      sub_1AE501548((uint64_t *)&unk_1EED9C8C0);
      inited = (__n128 *)swift_initStackObject();
      sub_1AE4FBFB0(inited, (__n128)xmmword_1AE934250, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28);
      v29 = 2;
      sub_1AE4F6708();
      sub_1AE4FB930();
      sub_1AE4F6804();
      sub_1AE4F6730();
      sub_1AE4F66C4();
      goto LABEL_7;
    }
  }
  return result;
}

uint64_t type metadata accessor for Match()
{
  return objc_opt_self();
}

uint64_t sub_1AE81EE38()
{
  return sub_1AE926EC8();
}

uint64_t sub_1AE81EE40()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(v1 + 16 * v0);
}

uint64_t Embedding.value.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  sub_1AE501548(&qword_1EED9AD58);
  v0 = sub_1AE4F7714();
  return v1(v0);
}

uint64_t Embedding.identifiers.getter()
{
  sub_1AE4F96F0();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for Embedding()
{
  uint64_t result;

  result = qword_1EEDA3FF8;
  if (!qword_1EEDA3FF8)
    return swift_getSingletonMetadata();
  return result;
}

void Embedding.identifiers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_1AE4F96F0() + 20);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  sub_1AE4F6624();
}

uint64_t (*Embedding.identifiers.modify())(_QWORD)
{
  sub_1AE4F96F0();
  return nullsub_1;
}

uint64_t sub_1AE81EF34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1AE4F91C4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEB00000000737265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE4F91C4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE81F018()
{
  sub_1AE4F76E0();
  sub_1AE926ED4();
  return sub_1AE4F905C();
}

uint64_t sub_1AE81F050(char a1)
{
  if ((a1 & 1) != 0)
    return 0x696669746E656469;
  else
    return 0x65756C6176;
}

uint64_t sub_1AE81F08C()
{
  return sub_1AE81F018();
}

uint64_t sub_1AE81F094()
{
  char *v0;

  return sub_1AE81F050(*v0);
}

uint64_t sub_1AE81F09C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE81EF34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE81F0C0()
{
  sub_1AE81F3C0();
  return sub_1AE926F94();
}

uint64_t sub_1AE81F0E8()
{
  sub_1AE81F3C0();
  return sub_1AE926FA0();
}

void Embedding.init(value:identifiers:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  v6 = sub_1AE501548(&qword_1EED9AD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  *(_QWORD *)(a3 + *(int *)(sub_1AE4F96F0() + 20)) = a2;
  sub_1AE4F6624();
}

uint64_t Embedding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = sub_1AE501548(&qword_1EED9AD58);
  v13 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4F666C();
  v14 = v5 - v4;
  v15 = sub_1AE501548(&qword_1EEDA3FD0);
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F666C();
  v6 = type metadata accessor for Embedding();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F666C();
  v9 = v8 - v7;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE81F3C0();
  sub_1AE926F34();
  if (v2)
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  sub_1AE814C4C(&qword_1EEDA3D58, &qword_1EED9AD58, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0C9E6D8]);
  sub_1AE509734();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v9, v14, v16);
  sub_1AE4F69EC();
  sub_1AE820D8C(&qword_1ED318F38, v10, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
  sub_1AE509734();
  sub_1AE4FCBA8();
  *(_QWORD *)(v9 + *(int *)(v6 + 20)) = v17;
  sub_1AE81F3FC(v9, a2);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  return sub_1AE81F440(v9);
}

unint64_t sub_1AE81F3C0()
{
  unint64_t result;

  result = qword_1EEDA3FD8;
  if (!qword_1EEDA3FD8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960D38, &unk_1E5DC8120);
    atomic_store(result, (unint64_t *)&qword_1EEDA3FD8);
  }
  return result;
}

uint64_t sub_1AE81F3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Embedding();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE81F440(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Embedding();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Embedding.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1AE501548(&qword_1EEDA3FE0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE81F3C0();
  sub_1AE926F4C();
  sub_1AE4F69EC();
  sub_1AE820D8C(&qword_1EEDA3D48, v6, MEMORY[0x1E0DEB198], MEMORY[0x1E0C9E6D0]);
  sub_1AE506270();
  if (!v1)
  {
    type metadata accessor for Embedding();
    sub_1AE4F69EC();
    sub_1AE820D8C(&qword_1EED98E40, v7, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    sub_1AE506270();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

uint64_t sub_1AE81F5EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Embedding.init(from:)(a1, a2);
}

uint64_t sub_1AE81F600(_QWORD *a1)
{
  return Embedding.encode(to:)(a1);
}

Swift::Void __swiftcall Embedding.updateIdsWith(identifier:)(Swift::String identifier)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9[2];

  v1 = HIBYTE(identifier._object) & 0xF;
  if (((uint64_t)identifier._object & 0x2000000000000000) == 0)
    v1 = identifier._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (v1)
  {
    object = identifier._object;
    countAndFlagsBits = identifier._countAndFlagsBits;
    sub_1AE4F96F0();
    swift_bridgeObjectRetain();
    sub_1AE555EFC((uint64_t)v9, countAndFlagsBits, (uint64_t)object, v4, v5, v6, v7, v8, v9[0], v9[1]);
    swift_bridgeObjectRelease();
  }
}

uint64_t FileString.filename.getter()
{
  sub_1AE4F66CC();
  return sub_1AE4F7714();
}

uint64_t FileString.type.getter()
{
  sub_1AE4F66CC();
  return sub_1AE4F7714();
}

IntelligencePlatform::FileString __swiftcall FileString.init(filename:type:)(Swift::String filename, Swift::String type)
{
  Swift::String *v2;
  IntelligencePlatform::FileString result;

  *v2 = filename;
  v2[1] = type;
  result.type = type;
  result.filename = filename;
  return result;
}

uint64_t FileString.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  sub_1AE4F66CC();
  sub_1AE925F14();
  return swift_bridgeObjectRelease();
}

void static FileString.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if ((v6 || (sub_1AE926D60() & 1) != 0) && (v2 == v4 ? (v7 = v3 == v5) : (v7 = 0), !v7))
  {
    sub_1AE4F7714();
    sub_1AE926D60();
  }
  else
  {
    sub_1AE4F6624();
  }
}

void FileString.hashValue.getter()
{
  sub_1AE4F76E0();
  swift_bridgeObjectRetain();
  sub_1AE4FC630();
  swift_bridgeObjectRelease();
  sub_1AE4F66CC();
  sub_1AE4F9240();
  swift_bridgeObjectRelease();
  sub_1AE4F905C();
  sub_1AE4F685C();
}

void sub_1AE81F820()
{
  sub_1AE926EC8();
  swift_bridgeObjectRetain();
  sub_1AE4FC630();
  swift_bridgeObjectRelease();
  sub_1AE4F66CC();
  sub_1AE4F9240();
  swift_bridgeObjectRelease();
  sub_1AE4F905C();
  sub_1AE4F685C();
}

void static ModelKey.nameToName.getter(_QWORD *a1@<X8>)
{
  sub_1AE5010C4(a1);
}

void static ModelKey.nameToEmail.getter(_QWORD *a1@<X8>)
{
  sub_1AE5010C4(a1);
}

id ModelKey.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ModelKey.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ModelKey.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AE81F94C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_log_t log;
  os_log_t loga;
  os_log_t logb;
  os_log_t logc;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  os_log_type_t type;
  os_log_type_t typea;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 112);
  sub_1AE4F6804();
  sub_1AE4F6708();
  sub_1AE4F66CC();
  sub_1AE5162D0(v4, v3, v7, (uint64_t)&v66);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE4F76D8();
  if (v67 == 1)
  {
    sub_1AE52982C((uint64_t)&v66, &qword_1EEDA18A8);
    goto LABEL_9;
  }
  sub_1AE53F27C((uint64_t)&v66, (uint64_t)&v64);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1AE5DA9F4((uint64_t)&v64);
LABEL_9:
    v66 = v4;
    v67 = v3;
    v68 = v6;
    v69 = v5;
    type metadata accessor for MatcherModel();
    v9 = sub_1AE505820();
    sub_1AE4F6804();
    sub_1AE4F6708();
    MatcherModel.init(key:)(&v66);
    if (!v2)
    {
      swift_weakInit();
      LOBYTE(v65) = 0;
      swift_beginAccess();
      sub_1AE4F6804();
      sub_1AE4F6708();
      sub_1AE74211C((uint64_t)&v64, v4, v3, v6, v5);
      swift_endAccess();
      if (qword_1ED31BCB0 != -1)
        swift_once();
      v31 = sub_1AE4F6854();
      v32 = sub_1AE4FB608(v31, (uint64_t)qword_1ED31BC90);
      sub_1AE4F6A24();
      sub_1AE4F6A24();
      sub_1AE506EB8();
      sub_1AE925B54();
      v33 = sub_1AE5086D8();
      v34 = v33;
      if (os_log_type_enabled(v32, v33))
      {
        HIDWORD(v59) = v34;
        v35 = sub_1AE4F66A0();
        v57 = sub_1AE4F66A0();
        v64 = v57;
        *(_DWORD *)v35 = 136315394;
        v66 = v9;
        swift_retain();
        v36 = sub_1AE925E90();
        sub_1AE520ED4(v36, v37, (uint64_t)&v64, v38, v39, v40, v41, v42, (uint64_t)v32, v57, v59, v64, v65, v66, v67, v68, v69, v70, v71,
          v72);
        sub_1AE5084C0();
        sub_1AE92676C();
        swift_bridgeObjectRelease();
        sub_1AE4FDA74();
        *(_WORD *)(v35 + 12) = 2080;
        v66 = v4;
        v67 = v3;
        v68 = v6;
        v69 = v5;
        sub_1AE4F6804();
        sub_1AE4F6708();
        v43 = sub_1AE508D38();
        sub_1AE520ED4(v43, v44, (uint64_t)&v64, v45, v46, v47, v48, v49, (uint64_t)logb, v58, v61, v64, v65, v66, v67, v68, v69, v70, v71,
          v72);
        sub_1AE50AE18();
        swift_bridgeObjectRelease();
        sub_1AE4F6824();
        sub_1AE4F6824();
        _os_log_impl(&dword_1AE4F2000, logc, typea, "MatcherModel: caching model %s for %s", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        sub_1AE4F9064();
      }
      sub_1AE4FDA74();
      sub_1AE4F6824();
      sub_1AE4F6824();

    }
    return v9;
  }
  v9 = Strong;
  if (qword_1ED3100D8 != -1)
    swift_once();
  v10 = sub_1AE4F6854();
  v11 = sub_1AE4FB608(v10, (uint64_t)qword_1ED30ECD0);
  sub_1AE4F6A24();
  sub_1AE4F6A24();
  sub_1AE506EB8();
  sub_1AE925B54();
  v12 = sub_1AE5086D8();
  v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    HIDWORD(v59) = v13;
    v14 = sub_1AE4F66A0();
    v55 = sub_1AE4F66A0();
    v73 = v55;
    *(_DWORD *)v14 = 136315394;
    v66 = v9;
    type metadata accessor for MatcherModel();
    swift_retain();
    v15 = sub_1AE925E90();
    sub_1AE507960(v15, v16, v17, v18, v19, v20, v21, v22, (uint64_t)v11, v55, v59, v64, v65, v66, v67, v68, v69, v70, v71,
      v72);
    sub_1AE5084C0();
    sub_1AE92676C();
    swift_bridgeObjectRelease();
    sub_1AE4FDA74();
    *(_WORD *)(v14 + 12) = 2080;
    v66 = v4;
    v67 = v3;
    v68 = v6;
    v69 = v5;
    sub_1AE4F6804();
    sub_1AE4F6708();
    v23 = sub_1AE508D38();
    sub_1AE507960(v23, v24, v25, v26, v27, v28, v29, v30, (uint64_t)log, v56, v60, v64, v65, v66, v67, v68, v69, v70, v71,
      v72);
    sub_1AE50AE18();
    swift_bridgeObjectRelease();
    sub_1AE4F6824();
    sub_1AE4F6824();
    _os_log_impl(&dword_1AE4F2000, loga, type, "MatcherModel: using cached model %s for %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    sub_1AE4F9064();
  }

  sub_1AE4F6824();
  sub_1AE4F6824();
  sub_1AE4FDA74();
  sub_1AE5DA9F4((uint64_t)&v64);
  return v9;
}

uint64_t MatcherModel.__allocating_init(key:)(uint64_t *a1)
{
  uint64_t v2;

  v2 = sub_1AE505820();
  MatcherModel.init(key:)(a1);
  return v2;
}

uint64_t MatcherModelCache.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t MatcherModelCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

void MatcherModelCache.unownedExecutor.getter()
{
  sub_1AE4F67D4();
}

void sub_1AE81FEB4()
{
  MatcherModelCache.unownedExecutor.getter();
}

uint64_t MatcherModel.key.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[3];
  v3 = v1[4];
  v4 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id MatcherModel.model.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

uint64_t sub_1AE81FF04()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for MatcherModelCache();
  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_1AE655528();
  result = sub_1AE925C98();
  *(_QWORD *)(v0 + 112) = result;
  qword_1EEE11FF8 = v0;
  return result;
}

uint64_t static MatcherModel.personModelEmbeddingSize.getter()
{
  return 90;
}

uint64_t static MatcherModel.sharedModel(for:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = *(_QWORD *)a1;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)(a1 + 24);
  return swift_task_switch();
}

uint64_t sub_1AE81FF98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  if (qword_1EED99880 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 80) = qword_1EEE11FF8;
  *(_OWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 32) = v2;
  *(_QWORD *)(v0 + 40) = v1;
  return swift_task_switch();
}

uint64_t sub_1AE82000C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1AE81F94C((uint64_t *)(v0 + 16));
  *(_QWORD *)(v0 + 88) = 0;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1AE82007C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *MatcherModel.init(key:)(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[4];

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v1[2] = *a1;
  v1[3] = v4;
  v1[4] = v5;
  v1[5] = v6;
  v9[0] = v3;
  v9[1] = v4;
  v9[2] = v5;
  v9[3] = v6;
  v7 = static MatcherModel.loadModel(key:)(v9);
  if (v2)
  {
    swift_bridgeObjectRelease();
    sub_1AE4F76D8();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v1[6] = v7;
  }
  return v1;
}

uint64_t static MatcherModel.loadModel(key:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  uint64_t result;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  v5 = sub_1AE924780();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v47 = (uint64_t)&v41 - v11;
  MEMORY[0x1E0C80A78](v10);
  v50 = (uint64_t)&v41 - v12;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  v48 = *a1;
  v49 = v14;
  if (qword_1ED31BCB0 != -1)
    swift_once();
  v16 = sub_1AE4F6854();
  v17 = sub_1AE4FB608(v16, (uint64_t)qword_1ED31BC90);
  sub_1AE4F6A24();
  sub_1AE4F6A24();
  sub_1AE925B54();
  v18 = sub_1AE5086D8();
  if (os_log_type_enabled(v17, v18))
  {
    v45 = v1;
    v19 = sub_1AE4F66A0();
    v46 = v6;
    v20 = (uint8_t *)v19;
    v21 = sub_1AE4F66A0();
    v43 = v2;
    v44 = v9;
    *(_DWORD *)v20 = 136315138;
    v55 = v21;
    v42 = v20 + 4;
    v51 = v48;
    v52 = v13;
    v53 = v49;
    v54 = v15;
    sub_1AE4FB764();
    sub_1AE4F6708();
    v22 = sub_1AE925E90();
    sub_1AE507960(v22, v23, v24, v25, v26, v27, v28, v29, v41, (unint64_t)v42, v43, (uint64_t)v44, v45, v46, v47, v48, v49, v50, v51,
      v52);
    v51 = v30;
    sub_1AE92676C();
    sub_1AE4F6824();
    sub_1AE4F6824();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AE4F2000, v17, v18, "MatcherModel: loadModel: %s", v20, 0xCu);
    swift_arrayDestroy();
    sub_1AE4F9064();
  }

  sub_1AE4F6824();
  sub_1AE4F6824();
  if (qword_1ED31C450 != -1)
    swift_once();
  v31 = sub_1AE6181F0(v48, v13, v49, v15, (void *)qword_1ED31C4B0);
  if (v31)
  {
    v32 = v31;
    v33 = v47;
    sub_1AE924744();

    v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v34(v2, v33, v5);
    sub_1AE4FD940(v2, 0);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, 1, v5) != 1)
    {
      v35 = v50;
      v34(v50, v2, v5);
      v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init);
      objc_msgSend(v36, sel_setComputeUnits_, 2);
      v37 = (void *)MEMORY[0x1AF454348](objc_msgSend(v36, sel_setAllowBackgroundGPUCompute_, 1));
      sub_1AE750434();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v35, v5);
      v38 = v36;
      v39 = sub_1AE8205B0((uint64_t)v9, v38);
      objc_autoreleasePoolPop(v37);

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v50, v5);
      return (uint64_t)v39;
    }
  }
  else
  {
    sub_1AE4FD940(v2, 1);
  }
  sub_1AE52982C(v2, (uint64_t *)&unk_1ED31C9C0);
  v51 = 0;
  v52 = 0xE000000000000000;
  sub_1AE4FB764();
  sub_1AE4F6708();
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  v51 = 0xD000000000000025;
  v52 = 0x80000001AE987CE0;
  sub_1AE4FB764();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE507768();
  sub_1AE4F6708();
  sub_1AE925F74();
  sub_1AE4F76D8();
  sub_1AE507768();
  result = sub_1AE926AB4();
  __break(1u);
  return result;
}

id sub_1AE8205B0(uint64_t a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)sub_1AE924708();
  v10[0] = 0;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_configuration_error_, v4, a2, v10);

  if (v5)
  {
    v6 = v10[0];
  }
  else
  {
    v7 = v10[0];
    sub_1AE9246B4();

    swift_willThrow();
  }

  v8 = sub_1AE924780();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  return v5;
}

uint64_t MatcherModel.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t MatcherModel.__deallocating_deinit()
{
  MatcherModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MatcherModel()
{
  return objc_opt_self();
}

unint64_t sub_1AE82072C()
{
  unint64_t result;

  result = qword_1EEDA3FF0;
  if (!qword_1EEDA3FF0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for FileString, &type metadata for FileString);
    atomic_store(result, (unint64_t *)&qword_1EEDA3FF0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Embedding(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AE501548(&qword_1EED9AD58);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Embedding(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1EED9AD58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Embedding(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AE501548(&qword_1EED9AD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Embedding(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AE501548(&qword_1EED9AD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Embedding(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AE501548(&qword_1EED9AD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for Embedding(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AE501548(&qword_1EED9AD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Embedding()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AE8209E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9AD58);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, a2, v4);
  else
    sub_1AE4F6624();
}

uint64_t storeEnumTagSinglePayload for Embedding()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AE820A68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_1AE501548(&qword_1EED9AD58);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    sub_1AE4F6624();
  }
}

void sub_1AE820AD8()
{
  unint64_t v0;

  sub_1AE815940();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for FileString()
{
  sub_1AE4F67D4();
}

uint64_t type metadata accessor for ModelKey()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MatcherModelCache()
{
  return objc_opt_self();
}

uint64_t method lookup function for MatcherModelCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MatcherModelCache.instance(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t method lookup function for MatcherModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MatcherModel.__allocating_init(key:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void type metadata accessor for MatcherModelCache.CachedMatcherModel()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE820C04(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE820C50 + 4 * byte_1AE960AB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE820C84 + 4 * asc_1AE960AB0[v4]))();
}

uint64_t sub_1AE820C84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE820C8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE820C94);
  return result;
}

uint64_t sub_1AE820CA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE820CA8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE820CAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE820CB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for Embedding.CodingKeys()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE820CD0()
{
  unint64_t result;

  result = qword_1EEDA4008;
  if (!qword_1EEDA4008)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960D10, &unk_1E5DC8120);
    atomic_store(result, (unint64_t *)&qword_1EEDA4008);
  }
  return result;
}

unint64_t sub_1AE820D10()
{
  unint64_t result;

  result = qword_1EEDA4010;
  if (!qword_1EEDA4010)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960C80, &unk_1E5DC8120);
    atomic_store(result, (unint64_t *)&qword_1EEDA4010);
  }
  return result;
}

unint64_t sub_1AE820D50()
{
  unint64_t result;

  result = qword_1EEDA4018;
  if (!qword_1EEDA4018)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960CA8, &unk_1E5DC8120);
    atomic_store(result, (unint64_t *)&qword_1EEDA4018);
  }
  return result;
}

uint64_t sub_1AE820D8C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1AE814C4C(a1, v4, a3, a4);
}

uint64_t sub_1AE820D94(char a1)
{
  if (!a1)
    return 0xD000000000000012;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0x6C65646F6DLL;
}

void sub_1AE820DEC(unsigned __int8 *a1, char *a2)
{
  sub_1AE510B7C(*a1, *a2);
}

void sub_1AE820DF8()
{
  sub_1AE512D88();
}

uint64_t sub_1AE820E00()
{
  return sub_1AE5E8704();
}

void sub_1AE820E08()
{
  sub_1AE54F8EC();
}

uint64_t sub_1AE820E10@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1AE820D94(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AE820E38()
{
  sub_1AE50B43C();
  return sub_1AE926148();
}

uint64_t sub_1AE820E84(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v5 = a1;
  v6 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v6 = 11;
  v7 = v6 | (v5 << 16);
  if (a3)
    v8 = a3;
  else
    v8 = MEMORY[0x1E0DEE9D8];
  sub_1AE501548((uint64_t *)&unk_1ED30FDE8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1AE934250;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  *(_QWORD *)(v9 + 48) = 15;
  *(_QWORD *)(v9 + 56) = v7;
  *(_QWORD *)(v9 + 64) = 0;
  *(_QWORD *)(v9 + 72) = 0;
  *(_QWORD *)(v9 + 80) = 0;
  *(_QWORD *)(v9 + 88) = v8;
  *(_QWORD *)(v9 + 96) = 0;
  *(_BYTE *)(v9 + 104) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v9;
}

void sub_1AE820F58(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;

  v6 = sub_1AE501548(&qword_1ED318B20);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = a1;
  v73 = a2;
  v76 = 9;
  v77 = 0xE100000000000000;
  v70 = sub_1AE4F7630();
  v9 = sub_1AE926790();
  v10 = sub_1AE898358(v9);
  v11 = 0;
  v12 = *(_QWORD *)(v10 + 56);
  v60 = v10 + 56;
  v65 = v10;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v61 = (unint64_t)(v13 + 63) >> 6;
  v16 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a2) & 0xF;
  v78 = a1;
  v17 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v17 = 11;
  v71 = v17 | (v16 << 16);
  v63 = v16;
  v69 = 4 * v16;
  v64 = a3;
  if (a3)
    v18 = a3;
  else
    v18 = MEMORY[0x1E0DEE9D8];
  v62 = v18;
  v19 = MEMORY[0x1E0DEE9D8];
LABEL_11:
  v66 = v19;
  if (v15)
  {
LABEL_12:
    v67 = (v15 - 1) & v15;
    v68 = v11;
    v20 = __clz(__rbit64(v15)) | (v11 << 6);
    goto LABEL_24;
  }
  while (1)
  {
    v21 = __OFADD__(v11, 1);
    v22 = v11 + 1;
    if (v21)
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v22 >= v61)
      goto LABEL_52;
    v23 = *(_QWORD *)(v60 + 8 * v22);
    if (!v23)
      break;
LABEL_23:
    v67 = (v23 - 1) & v23;
    v68 = v22;
    v20 = __clz(__rbit64(v23)) + (v22 << 6);
LABEL_24:
    v25 = (uint64_t *)(*(_QWORD *)(v65 + 48) + 16 * v20);
    v27 = *v25;
    v26 = v25[1];
    swift_bridgeObjectRetain();
    if (v63)
    {
      v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        swift_bridgeObjectRetain();
        v29 = sub_1AE926040();
        v31 = v30;
        v33 = v32;
        v35 = v34;
        sub_1AE4F76D8();
        v72 = v29;
        v73 = v31;
        v74 = v33;
        v75 = v35;
        v76 = v27;
        v77 = v26;
        v36 = sub_1AE924948();
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, v36);
        sub_1AE5D892C();
        v37 = sub_1AE9267C0();
        v39 = v38;
        LOBYTE(v35) = v40;
        sub_1AE5D8968((uint64_t)v8);
        swift_bridgeObjectRelease();
        if ((v35 & 1) != 0)
          break;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE4FE124();
          v28 = v47;
        }
        v41 = v28[2];
        if (v41 >= v28[3] >> 1)
        {
          sub_1AE4FE124();
          v28 = v48;
        }
        v28[2] = v41 + 1;
        v42 = &v28[2 * v41];
        v42[4] = v37;
        v42[5] = v39;
        v43 = v39 >> 14;
        if (v39 >> 14 <= v37 >> 14)
        {
          v44 = v71;
          v45 = sub_1AE925F44();
          if ((v46 & 1) == 0)
            v44 = v45;
          v43 = v44 >> 14;
        }
      }
      while (v43 < v69);
    }
    else
    {
      v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    sub_1AE4F6648();
    v49 = v28[2];
    if (v49)
    {
      v50 = v28 + 5;
      v19 = v66;
      do
      {
        v51 = *(v50 - 1);
        v52 = *v50;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE51ADF0();
          v19 = v57;
        }
        v53 = *(_QWORD *)(v19 + 16);
        v54 = v19;
        if (v53 >= *(_QWORD *)(v19 + 24) >> 1)
        {
          sub_1AE51ADF0();
          v54 = v58;
        }
        v50 += 2;
        *(_QWORD *)(v54 + 16) = v53 + 1;
        v19 = v54;
        v55 = v54 + 80 * v53;
        *(_QWORD *)(v55 + 32) = v78;
        *(_QWORD *)(v55 + 40) = a2;
        *(_QWORD *)(v55 + 48) = v51;
        *(_QWORD *)(v55 + 56) = v52;
        *(_QWORD *)(v55 + 64) = 0;
        *(_QWORD *)(v55 + 72) = 0;
        v56 = v62;
        *(_QWORD *)(v55 + 80) = 0;
        *(_QWORD *)(v55 + 88) = v56;
        *(_QWORD *)(v55 + 96) = 0;
        *(_BYTE *)(v55 + 104) = 1;
        --v49;
      }
      while (v49);
      swift_bridgeObjectRelease();
      v15 = v67;
      v11 = v68;
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    v15 = v67;
    v11 = v68;
    if (v67)
      goto LABEL_12;
  }
  v24 = v22 + 1;
  if (v22 + 1 >= v61)
    goto LABEL_52;
  v23 = *(_QWORD *)(v60 + 8 * v24);
  if (v23)
    goto LABEL_22;
  v24 = v22 + 2;
  if (v22 + 2 >= v61)
    goto LABEL_52;
  v23 = *(_QWORD *)(v60 + 8 * v24);
  if (v23)
    goto LABEL_22;
  v24 = v22 + 3;
  if (v22 + 3 >= v61)
  {
LABEL_52:
    swift_release();
    sub_1AE4F667C();
    return;
  }
  v23 = *(_QWORD *)(v60 + 8 * v24);
  if (v23)
  {
LABEL_22:
    v22 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v22 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v22 >= v61)
      goto LABEL_52;
    v23 = *(_QWORD *)(v60 + 8 * v22);
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_54:
  __break(1u);
}

void sub_1AE821414(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = sub_1AE82159C(a1, a2);
  if (!v2)
  {
    v8 = v5;
    v9 = v6;
    v10 = v7;
    v11 = (void *)MEMORY[0x1AF454348]();
    type metadata accessor for MentionGeneratorModel();
    swift_allocObject();
    if (*(_QWORD *)(sub_1AE822C80() + 24) >= *(_QWORD *)(v9 + 16))
    {
      sub_1AE822C10(v9);
      v14 = v13;
      swift_release();
      objc_autoreleasePoolPop(v11);
      sub_1AE821E08(a1, a2, v14, v8, v9, v10);
      sub_1AE4F67AC();
      sub_1AE4F76D8();
      sub_1AE4F6648();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AE5716CC();
      swift_allocError();
      *(_QWORD *)v12 = 0xD00000000000003FLL;
      *(_QWORD *)(v12 + 8) = 0x80000001AE987DA0;
      *(_BYTE *)(v12 + 16) = 3;
      swift_willThrow();
      swift_release();
      objc_autoreleasePoolPop(v11);
      sub_1AE4F67AC();
      sub_1AE4F76D8();
      sub_1AE4F6648();
    }
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE82159C(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t **v10;
  uint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t result;
  _QWORD *v66;
  uint64_t *v67;
  _QWORD *v68;
  void *v69;
  _QWORD *v70;
  uint64_t v71;
  void *v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;

  v6 = sub_1AE8944F4(0x65646F6D5F6D7073, 0xED00006B30315F6CLL);
  if (v2)
    return (uint64_t)v3;
  v7 = v6;
  v75 = a1;
  v76 = a2;
  v77 = a2;
  sub_1AE4F7630();
  v8 = sub_1AE926790();
  v9 = *(_QWORD *)(v8 + 16);
  v72 = (void *)v7;
  v73 = a1;
  if (!v9)
  {
    v3 = (uint64_t *)MEMORY[0x1E0DEE9D8];
LABEL_26:
    swift_bridgeObjectRelease();
    v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_27;
  }
  v71 = v8;
  v10 = (uint64_t **)(v8 + 40);
  v3 = (uint64_t *)MEMORY[0x1E0DEE9D8];
  v7 = v77;
  do
  {
    v11 = *v10;
    if (v3[2])
    {
      swift_bridgeObjectRetain();
      v12 = sub_1AE925F50();
      if (__OFADD__(sub_1AE925F20(), 1))
        goto LABEL_64;
      v13 = sub_1AE925F50();
      if (v13 >> 14 < v12 >> 14)
        goto LABEL_65;
      v14 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE51ADD4();
        v3 = v20;
      }
      v15 = v3[2];
      if (v15 >= (unint64_t)v3[3] >> 1)
      {
        sub_1AE51ADD4();
        v3 = v21;
      }
      v3[2] = v15 + 1;
      v16 = &v3[2 * v15];
      v16[4] = v12;
      v16[5] = v14;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1AE925F20();
      v17 = sub_1AE925F50();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE51ADD4();
        v3 = v22;
      }
      v18 = v3[2];
      if (v18 >= (unint64_t)v3[3] >> 1)
      {
        sub_1AE51ADD4();
        v3 = v23;
      }
      v3[2] = v18 + 1;
      v19 = &v3[2 * v18];
      v19[4] = 15;
      v19[5] = v17;
    }
    v10 += 2;
    swift_bridgeObjectRelease();
    --v9;
    v7 = v77;
  }
  while (v9);
  v24 = *(_QWORD *)(v71 + 16);
  if (!v24)
  {
    v7 = (unint64_t)v72;
    goto LABEL_26;
  }
  v67 = v3;
  v74 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1AE52154C();
  v25 = v74;
  v26 = v71 + 40;
  do
  {
    v75 = 32;
    v76 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    v27 = v74[2];
    if (v27 >= v74[3] >> 1)
      sub_1AE52154C();
    v26 += 16;
    v74[2] = v27 + 1;
    v28 = &v74[2 * v27];
    v28[4] = 32;
    v28[5] = 0xE100000000000000;
    --v24;
  }
  while (v24);
  swift_bridgeObjectRelease();
  v7 = (unint64_t)v72;
  v3 = v67;
LABEL_27:
  if (v25[2])
  {
    v30 = v25[4];
    v29 = v25[5];
    swift_bridgeObjectRetain();
    v31 = sub_1AE5BB100(1uLL, v30, v29);
    v11 = (uint64_t *)MEMORY[0x1AF4530E8](v31);
    v12 = v32;
    swift_bridgeObjectRelease();
    v33 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_66;
    while (1)
    {
      if (!v33[2])
      {
        __break(1u);
LABEL_68:
        result = sub_1AE926DE4();
        __break(1u);
        return result;
      }
      v33[4] = v11;
      v70 = v33 + 4;
      v68 = v33;
      v33[5] = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v34 = MEMORY[0x1E0DEE9D8];
      v3 = (uint64_t *)sub_1AE925C98();
      v35 = v33;
      v69 = (void *)v33[2];
      if (!v69)
        break;
      swift_bridgeObjectRetain();
      v7 = 0;
      v36 = 0;
      while (1)
      {
        v37 = &v70[2 * v7];
        v39 = *v37;
        v38 = v37[1];
        swift_bridgeObjectRetain();
        sub_1AE894624(v39, v38, v72);
        v12 = *(_QWORD *)(v40 + 16);
        if (v12)
          break;
LABEL_43:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((void *)++v7 == v69)
        {
          v35 = v68;
          swift_bridgeObjectRelease();
          v7 = (unint64_t)v72;
          a1 = v73;
          v34 = MEMORY[0x1E0DEE9D8];
          goto LABEL_45;
        }
      }
      while (1)
      {
        v41 = v38;
        swift_isUniquelyReferenced_nonNull_native();
        v75 = (uint64_t)v3;
        v11 = v3;
        sub_1AE5370A4();
        if (__OFADD__(v3[2], (v43 & 1) == 0))
          break;
        a1 = v42;
        v44 = v43;
        sub_1AE501548(&qword_1EEDA4038);
        v11 = &v75;
        if ((sub_1AE926A54() & 1) != 0)
        {
          v11 = (uint64_t *)v75;
          sub_1AE5370A4();
          if ((v44 & 1) != (v46 & 1))
            goto LABEL_68;
          a1 = v45;
        }
        v3 = (uint64_t *)v75;
        if ((v44 & 1) != 0)
        {
          *(_QWORD *)(*(_QWORD *)(v75 + 56) + 8 * a1) = v7;
        }
        else
        {
          *(_QWORD *)(v75 + 8 * (a1 >> 6) + 64) |= 1 << a1;
          *(_QWORD *)(v3[6] + 8 * a1) = v36;
          *(_QWORD *)(v3[7] + 8 * a1) = v7;
          v47 = v3[2];
          v48 = __OFADD__(v47, 1);
          v49 = v47 + 1;
          if (v48)
            goto LABEL_63;
          v3[2] = v49;
        }
        swift_bridgeObjectRelease();
        if (v36 == 0x7FFFFFFFFFFFFFFFLL)
          goto LABEL_62;
        v38 = v41;
        ++v36;
        if (!--v12)
          goto LABEL_43;
      }
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      sub_1AE7AA52C();
      v33 = v66;
    }
LABEL_45:
    swift_bridgeObjectRelease();
    v75 = (uint64_t)v35;
    swift_bridgeObjectRetain();
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE568D9C();
    v50 = sub_1AE925DC4();
    v52 = v51;
    swift_bridgeObjectRelease();
    v53 = v50 == a1 && v52 == v77;
    if (!v53 && (sub_1AE926D60() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v75 = 0;
      v76 = 0xE000000000000000;
      sub_1AE92691C();
      sub_1AE925F74();
      sub_1AE925F74();
      sub_1AE925F74();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      v62 = v75;
      v63 = v76;
      sub_1AE5716CC();
      swift_allocError();
      *(_QWORD *)v64 = v62;
      *(_QWORD *)(v64 + 8) = v63;
      *(_BYTE *)(v64 + 16) = 6;
      swift_willThrow();
      goto LABEL_59;
    }
    sub_1AE894624(v50, v52, (void *)v7);
    v55 = v54;
    swift_bridgeObjectRelease();
    v56 = *(_QWORD *)(v55 + 16);
    if (v56)
    {
      v75 = v34;
      sub_1AE5217F8();
      v57 = 0;
      v58 = v75;
      v59 = *(_QWORD *)(v75 + 16);
      do
      {
        v60 = *(_DWORD *)(v55 + 4 * v57 + 32);
        v75 = v58;
        if (v59 >= *(_QWORD *)(v58 + 24) >> 1)
        {
          sub_1AE5217F8();
          v58 = v75;
        }
        ++v57;
        *(_QWORD *)(v58 + 16) = v59 + 1;
        *(_DWORD *)(v58 + 4 * v59++ + 32) = v60;
      }
      while (v56 != v57);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1AE5716CC();
    swift_allocError();
    *(_OWORD *)v61 = xmmword_1AE960D90;
    *(_BYTE *)(v61 + 16) = 3;
    swift_willThrow();
LABEL_59:
    swift_bridgeObjectRelease();

  }
  return (uint64_t)v3;
}

uint64_t sub_1AE821E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t inited, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  _QWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  _DWORD *v27;
  _DWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  float v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t *v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  _QWORD *v81;
  __int128 v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  __int128 v86;
  char v87;
  uint64_t v88;

  sub_1AE501548(&qword_1EEDA4020);
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = (_QWORD *)sub_1AE925C98();
  v78 = *(_QWORD *)(a3 + 16);
  if (!v78)
  {
    v74 = v6;
    v75 = a2;
LABEL_19:
    sub_1AE501548(&qword_1EEDA4030);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AE93D1B0;
    *(_DWORD *)(inited + 32) = 1;
    static EntityClass.person.getter();
    *(_DWORD *)(inited + 80) = 2;
    static EntityClass.place.getter();
    *(_DWORD *)(inited + 128) = 3;
    static EntityClass.organization.getter();
    *(_DWORD *)(inited + 176) = 4;
    static EntityClass.topic.getter();
    v37 = sub_1AE925C98();
    v38 = *(_QWORD *)(a6 + 16);
    if (v38)
    {
      if (!v12[2] || (v79 = *(_OWORD *)(a6 + 32), inited = (uint64_t)v12, sub_1AE5370A4(), (v40 & 1) == 0))
      {
LABEL_44:
        swift_bridgeObjectRelease();
        sub_1AE5716CC();
        swift_allocError();
        v35 = 0xD00000000000002DLL;
        v36 = "Sentencepiece to whitespace projection error.";
        goto LABEL_45;
      }
      v41 = v39;
      swift_bridgeObjectRetain();
      v42 = 0;
      v43 = v38 - 1;
      v44 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v71 = v43;
      v73 = a6;
      v77 = v37;
      while (1)
      {
        if (*(_QWORD *)(v37 + 16))
        {
          v45 = v12[7];
          v46 = *(float *)(v45 + 8 * v41 + 4);
          inited = v37;
          v47 = sub_1AE5373C8(*(_DWORD *)(v45 + 8 * v41));
          if ((v48 & 1) != 0)
          {
            v49 = *(_QWORD *)(v37 + 56) + 40 * v47;
            v50 = *(_QWORD *)v49;
            v51 = *(_QWORD *)(v49 + 8);
            v52 = v44;
            v54 = *(_QWORD *)(v49 + 16);
            v53 = *(_QWORD *)(v49 + 24);
            v55 = *(_BYTE *)(v49 + 32);
            sub_1AE501548((uint64_t *)&unk_1ED31BCC0);
            inited = swift_allocObject();
            *(_OWORD *)(inited + 16) = xmmword_1AE934250;
            *(_QWORD *)(inited + 32) = v50;
            *(_QWORD *)(inited + 40) = v51;
            *(_QWORD *)(inited + 48) = v54;
            *(_QWORD *)(inited + 56) = v53;
            v44 = v52;
            *(_BYTE *)(inited + 64) = v55;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1AE51ADF0();
              v44 = v60;
            }
            v56 = v44[2];
            v37 = v77;
            v43 = v71;
            if (v56 >= v44[3] >> 1)
            {
              sub_1AE51ADF0();
              v44 = v61;
            }
            v44[2] = v56 + 1;
            v57 = &v44[10 * v56];
            v57[4] = a1;
            v57[5] = v75;
            *((_OWORD *)v57 + 3) = v79;
            v57[8] = 0;
            v57[9] = 0;
            v57[10] = 0;
            v57[11] = inited;
            *((double *)v57 + 12) = v46;
            *((_BYTE *)v57 + 104) = 0;
            a6 = v73;
          }
        }
        if (v43 == v42)
          break;
        if (v12[2])
        {
          v79 = *(_OWORD *)(a6 + 16 * v42 + 48);
          inited = (uint64_t)v12;
          sub_1AE5370A4();
          v41 = v58;
          ++v42;
          if ((v59 & 1) != 0)
            continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_bridgeObjectRelease();
      v44 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v88 = v11;
    v62 = v44[2];
    if (!v62)
    {
LABEL_40:
      swift_bridgeObjectRelease();
      inited = v88;
      swift_bridgeObjectRelease();
      return inited;
    }
    swift_bridgeObjectRetain();
    v63 = v44 + 7;
    while (1)
    {
      v64 = *((_BYTE *)v63 + 48);
      v65 = v63[3];
      v66 = *v63;
      v67 = *((_OWORD *)v63 - 1);
      v68 = *(_OWORD *)(v63 + 1);
      v69 = *((_OWORD *)v63 + 2);
      v81 = (_QWORD *)*(v63 - 3);
      v82 = v67;
      v83 = v66;
      v84 = v68;
      v86 = v69;
      v87 = v64;
      inited = v67;
      v85 = v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1AE822494(&v88, (uint64_t *)&v81, a1, v75);
      if (v74)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v63 += 10;
      if (!--v62)
      {
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_46:
    swift_bridgeObjectRelease();
    return inited;
  }
  if (!*(_QWORD *)(inited + 16)
    || (v74 = v6, v75 = a2, v13 = *(_DWORD *)(a3 + 32), v14 = *(_DWORD *)(a3 + 36), sub_1AE5370A4(), (v16 & 1) == 0))
  {
LABEL_17:
    sub_1AE5716CC();
    swift_allocError();
    v35 = 0xD000000000000030;
    v36 = "Sentencepiece to whitespace token key not found.";
LABEL_45:
    *(_QWORD *)v34 = v35;
    *(_QWORD *)(v34 + 8) = (unint64_t)(v36 - 32) | 0x8000000000000000;
    *(_BYTE *)(v34 + 16) = 3;
    swift_willThrow();
    goto LABEL_46;
  }
  v17 = v15;
  v72 = a6;
  swift_bridgeObjectRetain();
  v18 = (int *)(a3 + 44);
  v19 = 1;
  v76 = inited;
  while (1)
  {
    v20 = *(_QWORD *)(*(_QWORD *)(inited + 56) + 8 * v17);
    swift_isUniquelyReferenced_nonNull_native();
    v81 = v12;
    sub_1AE5370A4();
    if (__OFADD__(v12[2], (v22 & 1) == 0))
      break;
    v23 = v21;
    v24 = v22;
    sub_1AE501548(&qword_1EEDA4028);
    if ((sub_1AE926A54() & 1) != 0)
    {
      sub_1AE5370A4();
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_51;
      v23 = v25;
    }
    v12 = v81;
    if ((v24 & 1) != 0)
    {
      v27 = (_DWORD *)(v81[7] + 8 * v23);
      *v27 = v13;
      v27[1] = v14;
    }
    else
    {
      v81[(v23 >> 6) + 8] |= 1 << v23;
      *(_QWORD *)(v12[6] + 8 * v23) = v20;
      v28 = (_DWORD *)(v12[7] + 8 * v23);
      *v28 = v13;
      v28[1] = v14;
      v29 = v12[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_50;
      v12[2] = v31;
    }
    swift_bridgeObjectRelease();
    inited = v76;
    if (v78 == v19)
    {
      swift_bridgeObjectRelease();
      a6 = v72;
      v11 = MEMORY[0x1E0DEE9D8];
      goto LABEL_19;
    }
    if (*(_QWORD *)(v76 + 16))
    {
      v14 = *v18;
      v13 = *(v18 - 1);
      sub_1AE5370A4();
      v17 = v32;
      v18 += 2;
      ++v19;
      if ((v33 & 1) != 0)
        continue;
    }
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

void sub_1AE822494(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;

  v5 = *a2;
  v7 = a2[2];
  v6 = a2[3];
  v56 = a2[4];
  v57 = a2[6];
  v61 = a2[7];
  v8 = *((_BYTE *)a2 + 72);
  v9 = *(_QWORD *)(*a1 + 16);
  v58 = a2[5];
  v59 = a2[8];
  v72 = a2[1];
  if (!v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AE8DD330();
    v29 = *(_QWORD *)(*a1 + 16);
    sub_1AE8DD69C(v29);
    v30 = *a1;
    *(_QWORD *)(v30 + 16) = v29 + 1;
    v31 = v30 + 80 * v29;
    v32 = v72;
    *(_QWORD *)(v31 + 32) = v5;
    *(_QWORD *)(v31 + 40) = v32;
    *(_QWORD *)(v31 + 48) = v7;
    *(_QWORD *)(v31 + 56) = v6;
    *(_QWORD *)(v31 + 64) = v56;
    *(_QWORD *)(v31 + 72) = v58;
    *(_QWORD *)(v31 + 80) = v57;
    *(_QWORD *)(v31 + 88) = v61;
    *(_QWORD *)(v31 + 96) = v59;
    *(_BYTE *)(v31 + 104) = v8;
    *a1 = v30;
    return;
  }
  v51 = v5;
  v55 = v7;
  v53 = v6;
  sub_1AE7AB038((uint64_t)&v62);
  v11 = v63;
  if (v63 == 1)
  {
    v60 = v8;
    v12 = *a1;
    v13 = *(_QWORD *)(*a1 + 16) - 1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE7AA5EC();
      v12 = v46;
    }
    v14 = *(_QWORD *)(v12 + 16);
    if (v13 >= v14)
    {
      __break(1u);
      goto LABEL_24;
    }
    v15 = v12 + 80 * v13;
    v16 = *(_QWORD *)(v15 + 32);
    v15 += 32;
    v47 = *(_BYTE *)(v15 + 72);
    v17 = v14 - 1;
    v18 = v14 - 1 - v13;
    v52 = *(_QWORD *)(v15 + 64);
    v19 = a4;
    v20 = *(_QWORD *)(v15 + 48);
    v21 = *(_QWORD *)(v15 + 56);
    v22 = *(_QWORD *)(v15 + 32);
    v49 = v16;
    v50 = *(_QWORD *)(v15 + 40);
    v23 = *(_QWORD *)(v15 + 16);
    v54 = *(_QWORD *)(v15 + 24);
    v11 = *(_QWORD *)(v15 + 8);
    sub_1AE5204D4((char *)(v15 + 80), v18, (char *)v15);
    v24 = v23;
    v25 = v22;
    *(_QWORD *)(v12 + 16) = v17;
    *a1 = v12;
    v26 = v21;
    a4 = v19;
    v27 = v47;
    v28 = v60;
  }
  else
  {
    v28 = v8;
    v26 = v69;
    v52 = v70;
    v20 = v68;
    v25 = v66;
    v54 = v65;
    v24 = v64;
    v49 = v62;
    v50 = v67;
    v27 = v71 & 1;
  }
  if (!v11 || !v72)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE5716CC();
    swift_allocError();
    *(_QWORD *)v35 = 0xD000000000000041;
    *(_QWORD *)(v35 + 8) = 0x80000001AE987E50;
    *(_BYTE *)(v35 + 16) = 3;
    swift_willThrow();
    return;
  }
  v33 = v24;
  if (v26)
  {
    if (!v61)
      goto LABEL_21;
    sub_1AE5EA494(v26, v61);
    if ((v34 & 1) == 0)
      goto LABEL_21;
  }
  else if (v61)
  {
LABEL_21:
    sub_1AE8DD330();
    v39 = v26;
    v40 = *(_QWORD *)(*a1 + 16);
    sub_1AE8DD69C(v40);
    v41 = *a1;
    *(_QWORD *)(v41 + 16) = v40 + 1;
    v42 = v41 + 80 * v40;
    *(_QWORD *)(v42 + 32) = v49;
    *(_QWORD *)(v42 + 40) = v11;
    *(_QWORD *)(v42 + 48) = v33;
    *(_QWORD *)(v42 + 56) = v54;
    *(_QWORD *)(v42 + 64) = v25;
    *(_QWORD *)(v42 + 72) = v50;
    *(_QWORD *)(v42 + 80) = v20;
    *(_QWORD *)(v42 + 88) = v39;
    *(_QWORD *)(v42 + 96) = v52;
    *(_BYTE *)(v42 + 104) = v27;
    *a1 = v41;
    swift_bridgeObjectRetain();
    v43 = v72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AE8DD330();
    v44 = *(_QWORD *)(*a1 + 16);
    sub_1AE8DD69C(v44);
    v37 = *a1;
    *(_QWORD *)(v37 + 16) = v44 + 1;
    v45 = v37 + 80 * v44;
    *(_QWORD *)(v45 + 32) = v51;
    *(_QWORD *)(v45 + 40) = v43;
    *(_QWORD *)(v45 + 48) = v55;
    *(_QWORD *)(v45 + 56) = v53;
    *(_QWORD *)(v45 + 64) = v56;
    *(_QWORD *)(v45 + 72) = v58;
    *(_QWORD *)(v45 + 80) = v57;
    *(_QWORD *)(v45 + 88) = v61;
    *(_QWORD *)(v45 + 96) = v59;
    *(_BYTE *)(v45 + 104) = v28;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if (sub_1AE925FE0() >= 2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v53 >> 14 >= v33 >> 14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE8DD330();
    v36 = *(_QWORD *)(*a1 + 16);
    sub_1AE8DD69C(v36);
    v37 = *a1;
    *(_QWORD *)(v37 + 16) = v36 + 1;
    v38 = v37 + 80 * v36;
    *(_QWORD *)(v38 + 32) = a3;
    *(_QWORD *)(v38 + 40) = a4;
    *(_QWORD *)(v38 + 48) = v33;
    *(_QWORD *)(v38 + 56) = v53;
    *(_QWORD *)(v38 + 64) = 0;
    *(_QWORD *)(v38 + 72) = 0;
    *(_QWORD *)(v38 + 80) = 0;
    *(_QWORD *)(v38 + 88) = v26;
    *(_QWORD *)(v38 + 96) = v52;
    *(_BYTE *)(v38 + 104) = v27;
LABEL_22:
    *a1 = v37;
    return;
  }
LABEL_24:
  __break(1u);
}

uint64_t storeEnumTagSinglePayload for MentionGenerationAlgorithm(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE822934 + 4 * byte_1AE960DA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE822968 + 4 * byte_1AE960DA0[v4]))();
}

uint64_t sub_1AE822968(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE822970(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE822978);
  return result;
}

uint64_t sub_1AE822984(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE82298CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE822990(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE822998(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MentionGenerationAlgorithm()
{
  return &type metadata for MentionGenerationAlgorithm;
}

unint64_t sub_1AE8229B8()
{
  unint64_t result;

  result = qword_1EEDA4040;
  if (!qword_1EEDA4040)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE960E44, &type metadata for MentionGenerationAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1EEDA4040);
  }
  return result;
}

void sub_1AE8229F4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int *v8;
  int *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >= v4)
    v6 = *(_QWORD *)(a1 + 16);
  else
    v6 = *(_QWORD *)(a2 + 16);
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1AE522588();
  v7 = v6;
  v25 = a2;
  v26 = a1;
  if (v6)
  {
    v8 = (int *)(a1 + 32);
    v9 = (int *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v4;
    v11 = v5;
    v12 = v5;
    while (v4)
    {
      if (!v11)
        goto LABEL_22;
      v13 = *v8;
      v14 = *v9;
      v15 = *(_QWORD *)(v27 + 16);
      if (v15 >= *(_QWORD *)(v27 + 24) >> 1)
      {
        v22 = v10;
        v23 = v12;
        sub_1AE522588();
        v12 = v23;
        v10 = v22;
      }
      *(_QWORD *)(v27 + 16) = v15 + 1;
      v16 = v27 + 8 * v15;
      --v11;
      *(_DWORD *)(v16 + 32) = v13;
      *(_DWORD *)(v16 + 36) = v14;
      --v4;
      ++v9;
      ++v8;
      if (!--v6)
        goto LABEL_13;
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v4;
    v12 = v5;
LABEL_13:
    if (v10 <= v12)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    while (v7 < v10)
    {
      if (v12 == v7)
        goto LABEL_20;
      if (v7 >= v12)
        goto LABEL_24;
      v17 = *(_DWORD *)(v26 + 32 + 4 * v7);
      v18 = *(_DWORD *)(v25 + 32 + 4 * v7);
      v19 = *(_QWORD *)(v27 + 16);
      if (v19 >= *(_QWORD *)(v27 + 24) >> 1)
      {
        v21 = v10;
        v24 = v12;
        sub_1AE522588();
        v12 = v24;
        v10 = v21;
      }
      ++v7;
      *(_QWORD *)(v27 + 16) = v19 + 1;
      v20 = v27 + 8 * v19;
      *(_DWORD *)(v20 + 32) = v17;
      *(_DWORD *)(v20 + 36) = v18;
      if (v10 == v7)
        goto LABEL_20;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_1AE822C10(uint64_t a1)
{
  void *v2;
  uint64_t v3;

  v2 = (void *)MEMORY[0x1AF454348]();
  sub_1AE823094(a1, &v3);
  objc_autoreleasePoolPop(v2);
}

uint64_t sub_1AE822C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unsigned __int8 v18;
  char v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  _BYTE *v33;
  char v34;
  uint64_t v35;
  _QWORD v36[4];

  type metadata accessor for MentionGenerationModel();
  v2 = sub_1AE8DEF40(objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_initWithComputeUnits_, 0));
  if (v1)
    goto LABEL_64;
  *(_QWORD *)(v0 + 16) = v2;
  v3 = objc_msgSend(*(id *)(v2 + 16), sel_modelDescription);
  v4 = objc_msgSend(v3, sel_metadata);

  type metadata accessor for MLModelMetadataKey(0);
  sub_1AE5DAA18();
  sub_1AE925C5C();

  v5 = (id)*MEMORY[0x1E0C9E868];
  sub_1AE515FA4();

  swift_bridgeObjectRelease();
  if (v36[3])
  {
    sub_1AE501548(&qword_1ED30F918);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1AE515C78(0x74676E654C78616DLL, 0xE900000000000068, v35);
      v7 = v6;
      v9 = v8;
      result = swift_bridgeObjectRelease();
      if (v9)
        goto LABEL_8;
    }
  }
  else
  {
    sub_1AE575148((uint64_t)v36);
  }
  result = swift_bridgeObjectRelease();
  v7 = 0;
  v9 = 0xE000000000000000;
LABEL_8:
  v11 = HIBYTE(v9) & 0xF;
  v12 = v7 & 0xFFFFFFFFFFFFLL;
  if ((v9 & 0x2000000000000000) != 0)
    v13 = HIBYTE(v9) & 0xF;
  else
    v13 = v7 & 0xFFFFFFFFFFFFLL;
  if (!v13)
  {
    sub_1AE4F76D8();
LABEL_63:
    sub_1AE5DA970();
    swift_allocError();
    *v33 = 5;
    swift_willThrow();
    swift_release();
LABEL_64:
    swift_deallocPartialClassInstance();
    return v0;
  }
  if ((v9 & 0x1000000000000000) != 0)
  {
    v15 = sub_1AE5BC078(v7, v9, 10);
    LOBYTE(v7) = v34;
    goto LABEL_53;
  }
  if ((v9 & 0x2000000000000000) == 0)
  {
    if ((v7 & 0x1000000000000000) != 0)
      v14 = (unsigned __int8 *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v14 = (unsigned __int8 *)sub_1AE926994();
    v15 = (uint64_t)sub_1AE5BC064(v14, v12);
    LOBYTE(v7) = v16 & 1;
LABEL_53:
    sub_1AE4F76D8();
    if ((v7 & 1) == 0)
    {
      *(_QWORD *)(v0 + 24) = v15;
      return v0;
    }
    goto LABEL_63;
  }
  v36[0] = v7;
  v36[1] = v9 & 0xFFFFFFFFFFFFFFLL;
  if (v7 == 43)
  {
    if (!v11)
      goto LABEL_69;
    if (v11 == 1)
      goto LABEL_39;
    sub_1AE4FEBE8();
    if (!v20 & v19)
      goto LABEL_39;
    v15 = v22;
    if (v21 != 2)
    {
      sub_1AE4FEBE8();
      if (!v20 & v19)
        goto LABEL_39;
      v15 = 10 * v15 + v24;
      if (v23 != 3)
      {
        while (1)
        {
          sub_1AE4F92A4();
          if (!v20 & v19)
            goto LABEL_39;
          sub_1AE4FFF68();
          if (!v20)
            goto LABEL_39;
          v15 = v26 + v25;
          if (__OFADD__(v26, v25))
            goto LABEL_39;
          sub_1AE500B98();
          if (v20)
            goto LABEL_53;
        }
      }
    }
LABEL_52:
    LOBYTE(v7) = 0;
    goto LABEL_53;
  }
  if (v7 != 45)
  {
    if (!v11 || (v7 - 48) > 9u)
      goto LABEL_39;
    v15 = (v7 - 48);
    if (v11 != 1)
    {
      sub_1AE4FEBE8();
      if (!v20 & v19)
        goto LABEL_39;
      v15 = 10 * (v7 - 48) + v28;
      if (v27 != 2)
      {
        while (1)
        {
          sub_1AE4F92A4();
          if (!v20 & v19)
            goto LABEL_39;
          sub_1AE4FFF68();
          if (!v20)
            goto LABEL_39;
          v15 = v30 + v29;
          if (__OFADD__(v30, v29))
            goto LABEL_39;
          sub_1AE500B98();
          if (v20)
            goto LABEL_53;
        }
      }
    }
    goto LABEL_52;
  }
  if (v11)
  {
    if (v11 != 1)
    {
      sub_1AE4FEBE8();
      if (!(!v20 & v19))
      {
        if (v17 == 2)
        {
          LOBYTE(v7) = 0;
          v15 = -(uint64_t)v18;
          goto LABEL_53;
        }
        if ((BYTE2(v7) - 48) <= 9u)
        {
          v15 = -10 * v18 - (BYTE2(v7) - 48);
          if (v17 == 3)
            goto LABEL_52;
          while (1)
          {
            sub_1AE4F92A4();
            if (!v20 & v19)
              break;
            sub_1AE4FFF68();
            if (!v20)
              break;
            v15 = v32 - v31;
            if (__OFSUB__(v32, v31))
              break;
            sub_1AE500B98();
            if (v20)
              goto LABEL_53;
          }
        }
      }
    }
LABEL_39:
    v15 = 0;
    LOBYTE(v7) = 1;
    goto LABEL_53;
  }
  __break(1u);
LABEL_69:
  __break(1u);
  return result;
}

void sub_1AE823094(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  _BYTE *v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _BYTE *v17;
  void *v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  int v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  int v44;
  int v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  void *v54;
  _QWORD *v55;
  id v56;

  sub_1AE501548(&qword_1EED99648);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AE93F3B0;
  sub_1AE5C8958();
  *(_QWORD *)(v5 + 32) = sub_1AE9266D0();
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v5 + 40) = sub_1AE926430();
  sub_1AE9261FC();
  v7 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
  v8 = sub_1AE823948(v5, 131104);
  if (v2)
  {

LABEL_3:
    sub_1AE5DA970();
    swift_allocError();
    *v9 = 1;
    swift_willThrow();
    return;
  }
  if (!v8)
    goto LABEL_3;
  v55 = a2;
  v10 = v8;
  v11 = (unint64_t)objc_msgSend(v8, sel_count);
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v12 = v11;
  v13 = v10;
  if (!v11)
    goto LABEL_11;
  if (!v6)
    goto LABEL_41;
  if (v11 - 1 >= v6)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v14 = 0;
  v15 = a1 + 32;
  v13 = v10;
  do
  {
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInt_, *(unsigned int *)(v15 + 4 * v14));
    objc_msgSend(v10, sel_setObject_atIndexedSubscript_, v16, v14);

    ++v14;
  }
  while (v12 != v14);
LABEL_11:
  swift_retain();
  sub_1AE8DF480(v13);
  swift_release();
  swift_retain();
  sub_1AE8DE838();
  v19 = v18;
  swift_release();
  if (!v19
    || (v20 = objc_msgSend(v19, sel_multiArrayValue), v19, !v20))
  {
    sub_1AE5DA970();
    swift_allocError();
    *v17 = 6;
    swift_willThrow();

    goto LABEL_13;
  }
  v21 = (unint64_t)objc_msgSend(v20, sel_count);
  if ((v21 & 0x8000000000000000) != 0)
    goto LABEL_43;
  v22 = v21;
  v54 = v13;
  v23 = MEMORY[0x1E0DEE9D8];
  v24 = 0x1E0CB3000uLL;
  if (v21)
  {
    v25 = 0;
    do
    {
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1AE93F3B0;
      *(_QWORD *)(v26 + 32) = sub_1AE9266D0();
      *(_QWORD *)(v26 + 40) = objc_msgSend(objc_allocWithZone(*(Class *)(v24 + 2024)), sel_initWithInteger_, v25);
      sub_1AE9261FC();
      v27 = (void *)sub_1AE9261C0();
      swift_bridgeObjectRelease();
      v28 = v20;
      v29 = objc_msgSend(v20, sel_objectForKeyedSubscript_, v27);

      v30 = sub_1AE926E68();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE51A3F4();
        v23 = v32;
      }
      v31 = *(_QWORD *)(v23 + 16);
      v20 = v28;
      if (v31 >= *(_QWORD *)(v23 + 24) >> 1)
      {
        sub_1AE51A3F4();
        v23 = v33;
      }
      v24 = 0x1E0CB3000;
      ++v25;
      *(_QWORD *)(v23 + 16) = v31 + 1;
      *(_DWORD *)(v23 + 4 * v31 + 32) = v30;
    }
    while (v22 != v25);
  }
  swift_retain();
  sub_1AE8DE838();
  v35 = v34;
  swift_release();
  if (!v35
    || (v36 = objc_msgSend(v35, sel_multiArrayValue), v35, !v36))
  {
    swift_bridgeObjectRelease();
    sub_1AE5DA970();
    swift_allocError();
    *v50 = 6;
    swift_willThrow();

    goto LABEL_13;
  }
  v37 = (unint64_t)objc_msgSend(v36, sel_count);
  if ((v37 & 0x8000000000000000) == 0)
  {
    v38 = v37;
    v56 = v36;
    v39 = MEMORY[0x1E0DEE9D8];
    if (v37)
    {
      v40 = 0;
      do
      {
        v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = xmmword_1AE93F3B0;
        *(_QWORD *)(v41 + 32) = sub_1AE9266D0();
        *(_QWORD *)(v41 + 40) = objc_msgSend(objc_allocWithZone(*(Class *)(v24 + 2024)), sel_initWithInteger_, v40);
        sub_1AE9261FC();
        v42 = (void *)sub_1AE9261C0();
        swift_bridgeObjectRelease();
        v43 = objc_msgSend(v56, sel_objectForKeyedSubscript_, v42);

        sub_1AE9263C4();
        v45 = v44;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE51AB7C();
          v39 = v48;
        }
        v46 = *(_QWORD *)(v39 + 16);
        v47 = v46 + 1;
        if (v46 >= *(_QWORD *)(v39 + 24) >> 1)
        {
          sub_1AE51AB7C();
          v39 = v49;
        }
        ++v40;
        *(_QWORD *)(v39 + 16) = v47;
        *(_DWORD *)(v39 + 4 * v46 + 32) = v45;
      }
      while (v38 != v40);
    }
    else
    {
      v47 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    }
    if (v47 == *(_QWORD *)(v23 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1AE8229F4(v23, v39);
      v52 = v51;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release();

      *v55 = v52;
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AE5DA970();
    swift_allocError();
    *v53 = 6;
    swift_willThrow();

LABEL_13:
    swift_release();
    return;
  }
LABEL_44:
  __break(1u);
}

uint64_t sub_1AE82378C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MentionGeneratorModel()
{
  return objc_opt_self();
}

void sub_1AE823828()
{
  sub_1AE56BB6C();
}

id sub_1AE823834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v3 = a1 == 0x64695F6E656B6F74 && a2 == 0xE900000000000073;
  if ((v3 || (sub_1AE926D60() & 1) != 0) && (v4 = *(_QWORD *)(v2 + 16)) != 0)
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, v4);
  else
    return 0;
}

uint64_t type metadata accessor for MentionGenerationInput()
{
  return objc_opt_self();
}

id sub_1AE823948(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1AE5C8958();
  v4 = (void *)sub_1AE9261C0();
  sub_1AE4F76D8();
  v9[0] = 0;
  v5 = objc_msgSend(v2, sel_initWithShape_dataType_error_, v4, a2, v9);

  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_1AE9246B4();

    swift_willThrow();
  }
  return v5;
}

uint64_t sub_1AE823A2C(uint64_t a1, void (*a2)(uint64_t *, _QWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;

  v22 = a1;
  v7 = a4 + 56;
  v8 = 1 << *(_BYTE *)(a4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a4 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * i);
    v20 = v19[1];
    v21[0] = *v19;
    v21[1] = v20;
    swift_bridgeObjectRetain();
    a2(&v22, v21);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11)
      goto LABEL_26;
    v17 = *(_QWORD *)(v7 + 8 * v13);
    if (!v17)
      break;
LABEL_17:
    v10 = (v17 - 1) & v17;
  }
  v18 = v13 + 1;
  if (v13 + 1 >= v11)
    goto LABEL_26;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 2;
  if (v13 + 2 >= v11)
    goto LABEL_26;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 3;
  if (v13 + 3 >= v11)
    goto LABEL_26;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_26:
    swift_release();
    return v22;
  }
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_16:
    v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v11)
      goto LABEL_26;
    v17 = *(_QWORD *)(v7 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t MLFeatureProvider.dictionary.getter(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  void *v9;

  v3 = objc_msgSend(v1, sel_featureNames);
  v4 = sub_1AE9263E8();

  sub_1AE5D6324();
  v5 = sub_1AE925C98();
  v8[2] = a1;
  v9 = v1;
  v6 = sub_1AE823A2C(v5, (void (*)(uint64_t *, _QWORD *))sub_1AE823D60, (uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  return v6;
}

void sub_1AE823CAC(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *a2;
  v4 = a2[1];
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1AE925E18();
  v7 = objc_msgSend(a3, sel_featureValueForName_, v6);

  if (v7)
  {
    sub_1AE655204((uint64_t)v7, v5, v4, v9, v10, v11, v12, v13, v16, v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE654CE8(v5, v4, v8, v9, v10, v11, v12, v13, v16, v17);
    v15 = v14;
    swift_bridgeObjectRelease();

  }
}

void sub_1AE823D60(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1AE823CAC(a1, a2, *(void **)(v2 + 24));
}

BOOL static ModelError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ModelError.hash(into:)()
{
  return sub_1AE926ED4();
}

uint64_t ModelError.hashValue.getter()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  return sub_1AE926F10();
}

unint64_t sub_1AE823E08()
{
  unint64_t result;

  result = qword_1EEDA4048;
  if (!qword_1EEDA4048)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for ModelError, &type metadata for ModelError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4048);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ModelError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1AE823E90 + 4 * byte_1AE960F15[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1AE823EC4 + 4 * asc_1AE960F10[v4]))();
}

uint64_t sub_1AE823EC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE823ECC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE823ED4);
  return result;
}

uint64_t sub_1AE823EE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE823EE8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1AE823EEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE823EF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ModelError()
{
  return &type metadata for ModelError;
}

uint64_t sub_1AE823F10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void (*v13)(_QWORD, _QWORD, _QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD, _QWORD, _QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = sub_1AE925560();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F90C8();
  v6 = sub_1AE501548((uint64_t *)&unk_1ED318BC0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = a1;
  v9 = sub_1AE925500();
  sub_1AE824A74(&qword_1ED319198, MEMORY[0x1E0D50618]);
  swift_retain();
  sub_1AE926070();
  v10 = sub_1AE824A74(&qword_1ED3191A0, MEMORY[0x1E0D50620]);
  sub_1AE503AB0();
  sub_1AE4FBFD4((uint64_t)v8);
  v24 = v1;
  if (v11)
  {
    v14 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v13 = *(void (**)(_QWORD, _QWORD, _QWORD))(v5 + 32);
    v14 = MEMORY[0x1E0DEE9D8];
    v26 = v10;
    v27 = v5;
    v25 = v13;
    do
    {
      v13(v2, v8, v4);
      if ((sub_1AE925554() & 1) != 0)
      {
        v15 = v9;
        v16 = sub_1AE925548();
        v18 = v17;
        sub_1AE4FDD44(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE4F96F8();
          v14 = v21;
        }
        v19 = *(_QWORD *)(v14 + 16);
        if (v19 >= *(_QWORD *)(v14 + 24) >> 1)
        {
          sub_1AE4F96F8();
          v14 = v22;
        }
        *(_QWORD *)(v14 + 16) = v19 + 1;
        v20 = v14 + 16 * v19;
        *(_QWORD *)(v20 + 32) = v16;
        *(_QWORD *)(v20 + 40) = v18;
        v5 = v27;
        v9 = v15;
        v13 = v25;
      }
      else
      {
        sub_1AE4FDD44(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
      }
      sub_1AE503AB0();
      sub_1AE4FBFD4((uint64_t)v8);
    }
    while (!v11);
  }
  swift_release();
  return v14;
}

uint64_t MorphunTokenizer.init(locale:overrideConfigOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;

  v19 = a3;
  v7 = sub_1AE501548(&qword_1ED318B20);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1AE924948();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F90C8();
  sub_1AE824374(a1, (uint64_t)v9);
  sub_1AE4FBFD4((uint64_t)v9);
  if (v12)
  {
    sub_1AE92493C();
    sub_1AE5D8968((uint64_t)v9);
    if (a2)
      goto LABEL_9;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v4, v9, v10);
    if (a2)
      goto LABEL_9;
  }
  if (qword_1ED318B28 != -1)
    swift_once();
  swift_bridgeObjectRetain();
LABEL_9:
  sub_1AE92553C();
  swift_allocObject();
  sub_1AE925530();
  if (v3)
  {
    sub_1AE50A754();
    return sub_1AE4FDD44(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  }
  else
  {
    v14 = sub_1AE925524();
    v15 = qword_1ED3191C0;
    swift_retain();
    if (v15 != -1)
      swift_once();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1AE925530();
    v16 = sub_1AE925524();
    sub_1AE4FDCE8();
    sub_1AE4FC564();
    sub_1AE50A754();
    sub_1AE4FDD44(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    v17 = v19;
    *v19 = v14;
    v17[1] = v16;
    return sub_1AE4F6A6C();
  }
}

uint64_t sub_1AE824374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1ED318B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void MorphunTokenizer.tokenize(_:noWordNormalization:)()
{
  sub_1AE4F6DC0();
}

void sub_1AE8243E8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE4F66E0();
  v1 = sub_1AE50AE2C();
  if (!v0)
  {
    sub_1AE5058F4(v1);
    swift_release();
  }
  sub_1AE4FC564();
  sub_1AE4FF1AC();
}

uint64_t sub_1AE824450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(unint64_t, _QWORD, uint64_t);
  uint64_t result;

  sub_1AE501548(&qword_1ED318B30);
  v0 = sub_1AE925518();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AE93D1C0;
  v5 = v4 + v3;
  v6 = *(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x1E0D50670], v0);
  v6(v5 + v2, *MEMORY[0x1E0D50638], v0);
  v6(v5 + 2 * v2, *MEMORY[0x1E0D50650], v0);
  v6(v5 + 3 * v2, *MEMORY[0x1E0D50640], v0);
  v6(v5 + 4 * v2, *MEMORY[0x1E0D50660], v0);
  result = ((uint64_t (*)(unint64_t, _QWORD, uint64_t))v6)(v5 + 5 * v2, *MEMORY[0x1E0D50658], v0);
  qword_1ED3191A8 = v4;
  return result;
}

uint64_t sub_1AE824574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(unint64_t, _QWORD, uint64_t);
  uint64_t result;

  sub_1AE501548(&qword_1ED318B30);
  v0 = sub_1AE925518();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AE93D1A0;
  v5 = v4 + v3;
  v6 = *(void (**)(unint64_t, _QWORD, uint64_t))(v1 + 104);
  v6(v5, *MEMORY[0x1E0D50670], v0);
  v6(v5 + v2, *MEMORY[0x1E0D50650], v0);
  v6(v5 + 2 * v2, *MEMORY[0x1E0D50640], v0);
  v6(v5 + 3 * v2, *MEMORY[0x1E0D50660], v0);
  result = ((uint64_t (*)(unint64_t, _QWORD, uint64_t))v6)(v5 + 4 * v2, *MEMORY[0x1E0D50658], v0);
  qword_1ED3191B0 = v4;
  return result;
}

uint64_t static MorphunTokenizer.defaultSeparator.getter()
{
  return 9;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MorphunTokenizer.process(_:separator:noWordNormalization:)(Swift::String _, Swift::String separator, Swift::Bool noWordNormalization)
{
  sub_1AE4F6DC0();
}

uint64_t MorphunTokenizer.processAndCheckNonNormalization(input:separator:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  void *v12;
  void *v13;

  v13 = (void *)MEMORY[0x1AF454348]();
  v1 = MEMORY[0x1AF454348]();
  MEMORY[0x1AF454348]();
  swift_retain();
  v2 = sub_1AE50AE2C();
  if (v0)
  {
    sub_1AE4F6A6C();
    sub_1AE4FF1AC();
    sub_1AE4FCB00();
  }
  else
  {
    sub_1AE5058F4(v2);
    swift_release();
    sub_1AE4F6A6C();
    sub_1AE4FF1AC();
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE568D9C();
    v3 = sub_1AE925DC4();
    v5 = v4;
    swift_bridgeObjectRelease();
    sub_1AE4FCB00();
    v12 = (void *)MEMORY[0x1AF454348]();
    MEMORY[0x1AF454348]();
    swift_retain();
    v6 = sub_1AE92550C();
    sub_1AE5058F4(v6);
    sub_1AE4FC564();
    sub_1AE4FDCE8();
    sub_1AE4FCB00();
    v8 = sub_1AE925DC4();
    v10 = v9;
    swift_bridgeObjectRelease();
    objc_autoreleasePoolPop(v12);
    v11 = v3 == v8 && v5 == v10;
    if (v11 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1AE501548(&qword_1ED31BCD0);
      v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1AE934250;
      *(_QWORD *)(v1 + 32) = v3;
      *(_QWORD *)(v1 + 40) = v5;
    }
    else
    {
      sub_1AE501548(&qword_1ED31BCD0);
      v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1AE933BD0;
      *(_QWORD *)(v1 + 32) = v3;
      *(_QWORD *)(v1 + 40) = v5;
      *(_QWORD *)(v1 + 48) = v8;
      *(_QWORD *)(v1 + 56) = v10;
    }
  }
  objc_autoreleasePoolPop(v13);
  return v1;
}

_QWORD *sub_1AE8249D8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  sub_1AE4F66E0();
  return a1;
}

_QWORD *assignWithCopy for MorphunTokenizer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MorphunTokenizer()
{
  return &type metadata for MorphunTokenizer;
}

uint64_t sub_1AE824A74(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1AE925500();
    result = MEMORY[0x1AF454B70](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AE824AB4()
{
  uint64_t v0;

  v0 = sub_1AE501548(&qword_1ED319190);
  sub_1AE595770(v0, qword_1EEDA4050);
  sub_1AE4FB608(v0, (uint64_t)qword_1EEDA4050);
  return sub_1AE925350();
}

uint64_t MUIDIdentifierMapView.identifier(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t inited;
  uint64_t result;
  uint64_t v9;

  sub_1AE501548(&qword_1ED31BCD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE934250;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1AE56BB6C();
  swift_getObjectType();
  sub_1AE501548((uint64_t *)&unk_1EEDA4070);
  sub_1AE924CCC();
  result = swift_bridgeObjectRelease();
  if (!v3)
  {
    sub_1AE56ABC4(v9, a3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t MUIDIdentifierMapView.identifiers(for:)(uint64_t a1)
{
  return sub_1AE8252EC(a1, (uint64_t *)&unk_1EEDA4070);
}

uint64_t sub_1AE824C38@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41[5];
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;

  v39 = a1;
  v34 = a3;
  isUniquelyReferenced_nonNull_native = sub_1AE501548(&qword_1ED319190);
  v5 = *(_QWORD *)(isUniquelyReferenced_nonNull_native - 8);
  MEMORY[0x1E0C80A78](isUniquelyReferenced_nonNull_native);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AE501548(&qword_1ED318B60);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EED99888 != -1)
LABEL_30:
    swift_once();
  v12 = sub_1AE4FB608(isUniquelyReferenced_nonNull_native, (uint64_t)qword_1EEDA4050);
  (*(void (**)(char *, uint64_t, unint64_t))(v5 + 16))(v7, v12, isUniquelyReferenced_nonNull_native);
  v46 = a2;
  v41[3] = sub_1AE925374();
  v41[4] = MEMORY[0x1E0D24668];
  sub_1AE52F6A8(v41);
  sub_1AE925380();
  v44 = sub_1AE924C9C();
  v45 = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8(&v42);
  sub_1AE501548(&qword_1ED318F30);
  sub_1AE5BA550(&qword_1ED30F960, &qword_1ED318F30, MEMORY[0x1E0DEB3D0]);
  sub_1AE926058();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v41);
  sub_1AE925320();
  (*(void (**)(char *, unint64_t))(v5 + 8))(v7, isUniquelyReferenced_nonNull_native);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v42);
  sub_1AE5BA550((unint64_t *)&qword_1ED30FFD0, &qword_1ED318B60, MEMORY[0x1E0D24290]);
  v13 = v40;
  isUniquelyReferenced_nonNull_native = sub_1AE924B70();
  v14 = v13;
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v13)
    return result;
  if (!(isUniquelyReferenced_nonNull_native >> 62))
  {
    v8 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_5;
LABEL_32:
    v9 = MEMORY[0x1E0DEE9E0];
LABEL_33:
    result = swift_bridgeObjectRelease_n();
    *v34 = v9;
    return result;
  }
  swift_bridgeObjectRetain_n();
  v8 = sub_1AE926AD8();
  swift_bridgeObjectRelease();
  if (!v8)
    goto LABEL_32;
LABEL_5:
  v39 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  v9 = MEMORY[0x1E0DEE9E0];
  v5 = 4;
  v35 = isUniquelyReferenced_nonNull_native;
  v38 = v8;
  while (1)
  {
    a2 = (uint64_t *)(v5 - 4);
    if (v39)
    {
      v11 = (char *)MEMORY[0x1AF453B80](v5 - 4, isUniquelyReferenced_nonNull_native);
    }
    else
    {
      v11 = *(char **)(isUniquelyReferenced_nonNull_native + 8 * v5);
      swift_retain();
    }
    if (__OFADD__(a2, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v40 = v5 - 3;
    sub_1AE571708();
    if (v14)
      break;
    v18 = v16;
    v7 = v17;
    sub_1AE848938((uint64_t)&v42);
    if ((v43 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1AE536EDC(v18, (uint64_t)v7);
      v20 = v19;
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        v41[0] = v9;
        sub_1AE501548(&qword_1EED94770);
        isUniquelyReferenced_nonNull_native = v35;
        sub_1AE926A54();
        v9 = v41[0];
        swift_bridgeObjectRelease();
        sub_1AE926A6C();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v36 = 0;
      v37 = v42;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v41[0] = v9;
      a2 = (uint64_t *)v9;
      v21 = sub_1AE536EDC(v18, (uint64_t)v7);
      v23 = *(_QWORD *)(v9 + 16);
      v24 = (v22 & 1) == 0;
      v9 = v23 + v24;
      if (__OFADD__(v23, v24))
        goto LABEL_28;
      v25 = v21;
      v8 = v22;
      sub_1AE501548(&qword_1EED94770);
      a2 = v41;
      v26 = sub_1AE926A54();
      isUniquelyReferenced_nonNull_native = v35;
      if ((v26 & 1) != 0)
      {
        a2 = (uint64_t *)v41[0];
        v27 = sub_1AE536EDC(v18, (uint64_t)v7);
        if ((v8 & 1) != (v28 & 1))
          goto LABEL_36;
        v25 = v27;
      }
      v9 = v41[0];
      if ((v8 & 1) != 0)
      {
        *(_QWORD *)(*(_QWORD *)(v41[0] + 56) + 8 * v25) = v37;
      }
      else
      {
        *(_QWORD *)(v41[0] + 8 * (v25 >> 6) + 64) |= 1 << v25;
        v29 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v25);
        *v29 = v18;
        v29[1] = (uint64_t)v7;
        *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v25) = v37;
        v30 = *(_QWORD *)(v9 + 16);
        v31 = __OFADD__(v30, 1);
        v32 = v30 + 1;
        if (v31)
          goto LABEL_29;
        *(_QWORD *)(v9 + 16) = v32;
        swift_bridgeObjectRetain();
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = v36;
    }
    v8 = v38;
    ++v5;
    if (v40 == v38)
      goto LABEL_33;
  }
  swift_unexpectedError();
  __break(1u);
LABEL_36:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t MUIDIdentifierMapView.muidIdentifier(for:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v8;

  v3 = *a1;
  v4 = *v1;
  sub_1AE501548((uint64_t *)&unk_1ED30FDA0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE934250;
  *(_QWORD *)(inited + 32) = v3;
  sub_1AE56B498();
  swift_getObjectType();
  sub_1AE501548(&qword_1EEDA4080);
  v6 = v4;
  sub_1AE924CCC();
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v6 = sub_1AE56AE48(v8);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t MUIDIdentifierMapView.muidIdentifiers(for:)(uint64_t a1)
{
  return sub_1AE8252EC(a1, &qword_1EEDA4080);
}

uint64_t sub_1AE8252EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  swift_getObjectType();
  sub_1AE501548(a2);
  result = sub_1AE924CCC();
  if (!v2)
    return v5;
  return result;
}

uint64_t sub_1AE825380@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t **a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t **v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37[5];
  uint64_t v38[7];

  v35 = a1;
  v30 = a3;
  v4 = sub_1AE501548(&qword_1ED319190);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AE501548(&qword_1ED318B60);
  v34 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EED99888 != -1)
LABEL_28:
    swift_once();
  v11 = sub_1AE4FB608(v4, (uint64_t)qword_1EEDA4050);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v11, v4);
  v38[6] = (uint64_t)a2;
  v37[3] = sub_1AE925374();
  v37[4] = MEMORY[0x1E0D24668];
  sub_1AE52F6A8(v37);
  sub_1AE925380();
  v38[3] = sub_1AE924C9C();
  v38[4] = MEMORY[0x1E0D23DC0];
  sub_1AE52F6A8(v38);
  sub_1AE501548((uint64_t *)&unk_1ED318F20);
  sub_1AE5BA550((unint64_t *)&qword_1ED30F950, (uint64_t *)&unk_1ED318F20, MEMORY[0x1E0DEB3D0]);
  sub_1AE578E74();
  sub_1AE926058();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v37);
  sub_1AE925320();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v38);
  sub_1AE5BA550((unint64_t *)&qword_1ED30FFD0, &qword_1ED318B60, MEMORY[0x1E0D24290]);
  v12 = v36;
  v13 = sub_1AE924B70();
  result = (*(uint64_t (**)(char *, unint64_t))(v34 + 8))(v10, v8);
  if (!v12)
  {
    v31 = v13;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v13 = v31;
      v8 = sub_1AE926AD8();
      swift_bridgeObjectRelease();
      if (v8)
        goto LABEL_5;
    }
    else
    {
      v8 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v8)
      {
LABEL_5:
        v33 = v13 & 0xC000000000000001;
        v15 = (uint64_t *)MEMORY[0x1E0DEE9E0];
        v5 = 4;
        v32 = v8;
        while (1)
        {
          if (v33)
          {
            a2 = (uint64_t *)MEMORY[0x1AF453B80](v5 - 4, v13);
          }
          else
          {
            a2 = *(uint64_t **)(v13 + 8 * v5);
            swift_retain();
          }
          v4 = v5 - 3;
          if (__OFADD__(v5 - 4, 1))
          {
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          sub_1AE572374();
          v35 = a2;
          v36 = v5 - 3;
          v4 = v38[0];
          v16 = sub_1AE573E34();
          if (v17)
          {
            v7 = v17;
            v34 = v16;
            swift_isUniquelyReferenced_nonNull_native();
            v37[0] = (uint64_t)v15;
            v10 = (char *)v4;
            a2 = v15;
            v18 = sub_1AE536D68();
            if (__OFADD__(v15[2], (v19 & 1) == 0))
              goto LABEL_26;
            v8 = v18;
            v4 = v19;
            sub_1AE501548(&qword_1EEDA28D8);
            a2 = v37;
            v20 = sub_1AE926A54();
            v13 = v31;
            if ((v20 & 1) != 0)
            {
              a2 = (uint64_t *)v37[0];
              v21 = sub_1AE536D68();
              if ((v4 & 1) != (v22 & 1))
              {
                result = sub_1AE926DE4();
                __break(1u);
                return result;
              }
              v8 = v21;
            }
            v15 = (uint64_t *)v37[0];
            if ((v4 & 1) != 0)
            {
              v23 = (uint64_t *)(*(_QWORD *)(v37[0] + 56) + 16 * v8);
              *v23 = v34;
              v23[1] = (uint64_t)v7;
              swift_bridgeObjectRelease();
            }
            else
            {
              *(_QWORD *)(v37[0] + 8 * (v8 >> 6) + 64) |= 1 << v8;
              *(_QWORD *)(v15[6] + 8 * v8) = v10;
              v25 = (uint64_t *)(v15[7] + 16 * v8);
              *v25 = v34;
              v25[1] = (uint64_t)v7;
              v26 = v15[2];
              v27 = __OFADD__(v26, 1);
              v28 = v26 + 1;
              if (v27)
                goto LABEL_27;
              v15[2] = v28;
            }
            swift_release();
            swift_bridgeObjectRelease();
            v8 = v32;
          }
          else
          {
            sub_1AE536D68();
            if ((v24 & 1) != 0)
            {
              swift_isUniquelyReferenced_nonNull_native();
              v37[0] = (uint64_t)v15;
              v10 = (char *)v15[3];
              sub_1AE501548(&qword_1EEDA28D8);
              v8 = v32;
              sub_1AE926A54();
              v15 = (uint64_t *)v37[0];
              sub_1AE5962D8();
              sub_1AE926A6C();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_release();
            }
          }
          ++v5;
          if (v36 == v8)
            goto LABEL_31;
        }
      }
    }
    v15 = (uint64_t *)MEMORY[0x1E0DEE9E0];
LABEL_31:
    result = swift_bridgeObjectRelease_n();
    *v30 = v15;
  }
  return result;
}

uint64_t sub_1AE8258D0@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1AE824C38(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1AE8258E8@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v2;

  return sub_1AE825380(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t destroy for MUIDIdentifierMapView()
{
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t _s20IntelligencePlatform21MUIDIdentifierMapViewVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MUIDIdentifierMapView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for MUIDIdentifierMapView(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MUIDIdentifierMapView()
{
  return &type metadata for MUIDIdentifierMapView;
}

uint64_t sub_1AE825A20@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AE8258D0(a1, a2);
}

uint64_t sub_1AE825A34@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_1AE8258E8(a1, a2);
}

uint64_t sub_1AE825A48()
{
  return 0x796C7069746C756DLL;
}

unint64_t sub_1AE825A60()
{
  return 0xD000000000000023;
}

double sub_1AE825A7C(uint64_t a1)
{
  uint64_t v1;
  double *v2;
  double result;
  double v4;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 1.0;
  v2 = (double *)(a1 + 32);
  result = 1.0;
  do
  {
    v4 = *v2++;
    result = result * v4;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t type metadata accessor for Multiply()
{
  return objc_opt_self();
}

uint64_t sub_1AE825AC8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  __int16 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int16 v67;
  char v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  __int128 v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unsigned __int8 v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  _BYTE v95[144];
  __int128 v96;
  __int128 v97;
  __int16 v98;
  char v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE v107[32];
  unsigned __int16 v108;
  unsigned __int8 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unsigned __int8 v115;
  uint64_t v116;
  _QWORD v117[14];
  __int16 v118;

  if (*(_BYTE *)(result + 34) == 1)
  {
    v2 = *(_QWORD *)result;
    v3 = *(_QWORD *)(result + 80);
    v4 = *(_BYTE *)(result + 96);
    v5 = *(_QWORD *)(result + 88);
    v7 = *(_QWORD *)(result + 40);
    v6 = *(_QWORD *)(result + 48);
    v8 = *(_WORD *)(result + 32);
    v9 = *(_QWORD *)(result + 24);
    v94 = *(_OWORD *)(result + 8);
    sub_1AE4FB75C();
    sub_1AE501548(&qword_1EEDA2AF8);
    sub_1AE525A5C();
    v10 = MEMORY[0x1E0DEE9D8];
    *(_OWORD *)&v107[8] = v94;
    *(_QWORD *)v107 = v2;
    *(_QWORD *)&v107[24] = v9;
    v108 = v8;
    v109 = 1;
    *(_QWORD *)&v110 = v7;
    *((_QWORD *)&v110 + 1) = v6;
    v111 = 0uLL;
    v112 = sub_1AE925C98();
    v113 = v10;
    v114 = v5;
    v115 = v4;
    v116 = v10;
    v82 = *(_QWORD *)(v3 + 16);
    if (v82)
    {
      v83 = v3 + 32;
      swift_bridgeObjectRetain();
      v11 = 0;
      v93 = MEMORY[0x1E0DEE9D8];
      v84 = MEMORY[0x1E0DEE9D8];
      v81 = v3;
      while (v11 < *(_QWORD *)(v3 + 16))
      {
        v12 = v83 + 112 * v11;
        v91 = *(_QWORD *)(v12 + 8);
        v92 = *(_QWORD *)v12;
        v13 = *(_QWORD *)(v12 + 24);
        v14 = *(unsigned __int16 *)(v12 + 32);
        v15 = *(_BYTE *)(v12 + 34);
        v90 = *(_QWORD *)(v12 + 16);
        v85 = v11 + 1;
        sub_1AE64A2FC(v117);
        v16 = v117[0];
        v17 = v117[1];
        v18 = v117[3];
        v89 = v117[2];
        v19 = v117[4];
        swift_bridgeObjectRetain_n();
        v88 = v13;
        v86 = v15;
        v87 = v14;
        sub_1AE525B74(v92, v91, v90, v13, v14, v15);
        v20 = (unint64_t)(v89 + 64) >> 6;
        sub_1AE4F66CC();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        if (v19)
        {
LABEL_6:
          v22 = __clz(__rbit64(v19));
          v19 &= v19 - 1;
          v23 = v22 | (v18 << 6);
          goto LABEL_25;
        }
        while (1)
        {
          v24 = v18 + 1;
          if (__OFADD__(v18, 1))
            goto LABEL_92;
          if (v24 >= v20)
            goto LABEL_42;
          v25 = *(_QWORD *)(v17 + 8 * v24);
          v26 = v18 + 1;
          if (!v25)
          {
            v26 = v18 + 2;
            if (v18 + 2 >= v20)
              goto LABEL_42;
            v25 = *(_QWORD *)(v17 + 8 * v26);
            if (!v25)
            {
              v26 = v18 + 3;
              if (v18 + 3 >= v20)
                goto LABEL_42;
              v25 = *(_QWORD *)(v17 + 8 * v26);
              if (!v25)
              {
                v26 = v18 + 4;
                if (v18 + 4 >= v20)
                  goto LABEL_42;
                v25 = *(_QWORD *)(v17 + 8 * v26);
                if (!v25)
                {
                  v26 = v18 + 5;
                  if (v18 + 5 >= v20)
                    goto LABEL_42;
                  v25 = *(_QWORD *)(v17 + 8 * v26);
                  if (!v25)
                    break;
                }
              }
            }
          }
LABEL_24:
          v19 = (v25 - 1) & v25;
          v23 = __clz(__rbit64(v25)) + (v26 << 6);
          v18 = v26;
LABEL_25:
          v28 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v23);
          v29 = *(_QWORD *)(v28 + 16);
          v30 = v21[2];
          if (__OFADD__(v30, v29))
          {
            __break(1u);
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
LABEL_91:
            __break(1u);
LABEL_92:
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
            JUMPOUT(0x1AE826650);
          }
          sub_1AE4FB75C();
          if (!swift_isUniquelyReferenced_nonNull_native() || v30 + v29 > v21[3] >> 1)
          {
            sub_1AE519C64();
            v21 = v31;
          }
          if (*(_QWORD *)(v28 + 16))
          {
            v32 = v21[2];
            if ((v21[3] >> 1) - v32 < v29)
              goto LABEL_90;
            v33 = (unint64_t)&v21[18 * v32 + 4];
            if (v28 + 32 < v33 + 144 * v29 && v33 < v28 + 32 + 144 * v29)
            {
              sub_1AE926B20();
              __break(1u);
              JUMPOUT(0x1AE8266CCLL);
            }
            swift_arrayInitWithCopy();
            if (v29)
            {
              v35 = v21[2];
              v36 = __OFADD__(v35, v29);
              v37 = v35 + v29;
              if (v36)
                goto LABEL_91;
              v21[2] = v37;
            }
          }
          else if (v29)
          {
            goto LABEL_89;
          }
          sub_1AE4F6648();
          if (v19)
            goto LABEL_6;
        }
        v26 = v18 + 6;
        if (v18 + 6 < v20)
        {
          v25 = *(_QWORD *)(v17 + 8 * v26);
          if (!v25)
          {
            v27 = v18 + 7;
            do
            {
              if (v27 >= v20)
                goto LABEL_42;
              v25 = *(_QWORD *)(v17 + 8 * v27++);
            }
            while (!v25);
            v26 = v27 - 1;
          }
          goto LABEL_24;
        }
LABEL_42:
        sub_1AE4F6648();
        swift_release();
        sub_1AE525C94(v92, v91, v90, v88, v87, v86);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AE4F6648();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v38 = v21[2];
        if (v38)
        {
          sub_1AE4FFCC0(&v96, v21 + 4);
          v39 = (uint64_t *)_Records_GDEntityPredicate_records;
          if (_Records_GDEntityPredicate_records)
          {
            v40 = 22;
            do
            {
              if (v39[25] >= 2674)
                goto LABEL_93;
              if (v39[26] >= 3558)
                goto LABEL_94;
              if (!_Records_GDEntityPredicate_predicateIds)
                goto LABEL_99;
              v41 = v101;
              sub_1AE525A98((uint64_t)&v96);
              sub_1AE4FB75C();
              sub_1AE4F66CC();
              v42 = sub_1AE925F8C();
              if (!_Records_GDEntityPredicate_labels)
                goto LABEL_100;
              v44 = v42;
              v45 = v43;
              sub_1AE925F8C();
              if ((_QWORD)v41 == v44 && *((_QWORD *)&v41 + 1) == v45)
              {
                sub_1AE4F9038();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
              }
              else
              {
                v47 = sub_1AE926D60();
                sub_1AE4F9038();
                sub_1AE4F6648();
                swift_bridgeObjectRelease();
                sub_1AE4F76D8();
                if ((v47 & 1) == 0)
                  goto LABEL_68;
              }
              if (!_Records_GDEntityPredicate_records)
                goto LABEL_101;
              if (*((uint64_t *)_Records_GDEntityPredicate_records + 136) >= 2674)
                goto LABEL_95;
              if (*((uint64_t *)_Records_GDEntityPredicate_records + 137) >= 3558)
                goto LABEL_96;
              if (!_Records_GDEntityPredicate_predicateIds)
                goto LABEL_102;
              v48 = *((_WORD *)_Records_GDEntityPredicate_records + 540);
              v49 = sub_1AE925F8C();
              if (!_Records_GDEntityPredicate_labels)
                goto LABEL_103;
              v51 = v49;
              v52 = v50;
              v53 = v106;
              v54 = sub_1AE925F8C();
              v117[10] = v51;
              v117[11] = v52;
              v117[12] = v54;
              v117[13] = v55;
              v118 = v48;
              if (*(_QWORD *)(v53 + 16) && (v56 = sub_1AE536DB0(), (v57 & 1) != 0))
              {
                v58 = *(_QWORD *)(*(_QWORD *)(v53 + 56) + 8 * v56);
                sub_1AE4F66CC();
                sub_1AE4F76D8();
                sub_1AE4F665C();
                if (*(_QWORD *)(v58 + 16))
                {
                  sub_1AE4FFCC0(v95, (const void *)(v58 + 32));
                  v59 = v95[130];
                  sub_1AE525A98((uint64_t)v95);
                  sub_1AE4F9038();
                  __asm { BR              X8 }
                }
              }
              else
              {
                sub_1AE4F76D8();
              }
              swift_bridgeObjectRelease();
LABEL_68:
              if (BYTE10(v100) == 1 && (_QWORD)v97 == v2)
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                {
                  v60 = v93;
                }
                else
                {
                  sub_1AE5010EC();
                  v60 = v62;
                }
                v61 = *(_QWORD *)(v60 + 16);
                if (v61 >= *(_QWORD *)(v60 + 24) >> 1)
                {
                  sub_1AE519C64();
                  v60 = v63;
                }
                *(_QWORD *)(v60 + 16) = v61 + 1;
                v93 = v60;
                sub_1AE4FFCC0((void *)(v60 + 144 * v61 + 32), &v96);
              }
              else
              {
                sub_1AE525BB8((uint64_t)&v96);
              }
              if (!--v38)
                goto LABEL_80;
              sub_1AE4FFCC0(&v96, &v21[v40]);
              v39 = (uint64_t *)_Records_GDEntityPredicate_records;
              v40 += 18;
            }
            while (_Records_GDEntityPredicate_records);
          }
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
          JUMPOUT(0x1AE826678);
        }
LABEL_80:
        swift_bridgeObjectRelease();
        v3 = v81;
        v11 = v85;
        if (v85 == v82)
        {
          swift_bridgeObjectRelease();
          v10 = v84;
          v64 = v93;
          goto LABEL_84;
        }
      }
      __break(1u);
      __break(1u);
      goto LABEL_98;
    }
    v64 = v10;
LABEL_84:
    sub_1AE7A4198(v64);
    sub_1AE4F6648();
    if (*(_QWORD *)(v10 + 16))
    {
      v65 = MEMORY[0x1E0DEE9D8];
      v66 = sub_1AE925C98();
      v96 = 0u;
      v97 = 0u;
      v98 = 0;
      v99 = 4;
      v100 = 0u;
      v101 = 0u;
      *(_QWORD *)&v102 = v66;
      *((_QWORD *)&v102 + 1) = v65;
      v103 = 0;
      v104 = 0;
      v105 = v65;
      sub_1AE7A4198(v10);
      swift_bridgeObjectRelease();
      sub_1AE501548(&qword_1EED9AAB8);
      result = swift_allocObject();
      v67 = v98;
      v68 = v99;
      v69 = v96;
      v70 = v97;
      *(_OWORD *)(result + 16) = xmmword_1AE934250;
      *(_OWORD *)(result + 32) = v69;
      v71 = v103;
      v72 = v104;
      v73 = v105;
      *(_OWORD *)(result + 48) = v70;
      *(_WORD *)(result + 64) = v67;
      *(_BYTE *)(result + 66) = v68;
      *(_OWORD *)(result + 72) = v100;
      *(_OWORD *)(result + 88) = v101;
      *(_OWORD *)(result + 104) = v102;
      *(_QWORD *)(result + 120) = v71;
      *(_BYTE *)(result + 128) = v72;
      *(_QWORD *)(result + 136) = v73;
    }
    else
    {
      swift_bridgeObjectRelease();
      result = v113;
    }
    v74 = v112;
    v75 = v114;
    v76 = v115;
    v77 = v116;
    v78 = v108 | ((unint64_t)v109 << 16);
    v79 = *(_OWORD *)&v107[16];
    *(_OWORD *)a2 = *(_OWORD *)v107;
    *(_OWORD *)(a2 + 16) = v79;
    *(_QWORD *)(a2 + 32) = v78;
    *(_OWORD *)(a2 + 40) = v110;
    *(_OWORD *)(a2 + 56) = v111;
    *(_QWORD *)(a2 + 72) = v74;
    *(_QWORD *)(a2 + 80) = result;
    *(_QWORD *)(a2 + 88) = v75;
    *(_QWORD *)(a2 + 96) = v76;
    *(_QWORD *)(a2 + 104) = v77;
  }
  else
  {
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

uint64_t type metadata accessor for MusicEntityRenderer()
{
  return objc_opt_self();
}

uint64_t sub_1AE826714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AE825AC8(a1, a2);
}

Swift::String __swiftcall Double.toString(decimalPlaces:)(Swift::Int decimalPlaces)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  Swift::String result;

  v2 = v1;
  sub_1AE827164();
  sub_1AE926D18();
  sub_1AE5FB89C();
  swift_bridgeObjectRelease();
  sub_1AE4FCBBC();
  sub_1AE501548(&qword_1EED94998);
  v3 = sub_1AE5032F0();
  v4 = MEMORY[0x1E0DEB070];
  *(_OWORD *)(v3 + 16) = xmmword_1AE934250;
  v5 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 32) = v2;
  sub_1AE827158();
  sub_1AE4F9704();
  sub_1AE502014();
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

Swift::String __swiftcall Float.toString(decimalPlaces:)(Swift::Int decimalPlaces)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  Swift::String result;

  v2 = v1;
  sub_1AE827164();
  sub_1AE926D18();
  sub_1AE5FB89C();
  swift_bridgeObjectRelease();
  sub_1AE4FCBBC();
  sub_1AE501548(&qword_1EED94998);
  v3 = sub_1AE5032F0();
  v4 = MEMORY[0x1E0DEB188];
  *(_OWORD *)(v3 + 16) = xmmword_1AE934250;
  v5 = MEMORY[0x1E0DEB1E8];
  *(_QWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 64) = v5;
  *(_DWORD *)(v3 + 32) = v2;
  sub_1AE827158();
  sub_1AE4F9704();
  sub_1AE502014();
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t static RuntimeNumericError.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if ((a1[2] & 1) != 0)
  {
    if ((a2[2] & 1) != 0)
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        v7 = sub_1AE926D60();
        goto LABEL_17;
      }
LABEL_16:
      v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5)
      goto LABEL_15;
    goto LABEL_16;
  }
  v7 = 0;
LABEL_17:
  sub_1AE509358();
  sub_1AE509358();
  sub_1AE544754();
  sub_1AE544754();
  return v7 & 1;
}

Swift::Float __swiftcall Float.sigmoid()()
{
  float v0;

  return 1.0 / (float)(expf(-v0) + 1.0);
}

void Array<A>.dotProduct(with:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE50AE34();
  if (v2)
  {
    sub_1AE50A148(v1, MEMORY[0x1E0C8C0D0], v0);
  }
  else
  {
    sub_1AE92691C();
    sub_1AE508F74();
    sub_1AE500624();
    sub_1AE5058FC();
    sub_1AE4F76D8();
    sub_1AE4FE130();
    sub_1AE500624();
    sub_1AE5058FC();
    sub_1AE4F6648();
    sub_1AE8270F0();
    v3 = sub_1AE4F6778();
    sub_1AE4FF214(v3, v4);
  }
  sub_1AE4FD564();
}

void Array<A>.cosineSimilarity(with:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  float v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  float v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_1AE50AE34();
  if (v16)
  {
    v17 = v1;
    v18 = v0;
    sub_1AE50A75C((const float *)(v1 + 32), v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v36, NAN);
    sub_1AE50A75C((const float *)(v18 + 32), v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v37, NAN);
    sub_1AE826CAC(v17, v18, MEMORY[0x1E0C8C0D0]);
  }
  else
  {
    sub_1AE92691C();
    sub_1AE508F74();
    sub_1AE500624();
    sub_1AE925F74();
    sub_1AE4F76D8();
    sub_1AE4FE130();
    sub_1AE500624();
    sub_1AE925F74();
    sub_1AE4F6648();
    sub_1AE8270F0();
    v34 = sub_1AE4F6778();
    sub_1AE4FF214(v34, v35);
  }
}

void Array<A>.euclideanDistance(with:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE50AE34();
  if (v2)
  {
    sub_1AE50A148(v1, MEMORY[0x1E0C8C0B0], v0);
  }
  else
  {
    sub_1AE92691C();
    sub_1AE508F74();
    sub_1AE500624();
    sub_1AE5058FC();
    sub_1AE4F76D8();
    sub_1AE4FE130();
    sub_1AE500624();
    sub_1AE5058FC();
    sub_1AE4F6648();
    sub_1AE8270F0();
    v3 = sub_1AE4F6778();
    sub_1AE4FF214(v3, v4);
  }
  sub_1AE4FD564();
}

float sub_1AE826CAC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, float *))
{
  float v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    __break(1u);
  v4 = NAN;
  a3(a1 + 32, 1, a2 + 32, 1, &v4);
  return v4;
}

uint64_t Array<A>.padding(totalSize:padValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = a3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = a1 - v5;
  if (a1 <= v5)
  {
    swift_bridgeObjectRetain();
    return v4;
  }
  if (a1 - v5 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a2;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_4;
  }
  sub_1AE82714C();
  v4 = v10;
LABEL_4:
  v7 = *(_QWORD *)(v4 + 16);
  do
  {
    if (v7 >= *(_QWORD *)(v4 + 24) >> 1)
    {
      sub_1AE82714C();
      v4 = v8;
    }
    *(_QWORD *)(v4 + 16) = v7 + 1;
    *(_QWORD *)(v4 + 8 * v7++ + 32) = v3;
    --v6;
  }
  while (v6);
  return v4;
}

void Array<A>.to2D(numRows:numColumns:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 != (a1 * a2) >> 63)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v4 = a2;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5 != a1 * a2)
  {
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    sub_1AE503AC4();
    sub_1AE4F6DCC();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    sub_1AE503AC4();
    sub_1AE4F6DCC();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    sub_1AE503AC4();
    sub_1AE4F6DCC();
    sub_1AE4F6648();
    sub_1AE8270F0();
    sub_1AE4F6778();
    *(_QWORD *)v18 = 0xD000000000000025;
    *(_QWORD *)(v18 + 8) = 0x80000001AE988140;
    *(_BYTE *)(v18 + 16) = 0;
    swift_willThrow();
    return;
  }
  if (a1 < 0)
    goto LABEL_27;
  if (a1)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1AE5225BC();
    if (v4 < 0)
    {
LABEL_28:
      __break(1u);
      return;
    }
    v6 = 0;
    v7 = 0;
    v8 = v24;
    v9 = a1;
    v10 = MEMORY[0x1E0DEE9D8];
    v19 = v4;
    while (v7 != v9)
    {
      if (v4)
      {
        v21 = v6;
        v22 = v8;
        v23 = v10;
        sub_1AE521ADC();
        if ((unsigned __int128)(v7 * (__int128)v4) >> 64 != (v7 * v4) >> 63)
          goto LABEL_25;
        v8 = v22;
        v11 = v23;
        v12 = v4;
        v9 = a1;
        v6 = v21;
        v13 = v21;
        v10 = MEMORY[0x1E0DEE9D8];
        while (v13 < v5)
        {
          v14 = *(_DWORD *)(a3 + 32 + 4 * v13);
          v15 = *(_QWORD *)(v23 + 16);
          if (v15 >= *(_QWORD *)(v23 + 24) >> 1)
          {
            sub_1AE521ADC();
            v6 = v21;
            v8 = v22;
            v10 = MEMORY[0x1E0DEE9D8];
            v9 = a1;
          }
          *(_QWORD *)(v23 + 16) = v15 + 1;
          *(_DWORD *)(v23 + 4 * v15 + 32) = v14;
          ++v13;
          if (!--v12)
          {
            v4 = v19;
            goto LABEL_17;
          }
        }
        __break(1u);
        break;
      }
      v11 = v10;
LABEL_17:
      v25 = v8;
      v16 = *(_QWORD *)(v8 + 16);
      if (v16 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        v17 = v6;
        sub_1AE5225BC();
        v6 = v17;
        v10 = MEMORY[0x1E0DEE9D8];
        v9 = a1;
        v8 = v25;
      }
      ++v7;
      *(_QWORD *)(v8 + 16) = v16 + 1;
      *(_QWORD *)(v8 + 8 * v16 + 32) = v11;
      v6 += v4;
      if (v7 == v9)
        return;
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
}

unint64_t sub_1AE8270F0()
{
  unint64_t result;

  result = qword_1EEDA4088;
  if (!qword_1EEDA4088)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for RuntimeNumericError, &type metadata for RuntimeNumericError);
    atomic_store(result, (unint64_t *)&qword_1EEDA4088);
  }
  return result;
}

ValueMetadata *type metadata accessor for RuntimeNumericError()
{
  return &type metadata for RuntimeNumericError;
}

ValueMetadata *type metadata accessor for VectorSimilarity()
{
  return &type metadata for VectorSimilarity;
}

void sub_1AE82714C()
{
  sub_1AE51AAC8();
}

uint64_t sub_1AE827158()
{
  return sub_1AE925E60();
}

unint64_t ObjectSynthesisDictionaryMapping.init()@<X0>(_QWORD *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v172;
  uint64_t v173;
  uint64_t v174;
  char v176;
  uint64_t v177;
  uint64_t v178;
  char v180;
  uint64_t v181;
  uint64_t v182;
  char v184;
  uint64_t v185;
  uint64_t v186;
  char v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v193;
  uint64_t v194;
  uint64_t v195;
  char v197;
  uint64_t v198;
  uint64_t v199;
  char v201;
  uint64_t v202;
  uint64_t v203;
  char v205;
  uint64_t v206;
  uint64_t v207;
  char v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  _QWORD *v217;
  uint64_t v218;

  sub_1AE501548(&qword_1ED318F60);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1AE961130;
  if (!_Records_GDEntityClass_records)
    goto LABEL_395;
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x380) >= 1336)
  {
    __break(1u);
LABEL_348:
    __break(1u);
    __break(1u);
LABEL_350:
    __break(1u);
    __break(1u);
LABEL_352:
    __break(1u);
LABEL_353:
    __break(1u);
LABEL_354:
    __break(1u);
LABEL_355:
    __break(1u);
LABEL_356:
    __break(1u);
LABEL_357:
    __break(1u);
LABEL_358:
    __break(1u);
LABEL_359:
    __break(1u);
LABEL_360:
    __break(1u);
LABEL_361:
    __break(1u);
LABEL_362:
    __break(1u);
LABEL_363:
    __break(1u);
LABEL_364:
    __break(1u);
LABEL_365:
    __break(1u);
LABEL_366:
    __break(1u);
LABEL_367:
    __break(1u);
LABEL_368:
    __break(1u);
LABEL_369:
    __break(1u);
LABEL_370:
    __break(1u);
LABEL_371:
    __break(1u);
LABEL_372:
    __break(1u);
LABEL_373:
    __break(1u);
LABEL_374:
    __break(1u);
LABEL_375:
    __break(1u);
LABEL_376:
    __break(1u);
LABEL_377:
    __break(1u);
LABEL_378:
    __break(1u);
LABEL_379:
    __break(1u);
LABEL_380:
    __break(1u);
    __break(1u);
LABEL_382:
    __break(1u);
    __break(1u);
LABEL_384:
    __break(1u);
LABEL_385:
    __break(1u);
LABEL_386:
    __break(1u);
LABEL_387:
    __break(1u);
LABEL_388:
    __break(1u);
LABEL_389:
    __break(1u);
LABEL_390:
    __break(1u);
LABEL_391:
    __break(1u);
LABEL_392:
    __break(1u);
LABEL_393:
    __break(1u);
LABEL_394:
    __break(1u);
LABEL_395:
    __break(1u);
    goto LABEL_396;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x388) >= 2889)
    goto LABEL_348;
  v217 = a1;
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_396:
    __break(1u);
    goto LABEL_397;
  }
  v3 = result;
  v4 = *(_BYTE *)(_Records_GDEntityClass_records + 0x378);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_397:
    __break(1u);
LABEL_398:
    __break(1u);
    goto LABEL_399;
  }
  v6 = result;
  v7 = v5;
  v8 = sub_1AE925F8C();
  *(_QWORD *)(v3 + 32) = v6;
  *(_QWORD *)(v3 + 40) = v7;
  *(_QWORD *)(v3 + 48) = v8;
  *(_QWORD *)(v3 + 56) = v9;
  *(_BYTE *)(v3 + 64) = v4;
  v10 = type metadata accessor for CustomGraphEvent(0);
  result = sub_1AE512FA0(&qword_1ED30EFF0, type metadata accessor for CustomGraphEvent, (uint64_t)&protocol conformance descriptor for CustomGraphEvent);
  *(_QWORD *)(v3 + 72) = v10;
  *(_QWORD *)(v3 + 80) = result;
  if (!_Records_GDEntityClass_records)
    goto LABEL_398;
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x518) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x520) >= 2889)
  {
    goto LABEL_350;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_399:
    __break(1u);
    goto LABEL_400;
  }
  v12 = *(_BYTE *)(_Records_GDEntityClass_records + 0x510);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_400:
    __break(1u);
LABEL_401:
    __break(1u);
    goto LABEL_402;
  }
  v13 = sub_1AE500630();
  *(_QWORD *)(v3 + 88) = v10;
  *(_QWORD *)(v3 + 96) = v7;
  *(_QWORD *)(v3 + 104) = v13;
  *(_QWORD *)(v3 + 112) = v14;
  *(_BYTE *)(v3 + 120) = v12;
  v15 = type metadata accessor for CustomGraphActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F250, type metadata accessor for CustomGraphActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphActivityEvent);
  *(_QWORD *)(v3 + 128) = v15;
  *(_QWORD *)(v3 + 136) = result;
  if (!_Records_GDEntityClass_records)
    goto LABEL_401;
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xC80) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0xC88) >= 2889)
  {
    goto LABEL_352;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_402:
    __break(1u);
    goto LABEL_403;
  }
  v17 = *(_BYTE *)(_Records_GDEntityClass_records + 0xC78);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_403:
    __break(1u);
    goto LABEL_404;
  }
  v18 = sub_1AE500630();
  *(_QWORD *)(v3 + 144) = v15;
  *(_QWORD *)(v3 + 152) = v7;
  *(_QWORD *)(v3 + 160) = v18;
  *(_QWORD *)(v3 + 168) = v19;
  *(_BYTE *)(v3 + 176) = v17;
  v20 = type metadata accessor for CustomGraphSportsGameEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F300, type metadata accessor for CustomGraphSportsGameEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSportsGameEvent);
  *(_QWORD *)(v3 + 184) = v20;
  *(_QWORD *)(v3 + 192) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_404:
    __break(1u);
    goto LABEL_405;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x698) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x6A0) >= 2889)
  {
    goto LABEL_353;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_405:
    __break(1u);
    goto LABEL_406;
  }
  v22 = *(_BYTE *)(_Records_GDEntityClass_records + 0x690);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_406:
    __break(1u);
    goto LABEL_407;
  }
  v23 = sub_1AE500630();
  *(_QWORD *)(v3 + 200) = v20;
  *(_QWORD *)(v3 + 208) = v7;
  *(_QWORD *)(v3 + 216) = v23;
  *(_QWORD *)(v3 + 224) = v24;
  *(_BYTE *)(v3 + 232) = v22;
  v25 = type metadata accessor for CustomGraphTransportationActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F7D0, type metadata accessor for CustomGraphTransportationActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphTransportationActivityEvent);
  *(_QWORD *)(v3 + 240) = v25;
  *(_QWORD *)(v3 + 248) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_407:
    __break(1u);
    goto LABEL_408;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x6B0) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x6B8) >= 2889)
  {
    goto LABEL_354;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_408:
    __break(1u);
    goto LABEL_409;
  }
  v27 = *(_BYTE *)(_Records_GDEntityClass_records + 0x6A8);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_409:
    __break(1u);
    goto LABEL_410;
  }
  v28 = sub_1AE500630();
  *(_QWORD *)(v3 + 256) = v25;
  *(_QWORD *)(v3 + 264) = v7;
  *(_QWORD *)(v3 + 272) = v28;
  *(_QWORD *)(v3 + 280) = v29;
  *(_BYTE *)(v3 + 288) = v27;
  v30 = type metadata accessor for CustomGraphWorkingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F538, type metadata accessor for CustomGraphWorkingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphWorkingActivityEvent);
  *(_QWORD *)(v3 + 296) = v30;
  *(_QWORD *)(v3 + 304) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_410:
    __break(1u);
    goto LABEL_411;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x6C8) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x6D0) >= 2889)
  {
    goto LABEL_355;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_411:
    __break(1u);
    goto LABEL_412;
  }
  v32 = *(_BYTE *)(_Records_GDEntityClass_records + 0x6C0);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_412:
    __break(1u);
    goto LABEL_413;
  }
  v33 = sub_1AE500630();
  *(_QWORD *)(v3 + 312) = v30;
  *(_QWORD *)(v3 + 320) = v7;
  *(_QWORD *)(v3 + 328) = v33;
  *(_QWORD *)(v3 + 336) = v34;
  *(_BYTE *)(v3 + 344) = v32;
  v35 = type metadata accessor for CustomGraphMeetingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F4A0, type metadata accessor for CustomGraphMeetingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphMeetingActivityEvent);
  *(_QWORD *)(v3 + 352) = v35;
  *(_QWORD *)(v3 + 360) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_413:
    __break(1u);
    goto LABEL_414;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x6E0) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x6E8) >= 2889)
  {
    goto LABEL_356;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_414:
    __break(1u);
    goto LABEL_415;
  }
  v37 = *(_BYTE *)(_Records_GDEntityClass_records + 0x6D8);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_415:
    __break(1u);
    goto LABEL_416;
  }
  v38 = sub_1AE500630();
  *(_QWORD *)(v3 + 368) = v35;
  *(_QWORD *)(v3 + 376) = v7;
  *(_QWORD *)(v3 + 384) = v38;
  *(_QWORD *)(v3 + 392) = v39;
  *(_BYTE *)(v3 + 400) = v37;
  v40 = type metadata accessor for CustomGraphEatingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F3E8, type metadata accessor for CustomGraphEatingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphEatingActivityEvent);
  *(_QWORD *)(v3 + 408) = v40;
  *(_QWORD *)(v3 + 416) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_416:
    __break(1u);
    goto LABEL_417;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x6F8) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x700) >= 2889)
  {
    goto LABEL_357;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_417:
    __break(1u);
    goto LABEL_418;
  }
  v42 = *(_BYTE *)(_Records_GDEntityClass_records + 0x6F0);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_418:
    __break(1u);
    goto LABEL_419;
  }
  v43 = sub_1AE500630();
  *(_QWORD *)(v3 + 424) = v40;
  *(_QWORD *)(v3 + 432) = v7;
  *(_QWORD *)(v3 + 440) = v43;
  *(_QWORD *)(v3 + 448) = v44;
  *(_BYTE *)(v3 + 456) = v42;
  v45 = type metadata accessor for CustomGraphWatchingTVActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F6F0, type metadata accessor for CustomGraphWatchingTVActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphWatchingTVActivityEvent);
  *(_QWORD *)(v3 + 464) = v45;
  *(_QWORD *)(v3 + 472) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_419:
    __break(1u);
    goto LABEL_420;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x710) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x718) >= 2889)
  {
    goto LABEL_358;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_420:
    __break(1u);
    goto LABEL_421;
  }
  v47 = *(_BYTE *)(_Records_GDEntityClass_records + 0x708);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_421:
    __break(1u);
    goto LABEL_422;
  }
  v48 = sub_1AE500630();
  *(_QWORD *)(v3 + 480) = v45;
  *(_QWORD *)(v3 + 488) = v7;
  *(_QWORD *)(v3 + 496) = v48;
  *(_QWORD *)(v3 + 504) = v49;
  *(_BYTE *)(v3 + 512) = v47;
  v50 = type metadata accessor for CustomGraphCommunicatingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F788, type metadata accessor for CustomGraphCommunicatingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphCommunicatingActivityEvent);
  *(_QWORD *)(v3 + 520) = v50;
  *(_QWORD *)(v3 + 528) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_422:
    __break(1u);
    goto LABEL_423;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x728) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x730) >= 2889)
  {
    goto LABEL_359;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_423:
    __break(1u);
    goto LABEL_424;
  }
  v52 = *(_BYTE *)(_Records_GDEntityClass_records + 0x720);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_424:
    __break(1u);
    goto LABEL_425;
  }
  v53 = sub_1AE500630();
  *(_QWORD *)(v3 + 536) = v50;
  *(_QWORD *)(v3 + 544) = v7;
  *(_QWORD *)(v3 + 552) = v53;
  *(_QWORD *)(v3 + 560) = v54;
  *(_BYTE *)(v3 + 568) = v52;
  v55 = type metadata accessor for CustomGraphShoppingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F5A0, type metadata accessor for CustomGraphShoppingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphShoppingActivityEvent);
  *(_QWORD *)(v3 + 576) = v55;
  *(_QWORD *)(v3 + 584) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_425:
    __break(1u);
    goto LABEL_426;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x818) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x820) >= 2889)
  {
    goto LABEL_360;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_426:
    __break(1u);
    goto LABEL_427;
  }
  v57 = *(_BYTE *)(_Records_GDEntityClass_records + 0x810);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_427:
    __break(1u);
    goto LABEL_428;
  }
  v58 = sub_1AE500630();
  *(_QWORD *)(v3 + 592) = v55;
  *(_QWORD *)(v3 + 600) = v7;
  *(_QWORD *)(v3 + 608) = v58;
  *(_QWORD *)(v3 + 616) = v59;
  *(_BYTE *)(v3 + 624) = v57;
  v60 = type metadata accessor for CustomGraphMindfulnessActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F718, type metadata accessor for CustomGraphMindfulnessActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphMindfulnessActivityEvent);
  *(_QWORD *)(v3 + 632) = v60;
  *(_QWORD *)(v3 + 640) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_428:
    __break(1u);
    goto LABEL_429;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x7E8) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x7F0) >= 2889)
  {
    goto LABEL_361;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_429:
    __break(1u);
    goto LABEL_430;
  }
  v62 = *(_BYTE *)(_Records_GDEntityClass_records + 0x7E0);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_430:
    __break(1u);
    goto LABEL_431;
  }
  v63 = sub_1AE500630();
  *(_QWORD *)(v3 + 648) = v60;
  *(_QWORD *)(v3 + 656) = v7;
  *(_QWORD *)(v3 + 664) = v63;
  *(_QWORD *)(v3 + 672) = v64;
  *(_BYTE *)(v3 + 680) = v62;
  v65 = type metadata accessor for CustomGraphSleepingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F5C0, type metadata accessor for CustomGraphSleepingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSleepingActivityEvent);
  *(_QWORD *)(v3 + 688) = v65;
  *(_QWORD *)(v3 + 696) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_431:
    __break(1u);
    goto LABEL_432;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x740) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x748) >= 2889)
  {
    goto LABEL_362;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_432:
    __break(1u);
    goto LABEL_433;
  }
  v67 = *(_BYTE *)(_Records_GDEntityClass_records + 0x738);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_433:
    __break(1u);
    goto LABEL_434;
  }
  v68 = sub_1AE500630();
  *(_QWORD *)(v3 + 704) = v65;
  *(_QWORD *)(v3 + 712) = v7;
  *(_QWORD *)(v3 + 720) = v68;
  *(_QWORD *)(v3 + 728) = v69;
  *(_BYTE *)(v3 + 736) = v67;
  v70 = type metadata accessor for CustomGraphTravelingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F638, type metadata accessor for CustomGraphTravelingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphTravelingActivityEvent);
  *(_QWORD *)(v3 + 744) = v70;
  *(_QWORD *)(v3 + 752) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_434:
    __break(1u);
    goto LABEL_435;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x758) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x760) >= 2889)
  {
    goto LABEL_363;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_435:
    __break(1u);
    goto LABEL_436;
  }
  v72 = *(_BYTE *)(_Records_GDEntityClass_records + 0x750);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_436:
    __break(1u);
    goto LABEL_437;
  }
  v73 = sub_1AE500630();
  *(_QWORD *)(v3 + 760) = v70;
  *(_QWORD *)(v3 + 768) = v7;
  *(_QWORD *)(v3 + 776) = v73;
  *(_QWORD *)(v3 + 784) = v74;
  *(_BYTE *)(v3 + 792) = v72;
  v75 = type metadata accessor for CustomGraphReadingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F4D0, type metadata accessor for CustomGraphReadingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphReadingActivityEvent);
  *(_QWORD *)(v3 + 800) = v75;
  *(_QWORD *)(v3 + 808) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_437:
    __break(1u);
    goto LABEL_438;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x770) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x778) >= 2889)
  {
    goto LABEL_364;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_438:
    __break(1u);
    goto LABEL_439;
  }
  v77 = *(_BYTE *)(_Records_GDEntityClass_records + 0x768);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_439:
    __break(1u);
    goto LABEL_440;
  }
  v78 = sub_1AE500630();
  *(_QWORD *)(v3 + 816) = v75;
  *(_QWORD *)(v3 + 824) = v7;
  *(_QWORD *)(v3 + 832) = v78;
  *(_QWORD *)(v3 + 840) = v79;
  *(_BYTE *)(v3 + 848) = v77;
  v80 = type metadata accessor for CustomGraphVacationingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F768, type metadata accessor for CustomGraphVacationingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphVacationingActivityEvent);
  *(_QWORD *)(v3 + 856) = v80;
  *(_QWORD *)(v3 + 864) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_440:
    __break(1u);
    goto LABEL_441;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x788) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x790) >= 2889)
  {
    goto LABEL_365;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_441:
    __break(1u);
    goto LABEL_442;
  }
  v82 = *(_BYTE *)(_Records_GDEntityClass_records + 0x780);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_442:
    __break(1u);
    goto LABEL_443;
  }
  v83 = sub_1AE500630();
  *(_QWORD *)(v3 + 872) = v80;
  *(_QWORD *)(v3 + 880) = v7;
  *(_QWORD *)(v3 + 888) = v83;
  *(_QWORD *)(v3 + 896) = v84;
  *(_BYTE *)(v3 + 904) = v82;
  v85 = type metadata accessor for CustomGraphGamingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F408, type metadata accessor for CustomGraphGamingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphGamingActivityEvent);
  *(_QWORD *)(v3 + 912) = v85;
  *(_QWORD *)(v3 + 920) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_443:
    __break(1u);
    goto LABEL_444;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x7A0) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x7A8) >= 2889)
  {
    goto LABEL_366;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_444:
    __break(1u);
    goto LABEL_445;
  }
  v87 = *(_BYTE *)(_Records_GDEntityClass_records + 0x798);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_445:
    __break(1u);
    goto LABEL_446;
  }
  v88 = sub_1AE500630();
  *(_QWORD *)(v3 + 928) = v85;
  *(_QWORD *)(v3 + 936) = v7;
  *(_QWORD *)(v3 + 944) = v88;
  *(_QWORD *)(v3 + 952) = v89;
  *(_BYTE *)(v3 + 960) = v87;
  v90 = type metadata accessor for CustomGraphSocializingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F740, type metadata accessor for CustomGraphSocializingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphSocializingActivityEvent);
  *(_QWORD *)(v3 + 968) = v90;
  *(_QWORD *)(v3 + 976) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_446:
    __break(1u);
    goto LABEL_447;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x7B8) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x7C0) >= 2889)
  {
    goto LABEL_367;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_447:
    __break(1u);
    goto LABEL_448;
  }
  v92 = *(_BYTE *)(_Records_GDEntityClass_records + 0x7B0);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_448:
    __break(1u);
    goto LABEL_449;
  }
  v93 = sub_1AE500630();
  *(_QWORD *)(v3 + 984) = v90;
  *(_QWORD *)(v3 + 992) = v7;
  *(_QWORD *)(v3 + 1000) = v93;
  *(_QWORD *)(v3 + 1008) = v94;
  *(_BYTE *)(v3 + 1016) = v92;
  v95 = type metadata accessor for CustomGraphWakingUpActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F5E8, type metadata accessor for CustomGraphWakingUpActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphWakingUpActivityEvent);
  *(_QWORD *)(v3 + 1024) = v95;
  *(_QWORD *)(v3 + 1032) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_449:
    __break(1u);
    goto LABEL_450;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x7D0) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x7D8) >= 2889)
  {
    goto LABEL_368;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_450:
    __break(1u);
    goto LABEL_451;
  }
  v97 = *(_BYTE *)(_Records_GDEntityClass_records + 0x7C8);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_451:
    __break(1u);
    goto LABEL_452;
  }
  v98 = sub_1AE500630();
  *(_QWORD *)(v3 + 1040) = v95;
  *(_QWORD *)(v3 + 1048) = v7;
  *(_QWORD *)(v3 + 1056) = v98;
  *(_QWORD *)(v3 + 1064) = v99;
  *(_BYTE *)(v3 + 1072) = v97;
  v100 = type metadata accessor for CustomGraphGoingToBedActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F680, type metadata accessor for CustomGraphGoingToBedActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphGoingToBedActivityEvent);
  *(_QWORD *)(v3 + 1080) = v100;
  *(_QWORD *)(v3 + 1088) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_452:
    __break(1u);
    goto LABEL_453;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x800) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x808) >= 2889)
  {
    goto LABEL_369;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_453:
    __break(1u);
    goto LABEL_454;
  }
  v102 = *(_BYTE *)(_Records_GDEntityClass_records + 0x7F8);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_454:
    __break(1u);
    goto LABEL_455;
  }
  v103 = sub_1AE500630();
  *(_QWORD *)(v3 + 1096) = v100;
  *(_QWORD *)(v3 + 1104) = v7;
  *(_QWORD *)(v3 + 1112) = v103;
  *(_QWORD *)(v3 + 1120) = v104;
  *(_BYTE *)(v3 + 1128) = v102;
  v105 = type metadata accessor for CustomGraphExercisingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F658, type metadata accessor for CustomGraphExercisingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphExercisingActivityEvent);
  *(_QWORD *)(v3 + 1136) = v105;
  *(_QWORD *)(v3 + 1144) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_455:
    __break(1u);
    goto LABEL_456;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xB30) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0xB38) >= 2889)
  {
    goto LABEL_370;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_456:
    __break(1u);
    goto LABEL_457;
  }
  v107 = *(_BYTE *)(_Records_GDEntityClass_records + 0xB28);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_457:
    __break(1u);
    goto LABEL_458;
  }
  v108 = sub_1AE500630();
  *(_QWORD *)(v3 + 1152) = v105;
  *(_QWORD *)(v3 + 1160) = v7;
  *(_QWORD *)(v3 + 1168) = v108;
  *(_QWORD *)(v3 + 1176) = v109;
  *(_BYTE *)(v3 + 1184) = v107;
  v110 = type metadata accessor for CustomGraphCommuteActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F450, type metadata accessor for CustomGraphCommuteActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphCommuteActivityEvent);
  *(_QWORD *)(v3 + 1192) = v110;
  *(_QWORD *)(v3 + 1200) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_458:
    __break(1u);
    goto LABEL_459;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xB48) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0xB50) >= 2889)
  {
    goto LABEL_371;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_459:
    __break(1u);
    goto LABEL_460;
  }
  v112 = *(_BYTE *)(_Records_GDEntityClass_records + 0xB40);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_460:
    __break(1u);
    goto LABEL_461;
  }
  v113 = sub_1AE500630();
  *(_QWORD *)(v3 + 1208) = v110;
  *(_QWORD *)(v3 + 1216) = v7;
  *(_QWORD *)(v3 + 1224) = v113;
  *(_QWORD *)(v3 + 1232) = v114;
  *(_BYTE *)(v3 + 1240) = v112;
  v115 = type metadata accessor for CustomGraphDiningActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F3C0, type metadata accessor for CustomGraphDiningActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphDiningActivityEvent);
  *(_QWORD *)(v3 + 1248) = v115;
  *(_QWORD *)(v3 + 1256) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_461:
    __break(1u);
    goto LABEL_462;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xB60) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0xB68) >= 2889)
  {
    goto LABEL_372;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_462:
    __break(1u);
    goto LABEL_463;
  }
  v117 = *(_BYTE *)(_Records_GDEntityClass_records + 0xB58);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_463:
    __break(1u);
    goto LABEL_464;
  }
  v118 = sub_1AE500630();
  *(_QWORD *)(v3 + 1264) = v115;
  *(_QWORD *)(v3 + 1272) = v7;
  *(_QWORD *)(v3 + 1280) = v118;
  *(_QWORD *)(v3 + 1288) = v119;
  *(_BYTE *)(v3 + 1296) = v117;
  v120 = type metadata accessor for CustomGraphAttendingAPerformanceActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F7F0, type metadata accessor for CustomGraphAttendingAPerformanceActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphAttendingAPerformanceActivityEvent);
  *(_QWORD *)(v3 + 1304) = v120;
  *(_QWORD *)(v3 + 1312) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_464:
    __break(1u);
    goto LABEL_465;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xB78) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0xB80) >= 2889)
  {
    goto LABEL_373;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_465:
    __break(1u);
    goto LABEL_466;
  }
  v122 = *(_BYTE *)(_Records_GDEntityClass_records + 0xB70);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_466:
    __break(1u);
    goto LABEL_467;
  }
  v123 = sub_1AE500630();
  *(_QWORD *)(v3 + 1320) = v120;
  *(_QWORD *)(v3 + 1328) = v7;
  *(_QWORD *)(v3 + 1336) = v123;
  *(_QWORD *)(v3 + 1344) = v124;
  *(_BYTE *)(v3 + 1352) = v122;
  v125 = type metadata accessor for CustomGraphStationaryActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F6C8, type metadata accessor for CustomGraphStationaryActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphStationaryActivityEvent);
  *(_QWORD *)(v3 + 1360) = v125;
  *(_QWORD *)(v3 + 1368) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_467:
    __break(1u);
    goto LABEL_468;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xBF0) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0xBF8) >= 2889)
  {
    goto LABEL_374;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_468:
    __break(1u);
    goto LABEL_469;
  }
  v127 = *(_BYTE *)(_Records_GDEntityClass_records + 0xBE8);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_469:
    __break(1u);
    goto LABEL_470;
  }
  v128 = sub_1AE500630();
  *(_QWORD *)(v3 + 1376) = v125;
  *(_QWORD *)(v3 + 1384) = v7;
  *(_QWORD *)(v3 + 1392) = v128;
  *(_QWORD *)(v3 + 1400) = v129;
  *(_BYTE *)(v3 + 1408) = v127;
  v130 = type metadata accessor for CustomGraphLocationVisitActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F7A8, type metadata accessor for CustomGraphLocationVisitActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphLocationVisitActivityEvent);
  *(_QWORD *)(v3 + 1416) = v130;
  *(_QWORD *)(v3 + 1424) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_470:
    __break(1u);
    goto LABEL_471;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x860) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x868) >= 2889)
  {
    goto LABEL_375;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_471:
    __break(1u);
    goto LABEL_472;
  }
  v132 = *(_BYTE *)(_Records_GDEntityClass_records + 0x858);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_472:
    __break(1u);
    goto LABEL_473;
  }
  v133 = sub_1AE500630();
  *(_QWORD *)(v3 + 1432) = v130;
  *(_QWORD *)(v3 + 1440) = v7;
  *(_QWORD *)(v3 + 1448) = v133;
  *(_QWORD *)(v3 + 1456) = v134;
  *(_BYTE *)(v3 + 1464) = v132;
  v135 = type metadata accessor for CustomGraphWalkingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F518, type metadata accessor for CustomGraphWalkingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphWalkingActivityEvent);
  *(_QWORD *)(v3 + 1472) = v135;
  *(_QWORD *)(v3 + 1480) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_473:
    __break(1u);
    goto LABEL_474;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x878) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x880) >= 2889)
  {
    goto LABEL_376;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_474:
    __break(1u);
    goto LABEL_475;
  }
  v137 = *(_BYTE *)(_Records_GDEntityClass_records + 0x870);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_475:
    __break(1u);
    goto LABEL_476;
  }
  v138 = sub_1AE500630();
  *(_QWORD *)(v3 + 1488) = v135;
  *(_QWORD *)(v3 + 1496) = v7;
  *(_QWORD *)(v3 + 1504) = v138;
  *(_QWORD *)(v3 + 1512) = v139;
  *(_BYTE *)(v3 + 1520) = v137;
  v140 = type metadata accessor for CustomGraphRunningActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F4F0, type metadata accessor for CustomGraphRunningActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphRunningActivityEvent);
  *(_QWORD *)(v3 + 1528) = v140;
  *(_QWORD *)(v3 + 1536) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_476:
    __break(1u);
    goto LABEL_477;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x890) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x898) >= 2889)
  {
    goto LABEL_377;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_477:
    __break(1u);
    goto LABEL_478;
  }
  v142 = *(_BYTE *)(_Records_GDEntityClass_records + 0x888);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_478:
    __break(1u);
    goto LABEL_479;
  }
  v143 = sub_1AE500630();
  *(_QWORD *)(v3 + 1544) = v140;
  *(_QWORD *)(v3 + 1552) = v7;
  *(_QWORD *)(v3 + 1560) = v143;
  *(_QWORD *)(v3 + 1568) = v144;
  *(_BYTE *)(v3 + 1576) = v142;
  v145 = type metadata accessor for CustomGraphBicyclingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F618, type metadata accessor for CustomGraphBicyclingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphBicyclingActivityEvent);
  *(_QWORD *)(v3 + 1584) = v145;
  *(_QWORD *)(v3 + 1592) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_479:
    __break(1u);
    goto LABEL_480;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x8A8) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x8B0) >= 2889)
  {
    goto LABEL_378;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_480:
    __break(1u);
    goto LABEL_481;
  }
  v147 = *(_BYTE *)(_Records_GDEntityClass_records + 0x8A0);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_481:
    __break(1u);
    goto LABEL_482;
  }
  v148 = sub_1AE500630();
  *(_QWORD *)(v3 + 1600) = v145;
  *(_QWORD *)(v3 + 1608) = v7;
  *(_QWORD *)(v3 + 1616) = v148;
  *(_QWORD *)(v3 + 1624) = v149;
  *(_BYTE *)(v3 + 1632) = v147;
  v150 = type metadata accessor for CustomGraphHikingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F430, type metadata accessor for CustomGraphHikingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphHikingActivityEvent);
  *(_QWORD *)(v3 + 1640) = v150;
  *(_QWORD *)(v3 + 1648) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_482:
    __break(1u);
    goto LABEL_483;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x830) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x838) >= 2889)
  {
    goto LABEL_379;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_483:
    __break(1u);
    goto LABEL_484;
  }
  v152 = *(_BYTE *)(_Records_GDEntityClass_records + 0x828);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_484:
    __break(1u);
    goto LABEL_485;
  }
  v153 = sub_1AE500630();
  *(_QWORD *)(v3 + 1656) = v150;
  *(_QWORD *)(v3 + 1664) = v7;
  *(_QWORD *)(v3 + 1672) = v153;
  *(_QWORD *)(v3 + 1680) = v154;
  *(_BYTE *)(v3 + 1688) = v152;
  v155 = type metadata accessor for CustomGraphOnThePhoneActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F6A8, type metadata accessor for CustomGraphOnThePhoneActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphOnThePhoneActivityEvent);
  *(_QWORD *)(v3 + 1696) = v155;
  *(_QWORD *)(v3 + 1704) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_485:
    __break(1u);
    goto LABEL_486;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x848) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x850) >= 2889)
  {
    goto LABEL_380;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_486:
    __break(1u);
    goto LABEL_487;
  }
  v157 = *(_BYTE *)(_Records_GDEntityClass_records + 0x840);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_487:
    __break(1u);
LABEL_488:
    __break(1u);
    goto LABEL_489;
  }
  v158 = sub_1AE500630();
  *(_QWORD *)(v3 + 1712) = v155;
  *(_QWORD *)(v3 + 1720) = v7;
  *(_QWORD *)(v3 + 1728) = v158;
  *(_QWORD *)(v3 + 1736) = v159;
  *(_BYTE *)(v3 + 1744) = v157;
  v160 = type metadata accessor for CustomGraphFacetimeActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F580, type metadata accessor for CustomGraphFacetimeActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphFacetimeActivityEvent);
  *(_QWORD *)(v3 + 1752) = v160;
  *(_QWORD *)(v3 + 1760) = result;
  if (!_Records_GDEntityClass_records)
    goto LABEL_488;
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xCB0) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0xCB8) >= 2889)
  {
    goto LABEL_382;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_489:
    __break(1u);
    goto LABEL_490;
  }
  v162 = *(_BYTE *)(_Records_GDEntityClass_records + 0xCA8);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_490:
    __break(1u);
LABEL_491:
    __break(1u);
    goto LABEL_492;
  }
  v163 = sub_1AE500630();
  *(_QWORD *)(v3 + 1768) = v160;
  *(_QWORD *)(v3 + 1776) = v7;
  *(_QWORD *)(v3 + 1784) = v163;
  *(_QWORD *)(v3 + 1792) = v164;
  *(_BYTE *)(v3 + 1800) = v162;
  v165 = type metadata accessor for CustomGraphDrivingActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F478, type metadata accessor for CustomGraphDrivingActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphDrivingActivityEvent);
  *(_QWORD *)(v3 + 1808) = v165;
  *(_QWORD *)(v3 + 1816) = result;
  if (!_Records_GDEntityClass_records)
    goto LABEL_491;
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xCE0) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0xCE8) >= 2889)
  {
    goto LABEL_384;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_492:
    __break(1u);
    goto LABEL_493;
  }
  v167 = *(_BYTE *)(_Records_GDEntityClass_records + 0xCD8);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_493:
    __break(1u);
    goto LABEL_494;
  }
  v168 = sub_1AE500630();
  *(_QWORD *)(v3 + 1824) = v165;
  *(_QWORD *)(v3 + 1832) = v7;
  *(_QWORD *)(v3 + 1840) = v168;
  *(_QWORD *)(v3 + 1848) = v169;
  *(_BYTE *)(v3 + 1856) = v167;
  v170 = type metadata accessor for CustomGraphBehaviorActivityEvent(0);
  result = sub_1AE512FA0(&qword_1ED30F560, type metadata accessor for CustomGraphBehaviorActivityEvent, (uint64_t)&protocol conformance descriptor for CustomGraphBehaviorActivityEvent);
  *(_QWORD *)(v3 + 1864) = v170;
  *(_QWORD *)(v3 + 1872) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_494:
    __break(1u);
    goto LABEL_495;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x428) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x430) >= 2889)
  {
    goto LABEL_385;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_495:
    __break(1u);
    goto LABEL_496;
  }
  v172 = *(_BYTE *)(_Records_GDEntityClass_records + 0x420);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_496:
    __break(1u);
    goto LABEL_497;
  }
  v173 = sub_1AE500630();
  *(_QWORD *)(v3 + 1880) = v170;
  *(_QWORD *)(v3 + 1888) = v7;
  *(_QWORD *)(v3 + 1896) = v173;
  *(_QWORD *)(v3 + 1904) = v174;
  *(_BYTE *)(v3 + 1912) = v172;
  result = sub_1AE68F310();
  *(_QWORD *)(v3 + 1920) = &type metadata for CustomGraphCalendarEvent;
  *(_QWORD *)(v3 + 1928) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_497:
    __break(1u);
    goto LABEL_498;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xB0) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0xB0 + 8) >= 2889)
  {
    goto LABEL_386;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_498:
    __break(1u);
    goto LABEL_499;
  }
  v176 = *(_BYTE *)(_Records_GDEntityClass_records + 0xA8);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_499:
    __break(1u);
    goto LABEL_500;
  }
  v177 = sub_1AE500630();
  *(_QWORD *)(v3 + 1936) = v170;
  *(_QWORD *)(v3 + 1944) = v7;
  *(_QWORD *)(v3 + 1952) = v177;
  *(_QWORD *)(v3 + 1960) = v178;
  *(_BYTE *)(v3 + 1968) = v176;
  result = sub_1AE68F3AC();
  *(_QWORD *)(v3 + 1976) = &type metadata for CustomGraphLocation;
  *(_QWORD *)(v3 + 1984) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_500:
    __break(1u);
    goto LABEL_501;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x2F0) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x2F8) >= 2889)
  {
    goto LABEL_387;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_501:
    __break(1u);
    goto LABEL_502;
  }
  v180 = *(_BYTE *)(_Records_GDEntityClass_records + 0x2E8);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_502:
    __break(1u);
    goto LABEL_503;
  }
  v181 = sub_1AE500630();
  *(_QWORD *)(v3 + 1992) = v170;
  *(_QWORD *)(v3 + 2000) = v7;
  *(_QWORD *)(v3 + 2008) = v181;
  *(_QWORD *)(v3 + 2016) = v182;
  *(_BYTE *)(v3 + 2024) = v180;
  result = sub_1AE68F40C();
  *(_QWORD *)(v3 + 2032) = &type metadata for CustomGraphOrganization;
  *(_QWORD *)(v3 + 2040) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_503:
    __break(1u);
    goto LABEL_504;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xC98) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0xCA0) >= 2889)
  {
    goto LABEL_388;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_504:
    __break(1u);
    goto LABEL_505;
  }
  v184 = *(_BYTE *)(_Records_GDEntityClass_records + 0xC90);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_505:
    __break(1u);
    goto LABEL_506;
  }
  v185 = sub_1AE500630();
  *(_QWORD *)(v3 + 2048) = v170;
  *(_QWORD *)(v3 + 2056) = v7;
  *(_QWORD *)(v3 + 2064) = v185;
  *(_QWORD *)(v3 + 2072) = v186;
  *(_BYTE *)(v3 + 2080) = v184;
  result = sub_1AE68F46C();
  *(_QWORD *)(v3 + 2088) = &type metadata for CustomGraphSportsTeam;
  *(_QWORD *)(v3 + 2096) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_506:
    __break(1u);
    goto LABEL_507;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x278) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x280) >= 2889)
  {
    goto LABEL_389;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_507:
    __break(1u);
    goto LABEL_508;
  }
  v188 = *(_BYTE *)(_Records_GDEntityClass_records + 0x270);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_508:
    __break(1u);
    goto LABEL_509;
  }
  v189 = sub_1AE500630();
  *(_QWORD *)(v3 + 2104) = v170;
  *(_QWORD *)(v3 + 2112) = v7;
  *(_QWORD *)(v3 + 2120) = v189;
  *(_QWORD *)(v3 + 2128) = v190;
  *(_BYTE *)(v3 + 2136) = v188;
  v191 = type metadata accessor for CustomGraphPerson(0);
  result = sub_1AE512FA0(&qword_1ED30F0C0, type metadata accessor for CustomGraphPerson, (uint64_t)&protocol conformance descriptor for CustomGraphPerson);
  *(_QWORD *)(v3 + 2144) = v191;
  *(_QWORD *)(v3 + 2152) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_509:
    __break(1u);
    goto LABEL_510;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0xE0) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0xE0 + 8) >= 2889)
  {
    goto LABEL_390;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_510:
    __break(1u);
    goto LABEL_511;
  }
  v193 = *(_BYTE *)(_Records_GDEntityClass_records + 0xD8);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_511:
    __break(1u);
    goto LABEL_512;
  }
  v194 = sub_1AE500630();
  *(_QWORD *)(v3 + 2160) = v191;
  *(_QWORD *)(v3 + 2168) = v7;
  *(_QWORD *)(v3 + 2176) = v194;
  *(_QWORD *)(v3 + 2184) = v195;
  *(_BYTE *)(v3 + 2192) = v193;
  result = sub_1AE68F508();
  *(_QWORD *)(v3 + 2200) = &type metadata for CustomGraphTopic;
  *(_QWORD *)(v3 + 2208) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_512:
    __break(1u);
    goto LABEL_513;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x578) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x580) >= 2889)
  {
    goto LABEL_391;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_513:
    __break(1u);
    goto LABEL_514;
  }
  v197 = *(_BYTE *)(_Records_GDEntityClass_records + 0x570);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_514:
    __break(1u);
    goto LABEL_515;
  }
  v198 = sub_1AE500630();
  *(_QWORD *)(v3 + 2216) = v191;
  *(_QWORD *)(v3 + 2224) = v7;
  *(_QWORD *)(v3 + 2232) = v198;
  *(_QWORD *)(v3 + 2240) = v199;
  *(_BYTE *)(v3 + 2248) = v197;
  result = sub_1AE68F568();
  *(_QWORD *)(v3 + 2256) = &type metadata for CustomGraphSong;
  *(_QWORD *)(v3 + 2264) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_515:
    __break(1u);
    goto LABEL_516;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x500) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x508) >= 2889)
  {
    goto LABEL_392;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_516:
    __break(1u);
    goto LABEL_517;
  }
  v201 = *(_BYTE *)(_Records_GDEntityClass_records + 0x4F8);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_517:
    __break(1u);
    goto LABEL_518;
  }
  v202 = sub_1AE500630();
  *(_QWORD *)(v3 + 2272) = v191;
  *(_QWORD *)(v3 + 2280) = v7;
  *(_QWORD *)(v3 + 2288) = v202;
  *(_QWORD *)(v3 + 2296) = v203;
  *(_BYTE *)(v3 + 2304) = v201;
  result = sub_1AE68F5C8();
  *(_QWORD *)(v3 + 2312) = &type metadata for CustomGraphActivityEventType;
  *(_QWORD *)(v3 + 2320) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_518:
    __break(1u);
    goto LABEL_519;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x8C0) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x8C8) >= 2889)
  {
    goto LABEL_393;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_519:
    __break(1u);
    goto LABEL_520;
  }
  v205 = *(_BYTE *)(_Records_GDEntityClass_records + 0x8B8);
  result = sub_1AE4FD008();
  if (!_Records_GDEntityClass_labels)
  {
LABEL_520:
    __break(1u);
    goto LABEL_521;
  }
  v206 = sub_1AE500630();
  *(_QWORD *)(v3 + 2328) = v191;
  *(_QWORD *)(v3 + 2336) = v7;
  *(_QWORD *)(v3 + 2344) = v206;
  *(_QWORD *)(v3 + 2352) = v207;
  *(_BYTE *)(v3 + 2360) = v205;
  result = sub_1AE68F628();
  *(_QWORD *)(v3 + 2368) = &type metadata for CustomGraphModeOfTransportation;
  *(_QWORD *)(v3 + 2376) = result;
  if (!_Records_GDEntityClass_records)
  {
LABEL_521:
    __break(1u);
    goto LABEL_522;
  }
  if (*(uint64_t *)(_Records_GDEntityClass_records + 0x470) >= 1336
    || *(_QWORD *)(_Records_GDEntityClass_records + 0x478) >= 2889)
  {
    goto LABEL_394;
  }
  if (!_Records_GDEntityClass_classIds[0])
  {
LABEL_522:
    __break(1u);
    goto LABEL_523;
  }
  v209 = *(_BYTE *)(_Records_GDEntityClass_records + 0x468);
  result = sub_1AE4FD008();
  if (_Records_GDEntityClass_labels)
  {
    v211 = result;
    v212 = v210;
    v213 = sub_1AE925F8C();
    *(_QWORD *)(v3 + 2384) = v211;
    *(_QWORD *)(v3 + 2392) = v212;
    *(_QWORD *)(v3 + 2400) = v213;
    *(_QWORD *)(v3 + 2408) = v214;
    *(_BYTE *)(v3 + 2416) = v209;
    v215 = sub_1AE68F688();
    *(_QWORD *)(v3 + 2424) = &type metadata for CustomGraphSoftware;
    *(_QWORD *)(v3 + 2432) = v215;
    sub_1AE501548(&qword_1ED30EE88);
    sub_1AE60DC3C();
    v216 = sub_1AE925C98();
    result = ObjectSynthesisDictionaryMapping.init(mapping:)(v216, &v218);
    *v217 = v218;
    return result;
  }
LABEL_523:
  __break(1u);
  return result;
}

uint64_t ObjectSynthesisDictionaryMapping.init(mapping:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  sub_1AE501548(&qword_1ED30EC58);
  sub_1AE60DC3C();
  result = sub_1AE925C98();
  v6 = 0;
  v8 = a1 + 64;
  v7 = *(_QWORD *)(a1 + 64);
  v29 = result;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v7;
  v12 = (unint64_t)(v9 + 63) >> 6;
  if ((v10 & v7) == 0)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v13 | (v6 << 6); ; i = __clz(__rbit64(v16)) + (v6 << 6))
  {
    v18 = *(_QWORD *)(a1 + 48) + 40 * i;
    v19 = *(_OWORD *)v18;
    v20 = *(_QWORD *)(v18 + 16);
    v21 = *(_QWORD *)(v18 + 24);
    LOBYTE(v18) = *(_BYTE *)(v18 + 32);
    v22 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * i);
    v23 = *v22;
    v24 = v22[1];
    v25 = v19;
    v26 = v20;
    v27 = v21;
    v28 = v18;
    result = ObjectSynthesisDictionaryMapping.set<A>(entityClass:graphObjectType:)((uint64_t)&v25, v5, v23, v24);
    if (v11)
      goto LABEL_4;
LABEL_5:
    v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v15 >= v12)
      goto LABEL_21;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v6;
    if (!v16)
    {
      v6 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_21;
      v16 = *(_QWORD *)(v8 + 8 * v6);
      if (!v16)
      {
        v6 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_21;
        v16 = *(_QWORD *)(v8 + 8 * v6);
        if (!v16)
          break;
      }
    }
LABEL_18:
    v11 = (v16 - 1) & v16;
  }
  v17 = v15 + 3;
  if (v17 >= v12)
  {
LABEL_21:
    result = swift_release();
    *a2 = v29;
    return result;
  }
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v6 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    v6 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v6 >= v12)
      goto LABEL_21;
    v16 = *(_QWORD *)(v8 + 8 * v6);
    ++v17;
    if (v16)
      goto LABEL_18;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t ObjectSynthesisDictionaryMapping.set<A>(entityClass:graphObjectType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t (*v13)(_QWORD *);
  uint64_t v14;
  void (*v15)(_OWORD *, uint64_t);
  uint64_t v16;
  _OWORD v17[2];
  char v18;

  v6 = *(_OWORD *)(a1 + 16);
  v17[0] = *(_OWORD *)a1;
  v17[1] = v6;
  v18 = *(_BYTE *)(a1 + 32);
  v7 = sub_1AE4F9148();
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  v8 = sub_1AE4F9148();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v9 = sub_1AE4F9148();
  *(_QWORD *)(v9 + 16) = sub_1AE828E0C;
  *(_QWORD *)(v9 + 24) = v7;
  v10 = sub_1AE4F9148();
  *(_QWORD *)(v10 + 16) = sub_1AE828F38;
  *(_QWORD *)(v10 + 24) = v8;
  sub_1AE5C7880((uint64_t)v17);
  *(_QWORD *)&v12 = a3;
  *((_QWORD *)&v12 + 1) = a4;
  v13 = sub_1AE828F74;
  v14 = v9;
  v15 = sub_1AE828F98;
  v16 = v10;
  sub_1AE654EB4(&v12, (uint64_t)v17);
  return sub_1AE525EF8((uint64_t)v17);
}

uint64_t sub_1AE828B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  _BYTE v10[32];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1AE92670C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-v7];
  sub_1AE524160(a1, (uint64_t)v10);
  if (swift_dynamicCast())
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 0, 1, AssociatedTypeWitness);
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a2, v8, AssociatedTypeWitness);
  }
  else
  {
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 1, 1, AssociatedTypeWitness);
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    result = sub_1AE926AB4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE828CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(uint64_t *, char *, uint64_t, ValueMetadata *, unint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)&v18 - v12;
  v19 = a1;
  swift_retain();
  sub_1AE828B78(a2, (uint64_t)v13);
  v14 = *(uint64_t (**)(uint64_t *, char *, uint64_t, ValueMetadata *, unint64_t, _UNKNOWN **, uint64_t, uint64_t))(a4 + 48);
  a5[3] = a3;
  a5[4] = a4;
  sub_1AE52F6A8(a5);
  v15 = sub_1AE501548(&qword_1EEDA4090);
  v16 = sub_1AE829820();
  result = v14(&v19, v13, v15, &type metadata for ExtendedTriple, v16, &protocol witness table for ExtendedTriple, a3, a4);
  if (v5)
    return sub_1AE7739BC((uint64_t)a5);
  return result;
}

uint64_t sub_1AE828E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1AE828CE4(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_1AE828E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  _BYTE *v15;
  uint64_t (*v16)(void (*)(uint64_t, uint64_t), _BYTE *, _BYTE *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t result;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = &v18[-v14];
  v19 = a1;
  v20 = a2;
  sub_1AE828B78(a3, (uint64_t)&v18[-v14]);
  v16 = *(uint64_t (**)(void (*)(uint64_t, uint64_t), _BYTE *, _BYTE *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a5 + 56);
  a6[3] = a4;
  a6[4] = a5;
  sub_1AE52F6A8(a6);
  result = v16(sub_1AE6A18DC, v18, v15, &type metadata for ExtendedTriple, &protocol witness table for ExtendedTriple, a4, a5);
  if (v6)
    return sub_1AE7739BC((uint64_t)a6);
  return result;
}

uint64_t sub_1AE828F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1AE828E24(a1, a2, a3, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_1AE828F50()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AE828F74(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

void sub_1AE828F98(_OWORD *a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t (*)(uint64_t, uint64_t), _OWORD *, uint64_t);
  _OWORD v4[2];

  v3 = *(void (**)(uint64_t (*)(uint64_t, uint64_t), _OWORD *, uint64_t))(v2 + 16);
  v4[1] = *a1;
  v3(sub_1AE8297D4, v4, a2);
  sub_1AE4FBFF0();
}

uint64_t sub_1AE828FD0(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *))
{
  uint64_t v6;
  _QWORD v8[2];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v8[0] = sub_1AE8297F0;
  v8[1] = v6;
  a3(v8);
  return swift_release();
}

Swift::Void __swiftcall ObjectSynthesisDictionaryMapping.clear()()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1AE501548(&qword_1ED30EC58);
  sub_1AE60DC3C();
  v1 = sub_1AE925C98();
  swift_bridgeObjectRelease();
  *v0 = v1;
}

uint64_t ObjectSynthesisDictionaryMapping.remove(entityClass:)(__int128 *a1)
{
  __int128 v1;
  uint64_t result;
  _OWORD v3[3];
  _QWORD v4[3];
  __int128 v5;
  __int128 v6;
  char v7;

  v1 = a1[1];
  v5 = *a1;
  v6 = v1;
  v7 = *((_BYTE *)a1 + 32);
  sub_1AE654738(v3);
  result = sub_1AE829678((uint64_t)v3, (uint64_t)v4);
  if (v4[0])
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t ObjectSynthesisDictionaryMapping.type(for:)(uint64_t a1)
{
  uint64_t *v1;
  __int128 v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  _OWORD v8[2];
  char v9;

  v9 = *(_BYTE *)(a1 + 32);
  v2 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v2;
  v3 = *v1;
  if (!*(_QWORD *)(v3 + 16))
    return 0;
  sub_1AE5C7880((uint64_t)v8);
  v4 = sub_1AE536E90();
  if ((v5 & 1) == 0)
  {
    sub_1AE525EF8((uint64_t)v8);
    return 0;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 48 * v4);
  sub_1AE525EF8((uint64_t)v8);
  return v6;
}

void ObjectSynthesisDictionaryMapping.factory<A, B>(for:triples:initializationResources:)(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[11];
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *, uint64_t);
  _OWORD v28[2];
  char v29;
  uint64_t v30;

  v24[8] = a2;
  v24[10] = a8;
  v25 = a3;
  v12 = *((_OWORD *)a1 + 1);
  v28[0] = *(_OWORD *)a1;
  v28[1] = v12;
  v13 = *((_BYTE *)a1 + 32);
  v29 = v13;
  v15 = *a1;
  v14 = a1[1];
  v16 = a1[2];
  sub_1AE503AD4(a1[3]);
  sub_1AE4FE140();
  sub_1AE525EF8((uint64_t)v28);
  v17 = sub_1AE502028();
  if (v26)
  {
    v18 = v27;
    MEMORY[0x1E0C80A78](v17);
    v24[2] = a4;
    v24[3] = a5;
    v24[4] = a6;
    v24[5] = a7;
    v20 = sub_1AE57E0E0((uint64_t)sub_1AE8296C0, (uint64_t)v24, a4, (uint64_t)&type metadata for ExtendedTriple, MEMORY[0x1E0DEDCE8], a6, MEMORY[0x1E0DEDD18], v19);
    sub_1AE501548(&qword_1EEDA2CE0);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v20;
    v30 = v21;
    v18(&v30, v25);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_1AE6A4010();
    sub_1AE4F6778();
    *(_QWORD *)v22 = v15;
    *(_QWORD *)(v22 + 8) = v14;
    v23 = v24[7];
    *(_QWORD *)(v22 + 16) = v16;
    *(_QWORD *)(v22 + 24) = v23;
    *(_BYTE *)(v22 + 32) = v13;
    sub_1AE5C7880((uint64_t)v28);
    swift_willThrow();
  }
  sub_1AE4F667C();
}

void ObjectSynthesisDictionaryMapping.factory<A>(for:enumerator:initializationResources:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[6];
  _QWORD v20[2];
  _QWORD *v21;
  uint64_t v22;
  _QWORD v23[13];
  _OWORD v24[2];
  char v25;

  v10 = *((_OWORD *)a1 + 1);
  v24[0] = *(_OWORD *)a1;
  v24[1] = v10;
  v11 = *((_BYTE *)a1 + 32);
  v25 = v11;
  v13 = *a1;
  v12 = a1[1];
  v21 = (_QWORD *)a1[2];
  v22 = a4;
  sub_1AE503AD4(a1[3]);
  sub_1AE4FE140();
  sub_1AE525EF8((uint64_t)v24);
  v14 = sub_1AE502028();
  if (v23[8])
  {
    v21 = v20;
    v15 = (void (*)(_QWORD *, uint64_t))v23[12];
    MEMORY[0x1E0C80A78](v14);
    v19[2] = a5;
    v19[3] = a6;
    v19[4] = a2;
    v19[5] = a3;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_1AE8296F4;
    *(_QWORD *)(v16 + 24) = v19;
    v23[0] = sub_1AE829714;
    v23[1] = v16;
    v15(v23, v22);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_1AE6A4010();
    sub_1AE4F6778();
    *(_QWORD *)v17 = v13;
    *(_QWORD *)(v17 + 8) = v12;
    v18 = v20[1];
    *(_QWORD *)(v17 + 16) = v21;
    *(_QWORD *)(v17 + 24) = v18;
    *(_BYTE *)(v17 + 32) = v11;
    sub_1AE5C7880((uint64_t)v24);
    swift_willThrow();
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE829478(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t a1), _QWORD *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t result;
  char isEscapingClosureAtFileLocation;
  _QWORD v15[6];

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v15[2] = a5;
  v15[3] = a6;
  v15[4] = sub_1AE829790;
  v15[5] = v12;
  a3(sub_1AE8297B4, v15);
  if (v6)
    return swift_release();
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1AE82955C(uint64_t a1, uint64_t (*a2)(__int128 *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v6;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;

  sub_1AE6694E4(a4, a5, (uint64_t)&v20);
  v8 = v20;
  v9 = v21;
  v10 = v22;
  v11 = v23;
  v12 = v24;
  v13 = v25;
  v14 = v26;
  v15 = v27;
  v16 = v28;
  v17 = v29;
  v18 = v30;
  v19 = v31;
  v6 = a2(&v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

void sub_1AE829650(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  ObjectSynthesisDictionaryMapping.factory<A, B>(for:triples:initializationResources:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1AE829664(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  ObjectSynthesisDictionaryMapping.factory<A>(for:enumerator:initializationResources:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1AE829678(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EEDA2CD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1AE8296C0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1AE6694E4(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 40), a1).n128_u64[0];
  return result;
}

uint64_t sub_1AE8296F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AE829478(a1, a2, *(void (**)(uint64_t (*)(uint64_t), _QWORD *))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_1AE829714(_OWORD *a1)
{
  uint64_t v1;
  void (*v2)(uint64_t (*)(), _OWORD *);
  _OWORD v3[2];

  v2 = *(void (**)(uint64_t (*)(), _OWORD *))(v1 + 16);
  v3[1] = *a1;
  v2(sub_1AE829758, v3);
  sub_1AE4FBFF0();
}

ValueMetadata *type metadata accessor for ObjectSynthesisDictionaryMapping()
{
  return &type metadata for ObjectSynthesisDictionaryMapping;
}

uint64_t sub_1AE829758()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t var1;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&var1);
  if (!v1)
    v2 = var1;
  return v2 & 1;
}

uint64_t sub_1AE829790()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1AE8297B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE82955C(a1, *(uint64_t (**)(__int128 *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_1AE8297D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AE828FD0(a1, a2, *(void (**)(_QWORD *))(v2 + 16));
}

uint64_t sub_1AE8297F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
    *a1 = result & 1;
  return result;
}

unint64_t sub_1AE829820()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEDA4098[0];
  if (!qword_1EEDA4098[0])
  {
    v1 = sub_1AE523CF0(&qword_1EEDA4090);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEC210], v1);
    atomic_store(result, qword_1EEDA4098);
  }
  return result;
}

unint64_t sub_1AE829868(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE6A4010();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for ObjectSynthesisMapError()
{
  return &type metadata for ObjectSynthesisMapError;
}

uint64_t dispatch thunk of ObjectSynthesisMap.type(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ObjectSynthesisMap.factory<A, B>(for:triples:initializationResources:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 16))(a1);
}

uint64_t dispatch thunk of ObjectSynthesisMap.factory<A>(for:enumerator:initializationResources:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t OneOf.init(_:potentiallyPreferred:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v8 = sub_1AE92670C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v20 - v13;
  *(_QWORD *)a4 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v12, 1, a3) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1AE829A98();
    swift_bridgeObjectRelease();
    v15 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v15(a2, v8);
    v15((uint64_t)v12, v8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v14, v12, a3);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v14, 0, 1, a3);
  }
  v18 = type metadata accessor for OneOf(0, a3, v16, v17);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(&a4[*(int *)(v18 + 28)], v14, v8);
}

uint64_t OneOf.projectedValue.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OneOf.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_1AE92670C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1AE829A98()
{
  uint64_t v0;

  v0 = sub_1AE9262B0();
  MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF38], v0);
  return sub_1AE9260D0();
}

uint64_t type metadata accessor for OneOf(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OneOf);
}

uint64_t OneOf.init(_:preferred:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;

  *a5 = a1;
  v7 = (uint64_t)a5 + *(int *)(type metadata accessor for OneOf(0, a3, a3, a4) + 28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v7, a2, a3);
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v7, 0, 1, a3);
}

uint64_t sub_1AE829B84()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1AE926B44();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1AE829BD8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6572726566657270;
  else
    return 7105633;
}

uint64_t sub_1AE829C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1AF454B70](&unk_1AE961360, a3);
  return sub_1AE926D9C();
}

uint64_t sub_1AE829C60(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE961360, a1);
  return sub_1AE92616C();
}

uint64_t sub_1AE829CAC()
{
  MEMORY[0x1AF454B70](&unk_1AE961360);
  return sub_1AE926184();
}

uint64_t sub_1AE829CFC()
{
  MEMORY[0x1AF454B70](&unk_1AE961360);
  return sub_1AE926178();
}

uint64_t sub_1AE829D4C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE829B84();
  *a1 = result;
  return result;
}

uint64_t sub_1AE829D78@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1AE829BD8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AE829DA0()
{
  char *v0;

  return sub_1AE829BD8(*v0);
}

uint64_t sub_1AE829DA8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AE829BD4();
  *a1 = result;
  return result;
}

uint64_t sub_1AE829DCC(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE961400, a1);
  return sub_1AE926F94();
}

uint64_t sub_1AE829E00(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE961400, a1);
  return sub_1AE926FA0();
}

void OneOf<A>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = _s10CodingKeysOMa(255, *(_QWORD *)(a2 + 16), a3, a4);
  MEMORY[0x1AF454B70](&unk_1AE961400, v5);
  sub_1AE926CF4();
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE926F4C();
  sub_1AE9262B0();
  sub_1AE5032DC();
}

void sub_1AE829F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 - 104);
  sub_1AE926CC4();
  if (v3)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 112) + 8))(v1, v0);
  }
  else
  {
    v4 = *(_QWORD *)(v2 - 112);
    *(_BYTE *)(v2 - 72) = 1;
    sub_1AE926C70();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  }
  sub_1AE4F667C();
}

uint64_t _s10CodingKeysOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn);
}

void OneOf<A>.init(from:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[9];

  v9[1] = a4;
  v9[0] = sub_1AE92670C();
  v9[4] = *(_QWORD *)(v9[0] - 8);
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v7);
  v9[3] = (char *)v9 - v8;
  v9[6] = a2;
  _s10CodingKeysOMa(255, a1, a2, a3);
  sub_1AE5032DC();
}

void sub_1AE82A05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v12 = sub_1AE926C28();
  *(_QWORD *)(v11 - 112) = v12;
  *(_QWORD *)(v11 - 160) = *(_QWORD *)(v12 - 8);
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&a9 - v14;
  *(_QWORD *)(v11 - 136) = v9;
  v18 = type metadata accessor for OneOf(0, v9, v16, v17);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F9858(v10, v10[3]);
  *(_QWORD *)(v11 - 120) = v15;
  v20 = *(_QWORD *)(v11 - 104);
  sub_1AE926F34();
  if (!v20)
  {
    *(_QWORD *)(v11 - 104) = v19;
    sub_1AE9262B0();
    *(_BYTE *)(v11 - 81) = 0;
    *(_QWORD *)(v11 - 96) = *(_QWORD *)(v11 - 128);
    sub_1AE5032DC();
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v10);
  sub_1AE4F667C();
}

void sub_1AE82A23C(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  OneOf<A>.init(from:)(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8), *(_QWORD *)(a2 - 16), a3);
}

void sub_1AE82A25C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  OneOf<A>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 16));
}

uint64_t sub_1AE82A278()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AE92670C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AE82A2F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v10;
  void *v13;
  const void *v14;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  v10 = *a2;
  *a1 = *a2;
  if (v7 > 7 || v9 != 0 || ((v7 + 8) & ~v7) + v8 > 0x18)
  {
    a1 = (uint64_t *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v13 = (void *)(((unint64_t)a1 + v7 + 8) & ~v7);
    v14 = (const void *)(((unint64_t)a2 + v7 + 8) & ~v7);
    swift_bridgeObjectRetain();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v14, 1, v4))
    {
      memcpy(v13, v14, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v13, v14, v4);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v13, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_1AE82A3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v6, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  return result;
}

_QWORD *sub_1AE82A46C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  swift_bridgeObjectRetain();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v9 = *(_QWORD *)(v5 + 64);
    else
      v9 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, v4);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v4);
  }
  return a1;
}

_QWORD *sub_1AE82A524(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  int v11;
  int v12;
  size_t v13;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
  v10 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
  v11 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v6);
  v12 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, v6);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v9, v10, v6);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v9, 0, 1, v6);
      return a1;
    }
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 24))(v9, v10, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v13 = *(_QWORD *)(v7 + 64);
  else
    v13 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(v9, v10, v13);
  return a1;
}

_QWORD *sub_1AE82A634(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  size_t v9;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v9 = *(_QWORD *)(v5 + 64);
    else
      v9 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v4);
  }
  return a1;
}

_QWORD *sub_1AE82A6E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  int v11;
  int v12;
  size_t v13;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
  v10 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
  v11 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v6);
  v12 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, v6);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v9, 0, 1, v6);
      return a1;
    }
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 40))(v9, v10, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v13 = *(_QWORD *)(v7 + 64);
  else
    v13 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(v9, v10, v13);
  return a1;
}

uint64_t sub_1AE82A7F0(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v16;
  int v17;
  uint64_t v18;
  unsigned int v19;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = v7;
  v9 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v9;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_27;
  v12 = v9 + ((v10 + 8) & ~v10);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14)
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 > 0xFF)
    {
      v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(_WORD *)((char *)a1 + v12))
        goto LABEL_27;
      goto LABEL_20;
    }
    if (v16 < 2)
    {
LABEL_27:
      if ((v7 & 0x80000000) != 0)
      {
        v19 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(((unint64_t)a1 + v10 + 8) & ~v10, v6, v4);
        if (v19 >= 2)
          return v19 - 1;
        else
          return 0;
      }
      else
      {
        v18 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v18) = -1;
        return (v18 + 1);
      }
    }
  }
  v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((_BYTE *)a1 + v12))
    goto LABEL_27;
LABEL_20:
  v17 = (v14 - 1) << v13;
  if (v12 > 3)
    v17 = 0;
  if ((_DWORD)v12)
  {
    if (v12 > 3)
      LODWORD(v12) = 4;
    __asm { BR              X12 }
  }
  return v8 + v17 + 1;
}

void sub_1AE82A95C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  size_t v13;
  char v14;
  BOOL v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  int v19;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = (*(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v12;
  v13 = v11 + v12;
  v14 = 8 * (v11 + v12);
  v15 = a3 >= v10;
  v16 = a3 - v10;
  if (v16 != 0 && v15)
  {
    if (v13 <= 3)
    {
      v17 = ((v16 + ~(-1 << v14)) >> v14) + 1;
      if (HIWORD(v17))
      {
        v6 = 4u;
      }
      else if (v17 >= 0x100)
      {
        v6 = 2;
      }
      else
      {
        v6 = v17 > 1;
      }
    }
    else
    {
      v6 = 1u;
    }
  }
  if (v10 < a2)
  {
    v18 = ~v10 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v19 = v18 & ~(-1 << v14);
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *a1 = v19;
          *((_BYTE *)a1 + 2) = BYTE2(v19);
        }
        else if ((_DWORD)v13 == 2)
        {
          *a1 = v19;
        }
        else
        {
          *(_BYTE *)a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void sub_1AE82AB98()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1AE82ABA0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1AE82ABC0()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1AE82ABC8()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1AE82ABD8()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1AE82ABE4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE82AC30 + 4 * byte_1AE961237[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE82AC64 + 4 * byte_1AE961232[v4]))();
}

uint64_t sub_1AE82AC64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE82AC6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE82AC74);
  return result;
}

uint64_t sub_1AE82AC80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE82AC88);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE82AC8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE82AC94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1AE82ACA0()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE82ACB0()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE82ACC0()
{
  JUMPOUT(0x1AF454B70);
}

ValueMetadata *type metadata accessor for OntologyContextGenerator()
{
  return &type metadata for OntologyContextGenerator;
}

uint64_t sub_1AE82ACE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t inited;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  char v83;
  _QWORD v84[5];
  unsigned __int8 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90[11];
  _QWORD __dst[12];
  uint64_t v92;

  v2 = MEMORY[0x1E0DEE9E8];
  if (*(_QWORD *)(a2 + 8))
  {
    v61 = *a1;
    v4 = *(_QWORD *)(a2 + 40);
    v3 = *(_QWORD *)(a2 + 48);
    v5 = *(_BYTE *)(a2 + 56);
    v6 = *(_QWORD *)(a2 + 64);
    v7 = *(_QWORD *)(a2 + 16);
    v92 = MEMORY[0x1E0DEE9E8];
    v89 = MEMORY[0x1E0DEE9E8];
    v8 = (_QWORD *)sub_1AE925C98();
    v63 = v7 + 56;
    v9 = 1 << *(_BYTE *)(v7 + 32);
    v10 = -1;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    v11 = v10 & *(_QWORD *)(v7 + 56);
    v64 = (unint64_t)(v9 + 63) >> 6;
    v70 = v7;
    swift_bridgeObjectRetain();
    v12 = 0;
    v69 = v6;
    v68 = v5;
    v65 = v4;
    v67 = v3;
    if (!v11)
      goto LABEL_6;
LABEL_5:
    v72 = (v11 - 1) & v11;
    v73 = v12;
    for (i = __clz(__rbit64(v11)) | (v12 << 6); ; i = __clz(__rbit64(v15)) + (v16 << 6))
    {
      v18 = (uint64_t *)(*(_QWORD *)(v70 + 48) + 32 * i);
      v20 = *v18;
      v19 = v18[1];
      v22 = v18[2];
      v21 = v18[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      sub_1AE555EFC((uint64_t)&v74, v22, v21, v23, v24, v25, v26, v27, v61, v62);
      swift_bridgeObjectRelease();
      sub_1AE4FB75C();
      swift_bridgeObjectRetain();
      swift_isUniquelyReferenced_nonNull_native();
      v74 = v8;
      v28 = sub_1AE536EDC(v22, v21);
      if (__OFADD__(v8[2], (v29 & 1) == 0))
      {
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        result = sub_1AE926DE4();
        __break(1u);
        return result;
      }
      v30 = v28;
      v31 = v29;
      sub_1AE501548(&qword_1ED30FD00);
      if ((sub_1AE926A54() & 1) != 0)
      {
        v32 = sub_1AE536EDC(v22, v21);
        if ((v31 & 1) != (v33 & 1))
          goto LABEL_61;
        v30 = v32;
      }
      v8 = v74;
      if ((v31 & 1) != 0)
      {
        v34 = (_QWORD *)(v74[7] + 16 * v30);
        swift_bridgeObjectRelease();
        *v34 = v20;
        v34[1] = v19;
      }
      else
      {
        v74[(v30 >> 6) + 8] |= 1 << v30;
        v35 = (uint64_t *)(v8[6] + 16 * v30);
        *v35 = v22;
        v35[1] = v21;
        v36 = (_QWORD *)(v8[7] + 16 * v30);
        *v36 = v20;
        v36[1] = v19;
        v37 = v8[2];
        v38 = __OFADD__(v37, 1);
        v39 = v37 + 1;
        if (v38)
          goto LABEL_53;
        v8[2] = v39;
        sub_1AE4FB75C();
      }
      sub_1AE4F76D8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v6 = v69;
      v5 = v68;
      v4 = v65;
      v3 = v67;
      v11 = v72;
      v12 = v73;
      if (v72)
        goto LABEL_5;
LABEL_6:
      v14 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_54;
      if (v14 >= v64)
        goto LABEL_30;
      v15 = *(_QWORD *)(v63 + 8 * v14);
      v16 = v12 + 1;
      if (!v15)
      {
        v16 = v12 + 2;
        if (v12 + 2 >= v64)
          goto LABEL_30;
        v15 = *(_QWORD *)(v63 + 8 * v16);
        if (!v15)
        {
          v16 = v12 + 3;
          if (v12 + 3 >= v64)
            goto LABEL_30;
          v15 = *(_QWORD *)(v63 + 8 * v16);
          if (!v15)
          {
            v17 = v12 + 4;
            if (v12 + 4 >= v64)
            {
LABEL_30:
              swift_release();
              v2 = v89;
              sub_1AE501548(&qword_1ED31BCD0);
              inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_1AE934250;
              static EntityPredicate.isA.getter();
              v41 = (uint64_t)v74;
              v42 = v75;
              swift_bridgeObjectRelease();
              *(_QWORD *)(inited + 32) = v41;
              *(_QWORD *)(inited + 40) = v42;
              sub_1AE56BB6C();
              v87 = v61;
              LOBYTE(v84[0]) = 1;
              v84[1] = -50;
              v84[2] = MEMORY[0x1E0DEE9D8];
              v84[3] = v4;
              v84[4] = v3;
              v85 = v5;
              v86 = v6;
              v74 = 0;
              v75 = v2;
              v76 = 0;
              v77 = v43;
              v78 = 0u;
              v79 = 0u;
              v80 = 0u;
              v81 = 0u;
              v82 = 0;
              v83 = 32;
              sub_1AE526540(v4, v3, v5);
              swift_bridgeObjectRetain();
              sub_1AE742238(v84, (uint64_t *)&v74, (uint64_t)&v88);
              if (v62)
              {
                swift_bridgeObjectRelease();
                sub_1AE500650();
                sub_1AE4F76D8();
                sub_1AE4F6648();
                swift_bridgeObjectRelease();
                sub_1AE4F66E8();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_bridgeObjectRelease();
                sub_1AE500650();
                sub_1AE4F76D8();
                sub_1AE4F6648();
                sub_1AE4F66E8();
                v44 = v88;
                if (!v88)
                {
                  swift_bridgeObjectRelease();
                  v44 = MEMORY[0x1E0DEE9D8];
                }
                sub_1AE4F6648();
                v45 = *(_QWORD *)(v44 + 16);
                if (v45)
                {
                  v66 = v44;
                  v46 = 32;
                  do
                  {
                    memcpy(__dst, (const void *)(v44 + v46), 0x58uLL);
                    if (v8[2])
                    {
                      v47 = __dst[3];
                      v48 = __dst[4];
                      sub_1AE562E78((uint64_t)__dst);
                      swift_bridgeObjectRetain();
                      v49 = sub_1AE536EDC(v47, v48);
                      if ((v50 & 1) != 0)
                      {
                        v52 = __dst[8];
                        v51 = __dst[9];
                        v53 = (uint64_t *)(v8[7] + 16 * v49);
                        v55 = *v53;
                        v54 = v53[1];
                        swift_bridgeObjectRetain();
                        sub_1AE4F6710();
                        if (v51)
                        {
                          v71 = v52;
                          sub_1AE4FB75C();
                          sub_1AE5568E0();
                          swift_bridgeObjectRelease();
                          sub_1AE4F6710();
                          swift_bridgeObjectRelease();
                          sub_1AE4F6648();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          if (!_Records_GDEntityPredicate_records)
                            goto LABEL_58;
                          if (*((uint64_t *)_Records_GDEntityPredicate_records + 40) >= 2674)
                            goto LABEL_56;
                          if (*((uint64_t *)_Records_GDEntityPredicate_records + 41) >= 3558)
                            goto LABEL_57;
                          if (!_Records_GDEntityPredicate_predicateIds)
                            goto LABEL_59;
                          v56 = sub_1AE925F8C();
                          if (!_Records_GDEntityPredicate_labels)
                            goto LABEL_60;
                          v58 = v56;
                          v59 = v57;
                          sub_1AE925F8C();
                          swift_bridgeObjectRelease();
                          KnosisInternalFact.init(sid:pid:oid:)(v55, v54, v58, v59, v71, v51, v90);
                          sub_1AE5568E0();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          sub_1AE4F6648();
                          sub_1AE4F67AC();
                          sub_1AE4F66E8();
                          sub_1AE4F6710();
                          v44 = v66;
                        }
                        else
                        {
                          sub_1AE562EE8((uint64_t)__dst);
                          sub_1AE4F66E8();
                        }
                      }
                      else
                      {
                        sub_1AE4F6710();
                        sub_1AE562EE8((uint64_t)__dst);
                      }
                    }
                    v46 += 88;
                    --v45;
                  }
                  while (v45);
                  sub_1AE4F67AC();
                  v2 = v92;
                }
                else
                {
                  sub_1AE4F67AC();
                  v2 = MEMORY[0x1E0DEE9E8];
                }
                swift_bridgeObjectRelease();
              }
              return v2;
            }
            v15 = *(_QWORD *)(v63 + 8 * v17);
            if (!v15)
            {
              while (1)
              {
                v16 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_55;
                if (v16 >= v64)
                  goto LABEL_30;
                v15 = *(_QWORD *)(v63 + 8 * v16);
                ++v17;
                if (v15)
                  goto LABEL_19;
              }
            }
            v16 = v12 + 4;
          }
        }
      }
LABEL_19:
      v72 = (v15 - 1) & v15;
      v73 = v16;
    }
  }
  return v2;
}

uint64_t sub_1AE82B3B4(uint64_t *a1, uint64_t a2)
{
  return sub_1AE82ACE0(a1, a2);
}

uint64_t sub_1AE82B3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1AE5907E4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for OperatorError()
{
  return &type metadata for OperatorError;
}

void sub_1AE82B424(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE82B488()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE5907E4(v2, v1, v0);
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE59080C(v2, v1, v0);
  sub_1AE925F74();
  return v3;
}

void sub_1AE82B59C()
{
  uint64_t v0;

  sub_1AE82B424(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

unint64_t sub_1AE82B5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __int128 __dst;
  __int128 v27;
  __int128 v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;

  if (a5 >= 25)
  {
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    *(_QWORD *)&__dst = 0xD00000000000001BLL;
    *((_QWORD *)&__dst + 1) = 0x80000001AE983A50;
    v29[0] = 25;
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    v12 = 0x80000001AE983A50;
    sub_1AE5322E0();
    swift_allocError();
    *(_OWORD *)v20 = __dst;
    *(_BYTE *)(v20 + 16) = 1;
    swift_willThrow();
  }
  else
  {
    v12 = a3;
    sub_1AE82EC08(a3, a7, (uint64_t)v29);
    if (!v8)
    {
      v14 = a7;
      v15 = a8;
      v16 = a6;
      v18 = v30;
      v17 = v31;
      sub_1AE4F9858(v29, v30);
      v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v17 + 24))(a2, v16, v14, v15, v12, v18, v17);
      if ((v19 & 1) != 0)
      {
        if (*(_QWORD *)(v14 + 16))
        {
          v22 = *(_QWORD *)(*(_QWORD *)v12 + 16);
          v23 = *(_QWORD *)(*(_QWORD *)v12 + 24);
          swift_bridgeObjectRetain();
          v24 = sub_1AE536EDC(v22, v23);
          if ((v25 & 1) != 0)
          {
            sub_1AE57C238(*(_QWORD *)(v14 + 56) + 40 * v24, (uint64_t)&__dst);
          }
          else
          {
            *(_QWORD *)&v28 = 0;
            __dst = 0u;
            v27 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((_QWORD *)&v27 + 1))
          {
            sub_1AE501100();
            sub_1AE50AF58(&__dst, (uint64_t)v29);
            goto LABEL_13;
          }
        }
        else
        {
          *(_QWORD *)&v28 = 0;
          __dst = 0u;
          v27 = 0u;
        }
        __break(1u);
        JUMPOUT(0x1AE82C348);
      }
LABEL_13:
      __asm { BR              X10 }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v12;
}

unint64_t sub_1AE82C36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14[8];
  __n128 v15;
  __n128 v16;
  uint64_t v17;

  v6 = a5;
  sub_1AE82C54C(a1, a2, 1, a3, a4, a5);
  if (!v5)
  {
    type metadata accessor for KnosisQueryParam();
    v11 = sub_1AE925C98();
    type metadata accessor for QueryNode();
    swift_initStackObject();
    v12 = sub_1AE883BA0(0, 0xE000000000000000, v11);
    v6 = sub_1AE82B5A8((uint64_t)v14, a1, a2, v12, 1, a3, a4, v6);
    sub_1AE4FD578(v14[0], v14[1], v14[2], v14[3], v14[4], v14[5], v14[6], v14[7], v17, v15, v16);
    swift_release();
  }
  return v6;
}

uint64_t sub_1AE82C49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (!*(_QWORD *)(a2 + 16) && sub_1AE85D040())
  {
    type metadata accessor for ResultGraph();
    v5 = swift_allocObject();
    v6 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v5 + 16) = sub_1AE925C98();
    *(_QWORD *)(v5 + 24) = v6;
    swift_release();
    *(_QWORD *)(a1 + 8) = v5;
  }
  if (!*(_QWORD *)(a1 + 8) || (result = sub_1AE85D040(), (result & 1) != 0))
  {
    swift_retain();
    result = swift_release();
    *(_QWORD *)(a1 + 8) = a3;
  }
  return result;
}

uint64_t sub_1AE82C54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[5];
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  if (a3 >= 25)
  {
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    sub_1AE82DDFC();
    v66 = v28;
    v67 = 0x80000001AE983A50;
    v65[0] = 25;
    sub_1AE926D18();
    sub_1AE925F74();
    sub_1AE4F6648();
    sub_1AE509C34();
  }
  else
  {
    result = sub_1AE82D0D8(a2, a4, a5, a6);
    if (v6)
      return result;
    sub_1AE508904();
    if (!*(_QWORD *)(*(_QWORD *)a2 + 48))
      *(_QWORD *)(*(_QWORD *)a2 + 48) = 20;
    if (*(_QWORD *)(a5 + 16))
    {
      sub_1AE4F81B0();
      v13 = sub_1AE82DDB4();
      if ((v14 & 1) != 0)
      {
        sub_1AE4FE150(v13, *(_QWORD *)(a5 + 56), v43, v46, v49, v51, v53, v55, v57, v59, v61, v63);
        v15 = sub_1AE4F6718();
        if (v65[3])
        {
          sub_1AE5077E0(v15, v16, v17, v18, v19, v20, v21, v22, v44, v47);
          v24 = v68;
          v23 = v69;
          sub_1AE4F9858(&v66, v68);
          v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 24);
          v70 = a1;
          if ((v25(a1, a4, a5, a6, a2, v24, v23) & 1) != 0)
          {
            if (!*(_QWORD *)(a5 + 16))
            {
              sub_1AE500694();
              __break(1u);
              JUMPOUT(0x1AE82CA80);
            }
            sub_1AE4F81B0();
            v26 = sub_1AE82DDB4();
            if ((v27 & 1) != 0)
              sub_1AE4FE150(v26, *(_QWORD *)(a5 + 56), v45, v48, v50, v52, v54, v56, v58, v60, v62, v64);
            else
              sub_1AE500694();
            sub_1AE4F6718();
            v35 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v66);
            sub_1AE5077E0(v35, v36, v37, v38, v39, v40, v41, v42, v45, v48);
            sub_1AE508904();
          }
          __asm { BR              X10 }
        }
      }
      else
      {
        sub_1AE500694();
        sub_1AE4F6718();
      }
    }
    else
    {
      sub_1AE500694();
    }
    sub_1AE582F80((uint64_t)v65);
    v66 = 0;
    v67 = 0xE000000000000000;
    sub_1AE82DDD4();
    swift_bridgeObjectRelease();
    sub_1AE503B00();
    v66 = v29;
    v67 = v30;
    sub_1AE508D44();
    sub_1AE507008();
    sub_1AE4F6648();
    sub_1AE4FF264();
  }
  sub_1AE925F74();
  v31 = v66;
  v32 = v67;
  sub_1AE5322E0();
  v33 = sub_1AE4F6778();
  *v34 = v31;
  v34[1] = v32;
  return sub_1AE505700(v33, (uint64_t)v34);
}

uint64_t sub_1AE82CAA4(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[6];
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  if (a4 >= 25)
  {
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    sub_1AE82DDFC();
    v84 = v35;
    v85 = 0x80000001AE983A50;
    v83[0] = 25;
    sub_1AE926D18();
    sub_1AE925F74();
    sub_1AE4F6648();
    sub_1AE509C34();
LABEL_16:
    sub_1AE925F74();
    v38 = v84;
    v39 = v85;
    sub_1AE5322E0();
    v40 = sub_1AE4F6778();
    *v41 = v38;
    v41[1] = v39;
    return sub_1AE505700(v40, (uint64_t)v41);
  }
  v9 = v8;
  v88 = a1;
  sub_1AE82D42C(a1, a2, a6);
  v16 = (_QWORD *)*a2;
  if (!*(_QWORD *)(*a2 + 48))
    v16[6] = 20;
  if (!*(_QWORD *)(a7 + 16))
  {
    sub_1AE500694();
    goto LABEL_15;
  }
  v69 = a6;
  v17 = v16[2];
  v18 = v16[3];
  swift_bridgeObjectRetain();
  v19 = sub_1AE536EDC(v17, v18);
  if ((v20 & 1) == 0)
  {
    sub_1AE500694();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_1AE4FE150(v19, *(_QWORD *)(a7 + 56), v61, v64, v67, v69, v71, v73, v75, v77, v79, v81);
  v21 = swift_bridgeObjectRelease();
  if (!v83[3])
  {
LABEL_15:
    sub_1AE582F80((uint64_t)v83);
    v84 = 0;
    v85 = 0xE000000000000000;
    sub_1AE82DDD4();
    swift_bridgeObjectRelease();
    sub_1AE503B00();
    v84 = v36;
    v85 = v37;
    sub_1AE508D44();
    sub_1AE507008();
    sub_1AE4F6648();
    sub_1AE4FF264();
    goto LABEL_16;
  }
  v68 = a7;
  sub_1AE507C60(v21, v22, v23, v24, v25, v26, v27, v28, v62, v65);
  v30 = a3[2];
  v29 = a3[3];
  v31 = qword_1ED30FB80;
  swift_bridgeObjectRetain();
  if (v31 != -1)
    swift_once();
  sub_1AE551594(v30, v29, qword_1ED3274C8);
  v33 = v32;
  sub_1AE4F9038();
  if ((v33 & 1) == 0)
  {
    v43 = (_QWORD *)a3[5];
    v44 = v16 != v43 || v43 == 0;
    if (v44 && (a5 & 1) == 0)
    {
      v34 = a8;
      goto LABEL_24;
    }
  }
  v34 = a8;
  sub_1AE82D940(v88, a2, v70, v68);
  if (!v9)
  {
LABEL_24:
    v45 = v86;
    v46 = v87;
    sub_1AE4F9858(&v84, v86);
    v47 = v70;
    v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(v46 + 24))(v88, v70, v68, v34, a2, v45, v46);
    if (!v9)
    {
      if ((v48 & 1) != 0)
      {
        if (!*(_QWORD *)(v68 + 16))
        {
          sub_1AE500694();
          __break(1u);
          JUMPOUT(0x1AE82D0B4);
        }
        v49 = *(_QWORD *)(*a2 + 16);
        v50 = *(_QWORD *)(*a2 + 24);
        sub_1AE4F6730();
        v51 = sub_1AE536EDC(v49, v50);
        if ((v52 & 1) != 0)
          sub_1AE4FE150(v51, *(_QWORD *)(v68 + 56), v63, v66, v68, v70, v72, v74, v76, v78, v80, v82);
        else
          sub_1AE500694();
        swift_bridgeObjectRelease();
        v53 = _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v84);
        sub_1AE507C60(v53, v54, v55, v56, v57, v58, v59, v60, v63, v66);
        sub_1AE82D42C(v88, a2, v47);
      }
      __asm { BR              X10 }
    }
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v84);
}

uint64_t sub_1AE82D0D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[15];
  void (*v54)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = v4;
  v6 = *(_QWORD *)result;
  v7 = *(_QWORD **)(*(_QWORD *)result + 40);
  if (!v7)
    return result;
  v11 = (_QWORD *)result;
  swift_retain();
  sub_1AE82DBF0(v6, (uint64_t)v7);
  if ((v12 & 1) == 0)
    return sub_1AE4FB730();
  if (!*(_QWORD *)(a3 + 16))
  {
    v48 = 0;
    v46 = 0u;
    v47 = 0u;
    goto LABEL_10;
  }
  v13 = v7[2];
  v14 = v7[3];
  sub_1AE4F81B0();
  v15 = sub_1AE536EDC(v13, v14);
  if ((v16 & 1) == 0)
  {
    v48 = 0;
    v46 = 0u;
    v47 = 0u;
    sub_1AE4F6718();
    goto LABEL_10;
  }
  sub_1AE57C238(*(_QWORD *)(a3 + 56) + 40 * v15, (uint64_t)&v46);
  sub_1AE4F6718();
  if (!*((_QWORD *)&v47 + 1))
  {
LABEL_10:
    sub_1AE582F80((uint64_t)&v46);
    v49 = 0;
    v50 = 0xE000000000000000;
    sub_1AE82DDD4();
    swift_bridgeObjectRelease();
    sub_1AE503B00();
    v49 = v22;
    v50 = v23;
    sub_1AE4F6730();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE4FF264();
    sub_1AE925F74();
    v24 = v49;
    v25 = v50;
    sub_1AE5322E0();
    v26 = sub_1AE4F6778();
    *v27 = v24;
    v27[1] = v25;
    sub_1AE505700(v26, (uint64_t)v27);
    return sub_1AE4FB730();
  }
  v43 = a4;
  v45 = a2;
  sub_1AE50AF58(&v46, (uint64_t)&v49);
  v17 = v51;
  v18 = v52;
  sub_1AE4F9858(&v49, v51);
  v19 = v7[2];
  v20 = v7[3];
  v21 = *(_QWORD *)(v18 + 8);
  v54 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8);
  sub_1AE4F81B0();
  v54(v53, v19, v20, v17, v21);
  if (v5)
  {
    sub_1AE4FB730();
    sub_1AE4F6718();
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v49);
  }
  sub_1AE4F6718();
  v29 = (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))v53[3];
  v28 = v53[4];
  sub_1AE881C50();
  if (v30)
  {
    v31 = v30;
    sub_1AE4FB9BC();
    v32 = *(_QWORD *)(v31 + 24);
    swift_retain();
    sub_1AE4FC564();
    if (v32)
    {
      swift_release();
      goto LABEL_22;
    }
  }
  v54 = v29;
  *(_QWORD *)(v6 + 40) = 0;
  swift_release();
  v33 = v7 + 4;
  sub_1AE4FB9BC();
  if (!v7[4])
  {
    type metadata accessor for KnosisQueryParam();
    *v33 = sub_1AE925C98();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for KnosisQueryParam();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v34 = swift_retain();
  sub_1AE885968(v34);
  v36 = v35;
  result = sub_1AE4FB9BC();
  v42 = v45;
  if (*v33)
  {
    sub_1AE654F2C(v36, (uint64_t)v54, v28, v37, v38, v39, v40, v41, v43, v45);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    *v11 = v7;
    if (!v7[5])
    {
      sub_1AE7B47C8((uint64_t)v53);
      return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v49);
    }
    swift_retain();
    sub_1AE82D0D8(v11, v42, a3, v44);
LABEL_22:
    sub_1AE7B47C8((uint64_t)v53);
    sub_1AE4FB730();
    return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v49);
  }
  __break(1u);
  return result;
}

uint64_t sub_1AE82D42C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(_QWORD *__return_ptr, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  int64_t v65;
  uint64_t v66;
  _QWORD *v68;
  _QWORD v69[2];
  uint64_t v70;

  v4 = *a2;
  sub_1AE4FB9BC();
  if (*(_QWORD *)(v4 + 32))
  {
    v5 = *(_QWORD *)(v4 + 32);
  }
  else
  {
    type metadata accessor for KnosisQueryParam();
    v5 = sub_1AE925C98();
  }
  v58 = v5 + 64;
  sub_1AE4F95DC();
  v8 = v7 & v6;
  v59 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  v57 = v5;
  if (!v8)
    goto LABEL_6;
LABEL_5:
  v11 = __clz(__rbit64(v8));
  v12 = (v8 - 1) & v8;
  v65 = v10;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v15)) + (v16 << 6))
  {
    v64 = v12;
    v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v19 = v18[1];
    v66 = *v18;
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
    v21 = (_QWORD *)(v20 + 16);
    sub_1AE4FB9BC();
    v22 = *(_QWORD *)(v20 + 16);
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v61 = (_QWORD *)(v20 + 16);
      v62 = v20;
      v24 = (_QWORD *)(v20 + 24);
      sub_1AE82DE1C();
      v63 = v19;
      sub_1AE4F6730();
      swift_bridgeObjectRetain();
      sub_1AE4FB9BC();
      v25 = (unint64_t *)(v22 + 40);
      v26 = MEMORY[0x1E0DEE9D8];
      do
      {
        v27 = *(v25 - 1);
        v28 = *v25;
        v29 = *(_QWORD *)(a3 + 16);
        swift_bridgeObjectRetain();
        if (v29)
        {
          swift_bridgeObjectRetain();
          v30 = sub_1AE536EDC(v27, v28);
          if ((v31 & 1) != 0)
          {
            v32 = *(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(a3 + 56) + 16 * v30);
            swift_retain();
            sub_1AE4F6710();
            v32(v69, a1);
            swift_release();
            v34 = v69[0];
            v33 = v69[1];
            v35 = v70;
            if (v70)
            {
              swift_retain();
              sub_1AE4F6710();
              *v24 = v35;
              swift_release();
              swift_release();
              v27 = 0;
              v28 = 0xE000000000000000;
            }
            if (v33)
            {
              sub_1AE4F6710();
              v27 = v34;
              v28 = v33;
            }
          }
          else
          {
            sub_1AE4F6710();
          }
        }
        v36 = HIBYTE(v28) & 0xF;
        if ((v28 & 0x2000000000000000) == 0)
          v36 = v27 & 0xFFFFFFFFFFFFLL;
        if (v36)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1AE4FCA68();
            v26 = v39;
          }
          v37 = *(_QWORD *)(v26 + 16);
          if (v37 >= *(_QWORD *)(v26 + 24) >> 1)
          {
            sub_1AE4FCA68();
            v26 = v40;
          }
          *(_QWORD *)(v26 + 16) = v37 + 1;
          v38 = v26 + 16 * v37;
          *(_QWORD *)(v38 + 32) = v27;
          *(_QWORD *)(v38 + 40) = v28;
        }
        else
        {
          sub_1AE4F6710();
        }
        v25 += 2;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
      v21 = v61;
      v20 = v62;
      v5 = v57;
      v19 = v63;
    }
    else
    {
      sub_1AE82DE1C();
      sub_1AE4F6730();
      v26 = MEMORY[0x1E0DEE9D8];
    }
    *v21 = v26;
    sub_1AE4F6728();
    v41 = *a2;
    v42 = (_QWORD *)(*a2 + 32);
    sub_1AE4FB9BC();
    if (!*(_QWORD *)(v41 + 32))
      break;
    swift_retain();
    sub_1AE4F6730();
    swift_isUniquelyReferenced_nonNull_native();
    v43 = (_QWORD *)*v42;
    v68 = (_QWORD *)*v42;
    *v42 = 0x8000000000000000;
    v44 = v19;
    v45 = sub_1AE536EDC(v66, v19);
    if (__OFADD__(v43[2], (v46 & 1) == 0))
    {
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      break;
    }
    v47 = v45;
    v48 = v46;
    sub_1AE501548(&qword_1ED30FD18);
    if ((sub_1AE926A54() & 1) != 0)
    {
      v49 = sub_1AE536EDC(v66, v44);
      if ((v48 & 1) != (v50 & 1))
        goto LABEL_58;
      v47 = v49;
    }
    if ((v48 & 1) != 0)
    {
      v51 = v68[7];
      swift_release();
      *(_QWORD *)(v51 + 8 * v47) = v20;
    }
    else
    {
      v68[(v47 >> 6) + 8] |= 1 << v47;
      v52 = (uint64_t *)(v68[6] + 16 * v47);
      *v52 = v66;
      v52[1] = v44;
      *(_QWORD *)(v68[7] + 8 * v47) = v20;
      v53 = v68[2];
      v54 = __OFADD__(v53, 1);
      v55 = v53 + 1;
      if (v54)
        goto LABEL_54;
      v68[2] = v55;
      swift_bridgeObjectRetain();
    }
    *v42 = v68;
    sub_1AE4F6728();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
    sub_1AE4F6728();
    v8 = v64;
    v10 = v65;
    if (v64)
      goto LABEL_5;
LABEL_6:
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_55;
    if (v14 >= v59)
      return swift_release();
    v15 = *(_QWORD *)(v58 + 8 * v14);
    v16 = v10 + 1;
    if (!v15)
    {
      v16 = v10 + 2;
      if (v10 + 2 >= v59)
        return swift_release();
      v15 = *(_QWORD *)(v58 + 8 * v16);
      if (!v15)
      {
        v16 = v10 + 3;
        if (v10 + 3 >= v59)
          return swift_release();
        v15 = *(_QWORD *)(v58 + 8 * v16);
        if (!v15)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v59)
            return swift_release();
          v15 = *(_QWORD *)(v58 + 8 * v17);
          if (!v15)
          {
            while (1)
            {
              v16 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_56;
              if (v16 >= v59)
                return swift_release();
              v15 = *(_QWORD *)(v58 + 8 * v16);
              ++v17;
              if (v15)
                goto LABEL_19;
            }
          }
          v16 = v10 + 4;
        }
      }
    }
LABEL_19:
    v12 = (v15 - 1) & v15;
    v65 = v16;
  }
  __break(1u);
LABEL_58:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE82D940(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[15];

  v5 = v4;
  v8 = (_QWORD *)*a2;
  v9 = (_QWORD *)(*a2 + 32);
  result = swift_beginAccess();
  if (!v8[4])
    return result;
  if (!*(_QWORD *)(a4 + 16))
  {
    v29 = 0;
    v27 = 0u;
    v28 = 0u;
LABEL_13:
    sub_1AE582F80((uint64_t)&v27);
    v30 = 0;
    v31 = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    v30 = 0x726F74617265706FLL;
    v31 = 0xE900000000000020;
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    v24 = v30;
    v25 = v31;
    sub_1AE5322E0();
    swift_allocError();
    *(_QWORD *)v26 = v24;
    *(_QWORD *)(v26 + 8) = v25;
    *(_BYTE *)(v26 + 16) = 1;
    return swift_willThrow();
  }
  v11 = v8[2];
  v12 = v8[3];
  swift_bridgeObjectRetain();
  v13 = sub_1AE536EDC(v11, v12);
  if ((v14 & 1) != 0)
  {
    sub_1AE57C238(*(_QWORD *)(a4 + 56) + 40 * v13, (uint64_t)&v27);
  }
  else
  {
    v29 = 0;
    v27 = 0u;
    v28 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v28 + 1))
    goto LABEL_13;
  sub_1AE50AF58(&v27, (uint64_t)&v30);
  v15 = v32;
  v16 = v33;
  sub_1AE4F9858(&v30, v32);
  v17 = v8[2];
  v18 = v8[3];
  v19 = *(_QWORD *)(v16 + 8);
  v20 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8);
  swift_bridgeObjectRetain();
  v20(v34, v17, v18, v15, v19);
  swift_bridgeObjectRelease();
  if (!v5)
  {
    result = swift_beginAccess();
    if (!*v9)
    {
      __break(1u);
      return result;
    }
    v21 = v34[3];
    v22 = v34[4];
    swift_bridgeObjectRetain();
    v23 = sub_1AE515C74(v21, v22);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();
    if (!v23)
    {
      if (*(_QWORD *)(a1 + 8))
        sub_1AE85DADC();
      sub_1AE8820E4(v21, v22);
      swift_bridgeObjectRelease();
    }
    sub_1AE7B47C8((uint64_t)v34);
  }
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v30);
}

void sub_1AE82DBF0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE82DC34()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;
  BOOL v4;
  char v5;

  v2 = sub_1AE82DE10();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v2 & 1) == 0)
  {
    v4 = *(_QWORD *)(v1 + 16) == 0x7463656C657371 && *(_QWORD *)(v1 + 24) == 0xE700000000000000;
    if (v4 || (v5 = sub_1AE82DE10(), result = 0, (v5 & 1) != 0))
    {
      if (*(_QWORD *)(v0 + 16) == 7370352 && *(_QWORD *)(v0 + 24) == 0xE300000000000000)
        return 1;
      else
        return sub_1AE926D60();
    }
  }
  return result;
}

uint64_t sub_1AE82DDB4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE536EDC(v0, v1);
}

uint64_t sub_1AE82DDC4()
{
  return 0x476C61636F6CLL;
}

uint64_t sub_1AE82DDD4()
{
  return sub_1AE92691C();
}

unint64_t sub_1AE82DDDC()
{
  return 0xD000000000000010;
}

uint64_t sub_1AE82DDF0()
{
  return swift_endAccess();
}

uint64_t sub_1AE82DE10()
{
  return sub_1AE926D60();
}

uint64_t sub_1AE82DE1C()
{
  return swift_retain_n();
}

uint64_t destroy for Operators()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *_s20IntelligencePlatform9OperatorsVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for Operators(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Operators(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for Operators()
{
  return &type metadata for Operators;
}

void sub_1AE82DF78(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  char v37;
  uint64_t v38;

  v2 = a1[3];
  v3 = a1[4];
  sub_1AE4F9858(a1, v2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v3 + 16))(v35, v2, v3);
  if (v1)
    return;
  v4 = v37;
  v5 = v36;
  v6 = *(_QWORD *)(v36 + 16);
  if ((v37 & 1) == 0 && v6 >= 6)
  {
    sub_1AE501548(&qword_1EED9A560);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1AE934250;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    sub_1AE4F6708();
    sub_1AE925F74();
    sub_1AE4F76D8();
    sub_1AE925F74();
    v38 = 5;
    sub_1AE926D18();
    sub_1AE925F74();
    sub_1AE4F76D8();
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 + 32) = 0x2065646F4E71676BLL;
    *(_QWORD *)(v7 + 40) = 0xE800000000000000;
    sub_1AE926EA4();
    swift_bridgeObjectRelease();
LABEL_30:
    sub_1AE7B47C8((uint64_t)v35);
    return;
  }
  if (!v6)
    goto LABEL_30;
  v8 = 0;
  v32 = v36 + 32;
  v33 = v6 - 1;
  v9 = MEMORY[0x1E0DEE9D8];
  v30 = 16 * v6;
  v10 = 5;
  v29 = v37;
  v27 = *(_QWORD *)(v36 + 16);
  v28 = v36;
  while (1)
  {
    if (v8 >= *(_QWORD *)(v5 + 16))
      goto LABEL_33;
    v11 = (uint64_t *)(v32 + 16 * v8);
    v12 = v11[1];
    v34 = *v11;
    if ((v4 & 1) == 0 || v8 != v33)
    {
      sub_1AE4FB930();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE4FF288();
        v9 = v25;
      }
      v23 = *(_QWORD *)(v9 + 16);
      if (v23 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1AE4FF288();
        v9 = v26;
      }
      *(_QWORD *)(v9 + 16) = v23 + 1;
      v24 = v9 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v34;
      *(_QWORD *)(v24 + 40) = v12;
      goto LABEL_29;
    }
    if (v6 <= 5)
      break;
LABEL_29:
    ++v8;
    --v10;
    if (v8 == v6)
      goto LABEL_30;
  }
  v31 = v8;
  sub_1AE4FB930();
  v13 = 0;
  v14 = v30;
  while (1)
  {
    v38 = v13;
    sub_1AE4FB930();
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)(v9 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (v33 + v13 >= v15)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1AE4FF288();
        v9 = v21;
      }
      v18 = *(_QWORD *)(v9 + 16);
      if (v18 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1AE4FF288();
        v9 = v22;
      }
      *(_QWORD *)(v9 + 16) = v18 + 1;
      v19 = v9 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v34;
      *(_QWORD *)(v19 + 40) = v12;
      goto LABEL_22;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1AE7AA52C();
      v9 = v20;
    }
    if (v33 + v13 >= *(_QWORD *)(v9 + 16))
      break;
    v17 = v9 + v14;
    *(_QWORD *)(v17 + 16) = v34;
    *(_QWORD *)(v17 + 24) = v12;
    swift_bridgeObjectRelease();
LABEL_22:
    ++v13;
    v14 += 16;
    if (v10 == v13)
    {
      sub_1AE4F66E8();
      v4 = v29;
      v6 = v27;
      v5 = v28;
      v8 = v31;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
}

uint64_t sub_1AE82E318(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  _BOOL8 v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int64_t v92;
  int64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  _UNKNOWN **v104;
  __int128 v105;
  uint64_t v106;
  _UNKNOWN **v107;
  _QWORD *v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  _UNKNOWN **v115;
  _QWORD v116[17];

  v90 = sub_1AE924780();
  v88 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  sub_1AE4F666C();
  v89 = v2 - v1;
  sub_1AE77D490();
  v116[16] = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain();
  sub_1AE501548(&qword_1ED30FAE8);
  v3 = (_QWORD *)sub_1AE925C98();
  if (qword_1ED30FB60 != -1)
    goto LABEL_72;
LABEL_2:
  v91 = qword_1ED3274B8 + 64;
  sub_1AE4F95DC();
  v6 = v5 & v4;
  v94 = (unint64_t)(v7 + 63) >> 6;
  v96 = v8;
  v87 = v94 - 1;
  swift_bridgeObjectRetain();
  v9 = 0;
  if (v6)
  {
LABEL_3:
    v10 = __clz(__rbit64(v6));
    v11 = (v6 - 1) & v6;
    v12 = v10 | (v9 << 6);
    goto LABEL_4;
  }
  while (1)
  {
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if (v16 < v94)
    {
      v17 = *(_QWORD *)(v91 + 8 * v16);
      if (v17)
        goto LABEL_8;
      v9 += 2;
      if (v16 + 1 >= v94)
      {
        v9 = v16;
        goto LABEL_13;
      }
      v17 = *(_QWORD *)(v91 + 8 * v9);
      if (v17)
      {
        ++v16;
        goto LABEL_8;
      }
      if (v16 + 2 < v94)
        break;
    }
LABEL_13:
    v11 = 0;
    v112 = 0;
    v110 = 0u;
    v111 = 0u;
    v109 = 0u;
LABEL_14:
    sub_1AE7B4744((uint64_t)&v109, (uint64_t)&v113);
    if (!*((_QWORD *)&v113 + 1))
    {
      swift_release();
      v38 = type metadata accessor for Virtual();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 16))(v89, a1, v90);
      v39 = v38;
      v40 = sub_1AE8C8CA4();
      if (v101)
      {
        sub_1AE4FCBE0();
        sub_1AE4F66E8();
        goto LABEL_33;
      }
      v42 = v40;
      swift_beginAccess();
      v43 = *(_QWORD *)(v42 + 128);
      v90 = v43 + 64;
      sub_1AE4F95DC();
      v46 = v45 & v44;
      v92 = (unint64_t)(v47 + 63) >> 6;
      swift_retain();
      swift_bridgeObjectRetain();
      v48 = 0;
      v95 = v42;
      if (v46)
      {
LABEL_35:
        v49 = __clz(__rbit64(v46));
        v50 = (v46 - 1) & v46;
        v51 = v49 | (v48 << 6);
        goto LABEL_50;
      }
      while (1)
      {
        v52 = v48 + 1;
        if (__OFADD__(v48, 1))
          break;
        if (v52 >= v92)
          goto LABEL_66;
        v53 = *(_QWORD *)(v90 + 8 * v52);
        ++v48;
        if (!v53)
        {
          v48 = v52 + 1;
          if (v52 + 1 >= v92)
            goto LABEL_66;
          v53 = *(_QWORD *)(v90 + 8 * v48);
          if (!v53)
          {
            v48 = v52 + 2;
            if (v52 + 2 >= v92)
              goto LABEL_66;
            v53 = *(_QWORD *)(v90 + 8 * v48);
            if (!v53)
            {
              v54 = v52 + 3;
              if (v54 >= v92)
              {
LABEL_66:
                sub_1AE4FCBE0();
                sub_1AE4F6A6C();
                sub_1AE503B1C();
                swift_release();
                return v39;
              }
              v53 = *(_QWORD *)(v90 + 8 * v54);
              if (!v53)
              {
                while (1)
                {
                  v48 = v54 + 1;
                  if (__OFADD__(v54, 1))
                    break;
                  if (v48 >= v92)
                    goto LABEL_66;
                  v53 = *(_QWORD *)(v90 + 8 * v48);
                  ++v54;
                  if (v53)
                    goto LABEL_49;
                }
                __break(1u);
                goto LABEL_74;
              }
              v48 = v54;
            }
          }
        }
LABEL_49:
        v50 = (v53 - 1) & v53;
        v51 = __clz(__rbit64(v53)) + (v48 << 6);
LABEL_50:
        v55 = (uint64_t *)(*(_QWORD *)(v43 + 48) + 16 * v51);
        v56 = *v55;
        v57 = v55[1];
        v100 = *v55;
        if (v3[2])
        {
          swift_bridgeObjectRetain_n();
          v58 = sub_1AE50AE44(v56);
          if ((v59 & 1) != 0)
          {
            sub_1AE57C238(v3[7] + 40 * v58, (uint64_t)&v113);
          }
          else
          {
            v115 = 0;
            v113 = 0u;
            v114 = 0u;
          }
          sub_1AE4F76D8();
          if (*((_QWORD *)&v114 + 1))
          {
            sub_1AE503B1C();
            sub_1AE4F6A6C();
            sub_1AE4F76D8();
            sub_1AE582F80((uint64_t)&v113);
            sub_1AE5322E0();
            sub_1AE4F6778();
            *(_QWORD *)v85 = 0xD000000000000020;
            *(_QWORD *)(v85 + 8) = 0x80000001AE988270;
            *(_BYTE *)(v85 + 16) = 0;
            swift_willThrow();
            sub_1AE4FCBE0();
            swift_bridgeObjectRelease();
            sub_1AE4F66E8();
            swift_release();
            return sub_1AE4F6A6C();
          }
        }
        else
        {
          v115 = 0;
          v113 = 0u;
          v114 = 0u;
          sub_1AE4F6708();
        }
        v97 = v50;
        v98 = v48;
        sub_1AE582F80((uint64_t)&v113);
        *((_QWORD *)&v114 + 1) = v38;
        v115 = &off_1E5DB6C60;
        *(_QWORD *)&v113 = v42;
        sub_1AE50AF58(&v113, (uint64_t)&v109);
        swift_retain();
        swift_isUniquelyReferenced_nonNull_native();
        v108 = v3;
        v60 = sub_1AE595318((uint64_t)&v109, *((uint64_t *)&v110 + 1));
        MEMORY[0x1E0C80A78](v60);
        sub_1AE4F666C();
        v63 = (uint64_t *)(v62 - v61);
        (*(void (**)(uint64_t))(v64 + 16))(v62 - v61);
        v65 = *v63;
        v106 = v38;
        v107 = &off_1E5DB6C60;
        v66 = v38;
        *(_QWORD *)&v105 = v65;
        v67 = sub_1AE50AE44(v100);
        v69 = v3[2];
        v70 = (v68 & 1) == 0;
        v3 = (_QWORD *)(v69 + v70);
        if (__OFADD__(v69, v70))
          goto LABEL_69;
        v71 = v67;
        v72 = v68;
        sub_1AE501548(&qword_1ED30FD20);
        if ((sub_1AE926A54() & 1) != 0)
        {
          v73 = sub_1AE536EDC(v100, v57);
          if ((v72 & 1) != (v74 & 1))
            goto LABEL_75;
          v71 = v73;
        }
        v3 = v108;
        if ((v72 & 1) != 0)
        {
          v39 = v108[7] + 40 * v71;
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v39);
          sub_1AE50AF58(&v105, v39);
        }
        else
        {
          v39 = v106;
          v75 = sub_1AE595318((uint64_t)&v105, v106);
          MEMORY[0x1E0C80A78](v75);
          sub_1AE4F666C();
          v78 = (uint64_t *)(v77 - v76);
          (*(void (**)(uint64_t))(v79 + 16))(v77 - v76);
          v80 = *v78;
          v103 = v66;
          v104 = &off_1E5DB6C60;
          *(_QWORD *)&v102 = v80;
          v3[(v71 >> 6) + 8] |= 1 << v71;
          v81 = (uint64_t *)(v3[6] + 16 * v71);
          *v81 = v100;
          v81[1] = v57;
          sub_1AE50AF58(&v102, v3[7] + 40 * v71);
          v82 = v3[2];
          v83 = __OFADD__(v82, 1);
          v84 = v82 + 1;
          if (v83)
            goto LABEL_70;
          v3[2] = v84;
          _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v105);
          sub_1AE4F6708();
        }
        v38 = v66;
        sub_1AE50590C();
        sub_1AE4F76D8();
        swift_bridgeObjectRelease();
        v42 = v95;
        v46 = v97;
        v48 = v98;
        if (v97)
          goto LABEL_35;
      }
LABEL_71:
      __break(1u);
LABEL_72:
      swift_once();
      goto LABEL_2;
    }
    swift_bridgeObjectRelease();
    sub_1AE50AF58(&v114, (uint64_t)&v109);
    v18 = *((_QWORD *)&v110 + 1);
    v19 = v111;
    sub_1AE4F9858(&v109, *((uint64_t *)&v110 + 1));
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v19 + 16))(v116, v18, v19);
    if (v101)
    {
      sub_1AE503B1C();
      sub_1AE82F33C(a1);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1AE50590C();
LABEL_33:
      swift_bridgeObjectRelease();
      return sub_1AE4F66E8();
    }
    v20 = v116[1];
    v99 = v116[0];
    sub_1AE57C238((uint64_t)&v109, (uint64_t)&v105);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v102 = v3;
    v22 = v106;
    v23 = (uint64_t)v107;
    v24 = sub_1AE595318((uint64_t)&v105, v106);
    MEMORY[0x1E0C80A78](v24);
    sub_1AE4F666C();
    v25 = v11;
    v26 = v9;
    v29 = v28 - v27;
    (*(void (**)(uint64_t))(v30 + 16))(v28 - v27);
    v31 = v29;
    v9 = v26;
    v6 = v25;
    sub_1AE82F378(v31, v99, v20, isUniquelyReferenced_nonNull_native, &v102, v22, v23);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v105);
    v3 = (_QWORD *)v102;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1AE555EFC((uint64_t)&v105, v99, v20, v32, v33, v34, v35, v36, v86, v87);
    sub_1AE7B47C8((uint64_t)v116);
    swift_bridgeObjectRelease();
    sub_1AE50590C();
    if (v25)
      goto LABEL_3;
  }
  v17 = *(_QWORD *)(v91 + 8 * (v16 + 2));
  if (v17)
  {
    v16 += 2;
    goto LABEL_8;
  }
  v37 = v16 + 3;
  if (v16 + 3 >= v94)
  {
    v9 = v16 + 2;
    goto LABEL_13;
  }
  v17 = *(_QWORD *)(v91 + 8 * v37);
  if (v17)
  {
    v16 += 3;
LABEL_8:
    v11 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v16 << 6);
    v9 = v16;
LABEL_4:
    v13 = *(_QWORD *)(v96 + 56);
    v14 = (_QWORD *)(*(_QWORD *)(v96 + 48) + 16 * v12);
    v15 = v14[1];
    *(_QWORD *)&v109 = *v14;
    *((_QWORD *)&v109 + 1) = v15;
    sub_1AE57C238(v13 + 40 * v12, (uint64_t)&v110);
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  while (1)
  {
    v16 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    if (v16 >= v94)
    {
      v9 = v87;
      goto LABEL_13;
    }
    v17 = *(_QWORD *)(v91 + 8 * v16);
    ++v37;
    if (v17)
      goto LABEL_8;
  }
LABEL_74:
  __break(1u);
LABEL_75:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE82EC08@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  if (*(_QWORD *)(a2 + 16))
  {
    v5 = *(_QWORD *)(*(_QWORD *)a1 + 16);
    v6 = *(_QWORD *)(*(_QWORD *)a1 + 24);
    swift_bridgeObjectRetain();
    v7 = sub_1AE536EDC(v5, v6);
    if ((v8 & 1) != 0)
    {
      sub_1AE57C238(*(_QWORD *)(a2 + 56) + 40 * v7, (uint64_t)&v12);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v13 + 1))
        return sub_1AE50AF58(&v12, a3);
    }
    else
    {
      v14 = 0;
      v12 = 0u;
      v13 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
  }
  sub_1AE582F80((uint64_t)&v12);
  *(_QWORD *)&v12 = 0;
  *((_QWORD *)&v12 + 1) = 0xE000000000000000;
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v12 = 0xD000000000000023;
  *((_QWORD *)&v12 + 1) = 0x80000001AE988210;
  swift_bridgeObjectRetain();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  v10 = v12;
  sub_1AE5322E0();
  sub_1AE4F6778();
  *(_OWORD *)v11 = v10;
  *(_BYTE *)(v11 + 16) = 1;
  return swift_willThrow();
}

uint64_t sub_1AE82ED64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;

  sub_1AE501548((uint64_t *)&unk_1ED30FE10);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1AE959600;
  *(_QWORD *)(v1 + 32) = 6579297;
  *(_QWORD *)(v1 + 40) = 0xE300000000000000;
  type metadata accessor for Add();
  sub_1AE5006A4();
  v2 = sub_1AE4FE160();
  *(_QWORD *)(v1 + 72) = v0;
  *(_QWORD *)(v1 + 80) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 88) = 7105633;
  *(_QWORD *)(v1 + 96) = 0xE300000000000000;
  type metadata accessor for All();
  sub_1AE5006A4();
  v3 = sub_1AE526114();
  *(_QWORD *)(v1 + 128) = v0;
  *(_QWORD *)(v1 + 136) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 104) = v3;
  *(_QWORD *)(v1 + 144) = 0x796C7069746C756DLL;
  *(_QWORD *)(v1 + 152) = 0xE800000000000000;
  type metadata accessor for Multiply();
  sub_1AE5006A4();
  v4 = sub_1AE4FE160();
  *(_QWORD *)(v1 + 184) = v0;
  *(_QWORD *)(v1 + 192) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 160) = v4;
  *(_QWORD *)(v1 + 200) = 0x656469766964;
  *(_QWORD *)(v1 + 208) = 0xE600000000000000;
  type metadata accessor for Divide();
  sub_1AE5006A4();
  v5 = sub_1AE4FE160();
  *(_QWORD *)(v1 + 240) = v0;
  *(_QWORD *)(v1 + 248) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 216) = v5;
  *(_QWORD *)(v1 + 256) = 6581857;
  *(_QWORD *)(v1 + 264) = 0xE300000000000000;
  type metadata accessor for And();
  sub_1AE5006A4();
  v6 = sub_1AE5269AC();
  *(_QWORD *)(v1 + 296) = v0;
  *(_QWORD *)(v1 + 304) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 272) = v6;
  *(_QWORD *)(v1 + 312) = 6780513;
  *(_QWORD *)(v1 + 320) = 0xE300000000000000;
  type metadata accessor for Avg();
  sub_1AE5006A4();
  v7 = sub_1AE4FE160();
  *(_QWORD *)(v1 + 352) = v0;
  *(_QWORD *)(v1 + 360) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 328) = v7;
  *(_QWORD *)(v1 + 368) = 0x746E756F63;
  *(_QWORD *)(v1 + 376) = 0xE500000000000000;
  type metadata accessor for Count();
  sub_1AE5006A4();
  v8 = sub_1AE581054();
  *(_QWORD *)(v1 + 408) = v0;
  *(_QWORD *)(v1 + 416) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 384) = v8;
  *(_QWORD *)(v1 + 424) = 0x797469746E65;
  *(_QWORD *)(v1 + 432) = 0xE600000000000000;
  type metadata accessor for EntityOperator();
  sub_1AE5006A4();
  v9 = sub_1AE5BDAAC();
  *(_QWORD *)(v1 + 464) = v0;
  *(_QWORD *)(v1 + 472) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 440) = v9;
  *(_QWORD *)(v1 + 480) = 0x68636165726F66;
  *(_QWORD *)(v1 + 488) = 0xE700000000000000;
  type metadata accessor for ForEach();
  sub_1AE5006A4();
  v10 = sub_1AE672AF0();
  *(_QWORD *)(v1 + 520) = v0;
  *(_QWORD *)(v1 + 528) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 496) = v10;
  *(_QWORD *)(v1 + 536) = 7628135;
  *(_QWORD *)(v1 + 544) = 0xE300000000000000;
  type metadata accessor for Get();
  sub_1AE5006A4();
  v11 = sub_1AE69ACC0();
  *(_QWORD *)(v1 + 576) = v0;
  *(_QWORD *)(v1 + 584) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 552) = v11;
  *(_QWORD *)(v1 + 592) = 0x686374616DLL;
  *(_QWORD *)(v1 + 600) = 0xE500000000000000;
  type metadata accessor for Match();
  sub_1AE5006A4();
  v12 = sub_1AE81DE54();
  *(_QWORD *)(v1 + 632) = v0;
  *(_QWORD *)(v1 + 640) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 608) = v12;
  *(_QWORD *)(v1 + 648) = 29295;
  *(_QWORD *)(v1 + 656) = 0xE200000000000000;
  type metadata accessor for Or();
  sub_1AE5006A4();
  v13 = sub_1AE82F5E8();
  *(_QWORD *)(v1 + 688) = v0;
  *(_QWORD *)(v1 + 696) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 664) = v13;
  *(_QWORD *)(v1 + 704) = 7370352;
  *(_QWORD *)(v1 + 712) = 0xE300000000000000;
  type metadata accessor for Pvp();
  sub_1AE5006A4();
  v14 = sub_1AE848F28();
  *(_QWORD *)(v1 + 744) = v0;
  *(_QWORD *)(v1 + 752) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 720) = v14;
  *(_QWORD *)(v1 + 760) = 1952802673;
  *(_QWORD *)(v1 + 768) = 0xE400000000000000;
  type metadata accessor for Qget();
  sub_1AE5006A4();
  v15 = sub_1AE8499A8();
  *(_QWORD *)(v1 + 800) = v0;
  *(_QWORD *)(v1 + 808) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 776) = v15;
  *(_QWORD *)(v1 + 816) = 0x746567706F727071;
  *(_QWORD *)(v1 + 824) = 0xE800000000000000;
  type metadata accessor for Qpropget();
  sub_1AE5006A4();
  v16 = sub_1AE849C7C();
  *(_QWORD *)(v1 + 856) = v0;
  *(_QWORD *)(v1 + 864) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 832) = v16;
  *(_QWORD *)(v1 + 872) = 0x7463656C657371;
  *(_QWORD *)(v1 + 880) = 0xE700000000000000;
  type metadata accessor for Qselect();
  sub_1AE5006A4();
  v17 = sub_1AE84A39C();
  *(_QWORD *)(v1 + 912) = v0;
  *(_QWORD *)(v1 + 920) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 888) = v17;
  *(_QWORD *)(v1 + 928) = 6452595;
  *(_QWORD *)(v1 + 936) = 0xE300000000000000;
  type metadata accessor for Sub();
  sub_1AE5006A4();
  v18 = sub_1AE4FE160();
  *(_QWORD *)(v1 + 968) = v0;
  *(_QWORD *)(v1 + 976) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 944) = v18;
  *(_QWORD *)(v1 + 984) = 1954047348;
  *(_QWORD *)(v1 + 992) = 0xE400000000000000;
  type metadata accessor for Text();
  sub_1AE5006A4();
  v19 = sub_1AE892F70();
  *(_QWORD *)(v1 + 1024) = v0;
  *(_QWORD *)(v1 + 1032) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 1000) = v19;
  *(_QWORD *)(v1 + 1040) = 0x656C70697274;
  *(_QWORD *)(v1 + 1048) = 0xE600000000000000;
  type metadata accessor for Triple();
  sub_1AE5006A4();
  v20 = sub_1AE89DF10();
  *(_QWORD *)(v1 + 1080) = v0;
  *(_QWORD *)(v1 + 1088) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 1056) = v20;
  strcpy((char *)(v1 + 1096), "renderDateTime");
  *(_BYTE *)(v1 + 1111) = -18;
  type metadata accessor for RenderDateTime();
  sub_1AE5006A4();
  v21 = sub_1AE854890();
  *(_QWORD *)(v1 + 1136) = v0;
  *(_QWORD *)(v1 + 1144) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 1112) = v21;
  *(_QWORD *)(v1 + 1152) = 29799;
  *(_QWORD *)(v1 + 1160) = 0xE200000000000000;
  type metadata accessor for GreaterThan();
  sub_1AE5006A4();
  v22 = sub_1AE739EE0();
  *(_QWORD *)(v1 + 1192) = v0;
  *(_QWORD *)(v1 + 1200) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 1168) = v22;
  *(_QWORD *)(v1 + 1208) = 6648935;
  *(_QWORD *)(v1 + 1216) = 0xE300000000000000;
  type metadata accessor for GreaterThanEqual();
  sub_1AE5006A4();
  v23 = sub_1AE739FA0();
  *(_QWORD *)(v1 + 1248) = v0;
  *(_QWORD *)(v1 + 1256) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 1224) = v23;
  *(_QWORD *)(v1 + 1264) = 29804;
  *(_QWORD *)(v1 + 1272) = 0xE200000000000000;
  type metadata accessor for LessThan();
  sub_1AE5006A4();
  v24 = sub_1AE801B18();
  *(_QWORD *)(v1 + 1304) = v0;
  *(_QWORD *)(v1 + 1312) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 1280) = v24;
  *(_QWORD *)(v1 + 1320) = 6648940;
  *(_QWORD *)(v1 + 1328) = 0xE300000000000000;
  type metadata accessor for LessThanEqual();
  sub_1AE5006A4();
  v25 = sub_1AE801BD8();
  *(_QWORD *)(v1 + 1360) = v0;
  *(_QWORD *)(v1 + 1368) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 1336) = v25;
  *(_QWORD *)(v1 + 1376) = 0x6373615F74726F73;
  *(_QWORD *)(v1 + 1384) = 0xE800000000000000;
  type metadata accessor for SortAsc();
  sub_1AE5006A4();
  v26 = sub_1AE876608();
  *(_QWORD *)(v1 + 1416) = v0;
  *(_QWORD *)(v1 + 1424) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 1392) = v26;
  *(_QWORD *)(v1 + 1432) = 0x7365645F74726F73;
  *(_QWORD *)(v1 + 1440) = 0xE900000000000063;
  type metadata accessor for SortDesc();
  sub_1AE5006A4();
  v27 = sub_1AE876608();
  *(_QWORD *)(v1 + 1472) = v0;
  *(_QWORD *)(v1 + 1480) = &off_1E5DB6C60;
  *(_QWORD *)(v1 + 1448) = v27;
  sub_1AE501548(&qword_1ED30FAE8);
  result = sub_1AE925C98();
  qword_1ED3274B8 = result;
  return result;
}

void sub_1AE82F2F4()
{
  uint64_t v0;

  sub_1AE56BB6C();
  qword_1EEE11C70 = v0;
}

void sub_1AE82F318()
{
  uint64_t v0;

  sub_1AE56BB6C();
  qword_1ED3274C8 = v0;
}

uint64_t sub_1AE82F33C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for KnosisConfig();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AE82F378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a6;
  v31 = a7;
  v13 = sub_1AE52F6A8((uint64_t *)&v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v13, a1, a6);
  v14 = (_QWORD *)*a5;
  v15 = sub_1AE536EDC(a2, a3);
  if (__OFADD__(v14[2], (v16 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v17 = v15;
  v18 = v16;
  sub_1AE501548(&qword_1ED30FD20);
  if ((sub_1AE926A54() & 1) == 0)
    goto LABEL_5;
  v19 = sub_1AE536EDC(a2, a3);
  if ((v18 & 1) != (v20 & 1))
  {
LABEL_10:
    result = sub_1AE926DE4();
    __break(1u);
    return result;
  }
  v17 = v19;
LABEL_5:
  v21 = (_QWORD *)*a5;
  if ((v18 & 1) != 0)
  {
    v22 = v21[7] + 40 * v17;
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v22);
    return sub_1AE50AF58(&v29, v22);
  }
  else
  {
    v24 = sub_1AE595318((uint64_t)&v29, v30);
    MEMORY[0x1E0C80A78](v24);
    v26 = (char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v27 + 16))(v26);
    sub_1AE82F530(v17, a2, a3, (uint64_t)v26, v21, a6, a7);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v29);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1AE82F530(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a6;
  v21 = a7;
  v13 = sub_1AE52F6A8((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v13, a4, a6);
  a5[(a1 >> 6) + 8] |= 1 << a1;
  v14 = (_QWORD *)(a5[6] + 16 * a1);
  *v14 = a2;
  v14[1] = a3;
  result = sub_1AE50AF58(&v19, a5[7] + 40 * a1);
  v16 = a5[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a5[2] = v18;
  return result;
}

uint64_t sub_1AE82F5E8()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 16) = xmmword_1AE961540;
  *(_QWORD *)(v0 + 32) = &unk_1E5DACF28;
  *(_OWORD *)(v0 + 40) = xmmword_1AE933AC0;
  *(_OWORD *)(v0 + 56) = xmmword_1AE961550;
  *(_QWORD *)(v0 + 72) = 0x80000001AE9882C0;
  *(_OWORD *)(v0 + 80) = xmmword_1AE933AC0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  sub_1AE5158B8(0, 0);
  return v0;
}

uint64_t type metadata accessor for Or()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for OrderedDictionary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OrderedDictionary);
}

void sub_1AE82F6AC()
{
  JUMPOUT(0x1AF452F2CLL);
}

void sub_1AE82F6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  sub_1AE4FC4D4();
  v19 = v0;
  v2 = v1;
  v4 = *(_QWORD *)(v3 + 24);
  v5 = sub_1AE92670C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v19 - v11;
  v13 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F666C();
  v16 = v15 - v14;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v20 = v2;
  v17(v12, v2, v5);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v12, 1, v4) == 1)
  {
    sub_1AE4FD588((uint64_t)v12);
    sub_1AE82F9C8();
    sub_1AE501108();
    sub_1AE4FD588(v20);
    sub_1AE4FD588((uint64_t)v9);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v16, v12, v4);
    sub_1AE82F840();
    sub_1AE501108();
    v18 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v18(v20, v5);
    v18((uint64_t)v9, v5);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v4);
  }
  sub_1AE4F8180();
}

void sub_1AE82F840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1AE4FC4D4();
  v24 = v0;
  v25 = v1;
  v3 = v2;
  v5 = *(_QWORD *)(v4 + 16);
  v22 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F9024();
  v23 = v6;
  v8 = *(_QWORD *)(v7 + 24);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F666C();
  v13 = v12 - v11;
  v14 = sub_1AE92670C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v22 - v16;
  sub_1AE4FB908(v13, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  sub_1AE925CF8();
  v18 = v24;
  sub_1AE925C80();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v17, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v23, v18, v5);
    sub_1AE4FBFFC();
    sub_1AE926274();
    v19 = 1;
    v20 = v25;
  }
  else
  {
    v21 = v25;
    sub_1AE4FB908(v25, (uint64_t)v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
    v19 = 0;
    v20 = v21;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v20, v19, 1, v8);
  sub_1AE4F8180();
}

void sub_1AE82F9C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  sub_1AE4FC4D4();
  v2 = v1;
  v4 = v3;
  v32 = v5;
  v6 = *(_QWORD *)(v1 + 16);
  v29 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F9024();
  v28 = v7;
  v9 = *(_QWORD *)(v8 + 24);
  v10 = sub_1AE92670C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v27 - v13;
  v15 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F9024();
  v17 = v16;
  v30 = v0;
  v18 = *(_QWORD *)(v2 + 32);
  sub_1AE925CF8();
  v31 = v4;
  sub_1AE925C74();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v14, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v19 = 1;
    v20 = v32;
LABEL_5:
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v20, v19, 1, v9);
    sub_1AE4F8180();
    return;
  }
  v21 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32);
  v22 = v17;
  v23 = v21((uint64_t)v17, v14, v9);
  v33 = *v30;
  MEMORY[0x1E0C80A78](v23);
  *(&v27 - 4) = v6;
  *(&v27 - 3) = v9;
  v24 = v31;
  *(&v27 - 2) = v18;
  *(&v27 - 1) = v24;
  v25 = sub_1AE4FBFFC();
  swift_bridgeObjectRetain();
  MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF50], v25);
  sub_1AE9264CC();
  swift_bridgeObjectRelease();
  if ((v34 & 1) == 0)
  {
    v26 = v28;
    sub_1AE926280();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v26, v6);
    v20 = v32;
    v21(v32, v22, v9);
    v19 = 0;
    goto LABEL_5;
  }
  __break(1u);
}

void sub_1AE82FBEC()
{
  JUMPOUT(0x1AF453484);
}

uint64_t sub_1AE82FBF4(uint64_t a1)
{
  BOOL v1;
  uint64_t result;

  v1 = __OFADD__(a1, 1);
  result = a1 + 1;
  if (v1)
    __break(1u);
  return result;
}

void sub_1AE82FC04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1AE4FC4D4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v20 = v8;
  v10 = v9;
  v11 = sub_1AE92670C();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v19 - v13;
  v15 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F666C();
  v18 = v17 - v16;
  sub_1AE9262D4();
  sub_1AE4FB908(v10, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  MEMORY[0x1AF452F2C](v18, v7, v5, v3, v1);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v14, 1, v3) == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v5);
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v20, v14, v3);
    sub_1AE4F8180();
  }
}

void sub_1AE82FD24()
{
  sub_1AE82FBEC();
}

uint64_t sub_1AE82FD44(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

void (*sub_1AE82FD54(uint64_t **a1, uint64_t a2, uint64_t a3))(uint64_t *a1, uint64_t a2)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  char *v10;
  void (*v11)(_QWORD *);
  uint64_t v12;
  uint64_t v13;

  v5 = (uint64_t *)malloc(0x40uLL);
  *a1 = v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 24);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v5[4] = TupleTypeMetadata2;
  v9 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v5[5] = v9;
  v10 = (char *)malloc(*(_QWORD *)(v9 + 64));
  v5[6] = (uint64_t)v10;
  v11 = sub_1AE82FE94(v5);
  v13 = v12;
  v5[7] = (uint64_t)v11;
  (*(void (**)(char *))(*(_QWORD *)(v6 - 8) + 16))(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(&v10[*(int *)(TupleTypeMetadata2 + 48)], v13, v7);
  return sub_1AE82FE40;
}

void sub_1AE82FE40(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*a1 + 40) + 8))(*(_QWORD *)(*a1 + 48), *(_QWORD *)(*a1 + 32));
  v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);
  free((void *)v3);
}

void (*sub_1AE82FE94(uint64_t *a1))(_QWORD *a1)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v3;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  v3 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  a1[1] = v3;
  a1[2] = (uint64_t)malloc(*(_QWORD *)(v3 + 64));
  sub_1AE82FC04();
  return sub_1AE82FF5C;
}

void sub_1AE82FF5C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

uint64_t sub_1AE82FFB4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1AE82FBF4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1AE82FFDC(uint64_t *a1)
{
  uint64_t result;

  result = sub_1AE82FBF4(*a1);
  *a1 = result;
  return result;
}

__n128 sub_1AE830004@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_1AE830014(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE961674, a1);
  return sub_1AE9264D8();
}

uint64_t sub_1AE830048(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE961674, a1);
  return sub_1AE926508();
}

uint64_t sub_1AE83007C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[7];
  uint64_t v12;

  v12 = a1;
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  swift_getTupleTypeMetadata2();
  v6 = sub_1AE9262B0();
  v7 = MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF50], v6);
  v9 = sub_1AE595DD0((void (*)(char *, uint64_t))sub_1AE830380, (uint64_t)v11, v6, a2, MEMORY[0x1E0DEDCE8], v7, MEMORY[0x1E0DEDD18], v8);
  v12 = a1;
  MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF38], v6);
  sub_1AE925CA4();
  return v9;
}

uint64_t sub_1AE830170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v11 = (char *)&v18 - v10;
  v12 = *(int *)(v9 + 48);
  v13 = &v11[v12];
  v14 = a1 + v12;
  v15 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v11, a1, a2);
  v16 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v13, v14, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a4, v11, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v13, a3);
}

uint64_t sub_1AE83025C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1AE83007C(a1, a2[2], a2[3], a2[4]);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1AE83028C()
{
  if ((sub_1AE9262BC() & 1) != 0)
    return sub_1AE925D04();
  else
    return 0;
}

uint64_t sub_1AE830310()
{
  return sub_1AE83028C();
}

void sub_1AE830334()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE830344()
{
  JUMPOUT(0x1AF454B70);
}

uint64_t sub_1AE830354()
{
  return MEMORY[0x1E0DEB430];
}

void sub_1AE830360()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE830370()
{
  JUMPOUT(0x1AF454B70);
}

uint64_t sub_1AE830380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1AE830170(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1AE8303A0()
{
  return sub_1AE925E00() & 1;
}

void sub_1AE8303D8(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v18[2];
  uint64_t v19;

  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v8 = 0;
    v9 = MEMORY[0x1E0DEE9D8];
    while (v8 < *(_QWORD *)(a1 + 16))
    {
      v10 = *(_QWORD *)(a1 + 8 * v8 + 32);
      if (*(_QWORD *)(v10 + 16) != 2)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1AE92691C();
        swift_bridgeObjectRelease();
        strcpy((char *)v18, "params pair ");
        BYTE5(v18[1]) = 0;
        HIWORD(v18[1]) = -5120;
        MEMORY[0x1AF453400](v10, MEMORY[0x1E0DEA968]);
        sub_1AE925F74();
        swift_bridgeObjectRelease();
        sub_1AE925F74();
        v12 = v18[0];
        v13 = v18[1];
        sub_1AE8368D4();
        swift_allocError();
        *(_QWORD *)v14 = a2;
        *(_QWORD *)(v14 + 8) = a3;
        *(_QWORD *)(v14 + 16) = a4;
        *(_QWORD *)(v14 + 24) = a5;
        *(_QWORD *)(v14 + 32) = v12;
        *(_QWORD *)(v14 + 40) = v13;
        *(_BYTE *)(v14 + 48) = 0;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRetain();
      v19 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE5218F4();
        v9 = v19;
      }
      v11 = *(_QWORD *)(v9 + 16);
      if (v11 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_1AE5218F4();
        v9 = v19;
      }
      ++v8;
      *(_QWORD *)(v9 + 16) = v11 + 1;
      *(_QWORD *)(v9 + 8 * v11 + 32) = v10;
      if (v6 == v8)
        goto LABEL_10;
    }
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1AE83060C(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_signpost_type_t v26;
  uint8_t *v27;
  os_signpost_id_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[11];

  v46 = a1;
  v47 = a2;
  v3 = sub_1AE925AE8();
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  sub_1AE4F6630();
  v5 = MEMORY[0x1E0C80A78](v4);
  v43 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - v7;
  v9 = sub_1AE925B6C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F666C();
  v13 = v12 - v11;
  v39 = sub_1AE925B0C();
  v38 = *(_QWORD *)(v39 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F666C();
  v17 = v16 - v15;
  v37 = type metadata accessor for LogSignpost();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F666C();
  v21 = v20 - v19;
  v42 = *v2;
  v23 = *((_QWORD *)v2 + 2);
  v22 = *((_QWORD *)v2 + 3);
  v41 = *((_QWORD *)v2 + 4);
  v40 = *((_QWORD *)v2 + 5);
  if (qword_1ED31C728 != -1)
    swift_once();
  v24 = sub_1AE4FB608(v9, (uint64_t)qword_1ED31C710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v24, v9);
  sub_1AE925AF4();
  sub_1AE925B00();
  sub_1AE925AC4();
  v25 = sub_1AE925B00();
  v26 = sub_1AE926670();
  if ((sub_1AE926700() & 1) != 0)
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    v28 = sub_1AE925AD0();
    _os_signpost_emit_with_name_impl(&dword_1AE4F2000, v25, v26, v28, "Knosis.parseKGQ", "", v27, 2u);
    MEMORY[0x1AF454C78](v27, -1, -1);
  }

  v29 = v44;
  v30 = v45;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v43, v8, v45);
  sub_1AE925B3C();
  swift_allocObject();
  v31 = sub_1AE925B30();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
  *(_QWORD *)v21 = "Knosis.parseKGQ";
  *(_QWORD *)(v21 + 8) = 15;
  *(_BYTE *)(v21 + 16) = 2;
  *(_QWORD *)(v21 + 24) = v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v21 + *(int *)(v37 + 24), v17, v39);
  swift_bridgeObjectRetain();
  sub_1AE4FB75C();
  v32 = v47;
  sub_1AE4F66CC();
  v33 = v46;
  v34 = sub_1AE925F20();
  v53[0] = v23;
  v53[1] = v22;
  v53[2] = v33;
  v53[3] = v32;
  v53[4] = v34;
  v53[5] = 0;
  v53[6] = MEMORY[0x1E0DEE9D8];
  v53[7] = -1;
  v48 = v42;
  v49 = v23;
  v50 = v22;
  v51 = v41;
  v52 = v40;
  v35 = v53[10];
  sub_1AE83134C((uint64_t)v53);
  swift_bridgeObjectRelease();
  if (v35)
  {
    sub_1AE4F67AC();
    swift_bridgeObjectRelease();
    sub_1AE4F9038();
  }
  else
  {
    sub_1AE4F66E8();
    sub_1AE4F67AC();
    swift_bridgeObjectRelease();
    sub_1AE50668C();
    sub_1AE4FC564();
  }
  sub_1AE576DB0(v21);
  sub_1AE50B9EC(v21);
  sub_1AE4F667C();
}

