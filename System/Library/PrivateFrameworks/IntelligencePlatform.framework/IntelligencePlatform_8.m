void sub_1AE8A2E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  *(_BYTE *)(v0 - 200) = 0;
  sub_1AE8A7B14();
  v1 = *(_QWORD *)(v0 - 208);
  sub_1AE8AA8E8();
  sub_1AE8AAA40();
  sub_1AE8A7B50();
  sub_1AE926CC4();
  sub_1AE6291A0();
  v2 = sub_1AE8AAA30();
  v3(v2, v1);
  sub_1AE4F667C();
}

void TriplesQuery.Clause.Impl.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;

  sub_1AE4F67EC();
  a19 = v22;
  a20 = v23;
  a10 = v20;
  v25 = v24;
  v26 = sub_1AE501548(&qword_1EEDA53B8);
  sub_1AE4F9050(v26, (uint64_t)&a12);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v27);
  sub_1AE4F9024();
  v28 = sub_1AE501548(&qword_1EEDA53C0);
  sub_1AE4F9050(v28, (uint64_t)&a17);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v29);
  sub_1AE4F9024();
  v30 = sub_1AE501548(&qword_1EEDA53C8);
  sub_1AE4F9050(v30, (uint64_t)&a14);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v31);
  sub_1AE4F9024();
  v32 = sub_1AE501548(&qword_1EEDA53D0);
  sub_1AE4F9050(v32, (uint64_t)&a11);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v33);
  sub_1AE4F9024();
  v34 = sub_1AE501548(&qword_1EEDA53D8);
  sub_1AE4F9050(v34, (uint64_t)&a9);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v35);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA53E0);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v36);
  sub_1AE4F9024();
  sub_1AE5085B4(v37);
  v38 = sub_1AE501548(&qword_1EEDA53E8);
  MEMORY[0x1E0C80A78](v38);
  sub_1AE4F6744();
  v39 = sub_1AE501548(&qword_1EEDA53F0);
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  sub_1AE5009EC();
  v53 = v25;
  sub_1AE4F9858(v25, v25[3]);
  sub_1AE8A7808();
  v41 = a10;
  sub_1AE926F34();
  if (v41)
  {
    v42 = (uint64_t)v25;
  }
  else
  {
    a10 = v39;
    v43 = sub_1AE926C1C();
    v44 = *(_QWORD *)(v43 + 16);
    if (v44)
    {
      v52 = *(unsigned __int8 *)(v43 + 32);
      sub_1AE50AF34(1, v44, v43, v43 + 32, 0, (2 * v44) | 1);
      v46 = v45;
      v48 = v47;
      swift_bridgeObjectRelease();
      if (v46 == v48 >> 1)
        __asm { BR              X9 }
      v49 = v21;
    }
    else
    {
      v49 = v21;
    }
    v42 = (uint64_t)v53;
    v50 = a10;
    sub_1AE6080A8();
    sub_1AE4F6778();
    sub_1AE501548(&qword_1EED99C38);
    sub_1AE8AAB70((uint64_t)&type metadata for TriplesQuery.Clause.Impl);
    v51 = sub_1AE5078F4();
    sub_1AE509370(v51, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1AE4FBA84();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v49, v50);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v42);
  sub_1AE4F667C();
}

#error "1AE8A3A24: call analysis failed (funcsize=5)"

#error "1AE8A3A38: call analysis failed (funcsize=5)"

void static TriplesQuery.Clause.&& infix(_:_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_1AE50AEC4();
  v2 = *(_QWORD *)(v1 + 64);
  v53 = *(_QWORD *)(v1 + 56);
  v54 = v3;
  v49 = *(_QWORD *)(v1 + 80);
  v51 = *(_QWORD *)(v1 + 72);
  v47 = *(_QWORD *)(v1 + 88);
  v43 = *(_QWORD *)(v1 + 96);
  HIDWORD(v41) = *(unsigned __int8 *)(v1 + 104);
  v5 = *(_QWORD *)v4;
  v65 = *(_QWORD *)v4;
  v66 = *(_QWORD *)(v4 + 8);
  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 32);
  v63 = *(_QWORD *)(v4 + 40);
  v64 = *(_QWORD *)(v4 + 24);
  v8 = *(_QWORD *)(v4 + 48);
  v62 = *(_QWORD *)(v4 + 56);
  v9 = *(_QWORD *)(v4 + 64);
  v61 = *(_QWORD *)(v4 + 72);
  v11 = *(_QWORD *)(v4 + 80);
  v10 = *(_QWORD *)(v4 + 88);
  v12 = *(_QWORD *)(v4 + 96);
  HIDWORD(v45) = *(unsigned __int8 *)(v4 + 104);
  sub_1AE501548((uint64_t *)&unk_1ED30FFC0);
  v13 = sub_1AE8AAB34();
  *(_OWORD *)(v13 + 16) = xmmword_1AE933BD0;
  *(_QWORD *)(v13 + 32) = v60;
  *(_QWORD *)(v13 + 40) = v59;
  v20 = sub_1AE8AA9C0((_QWORD *)v13, v59, v14, v15, v16, v17, v18, v19, v34, v35, v36, v37, v38, v39, v41, v43, v45, v47, v49,
          v51,
          v53,
          v54,
          v55,
          v56,
          v57,
          v58);
  v20[12] = v2;
  v20[13] = v52;
  v20[14] = v50;
  v20[15] = v48;
  v20[16] = v44;
  *((_BYTE *)v20 + 136) = v42;
  v20[18] = v5;
  v20[19] = v66;
  v20[20] = v6;
  v20[21] = v64;
  v20[22] = v7;
  v20[23] = v63;
  v20[24] = v8;
  v20[25] = v62;
  v20[26] = v9;
  v20[27] = v61;
  v20[28] = v11;
  v20[29] = v10;
  v20[30] = v12;
  *((_BYTE *)v20 + 248) = v46;
  *v0 = 0;
  v0[1] = v20;
  sub_1AE8AAA08();
  sub_1AE526458(v28, v21, v22, v23, v24, v25, v26, v27, v29, v30, v31, v32, v33, v40);
  sub_1AE526458(v65, v66, v6, v64, v7, v63, v8, v62, v9, v61, v11, v10, v12, v46);
  sub_1AE4FD7C8();
}

void static TriplesQuery.Clause.|| infix(_:_:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  sub_1AE50AEC4();
  v54 = *(_QWORD *)(v1 + 56);
  v55 = v2;
  v3 = *(_QWORD *)(v1 + 80);
  v46 = *(_QWORD *)(v1 + 72);
  v48 = *(_QWORD *)(v1 + 64);
  v42 = *(_QWORD *)(v1 + 96);
  v44 = *(_QWORD *)(v1 + 88);
  HIDWORD(v39) = *(unsigned __int8 *)(v1 + 104);
  v5 = *(_QWORD *)v4;
  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v66 = *(_QWORD *)v4;
  v8 = *(_QWORD *)(v4 + 32);
  v64 = *(_QWORD *)(v4 + 40);
  v65 = *(_QWORD *)(v4 + 8);
  v9 = *(_QWORD *)(v4 + 48);
  v63 = *(_QWORD *)(v4 + 56);
  v10 = *(_QWORD *)(v4 + 80);
  v50 = *(_QWORD *)(v4 + 72);
  v52 = *(_QWORD *)(v4 + 64);
  v11 = *(_QWORD *)(v4 + 96);
  v62 = *(_QWORD *)(v4 + 88);
  v12 = *(_BYTE *)(v4 + 104);
  sub_1AE501548((uint64_t *)&unk_1ED30FFC0);
  v13 = sub_1AE8AAB34();
  *(_OWORD *)(v13 + 16) = xmmword_1AE933BD0;
  *(_QWORD *)(v13 + 32) = v61;
  *(_QWORD *)(v13 + 40) = v60;
  v20 = sub_1AE8AA9C0((_QWORD *)v13, v60, v14, v15, v16, v17, v18, v19, v34, v35, v36, v37, v38, v39, v42, v44, v46, v48, v50,
          v52,
          v54,
          v55,
          v56,
          v57,
          v58,
          v59);
  v20[12] = v49;
  v20[13] = v47;
  v20[14] = v3;
  v20[15] = v45;
  v20[16] = v43;
  *((_BYTE *)v20 + 136) = v41;
  v20[18] = v5;
  v20[19] = v65;
  v20[20] = v6;
  v20[21] = v7;
  v20[22] = v8;
  v20[23] = v64;
  v20[24] = v9;
  v20[25] = v63;
  v20[26] = v53;
  v20[27] = v51;
  v20[28] = v10;
  v20[29] = v62;
  v20[30] = v11;
  *((_BYTE *)v20 + 248) = v12;
  *v0 = 1;
  v0[1] = v20;
  sub_1AE8AAA08();
  sub_1AE526458(v28, v21, v22, v23, v24, v25, v26, v27, v29, v30, v31, v32, v33, v40);
  sub_1AE526458(v66, v65, v6, v7, v8, v64, v9, v63, v53, v51, v10, v62, v11, v12);
  sub_1AE4FD7C8();
}

_BYTE *TriplesQuery.Clause.ContainsClause.init(subjectMatchType:subjects:predicateMatchType:predicates:objectMatchType:objects:relationshipIdMatchType:relationshipIds:relationshipPredicateMatchType:relationshipPredicates:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11)
{
  char v11;
  char v12;
  char v13;
  char v14;

  v11 = *a3;
  v12 = *a5;
  v13 = *a7;
  v14 = *a10;
  *(_BYTE *)a9 = *result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = v11;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = v12;
  *(_QWORD *)(a9 + 40) = a6;
  *(_BYTE *)(a9 + 48) = v13;
  *(_QWORD *)(a9 + 56) = a8;
  *(_BYTE *)(a9 + 64) = v14;
  *(_QWORD *)(a9 + 72) = a11;
  return result;
}

void TriplesQuery.Clause.MatchClause.init(subjectMatchType:subjects:subjectClauses:predicateMatchType:predicates:objectMatchType:objects:relationshipIdMatchType:relationshipIds:relationshipPredicateMatchType:relationshipPredicates:sourceMatchType:sources:)(uint64_t a1@<X8>, char *a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>, char *a5@<X3>, uint64_t a6@<X4>, char *a7@<X5>, uint64_t a8@<X6>, char *a9@<X7>, uint64_t a10, char *a11, uint64_t a12, char *a13, uint64_t a14)
{
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v14 = *a2;
  v15 = *a5;
  v16 = *a7;
  v17 = *a9;
  v18 = *a11;
  v19 = *a13;
  *(_BYTE *)a1 = v14;
  *(_QWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = a4;
  *(_BYTE *)(a1 + 24) = v15;
  *(_QWORD *)(a1 + 32) = a6;
  *(_BYTE *)(a1 + 40) = v16;
  *(_QWORD *)(a1 + 48) = a8;
  *(_BYTE *)(a1 + 56) = v17;
  *(_QWORD *)(a1 + 64) = a10;
  *(_BYTE *)(a1 + 72) = v18;
  *(_QWORD *)(a1 + 80) = a12;
  *(_BYTE *)(a1 + 88) = v19;
  *(_QWORD *)(a1 + 96) = a14;
  sub_1AE8AAB98(a1);
}

unint64_t sub_1AE8A3DA4()
{
  unint64_t result;

  result = qword_1EED98CC8;
  if (!qword_1EED98CC8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B880, &_s6ClauseV22AggregateLogicFunctionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98CC8);
  }
  return result;
}

unint64_t sub_1AE8A3DE0()
{
  unint64_t result;

  result = qword_1EEDA5308;
  if (!qword_1EEDA5308)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B830, &_s6ClauseV22AggregateLogicFunctionO13AnyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5308);
  }
  return result;
}

unint64_t sub_1AE8A3E1C()
{
  unint64_t result;

  result = qword_1EED98CE0;
  if (!qword_1EED98CE0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B7E0, &_s6ClauseV22AggregateLogicFunctionO13AllCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98CE0);
  }
  return result;
}

uint64_t static TriplesQuery.Clause.fullTextSearch(objects:objectSearchType:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = v3;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_QWORD *)(a3 + 96) = 0;
  *(_BYTE *)(a3 + 104) = 96;
  return swift_bridgeObjectRetain();
}

uint64_t TriplesQuery.Clause.FullTextSearchClause.init(objects:objectSearchType:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *a2;
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v3;
  return result;
}

void static TriplesQuery.Clause.comparison(column:matchType:value:)(uint64_t a1@<X8>, unsigned __int8 *a2@<X0>, unsigned __int8 *a3@<X1>, double a4@<D0>)
{
  *(_QWORD *)a1 = *a2 | ((unint64_t)*a3 << 8);
  *(double *)(a1 + 8) = a4;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_QWORD *)(a1 + 96) = 0;
  sub_1AE8AAB98(a1);
}

_BYTE *TriplesQuery.Clause.ComparisonClause.init(column:matchType:value:)@<X0>(_BYTE *result@<X0>, char *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  char v4;

  v4 = *a2;
  *(_BYTE *)a3 = *result;
  *(_BYTE *)(a3 + 1) = v4;
  *(double *)(a3 + 8) = a4;
  return result;
}

void static TriplesQuery.Clause.all()(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_1AE8AAB98(a1);
}

uint64_t TriplesQuery.Clause.description.getter()
{
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE4FF0F0();
  return 0;
}

uint64_t sub_1AE8A3FBC()
{
  sub_1AE8A7D30();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A3FE4()
{
  sub_1AE8A7D30();
  return sub_1AE926FA0();
}

void TriplesQuery.Clause.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F67EC();
  v1 = sub_1AE501548(&qword_1EED98E98);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4F90C8();
  sub_1AE8AA8A8();
  sub_1AE8A7D30();
  sub_1AE4FC7AC();
  sub_1AE8A7D6C();
  sub_1AE8AA8F4();
  sub_1AE4FBA8C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_1AE4F667C();
}

void TriplesQuery.Clause.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char v11;

  sub_1AE4F67EC();
  v2 = v1;
  sub_1AE501548(&qword_1EEDA5430);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE505354();
  sub_1AE8A7D30();
  sub_1AE4F680C();
  if (!v0)
  {
    sub_1AE8A7DA8();
    sub_1AE926BEC();
    sub_1AE4F777C();
    *(_OWORD *)v2 = v4;
    *(_OWORD *)(v2 + 16) = v5;
    *(_OWORD *)(v2 + 32) = v6;
    *(_OWORD *)(v2 + 48) = v7;
    *(_OWORD *)(v2 + 64) = v8;
    *(_OWORD *)(v2 + 80) = v9;
    *(_QWORD *)(v2 + 96) = v10;
    *(_BYTE *)(v2 + 104) = v11;
  }
  sub_1AE4F90EC();
  sub_1AE595D68();
  sub_1AE4F667C();
}

void sub_1AE8A4220()
{
  TriplesQuery.Clause.init(from:)();
}

void sub_1AE8A4234()
{
  TriplesQuery.Clause.encode(to:)();
}

void TriplesQuery.Clause.AggregateClause.logicFunction.getter(_BYTE *a1@<X8>)
{
  sub_1AE508FD8(a1);
}

uint64_t (*TriplesQuery.Clause.AggregateClause.logicFunction.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t (*TriplesQuery.Clause.AggregateClause.clauses.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1AE8A4274(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E75466369676F6CLL && a2 == 0xED00006E6F697463;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73657375616C63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE8A4384(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73657375616C63;
  else
    return 0x6E75466369676F6CLL;
}

uint64_t sub_1AE8A43C8()
{
  char *v0;

  return sub_1AE8A4384(*v0);
}

uint64_t sub_1AE8A43D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8A4274(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8A43F4()
{
  sub_1AE8A7DE4();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A441C()
{
  sub_1AE8A7DE4();
  return sub_1AE926FA0();
}

void TriplesQuery.Clause.AggregateClause.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F67EC();
  sub_1AE7368DC();
  sub_1AE501548(&qword_1EED98E90);
  sub_1AE508B20();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE8AA8A8();
  sub_1AE8A7DE4();
  sub_1AE4FC7AC();
  sub_1AE8A7E20();
  sub_1AE4FC9E0();
  if (!v0)
  {
    sub_1AE8AAB58();
    sub_1AE4F69EC();
    sub_1AE4F7AD0(&qword_1EED98E30, v2, (uint64_t (*)(void))sub_1AE8A7E5C, MEMORY[0x1E0DEAF10]);
    sub_1AE4FC9E0();
  }
  sub_1AE6291A0();
  sub_1AE595D68();
  sub_1AE4F667C();
}

void TriplesQuery.Clause.AggregateClause.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1AE4F67EC();
  sub_1AE736894();
  sub_1AE501548(&qword_1EEDA5440);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE505354();
  sub_1AE8A7DE4();
  sub_1AE4F680C();
  if (!v15)
  {
    sub_1AE8A7E98();
    sub_1AE506F30();
    sub_1AE4F69EC();
    sub_1AE8AAB58();
    sub_1AE4F7AD0(&qword_1EEDA5450, v17, (uint64_t (*)(void))sub_1AE8A7ED4, MEMORY[0x1E0DEAF40]);
    sub_1AE5033C4();
    sub_1AE4F9250();
    *(_BYTE *)v14 = a13;
    *(_QWORD *)(v14 + 8) = v18;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v13);
  sub_1AE4F667C();
}

void sub_1AE8A4684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TriplesQuery.Clause.AggregateClause.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1AE8A4698()
{
  TriplesQuery.Clause.AggregateClause.encode(to:)();
}

void TriplesQuery.Clause.JoinClause.joinCondition.getter(_BYTE *a1@<X8>)
{
  sub_1AE508FD8(a1);
}

uint64_t (*TriplesQuery.Clause.JoinClause.joinCondition.modify())(_QWORD)
{
  return nullsub_1;
}

void TriplesQuery.Clause.JoinClause.clauses.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE8AAB04();
  *(_QWORD *)(v1 + 8) = v0;
  sub_1AE4F6664();
}

uint64_t (*TriplesQuery.Clause.JoinClause.clauses.modify())(_QWORD)
{
  return nullsub_1;
}

void TriplesQuery.Clause.JoinClause.shortDescription.getter()
{
  uint64_t v0;

  sub_1AE925F74();
  sub_1AE8AA9A8();
  sub_1AE8AA98C();
  v0 = sub_1AE4FB75C();
  MEMORY[0x1AF453400](v0, &type metadata for TriplesQuery.Clause);
  sub_1AE4FBAE0();
  sub_1AE4F6648();
  sub_1AE4F665C();
  sub_1AE4FF0F0();
  sub_1AE4FCDE0();
}

uint64_t sub_1AE8A4794(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x646E6F436E696F6ALL && a2 == 0xED00006E6F697469;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73657375616C63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE8A48A4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73657375616C63;
  else
    return 0x646E6F436E696F6ALL;
}

uint64_t sub_1AE8A48E8()
{
  char *v0;

  return sub_1AE8A48A4(*v0);
}

uint64_t sub_1AE8A48F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8A4794(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8A4914()
{
  sub_1AE8A7F10();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A493C()
{
  sub_1AE8A7F10();
  return sub_1AE926FA0();
}

void TriplesQuery.Clause.JoinClause.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE4F67EC();
  sub_1AE7368DC();
  sub_1AE501548(&qword_1EED98E80);
  sub_1AE508B20();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE8AA8A8();
  sub_1AE8A7F10();
  sub_1AE4FC7AC();
  sub_1AE8A7F4C();
  sub_1AE4FC9E0();
  if (!v0)
  {
    sub_1AE8AAB58();
    sub_1AE4F69EC();
    sub_1AE4F7AD0(&qword_1EED98E30, v2, (uint64_t (*)(void))sub_1AE8A7E5C, MEMORY[0x1E0DEAF10]);
    sub_1AE4FC9E0();
  }
  sub_1AE6291A0();
  sub_1AE595D68();
  sub_1AE4F667C();
}

void TriplesQuery.Clause.JoinClause.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1AE4F67EC();
  sub_1AE736894();
  sub_1AE501548(&qword_1EEDA5460);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE505354();
  sub_1AE8A7F10();
  sub_1AE4F680C();
  if (!v15)
  {
    sub_1AE8A7F88();
    sub_1AE506F30();
    sub_1AE4F69EC();
    sub_1AE8AAB58();
    sub_1AE4F7AD0(&qword_1EEDA5450, v17, (uint64_t (*)(void))sub_1AE8A7ED4, MEMORY[0x1E0DEAF40]);
    sub_1AE5033C4();
    sub_1AE4F9250();
    *(_BYTE *)v14 = a13;
    *(_QWORD *)(v14 + 8) = v18;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v13);
  sub_1AE4F667C();
}

void sub_1AE8A4BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TriplesQuery.Clause.JoinClause.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1AE8A4BB8()
{
  TriplesQuery.Clause.JoinClause.encode(to:)();
}

void TriplesQuery.Clause.ContainsClause.subjectMatchType.getter(_BYTE *a1@<X8>)
{
  sub_1AE508FD8(a1);
}

uint64_t (*TriplesQuery.Clause.ContainsClause.subjectMatchType.modify())(_QWORD)
{
  return nullsub_1;
}

void TriplesQuery.Clause.ContainsClause.subjects.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE8AAB04();
  *(_QWORD *)(v1 + 8) = v0;
  sub_1AE4F6664();
}

uint64_t (*TriplesQuery.Clause.ContainsClause.subjects.modify())(_QWORD)
{
  return nullsub_1;
}

void TriplesQuery.Clause.ContainsClause.predicateMatchType.getter(_BYTE *a1@<X8>)
{
  sub_1AE508FD8(a1);
}

_BYTE *TriplesQuery.Clause.ContainsClause.predicateMatchType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*TriplesQuery.Clause.ContainsClause.predicateMatchType.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t TriplesQuery.Clause.ContainsClause.predicates.getter()
{
  return swift_bridgeObjectRetain();
}

void TriplesQuery.Clause.ContainsClause.predicates.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  sub_1AE4F6664();
}

uint64_t (*TriplesQuery.Clause.ContainsClause.predicates.modify())(_QWORD)
{
  return nullsub_1;
}

void TriplesQuery.Clause.ContainsClause.objectMatchType.getter(_BYTE *a1@<X8>)
{
  sub_1AE508FD8(a1);
}

_BYTE *TriplesQuery.Clause.ContainsClause.objectMatchType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*TriplesQuery.Clause.ContainsClause.objectMatchType.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t TriplesQuery.Clause.ContainsClause.objects.getter()
{
  return swift_bridgeObjectRetain();
}

void TriplesQuery.Clause.ContainsClause.objects.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  sub_1AE4F6664();
}

uint64_t (*TriplesQuery.Clause.ContainsClause.objects.modify())(_QWORD)
{
  return nullsub_1;
}

void TriplesQuery.Clause.ContainsClause.relationshipIdMatchType.getter(_BYTE *a1@<X8>)
{
  sub_1AE508FD8(a1);
}

_BYTE *TriplesQuery.Clause.ContainsClause.relationshipIdMatchType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = *result;
  return result;
}

uint64_t (*TriplesQuery.Clause.ContainsClause.relationshipIdMatchType.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t TriplesQuery.Clause.ContainsClause.relationshipIds.getter()
{
  return swift_bridgeObjectRetain();
}

void TriplesQuery.Clause.ContainsClause.relationshipIds.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  sub_1AE4F6664();
}

uint64_t (*TriplesQuery.Clause.ContainsClause.relationshipIds.modify())(_QWORD)
{
  return nullsub_1;
}

void TriplesQuery.Clause.ContainsClause.relationshipPredicateMatchType.getter(_BYTE *a1@<X8>)
{
  sub_1AE508FD8(a1);
}

_BYTE *TriplesQuery.Clause.ContainsClause.relationshipPredicateMatchType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = *result;
  return result;
}

uint64_t (*TriplesQuery.Clause.ContainsClause.relationshipPredicateMatchType.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t TriplesQuery.Clause.ContainsClause.relationshipPredicates.getter()
{
  return swift_bridgeObjectRetain();
}

void TriplesQuery.Clause.ContainsClause.relationshipPredicates.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  sub_1AE4F6664();
}

uint64_t (*TriplesQuery.Clause.ContainsClause.relationshipPredicates.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1AE8A4D98(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v10;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001AE98A710 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x737463656A627573 && a2 == 0xE800000000000000;
    if (v5 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x80000001AE98A730 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v6 = a1 == 0x7461636964657270 && a2 == 0xEA00000000007365;
      if (v6 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v7 = a1 == 0x614D7463656A626FLL && a2 == 0xEF65707954686374;
        if (v7 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v8 = a1 == 0x737463656A626FLL && a2 == 0xE700000000000000;
          if (v8 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000017 && a2 == 0x80000001AE98A750 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v9 = a1 == 0x6E6F6974616C6572 && a2 == 0xEF73644970696873;
            if (v9 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AE98A770 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD000000000000016 && a2 == 0x80000001AE98A790)
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else
            {
              v10 = sub_1AE926D60();
              swift_bridgeObjectRelease();
              if ((v10 & 1) != 0)
                return 9;
              else
                return 10;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE8A51BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AE8A51F4 + 4 * byte_1AE9698C8[a1]))(0xD000000000000010, 0x80000001AE98A710);
}

uint64_t sub_1AE8A51F4()
{
  return 0x737463656A627573;
}

uint64_t sub_1AE8A520C(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_1AE8A52D0()
{
  unsigned __int8 *v0;

  return sub_1AE8A51BC(*v0);
}

uint64_t sub_1AE8A52D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8A4D98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8A52FC()
{
  sub_1AE8A7FC4();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A5324()
{
  sub_1AE8A7FC4();
  return sub_1AE926FA0();
}

void TriplesQuery.Clause.ContainsClause.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE4F67EC();
  v2 = sub_1AE501548(&qword_1EED98E88);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F910C();
  sub_1AE8AA8A8();
  sub_1AE8A7FC4();
  sub_1AE4FC7AC();
  sub_1AE8A8000();
  sub_1AE926CC4();
  if (!v0)
  {
    sub_1AE5FB9E8();
    sub_1AE501548(&qword_1ED318F30);
    sub_1AE8A8078(&qword_1EED98E40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    sub_1AE8AA95C();
    sub_1AE4FC9E0();
    sub_1AE50A82C(3);
    sub_1AE4FC9E0();
    sub_1AE50A82C(5);
    sub_1AE4FC9E0();
    sub_1AE50A82C(7);
    sub_1AE735664();
    sub_1AE4FC9E0();
    sub_1AE50A82C(9);
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_1AE595D68();
  sub_1AE4F667C();
}

void TriplesQuery.Clause.ContainsClause.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  sub_1AE501548(&qword_1EEDA5470);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE8A7FC4();
  sub_1AE8AA9E8();
  if (!v0)
  {
    v6 = sub_1AE8A803C();
    sub_1AE73548C();
    sub_1AE501548(&qword_1ED318F30);
    sub_1AE5FB9E8();
    sub_1AE8A8078(&qword_1ED318F38, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    sub_1AE505FF4();
    sub_1AE8AA9DC(2);
    sub_1AE73548C();
    sub_1AE8AAA90(3);
    sub_1AE505FF4();
    sub_1AE8AA9B4(4);
    sub_1AE73548C();
    if (!v6)
    {
      sub_1AE8AAA90(5);
      sub_1AE505FF4();
      sub_1AE8AA9DC(6);
      sub_1AE73548C();
      sub_1AE505FF4();
      sub_1AE735664();
      swift_bridgeObjectRetain();
      sub_1AE73548C();
      sub_1AE505FF4();
      sub_1AE4F6A04();
      sub_1AE4F66CC();
      swift_bridgeObjectRelease();
      *(_BYTE *)v4 = v7;
      *(_QWORD *)(v4 + 8) = v7;
      *(_BYTE *)(v4 + 16) = v7;
      *(_QWORD *)(v4 + 24) = v7;
      *(_BYTE *)(v4 + 32) = v7;
      *(_QWORD *)(v4 + 40) = v7;
      *(_BYTE *)(v4 + 48) = v7;
      *(_QWORD *)(v4 + 56) = v7;
      *(_BYTE *)(v4 + 64) = v7;
      *(_QWORD *)(v4 + 72) = v7;
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
      sub_1AE4F9038();
      sub_1AE4F6710();
      sub_1AE4F76D8();
      sub_1AE4F67AC();
      goto LABEL_4;
    }
    sub_1AE4F6A04();
    sub_1AE4F9038();
    sub_1AE4F67AC();
  }
  sub_1AE4F90EC();
  swift_bridgeObjectRelease();
  sub_1AE4F9038();
  sub_1AE4F67AC();
  sub_1AE4F76D8();
LABEL_4:
  swift_bridgeObjectRelease();
  sub_1AE4F667C();
}

void sub_1AE8A5A10()
{
  TriplesQuery.Clause.ContainsClause.init(from:)();
}

void sub_1AE8A5A24()
{
  TriplesQuery.Clause.ContainsClause.encode(to:)();
}

uint64_t sub_1AE8A5A38(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001AE98A710 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x737463656A627573 && a2 == 0xE800000000000000;
    if (v5 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x437463656A627573 && a2 == 0xEE0073657375616CLL;
      if (v6 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000012 && a2 == 0x80000001AE98A730 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v7 = a1 == 0x7461636964657270 && a2 == 0xEA00000000007365;
        if (v7 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v8 = a1 == 0x614D7463656A626FLL && a2 == 0xEF65707954686374;
          if (v8 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v9 = a1 == 0x737463656A626FLL && a2 == 0xE700000000000000;
            if (v9 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000017 && a2 == 0x80000001AE98A750 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              v10 = a1 == 0x6E6F6974616C6572 && a2 == 0xEF73644970696873;
              if (v10 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001AE98A770 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else if (a1 == 0xD000000000000016 && a2 == 0x80000001AE98A790 || (sub_1AE926D60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else
              {
                v11 = a1 == 0x614D656372756F73 && a2 == 0xEF65707954686374;
                if (v11 || (sub_1AE926D60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 11;
                }
                else if (a1 == 0x73656372756F73 && a2 == 0xE700000000000000)
                {
                  swift_bridgeObjectRelease();
                  return 12;
                }
                else
                {
                  v13 = sub_1AE926D60();
                  swift_bridgeObjectRelease();
                  if ((v13 & 1) != 0)
                    return 12;
                  else
                    return 13;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE8A5FB4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AE8A5FEC + 4 * byte_1AE9698D2[a1]))(0xD000000000000010, 0x80000001AE98A710);
}

uint64_t sub_1AE8A5FEC()
{
  return 0x737463656A627573;
}

uint64_t sub_1AE8A6004()
{
  return 0x437463656A627573;
}

uint64_t sub_1AE8A6028(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_1AE8A60FC()
{
  return 0x73656372756F73;
}

uint64_t sub_1AE8A6114()
{
  unsigned __int8 *v0;

  return sub_1AE8A5FB4(*v0);
}

uint64_t sub_1AE8A611C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8A5A38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8A6140()
{
  sub_1AE8A80CC();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A6168()
{
  sub_1AE8A80CC();
  return sub_1AE926FA0();
}

void TriplesQuery.Clause.MatchClause.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AE4F67EC();
  v3 = v2;
  v4 = sub_1AE501548(&qword_1EEDA5480);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE5009EC();
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE8A80CC();
  sub_1AE926F4C();
  sub_1AE8A8000();
  sub_1AE4FC9E0();
  if (!v0)
  {
    sub_1AE5FB9E8();
    sub_1AE4F69EC();
    sub_1AE4F7AD0(&qword_1EEDA5490, v6, (uint64_t (*)(void))sub_1AE52A494, MEMORY[0x1E0DEB3B8]);
    sub_1AE8AA95C();
    sub_1AE4F69EC();
    sub_1AE4F7AD0(&qword_1EED98E30, v7, (uint64_t (*)(void))sub_1AE8A7E5C, MEMORY[0x1E0DEAF10]);
    sub_1AE8AA95C();
    sub_1AE4FC9E0();
    sub_1AE4F69EC();
    sub_1AE4F7AD0(&qword_1EEDA3BC0, v8, (uint64_t (*)(void))sub_1AE5C7844, MEMORY[0x1E0DEB3B8]);
    sub_1AE8AA95C();
    sub_1AE4FC9E0();
    sub_1AE501548(&qword_1ED318F30);
    sub_1AE8A8078(&qword_1EED98E40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    sub_1AE8AA95C();
    sub_1AE4FC9E0();
    sub_1AE735664();
    sub_1AE501548(&qword_1ED30EB48);
    sub_1AE7AB2BC(&qword_1EEDA5498, &qword_1ED30EB48, (uint64_t (*)(void))sub_1AE667C78, MEMORY[0x1E0DEB3B8]);
    sub_1AE8AA95C();
    sub_1AE4FC9E0();
    sub_1AE8AA95C();
    sub_1AE4FC9E0();
    sub_1AE926C64();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  sub_1AE595D68();
  sub_1AE4F667C();
}

void TriplesQuery.Clause.MatchClause.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  v5 = sub_1AE501548(&qword_1EEDA54A0);
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F910C();
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE8A80CC();
  sub_1AE8AA9E8();
  if (v0)
  {
    sub_1AE8AAA68();
  }
  else
  {
    sub_1AE8A803C();
    sub_1AE73548C();
    sub_1AE4F69EC();
    sub_1AE5FB9E8();
    sub_1AE4F7AD0(&qword_1EEDA54A8, v6, (uint64_t (*)(void))sub_1AE52A458, MEMORY[0x1E0DEB3D8]);
    sub_1AE8AA950();
    sub_1AE4F69EC();
    sub_1AE4F7AD0(&qword_1EEDA5450, v7, (uint64_t (*)(void))sub_1AE8A7ED4, MEMORY[0x1E0DEAF40]);
    v9 = v8;
    swift_bridgeObjectRetain();
    sub_1AE8AA950();
    if (!v9)
    {
      sub_1AE8AA9B4(3);
      sub_1AE8AA8C8();
      sub_1AE4F69EC();
      sub_1AE4F7AD0(&qword_1EEDA3BF0, v10, (uint64_t (*)(void))sub_1AE5C77CC, MEMORY[0x1E0DEB3D8]);
      sub_1AE8AA950();
      sub_1AE8AA9B4(5);
      sub_1AE607FA4();
      sub_1AE73548C();
      sub_1AE501548(&qword_1ED318F30);
      sub_1AE8A8078(&qword_1ED318F38, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
      sub_1AE8AA950();
      swift_bridgeObjectRetain();
      sub_1AE73548C();
      sub_1AE4F69EC();
      sub_1AE735664();
      sub_1AE4F7AD0(&qword_1EEDA54B0, v11, (uint64_t (*)(void))sub_1AE667FBC, MEMORY[0x1E0DEB3D8]);
      sub_1AE8AA950();
      sub_1AE8AA9DC(9);
      sub_1AE8AA8C8();
      sub_1AE8AAA90(10);
      sub_1AE607FA4();
      sub_1AE8AA950();
      sub_1AE8AA9B4(11);
      sub_1AE8AA8C8();
      v12 = sub_1AE926B8C();
      v15 = v13;
      v14 = v12;
      sub_1AE4FC10C();
      *(_BYTE *)v4 = v16;
      *(_QWORD *)(v4 + 8) = v16;
      *(_QWORD *)(v4 + 16) = v16;
      *(_BYTE *)(v4 + 24) = v16;
      *(_QWORD *)(v4 + 32) = v16;
      *(_BYTE *)(v4 + 40) = v16;
      *(_QWORD *)(v4 + 48) = v16;
      *(_BYTE *)(v4 + 56) = v16;
      *(_QWORD *)(v4 + 64) = v16;
      *(_BYTE *)(v4 + 72) = v16;
      *(_QWORD *)(v4 + 80) = v16;
      *(_BYTE *)(v4 + 88) = v16;
      *(_QWORD *)(v4 + 96) = v14;
      *(_BYTE *)(v4 + 104) = v15 & 1;
      sub_1AE4F90EC();
      sub_1AE4F67AC();
      sub_1AE4F76D8();
      sub_1AE4F6718();
      sub_1AE4F6710();
      sub_1AE4F6728();
      goto LABEL_5;
    }
    sub_1AE4FC10C();
    sub_1AE5087AC();
    sub_1AE8AAA68();
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v2);
  sub_1AE4F9038();
  swift_bridgeObjectRelease();
  sub_1AE4F6728();
  sub_1AE4F6718();
  sub_1AE4F76D8();
LABEL_5:
  swift_bridgeObjectRelease();
  sub_1AE4F667C();
}

void sub_1AE8A6C00()
{
  TriplesQuery.Clause.MatchClause.init(from:)();
}

void sub_1AE8A6C14()
{
  TriplesQuery.Clause.MatchClause.encode(to:)();
}

uint64_t sub_1AE8A6C28(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737463656A626FLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AE98A7B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE8A6D14(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0x737463656A626FLL;
}

uint64_t sub_1AE8A6D50()
{
  char *v0;

  return sub_1AE8A6D14(*v0);
}

uint64_t sub_1AE8A6D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8A6C28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8A6D7C()
{
  sub_1AE8A8108();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A6DA4()
{
  sub_1AE8A8108();
  return sub_1AE926FA0();
}

void TriplesQuery.Clause.FullTextSearchClause.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE4F67EC();
  sub_1AE7368DC();
  sub_1AE501548(&qword_1EEDA54B8);
  sub_1AE508B20();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4F683C();
  sub_1AE8AA8A8();
  sub_1AE8A8108();
  sub_1AE4FC7AC();
  sub_1AE501548(&qword_1ED318F30);
  sub_1AE8A8078(&qword_1EED98E40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
  sub_1AE4FC9E0();
  if (!v0)
  {
    sub_1AE8A8144();
    sub_1AE4FC9E0();
  }
  sub_1AE6291A0();
  sub_1AE595D68();
  sub_1AE4F667C();
}

void TriplesQuery.Clause.FullTextSearchClause.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;

  sub_1AE4F67EC();
  v12 = v11;
  sub_1AE501548(&qword_1EEDA54D0);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE505354();
  sub_1AE8A8108();
  sub_1AE4F680C();
  if (v10)
  {
    sub_1AE4F90EC();
  }
  else
  {
    sub_1AE501548(&qword_1ED318F30);
    sub_1AE8A8078(&qword_1ED318F38, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    sub_1AE73548C();
    v14 = sub_1AE8A8180();
    swift_bridgeObjectRetain();
    sub_1AE73548C();
    sub_1AE4F777C();
    if (v14)
    {
      sub_1AE4F6728();
    }
    else
    {
      *(_QWORD *)v12 = a10;
      *(_BYTE *)(v12 + 8) = v15;
    }
    sub_1AE4F90EC();
    sub_1AE4F6728();
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE8A7030(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E6D756C6F63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x707954686374616DLL && a2 == 0xE900000000000065;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AE8A7178(char a1)
{
  if (!a1)
    return 0x6E6D756C6F63;
  if (a1 == 1)
    return 0x707954686374616DLL;
  return 0x65756C6176;
}

void sub_1AE8A71D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TriplesQuery.Clause.FullTextSearchClause.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1AE8A71E4()
{
  TriplesQuery.Clause.FullTextSearchClause.encode(to:)();
}

uint64_t sub_1AE8A71F8()
{
  char *v0;

  return sub_1AE8A7178(*v0);
}

uint64_t sub_1AE8A7200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8A7030(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8A7224()
{
  sub_1AE8A81BC();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A724C()
{
  sub_1AE8A81BC();
  return sub_1AE926FA0();
}

void TriplesQuery.Clause.ComparisonClause.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE7368DC();
  sub_1AE501548(&qword_1EEDA54E0);
  sub_1AE508B20();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE8AA8A8();
  sub_1AE8A81BC();
  sub_1AE4FC7AC();
  sub_1AE8A81F8();
  sub_1AE4FC9E0();
  if (!v0)
  {
    sub_1AE8A8234();
    sub_1AE4FC9E0();
    sub_1AE926CA0();
  }
  sub_1AE6291A0();
  sub_1AE595D68();
  sub_1AE4FCE0C();
}

void TriplesQuery.Clause.ComparisonClause.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  sub_1AE736894();
  sub_1AE501548(&qword_1EEDA5500);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE505354();
  sub_1AE8A81BC();
  sub_1AE4F680C();
  if (!v2)
  {
    sub_1AE8A8270();
    sub_1AE506F30();
    sub_1AE8A82AC();
    sub_1AE506F30();
    sub_1AE926BC8();
    v5 = v4;
    sub_1AE4F9250();
    *(_BYTE *)v1 = v7;
    *(_BYTE *)(v1 + 1) = v6;
    *(_QWORD *)(v1 + 8) = v5;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
  sub_1AE4FCE0C();
}

void sub_1AE8A74DC()
{
  TriplesQuery.Clause.ComparisonClause.init(from:)();
}

void sub_1AE8A74F0()
{
  TriplesQuery.Clause.ComparisonClause.encode(to:)();
}

uint64_t sub_1AE8A7504()
{
  sub_1AE8A82E8();
  return sub_1AE926F94();
}

uint64_t sub_1AE8A752C()
{
  sub_1AE8A82E8();
  return sub_1AE926FA0();
}

uint64_t TriplesQuery.Clause.AllClause.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_1AE501548(&qword_1EEDA5518);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F90C8();
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE8A82E8();
  sub_1AE8AAAA0();
  return sub_1AE4FBA8C(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

uint64_t TriplesQuery.Clause.AllClause.init(from:)(uint64_t a1)
{
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a1);
}

uint64_t sub_1AE8A761C()
{
  return 0x75616C436C6C413CLL;
}

uint64_t sub_1AE8A763C(uint64_t a1)
{
  return TriplesQuery.Clause.AllClause.init(from:)(a1);
}

uint64_t sub_1AE8A7650(_QWORD *a1)
{
  return TriplesQuery.Clause.AllClause.encode(to:)(a1);
}

unint64_t sub_1AE8A7664()
{
  unint64_t result;

  result = qword_1EED98C50;
  if (!qword_1EED98C50)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B790, &_s6ClauseV13JoinConditionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C50);
  }
  return result;
}

unint64_t sub_1AE8A76A0()
{
  unint64_t result;

  result = qword_1EED98CA8;
  if (!qword_1EED98CA8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B740, &_s6ClauseV13JoinConditionO24RelationshipIdCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98CA8);
  }
  return result;
}

unint64_t sub_1AE8A76DC()
{
  unint64_t result;

  result = qword_1EEDA5328;
  if (!qword_1EEDA5328)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B6F0, &_s6ClauseV13JoinConditionO19PredicateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5328);
  }
  return result;
}

unint64_t sub_1AE8A7718()
{
  unint64_t result;

  result = qword_1EEDA5330;
  if (!qword_1EEDA5330)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B6A0, &_s6ClauseV13JoinConditionO16ObjectCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5330);
  }
  return result;
}

unint64_t sub_1AE8A7754()
{
  unint64_t result;

  result = qword_1EEDA5338;
  if (!qword_1EEDA5338)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B650, &_s6ClauseV13JoinConditionO17SubjectCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5338);
  }
  return result;
}

unint64_t sub_1AE8A7790()
{
  unint64_t result;

  result = qword_1EEDA5340;
  if (!qword_1EEDA5340)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B600, &_s6ClauseV13JoinConditionO15RowidCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5340);
  }
  return result;
}

unint64_t sub_1AE8A77CC()
{
  unint64_t result;

  result = qword_1ED30D910;
  if (!qword_1ED30D910)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.ComparableColumn, &type metadata for TriplesQuery.ComparableColumn);
    atomic_store(result, (unint64_t *)&qword_1ED30D910);
  }
  return result;
}

unint64_t sub_1AE8A7808()
{
  unint64_t result;

  result = qword_1EED98D10;
  if (!qword_1EED98D10)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B5B0, &_s6ClauseV4ImplO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D10);
  }
  return result;
}

unint64_t sub_1AE8A7844()
{
  unint64_t result;

  result = qword_1EEDA5378;
  if (!qword_1EEDA5378)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B560, &_s6ClauseV4ImplO13AllCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5378);
  }
  return result;
}

unint64_t sub_1AE8A7880()
{
  unint64_t result;

  result = qword_1EEDA5380;
  if (!qword_1EEDA5380)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.AllClause, &type metadata for TriplesQuery.Clause.AllClause);
    atomic_store(result, (unint64_t *)&qword_1EEDA5380);
  }
  return result;
}

unint64_t sub_1AE8A78BC()
{
  unint64_t result;

  result = qword_1EED98D38;
  if (!qword_1EED98D38)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B510, &_s6ClauseV4ImplO14JoinCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D38);
  }
  return result;
}

unint64_t sub_1AE8A78F8()
{
  unint64_t result;

  result = qword_1EED98BF0;
  if (!qword_1EED98BF0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.JoinClause, &type metadata for TriplesQuery.Clause.JoinClause);
    atomic_store(result, (unint64_t *)&qword_1EED98BF0);
  }
  return result;
}

unint64_t sub_1AE8A7934()
{
  unint64_t result;

  result = qword_1EEDA5388;
  if (!qword_1EEDA5388)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B4C0, &_s6ClauseV4ImplO20ComparisonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5388);
  }
  return result;
}

unint64_t sub_1AE8A7970()
{
  unint64_t result;

  result = qword_1EEDA5390;
  if (!qword_1EEDA5390)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.ComparisonClause, &type metadata for TriplesQuery.Clause.ComparisonClause);
    atomic_store(result, (unint64_t *)&qword_1EEDA5390);
  }
  return result;
}

unint64_t sub_1AE8A79AC()
{
  unint64_t result;

  result = qword_1EEDA5398;
  if (!qword_1EEDA5398)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B470, &_s6ClauseV4ImplO24FullTextSearchCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5398);
  }
  return result;
}

unint64_t sub_1AE8A79E8()
{
  unint64_t result;

  result = qword_1EEDA53A0;
  if (!qword_1EEDA53A0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.FullTextSearchClause, &type metadata for TriplesQuery.Clause.FullTextSearchClause);
    atomic_store(result, (unint64_t *)&qword_1EEDA53A0);
  }
  return result;
}

unint64_t sub_1AE8A7A24()
{
  unint64_t result;

  result = qword_1EEDA53A8;
  if (!qword_1EEDA53A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B420, &_s6ClauseV4ImplO15MatchCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA53A8);
  }
  return result;
}

unint64_t sub_1AE8A7A60()
{
  unint64_t result;

  result = qword_1EEDA53B0;
  if (!qword_1EEDA53B0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.MatchClause, &type metadata for TriplesQuery.Clause.MatchClause);
    atomic_store(result, (unint64_t *)&qword_1EEDA53B0);
  }
  return result;
}

unint64_t sub_1AE8A7A9C()
{
  unint64_t result;

  result = qword_1EED98D88;
  if (!qword_1EED98D88)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B3D0, &_s6ClauseV4ImplO22MatchStringsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D88);
  }
  return result;
}

unint64_t sub_1AE8A7AD8()
{
  unint64_t result;

  result = qword_1EED98C10;
  if (!qword_1EED98C10)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.ContainsClause, &type metadata for TriplesQuery.Clause.ContainsClause);
    atomic_store(result, (unint64_t *)&qword_1EED98C10);
  }
  return result;
}

unint64_t sub_1AE8A7B14()
{
  unint64_t result;

  result = qword_1EED98D60;
  if (!qword_1EED98D60)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B380, &_s6ClauseV4ImplO19AggregateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D60);
  }
  return result;
}

unint64_t sub_1AE8A7B50()
{
  unint64_t result;

  result = qword_1EED98C30;
  if (!qword_1EED98C30)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.AggregateClause, &type metadata for TriplesQuery.Clause.AggregateClause);
    atomic_store(result, (unint64_t *)&qword_1EED98C30);
  }
  return result;
}

unint64_t sub_1AE8A7B8C()
{
  unint64_t result;

  result = qword_1EEDA53F8;
  if (!qword_1EEDA53F8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.AllClause, &type metadata for TriplesQuery.Clause.AllClause);
    atomic_store(result, (unint64_t *)&qword_1EEDA53F8);
  }
  return result;
}

unint64_t sub_1AE8A7BC8()
{
  unint64_t result;

  result = qword_1EEDA5400;
  if (!qword_1EEDA5400)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.JoinClause, &type metadata for TriplesQuery.Clause.JoinClause);
    atomic_store(result, (unint64_t *)&qword_1EEDA5400);
  }
  return result;
}

unint64_t sub_1AE8A7C04()
{
  unint64_t result;

  result = qword_1EEDA5408;
  if (!qword_1EEDA5408)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.ComparisonClause, &type metadata for TriplesQuery.Clause.ComparisonClause);
    atomic_store(result, (unint64_t *)&qword_1EEDA5408);
  }
  return result;
}

unint64_t sub_1AE8A7C40()
{
  unint64_t result;

  result = qword_1EEDA5410;
  if (!qword_1EEDA5410)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.FullTextSearchClause, &type metadata for TriplesQuery.Clause.FullTextSearchClause);
    atomic_store(result, (unint64_t *)&qword_1EEDA5410);
  }
  return result;
}

unint64_t sub_1AE8A7C7C()
{
  unint64_t result;

  result = qword_1EEDA5418;
  if (!qword_1EEDA5418)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.MatchClause, &type metadata for TriplesQuery.Clause.MatchClause);
    atomic_store(result, (unint64_t *)&qword_1EEDA5418);
  }
  return result;
}

unint64_t sub_1AE8A7CB8()
{
  unint64_t result;

  result = qword_1EEDA5420;
  if (!qword_1EEDA5420)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.ContainsClause, &type metadata for TriplesQuery.Clause.ContainsClause);
    atomic_store(result, (unint64_t *)&qword_1EEDA5420);
  }
  return result;
}

unint64_t sub_1AE8A7CF4()
{
  unint64_t result;

  result = qword_1EEDA5428;
  if (!qword_1EEDA5428)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.AggregateClause, &type metadata for TriplesQuery.Clause.AggregateClause);
    atomic_store(result, (unint64_t *)&qword_1EEDA5428);
  }
  return result;
}

unint64_t sub_1AE8A7D30()
{
  unint64_t result;

  result = qword_1EED98C38;
  if (!qword_1EED98C38)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B330, &_s6ClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C38);
  }
  return result;
}

unint64_t sub_1AE8A7D6C()
{
  unint64_t result;

  result = qword_1EED98DB0;
  if (!qword_1EED98DB0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.Impl, &type metadata for TriplesQuery.Clause.Impl);
    atomic_store(result, (unint64_t *)&qword_1EED98DB0);
  }
  return result;
}

unint64_t sub_1AE8A7DA8()
{
  unint64_t result;

  result = qword_1EEDA5438;
  if (!qword_1EEDA5438)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.Impl, &type metadata for TriplesQuery.Clause.Impl);
    atomic_store(result, (unint64_t *)&qword_1EEDA5438);
  }
  return result;
}

unint64_t sub_1AE8A7DE4()
{
  unint64_t result;

  result = qword_1EED98C18;
  if (!qword_1EED98C18)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B2E0, &_s6ClauseV15AggregateClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C18);
  }
  return result;
}

unint64_t sub_1AE8A7E20()
{
  unint64_t result;

  result = qword_1EED98D08;
  if (!qword_1EED98D08)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.AggregateLogicFunction, &type metadata for TriplesQuery.Clause.AggregateLogicFunction);
    atomic_store(result, (unint64_t *)&qword_1EED98D08);
  }
  return result;
}

unint64_t sub_1AE8A7E5C()
{
  unint64_t result;

  result = qword_1EED98DB8;
  if (!qword_1EED98DB8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause, &type metadata for TriplesQuery.Clause);
    atomic_store(result, (unint64_t *)&qword_1EED98DB8);
  }
  return result;
}

unint64_t sub_1AE8A7E98()
{
  unint64_t result;

  result = qword_1EEDA5448;
  if (!qword_1EEDA5448)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.AggregateLogicFunction, &type metadata for TriplesQuery.Clause.AggregateLogicFunction);
    atomic_store(result, (unint64_t *)&qword_1EEDA5448);
  }
  return result;
}

unint64_t sub_1AE8A7ED4()
{
  unint64_t result;

  result = qword_1EEDA5458;
  if (!qword_1EEDA5458)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause, &type metadata for TriplesQuery.Clause);
    atomic_store(result, (unint64_t *)&qword_1EEDA5458);
  }
  return result;
}

unint64_t sub_1AE8A7F10()
{
  unint64_t result;

  result = qword_1EED98BD8;
  if (!qword_1EED98BD8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B290, &_s6ClauseV10JoinClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98BD8);
  }
  return result;
}

unint64_t sub_1AE8A7F4C()
{
  unint64_t result;

  result = qword_1EED98CC0;
  if (!qword_1EED98CC0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.JoinCondition, &type metadata for TriplesQuery.Clause.JoinCondition);
    atomic_store(result, (unint64_t *)&qword_1EED98CC0);
  }
  return result;
}

unint64_t sub_1AE8A7F88()
{
  unint64_t result;

  result = qword_1EEDA5468;
  if (!qword_1EEDA5468)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.JoinCondition, &type metadata for TriplesQuery.Clause.JoinCondition);
    atomic_store(result, (unint64_t *)&qword_1EEDA5468);
  }
  return result;
}

unint64_t sub_1AE8A7FC4()
{
  unint64_t result;

  result = qword_1EED98BF8;
  if (!qword_1EED98BF8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B240, &_s6ClauseV14ContainsClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98BF8);
  }
  return result;
}

unint64_t sub_1AE8A8000()
{
  unint64_t result;

  result = qword_1EED98E00;
  if (!qword_1EED98E00)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.MatchType, &type metadata for TriplesQuery.MatchType);
    atomic_store(result, (unint64_t *)&qword_1EED98E00);
  }
  return result;
}

unint64_t sub_1AE8A803C()
{
  unint64_t result;

  result = qword_1EEDA5478;
  if (!qword_1EEDA5478)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.MatchType, &type metadata for TriplesQuery.MatchType);
    atomic_store(result, (unint64_t *)&qword_1EEDA5478);
  }
  return result;
}

void sub_1AE8A8078(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = sub_1AE523CF0(&qword_1ED318F30);
    v7 = a2;
    atomic_store(MEMORY[0x1AF454B70](a3, v6, &v7), a1);
  }
  sub_1AE4FE870();
}

unint64_t sub_1AE8A80CC()
{
  unint64_t result;

  result = qword_1EEDA5488;
  if (!qword_1EEDA5488)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B1F0, &_s6ClauseV11MatchClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5488);
  }
  return result;
}

unint64_t sub_1AE8A8108()
{
  unint64_t result;

  result = qword_1EEDA54C0;
  if (!qword_1EEDA54C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B1A0, &_s6ClauseV20FullTextSearchClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA54C0);
  }
  return result;
}

unint64_t sub_1AE8A8144()
{
  unint64_t result;

  result = qword_1EEDA54C8;
  if (!qword_1EEDA54C8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.FullTextSearchType, &type metadata for TriplesQuery.FullTextSearchType);
    atomic_store(result, (unint64_t *)&qword_1EEDA54C8);
  }
  return result;
}

unint64_t sub_1AE8A8180()
{
  unint64_t result;

  result = qword_1EEDA54D8;
  if (!qword_1EEDA54D8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.FullTextSearchType, &type metadata for TriplesQuery.FullTextSearchType);
    atomic_store(result, (unint64_t *)&qword_1EEDA54D8);
  }
  return result;
}

unint64_t sub_1AE8A81BC()
{
  unint64_t result;

  result = qword_1EEDA54E8;
  if (!qword_1EEDA54E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B150, &_s6ClauseV16ComparisonClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA54E8);
  }
  return result;
}

unint64_t sub_1AE8A81F8()
{
  unint64_t result;

  result = qword_1EEDA54F0;
  if (!qword_1EEDA54F0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.ComparableColumn, &type metadata for TriplesQuery.ComparableColumn);
    atomic_store(result, (unint64_t *)&qword_1EEDA54F0);
  }
  return result;
}

unint64_t sub_1AE8A8234()
{
  unint64_t result;

  result = qword_1EEDA54F8;
  if (!qword_1EEDA54F8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.ComparisonType, &type metadata for TriplesQuery.ComparisonType);
    atomic_store(result, (unint64_t *)&qword_1EEDA54F8);
  }
  return result;
}

unint64_t sub_1AE8A8270()
{
  unint64_t result;

  result = qword_1EEDA5508;
  if (!qword_1EEDA5508)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.ComparableColumn, &type metadata for TriplesQuery.ComparableColumn);
    atomic_store(result, (unint64_t *)&qword_1EEDA5508);
  }
  return result;
}

unint64_t sub_1AE8A82AC()
{
  unint64_t result;

  result = qword_1EEDA5510;
  if (!qword_1EEDA5510)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.ComparisonType, &type metadata for TriplesQuery.ComparisonType);
    atomic_store(result, (unint64_t *)&qword_1EEDA5510);
  }
  return result;
}

unint64_t sub_1AE8A82E8()
{
  unint64_t result;

  result = qword_1EEDA5520;
  if (!qword_1EEDA5520)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B100, &_s6ClauseV9AllClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5520);
  }
  return result;
}

unint64_t sub_1AE8A8328()
{
  unint64_t result;

  result = qword_1EEDA5528;
  if (!qword_1EEDA5528)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.TableCodingKeys, &type metadata for TriplesQuery.Clause.TableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5528);
  }
  return result;
}

unint64_t sub_1AE8A8368()
{
  unint64_t result;

  result = qword_1ED310260;
  if (!qword_1ED310260)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.TableCodingKeys, &type metadata for TriplesQuery.Clause.TableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED310260);
  }
  return result;
}

unint64_t sub_1AE8A83A8()
{
  unint64_t result;

  result = qword_1ED310258;
  if (!qword_1ED310258)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.TableCodingKeys, &type metadata for TriplesQuery.Clause.TableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED310258);
  }
  return result;
}

unint64_t sub_1AE8A83E8()
{
  unint64_t result;

  result = qword_1EEDA5530;
  if (!qword_1EEDA5530)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.AggregateLogicFunction, &type metadata for TriplesQuery.Clause.AggregateLogicFunction);
    atomic_store(result, (unint64_t *)&qword_1EEDA5530);
  }
  return result;
}

unint64_t sub_1AE8A8428()
{
  unint64_t result;

  result = qword_1EEDA5538;
  if (!qword_1EEDA5538)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.JoinCondition, &type metadata for TriplesQuery.Clause.JoinCondition);
    atomic_store(result, (unint64_t *)&qword_1EEDA5538);
  }
  return result;
}

void type metadata accessor for TriplesQuery.Clause()
{
  sub_1AE4F67D4();
}

uint64_t _s6ClauseV15TableCodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1AE8A84D0 + 4 * byte_1AE9698E4[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1AE8A8504 + 4 * byte_1AE9698DF[v4]))();
}

uint64_t sub_1AE8A8504(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8A850C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8A8514);
  return result;
}

uint64_t sub_1AE8A8520(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8A8528);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1AE8A852C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8A8534(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for TriplesQuery.Clause.TableCodingKeys()
{
  sub_1AE4F67D4();
}

void type metadata accessor for TriplesQuery.Clause.AggregateLogicFunction()
{
  sub_1AE4F67D4();
}

void type metadata accessor for TriplesQuery.Clause.JoinCondition()
{
  sub_1AE4F67D4();
}

uint64_t destroy for TriplesQuery(uint64_t a1)
{
  return sub_1AE58307C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
}

void _s6ClauseV4ImplOwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  sub_1AE4FCCE4(a1, a2);
  sub_1AE8AABA0();
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 72) = v4;
  *(_QWORD *)(v2 + 80) = v5;
  *(_QWORD *)(v2 + 88) = v6;
  *(_QWORD *)(v2 + 96) = v7;
  *(_BYTE *)(v2 + 104) = v8;
  sub_1AE4F778C();
}

void _s6ClauseV4ImplOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  sub_1AE4FCCE4(a1, a2);
  sub_1AE8AABA0();
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 72) = v15;
  *(_QWORD *)(v2 + 80) = v16;
  *(_QWORD *)(v2 + 88) = v17;
  *(_QWORD *)(v2 + 96) = v18;
  *(_BYTE *)(v2 + 104) = v19;
  sub_1AE8AAA80(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
  sub_1AE4F778C();
}

uint64_t assignWithTake for TriplesQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v3 = *(_QWORD *)(a2 + 96);
  v4 = *(_BYTE *)(a2 + 104);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_OWORD *)(a1 + 64);
  v14 = *(_OWORD *)(a1 + 80);
  v15 = *(_QWORD *)(a1 + 96);
  v16 = *(_BYTE *)(a1 + 104);
  v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v17;
  v18 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v18;
  v19 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v19;
  *(_QWORD *)(a1 + 96) = v3;
  *(_BYTE *)(a1 + 104) = v4;
  sub_1AE58307C(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, v16);
  return a1;
}

uint64_t _s6ClauseV4ImplOwet_0(uint64_t a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return sub_1AE5FC17C(-1);
  if ((a2 & 0x80000000) == 0 || !*(_BYTE *)(a1 + 105))
  {
    v2 = *(_QWORD *)(a1 + 88) >> 1;
    if (v2 > 0x80000000)
      return sub_1AE5FC17C(~(_DWORD)v2);
    return sub_1AE5FC17C(-1);
  }
  return sub_1AE5FC17C(*(_DWORD *)a1 + 0x7FFFFFFF);
}

uint64_t sub_1AE8A8754(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 104) >> 5;
}

uint64_t sub_1AE8A8760(uint64_t result)
{
  *(_BYTE *)(result + 104) &= 0x1Fu;
  return result;
}

uint64_t sub_1AE8A8770(uint64_t result, char a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 104) & 1 | (32 * a2);
  *(_QWORD *)(result + 88) &= 1uLL;
  *(_BYTE *)(result + 104) = v2;
  return result;
}

void type metadata accessor for TriplesQuery.Clause.Impl()
{
  sub_1AE4F67D4();
}

uint64_t _s6ClauseV15AggregateClauseVwCP(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6ClauseV15AggregateClauseVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ClauseV15AggregateClauseVwta(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for TriplesQuery.Clause.AggregateClause()
{
  sub_1AE4F67D4();
}

void type metadata accessor for TriplesQuery.Clause.JoinClause()
{
  sub_1AE4F67D4();
}

uint64_t _s6ClauseV14ContainsClauseVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s6ClauseV14ContainsClauseVwcp(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6ClauseV14ContainsClauseVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s6ClauseV14ContainsClauseVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t _s6ClauseV14ContainsClauseVwta(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ClauseV14ContainsClauseVwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ClauseV14ContainsClauseVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for TriplesQuery.Clause.ContainsClause()
{
  sub_1AE4F67D4();
}

uint64_t _s6ClauseV11MatchClauseVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s6ClauseV11MatchClauseVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6ClauseV11MatchClauseVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v4 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v4;
  return a1;
}

uint64_t _s6ClauseV11MatchClauseVwta(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t _s6ClauseV11MatchClauseVwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 105))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ClauseV11MatchClauseVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 105) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for TriplesQuery.Clause.MatchClause()
{
  sub_1AE4F67D4();
}

uint64_t _s6ClauseV20FullTextSearchClauseVwCP(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6ClauseV20FullTextSearchClauseVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t _s6ClauseV20FullTextSearchClauseVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t _s6ClauseV20FullTextSearchClauseVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ClauseV20FullTextSearchClauseVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for TriplesQuery.Clause.FullTextSearchClause()
{
  sub_1AE4F67D4();
}

uint64_t _s6ClauseV16ComparisonClauseVwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[16])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = v3 - 2;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ClauseV16ComparisonClauseVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void type metadata accessor for TriplesQuery.Clause.ComparisonClause()
{
  sub_1AE4F67D4();
}

void type metadata accessor for TriplesQuery.Clause.AllClause()
{
  sub_1AE4F67D4();
}

ValueMetadata *_s6ClauseV9AllClauseV10CodingKeysOMa()
{
  return &_s6ClauseV9AllClauseV10CodingKeysON;
}

uint64_t _s6ClauseV16ComparisonClauseV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE8A9148 + 4 * byte_1AE9698EE[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE8A917C + 4 * byte_1AE9698E9[v4]))();
}

uint64_t sub_1AE8A917C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8A9184(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8A918CLL);
  return result;
}

uint64_t sub_1AE8A9198(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8A91A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE8A91A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8A91AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6ClauseV16ComparisonClauseV10CodingKeysOMa()
{
  return &_s6ClauseV16ComparisonClauseV10CodingKeysON;
}

ValueMetadata *_s6ClauseV20FullTextSearchClauseV10CodingKeysOMa()
{
  return &_s6ClauseV20FullTextSearchClauseV10CodingKeysON;
}

uint64_t _s6ClauseV11MatchClauseV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1AE8A9224 + 4 * byte_1AE9698F8[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1AE8A9258 + 4 * byte_1AE9698F3[v4]))();
}

uint64_t sub_1AE8A9258(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8A9260(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8A9268);
  return result;
}

uint64_t sub_1AE8A9274(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8A927CLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1AE8A9280(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8A9288(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6ClauseV11MatchClauseV10CodingKeysOMa()
{
  return &_s6ClauseV11MatchClauseV10CodingKeysON;
}

uint64_t _s6ClauseV14ContainsClauseV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1AE8A92F0 + 4 * byte_1AE969902[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1AE8A9324 + 4 * byte_1AE9698FD[v4]))();
}

uint64_t sub_1AE8A9324(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8A932C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8A9334);
  return result;
}

uint64_t sub_1AE8A9340(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8A9348);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1AE8A934C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8A9354(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6ClauseV14ContainsClauseV10CodingKeysOMa()
{
  return &_s6ClauseV14ContainsClauseV10CodingKeysON;
}

ValueMetadata *_s6ClauseV10JoinClauseV10CodingKeysOMa()
{
  return &_s6ClauseV10JoinClauseV10CodingKeysON;
}

ValueMetadata *_s6ClauseV15AggregateClauseV10CodingKeysOMa()
{
  return &_s6ClauseV15AggregateClauseV10CodingKeysON;
}

ValueMetadata *_s6ClauseV10CodingKeysOMa()
{
  return &_s6ClauseV10CodingKeysON;
}

uint64_t _s6ClauseV4ImplO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1AE8A93F0 + 4 * byte_1AE96990C[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1AE8A9424 + 4 * byte_1AE969907[v4]))();
}

uint64_t sub_1AE8A9424(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8A942C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8A9434);
  return result;
}

uint64_t sub_1AE8A9440(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8A9448);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1AE8A944C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8A9454(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6ClauseV4ImplO10CodingKeysOMa()
{
  return &_s6ClauseV4ImplO10CodingKeysON;
}

ValueMetadata *_s6ClauseV4ImplO19AggregateCodingKeysOMa()
{
  return &_s6ClauseV4ImplO19AggregateCodingKeysON;
}

ValueMetadata *_s6ClauseV4ImplO22MatchStringsCodingKeysOMa()
{
  return &_s6ClauseV4ImplO22MatchStringsCodingKeysON;
}

ValueMetadata *_s6ClauseV4ImplO15MatchCodingKeysOMa()
{
  return &_s6ClauseV4ImplO15MatchCodingKeysON;
}

ValueMetadata *_s6ClauseV4ImplO24FullTextSearchCodingKeysOMa()
{
  return &_s6ClauseV4ImplO24FullTextSearchCodingKeysON;
}

ValueMetadata *_s6ClauseV4ImplO20ComparisonCodingKeysOMa()
{
  return &_s6ClauseV4ImplO20ComparisonCodingKeysON;
}

ValueMetadata *_s6ClauseV4ImplO14JoinCodingKeysOMa()
{
  return &_s6ClauseV4ImplO14JoinCodingKeysON;
}

uint64_t _s6ClauseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE8A9510 + 4 * byte_1AE969911[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE8A9530 + 4 * byte_1AE969916[v4]))();
}

_BYTE *sub_1AE8A9510(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE8A9530(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE8A9538(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE8A9540(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE8A9548(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE8A9550(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s6ClauseV4ImplO13AllCodingKeysOMa()
{
  return &_s6ClauseV4ImplO13AllCodingKeysON;
}

uint64_t _s6ClauseV13JoinConditionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AE8A95B8 + 4 * byte_1AE969920[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AE8A95EC + 4 * byte_1AE96991B[v4]))();
}

uint64_t sub_1AE8A95EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8A95F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8A95FCLL);
  return result;
}

uint64_t sub_1AE8A9608(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8A9610);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AE8A9614(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8A961C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6ClauseV13JoinConditionO10CodingKeysOMa()
{
  return &_s6ClauseV13JoinConditionO10CodingKeysON;
}

ValueMetadata *_s6ClauseV13JoinConditionO15RowidCodingKeysOMa()
{
  return &_s6ClauseV13JoinConditionO15RowidCodingKeysON;
}

ValueMetadata *_s6ClauseV13JoinConditionO17SubjectCodingKeysOMa()
{
  return &_s6ClauseV13JoinConditionO17SubjectCodingKeysON;
}

ValueMetadata *_s6ClauseV13JoinConditionO16ObjectCodingKeysOMa()
{
  return &_s6ClauseV13JoinConditionO16ObjectCodingKeysON;
}

ValueMetadata *_s6ClauseV13JoinConditionO19PredicateCodingKeysOMa()
{
  return &_s6ClauseV13JoinConditionO19PredicateCodingKeysON;
}

ValueMetadata *_s6ClauseV13JoinConditionO24RelationshipIdCodingKeysOMa()
{
  return &_s6ClauseV13JoinConditionO24RelationshipIdCodingKeysON;
}

uint64_t _s6ClauseV22AggregateLogicFunctionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE8A96D4 + 4 * byte_1AE96992A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE8A9708 + 4 * byte_1AE969925[v4]))();
}

uint64_t sub_1AE8A9708(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8A9710(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8A9718);
  return result;
}

uint64_t sub_1AE8A9724(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8A972CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE8A9730(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8A9738(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s6ClauseV22AggregateLogicFunctionO10CodingKeysOMa()
{
  return &_s6ClauseV22AggregateLogicFunctionO10CodingKeysON;
}

ValueMetadata *_s6ClauseV22AggregateLogicFunctionO13AllCodingKeysOMa()
{
  return &_s6ClauseV22AggregateLogicFunctionO13AllCodingKeysON;
}

ValueMetadata *_s6ClauseV22AggregateLogicFunctionO13AnyCodingKeysOMa()
{
  return &_s6ClauseV22AggregateLogicFunctionO13AnyCodingKeysON;
}

unint64_t sub_1AE8A9778()
{
  unint64_t result;

  result = qword_1EEDA5540;
  if (!qword_1EEDA5540)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A378, &_s6ClauseV22AggregateLogicFunctionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5540);
  }
  return result;
}

unint64_t sub_1AE8A97B8()
{
  unint64_t result;

  result = qword_1EEDA5548;
  if (!qword_1EEDA5548)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A5C0, &_s6ClauseV13JoinConditionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5548);
  }
  return result;
}

unint64_t sub_1AE8A97F8()
{
  unint64_t result;

  result = qword_1EEDA5550;
  if (!qword_1EEDA5550)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A678, &_s6ClauseV4ImplO13AllCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5550);
  }
  return result;
}

unint64_t sub_1AE8A9838()
{
  unint64_t result;

  result = qword_1EEDA5558;
  if (!qword_1EEDA5558)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A730, &_s6ClauseV4ImplO14JoinCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5558);
  }
  return result;
}

unint64_t sub_1AE8A9878()
{
  unint64_t result;

  result = qword_1EEDA5560;
  if (!qword_1EEDA5560)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A7E8, &_s6ClauseV4ImplO20ComparisonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5560);
  }
  return result;
}

unint64_t sub_1AE8A98B8()
{
  unint64_t result;

  result = qword_1EEDA5568;
  if (!qword_1EEDA5568)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A8A0, &_s6ClauseV4ImplO24FullTextSearchCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5568);
  }
  return result;
}

unint64_t sub_1AE8A98F8()
{
  unint64_t result;

  result = qword_1EEDA5570;
  if (!qword_1EEDA5570)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A958, &_s6ClauseV4ImplO15MatchCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5570);
  }
  return result;
}

unint64_t sub_1AE8A9938()
{
  unint64_t result;

  result = qword_1EEDA5578;
  if (!qword_1EEDA5578)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AA10, &_s6ClauseV4ImplO22MatchStringsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5578);
  }
  return result;
}

unint64_t sub_1AE8A9978()
{
  unint64_t result;

  result = qword_1EEDA5580;
  if (!qword_1EEDA5580)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AAC8, &_s6ClauseV4ImplO19AggregateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5580);
  }
  return result;
}

unint64_t sub_1AE8A99B8()
{
  unint64_t result;

  result = qword_1EEDA5588;
  if (!qword_1EEDA5588)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AB80, &_s6ClauseV4ImplO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5588);
  }
  return result;
}

unint64_t sub_1AE8A99F8()
{
  unint64_t result;

  result = qword_1EEDA5590;
  if (!qword_1EEDA5590)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AC38, &_s6ClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5590);
  }
  return result;
}

unint64_t sub_1AE8A9A38()
{
  unint64_t result;

  result = qword_1EEDA5598;
  if (!qword_1EEDA5598)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96ACF0, &_s6ClauseV15AggregateClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5598);
  }
  return result;
}

unint64_t sub_1AE8A9A78()
{
  unint64_t result;

  result = qword_1EEDA55A0;
  if (!qword_1EEDA55A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96ADA8, &_s6ClauseV10JoinClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA55A0);
  }
  return result;
}

unint64_t sub_1AE8A9AB8()
{
  unint64_t result;

  result = qword_1EEDA55A8;
  if (!qword_1EEDA55A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AE60, &_s6ClauseV14ContainsClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA55A8);
  }
  return result;
}

unint64_t sub_1AE8A9AF8()
{
  unint64_t result;

  result = qword_1EEDA55B0;
  if (!qword_1EEDA55B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AF18, &_s6ClauseV11MatchClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA55B0);
  }
  return result;
}

unint64_t sub_1AE8A9B38()
{
  unint64_t result;

  result = qword_1EEDA55B8;
  if (!qword_1EEDA55B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AFD0, &_s6ClauseV20FullTextSearchClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA55B8);
  }
  return result;
}

unint64_t sub_1AE8A9B78()
{
  unint64_t result;

  result = qword_1EEDA55C0;
  if (!qword_1EEDA55C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B088, &_s6ClauseV16ComparisonClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA55C0);
  }
  return result;
}

unint64_t sub_1AE8A9BB8()
{
  unint64_t result;

  result = qword_1EEDA55C8;
  if (!qword_1EEDA55C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B0B0, &_s6ClauseV9AllClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA55C8);
  }
  return result;
}

unint64_t sub_1AE8A9BF8()
{
  unint64_t result;

  result = qword_1EEDA55D0;
  if (!qword_1EEDA55D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B0D8, &_s6ClauseV9AllClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA55D0);
  }
  return result;
}

unint64_t sub_1AE8A9C38()
{
  unint64_t result;

  result = qword_1EEDA55D8;
  if (!qword_1EEDA55D8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AFF8, &_s6ClauseV16ComparisonClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA55D8);
  }
  return result;
}

unint64_t sub_1AE8A9C78()
{
  unint64_t result;

  result = qword_1EEDA55E0;
  if (!qword_1EEDA55E0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96B020, &_s6ClauseV16ComparisonClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA55E0);
  }
  return result;
}

unint64_t sub_1AE8A9CB8()
{
  unint64_t result;

  result = qword_1EEDA55E8;
  if (!qword_1EEDA55E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AF40, &_s6ClauseV20FullTextSearchClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA55E8);
  }
  return result;
}

unint64_t sub_1AE8A9CF8()
{
  unint64_t result;

  result = qword_1EEDA55F0;
  if (!qword_1EEDA55F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AF68, &_s6ClauseV20FullTextSearchClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA55F0);
  }
  return result;
}

unint64_t sub_1AE8A9D38()
{
  unint64_t result;

  result = qword_1EEDA55F8;
  if (!qword_1EEDA55F8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AE88, &_s6ClauseV11MatchClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA55F8);
  }
  return result;
}

unint64_t sub_1AE8A9D78()
{
  unint64_t result;

  result = qword_1EEDA5600;
  if (!qword_1EEDA5600)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AEB0, &_s6ClauseV11MatchClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5600);
  }
  return result;
}

unint64_t sub_1AE8A9DB8()
{
  unint64_t result;

  result = qword_1EED98C08;
  if (!qword_1EED98C08)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96ADD0, &_s6ClauseV14ContainsClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C08);
  }
  return result;
}

unint64_t sub_1AE8A9DF8()
{
  unint64_t result;

  result = qword_1EED98C00;
  if (!qword_1EED98C00)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96ADF8, &_s6ClauseV14ContainsClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C00);
  }
  return result;
}

unint64_t sub_1AE8A9E38()
{
  unint64_t result;

  result = qword_1EED98BE8;
  if (!qword_1EED98BE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AD18, &_s6ClauseV10JoinClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98BE8);
  }
  return result;
}

unint64_t sub_1AE8A9E78()
{
  unint64_t result;

  result = qword_1EED98BE0;
  if (!qword_1EED98BE0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AD40, &_s6ClauseV10JoinClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98BE0);
  }
  return result;
}

unint64_t sub_1AE8A9EB8()
{
  unint64_t result;

  result = qword_1EED98C28;
  if (!qword_1EED98C28)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AC60, &_s6ClauseV15AggregateClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C28);
  }
  return result;
}

unint64_t sub_1AE8A9EF8()
{
  unint64_t result;

  result = qword_1EED98C20;
  if (!qword_1EED98C20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AC88, &_s6ClauseV15AggregateClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C20);
  }
  return result;
}

unint64_t sub_1AE8A9F38()
{
  unint64_t result;

  result = qword_1EED98C48;
  if (!qword_1EED98C48)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96ABA8, &_s6ClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C48);
  }
  return result;
}

unint64_t sub_1AE8A9F78()
{
  unint64_t result;

  result = qword_1EED98C40;
  if (!qword_1EED98C40)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96ABD0, &_s6ClauseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C40);
  }
  return result;
}

unint64_t sub_1AE8A9FB8()
{
  unint64_t result;

  result = qword_1EED98D70;
  if (!qword_1EED98D70)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AA38, &_s6ClauseV4ImplO19AggregateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D70);
  }
  return result;
}

unint64_t sub_1AE8A9FF8()
{
  unint64_t result;

  result = qword_1EED98D68;
  if (!qword_1EED98D68)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AA60, &_s6ClauseV4ImplO19AggregateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D68);
  }
  return result;
}

unint64_t sub_1AE8AA038()
{
  unint64_t result;

  result = qword_1EED98D98;
  if (!qword_1EED98D98)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A980, &_s6ClauseV4ImplO22MatchStringsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D98);
  }
  return result;
}

unint64_t sub_1AE8AA078()
{
  unint64_t result;

  result = qword_1EED98D90;
  if (!qword_1EED98D90)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A9A8, &_s6ClauseV4ImplO22MatchStringsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D90);
  }
  return result;
}

unint64_t sub_1AE8AA0B8()
{
  unint64_t result;

  result = qword_1EED98D58;
  if (!qword_1EED98D58)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A8C8, &_s6ClauseV4ImplO15MatchCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D58);
  }
  return result;
}

unint64_t sub_1AE8AA0F8()
{
  unint64_t result;

  result = qword_1EED98D50;
  if (!qword_1EED98D50)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A8F0, &_s6ClauseV4ImplO15MatchCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D50);
  }
  return result;
}

unint64_t sub_1AE8AA138()
{
  unint64_t result;

  result = qword_1EED98DA8;
  if (!qword_1EED98DA8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A810, &_s6ClauseV4ImplO24FullTextSearchCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98DA8);
  }
  return result;
}

unint64_t sub_1AE8AA178()
{
  unint64_t result;

  result = qword_1EED98DA0;
  if (!qword_1EED98DA0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A838, &_s6ClauseV4ImplO24FullTextSearchCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98DA0);
  }
  return result;
}

unint64_t sub_1AE8AA1B8()
{
  unint64_t result;

  result = qword_1EED98D80;
  if (!qword_1EED98D80)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A758, &_s6ClauseV4ImplO20ComparisonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D80);
  }
  return result;
}

unint64_t sub_1AE8AA1F8()
{
  unint64_t result;

  result = qword_1EED98D78;
  if (!qword_1EED98D78)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A780, &_s6ClauseV4ImplO20ComparisonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D78);
  }
  return result;
}

unint64_t sub_1AE8AA238()
{
  unint64_t result;

  result = qword_1EED98D48;
  if (!qword_1EED98D48)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A6A0, &_s6ClauseV4ImplO14JoinCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D48);
  }
  return result;
}

unint64_t sub_1AE8AA278()
{
  unint64_t result;

  result = qword_1EED98D40;
  if (!qword_1EED98D40)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A6C8, &_s6ClauseV4ImplO14JoinCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D40);
  }
  return result;
}

unint64_t sub_1AE8AA2B8()
{
  unint64_t result;

  result = qword_1EED98D30;
  if (!qword_1EED98D30)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A5E8, &_s6ClauseV4ImplO13AllCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D30);
  }
  return result;
}

unint64_t sub_1AE8AA2F8()
{
  unint64_t result;

  result = qword_1EED98D28;
  if (!qword_1EED98D28)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A610, &_s6ClauseV4ImplO13AllCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D28);
  }
  return result;
}

unint64_t sub_1AE8AA338()
{
  unint64_t result;

  result = qword_1EED98D20;
  if (!qword_1EED98D20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AAF0, &_s6ClauseV4ImplO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D20);
  }
  return result;
}

unint64_t sub_1AE8AA378()
{
  unint64_t result;

  result = qword_1EED98D18;
  if (!qword_1EED98D18)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96AB18, &_s6ClauseV4ImplO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D18);
  }
  return result;
}

unint64_t sub_1AE8AA3B8()
{
  unint64_t result;

  result = qword_1EED98C70;
  if (!qword_1EED98C70)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A4E0, &_s6ClauseV13JoinConditionO15RowidCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C70);
  }
  return result;
}

unint64_t sub_1AE8AA3F8()
{
  unint64_t result;

  result = qword_1EED98C68;
  if (!qword_1EED98C68)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A508, &_s6ClauseV13JoinConditionO15RowidCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C68);
  }
  return result;
}

unint64_t sub_1AE8AA438()
{
  unint64_t result;

  result = qword_1EED98C90;
  if (!qword_1EED98C90)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A490, &_s6ClauseV13JoinConditionO17SubjectCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C90);
  }
  return result;
}

unint64_t sub_1AE8AA478()
{
  unint64_t result;

  result = qword_1EED98C88;
  if (!qword_1EED98C88)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A4B8, &_s6ClauseV13JoinConditionO17SubjectCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C88);
  }
  return result;
}

unint64_t sub_1AE8AA4B8()
{
  unint64_t result;

  result = qword_1EED98C80;
  if (!qword_1EED98C80)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A440, &_s6ClauseV13JoinConditionO16ObjectCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C80);
  }
  return result;
}

unint64_t sub_1AE8AA4F8()
{
  unint64_t result;

  result = qword_1EED98C78;
  if (!qword_1EED98C78)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A468, &_s6ClauseV13JoinConditionO16ObjectCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C78);
  }
  return result;
}

unint64_t sub_1AE8AA538()
{
  unint64_t result;

  result = qword_1EED98CA0;
  if (!qword_1EED98CA0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A3F0, &_s6ClauseV13JoinConditionO19PredicateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98CA0);
  }
  return result;
}

unint64_t sub_1AE8AA578()
{
  unint64_t result;

  result = qword_1EED98C98;
  if (!qword_1EED98C98)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A418, &_s6ClauseV13JoinConditionO19PredicateCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C98);
  }
  return result;
}

unint64_t sub_1AE8AA5B8()
{
  unint64_t result;

  result = qword_1EED98CB8;
  if (!qword_1EED98CB8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A3A0, &_s6ClauseV13JoinConditionO24RelationshipIdCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98CB8);
  }
  return result;
}

unint64_t sub_1AE8AA5F8()
{
  unint64_t result;

  result = qword_1EED98CB0;
  if (!qword_1EED98CB0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A3C8, &_s6ClauseV13JoinConditionO24RelationshipIdCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98CB0);
  }
  return result;
}

unint64_t sub_1AE8AA638()
{
  unint64_t result;

  result = qword_1EED98C60;
  if (!qword_1EED98C60)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A530, &_s6ClauseV13JoinConditionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C60);
  }
  return result;
}

unint64_t sub_1AE8AA678()
{
  unint64_t result;

  result = qword_1EED98C58;
  if (!qword_1EED98C58)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A558, &_s6ClauseV13JoinConditionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98C58);
  }
  return result;
}

unint64_t sub_1AE8AA6B8()
{
  unint64_t result;

  result = qword_1EED98CF0;
  if (!qword_1EED98CF0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A298, &_s6ClauseV22AggregateLogicFunctionO13AllCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98CF0);
  }
  return result;
}

unint64_t sub_1AE8AA6F8()
{
  unint64_t result;

  result = qword_1EED98CE8;
  if (!qword_1EED98CE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A2C0, &_s6ClauseV22AggregateLogicFunctionO13AllCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98CE8);
  }
  return result;
}

unint64_t sub_1AE8AA738()
{
  unint64_t result;

  result = qword_1EED98D00;
  if (!qword_1EED98D00)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A248, &_s6ClauseV22AggregateLogicFunctionO13AnyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98D00);
  }
  return result;
}

unint64_t sub_1AE8AA778()
{
  unint64_t result;

  result = qword_1EED98CF8;
  if (!qword_1EED98CF8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A270, &_s6ClauseV22AggregateLogicFunctionO13AnyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98CF8);
  }
  return result;
}

unint64_t sub_1AE8AA7B8()
{
  unint64_t result;

  result = qword_1EED98CD8;
  if (!qword_1EED98CD8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A2E8, &_s6ClauseV22AggregateLogicFunctionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98CD8);
  }
  return result;
}

unint64_t sub_1AE8AA7F8()
{
  unint64_t result;

  result = qword_1EED98CD0;
  if (!qword_1EED98CD0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96A310, &_s6ClauseV22AggregateLogicFunctionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EED98CD0);
  }
  return result;
}

unint64_t sub_1AE8AA834()
{
  unint64_t result;

  result = qword_1ED310250;
  if (!qword_1ED310250)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.Clause.TableCodingKeys, &type metadata for TriplesQuery.Clause.TableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED310250);
  }
  return result;
}

_QWORD *sub_1AE8AA8A8()
{
  _QWORD *v0;

  return sub_1AE4F9858(v0, v0[3]);
}

uint64_t sub_1AE8AA8C8()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE8AA8E8()
{
  return sub_1AE926C34();
}

uint64_t sub_1AE8AA8F4()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE8AA904()
{
  return sub_1AE926B50();
}

uint64_t sub_1AE8AA918()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE8AA944()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8AA950()
{
  return sub_1AE926B98();
}

uint64_t sub_1AE8AA95C()
{
  return sub_1AE926C70();
}

uint64_t sub_1AE8AA964()
{
  return sub_1AE926A48();
}

uint64_t sub_1AE8AA980()
{
  return sub_1AE926A48();
}

uint64_t sub_1AE8AA98C()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE8AA9A8()
{
  return sub_1AE926A48();
}

uint64_t sub_1AE8AA9B4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = a1;
  return swift_bridgeObjectRetain();
}

_QWORD *sub_1AE8AA9C0(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  result[6] = a26;
  result[7] = a25;
  result[8] = a24;
  result[9] = a23;
  result[10] = a22;
  result[11] = a21;
  return result;
}

uint64_t sub_1AE8AA9DC@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE8AA9E8()
{
  return sub_1AE926F34();
}

_BYTE *_s20IntelligencePlatform12TriplesQueryV6ClauseV09AggregateE0V13logicFunctionAE0f5LogicH0Ovs_0(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

double sub_1AE8AAA08()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  v0[1] = 0u;
  v0[2] = 0u;
  v0[3] = 0u;
  v0[4] = 0u;
  v0[5] = 0u;
  *(_OWORD *)((char *)v0 + 89) = 0u;
  return result;
}

uint64_t sub_1AE8AAA30()
{
  uint64_t v0;

  return v0;
}

void sub_1AE8AAA40()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 200) = *(_QWORD *)(v0 - 232) & 1;
  *(_QWORD *)(v0 - 192) = *(_QWORD *)(v0 - 224);
}

void sub_1AE8AAA58()
{
  sub_1AE519C48();
}

uint64_t sub_1AE8AAA80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10@<Q0>, __n128 a11@<Q1>)
{
  unsigned __int8 v11;

  return sub_1AE58307C(a1, a2, a3, a4, a5, a6, a7, a8, a10.n128_i64[0], a10.n128_i64[1], a11.n128_i64[0], a11.n128_i64[1], a9, v11);
}

void sub_1AE8AAA90(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 65) = a1;
}

uint64_t sub_1AE8AAAA0()
{
  return sub_1AE926F4C();
}

_BYTE *_s20IntelligencePlatform12TriplesQueryV6ClauseV04JoinE0V13joinCondition7clausesAgE0fH0O_SayAEGtcfC_0@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_BYTE *)a3 = *result;
  *(_QWORD *)(a3 + 8) = a2;
  return result;
}

uint64_t sub_1AE8AAADC()
{
  return sub_1AE925DC4();
}

unint64_t sub_1AE8AAAEC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 200) = 3;
  return sub_1AE8A79AC();
}

unint64_t sub_1AE8AAAF8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 3;
  return sub_1AE8A76DC();
}

uint64_t sub_1AE8AAB04()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_1AE8AAB10()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 200) = 2;
  return sub_1AE8A7A24();
}

unint64_t sub_1AE8AAB1C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
  return sub_1AE8A7718();
}

void sub_1AE8AAB28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = v1;
}

uint64_t sub_1AE8AAB34()
{
  return swift_allocObject();
}

unint64_t sub_1AE8AAB40()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 200) = 1;
  return sub_1AE8A7A9C();
}

unint64_t sub_1AE8AAB4C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1AE8A3DE0();
}

void sub_1AE8AAB58()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
}

unint64_t sub_1AE8AAB64()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 1;
  return sub_1AE8A7754();
}

uint64_t sub_1AE8AAB70@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_1AE926B5C();
}

uint64_t sub_1AE8AAB7C()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE8AAB84()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_1AE8AAB98(uint64_t a1@<X8>)
{
  char v1;

  *(_BYTE *)(a1 + 104) = v1;
}

void sub_1AE8AABA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *v0 = v1;
  v0[1] = v2;
  v0[2] = v3;
  v0[3] = v4;
  v0[4] = v5;
  v0[5] = v6;
  v0[6] = v7;
  v0[7] = v8;
}

unint64_t sub_1AE8AABB4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 200) = 6;
  return sub_1AE8A7844();
}

unint64_t sub_1AE8AABC0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 200) = 5;
  return sub_1AE8A78BC();
}

unint64_t sub_1AE8AABCC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 200) = 4;
  return sub_1AE8A7934();
}

unint64_t sub_1AE8AABD8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_1AE8A76A0();
}

uint64_t sub_1AE8AABE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v18[5];
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v27 = a4;
  v26 = a2;
  v19 = sub_1AE9252C0();
  v18[4] = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v18[3] = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1AE925374();
  v23 = *(_QWORD *)(v24 - 8);
  v10 = MEMORY[0x1E0C80A78](v24);
  v18[2] = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v18[1] = (char *)v18 - v12;
  v22 = sub_1AE924C90();
  v21 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v20 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1AE924C9C();
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v29 = a3;
    v28 = a5;
    v25 = v5;
    v35 = MEMORY[0x1E0DEE9D8];
    sub_1AE522624();
    v30 = v15;
    v34 = v35;
    v33 = v16;
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1AE8AB50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v19[5];
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v28 = a4;
  v27 = a2;
  v20 = sub_1AE9252C0();
  v19[4] = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v19[3] = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1AE925374();
  v24 = *(_QWORD *)(v25 - 8);
  v10 = MEMORY[0x1E0C80A78](v25);
  v26 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v19[2] = (char *)v19 - v13;
  MEMORY[0x1E0C80A78](v12);
  v19[1] = (char *)v19 - v14;
  v23 = sub_1AE924C90();
  v22 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v21 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1AE924C9C();
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v17 = (char *)v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    v29 = a3;
    v30 = a5;
    v31 = v5;
    v36 = MEMORY[0x1E0DEE9D8];
    sub_1AE522624();
    v32 = v17;
    v35 = v36;
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

void sub_1AE8AC150(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *__return_ptr, uint64_t);

  v18 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    v6 = *(_QWORD *)(type metadata accessor for KGQ.Value() - 8);
    v7 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v15 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    v8 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v18(&v16, v7);
      if (v3)
        break;
      v9 = v17;
      if (v17)
      {
        v10 = v16;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE4FB7A4();
          v8 = v13;
        }
        v11 = *(_QWORD *)(v8 + 16);
        if (v11 >= *(_QWORD *)(v8 + 24) >> 1)
        {
          sub_1AE4FB7A4();
          v8 = v14;
        }
        *(_QWORD *)(v8 + 16) = v11 + 1;
        v12 = v8 + 16 * v11;
        *(_QWORD *)(v12 + 32) = v10;
        *(_QWORD *)(v12 + 40) = v9;
      }
      v7 += v15;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_14:
  sub_1AE4FBA48();
}

uint64_t sub_1AE8AC284(void (*a1)(__int128 *__return_ptr, __int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v22 = *(_OWORD *)(a3 + 16 * v7 + 32);
    sub_1AE4F67A4();
    swift_bridgeObjectRetain();
    a1(&v18, &v22);
    if (v3)
      break;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v19 + 1))
    {
      v14 = v18;
      v15 = v19;
      v16 = v20;
      v17 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE8B1B78();
        v8 = v11;
      }
      v9 = *(_QWORD *)(v8 + 16);
      if (v9 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_1AE8B1B78();
        v8 = v12;
      }
      *(_QWORD *)(v8 + 16) = v9 + 1;
      v10 = (_OWORD *)(v8 + (v9 << 6));
      v10[4] = v16;
      v10[5] = v17;
      v10[2] = v14;
      v10[3] = v15;
    }
    else
    {
      sub_1AE52982C((uint64_t)&v18, &qword_1EEDA2B10);
    }
    if (v4 == ++v7)
    {
      swift_bridgeObjectRelease();
      return v8;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

void sub_1AE8AC420(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  char v30;
  uint64_t v31;

  v28 = a3;
  v5 = a1 + 56;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  v11 = MEMORY[0x1E0DEE9D8];
  while (v8)
  {
    v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v13 = v12 | (v10 << 6);
LABEL_22:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    swift_bridgeObjectRetain();
    a2(&v29, v18, v19);
    if ((v30 & 1) == 0)
    {
      v31 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1AE8B1ADC(0, *(_QWORD *)(v11 + 16) + 1, v20, v21, v22, v23, v24, v25, v28);
      v27 = *(_QWORD *)(v11 + 16);
      v26 = *(_QWORD *)(v11 + 24);
      if (v27 >= v26 >> 1)
        v11 = sub_1AE8B1ADC(v26 > 1, v27 + 1, v20, v21, v22, v23, v24, v25, v28);
      *(_QWORD *)(v11 + 16) = v27 + 1;
      *(_QWORD *)(v11 + 8 * v27 + 32) = v31;
    }
  }
  v14 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v14 >= v9)
    goto LABEL_28;
  v15 = *(_QWORD *)(v5 + 8 * v14);
  ++v10;
  if (v15)
    goto LABEL_21;
  v10 = v14 + 1;
  if (v14 + 1 >= v9)
    goto LABEL_28;
  v15 = *(_QWORD *)(v5 + 8 * v10);
  if (v15)
    goto LABEL_21;
  v10 = v14 + 2;
  if (v14 + 2 >= v9)
    goto LABEL_28;
  v15 = *(_QWORD *)(v5 + 8 * v10);
  if (v15)
    goto LABEL_21;
  v10 = v14 + 3;
  if (v14 + 3 >= v9)
    goto LABEL_28;
  v15 = *(_QWORD *)(v5 + 8 * v10);
  if (v15)
  {
LABEL_21:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
    goto LABEL_22;
  }
  v16 = v14 + 4;
  if (v16 >= v9)
  {
LABEL_28:
    swift_release();
    sub_1AE4FBA48();
    return;
  }
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v9)
      goto LABEL_28;
    v15 = *(_QWORD *)(v5 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_1AE8AC600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[2];
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[13];
  unsigned __int8 v64;
  uint64_t v65;

  v7 = v6;
  v51 = a6;
  v50 = a4;
  v49 = a2;
  v11 = sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1AE924C9C();
  v48 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v47 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v44 = (char *)v43 - v17;
  v18 = *(_QWORD *)(a1 + 16);
  if (v18)
  {
    v46 = v13;
    v52 = a3;
    v53 = a5;
    v65 = v7;
    swift_bridgeObjectRetain();
    v43[1] = a1;
    v19 = a1 + 72;
    v20 = MEMORY[0x1E0DEE9D8];
    v45 = v14;
    v21 = (uint64_t)v46;
    while (1)
    {
      v54 = v18;
      v62 = v20;
      v22 = *(_QWORD *)(v19 - 32);
      v23 = *(_QWORD *)(v19 - 24);
      v24 = *(_QWORD *)(v19 - 16);
      v25 = *(_QWORD *)(v19 - 8);
      v26 = *(_QWORD *)v19;
      v27 = *(_QWORD *)(v19 + 8);
      v28 = *(_QWORD *)(v19 + 16);
      v29 = *(_QWORD *)(v19 + 24);
      v30 = *(_QWORD *)(v19 + 32);
      v31 = *(_QWORD *)(v19 + 40);
      v20 = *(_QWORD *)(v19 + 48);
      v32 = *(_QWORD *)(v19 + 56);
      v33 = *(_BYTE *)(v19 + 64);
      v63[0] = *(_QWORD *)(v19 - 40);
      v63[1] = v22;
      v63[2] = v23;
      v63[3] = v24;
      v63[4] = v25;
      v63[5] = v26;
      v63[6] = v27;
      v63[7] = v28;
      v63[8] = v29;
      v63[9] = v30;
      v63[10] = v31;
      v63[11] = v20;
      v63[12] = v32;
      v64 = v33;
      v34 = v63[0];
      v60 = v23;
      v61 = v22;
      v58 = v25;
      v59 = v24;
      v56 = v27;
      v57 = v26;
      v55 = v28;
      sub_1AE526458(v63[0], v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v20, v32, v33);
      v35 = v65;
      sub_1AE8B018C(v63, v49, v52, v50, v53, v51);
      v65 = v35;
      if (v35)
        break;
      sub_1AE58307C(v34, v61, v60, v59, v58, v57, v56, v55, v29, v30, v31, v20, v32, v33);
      v36 = v45;
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v21, 1, v45) == 1)
      {
        sub_1AE52982C(v21, (uint64_t *)&unk_1ED30FA40);
        v20 = v62;
      }
      else
      {
        v37 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 32);
        v38 = v44;
        v37(v44, v21, v36);
        v37(v47, (uint64_t)v38, v36);
        v20 = v62;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE51BDD4();
          v20 = v40;
        }
        v39 = *(_QWORD *)(v20 + 16);
        if (v39 >= *(_QWORD *)(v20 + 24) >> 1)
        {
          sub_1AE51BDD4();
          v20 = v41;
        }
        *(_QWORD *)(v20 + 16) = v39 + 1;
        v37((char *)(v20+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v39), (uint64_t)v47, v36);
      }
      v19 += 112;
      v18 = v54 - 1;
      if (v54 == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v20;
      }
    }
    sub_1AE58307C(v34, v61, v60, v59, v58, v57, v56, v55, v29, v30, v31, v20, v32, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v20;
}

uint64_t sub_1AE8ACA18(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(uint64_t *);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[13];
  unsigned __int8 v56;
  uint64_t v57;

  v4 = v3;
  v44 = a1;
  v6 = sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE924C9C();
  v43 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v42 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v39 = (char *)&v38 - v12;
  v13 = *(_QWORD *)(a3 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  v41 = v8;
  v57 = v4;
  swift_bridgeObjectRetain();
  v38 = a3;
  v14 = a3 + 72;
  v45 = MEMORY[0x1E0DEE9D8];
  v40 = v9;
  v15 = (uint64_t)v41;
  while (1)
  {
    v46 = v13;
    v16 = *(_QWORD *)(v14 - 32);
    v17 = *(_QWORD *)(v14 - 24);
    v18 = *(_QWORD *)(v14 - 16);
    v19 = *(_QWORD *)(v14 - 8);
    v20 = *(_QWORD *)v14;
    v21 = *(_QWORD *)(v14 + 8);
    v22 = *(_QWORD *)(v14 + 16);
    v23 = *(_QWORD *)(v14 + 24);
    v24 = *(_QWORD *)(v14 + 32);
    v25 = *(_QWORD *)(v14 + 40);
    v26 = *(_QWORD *)(v14 + 48);
    v27 = *(_QWORD *)(v14 + 56);
    v28 = *(_BYTE *)(v14 + 64);
    v55[0] = *(_QWORD *)(v14 - 40);
    v55[1] = v16;
    v55[2] = v17;
    v55[3] = v18;
    v55[4] = v19;
    v55[5] = v20;
    v55[6] = v21;
    v55[7] = v22;
    v55[8] = v23;
    v55[9] = v24;
    v55[10] = v25;
    v55[11] = v26;
    v55[12] = v27;
    v56 = v28;
    v53 = v16;
    v54 = v55[0];
    v51 = v18;
    v52 = v17;
    v49 = v20;
    v50 = v19;
    v48 = v21;
    v47 = v22;
    sub_1AE526458(v55[0], v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28);
    v29 = v57;
    v44(v55);
    v57 = v29;
    if (v29)
      break;
    sub_1AE58307C(v54, v53, v52, v51, v50, v49, v48, v47, v23, v24, v25, v26, v27, v28);
    v30 = v40;
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v15, 1, v40) == 1)
    {
      sub_1AE52982C(v15, (uint64_t *)&unk_1ED30FA40);
    }
    else
    {
      v31 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
      v32 = v39;
      v31(v39, v15, v30);
      v31(v42, (uint64_t)v32, v30);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE51BDD4();
        v45 = v35;
      }
      v33 = *(_QWORD *)(v45 + 16);
      if (v33 >= *(_QWORD *)(v45 + 24) >> 1)
      {
        sub_1AE51BDD4();
        v45 = v36;
      }
      v34 = v45;
      *(_QWORD *)(v45 + 16) = v33 + 1;
      v31((char *)(v34+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v33), (uint64_t)v42, v30);
    }
    v14 += 112;
    v13 = v46 - 1;
    if (v46 == 1)
    {
      swift_bridgeObjectRelease();
      return v45;
    }
  }
  sub_1AE58307C(v54, v53, v52, v51, v50, v49, v48, v47, v23, v24, v25, v26, v27, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t sub_1AE8ACDDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t result;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  int64_t v34;
  char *v35;
  uint64_t (*v36)(unint64_t, char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;

  v33[1] = a2;
  v8 = sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1AE924C9C();
  v38 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v37 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v35 = (char *)v33 - v14;
  v15 = *(_QWORD *)(a1 + 56);
  v40 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v19 = (unint64_t)(v16 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  v39 = MEMORY[0x1E0DEE9D8];
  v34 = v19;
  while (v18)
  {
    v18 &= v18 - 1;
LABEL_22:
    v42 = a4;
    v41 = a5;
    swift_bridgeObjectRetain();
    TriplesQuery.Clause.FullTextSearchClause.matchExpression(column:searchType:text:)();
    swift_bridgeObjectRelease();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v10, 1, v11) == 1)
    {
      result = sub_1AE52982C((uint64_t)v10, (uint64_t *)&unk_1ED30FA40);
    }
    else
    {
      v25 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v26 = v35;
      v25(v35, v10, v11);
      v36 = (uint64_t (*)(unint64_t, char *, uint64_t))v25;
      v25(v37, v26, v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE51BDD4();
        v39 = v31;
      }
      v27 = *(_QWORD *)(v39 + 16);
      v28 = v27 + 1;
      v19 = v34;
      if (v27 >= *(_QWORD *)(v39 + 24) >> 1)
      {
        v33[0] = v27 + 1;
        sub_1AE51BDD4();
        v28 = v33[0];
        v39 = v32;
      }
      v29 = v38;
      v30 = v39;
      *(_QWORD *)(v39 + 16) = v28;
      result = v36(v30+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v27, v37, v11);
    }
  }
  v22 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v22 >= v19)
    goto LABEL_29;
  v23 = *(_QWORD *)(v40 + 8 * v22);
  ++v21;
  if (v23)
    goto LABEL_21;
  v21 = v22 + 1;
  if (v22 + 1 >= v19)
    goto LABEL_29;
  v23 = *(_QWORD *)(v40 + 8 * v21);
  if (v23)
    goto LABEL_21;
  v21 = v22 + 2;
  if (v22 + 2 >= v19)
    goto LABEL_29;
  v23 = *(_QWORD *)(v40 + 8 * v21);
  if (v23)
    goto LABEL_21;
  v21 = v22 + 3;
  if (v22 + 3 >= v19)
    goto LABEL_29;
  v23 = *(_QWORD *)(v40 + 8 * v21);
  if (v23)
  {
LABEL_21:
    v18 = (v23 - 1) & v23;
    goto LABEL_22;
  }
  v24 = v22 + 4;
  if (v24 >= v19)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    swift_release();
    return v39;
  }
  v23 = *(_QWORD *)(v40 + 8 * v24);
  if (v23)
  {
    v21 = v24;
    goto LABEL_21;
  }
  while (1)
  {
    v21 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v21 >= v19)
      goto LABEL_29;
    v23 = *(_QWORD *)(v40 + 8 * v21);
    ++v24;
    if (v23)
      goto LABEL_21;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1AE8AD140(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD v20[2];

  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * i);
    v19 = v18[1];
    v20[0] = *v18;
    v20[1] = v19;
    swift_bridgeObjectRetain();
    a1(v20);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10)
      return swift_release();
    v16 = *(_QWORD *)(v6 + 8 * v12);
    if (!v16)
      break;
LABEL_17:
    v9 = (v16 - 1) & v16;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 4;
  if (v12 + 4 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      return swift_release();
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

IntelligencePlatform::TriplesQuerySQLConfig __swiftcall TriplesQuerySQLConfig.init(tableName:ftsTableName:)(Swift::String tableName, Swift::String_optional ftsTableName)
{
  Swift::String_optional *v2;
  IntelligencePlatform::TriplesQuerySQLConfig result;

  v2->value = tableName;
  v2[1] = ftsTableName;
  result.ftsTableName = ftsTableName;
  result.tableName = tableName;
  return result;
}

void TriplesQuery.graphIdentifierSQLExpression(config:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1AE8AD310(a1, (uint64_t (*)(uint64_t *))TriplesQuery.Clause.Impl.graphIdentifierSQLExpression(config:), a3, a4, a5, a6, a7, a8);
}

void TriplesQuery.sqlExpression(config:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1AE8AD310(a1, (uint64_t (*)(uint64_t *))TriplesQuery.Clause.Impl.sqlExpression(config:), a3, a4, a5, a6, a7, a8);
}

void sub_1AE8AD310(uint64_t *a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char v18;

  sub_1AE507CD8(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  sub_1AE8B1B40();
}

void TriplesQuery.Clause.sqlExpression(config:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1AE8AD310(a1, (uint64_t (*)(uint64_t *))TriplesQuery.Clause.Impl.sqlExpression(config:), a3, a4, a5, a6, a7, a8);
}

void TriplesQuery.Clause.graphIdentifierSQLExpression(config:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1AE8AD310(a1, (uint64_t (*)(uint64_t *))TriplesQuery.Clause.Impl.graphIdentifierSQLExpression(config:), a3, a4, a5, a6, a7, a8);
}

void TriplesQuery.Clause.Impl.sqlExpression(config:)()
{
  uint64_t v1;

  sub_1AE8B1A10();
  sub_1AE7EFB74();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE8B18C8();
  __asm { BR              X7 }
}

void sub_1AE8AD3AC(uint64_t a1@<X8>)
{
  sub_1AE8B1C30(a1);
  TriplesQuery.Clause.AggregateClause.sqlExpression(config:)();
  sub_1AE4FCDD0();
}

void TriplesQuery.Clause.Impl.graphIdentifierSQLExpression(config:)()
{
  uint64_t v1;

  sub_1AE8B1A10();
  sub_1AE7EFB74();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE8B18C8();
  __asm { BR              X7 }
}

void sub_1AE8AD508(uint64_t a1@<X8>)
{
  sub_1AE8B1C30(a1);
  sub_1AE8B1308();
  sub_1AE4FCDD0();
}

void TriplesQuery.Clause.AggregateClause.sqlExpression(config:)()
{
  sub_1AE8B1308();
}

void TriplesQuery.Clause.ContainsClause.sqlExpression(config:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(unint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void (*v45)(unint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE v80[24];
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;

  sub_1AE4FC4D4();
  v6 = v5;
  v7 = sub_1AE8B1990();
  v77 = *(_QWORD *)(v7 - 8);
  v78 = v7;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F9024();
  v76 = v9;
  v10 = sub_1AE4F6770();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F686C();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F6A60();
  v73 = v13;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F6A60();
  v71 = v16;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE8B19C0();
  MEMORY[0x1E0C80A78](v20);
  sub_1AE8B1B04();
  MEMORY[0x1E0C80A78](v21);
  sub_1AE68FC70();
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v65 - v23;
  v25 = *(_QWORD *)(v0 + 8);
  v68 = *(unsigned __int8 *)(v0 + 16);
  v26 = *(_QWORD *)(v0 + 24);
  v27 = *(unsigned __int8 *)(v0 + 32);
  v28 = *(_QWORD *)(v0 + 40);
  v70 = *(unsigned __int8 *)(v0 + 48);
  v79 = *(_QWORD *)(v0 + 56);
  v72 = *(unsigned __int8 *)(v0 + 64);
  v29 = *(_QWORD *)(v0 + 72);
  v74 = v26;
  v75 = v29;
  if (v25)
  {
    v66 = v27;
    v67 = v6;
    if ((*(_BYTE *)v0 & 1) != 0)
    {
      v83 = v25;
      v86 = sub_1AE507898((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      LOBYTE(v84) = 1;
      v81 = sub_1AE4F9084();
      v82 = MEMORY[0x1E0D24668];
      sub_1AE506F44();
      sub_1AE4F6E74();
      v85 = v10;
      v30 = (uint64_t)sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
      sub_1AE4F69EC();
      sub_1AE509CC8(&qword_1ED30F960, v31, MEMORY[0x1E0DEB3D0]);
      sub_1AE8B1C10();
      sub_1AE926058();
      sub_1AE8B17D4();
      sub_1AE92502C();
      sub_1AE506340();
      sub_1AE508E10();
      sub_1AE8B1BCC();
      if (v32)
      {
        sub_1AE50AEF4();
        v30 = v53;
      }
      v24 = v4;
    }
    else
    {
      v83 = v25;
      v82 = sub_1AE4F7AD8((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      v80[0] = 1;
      v85 = sub_1AE4F9084();
      sub_1AE503DC8(MEMORY[0x1E0D24668]);
      sub_1AE4F97F8();
      v30 = sub_1AE4F69EC();
      sub_1AE509CC8(&qword_1ED30F960, v34, MEMORY[0x1E0DEB3D0]);
      sub_1AE505F18();
      sub_1AE926058();
      sub_1AE506340();
      sub_1AE508E10();
      sub_1AE8B1BCC();
      if (v32)
      {
        sub_1AE50AEF4();
        v30 = v54;
      }
    }
    v33 = v10;
    *(_QWORD *)(v30 + 16) = &qword_1ED318F30;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v30+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v6, v24, v10);
    LOBYTE(v27) = v66;
  }
  else
  {
    v30 = MEMORY[0x1E0DEE9D8];
    v33 = v10;
  }
  v35 = MEMORY[0x1E0D24668];
  if (v28)
  {
    if ((v27 & 1) != 0)
    {
      v83 = v28;
      v86 = sub_1AE507898((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      LOBYTE(v84) = 5;
      v81 = sub_1AE4F9084();
      v82 = v35;
      sub_1AE506F44();
      sub_1AE4F6E74();
      v85 = v33;
      sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
      sub_1AE4F69EC();
      sub_1AE509CC8(&qword_1ED30F960, v36, MEMORY[0x1E0DEB3D0]);
      sub_1AE8B1C10();
      sub_1AE926058();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v80);
      sub_1AE8B1C04();
      if ((sub_1AE5080C4() & 1) == 0)
      {
        sub_1AE5021CC();
        v30 = v55;
      }
      sub_1AE8B19EC();
      v35 = MEMORY[0x1E0D24668];
      if (v32)
      {
        sub_1AE50AEF4();
        v30 = v56;
      }
      v2 = v3;
      v37 = v75;
    }
    else
    {
      v83 = v28;
      v82 = sub_1AE4F7AD8((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      v80[0] = 5;
      v85 = sub_1AE4F9084();
      v86 = v35;
      sub_1AE4FC960();
      sub_1AE4F97F8();
      sub_1AE4F69EC();
      sub_1AE509CC8(&qword_1ED30F960, v38, MEMORY[0x1E0DEB3D0]);
      sub_1AE505F18();
      sub_1AE926058();
      if ((sub_1AE5080C4() & 1) == 0)
      {
        sub_1AE5021CC();
        v30 = v57;
      }
      v37 = v75;
      sub_1AE8B19EC();
      if (v32)
      {
        sub_1AE50AEF4();
        v30 = v58;
      }
    }
    v39 = sub_1AE8B1944();
    v40(v39, v2, v33);
  }
  else
  {
    v37 = v75;
  }
  if (v74)
  {
    if ((v68 & 1) != 0)
    {
      v83 = v74;
      v86 = sub_1AE507898((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      LOBYTE(v84) = 2;
      v81 = sub_1AE4F9084();
      v82 = v35;
      sub_1AE506F44();
      sub_1AE4F6E74();
      v85 = v33;
      sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
      sub_1AE4F69EC();
      sub_1AE509CC8(&qword_1ED30F960, v41, MEMORY[0x1E0DEB3D0]);
      sub_1AE926058();
      sub_1AE8B17D4();
      sub_1AE8B190C();
      if ((sub_1AE5080C4() & 1) == 0)
      {
        sub_1AE5021CC();
        v30 = v59;
      }
      sub_1AE8B19EC();
      if (!v32)
        goto LABEL_33;
    }
    else
    {
      v83 = v74;
      v82 = sub_1AE4F7AD8((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      v80[0] = 2;
      v85 = sub_1AE4F9084();
      v86 = v35;
      sub_1AE4FC960();
      sub_1AE4F97F8();
      sub_1AE4F69EC();
      sub_1AE509CC8(&qword_1ED30F960, v43, MEMORY[0x1E0DEB3D0]);
      sub_1AE8B193C();
      if ((sub_1AE5080C4() & 1) == 0)
      {
        sub_1AE5021CC();
        v30 = v60;
      }
      sub_1AE8B19EC();
      v10 = v69;
      if (!v32)
        goto LABEL_33;
    }
    sub_1AE50AEF4();
    v30 = v42;
LABEL_33:
    v44 = sub_1AE8B1944();
    v45(v44, v10, v33);
  }
  if (!v79)
    goto LABEL_45;
  if ((v70 & 1) != 0)
  {
    v83 = v79;
    v86 = sub_1AE507898((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
    LOBYTE(v84) = 3;
    v81 = sub_1AE4F9084();
    v82 = v35;
    sub_1AE506F44();
    sub_1AE4F6E74();
    v85 = v33;
    sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
    sub_1AE4F69EC();
    sub_1AE509CC8(&qword_1ED30F960, v46, MEMORY[0x1E0DEB3D0]);
    sub_1AE8B18B4();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v80);
    sub_1AE8B190C();
    if ((sub_1AE5080C4() & 1) == 0)
    {
      sub_1AE5021CC();
      v30 = v61;
    }
    sub_1AE5089AC();
    if (!v32)
      goto LABEL_44;
  }
  else
  {
    v83 = v79;
    v82 = sub_1AE4F7AD8((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
    v80[0] = 3;
    v85 = sub_1AE4F9084();
    v86 = v35;
    sub_1AE4FC960();
    sub_1AE4F97F8();
    sub_1AE52FE10();
    sub_1AE8B17EC(&qword_1ED30F960, v48, MEMORY[0x1E0DEB3D0]);
    sub_1AE505F18();
    sub_1AE8B193C();
    if ((sub_1AE5080C4() & 1) == 0)
    {
      sub_1AE5021CC();
      v30 = v62;
    }
    sub_1AE5089AC();
    if (!v32)
      goto LABEL_44;
  }
  sub_1AE50AEF4();
  v30 = v47;
LABEL_44:
  sub_1AE8B1850();
LABEL_45:
  if (v37)
  {
    if ((v72 & 1) != 0)
    {
      v83 = v37;
      v86 = sub_1AE507898((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      LOBYTE(v84) = 4;
      v81 = sub_1AE4F9084();
      v82 = v35;
      sub_1AE506F44();
      sub_1AE4F6E74();
      v85 = v33;
      sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
      sub_1AE4F69EC();
      sub_1AE509CC8(&qword_1ED30F960, v49, MEMORY[0x1E0DEB3D0]);
      sub_1AE8B18B4();
      sub_1AE8B17D4();
      sub_1AE8B190C();
      if ((sub_1AE5080C4() & 1) == 0)
      {
        sub_1AE5021CC();
        v30 = v63;
      }
      sub_1AE5089AC();
      if (!v32)
        goto LABEL_55;
    }
    else
    {
      v83 = v37;
      v82 = sub_1AE4F7AD8((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      v80[0] = 4;
      v85 = sub_1AE4F9084();
      v86 = v35;
      sub_1AE4FC960();
      sub_1AE4F97F8();
      sub_1AE52FE10();
      sub_1AE8B17EC(&qword_1ED30F960, v51, MEMORY[0x1E0DEB3D0]);
      sub_1AE505F18();
      sub_1AE8B193C();
      if ((sub_1AE5080C4() & 1) == 0)
      {
        sub_1AE5021CC();
        v30 = v64;
      }
      sub_1AE5089AC();
      if (!v32)
        goto LABEL_55;
    }
    sub_1AE50AEF4();
    v30 = v50;
LABEL_55:
    sub_1AE8B1850();
  }
  v84 = v30;
  sub_1AE8B1BB0();
  sub_1AE52FE10();
  sub_1AE8B17EC((unint64_t *)&unk_1ED31AD08, v52, MEMORY[0x1E0DEAF38]);
  sub_1AE8B19FC();
  sub_1AE579938(v77);
  sub_1AE737420();
  sub_1AE4F8180();
}

void TriplesQuery.Clause.MatchClause.sqlExpression(config:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  char *v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  int v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  _QWORD v140[2];
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;

  sub_1AE4FC4D4();
  v110 = v5;
  v127 = v6;
  sub_1AE924FCC();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  v131 = v8;
  v115 = sub_1AE9252C0();
  v114 = *(_QWORD *)(v115 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F686C();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v10);
  v111 = (char *)&v106 - v11;
  v129 = sub_1AE8B1990();
  v134 = *(_QWORD *)(v129 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4F9024();
  v133 = v13;
  v138 = sub_1AE4F9084();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F666C();
  v17 = v16 - v15;
  v128 = sub_1AE4F6770();
  v132 = *(_QWORD *)(v128 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F686C();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE4F6A60();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v20);
  sub_1AE4F6A60();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v21);
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v22);
  sub_1AE4F6A60();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v23);
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v24);
  sub_1AE4F6A60();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v25);
  sub_1AE4F6A60();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v26);
  sub_1AE4F6A60();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v27);
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v28);
  sub_1AE8B1B2C();
  v30 = MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v106 - v31;
  MEMORY[0x1E0C80A78](v30);
  sub_1AE68FC70();
  MEMORY[0x1E0C80A78](v33);
  sub_1AE8B19C0();
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v106 - v35;
  v37 = *v0;
  v38 = *((_QWORD *)v0 + 1);
  v120 = v0[24];
  v135 = *((_QWORD *)v0 + 4);
  v119 = v0[40];
  v39 = *((_QWORD *)v0 + 6);
  v121 = v0[56];
  v136 = *((_QWORD *)v0 + 8);
  v122 = v0[72];
  v137 = *((_QWORD *)v0 + 10);
  v113 = v0[88];
  v112 = *((_QWORD *)v0 + 12);
  v130 = v0[104];
  if (v38)
  {
    if ((v37 & 1) != 0)
    {
      v142 = v38;
      v145 = sub_1AE507898((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      LOBYTE(v143) = 1;
      v140[1] = v138;
      v141 = MEMORY[0x1E0D24668];
      sub_1AE506F44();
      sub_1AE4F6E74();
      v37 = v128;
      v144 = v128;
      sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
      sub_1AE4F69EC();
      sub_1AE509CC8((unint64_t *)&qword_1ED30F950, v40, MEMORY[0x1E0DEB3D0]);
      sub_1AE8B1BE0();
      sub_1AE8B1A24();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v139);
      sub_1AE8B1C04();
      sub_1AE506340();
      sub_1AE508E10();
      v42 = v41;
      v0 = *(unsigned __int8 **)(v41 + 16);
      sub_1AE5089AC();
      if (v43)
      {
        sub_1AE4FF548();
        v42 = v94;
      }
      v44 = sub_1AE8B1760();
      sub_1AE4F790C(v44, v3, v45);
      v3 = v129;
    }
    else
    {
      v142 = v38;
      v141 = sub_1AE4F7AD8((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      v139 = 1;
      v144 = v138;
      sub_1AE503DC8(MEMORY[0x1E0D24668]);
      sub_1AE4F97F8();
      v0 = (unsigned __int8 *)&unk_1ED318F20;
      sub_1AE4F69EC();
      sub_1AE509CC8((unint64_t *)&qword_1ED30F950, v60, MEMORY[0x1E0DEB3D0]);
      sub_1AE8B1BE0();
      sub_1AE8B18A4();
      sub_1AE8B1A24();
      sub_1AE506340();
      sub_1AE508E10();
      v42 = v61;
      sub_1AE8B1AF4();
      v62 = v132;
      if (v43)
      {
        sub_1AE5012B4();
        v42 = v95;
      }
      sub_1AE8B1B58();
      *(_QWORD *)(v42 + 16) = &unk_1ED318F20;
      sub_1AE4F790C(v42+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(_QWORD *)(v62 + 72) * v1, (uint64_t)v36, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 32));
    }
  }
  else
  {
    v109 = v17;
    v46 = *((_QWORD *)v0 + 2);
    if (v46)
    {
      v107 = v1;
      v108 = v39;
      v47 = v110[1];
      v106 = *v110;
      v49 = v110[2];
      v48 = v110[3];
      v145 = sub_1AE507898((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      LOBYTE(v143) = 1;
      v50 = v109;
      v51 = sub_1AE92538C();
      MEMORY[0x1E0C80A78](v51);
      *(&v106 - 6) = v106;
      *(&v106 - 5) = v47;
      *(&v106 - 4) = v49;
      *(&v106 - 3) = v48;
      *(&v106 - 2) = v50;
      v143 = sub_1AE8ACA18((void (*)(uint64_t *))sub_1AE8B15E8, (uint64_t)(&v106 - 8), v46);
      v52 = v133;
      sub_1AE924C78();
      sub_1AE52FE10();
      sub_1AE8B17EC((unint64_t *)&unk_1ED31AD08, v53, MEMORY[0x1E0DEAF38]);
      v54 = MEMORY[0x1E0D23DC0];
      sub_1AE8B1B9C();
      v3 = v129;
      (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v52, v129);
      sub_1AE737420();
      if ((v37 & 1) != 0)
      {
        v37 = v128;
        v144 = v128;
        v145 = v54;
        v55 = sub_1AE4FC960();
        sub_1AE4F790C((uint64_t)v55, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v132 + 16));
        sub_1AE92502C();
        sub_1AE506340();
        sub_1AE508E10();
        v42 = v56;
        v0 = *(unsigned __int8 **)(v56 + 16);
        sub_1AE5089AC();
        v57 = v107;
        if (v43)
        {
          sub_1AE4FF548();
          v42 = v104;
        }
        v39 = v108;
        v58 = sub_1AE8B1760();
        sub_1AE4F790C(v58, v2, v59);
        sub_1AE8B1A58();
        (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v109, v138);
      }
      else
      {
        v37 = v128;
        sub_1AE4F790C((uint64_t)v32, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v132 + 16));
        sub_1AE508E10();
        v42 = v63;
        v0 = *(unsigned __int8 **)(v63 + 16);
        sub_1AE5089AC();
        v64 = v138;
        v65 = v107;
        if (v43)
        {
          sub_1AE4FF548();
          v42 = v105;
        }
        v39 = v108;
        *(_QWORD *)(v42 + 16) = v54;
        sub_1AE4F790C(v42+ ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))+ *(_QWORD *)(v132 + 72) * (_QWORD)v0, (uint64_t)v32, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v132 + 32));
        sub_1AE8B1A58();
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v109, v64);
      }
    }
    else
    {
      v42 = MEMORY[0x1E0DEE9D8];
      sub_1AE8B1B58();
    }
  }
  if (v39)
  {
    if ((v119 & 1) != 0)
    {
      v142 = v39;
      v145 = sub_1AE507898((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      sub_1AE8B1B84(5);
      v141 = MEMORY[0x1E0D24668];
      sub_1AE506F44();
      sub_1AE4F6E74();
      v144 = v37;
      sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
      sub_1AE4F69EC();
      sub_1AE509CC8(&qword_1ED30F960, v66, MEMORY[0x1E0DEB3D0]);
      sub_1AE50616C();
      sub_1AE8B17D4();
      sub_1AE8B1A94();
      if ((sub_1AE508530() & 1) == 0)
      {
        sub_1AE5012B4();
        v42 = v96;
      }
      v0 = *(unsigned __int8 **)(v42 + 16);
      sub_1AE5089AC();
      if (v43)
      {
        sub_1AE4FF548();
        v42 = v67;
      }
      v68 = v116;
    }
    else
    {
      v142 = v39;
      v141 = sub_1AE4F7AD8((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      sub_1AE8B1B6C(5);
      sub_1AE503DC8(MEMORY[0x1E0D24668]);
      sub_1AE4F97F8();
      sub_1AE52FE10();
      sub_1AE8B17EC(&qword_1ED30F960, v69, MEMORY[0x1E0DEB3D0]);
      sub_1AE505F18();
      sub_1AE8B1B4C();
      if ((sub_1AE508530() & 1) == 0)
      {
        sub_1AE5012B4();
        v42 = v97;
      }
      v0 = *(unsigned __int8 **)(v42 + 16);
      sub_1AE5089AC();
      v68 = v123;
      if (v43)
      {
        sub_1AE4FF548();
        sub_1AE8B1BB8();
      }
    }
    sub_1AE8B16FC(v67, v68);
  }
  if (v135)
  {
    if ((v120 & 1) != 0)
    {
      v142 = v135;
      v145 = sub_1AE507898((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      sub_1AE8B1B84(2);
      v141 = MEMORY[0x1E0D24668];
      sub_1AE506F44();
      sub_1AE4F6E74();
      v144 = v37;
      sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
      sub_1AE4F69EC();
      sub_1AE509CC8(&qword_1ED30F948, v70, MEMORY[0x1E0DEB3D0]);
      sub_1AE5C7490();
      sub_1AE8B17F4();
      sub_1AE8B17D4();
      sub_1AE8B1A94();
      if ((sub_1AE508530() & 1) == 0)
      {
        sub_1AE5012B4();
        v42 = v98;
      }
      v0 = *(unsigned __int8 **)(v42 + 16);
      sub_1AE5089AC();
      if (v43)
      {
        sub_1AE4FF548();
        v42 = v71;
      }
      v72 = v117;
    }
    else
    {
      v142 = v135;
      v141 = sub_1AE4F7AD8((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      sub_1AE8B1B6C(2);
      sub_1AE503DC8(MEMORY[0x1E0D24668]);
      sub_1AE4F97F8();
      sub_1AE52FE10();
      sub_1AE8B17EC(&qword_1ED30F948, v73, MEMORY[0x1E0DEB3D0]);
      sub_1AE5C7490();
      sub_1AE8B18A4();
      sub_1AE8B18FC();
      if ((sub_1AE508530() & 1) == 0)
      {
        sub_1AE5012B4();
        v42 = v99;
      }
      v0 = *(unsigned __int8 **)(v42 + 16);
      sub_1AE5089AC();
      v72 = v124;
      if (v43)
      {
        sub_1AE4FF548();
        sub_1AE8B1BB8();
      }
    }
    sub_1AE8B16FC(v71, v72);
  }
  if (v136)
  {
    if ((v121 & 1) != 0)
    {
      v142 = v136;
      v145 = sub_1AE507898((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      sub_1AE8B1B84(3);
      v141 = MEMORY[0x1E0D24668];
      sub_1AE506F44();
      sub_1AE4F6E74();
      v144 = v37;
      sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
      sub_1AE4F69EC();
      sub_1AE509CC8((unint64_t *)&unk_1EED946F8, v74, MEMORY[0x1E0DEB3D0]);
      sub_1AE853DEC();
      sub_1AE8B17F4();
      sub_1AE8B17D4();
      sub_1AE8B1A94();
      if ((sub_1AE508530() & 1) == 0)
      {
        sub_1AE5012B4();
        v42 = v100;
      }
      v0 = *(unsigned __int8 **)(v42 + 16);
      sub_1AE5089AC();
      if (v43)
      {
        sub_1AE4FF548();
        v42 = v75;
      }
      v76 = v118;
    }
    else
    {
      v142 = v136;
      v141 = sub_1AE4F7AD8((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      sub_1AE8B1B6C(3);
      sub_1AE503DC8(MEMORY[0x1E0D24668]);
      sub_1AE4F97F8();
      sub_1AE52FE10();
      sub_1AE8B17EC((unint64_t *)&unk_1EED946F8, v77, MEMORY[0x1E0DEB3D0]);
      sub_1AE853DEC();
      sub_1AE8B18A4();
      sub_1AE8B18FC();
      if ((sub_1AE508530() & 1) == 0)
      {
        sub_1AE5012B4();
        v42 = v101;
      }
      v0 = *(unsigned __int8 **)(v42 + 16);
      sub_1AE5089AC();
      v76 = v125;
      if (v43)
      {
        sub_1AE4FF548();
        sub_1AE8B1BB8();
      }
    }
    sub_1AE8B16FC(v75, v76);
  }
  if (v137)
  {
    if ((v122 & 1) != 0)
    {
      v142 = v137;
      v145 = sub_1AE507898((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      sub_1AE8B1B84(4);
      v141 = MEMORY[0x1E0D24668];
      sub_1AE506F44();
      sub_1AE4F6E74();
      v144 = v37;
      sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
      v78 = sub_1AE4F69EC();
      sub_1AE509CC8(&qword_1ED30F948, v79, MEMORY[0x1E0DEB3D0]);
      sub_1AE5C7490();
      sub_1AE8B17F4();
      sub_1AE8B17D4();
      sub_1AE8B1B90();
      if ((sub_1AE508530() & 1) == 0)
      {
        sub_1AE5012B4();
        v42 = v102;
      }
      v0 = *(unsigned __int8 **)(v42 + 16);
      sub_1AE5089AC();
      if (v43)
      {
        sub_1AE4FF548();
        v42 = v80;
      }
      v81 = v78;
    }
    else
    {
      v142 = v137;
      v141 = sub_1AE4F7AD8((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      sub_1AE8B1B6C(4);
      sub_1AE503DC8(MEMORY[0x1E0D24668]);
      sub_1AE4F97F8();
      sub_1AE52FE10();
      sub_1AE8B17EC(&qword_1ED30F948, v82, MEMORY[0x1E0DEB3D0]);
      sub_1AE5C7490();
      sub_1AE8B18A4();
      sub_1AE8B18FC();
      if ((sub_1AE508530() & 1) == 0)
      {
        sub_1AE5012B4();
        v42 = v103;
      }
      v0 = *(unsigned __int8 **)(v42 + 16);
      sub_1AE5089AC();
      v81 = v126;
      if (v43)
      {
        sub_1AE4FF548();
        sub_1AE8B1BB8();
      }
    }
    sub_1AE8B16FC(v80, v81);
  }
  if ((v130 & 1) == 0)
  {
    sub_1AE501548((uint64_t *)&unk_1ED30FD78);
    v83 = sub_1AE5032F0();
    v84 = MEMORY[0x1E0DEB418];
    *(_OWORD *)(v83 + 16) = xmmword_1AE934250;
    v85 = MEMORY[0x1E0D24A00];
    *(_QWORD *)(v83 + 56) = v84;
    *(_QWORD *)(v83 + 64) = v85;
    *(_QWORD *)(v83 + 32) = v112;
    sub_1AE924FB4();
    if ((v113 & 1) != 0)
    {
      sub_1AE8B19D4();
      v86 = v140;
    }
    else
    {
      sub_1AE8B19D4();
      v86 = &v141;
    }
    v87 = *(v86 - 32);
    sub_1AE925290();
    (*(void (**)(unsigned __int8 *, uint64_t))(v114 + 8))(v0, v115);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE5012B4();
      v42 = v92;
    }
    sub_1AE5089AC();
    if (v43)
    {
      sub_1AE4FF548();
      v42 = v93;
    }
    v88 = sub_1AE8B1760();
    sub_1AE4F790C(v88, v87, v89);
  }
  v143 = v42;
  v90 = v133;
  sub_1AE8B1BB0();
  sub_1AE52FE10();
  sub_1AE8B17EC((unint64_t *)&unk_1ED31AD08, v91, MEMORY[0x1E0DEAF38]);
  sub_1AE8B19FC();
  (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v90, v3);
  sub_1AE737420();
  sub_1AE4F8180();
}

uint64_t TriplesQuery.Clause.FullTextSearchClause.sqlExpression(config:)()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  _QWORD v24[10];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  sub_1AE4FC4D4();
  v2 = v1;
  v4 = v3;
  v5 = sub_1AE8B1990();
  v24[1] = *(_QWORD *)(v5 - 8);
  v24[2] = v5;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F666C();
  v25 = sub_1AE501548(&qword_1ED318B60);
  v24[6] = *(_QWORD *)(v25 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F686C();
  v24[3] = v8;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F6A60();
  v24[7] = v10;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v11);
  v24[0] = (char *)v24 - v12;
  sub_1AE501548((uint64_t *)&unk_1ED30FA40);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F9024();
  v24[5] = v14;
  sub_1AE501548(&qword_1EED94868);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F9024();
  v27 = v16;
  v17 = sub_1AE501548(&qword_1ED319190);
  v24[8] = *(_QWORD *)(v17 - 8);
  v24[9] = v17;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4FFEB4();
  sub_1AE8B1AAC();
  v20 = MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v28 = (char *)v24 - v22;
  if (*(_QWORD *)(v2 + 24))
  {
    v24[4] = v21;
    v26 = v4;
    __asm { BR              X10 }
  }
  result = sub_1AE926AB4();
  __break(1u);
  return result;
}

uint64_t TriplesQuery.Clause.ComparisonClause.sqlExpression(config:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1AE4F9084();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F683C();
  if ((*v0 & 1) != 0)
  {
    sub_1AE8B1620();
    sub_1AE8B1C44();
    sub_1AE8B1C1C();
    TriplesQuery.ComparisonType.compare(numeric:_:)();
  }
  else
  {
    sub_1AE8B1620();
    sub_1AE8B1C44();
    sub_1AE8B1C1C();
    TriplesQuery.ComparisonType.compare(text:_:)();
  }
  return sub_1AE4FDC10(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
}

void TriplesQuery.Clause.JoinClause.sqlExpression(config:)()
{
  TriplesQuery.Clause.JoinClause.graphIdentifierSQLExpression(config:)();
}

void TriplesQuery.Clause.AllClause.sqlExpression(config:)()
{
  uint64_t v0;

  sub_1AE8B1A10();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v0);
  sub_1AE4FD234();
  sub_1AE8B1A30();
}

uint64_t sub_1AE8AF748()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE925290();
  return sub_1AE509FA4(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
}

void sub_1AE8AF770()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE v91[24];
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;

  sub_1AE4FC4D4();
  v89 = v4;
  v5 = sub_1AE8B1990();
  v87 = *(_QWORD *)(v5 - 8);
  v88 = v5;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  v86 = v7;
  v90 = sub_1AE4F6770();
  sub_1AE7EFB74();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F686C();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F6A60();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F6A60();
  v82 = v12;
  sub_1AE4F9350();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F6A60();
  sub_1AE4FDAA8();
  MEMORY[0x1E0C80A78](v16);
  sub_1AE8B1B18();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE8B1AAC();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v73 - v19;
  v21 = *((_QWORD *)v1 + 1);
  v76 = v1[16];
  v83 = *((_QWORD *)v1 + 3);
  v22 = v1[32];
  v23 = *((_QWORD *)v1 + 5);
  v78 = v1[48];
  v84 = *((_QWORD *)v1 + 7);
  v79 = v1[64];
  v85 = *((_QWORD *)v1 + 9);
  if (v21)
  {
    v74 = v22;
    v24 = *v1;
    v25 = swift_bridgeObjectRetain();
    sub_1AE8AC420(v25, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))EntityIdentifier.init(_:), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE519D1C);
    v27 = v26;
    swift_bridgeObjectRelease();
    if ((v24 & 1) != 0)
    {
      v94 = v27;
      v97 = sub_1AE507898((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      LOBYTE(v95) = 1;
      v92 = sub_1AE4F9084();
      v93 = MEMORY[0x1E0D24668];
      sub_1AE506F44();
      sub_1AE4F6E74();
      v96 = v90;
      sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
      sub_1AE4F69EC();
      sub_1AE509CC8((unint64_t *)&qword_1EED99548, v28, MEMORY[0x1E0DEAF38]);
      sub_1AE8B1BE0();
      sub_1AE8B1C10();
      sub_1AE926058();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v91);
      swift_bridgeObjectRelease();
      sub_1AE92502C();
      sub_1AE506340();
      sub_1AE508E10();
      v30 = v29;
      sub_1AE8B1AF4();
      if (v31)
      {
        sub_1AE50A84C();
        v30 = v65;
      }
      v20 = v3;
    }
    else
    {
      v94 = v27;
      v93 = sub_1AE4F7AD8((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
      v91[0] = 1;
      v96 = sub_1AE4F9084();
      sub_1AE503DC8(MEMORY[0x1E0D24668]);
      sub_1AE4F97F8();
      sub_1AE4F69EC();
      sub_1AE509CC8((unint64_t *)&qword_1EED99548, v34, MEMORY[0x1E0DEAF38]);
      sub_1AE578E74();
      sub_1AE8B18A4();
      sub_1AE926058();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v95);
      swift_bridgeObjectRelease();
      sub_1AE508E10();
      v30 = v35;
      sub_1AE8B1AF4();
      if (v31)
      {
        sub_1AE50A84C();
        v30 = v66;
      }
    }
    v32 = v90;
    v33 = MEMORY[0x1E0D24668];
    v36 = sub_1AE8B1918();
    sub_1AE7357F8(v36, (uint64_t)v20, v37);
    LOBYTE(v22) = v74;
  }
  else
  {
    v30 = MEMORY[0x1E0DEE9D8];
    v32 = v90;
    v33 = MEMORY[0x1E0D24668];
  }
  v38 = v84;
  if (v23)
  {
    v94 = v23;
    if ((v22 & 1) != 0)
    {
      v97 = sub_1AE8B1AEC();
      LOBYTE(v95) = 5;
      v92 = sub_1AE4F9084();
      v93 = v33;
      sub_1AE506F44();
      sub_1AE4F6E74();
      v96 = v32;
      sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
      sub_1AE4F69EC();
      sub_1AE509CC8(&qword_1ED30F960, v39, MEMORY[0x1E0DEB3D0]);
      sub_1AE50616C();
      sub_1AE8B17D4();
      v0 = v75;
      sub_1AE92502C();
    }
    else
    {
      v93 = sub_1AE8B1AD4();
      v91[0] = 5;
      v96 = sub_1AE4F9084();
      v97 = v33;
      sub_1AE4FC960();
      sub_1AE4F97F8();
      sub_1AE4F69EC();
      sub_1AE509CC8(&qword_1ED30F960, v40, MEMORY[0x1E0DEB3D0]);
      sub_1AE50616C();
    }
    if ((sub_1AE8B17BC() & 1) == 0)
    {
      sub_1AE5059C0();
      v30 = v63;
    }
    if (*(_QWORD *)(v30 + 16) >= *(_QWORD *)(v30 + 24) >> 1)
    {
      sub_1AE50A84C();
      v30 = v64;
    }
    v41 = sub_1AE8B1918();
    sub_1AE7357F8(v41, v0, v42);
  }
  if (v83)
  {
    if ((v76 & 1) != 0)
    {
      v94 = v83;
      v97 = sub_1AE8B1AEC();
      LOBYTE(v95) = 2;
      v92 = sub_1AE4F9084();
      v93 = v33;
      sub_1AE506F44();
      sub_1AE4F6E74();
      v96 = v32;
      sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
      sub_1AE4F69EC();
      sub_1AE509CC8(&qword_1ED30F960, v43, MEMORY[0x1E0DEB3D0]);
      sub_1AE50616C();
      _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v91);
      sub_1AE8B1A94();
      if ((sub_1AE8B17BC() & 1) == 0)
      {
        sub_1AE5059C0();
        v30 = v67;
      }
      sub_1AE5089AC();
      if (v31)
      {
        sub_1AE50A84C();
        v30 = v44;
      }
      v45 = v77;
    }
    else
    {
      v94 = v83;
      v93 = sub_1AE8B1AD4();
      v91[0] = 2;
      v96 = sub_1AE4F9084();
      v97 = v33;
      sub_1AE4FC960();
      sub_1AE4F97F8();
      sub_1AE52FE10();
      sub_1AE8B17EC(&qword_1ED30F960, v46, MEMORY[0x1E0DEB3D0]);
      sub_1AE8B1B4C();
      if ((sub_1AE8B17BC() & 1) == 0)
      {
        sub_1AE5059C0();
        v30 = v68;
      }
      sub_1AE5089AC();
      v45 = v81;
      if (v31)
      {
        sub_1AE50A84C();
        v45 = v81;
        v30 = v44;
      }
    }
    sub_1AE8B187C(v44, v45);
  }
  if (!v38)
  {
    v52 = v85;
    if (!v85)
      goto LABEL_56;
LABEL_46:
    if ((v79 & 1) != 0)
    {
      v94 = v52;
      v97 = sub_1AE8B1AEC();
      LOBYTE(v95) = 4;
      v92 = sub_1AE4F9084();
      v93 = v33;
      sub_1AE506F44();
      sub_1AE4F6E74();
      v96 = v32;
      v56 = sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
      v57 = sub_1AE4F69EC();
      sub_1AE509CC8(&qword_1ED30F960, v58, MEMORY[0x1E0DEB3D0]);
      sub_1AE8B18B4();
      sub_1AE8B17D4();
      sub_1AE8B190C();
      if ((sub_1AE8B17BC() & 1) == 0)
      {
        sub_1AE5059C0();
        v30 = v71;
      }
      v59 = *(_QWORD *)(v30 + 16);
      sub_1AE5089AC();
      if (!v31)
        goto LABEL_55;
    }
    else
    {
      v94 = v52;
      v93 = sub_1AE8B1AD4();
      v91[0] = 4;
      v96 = sub_1AE4F9084();
      v97 = v33;
      sub_1AE4FC960();
      sub_1AE4F97F8();
      v56 = &qword_1ED318F30;
      sub_1AE52FE10();
      sub_1AE8B17EC(&qword_1ED30F960, v61, MEMORY[0x1E0DEB3D0]);
      sub_1AE505F18();
      sub_1AE8B193C();
      if ((sub_1AE8B17BC() & 1) == 0)
      {
        sub_1AE5059C0();
        v30 = v72;
      }
      v59 = *(_QWORD *)(v30 + 16);
      sub_1AE5089AC();
      v57 = v80;
      if (!v31)
        goto LABEL_55;
    }
    sub_1AE50A84C();
    v30 = v60;
LABEL_55:
    *(_QWORD *)(v30 + 16) = v56;
    sub_1AE7357F8(v30+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v59, v57, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    goto LABEL_56;
  }
  v47 = sub_1AE4F6708();
  sub_1AE8AC420(v47, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))RelationshipIdentifier.init(_:), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BDB8);
  v49 = v48;
  swift_bridgeObjectRelease();
  if ((v78 & 1) != 0)
  {
    v94 = v49;
    v97 = sub_1AE8B1AEC();
    LOBYTE(v95) = 3;
    v92 = sub_1AE4F9084();
    v93 = v33;
    sub_1AE506F44();
    sub_1AE4F6E74();
    v96 = v32;
    sub_1AE503DC8(MEMORY[0x1E0D23DC0]);
    v50 = sub_1AE4F69EC();
    sub_1AE509CC8(&qword_1EEDA5610, v51, MEMORY[0x1E0DEAF38]);
    sub_1AE853DEC();
    sub_1AE8B1C10();
    sub_1AE926058();
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v91);
    sub_1AE4F6648();
    sub_1AE8B1B90();
    if ((sub_1AE8B17BC() & 1) == 0)
    {
      sub_1AE5059C0();
      v30 = v69;
    }
    v52 = v85;
    sub_1AE5089AC();
    if (v31)
    {
      sub_1AE50A84C();
      v30 = v53;
    }
    v54 = v50;
  }
  else
  {
    v94 = v49;
    v93 = sub_1AE8B1AD4();
    v91[0] = 3;
    v96 = sub_1AE4F9084();
    v97 = v33;
    sub_1AE4FC960();
    sub_1AE4F97F8();
    sub_1AE4F69EC();
    sub_1AE509CC8(&qword_1EEDA5610, v55, MEMORY[0x1E0DEAF38]);
    sub_1AE853DEC();
    sub_1AE8B18A4();
    sub_1AE8B1A24();
    sub_1AE506340();
    sub_1AE4F6648();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE5059C0();
      v30 = v70;
    }
    v52 = v85;
    sub_1AE5089AC();
    v54 = v82;
    if (v31)
    {
      sub_1AE50A84C();
      v54 = v82;
      v30 = v53;
    }
  }
  sub_1AE8B187C(v53, v54);
  if (v52)
    goto LABEL_46;
LABEL_56:
  v95 = v30;
  sub_1AE8B1BB0();
  sub_1AE52FE10();
  sub_1AE8B17EC((unint64_t *)&unk_1ED31AD08, v62, MEMORY[0x1E0DEAF38]);
  sub_1AE8B1A1C();
  sub_1AE579938(v87);
  sub_1AE737420();
  sub_1AE4F8180();
}

uint64_t sub_1AE8B018C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  void (*v34)(uint64_t *, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t *v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v59 = a6;
  v55 = a5;
  v52 = a4;
  v51 = a2;
  v61 = a7;
  v54 = sub_1AE501548(&qword_1ED319190);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1AE501548(&qword_1ED318B60);
  v57 = *(_QWORD *)(v60 - 8);
  v11 = MEMORY[0x1E0C80A78](v60);
  v56 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v58 = (char *)&v42 - v13;
  v14 = *(_QWORD *)a1;
  v15 = *(_QWORD *)(a1 + 8);
  v16 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  v18 = *(_QWORD *)(a1 + 32);
  v50 = *(_QWORD *)(a1 + 40);
  v49 = *(_QWORD *)(a1 + 48);
  v48 = *(_QWORD *)(a1 + 56);
  v47 = *(_QWORD *)(a1 + 64);
  v46 = *(_QWORD *)(a1 + 72);
  v45 = *(_QWORD *)(a1 + 80);
  v44 = *(_QWORD *)(a1 + 88);
  v19 = *(unsigned __int8 *)(a1 + 104);
  v20 = *(_QWORD *)(a1 + 96);
  v43 = v10;
  swift_bridgeObjectRetain();
  if (((1 << (v19 >> 5)) & 0x5C) != 0)
  {
    v21 = v20;
    v22 = v18;
    v23 = v17;
    v24 = v16;
    v25 = v51;
    sub_1AE925350();
    v66 = v14;
    v67 = v15;
    v68 = v24;
    v69 = v23;
    v70 = v22;
    v71 = v50;
    v72 = v49;
    v73 = v48;
    v74 = v47;
    v75 = v46;
    v76 = v45;
    v77 = v44;
    v78 = v21;
    v79 = v19;
    v62 = v25;
    v63 = a3;
    v64 = v52;
    v65 = v55;
    v55 = sub_1AE924C9C();
    v81 = v55;
    v82 = MEMORY[0x1E0D23DC0];
    sub_1AE52F6A8(&v80);
    TriplesQuery.Clause.Impl.sqlExpression(config:)();
  }
  else
  {
    v26 = v51;
    sub_1AE925350();
    v66 = v14;
    v67 = v15;
    v68 = v16;
    v69 = v17;
    v70 = v18;
    v71 = v50;
    v72 = v49;
    v73 = v48;
    v74 = v47;
    v75 = v46;
    v76 = v45;
    v77 = v44;
    v78 = v20;
    v79 = v19;
    v62 = v26;
    v63 = a3;
    v64 = v52;
    v65 = v55;
    v55 = sub_1AE924C9C();
    v81 = v55;
    v82 = MEMORY[0x1E0D23DC0];
    sub_1AE52F6A8(&v80);
    TriplesQuery.Clause.Impl.graphIdentifierSQLExpression(config:)(&v62);
  }
  v27 = v56;
  v28 = v54;
  v29 = v43;
  sub_1AE925320();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v29, v28);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v80);
  sub_1AE501548(&qword_1ED30FD70);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1AE934250;
  v31 = sub_1AE925374();
  v32 = MEMORY[0x1E0D24650];
  *(_QWORD *)(v30 + 56) = v31;
  *(_QWORD *)(v30 + 64) = v32;
  v33 = sub_1AE52F6A8((uint64_t *)(v30 + 32));
  v34 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
  v35 = v59;
  v34(v33, v59, v31);
  sub_1AE5BA550(&qword_1ED30FA58, &qword_1ED318B60, MEMORY[0x1E0D242B8]);
  v36 = v58;
  v37 = v60;
  sub_1AE924F6C();
  swift_bridgeObjectRelease();
  v38 = *(void (**)(char *, uint64_t))(v57 + 8);
  v38(v27, v37);
  v69 = v31;
  v70 = MEMORY[0x1E0D24658];
  v39 = sub_1AE52F6A8(&v66);
  v34(v39, v35, v31);
  sub_1AE5BA550(&qword_1ED30FA60, &qword_1ED318B60, MEMORY[0x1E0D242C0]);
  v40 = v61;
  sub_1AE924DEC();
  v38(v36, v37);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)&v66);
  sub_1AE924C9C();
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v40, 0, 1, v55);
}

void TriplesQuery.Clause.FullTextSearchClause.matchExpression(column:searchType:text:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1AE4FC4D4();
  v12 = v0;
  sub_1AE4F9084();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EED94848);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4FFEB4();
  v4 = MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE8B1B18();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE8B19C0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE924A74();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4FFEB4();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE8B1B04();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE8B1AAC();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE8B1B2C();
  MEMORY[0x1E0C80A78](v11);
  __asm { BR              X10 }
}

void sub_1AE8B0818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  sub_1AE8B18EC();
  sub_1AE924A44();
  v4 = *(_QWORD *)(v3 - 152);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, v4) == 1)
  {
    sub_1AE52982C(v1, &qword_1EED94848);
    v5 = sub_1AE4F6770();
    v6 = *(_QWORD *)(v3 - 144);
    v7 = 1;
  }
  else
  {
    v8 = *(_QWORD *)(v3 - 200);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v2, v1, v4);
    v9 = sub_1AE8B1A50((uint64_t)&type metadata for TriplesQuery.Clause.TableCodingKeys);
    sub_1AE5073C4(v9);
    sub_1AE8B1A68();
    sub_1AE8B19B4();
    sub_1AE8B1810();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v4);
    v5 = sub_1AE4F6770();
    v6 = v0;
    v7 = 0;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v6, v7, 1, v5);
  sub_1AE4F8180();
}

void TriplesQuery.Clause.FullTextSearchClause.stringSetExpression(column:searchType:textSet:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1AE4FC4D4();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_1AE8B1990();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F90F4();
  v10 = *(_QWORD *)v0;
  v11 = *(unsigned __int8 *)(v0 + 8);
  LOBYTE(v5) = *v5;
  LOBYTE(v7) = *v7;
  sub_1AE4F67A4();
  sub_1AE8ACDDC(v3, v10, v11, (char)v7, (char)v5);
  sub_1AE924C78();
  sub_1AE4F69EC();
  sub_1AE509CC8((unint64_t *)&unk_1ED31AD08, v12, MEMORY[0x1E0DEAF38]);
  sub_1AE8B1A1C();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v8);
  swift_bridgeObjectRelease();
  sub_1AE4F8180();
}

uint64_t sub_1AE8B0C14(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v29[1] = a3;
  v5 = sub_1AE924FCC();
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AE501548(&qword_1EED94868);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v29 - v12;
  v14 = sub_1AE501548(&qword_1ED318B60);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v29 - v19;
  v21 = *a1;
  v22 = a1[1];
  v30 = a2;
  v31 = v21;
  sub_1AE8B166C(a2, (uint64_t)v13);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v14) == 1)
  {
    sub_1AE52982C((uint64_t)v13, &qword_1EED94868);
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    sub_1AE501548((uint64_t *)&unk_1ED30FD78);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1AE934250;
    v24 = MEMORY[0x1E0D24968];
    *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v23 + 64) = v24;
    *(_QWORD *)(v23 + 32) = v31;
    *(_QWORD *)(v23 + 40) = v22;
    swift_bridgeObjectRetain();
    sub_1AE924FB4();
    sub_1AE501548(&qword_1ED319190);
    sub_1AE925314();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v33);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 0, 1, v14);
    return sub_1AE8B16B4((uint64_t)v11, v30);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
    v34 = 0;
    v35 = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    sub_1AE501548((uint64_t *)&unk_1ED30FD78);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1AE934250;
    v27 = MEMORY[0x1E0D24968];
    *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v26 + 64) = v27;
    *(_QWORD *)(v26 + 32) = v31;
    *(_QWORD *)(v26 + 40) = v22;
    swift_bridgeObjectRetain();
    sub_1AE924FB4();
    sub_1AE5BA550((unint64_t *)&unk_1EED9CC60, &qword_1ED318B60, MEMORY[0x1E0D242A0]);
    sub_1AE924DB0();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v33);
    v28 = *(void (**)(char *, uint64_t))(v15 + 8);
    v28(v20, v14);
    return ((uint64_t (*)(char *, uint64_t))v28)(v18, v14);
  }
}

void TriplesQuery.ComparisonType.compare(numeric:_:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1AE8B0FA8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v3[5];
  uint64_t v4[13];

  v0 = sub_1AE4F9084();
  v1 = sub_1AE8B1968(v0, MEMORY[0x1E0D24668], v3[0], v3[1], v3[2], v3[3], v3[4], v4[0], v4[1], v4[2], v4[3], v4[4]);
  sub_1AE8B1824((uint64_t)v1);
  sub_1AE8B1838();
  sub_1AE925014();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v4);
}

void TriplesQuery.ComparisonType.compare(text:_:)()
{
  uint64_t v1;
  uint64_t v2;

  sub_1AE9252C0();
  sub_1AE7353CC();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4F683C();
  sub_1AE924F60();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4FD234();
  __asm { BR              X10 }
}

void sub_1AE8B1128()
{
  sub_1AE8B1A74();
  sub_1AE8B173C();
  sub_1AE4F9084();
  sub_1AE500840();
}

void sub_1AE8B1154()
{
  sub_1AE50A1F4();
  sub_1AE500840();
}

void sub_1AE8B115C()
{
  sub_1AE5092D0();
  sub_1AE500840();
}

uint64_t sub_1AE8B1164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE924F30();
  v4 = MEMORY[0x1E0D249C8];
  *(_QWORD *)(v2 - 112) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v2 - 104) = v4;
  *(_QWORD *)(v2 - 136) = v3;
  sub_1AE924F48();
  sub_1AE52982C(v2 - 136, &qword_1ED319E60);
  sub_1AE924F30();
  sub_1AE9252A8();
  sub_1AE8B1BA8();
  return sub_1AE4FDC10(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
}

void sub_1AE8B1308()
{
  char *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *);
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1AE4FC4D4();
  v3 = v2;
  v5 = v4;
  sub_1AE8B1990();
  sub_1AE7353CC();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F666C();
  v9 = v8 - v7;
  v10 = *v5;
  v11 = v5[1];
  v13 = v5[2];
  v12 = v5[3];
  v14 = *v0;
  v15 = *((_QWORD *)v0 + 1);
  sub_1AE4F66C4();
  swift_bridgeObjectRetain();
  sub_1AE4F67A4();
  v3(v15, v10, v11, v13, v12, &v17);
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
    sub_1AE924C78();
  else
    sub_1AE924C84();
  sub_1AE4F69EC();
  sub_1AE509CC8((unint64_t *)&unk_1ED31AD08, v16, MEMORY[0x1E0DEAF38]);
  sub_1AE926064();
  sub_1AE4FDC10(v9, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_bridgeObjectRelease();
  sub_1AE4F8180();
}

void TriplesQuery.Clause.JoinClause.graphIdentifierSQLExpression(config:)()
{
  uint64_t v1;
  uint64_t v2;

  sub_1AE4FC4D4();
  sub_1AE8B1990();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v1);
  sub_1AE4F666C();
  sub_1AE4F9084();
  sub_1AE4FC580();
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F90F4();
  __asm { BR              X10 }
}

void sub_1AE8B14A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1AE925380();
  swift_bridgeObjectRetain();
  sub_1AE4F67A4();
  sub_1AE4F66C4();
  v10 = sub_1AE8AC600(v6, v0, v1, v7, v8, v5);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 - 128) = v10;
  sub_1AE924C84();
  sub_1AE52FE10();
  sub_1AE8B17EC((unint64_t *)&unk_1ED31AD08, v11, MEMORY[0x1E0DEAF38]);
  sub_1AE8B1A1C();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 152) + 8))(v4, *(_QWORD *)(v9 - 144));
  sub_1AE737420();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v3);
  sub_1AE4F8180();
}

uint64_t sub_1AE8B15E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1AE8B018C(a1, v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

uint64_t sub_1AE8B1608(uint64_t *a1)
{
  uint64_t v1;

  return sub_1AE8B0C14(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1AE8B1620()
{
  unint64_t result;

  result = qword_1ED30D920;
  if (!qword_1ED30D920)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.ComparableColumn, &type metadata for TriplesQuery.ComparableColumn);
    atomic_store(result, (unint64_t *)&qword_1ED30D920);
  }
  return result;
}

ValueMetadata *type metadata accessor for TriplesQuerySQLConfig()
{
  return &type metadata for TriplesQuerySQLConfig;
}

uint64_t sub_1AE8B166C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED94868);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE8B16B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED94868);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE8B16FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 + 16) = v2;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v4+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v3, a2, v5);
}

uint64_t sub_1AE8B1724()
{
  return sub_1AE925380();
}

uint64_t sub_1AE8B173C()
{
  return sub_1AE924F30();
}

unint64_t sub_1AE8B1760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v0;
  return v2
       + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
       + *(_QWORD *)(v3 + 72) * v1;
}

uint64_t sub_1AE8B1784@<X0>(char a1@<W4>, uint64_t a2@<X5>, char a3@<W6>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  *(_BYTE *)(v9 - 88) = v8 & 1;
  *(_QWORD *)(v9 - 80) = a4;
  *(_BYTE *)(v9 - 72) = a3 & 1;
  *(_QWORD *)(v9 - 64) = a2;
  *(_BYTE *)(v9 - 56) = a1 & 1;
  *(_QWORD *)(v9 - 192) = v7;
  *(_QWORD *)(v9 - 184) = v6;
  *(_QWORD *)(v9 - 176) = v5;
  *(_QWORD *)(v9 - 168) = a5;
  return TriplesQuery.Clause.MatchClause.sqlExpression(config:)(v9 - 192);
}

uint64_t sub_1AE8B17BC()
{
  uint64_t v0;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 128);
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_1AE8B17D4()
{
  uint64_t v0;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 - 176);
  return v0 - 128;
}

uint64_t sub_1AE8B17EC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1AE5BA550(a1, v3, a3);
}

uint64_t sub_1AE8B17F4()
{
  return sub_1AE926058();
}

uint64_t sub_1AE8B1810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v0, v1);
}

uint64_t sub_1AE8B1824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(a1, v2, v1);
}

uint64_t sub_1AE8B1850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 16) = v0;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v4+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v1, v2, v5);
}

uint64_t sub_1AE8B187C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 16) = v2;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v6+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v3, a2, v5);
}

uint64_t sub_1AE8B18A4()
{
  uint64_t v0;

  return v0 - 128;
}

uint64_t sub_1AE8B18B4()
{
  return sub_1AE926058();
}

uint64_t sub_1AE8B18EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AE8B18FC()
{
  return sub_1AE926058();
}

uint64_t sub_1AE8B190C()
{
  return sub_1AE92502C();
}

unint64_t sub_1AE8B1918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v0;
  return v3
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(_QWORD *)(v2 + 72) * v1;
}

uint64_t sub_1AE8B193C()
{
  return sub_1AE926058();
}

unint64_t sub_1AE8B1944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v1;
  return v3
       + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
       + *(_QWORD *)(v2 + 72) * v0;
}

uint64_t *sub_1AE8B1968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  a11 = a1;
  a12 = a2;
  return sub_1AE52F6A8(&a8);
}

uint64_t sub_1AE8B1974@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 184) = v4;
  *(_QWORD *)(v5 - 160) = v3;
  *(_QWORD *)(v5 - 152) = v2;
  *(_QWORD *)(v5 - 144) = v1;
  *(_QWORD *)(v5 - 136) = a1;
  return TriplesQuery.Clause.FullTextSearchClause.sqlExpression(config:)();
}

uint64_t sub_1AE8B1990()
{
  return sub_1AE924C90();
}

void sub_1AE8B1998(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 184) = v4;
  *(_QWORD *)(v5 - 160) = v3;
  *(_QWORD *)(v5 - 152) = v2;
  *(_QWORD *)(v5 - 144) = v1;
  *(_QWORD *)(v5 - 136) = a1;
  TriplesQuery.Clause.JoinClause.graphIdentifierSQLExpression(config:)();
}

uint64_t sub_1AE8B19B4()
{
  return sub_1AE924EC4();
}

uint64_t sub_1AE8B19D4()
{
  return sub_1AE9252B4();
}

uint64_t sub_1AE8B19FC()
{
  return sub_1AE926064();
}

uint64_t sub_1AE8B1A10()
{
  return sub_1AE9252C0();
}

uint64_t sub_1AE8B1A1C()
{
  return sub_1AE926064();
}

uint64_t sub_1AE8B1A24()
{
  return sub_1AE926058();
}

void sub_1AE8B1A30()
{
  JUMPOUT(0x1AF4524B8);
}

uint64_t sub_1AE8B1A3C@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 159) = a1;
  *(_QWORD *)(v2 - 152) = v1;
  return TriplesQuery.Clause.ComparisonClause.sqlExpression(config:)();
}

unint64_t sub_1AE8B1A50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return sub_1AE8AA834();
}

uint64_t sub_1AE8B1A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_1AE8B1A74()
{
  return sub_1AE924F3C();
}

uint64_t sub_1AE8B1A84()
{
  return sub_1AE924F3C();
}

uint64_t sub_1AE8B1A94()
{
  return sub_1AE92502C();
}

uint64_t sub_1AE8B1A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1AE8B1ABC()
{
  return 0x4C41455220534120;
}

unint64_t sub_1AE8B1AD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = v0;
  return sub_1AE8AA834();
}

uint64_t sub_1AE8B1ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;

  return a9(a1, a2, 1, v9);
}

unint64_t sub_1AE8B1AEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = v0;
  return sub_1AE8AA834();
}

uint64_t sub_1AE8B1B4C()
{
  return sub_1AE926058();
}

void sub_1AE8B1B6C(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 176) = a1;
  *(_QWORD *)(v2 - 104) = v1;
}

void sub_1AE8B1B78()
{
  sub_1AE51B734();
}

void sub_1AE8B1B84(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 128) = a1;
  *(_QWORD *)(v2 - 152) = v1;
}

uint64_t sub_1AE8B1B90()
{
  return sub_1AE92502C();
}

uint64_t sub_1AE8B1B9C()
{
  return sub_1AE926064();
}

uint64_t sub_1AE8B1BA8()
{
  return sub_1AE925290();
}

uint64_t sub_1AE8B1BB0()
{
  return sub_1AE924C84();
}

uint64_t sub_1AE8B1BC4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1AE5BA550(a1, v3, a3);
}

unint64_t sub_1AE8B1BE0()
{
  return sub_1AE578E74();
}

uint64_t *sub_1AE8B1BE8()
{
  uint64_t *v0;

  return sub_1AE52F6A8(v0);
}

void sub_1AE8B1BF0(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 96) = a1;
  *(_QWORD *)(v2 - 88) = v1;
}

uint64_t sub_1AE8B1C04()
{
  return sub_1AE92502C();
}

uint64_t sub_1AE8B1C10()
{
  uint64_t v0;

  return v0 - 176;
}

double sub_1AE8B1C1C()
{
  double v0;

  return v0;
}

void sub_1AE8B1C30(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(v6 - 192) = v5;
  *(_QWORD *)(v6 - 184) = v4;
  *(_QWORD *)(v6 - 160) = v3;
  *(_QWORD *)(v6 - 152) = v2;
  *(_QWORD *)(v6 - 144) = v1;
  *(_QWORD *)(v6 - 136) = a1;
}

uint64_t sub_1AE8B1C44()
{
  return sub_1AE92538C();
}

double static TriplesQuery.compare(column:matchType:value:)@<D0>(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  double result;

  *(_QWORD *)a3 = *a1 | ((unint64_t)*a2 << 8);
  *(double *)(a3 + 8) = a4;
  result = 0.0;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_QWORD *)(a3 + 96) = 0;
  *(_BYTE *)(a3 + 104) = 0x80;
  return result;
}

uint64_t static TriplesQuery.match(subjectMatchType:subjects:predicateMatchType:predicates:objectMatchType:objects:relationshipIdMatchType:relationshipIds:relationshipPredicateMatchType:relationshipPredicates:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1AE5059D8(a1, a2, a3);
  v4[2] = v5;
  v4[3] = v3;
  v4[4] = v7;
  v4[5] = v6;
  v4[6] = v9;
  v4[7] = v8;
  v4[8] = v11;
  v4[9] = v10;
  v4[11] = 0;
  v4[12] = 0;
  v4[10] = 0;
  sub_1AE5064CC((uint64_t)v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE4F66CC();
  return sub_1AE508E20();
}

{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1AE5059D8(a1, a2, a3);
  v3[2] = 0;
  v3[3] = v4;
  v3[4] = v5;
  v3[5] = v6;
  v3[6] = v7;
  v3[7] = v8;
  v3[8] = v9;
  v3[9] = v10;
  v3[11] = 0;
  v3[12] = 0;
  v3[10] = v11;
  sub_1AE5064CC((uint64_t)v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AE4F66CC();
  return sub_1AE508E20();
}

__n128 TriplesQuery.init(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_BYTE *)(a1 + 104);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v5;
  result = *(__n128 *)(a1 + 64);
  v7 = *(_OWORD *)(a1 + 80);
  *(__n128 *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v7;
  *(_QWORD *)(a2 + 96) = v2;
  *(_BYTE *)(a2 + 104) = v3;
  return result;
}

#error "1AE8B1DA8: call analysis failed (funcsize=89)"

#error "1AE8B2000: call analysis failed (funcsize=103)"

uint64_t TriplesQueryParameters.init(limit:sorting:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  char v5;

  v4 = *a3;
  v5 = *((_BYTE *)a3 + 8);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = a2 & 1;
  *(_QWORD *)(a4 + 16) = v4;
  *(_BYTE *)(a4 + 24) = v5;
  return result;
}

IntelligencePlatform::TriplesQuery::FullTextSearchType_optional __swiftcall TriplesQuery.FullTextSearchType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  IntelligencePlatform::TriplesQuery::FullTextSearchType_optional result;

  v2 = v1;
  v3 = sub_1AE926B44();
  swift_bridgeObjectRelease();
  v4 = 6;
  if (v3 < 6)
    v4 = v3;
  *v2 = v4;
  sub_1AE4F6624();
  return result;
}

uint64_t static TriplesQuery.fullTextSearch(objects:objectSearchType:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = v3;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_QWORD *)(a3 + 96) = 0;
  *(_BYTE *)(a3 + 104) = 96;
  return swift_bridgeObjectRetain();
}

uint64_t TriplesQuery.clause.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = *(_QWORD *)(v1 + 64);
  v11 = *(_QWORD *)(v1 + 72);
  v12 = *(_QWORD *)(v1 + 80);
  v13 = *(_QWORD *)(v1 + 88);
  v14 = *(_QWORD *)(v1 + 96);
  v15 = *(_BYTE *)(v1 + 104);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v12;
  *(_QWORD *)(a1 + 88) = v13;
  *(_QWORD *)(a1 + 96) = v14;
  *(_BYTE *)(a1 + 104) = v15;
  return sub_1AE526458(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_1AE8B2164(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x657375616C63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE8B21E0()
{
  return 0x657375616C63;
}

uint64_t sub_1AE8B21F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8B2164(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE8B2220()
{
  sub_1AE8B23BC();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B2248()
{
  sub_1AE8B23BC();
  return sub_1AE926FA0();
}

void TriplesQuery.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE4F67EC();
  v2 = v1;
  v3 = sub_1AE501548(&qword_1EED98E78);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F90C8();
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE8B23BC();
  sub_1AE926F4C();
  sub_1AE8A7E5C();
  sub_1AE926CC4();
  sub_1AE4FBA8C(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_1AE4F667C();
}

unint64_t sub_1AE8B23BC()
{
  unint64_t result;

  result = qword_1EED98BC0;
  if (!qword_1EED98BC0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C918, &type metadata for TriplesQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98BC0);
  }
  return result;
}

void TriplesQuery.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char v16;

  sub_1AE4F67EC();
  v4 = v3;
  v6 = v5;
  v7 = sub_1AE501548(&qword_1EEDA5618);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F90F4();
  sub_1AE4F9858(v4, v4[3]);
  sub_1AE8B23BC();
  sub_1AE926F34();
  if (!v0)
  {
    sub_1AE8A7ED4();
    sub_1AE926BEC();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v7);
    *(_OWORD *)v6 = v9;
    *(_OWORD *)(v6 + 16) = v10;
    *(_OWORD *)(v6 + 32) = v11;
    *(_OWORD *)(v6 + 48) = v12;
    *(_OWORD *)(v6 + 64) = v13;
    *(_OWORD *)(v6 + 80) = v14;
    *(_QWORD *)(v6 + 96) = v15;
    *(_BYTE *)(v6 + 104) = v16;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v4);
  sub_1AE4F667C();
}

void sub_1AE8B2504()
{
  TriplesQuery.init(from:)();
}

void sub_1AE8B2518()
{
  TriplesQuery.encode(to:)();
}

double static TriplesQuery.all()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 96) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 104) = -64;
  return result;
}

double static TriplesQuery.isA(_:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  __int128 v18;

  v4 = *a1;
  v3 = a1[1];
  sub_1AE501548(&qword_1ED319608);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AE934250;
  static EntityPredicate.isA.getter();
  sub_1AE56C648(inited, v6, v7, v8, v9, v10, v11, v12, 1, 2);
  v14 = v13;
  sub_1AE501548(&qword_1ED31BCD0);
  v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = v18;
  *(_QWORD *)(v15 + 32) = v4;
  *(_QWORD *)(v15 + 40) = v3;
  sub_1AE4F66CC();
  sub_1AE56BB6C();
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_QWORD *)(a2 + 32) = v14;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = v17;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 88) = 0u;
  *(_BYTE *)(a2 + 104) = 65;
  return result;
}

uint64_t TriplesQuery.description.getter()
{
  sub_1AE92691C();
  sub_1AE925F74();
  sub_1AE926A48();
  sub_1AE925F74();
  return 0;
}

uint64_t sub_1AE8B2708(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7365686374616DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4D746F4E73656F64 && a2 == 0xEC00000068637461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE8B280C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x4D746F4E73656F64;
  else
    return 0x7365686374616DLL;
}

uint64_t sub_1AE8B284C()
{
  char *v0;

  return sub_1AE8B280C(*v0);
}

uint64_t sub_1AE8B2854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8B2708(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8B2878()
{
  sub_1AE8B438C();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B28A0()
{
  sub_1AE8B438C();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8B28C8()
{
  sub_1AE8B43C8();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B28F0()
{
  sub_1AE8B43C8();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8B2918()
{
  sub_1AE8B4404();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B2940()
{
  sub_1AE8B4404();
  return sub_1AE926FA0();
}

void TriplesQuery.MatchType.encode(to:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1AE4F67EC();
  v3 = sub_1AE501548(&qword_1EED98F28);
  v10 = *(_QWORD *)(v3 - 8);
  v11 = v3;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F90F4();
  v5 = sub_1AE501548(&qword_1EED98F38);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = v5;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F910C();
  sub_1AE501548(&qword_1EED98F30);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F7AE0();
  sub_1AE8B438C();
  sub_1AE8B56A4();
  if ((v1 & 1) != 0)
  {
    sub_1AE8B572C();
    sub_1AE4F6974();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0, v11);
  }
  else
  {
    sub_1AE8B4404();
    sub_1AE4F6974();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v9);
  }
  sub_1AE4FD5F0();
  sub_1AE4F667C();
}

void TriplesQuery.MatchType.init(from:)()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EEDA5628);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4FCD48(v5, v22);
  v6 = sub_1AE501548(&qword_1EEDA5630);
  v7 = sub_1AE50617C(v6);
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4FB7E8();
  v8 = sub_1AE501548(&qword_1EEDA5638);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1AE4F9858(v3, v3[3]);
  sub_1AE8B438C();
  sub_1AE508548();
  if (v1)
    goto LABEL_7;
  if (!*(_QWORD *)(sub_1AE509CD0() + 16)
    || (v11 = sub_1AE8B5648(), sub_1AE50AF34(v11, v12, v13, v14, v15, v16), sub_1AE8B5690(), v8))
  {
    sub_1AE6080A8();
    sub_1AE4F6778();
    sub_1AE501548(&qword_1EED99C38);
    sub_1AE505F24((uint64_t)&type metadata for TriplesQuery.MatchType);
    v17 = sub_1AE8B5670();
    sub_1AE5073DC(v17, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1AE4FBA84();
    v18 = sub_1AE8B56F4();
    v20(v18, v19);
    v3 = v23;
LABEL_7:
    v21 = (uint64_t)v3;
    goto LABEL_8;
  }
  if ((v3 & 1) != 0)
  {
    sub_1AE8B572C();
    sub_1AE4F6E80();
    sub_1AE8B5708();
    sub_1AE8B56B8();
    sub_1AE4FBA84();
    sub_1AE4FBA8C((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  else
  {
    sub_1AE8B4404();
    sub_1AE50A218();
    sub_1AE8B5708();
    sub_1AE507D1C();
    sub_1AE4FBA84();
    sub_1AE8B56C8();
  }
  *v0 = (_BYTE)v3;
  v21 = (uint64_t)v23;
LABEL_8:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v21);
  sub_1AE4F667C();
}

void sub_1AE8B2CF0()
{
  TriplesQuery.MatchType.init(from:)();
}

void sub_1AE8B2D04()
{
  TriplesQuery.MatchType.encode(to:)();
}

uint64_t TriplesQuery.FullTextSearchType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE8B2D48
                                                            + 4 * asc_1AE96B936[*v0]))(0x6E656B6F54796E61, 0xE800000000000000);
}

uint64_t sub_1AE8B2D48()
{
  return 0x6E656B6F546C6C61;
}

uint64_t sub_1AE8B2D68()
{
  return 0x69666572506C6C61;
}

uint64_t sub_1AE8B2D88()
{
  return 0x657361726870;
}

uint64_t sub_1AE8B2D9C()
{
  return 0x6850786966657270;
}

uint64_t sub_1AE8B2DBC()
{
  return 0x6E69727473627573;
}

void sub_1AE8B2DD8()
{
  unsigned __int8 *v0;

  sub_1AE512B18(*v0);
}

void sub_1AE8B2DE0()
{
  sub_1AE5E954C();
}

void sub_1AE8B2DE8(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE5500D8(a1, *v1);
}

IntelligencePlatform::TriplesQuery::FullTextSearchType_optional sub_1AE8B2DF0(Swift::String *a1)
{
  return TriplesQuery.FullTextSearchType.init(rawValue:)(*a1);
}

void sub_1AE8B2DFC(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = TriplesQuery.FullTextSearchType.rawValue.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

uint64_t sub_1AE8B2E1C()
{
  sub_1AE8B5604();
  return sub_1AE926190();
}

uint64_t sub_1AE8B2E78()
{
  sub_1AE8B5604();
  return sub_1AE926148();
}

void sub_1AE8B2EC4()
{
  sub_1AE512730();
}

BOOL static TriplesQuery.ComparableColumn.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void TriplesQuery.ComparableColumn.hash(into:)()
{
  sub_1AE506940();
  sub_1AE4F6664();
}

IntelligencePlatform::TriplesQuery::ComparableColumn_optional __swiftcall TriplesQuery.ComparableColumn.init(stringValue:)(Swift::String stringValue)
{
  char *v1;
  char *v2;
  BOOL v3;
  void *object;
  uint64_t countAndFlagsBits;
  char v6;
  IntelligencePlatform::TriplesQuery::ComparableColumn_optional result;
  char v9;

  v2 = v1;
  v3 = stringValue._countAndFlagsBits == 0x7463656A626FLL && stringValue._object == (void *)0xE600000000000000;
  if (v3
    || (object = stringValue._object, countAndFlagsBits = stringValue._countAndFlagsBits, (sub_1AE4FD134() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    v6 = 0;
  }
  else if (countAndFlagsBits == 0x6D617473656D6974 && object == (void *)0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    v6 = 1;
  }
  else
  {
    v9 = sub_1AE4FD134();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
      v6 = 1;
    else
      v6 = 2;
  }
  *v2 = v6;
  sub_1AE4F6624();
  return result;
}

IntelligencePlatform::TriplesQuery::ComparableColumn_optional __swiftcall TriplesQuery.ComparableColumn.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 2;
  return (IntelligencePlatform::TriplesQuery::ComparableColumn_optional)intValue;
}

uint64_t sub_1AE8B2FEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7463656A626FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AE8B30DC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6D617473656D6974;
  else
    return 0x7463656A626FLL;
}

uint64_t sub_1AE8B3114()
{
  char *v0;

  return sub_1AE8B30DC(*v0);
}

uint64_t sub_1AE8B311C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8B2FEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8B3140()
{
  sub_1AE8B4440();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B3168()
{
  sub_1AE8B4440();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8B3190()
{
  sub_1AE8B44B8();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B31B8()
{
  sub_1AE8B44B8();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8B31E0()
{
  sub_1AE8B447C();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B3208()
{
  sub_1AE8B447C();
  return sub_1AE926FA0();
}

void TriplesQuery.ComparableColumn.encode(to:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1AE4F67EC();
  v3 = sub_1AE501548(&qword_1EEDA5640);
  v10 = *(_QWORD *)(v3 - 8);
  v11 = v3;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F90F4();
  v5 = sub_1AE501548(&qword_1EEDA5648);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = v5;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F910C();
  sub_1AE501548(&qword_1EEDA5650);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F7AE0();
  sub_1AE8B4440();
  sub_1AE8B56A4();
  if ((v1 & 1) != 0)
  {
    sub_1AE8B5738();
    sub_1AE4F6974();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0, v11);
  }
  else
  {
    sub_1AE8B44B8();
    sub_1AE4F6974();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v9);
  }
  sub_1AE4FD5F0();
  sub_1AE4F667C();
}

void TriplesQuery.ComparableColumn.init(from:)()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  sub_1AE4F67EC();
  v3 = v2;
  sub_1AE501548(&qword_1EEDA5670);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4FCD48(v5, v22);
  v6 = sub_1AE501548(&qword_1EEDA5678);
  v7 = sub_1AE50617C(v6);
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4FB7E8();
  v8 = sub_1AE501548(&qword_1EEDA5680);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1AE4F9858(v3, v3[3]);
  sub_1AE8B4440();
  sub_1AE508548();
  if (v1)
    goto LABEL_7;
  if (!*(_QWORD *)(sub_1AE509CD0() + 16)
    || (v11 = sub_1AE8B5648(), sub_1AE50AF34(v11, v12, v13, v14, v15, v16), sub_1AE8B5690(), v8))
  {
    sub_1AE6080A8();
    sub_1AE4F6778();
    sub_1AE501548(&qword_1EED99C38);
    sub_1AE505F24((uint64_t)&type metadata for TriplesQuery.ComparableColumn);
    v17 = sub_1AE8B5670();
    sub_1AE5073DC(v17, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    sub_1AE4FBA84();
    v18 = sub_1AE8B56F4();
    v20(v18, v19);
    v3 = v23;
LABEL_7:
    v21 = (uint64_t)v3;
    goto LABEL_8;
  }
  if ((v3 & 1) != 0)
  {
    sub_1AE8B5738();
    sub_1AE4F6E80();
    sub_1AE8B5708();
    sub_1AE8B56B8();
    sub_1AE4FBA84();
    sub_1AE4FBA8C((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  }
  else
  {
    sub_1AE8B44B8();
    sub_1AE50A218();
    sub_1AE8B5708();
    sub_1AE507D1C();
    sub_1AE4FBA84();
    sub_1AE8B56C8();
  }
  *v0 = (_BYTE)v3;
  v21 = (uint64_t)v23;
LABEL_8:
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v21);
  sub_1AE4F667C();
}

uint64_t TriplesQuery.ComparableColumn.intValue.getter()
{
  return 0;
}

uint64_t TriplesQuery.ComparableColumn.stringValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D617473656D6974;
  else
    return 0x7463656A626FLL;
}

void sub_1AE8B3600()
{
  TriplesQuery.ComparableColumn.init(from:)();
}

void sub_1AE8B3614()
{
  TriplesQuery.ComparableColumn.encode(to:)();
}

uint64_t sub_1AE8B3628()
{
  sub_1AE8B1620();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B3650()
{
  sub_1AE8B1620();
  return sub_1AE926FA0();
}

BOOL static TriplesQuery.ComparisonType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void TriplesQuery.ComparisonType.hash(into:)()
{
  sub_1AE506940();
  sub_1AE4F6664();
}

uint64_t sub_1AE8B36A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x5472657461657267 && a2 == 0xEB000000006E6168;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AE98A8B0 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x6E6168547373656CLL && a2 == 0xE800000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x6E6168547373656CLL && a2 == 0xEF6C61757145724FLL)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v8 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_1AE8B3880(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE8B38BC + 4 * byte_1AE96B93C[a1]))(0x5472657461657267, 0xEB000000006E6168);
}

unint64_t sub_1AE8B38BC()
{
  return 0xD000000000000012;
}

uint64_t sub_1AE8B38D8()
{
  return 0x6E6168547373656CLL;
}

uint64_t sub_1AE8B3904()
{
  unsigned __int8 *v0;

  return sub_1AE8B3880(*v0);
}

uint64_t sub_1AE8B390C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8B36A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8B3930()
{
  sub_1AE8B44F4();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B3958()
{
  sub_1AE8B44F4();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8B3980()
{
  sub_1AE8B45E4();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B39A8()
{
  sub_1AE8B45E4();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8B39D0()
{
  sub_1AE8B45A8();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B39F8()
{
  sub_1AE8B45A8();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8B3A20()
{
  sub_1AE8B456C();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B3A48()
{
  sub_1AE8B456C();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8B3A70()
{
  sub_1AE8B4530();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B3A98()
{
  sub_1AE8B4530();
  return sub_1AE926FA0();
}

void TriplesQuery.ComparisonType.encode(to:)()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1AE4F67EC();
  v1 = v0;
  v3 = v2;
  sub_1AE501548(&qword_1EEDA5688);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE507460(v5, v10);
  sub_1AE501548(&qword_1EEDA5690);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5698);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F90C8();
  v11 = sub_1AE501548(&qword_1EEDA56A0);
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F90F4();
  sub_1AE501548(&qword_1EEDA56A8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  v9 = *v1;
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE8B44F4();
  sub_1AE926F4C();
  __asm { BR              X9 }
}

void sub_1AE8B3C20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 68) = 0;
  sub_1AE8B45E4();
  sub_1AE4F6974();
  (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 168));
  sub_1AE4FD5F0();
  sub_1AE4F667C();
}

void TriplesQuery.ComparisonType.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE4F6694();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void TriplesQuery.ComparisonType.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_1AE4F67EC();
  v41 = v0;
  v3 = v2;
  v39 = v4;
  v38 = sub_1AE501548(&qword_1EEDA56D8);
  v35 = *(_QWORD *)(v38 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  v40 = v6;
  v7 = sub_1AE501548(&qword_1EEDA56E0);
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4FCD48(v9, v28);
  v10 = sub_1AE501548(&qword_1EEDA56E8);
  v33 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE507460(v12, v28);
  v32 = sub_1AE501548(&qword_1EEDA56F0);
  v13 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  sub_1AE4F90C8();
  v14 = sub_1AE501548(&qword_1EEDA56F8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE8B44F4();
  v18 = v41;
  sub_1AE926F34();
  if (!v18)
  {
    v30 = v1;
    v31 = v3;
    v28 = v13;
    v41 = v15;
    v19 = sub_1AE926C1C();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v29 = *(unsigned __int8 *)(v19 + 32);
      sub_1AE50AF34(1, v20, v19, v19 + 32, 0, (2 * v20) | 1);
      v22 = v21;
      v24 = v23;
      swift_bridgeObjectRelease();
      if (v22 == v24 >> 1)
        __asm { BR              X9 }
    }
    v25 = sub_1AE6080A8();
    sub_1AE4F6778();
    v27 = v26;
    sub_1AE501548(&qword_1EED99C38);
    *v27 = &type metadata for TriplesQuery.ComparisonType;
    sub_1AE926B5C();
    sub_1AE92697C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x1E0DEC450], v25);
    swift_willThrow();
    sub_1AE4FBA84();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v14);
    v3 = v31;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v3);
  sub_1AE4F667C();
}

void sub_1AE8B4000()
{
  uint64_t v0;

  sub_1AE8B5720();
  sub_1AE4FE2BC();
  if (!v0)
  {
    sub_1AE545420();
    JUMPOUT(0x1AE8B40ACLL);
  }
  sub_1AE4FBA84();
  sub_1AE4FEC08();
  JUMPOUT(0x1AE8B3FE8);
}

void sub_1AE8B4030()
{
  uint64_t v0;

  sub_1AE505C58();
  sub_1AE4FE2BC();
  if (v0)
    JUMPOUT(0x1AE8B4058);
  JUMPOUT(0x1AE8B40A8);
}

void sub_1AE8B406C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD);

  sub_1AE8B5714();
  sub_1AE4FE2BC();
  if (v0)
  {
    sub_1AE4FBA84();
    sub_1AE4FEC08();
    JUMPOUT(0x1AE8B3FE8);
  }
  v2 = sub_1AE545420();
  v3(v2, *(_QWORD *)(v1 - 128));
  sub_1AE4FBA84();
  sub_1AE4FEC08();
  JUMPOUT(0x1AE8B40ECLL);
}

void sub_1AE8B4104()
{
  TriplesQuery.ComparisonType.init(from:)();
}

void sub_1AE8B4118()
{
  TriplesQuery.ComparisonType.encode(to:)();
}

#error "1AE8B41CC: call analysis failed (funcsize=82)"

uint64_t TriplesQueryParameters.limit.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t TriplesQueryParameters.sorting.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 8) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t QueryableKnowledgeGraph.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1AE4F66CC();
  return v1;
}

void QueryableKnowledgeGraph.rawValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  sub_1AE4F6624();
}

uint64_t (*QueryableKnowledgeGraph.rawValue.modify())(_QWORD)
{
  return nullsub_1;
}

IntelligencePlatform::QueryableKnowledgeGraph __swiftcall QueryableKnowledgeGraph.init(rawValue:)(IntelligencePlatform::QueryableKnowledgeGraph rawValue)
{
  IntelligencePlatform::QueryableKnowledgeGraph *v1;

  *v1 = rawValue;
  return rawValue;
}

uint64_t sub_1AE8B4304@<X0>(Swift::String *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = QueryableKnowledgeGraph.init(rawValue:)(*a1).rawValue._countAndFlagsBits;
  *a2 = v4;
  a2[1] = v5;
  return result;
}

void sub_1AE8B4340(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = QueryableKnowledgeGraph.rawValue.getter();
  a1[1] = v2;
  sub_1AE4F6664();
}

uint64_t sub_1AE8B4360(uint64_t *a1, uint64_t *a2)
{
  return sub_1AE510CDC(*a1, a1[1], *a2, a2[1]);
}

void sub_1AE8B4374()
{
  sub_1AE512C04();
}

uint64_t sub_1AE8B437C()
{
  return sub_1AE5E87D0();
}

void sub_1AE8B4384()
{
  sub_1AE54FA4C();
}

unint64_t sub_1AE8B438C()
{
  unint64_t result;

  result = qword_1EED98DD0;
  if (!qword_1EED98DD0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C8C8, &type metadata for TriplesQuery.MatchType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98DD0);
  }
  return result;
}

unint64_t sub_1AE8B43C8()
{
  unint64_t result;

  result = qword_1EEDA5620;
  if (!qword_1EEDA5620)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C878, &type metadata for TriplesQuery.MatchType.DoesNotMatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5620);
  }
  return result;
}

unint64_t sub_1AE8B4404()
{
  unint64_t result;

  result = qword_1EED98DE8;
  if (!qword_1EED98DE8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C828, &type metadata for TriplesQuery.MatchType.MatchesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98DE8);
  }
  return result;
}

unint64_t sub_1AE8B4440()
{
  unint64_t result;

  result = qword_1EEDA5658;
  if (!qword_1EEDA5658)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C7D8, &type metadata for TriplesQuery.ComparableColumn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5658);
  }
  return result;
}

unint64_t sub_1AE8B447C()
{
  unint64_t result;

  result = qword_1EEDA5660;
  if (!qword_1EEDA5660)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C788, &type metadata for TriplesQuery.ComparableColumn.TimestampCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5660);
  }
  return result;
}

unint64_t sub_1AE8B44B8()
{
  unint64_t result;

  result = qword_1EEDA5668;
  if (!qword_1EEDA5668)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C738, &type metadata for TriplesQuery.ComparableColumn.ObjectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5668);
  }
  return result;
}

unint64_t sub_1AE8B44F4()
{
  unint64_t result;

  result = qword_1EEDA56B0;
  if (!qword_1EEDA56B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C6E8, &type metadata for TriplesQuery.ComparisonType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA56B0);
  }
  return result;
}

unint64_t sub_1AE8B4530()
{
  unint64_t result;

  result = qword_1EEDA56B8;
  if (!qword_1EEDA56B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C698, &type metadata for TriplesQuery.ComparisonType.LessThanOrEqualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA56B8);
  }
  return result;
}

unint64_t sub_1AE8B456C()
{
  unint64_t result;

  result = qword_1EEDA56C0;
  if (!qword_1EEDA56C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C648, &type metadata for TriplesQuery.ComparisonType.LessThanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA56C0);
  }
  return result;
}

unint64_t sub_1AE8B45A8()
{
  unint64_t result;

  result = qword_1EEDA56C8;
  if (!qword_1EEDA56C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C5F8, &type metadata for TriplesQuery.ComparisonType.GreaterThanOrEqualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA56C8);
  }
  return result;
}

unint64_t sub_1AE8B45E4()
{
  unint64_t result;

  result = qword_1EEDA56D0;
  if (!qword_1EEDA56D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C5A8, &type metadata for TriplesQuery.ComparisonType.GreaterThanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA56D0);
  }
  return result;
}

unint64_t sub_1AE8B4624()
{
  unint64_t result;

  result = qword_1EEDA5700;
  if (!qword_1EEDA5700)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.MatchType, &type metadata for TriplesQuery.MatchType);
    atomic_store(result, (unint64_t *)&qword_1EEDA5700);
  }
  return result;
}

unint64_t sub_1AE8B4664()
{
  unint64_t result;

  result = qword_1EEDA5708;
  if (!qword_1EEDA5708)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.FullTextSearchType, &type metadata for TriplesQuery.FullTextSearchType);
    atomic_store(result, (unint64_t *)&qword_1EEDA5708);
  }
  return result;
}

unint64_t sub_1AE8B46A4()
{
  unint64_t result;

  result = qword_1EEDA5710;
  if (!qword_1EEDA5710)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.ComparableColumn, &type metadata for TriplesQuery.ComparableColumn);
    atomic_store(result, (unint64_t *)&qword_1EEDA5710);
  }
  return result;
}

unint64_t sub_1AE8B46E4()
{
  unint64_t result;

  result = qword_1ED30D918;
  if (!qword_1ED30D918)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.ComparableColumn, &type metadata for TriplesQuery.ComparableColumn);
    atomic_store(result, (unint64_t *)&qword_1ED30D918);
  }
  return result;
}

unint64_t sub_1AE8B4728()
{
  unint64_t result;

  result = qword_1EEDA5718;
  if (!qword_1EEDA5718)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.ComparisonType, &type metadata for TriplesQuery.ComparisonType);
    atomic_store(result, (unint64_t *)&qword_1EEDA5718);
  }
  return result;
}

unint64_t sub_1AE8B4768()
{
  unint64_t result;

  result = qword_1EEDA5720;
  if (!qword_1EEDA5720)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for QueryableKnowledgeGraph, &type metadata for QueryableKnowledgeGraph);
    atomic_store(result, (unint64_t *)&qword_1EEDA5720);
  }
  return result;
}

uint64_t initializeWithCopy for TriplesQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_BYTE *)(a2 + 104);
  sub_1AE526458(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_BYTE *)(a1 + 104) = v17;
  return a1;
}

uint64_t assignWithCopy for TriplesQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v25 = *(_QWORD *)(a2 + 72);
  v26 = *(_QWORD *)(a2 + 80);
  v27 = *(_QWORD *)(a2 + 88);
  v28 = *(_QWORD *)(a2 + 96);
  v29 = *(_BYTE *)(a2 + 104);
  sub_1AE526458(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v25, v26, v27, v28, v29);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_QWORD *)(a1 + 96);
  v23 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v25;
  *(_QWORD *)(a1 + 80) = v26;
  *(_QWORD *)(a1 + 88) = v27;
  *(_QWORD *)(a1 + 96) = v28;
  *(_BYTE *)(a1 + 104) = v29;
  sub_1AE58307C(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23);
  return a1;
}

void type metadata accessor for TriplesQuery()
{
  sub_1AE4F67D4();
}

void type metadata accessor for TriplesQuery.MatchType()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for TriplesQuery.FullTextSearchType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1AE8B49F8 + 4 * byte_1AE96B953[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1AE8B4A2C + 4 * byte_1AE96B94E[v4]))();
}

uint64_t sub_1AE8B4A2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8B4A34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8B4A3CLL);
  return result;
}

uint64_t sub_1AE8B4A48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8B4A50);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1AE8B4A54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8B4A5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for TriplesQuery.FullTextSearchType()
{
  sub_1AE4F67D4();
}

void type metadata accessor for TriplesQuery.ComparableColumn()
{
  sub_1AE4F67D4();
}

void type metadata accessor for TriplesQuery.ComparisonType()
{
  sub_1AE4F67D4();
}

uint64_t initializeWithCopy for TriplesQueryParameters(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TriplesQueryParameters(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  return a1;
}

uint64_t assignWithTake for TriplesQueryParameters(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for TriplesQueryParameters(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TriplesQueryParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

void type metadata accessor for TriplesQueryParameters()
{
  sub_1AE4F67D4();
}

void type metadata accessor for QueryableKnowledgeGraph()
{
  sub_1AE4F67D4();
}

uint64_t _s20IntelligencePlatform12TriplesQueryV14ComparisonTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AE8B4C8C + 4 * byte_1AE96B95D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AE8B4CC0 + 4 * byte_1AE96B958[v4]))();
}

uint64_t sub_1AE8B4CC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8B4CC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8B4CD0);
  return result;
}

uint64_t sub_1AE8B4CDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8B4CE4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AE8B4CE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8B4CF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparisonType.CodingKeys()
{
  return &type metadata for TriplesQuery.ComparisonType.CodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparisonType.GreaterThanCodingKeys()
{
  return &type metadata for TriplesQuery.ComparisonType.GreaterThanCodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparisonType.GreaterThanOrEqualCodingKeys()
{
  return &type metadata for TriplesQuery.ComparisonType.GreaterThanOrEqualCodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparisonType.LessThanCodingKeys()
{
  return &type metadata for TriplesQuery.ComparisonType.LessThanCodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparisonType.LessThanOrEqualCodingKeys()
{
  return &type metadata for TriplesQuery.ComparisonType.LessThanOrEqualCodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparableColumn.CodingKeys()
{
  return &type metadata for TriplesQuery.ComparableColumn.CodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparableColumn.ObjectCodingKeys()
{
  return &type metadata for TriplesQuery.ComparableColumn.ObjectCodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.ComparableColumn.TimestampCodingKeys()
{
  return &type metadata for TriplesQuery.ComparableColumn.TimestampCodingKeys;
}

uint64_t _s20IntelligencePlatform12TriplesQueryV9MatchTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE8B4DC8 + 4 * byte_1AE96B967[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE8B4DFC + 4 * byte_1AE96B962[v4]))();
}

uint64_t sub_1AE8B4DFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8B4E04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8B4E0CLL);
  return result;
}

uint64_t sub_1AE8B4E18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8B4E20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE8B4E24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8B4E2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TriplesQuery.MatchType.CodingKeys()
{
  return &type metadata for TriplesQuery.MatchType.CodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.MatchType.MatchesCodingKeys()
{
  return &type metadata for TriplesQuery.MatchType.MatchesCodingKeys;
}

ValueMetadata *type metadata accessor for TriplesQuery.MatchType.DoesNotMatchCodingKeys()
{
  return &type metadata for TriplesQuery.MatchType.DoesNotMatchCodingKeys;
}

uint64_t storeEnumTagSinglePayload for TriplesQuery.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE8B4EA8 + 4 * byte_1AE96B96C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE8B4EC8 + 4 * byte_1AE96B971[v4]))();
}

_BYTE *sub_1AE8B4EA8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE8B4EC8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE8B4ED0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE8B4ED8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE8B4EE0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE8B4EE8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TriplesQuery.CodingKeys()
{
  return &type metadata for TriplesQuery.CodingKeys;
}

unint64_t sub_1AE8B4F08()
{
  unint64_t result;

  result = qword_1EEDA5728;
  if (!qword_1EEDA5728)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C0D8, &type metadata for TriplesQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5728);
  }
  return result;
}

unint64_t sub_1AE8B4F48()
{
  unint64_t result;

  result = qword_1EEDA5730;
  if (!qword_1EEDA5730)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C230, &type metadata for TriplesQuery.MatchType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5730);
  }
  return result;
}

unint64_t sub_1AE8B4F88()
{
  unint64_t result;

  result = qword_1EEDA5738;
  if (!qword_1EEDA5738)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C388, &type metadata for TriplesQuery.ComparableColumn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5738);
  }
  return result;
}

unint64_t sub_1AE8B4FC8()
{
  unint64_t result;

  result = qword_1EEDA5740;
  if (!qword_1EEDA5740)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C580, &type metadata for TriplesQuery.ComparisonType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5740);
  }
  return result;
}

unint64_t sub_1AE8B5008()
{
  unint64_t result;

  result = qword_1EEDA5748;
  if (!qword_1EEDA5748)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C4A0, &type metadata for TriplesQuery.ComparisonType.GreaterThanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5748);
  }
  return result;
}

unint64_t sub_1AE8B5048()
{
  unint64_t result;

  result = qword_1EEDA5750;
  if (!qword_1EEDA5750)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C4C8, &type metadata for TriplesQuery.ComparisonType.GreaterThanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5750);
  }
  return result;
}

unint64_t sub_1AE8B5088()
{
  unint64_t result;

  result = qword_1EEDA5758;
  if (!qword_1EEDA5758)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C450, &type metadata for TriplesQuery.ComparisonType.GreaterThanOrEqualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5758);
  }
  return result;
}

unint64_t sub_1AE8B50C8()
{
  unint64_t result;

  result = qword_1EEDA5760;
  if (!qword_1EEDA5760)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C478, &type metadata for TriplesQuery.ComparisonType.GreaterThanOrEqualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5760);
  }
  return result;
}

unint64_t sub_1AE8B5108()
{
  unint64_t result;

  result = qword_1EEDA5768;
  if (!qword_1EEDA5768)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C400, &type metadata for TriplesQuery.ComparisonType.LessThanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5768);
  }
  return result;
}

unint64_t sub_1AE8B5148()
{
  unint64_t result;

  result = qword_1EEDA5770;
  if (!qword_1EEDA5770)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C428, &type metadata for TriplesQuery.ComparisonType.LessThanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5770);
  }
  return result;
}

unint64_t sub_1AE8B5188()
{
  unint64_t result;

  result = qword_1EEDA5778;
  if (!qword_1EEDA5778)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C3B0, &type metadata for TriplesQuery.ComparisonType.LessThanOrEqualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5778);
  }
  return result;
}

unint64_t sub_1AE8B51C8()
{
  unint64_t result;

  result = qword_1EEDA5780;
  if (!qword_1EEDA5780)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C3D8, &type metadata for TriplesQuery.ComparisonType.LessThanOrEqualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5780);
  }
  return result;
}

unint64_t sub_1AE8B5208()
{
  unint64_t result;

  result = qword_1EEDA5788;
  if (!qword_1EEDA5788)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C4F0, &type metadata for TriplesQuery.ComparisonType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5788);
  }
  return result;
}

unint64_t sub_1AE8B5248()
{
  unint64_t result;

  result = qword_1EEDA5790;
  if (!qword_1EEDA5790)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C518, &type metadata for TriplesQuery.ComparisonType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5790);
  }
  return result;
}

unint64_t sub_1AE8B5288()
{
  unint64_t result;

  result = qword_1EEDA5798;
  if (!qword_1EEDA5798)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C2A8, &type metadata for TriplesQuery.ComparableColumn.ObjectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5798);
  }
  return result;
}

unint64_t sub_1AE8B52C8()
{
  unint64_t result;

  result = qword_1EEDA57A0;
  if (!qword_1EEDA57A0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C2D0, &type metadata for TriplesQuery.ComparableColumn.ObjectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA57A0);
  }
  return result;
}

unint64_t sub_1AE8B5308()
{
  unint64_t result;

  result = qword_1EEDA57A8;
  if (!qword_1EEDA57A8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C258, &type metadata for TriplesQuery.ComparableColumn.TimestampCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA57A8);
  }
  return result;
}

unint64_t sub_1AE8B5348()
{
  unint64_t result;

  result = qword_1EEDA57B0;
  if (!qword_1EEDA57B0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C280, &type metadata for TriplesQuery.ComparableColumn.TimestampCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA57B0);
  }
  return result;
}

unint64_t sub_1AE8B5388()
{
  unint64_t result;

  result = qword_1EEDA57B8;
  if (!qword_1EEDA57B8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C2F8, &type metadata for TriplesQuery.ComparableColumn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA57B8);
  }
  return result;
}

unint64_t sub_1AE8B53C8()
{
  unint64_t result;

  result = qword_1EEDA57C0;
  if (!qword_1EEDA57C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C320, &type metadata for TriplesQuery.ComparableColumn.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA57C0);
  }
  return result;
}

unint64_t sub_1AE8B5408()
{
  unint64_t result;

  result = qword_1EED98DF8;
  if (!qword_1EED98DF8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C150, &type metadata for TriplesQuery.MatchType.MatchesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98DF8);
  }
  return result;
}

unint64_t sub_1AE8B5448()
{
  unint64_t result;

  result = qword_1EED98DF0;
  if (!qword_1EED98DF0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C178, &type metadata for TriplesQuery.MatchType.MatchesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98DF0);
  }
  return result;
}

unint64_t sub_1AE8B5488()
{
  unint64_t result;

  result = qword_1EED98DC8;
  if (!qword_1EED98DC8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C100, &type metadata for TriplesQuery.MatchType.DoesNotMatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98DC8);
  }
  return result;
}

unint64_t sub_1AE8B54C8()
{
  unint64_t result;

  result = qword_1EED98DC0;
  if (!qword_1EED98DC0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C128, &type metadata for TriplesQuery.MatchType.DoesNotMatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98DC0);
  }
  return result;
}

unint64_t sub_1AE8B5508()
{
  unint64_t result;

  result = qword_1EED98DE0;
  if (!qword_1EED98DE0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C1A0, &type metadata for TriplesQuery.MatchType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98DE0);
  }
  return result;
}

unint64_t sub_1AE8B5548()
{
  unint64_t result;

  result = qword_1EED98DD8;
  if (!qword_1EED98DD8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C1C8, &type metadata for TriplesQuery.MatchType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98DD8);
  }
  return result;
}

unint64_t sub_1AE8B5588()
{
  unint64_t result;

  result = qword_1EED98BD0;
  if (!qword_1EED98BD0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C048, &type metadata for TriplesQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98BD0);
  }
  return result;
}

unint64_t sub_1AE8B55C8()
{
  unint64_t result;

  result = qword_1EED98BC8;
  if (!qword_1EED98BC8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96C070, &type metadata for TriplesQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98BC8);
  }
  return result;
}

unint64_t sub_1AE8B5604()
{
  unint64_t result;

  result = qword_1EEDA57C8;
  if (!qword_1EEDA57C8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesQuery.FullTextSearchType, &type metadata for TriplesQuery.FullTextSearchType);
    atomic_store(result, (unint64_t *)&qword_1EEDA57C8);
  }
  return result;
}

uint64_t sub_1AE8B5648()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = v0;
  return 1;
}

uint64_t sub_1AE8B5670()
{
  return sub_1AE92697C();
}

uint64_t sub_1AE8B5690()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8B56A4()
{
  return sub_1AE926F4C();
}

uint64_t sub_1AE8B56B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 128));
}

uint64_t sub_1AE8B56C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_1AE8B56F4()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_1AE8B5714()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_1AE8B4530();
}

unint64_t sub_1AE8B5720()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_1AE8B45A8();
}

unint64_t sub_1AE8B572C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1AE8B43C8();
}

unint64_t sub_1AE8B5738()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1AE8B447C();
}

uint64_t sub_1AE8B5744(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1AE522658();
    v6 = v15;
    v7 = (_QWORD *)(a1 + 32);
    v8 = MEMORY[0x1E0D239D8];
    do
    {
      sub_1AE4F9858(v7, v7[3]);
      v13 = sub_1AE924A80();
      v14 = v8;
      sub_1AE52F6A8((uint64_t *)&v12);
      if ((a3 & 1) != 0)
        sub_1AE9250BC();
      else
        sub_1AE9250B0();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v15 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1AE522658();
        v6 = v15;
      }
      v10 = *(_QWORD *)(v6 + 16);
      if (v10 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1AE522658();
        v6 = v15;
      }
      *(_QWORD *)(v6 + 16) = v10 + 1;
      sub_1AE50AF58(&v12, v6 + 40 * v10 + 32);
      v7 += 5;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v6;
}

uint64_t TriplesSort.sqlOrdering.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(v0 + 8);
  v2 = swift_bridgeObjectRetain();
  return sub_1AE8B5744(v2, v2, v1);
}

uint64_t TriplesSort.init(columns:direction:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  v3 = *a2;
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v3;
  return result;
}

BOOL static TriplesSort.SortDirection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t TriplesSort.SortDirection.hash(into:)()
{
  return sub_1AE926ED4();
}

uint64_t TriplesSort.SortDirection.hashValue.getter()
{
  sub_1AE926EC8();
  sub_1AE926ED4();
  return sub_1AE926F10();
}

uint64_t TriplesSort.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  sub_1AE92691C();
  swift_bridgeObjectRelease();
  sub_1AE925E90();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  swift_bridgeObjectRetain();
  v2 = sub_1AE501548((uint64_t *)&unk_1EEDA4860);
  MEMORY[0x1AF453400](v1, v2);
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  swift_bridgeObjectRelease();
  sub_1AE925F74();
  return 0x73656C706972543CLL;
}

unint64_t sub_1AE8B5AB8()
{
  unint64_t result;

  result = qword_1EEDA57D0;
  if (!qword_1EEDA57D0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for TriplesSort.SortDirection, &type metadata for TriplesSort.SortDirection);
    atomic_store(result, (unint64_t *)&qword_1EEDA57D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for TriplesSort()
{
  return &type metadata for TriplesSort;
}

uint64_t storeEnumTagSinglePayload for TriplesSort.SortDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE8B5B50 + 4 * byte_1AE96C975[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE8B5B84 + 4 * byte_1AE96C970[v4]))();
}

uint64_t sub_1AE8B5B84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8B5B8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8B5B94);
  return result;
}

uint64_t sub_1AE8B5BA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8B5BA8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE8B5BAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8B5BB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TriplesSort.SortDirection()
{
  return &type metadata for TriplesSort.SortDirection;
}

ValueMetadata *type metadata accessor for TriplesIndexHandler()
{
  return &type metadata for TriplesIndexHandler;
}

uint64_t sub_1AE8B5BE0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *, _QWORD *, uint64_t, uint64_t);
  unsigned __int8 v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v13 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a2 + 96);
  v16 = *(_BYTE *)(a2 + 104);
  v56 = *(_QWORD *)(a2 + 48);
  v38 = v6;
  v39 = v8;
  v36 = v13;
  v37 = v11;
  if ((v16 & 0x10) != 0)
  {
    v34 = v4;
    sub_1AE92691C();
    sub_1AE925F74();
    v42 = v34;
    v43 = v5;
    v44 = v38;
    v45 = v7;
    v46 = v39;
    v47 = v9;
    v48 = v56;
    v49 = v10;
    v50 = v12;
    v51 = v37;
    v52 = v14;
    v53 = v36;
    v54 = v15;
    v55 = v16;
    sub_1AE926A48();
LABEL_6:
    sub_1AE580FEC();
    swift_allocError();
    *(_QWORD *)v25 = 0;
    *(_QWORD *)(v25 + 8) = 0xE000000000000000;
    *(_BYTE *)(v25 + 16) = 1;
    return swift_willThrow();
  }
  else
  {
    v28 = v16;
    v30 = v12;
    v31 = v5;
    v17 = v4;
    v32 = v7;
    v33 = v10;
    v18 = *a1;
    v19 = *((_QWORD *)a1 + 1);
    sub_1AE501548(&qword_1ED30EDF8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AE934250;
    *(_QWORD *)(inited + 56) = &type metadata for ExtendedTripleColumn;
    *(_QWORD *)(inited + 64) = sub_1AE66888C();
    *(_BYTE *)(inited + 32) = 0;
    switch(v18)
    {
      case 0:
      case 6:
        v21 = v3[3];
        v26 = v3[4];
        sub_1AE4F9858(v3, v21);
        v42 = v17;
        v43 = v31;
        v44 = v38;
        v45 = v32;
        v46 = v39;
        v47 = v9;
        v48 = v56;
        v49 = v33;
        v50 = v30;
        v51 = v37;
        v52 = v14;
        v53 = v36;
        v54 = v15;
        v55 = v28;
        v40[0] = v19 & ~(v19 >> 63);
        v40[1] = (unint64_t)v19 >> 63;
        v40[2] = inited;
        v41 = 1;
        v27 = *(void (**)(uint64_t *, _QWORD *, uint64_t, uint64_t))(v26 + 40);
        sub_1AE526458(v17, v31, v38, v32, v39, v9, v56, v33, v30, v37, v14, v36, v15, v28);
        v27(&v42, v40, v21, v26);
        swift_bridgeObjectRelease();
        result = sub_1AE583000(v17, v31, v38, v32, v39, v9, v56, v33, v30, v37, v14, v36, v15, v28);
        if (!v35)
        {
          swift_getAssociatedTypeWitness();
          sub_1AE501548(&qword_1EED94888);
          v23 = sub_1AE926A3C();
          swift_bridgeObjectRelease();
          v24 = sub_1AE8B5FDC(v23);
          result = swift_bridgeObjectRelease();
          a3[1] = 0;
          a3[2] = 0;
          *a3 = v24;
        }
        break;
      case 2:
      case 5:
        swift_setDeallocating();
        sub_1AE85EB04();
        result = sub_1AE8B5FDC(MEMORY[0x1E0DEE9D8]);
        a3[1] = 0;
        a3[2] = 0;
        *a3 = result;
        break;
      default:
        swift_setDeallocating();
        sub_1AE85EB04();
        sub_1AE92691C();
        sub_1AE925F74();
        sub_1AE7988D8(v18);
        goto LABEL_6;
    }
  }
  return result;
}

uint64_t sub_1AE8B5FDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t result;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD v129[3];
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD v139[3];
  uint64_t v140;
  uint64_t v141;

  v113 = sub_1AE925C98();
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
LABEL_40:
    swift_bridgeObjectRetain();
    sub_1AE58F940();
    v85 = v84;
    swift_bridgeObjectRelease_n();
    return v85;
  }
  v3 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1AE57C238(v3, (uint64_t)v139);
    sub_1AE50A858();
    sub_1AE500858();
    v5 = v131;
    v4 = v132;
    swift_bridgeObjectRelease();
    sub_1AE4F6648();
    v6 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0)
      v6 = v5 & 0xFFFFFFFFFFFFLL;
    v108 = v3;
    if (v6 && (sub_1AE4F9858(v139, v140), sub_1AE500858(), v131))
    {
      sub_1AE4F9804();
      sub_1AE500858();
      v7 = EntityIdentifier.stringValue.getter();
      v9 = v8;
      v11 = v140;
      v10 = v141;
      sub_1AE4F9858(v139, v140);
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v10 + 24) + 16))(&v118, v11);
      v12 = v118;
      v13 = v119;
      swift_bridgeObjectRelease();
      v15 = v140;
      v14 = v141;
      sub_1AE4F9858(v139, v140);
      (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v14 + 24) + 24))(v129, v15);
      v131 = 3828082;
      v132 = 0xE300000000000000;
      v130 = v129[0];
      sub_1AE926D18();
      sub_1AE925F74();
      sub_1AE4F6728();
      KnosisInternalFact.init(sid:pid:oid:)(v7, v9, v12, v13, v131, v132, &v131);
      v17 = v131;
      v16 = v132;
      v18 = v133;
      v19 = v134;
      v20 = *((_QWORD *)&v135 + 1);
      v103 = *((_QWORD *)&v136 + 1);
      v106 = *((_QWORD *)&v133 + 1);
      v97 = v137;
      v115 = v138;
      v109 = v135;
      v111 = v136;
      if (*(_QWORD *)(v113 + 16))
      {
        swift_bridgeObjectRetain_n();
        sub_1AE4FC11C();
        v22 = v21;
        sub_1AE4F6728();
        if ((v22 & 1) != 0)
        {
          sub_1AE50A858();
          sub_1AE500858();
          v104 = v129[0];
          v107 = v129[1];
          swift_bridgeObjectRelease();
          v100 = sub_1AE5012C0();
          v24 = v23;
          sub_1AE4F67A4();
          swift_isUniquelyReferenced_nonNull_native();
          v130 = v113;
          sub_1AE4F67A4();
          v25 = sub_1AE4FC11C();
          if (__OFADD__(*(_QWORD *)(v113 + 16), (v26 & 1) == 0))
            goto LABEL_43;
          v27 = v25;
          v28 = v26;
          sub_1AE501548(&qword_1EEDA46A8);
          if ((sub_1AE926A54() & 1) != 0)
          {
            v29 = sub_1AE4FE2D0();
            if ((v28 & 1) != (v30 & 1))
              goto LABEL_45;
            v27 = v29;
          }
          if ((v28 & 1) == 0)
            goto LABEL_44;
          v31 = *(_QWORD *)(v130 + 56) + 88 * v27;
          v33 = *(_QWORD *)(v31 + 8);
          v34 = *(_QWORD *)(v31 + 32);
          v35 = *(_QWORD *)(v31 + 72);
          v36 = *(_QWORD *)(v31 + 80);
          v131 = *(_QWORD *)v31;
          v32 = v131;
          v132 = v33;
          v133 = *(_OWORD *)(v31 + 16);
          v134 = v34;
          v135 = *(_OWORD *)(v31 + 40);
          v136 = *(_OWORD *)(v31 + 56);
          v137 = v35;
          v138 = v36;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1AE4F6728();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          KnosisInternalFact.init(sid:pid:oid:)(v32, v33, v104, v107, v100, v24, &v118);
          v37 = v119;
          v38 = v120;
          v39 = v121;
          v114 = v122;
          v116 = v118;
          v110 = v124;
          v112 = v123;
          v101 = v126;
          v105 = v125;
          v95 = v128;
          v98 = v127;
          v40 = v138;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1AE50599C();
            v40 = v82;
          }
          v41 = *(_QWORD *)(v40 + 16);
          if (v41 >= *(_QWORD *)(v40 + 24) >> 1)
          {
            sub_1AE50599C();
            v40 = v83;
          }
          *(_QWORD *)(v40 + 16) = v41 + 1;
          v42 = (_QWORD *)(v40 + 88 * v41);
          v42[4] = v116;
          v42[5] = v37;
          v42[6] = v38;
          v42[7] = v39;
          v42[8] = v114;
          v42[9] = v112;
          v42[10] = v110;
          v42[11] = v105;
          v42[12] = v101;
          v42[13] = v98;
          v42[14] = v95;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v138 = v40;
          sub_1AE53C124(&v131, 1, &v130, v27, v17, v16);
          sub_1AE84CC68(v131, v132);
          sub_1AE4F6728();
          v113 = v130;
          sub_1AE4F6728();
          sub_1AE4F6728();
          goto LABEL_38;
        }
        sub_1AE4F6728();
      }
      v96 = v19;
      v102 = v20;
      v53 = v140;
      v52 = v141;
      sub_1AE4F9858(v139, v140);
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v52 + 24) + 32))(&v118, v53);
      v55 = v118;
      v54 = v119;
      swift_bridgeObjectRelease();
      v57 = v140;
      v56 = v141;
      sub_1AE4F9858(v139, v140);
      v58 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v56 + 24) + 40))(v57);
      v60 = v59;
      sub_1AE4F67A4();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v94 = v17;
      KnosisInternalFact.init(sid:pid:oid:)(v17, v16, v55, v54, v58, v60, &v131);
      v61 = v131;
      v62 = v132;
      v63 = v133;
      v90 = v136;
      v91 = *((_QWORD *)&v135 + 1);
      v88 = v137;
      v89 = *((_QWORD *)&v136 + 1);
      v87 = v138;
      v64 = v115;
      v92 = v135;
      v93 = v134;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE5034DC();
        v64 = v80;
      }
      v65 = *(_QWORD *)(v64 + 16);
      if (v65 >= *(_QWORD *)(v64 + 24) >> 1)
      {
        sub_1AE5034DC();
        v64 = v81;
      }
      *(_QWORD *)(v64 + 16) = v65 + 1;
      v117 = v64;
      v66 = v64 + 88 * v65;
      *(_QWORD *)(v66 + 32) = v61;
      *(_QWORD *)(v66 + 40) = v62;
      *(_OWORD *)(v66 + 48) = v63;
      *(_QWORD *)(v66 + 64) = v93;
      *(_QWORD *)(v66 + 72) = v92;
      *(_QWORD *)(v66 + 80) = v91;
      *(_QWORD *)(v66 + 88) = v90;
      *(_QWORD *)(v66 + 96) = v89;
      *(_QWORD *)(v66 + 104) = v88;
      *(_QWORD *)(v66 + 112) = v87;
      sub_1AE4F81B8();
      swift_bridgeObjectRelease();
      v45 = v96;
      v50 = v97;
      v51 = v94;
    }
    else
    {
      sub_1AE4F9804();
      sub_1AE500858();
      v43 = (v129[0] & 0x80000000000000) != 0 ? 3826797 : 3828069;
      v131 = v43;
      v132 = 0xE300000000000000;
      v118 = v129[0];
      sub_1AE926D18();
      sub_1AE925F74();
      sub_1AE4F6648();
      v44 = v131;
      v45 = v132;
      sub_1AE4F9858(v139, v140);
      sub_1AE500858();
      v47 = v131;
      v46 = v132;
      swift_bridgeObjectRelease();
      v48 = sub_1AE5012C0();
      v50 = v49;
      v106 = v44;
      v118 = v44;
      v119 = v45;
      swift_bridgeObjectRetain();
      sub_1AE4FCD64();
      sub_1AE503DD4();
      v102 = v47;
      v111 = v46;
      sub_1AE925F74();
      sub_1AE4F81B8();
      sub_1AE503DD4();
      sub_1AE4FCD64();
      sub_1AE4F81B8();
      sub_1AE503DD4();
      v103 = v48;
      sub_1AE925F74();
      sub_1AE4F81B8();
      v109 = 0;
      v51 = v118;
      v16 = v119;
      v18 = 0;
      v117 = MEMORY[0x1E0DEE9D8];
    }
    sub_1AE4F67A4();
    swift_isUniquelyReferenced_nonNull_native();
    v131 = v113;
    v67 = sub_1AE4FE2D0();
    if (__OFADD__(*(_QWORD *)(v113 + 16), (v68 & 1) == 0))
      break;
    v69 = v67;
    v70 = v68;
    sub_1AE501548(&qword_1EEDA46A8);
    if ((sub_1AE926A54() & 1) != 0)
    {
      v71 = sub_1AE4FE2D0();
      if ((v70 & 1) != (v72 & 1))
        goto LABEL_45;
      v69 = v71;
    }
    v99 = v2;
    v73 = (_QWORD *)v131;
    v113 = v131;
    if ((v70 & 1) != 0)
    {
      v74 = (uint64_t *)(*(_QWORD *)(v131 + 56) + 88 * v69);
      swift_bridgeObjectRelease();
      sub_1AE4F81B8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AE4F6648();
      *v74 = v51;
      v74[1] = v16;
      v74[2] = v18;
      v74[3] = v106;
      v74[4] = v45;
      v74[5] = v109;
      v74[6] = v102;
      v74[7] = v111;
      v74[8] = v103;
      v74[9] = v50;
      v74[10] = v117;
    }
    else
    {
      *(_QWORD *)(v131 + 8 * (v69 >> 6) + 64) |= 1 << v69;
      v75 = (uint64_t *)(v73[6] + 16 * v69);
      *v75 = v51;
      v75[1] = v16;
      v76 = (uint64_t *)(v73[7] + 88 * v69);
      *v76 = v51;
      v76[1] = v16;
      v76[2] = v18;
      v76[3] = v106;
      v76[4] = v45;
      v76[5] = v109;
      v76[6] = v102;
      v76[7] = v111;
      v76[8] = v103;
      v76[9] = v50;
      v76[10] = v117;
      v77 = v73[2];
      v78 = __OFADD__(v77, 1);
      v79 = v77 + 1;
      if (v78)
        goto LABEL_42;
      v73[2] = v79;
      sub_1AE4F67A4();
    }
    sub_1AE4F6728();
    swift_bridgeObjectRelease();
    v2 = v99;
LABEL_38:
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v139);
    v3 = v108 + 40;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE8B690C()
{
  return sub_1AE56B570();
}

uint64_t sub_1AE8B6918@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1AE8B5BE0(a1, a2, a3);
}

uint64_t sub_1AE8B692C()
{
  return sub_1AE8B690C();
}

uint64_t KTSQueryParams.init(startTime:endTime:inclusionType:distanceMinInMeters:distanceMaxInMeters:elevationGainMinInMeters:elevationGainMaxInMeters:durationMinInSeconds:durationMaxInSeconds:roadType:roadName:originId:destinationId:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, char *a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, char a18, char *a19, uint64_t a20,uint64_t a21,uint64_t *a22,uint64_t *a23)
{
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  v23 = *a5;
  v24 = *a19;
  v25 = *a22;
  v26 = *a23;
  v28 = *((_BYTE *)a22 + 8);
  v27 = *((_BYTE *)a23 + 8);
  *(_QWORD *)a9 = result;
  *(_BYTE *)(a9 + 8) = a2 & 1;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4 & 1;
  *(_BYTE *)(a9 + 25) = v23;
  *(_QWORD *)(a9 + 32) = a6;
  *(_BYTE *)(a9 + 40) = a7 & 1;
  *(_QWORD *)(a9 + 48) = a8;
  *(_BYTE *)(a9 + 56) = a10 & 1;
  *(_QWORD *)(a9 + 64) = a11;
  *(_BYTE *)(a9 + 72) = a12 & 1;
  *(_QWORD *)(a9 + 80) = a13;
  *(_BYTE *)(a9 + 88) = a14 & 1;
  *(_QWORD *)(a9 + 96) = a15;
  *(_BYTE *)(a9 + 104) = a16 & 1;
  *(_QWORD *)(a9 + 112) = a17;
  *(_BYTE *)(a9 + 120) = a18 & 1;
  *(_BYTE *)(a9 + 121) = v24;
  *(_QWORD *)(a9 + 128) = a20;
  *(_QWORD *)(a9 + 136) = a21;
  *(_QWORD *)(a9 + 144) = v25;
  *(_BYTE *)(a9 + 152) = v28;
  *(_QWORD *)(a9 + 160) = v26;
  *(_BYTE *)(a9 + 168) = v27;
  return result;
}

uint64_t static KTSQueryParams.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4;
  double v5;
  char v6;
  int v7;
  double v8;
  char v9;
  double v10;
  char v11;
  double v12;
  char v13;
  double v14;
  char v15;
  double v16;
  double v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  int v24;
  double v25;
  int v26;
  int v27;
  double v28;
  int v29;
  double v30;
  int v31;
  double v32;
  int v33;
  double v34;
  int v35;
  double v36;
  int v37;
  double v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v56;
  char v57;
  uint64_t v58;
  char v59;
  int v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t result;
  char v65;
  char v66;
  double v67;
  double v68;
  double v69;
  char v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  int v84;
  char v85;

  v4 = *(_BYTE *)(a1 + 8);
  v5 = *(double *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  v7 = *(unsigned __int8 *)(a1 + 25);
  v8 = *(double *)(a1 + 32);
  v9 = *(_BYTE *)(a1 + 40);
  v10 = *(double *)(a1 + 48);
  v11 = *(_BYTE *)(a1 + 56);
  v12 = *(double *)(a1 + 64);
  v13 = *(_BYTE *)(a1 + 72);
  v14 = *(double *)(a1 + 80);
  v15 = *(_BYTE *)(a1 + 88);
  v16 = *(double *)(a1 + 96);
  v85 = *(_BYTE *)(a1 + 104);
  v17 = *(double *)(a1 + 112);
  v18 = *(_BYTE *)(a1 + 120);
  v84 = *(unsigned __int8 *)(a1 + 121);
  v19 = *(_QWORD *)(a1 + 128);
  v20 = *(_QWORD *)(a1 + 136);
  v21 = *(_QWORD *)(a1 + 144);
  v22 = *(_BYTE *)(a1 + 152);
  v81 = *(_QWORD *)(a1 + 160);
  v23 = *(_BYTE *)(a1 + 168);
  v24 = *(unsigned __int8 *)(a2 + 8);
  v25 = *(double *)(a2 + 16);
  v26 = *(unsigned __int8 *)(a2 + 24);
  v27 = *(unsigned __int8 *)(a2 + 25);
  v28 = *(double *)(a2 + 32);
  v29 = *(unsigned __int8 *)(a2 + 40);
  v30 = *(double *)(a2 + 48);
  v31 = *(unsigned __int8 *)(a2 + 56);
  v32 = *(double *)(a2 + 64);
  v33 = *(unsigned __int8 *)(a2 + 72);
  v34 = *(double *)(a2 + 80);
  v35 = *(unsigned __int8 *)(a2 + 88);
  v36 = *(double *)(a2 + 96);
  v37 = *(unsigned __int8 *)(a2 + 104);
  v38 = *(double *)(a2 + 112);
  v39 = *(unsigned __int8 *)(a2 + 120);
  v83 = *(unsigned __int8 *)(a2 + 121);
  v40 = *(_QWORD *)(a2 + 136);
  v82 = *(_QWORD *)(a2 + 128);
  v41 = *(_QWORD *)(a2 + 144);
  v42 = *(unsigned __int8 *)(a2 + 152);
  v43 = *(_QWORD *)(a2 + 160);
  v44 = *(_BYTE *)(a2 + 168);
  if ((v4 & 1) != 0)
  {
    if (!v24)
      return 0;
  }
  else
  {
    if (*(double *)a1 == *(double *)a2)
      v45 = v24;
    else
      v45 = 1;
    if ((v45 & 1) != 0)
      return 0;
  }
  if ((v6 & 1) != 0)
  {
    if (!v26)
      return 0;
  }
  else
  {
    if (v5 == v25)
      v46 = v26;
    else
      v46 = 1;
    if ((v46 & 1) != 0)
      return 0;
  }
  if (v7 == 8)
  {
    if (v27 != 8)
      return 0;
  }
  else
  {
    if (v27 == 8)
      return 0;
    v80 = v23;
    v79 = v21;
    v77 = *(_BYTE *)(a2 + 168);
    v78 = v22;
    v76 = v19;
    v75 = v20;
    v74 = *(unsigned __int8 *)(a2 + 152);
    v72 = *(_QWORD *)(a2 + 136);
    v73 = *(_QWORD *)(a2 + 144);
    v71 = v17;
    v70 = v18;
    v68 = v14;
    v69 = v16;
    v67 = *(double *)(a2 + 112);
    sub_1AE5118DC(v7);
    v38 = v67;
    v14 = v68;
    v16 = v69;
    v18 = v70;
    v17 = v71;
    v40 = v72;
    v41 = v73;
    v42 = v74;
    v20 = v75;
    v19 = v76;
    v44 = v77;
    v22 = v78;
    v21 = v79;
    v23 = v80;
    if ((v47 & 1) == 0)
      return 0;
  }
  if ((v9 & 1) != 0)
  {
    if (!v29)
      return 0;
  }
  else
  {
    if (v8 == v28)
      v48 = v29;
    else
      v48 = 1;
    if ((v48 & 1) != 0)
      return 0;
  }
  if ((v11 & 1) != 0)
  {
    if (!v31)
      return 0;
  }
  else
  {
    if (v10 == v30)
      v49 = v31;
    else
      v49 = 1;
    if ((v49 & 1) != 0)
      return 0;
  }
  if ((v13 & 1) != 0)
  {
    if (!v33)
      return 0;
  }
  else
  {
    if (v12 == v32)
      v50 = v33;
    else
      v50 = 1;
    if ((v50 & 1) != 0)
      return 0;
  }
  if ((v15 & 1) != 0)
  {
    if (!v35)
      return 0;
  }
  else
  {
    if (v14 == v34)
      v51 = v35;
    else
      v51 = 1;
    if ((v51 & 1) != 0)
      return 0;
  }
  if ((v85 & 1) != 0)
  {
    if (!v37)
      return 0;
  }
  else
  {
    if (v16 == v36)
      v52 = v37;
    else
      v52 = 1;
    if ((v52 & 1) != 0)
      return 0;
  }
  if ((v18 & 1) != 0)
  {
    if (!v39)
      return 0;
  }
  else
  {
    if (v17 == v38)
      v53 = v39;
    else
      v53 = 1;
    if ((v53 & 1) != 0)
      return 0;
  }
  if (v84 == 5)
  {
    if (v83 != 5)
      return 0;
  }
  else if (v83 == 5 || v84 != v83)
  {
    return 0;
  }
  if (!v20)
  {
    if (!v40)
      goto LABEL_79;
    return 0;
  }
  if (!v40)
    return 0;
  if (v19 == v82 && v20 == v40)
    goto LABEL_79;
  v56 = v44;
  v57 = v23;
  v58 = v21;
  v59 = v22;
  v60 = v42;
  v61 = v41;
  v62 = sub_1AE926D60();
  v41 = v61;
  v42 = v60;
  v44 = v56;
  v22 = v59;
  v21 = v58;
  v23 = v57;
  v63 = v62;
  result = 0;
  if ((v63 & 1) != 0)
  {
LABEL_79:
    if ((v22 & 1) != 0)
    {
      if (!v42)
        return 0;
    }
    else
    {
      if (v21 == v41)
        v65 = v42;
      else
        v65 = 1;
      if ((v65 & 1) != 0)
        return 0;
    }
    if ((v23 & 1) != 0)
    {
      if ((v44 & 1) == 0)
        return 0;
    }
    else
    {
      if (v81 == v43)
        v66 = v44;
      else
        v66 = 1;
      if ((v66 & 1) != 0)
        return 0;
    }
    return 1;
  }
  return result;
}

IntelligencePlatform::InclusionType_optional __swiftcall InclusionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  IntelligencePlatform::InclusionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1AE926B44();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t InclusionType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AE8B6E54 + 4 * byte_1AE96CA80[*v0]))(0xD000000000000011, 0x80000001AE97BF00);
}

unint64_t sub_1AE8B6E54()
{
  return 0xD000000000000013;
}

uint64_t sub_1AE8B6EA8@<X0>(uint64_t a1@<X8>)
{
  return a1 - 3;
}

void sub_1AE8B6ECC(char *a1)
{
  sub_1AE5118DC(*a1);
}

uint64_t sub_1AE8B6ED8()
{
  sub_1AE8BB7BC();
  return sub_1AE926190();
}

uint64_t sub_1AE8B6F34()
{
  sub_1AE8BB7BC();
  return sub_1AE926148();
}

void sub_1AE8B6F80()
{
  unsigned __int8 *v0;

  sub_1AE512B24(*v0);
}

void sub_1AE8B6F88(uint64_t a1)
{
  char *v1;

  sub_1AE5E9488(a1, *v1);
}

void sub_1AE8B6F90(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE5500CC(a1, *v1);
}

IntelligencePlatform::InclusionType_optional sub_1AE8B6F98(Swift::String *a1)
{
  return InclusionType.init(rawValue:)(*a1);
}

uint64_t sub_1AE8B6FA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = InclusionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t KTSQueryParams.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  v2 = v1;
  v4 = *(unsigned __int8 *)(v2 + 24);
  v16 = *(unsigned __int8 *)(v2 + 25);
  v5 = *(unsigned __int8 *)(v2 + 121);
  v6 = *(_QWORD *)(v2 + 136);
  v7 = *(unsigned __int8 *)(v2 + 152);
  v8 = *(unsigned __int8 *)(v2 + 168);
  v22 = *(unsigned __int8 *)(v2 + 120);
  v14 = *(_QWORD *)(v2 + 80);
  v15 = *(_QWORD *)(v2 + 96);
  v20 = *(unsigned __int8 *)(v2 + 88);
  v21 = *(unsigned __int8 *)(v2 + 104);
  v12 = *(_QWORD *)(v2 + 48);
  v13 = *(_QWORD *)(v2 + 64);
  v18 = *(unsigned __int8 *)(v2 + 56);
  v19 = *(unsigned __int8 *)(v2 + 72);
  v10 = *(_QWORD *)(v2 + 16);
  v11 = *(_QWORD *)(v2 + 32);
  v17 = *(unsigned __int8 *)(v2 + 40);
  if (*(_BYTE *)(v2 + 8) == 1)
  {
    sub_1AE502144();
    if (!v4)
    {
LABEL_3:
      sub_1AE4FD764();
      sub_1AE506F4C(v10);
      sub_1AE926EF8();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1AE4FD764();
    sub_1AE926EF8();
    if (!v4)
      goto LABEL_3;
  }
  sub_1AE502144();
LABEL_6:
  if (v16 == 8)
  {
    sub_1AE502144();
  }
  else
  {
    sub_1AE4FD764();
    sub_1AE5E9488(a1, v16);
  }
  if (v17)
  {
    sub_1AE502144();
  }
  else
  {
    sub_1AE4FD764();
    sub_1AE506F4C(v11);
    sub_1AE926EF8();
  }
  if (v18)
  {
    sub_1AE502144();
  }
  else
  {
    sub_1AE4FD764();
    sub_1AE506F4C(v12);
    sub_1AE926EF8();
  }
  if (v19)
  {
    sub_1AE502144();
  }
  else
  {
    sub_1AE4FD764();
    sub_1AE506F4C(v13);
    sub_1AE926EF8();
  }
  if (v20)
  {
    sub_1AE502144();
  }
  else
  {
    sub_1AE4FD764();
    sub_1AE506F4C(v14);
    sub_1AE926EF8();
  }
  if (v21)
  {
    sub_1AE502144();
  }
  else
  {
    sub_1AE4FD764();
    sub_1AE506F4C(v15);
    sub_1AE926EF8();
  }
  if (v22)
  {
    sub_1AE502144();
  }
  else
  {
    sub_1AE4FD764();
    sub_1AE926EF8();
  }
  if (v5 == 5)
  {
    sub_1AE502144();
    if (v6)
      goto LABEL_29;
  }
  else
  {
    sub_1AE4FD764();
    sub_1AE926EEC();
    if (v6)
    {
LABEL_29:
      sub_1AE4FD764();
      swift_bridgeObjectRetain();
      sub_1AE925F14();
      swift_bridgeObjectRelease();
      if (v7)
        goto LABEL_30;
LABEL_34:
      sub_1AE4FD764();
      sub_1AE926EF8();
      if (!v8)
        goto LABEL_31;
      return sub_1AE502144();
    }
  }
  sub_1AE502144();
  if (!v7)
    goto LABEL_34;
LABEL_30:
  sub_1AE502144();
  if (!v8)
  {
LABEL_31:
    sub_1AE4FD764();
    return sub_1AE926EF8();
  }
  return sub_1AE502144();
}

uint64_t sub_1AE8B7268(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656D6954646E65 && a2 == 0xE700000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6F6973756C636E69 && a2 == 0xED0000657079546ELL;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001AE98A8F0 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001AE98A910 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000018 && a2 == 0x80000001AE98A930 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0xD000000000000018 && a2 == 0x80000001AE98A950 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000001AE98A970 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000001AE98A990 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 8;
      }
      else
      {
        v8 = a1 == 0x6570795464616F72 && a2 == 0xE800000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 9;
        }
        else
        {
          v9 = a1 == 0x656D614E64616F72 && a2 == 0xE800000000000000;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else
          {
            v10 = a1 == 0x64496E696769726FLL && a2 == 0xE800000000000000;
            if (v10 || (sub_1AE926D60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 11;
            }
            else if (a1 == 0x74616E6974736564 && a2 == 0xED000064496E6F69)
            {
              swift_bridgeObjectRelease();
              return 12;
            }
            else
            {
              v12 = sub_1AE926D60();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 12;
              else
                return 13;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AE8B7784(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE8B77BC + 4 * byte_1AE96CA88[a1]))(0x6D69547472617473, 0xE900000000000065);
}

uint64_t sub_1AE8B77BC()
{
  return 0x656D6954646E65;
}

uint64_t sub_1AE8B77D4()
{
  return 0x6F6973756C636E69;
}

unint64_t sub_1AE8B77F8()
{
  return 0xD000000000000013;
}

unint64_t sub_1AE8B7820()
{
  return 0xD000000000000018;
}

uint64_t sub_1AE8B7888()
{
  return 0x6570795464616F72;
}

uint64_t sub_1AE8B78A0()
{
  return 0x656D614E64616F72;
}

uint64_t sub_1AE8B78B8()
{
  return 0x64496E696769726FLL;
}

uint64_t sub_1AE8B78D0()
{
  return 0x74616E6974736564;
}

uint64_t sub_1AE8B78F4()
{
  unsigned __int8 *v0;

  return sub_1AE8B7784(*v0);
}

uint64_t sub_1AE8B78FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8B7268(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8B7920()
{
  sub_1AE8B7CC8();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B7948()
{
  sub_1AE8B7CC8();
  return sub_1AE926FA0();
}

void KTSQueryParams.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  sub_1AE4F67EC();
  v2 = v1;
  v3 = sub_1AE501548(&qword_1EEDA57D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F9024();
  v5 = v2[3];
  v6 = v2;
  v8 = v7;
  sub_1AE4F9858(v6, v5);
  sub_1AE8B7CC8();
  sub_1AE926F4C();
  sub_1AE926C58();
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
  }
  else
  {
    sub_1AE509CEC(1);
    sub_1AE503DE4();
    sub_1AE8B7D04();
    sub_1AE5078A0();
    sub_1AE509CEC(3);
    sub_1AE503DE4();
    sub_1AE509CEC(4);
    sub_1AE503DE4();
    sub_1AE509CEC(5);
    sub_1AE503DE4();
    sub_1AE509CEC(6);
    sub_1AE503DE4();
    sub_1AE509CEC(7);
    sub_1AE503DE4();
    sub_1AE509CEC(8);
    sub_1AE503DE4();
    sub_1AE7CBEE8();
    sub_1AE5078A0();
    sub_1AE509CEC(10);
    sub_1AE926C40();
    sub_1AE52A494();
    sub_1AE5089D0();
    sub_1AE5089D0();
    (*(void (**)(uint64_t, _QWORD))(v4 + 8))(v8, 0);
  }
  sub_1AE4F667C();
}

unint64_t sub_1AE8B7CC8()
{
  unint64_t result;

  result = qword_1EEDA57E0;
  if (!qword_1EEDA57E0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D684, &type metadata for KTSQueryParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA57E0);
  }
  return result;
}

unint64_t sub_1AE8B7D04()
{
  unint64_t result;

  result = qword_1EEDA57E8;
  if (!qword_1EEDA57E8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for InclusionType, &type metadata for InclusionType);
    atomic_store(result, (unint64_t *)&qword_1EEDA57E8);
  }
  return result;
}

void KTSQueryParams.hashValue.getter()
{
  _BYTE v0[72];

  sub_1AE4F76E0();
  KTSQueryParams.hash(into:)((uint64_t)v0);
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void KTSQueryParams.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  int v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  _BYTE v47[7];
  uint64_t v48;
  char v49;
  char v50;
  int v51;
  __int16 v52;
  uint64_t v53;
  char v54;
  _BYTE v55[7];
  uint64_t v56;
  char v57;
  _BYTE v58[7];
  uint64_t v59;
  char v60;
  _BYTE v61[7];
  uint64_t v62;
  char v63;
  _BYTE v64[7];
  uint64_t v65;
  char v66;
  _BYTE v67[7];
  uint64_t v68;
  char v69;
  char v70;
  int v71;
  __int16 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  _BYTE v77[7];
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  char v82;
  char v83;
  _BYTE v84[7];
  char v85;
  int v86;
  __int16 v87;
  char v88;
  _BYTE v89[7];
  char v90;
  _BYTE v91[7];
  char v92;
  _BYTE v93[7];
  char v94;
  _BYTE v95[7];
  char v96;
  _BYTE v97[7];
  char v98;
  int v99;
  __int16 v100;
  char v101;
  _BYTE v102[7];
  char v103;
  uint64_t v104;
  uint64_t v105;

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  v104 = sub_1AE501548(&qword_1EEDA57F0);
  MEMORY[0x1E0C80A78](v104);
  sub_1AE50688C();
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE8B7CC8();
  sub_1AE926F34();
  if (v0)
  {
    v20 = 0;
  }
  else
  {
    v43 = v4;
    v5 = sub_1AE5012EC();
    v7 = v6;
    v42 = v5;
    v103 = v6 & 1;
    v40 = sub_1AE5012EC();
    v101 = v8 & 1;
    v9 = v8;
    sub_1AE8B83B0();
    sub_1AE5097B0();
    v39 = v9;
    v38 = sub_1AE5012EC();
    v98 = v10 & 1;
    v36 = v10;
    v37 = sub_1AE5012EC();
    v96 = v11 & 1;
    v12 = v11;
    v35 = sub_1AE5012EC();
    v34 = v12;
    v94 = v13 & 1;
    v14 = v13;
    v15 = sub_1AE5012EC();
    v31 = v16;
    v32 = v14;
    v33 = v15;
    v92 = v16 & 1;
    v17 = sub_1AE5012EC();
    v19 = v18;
    v30 = v17;
    v90 = v18 & 1;
    v29 = sub_1AE5012EC();
    v41 = v19;
    v28 = v21;
    v88 = v21 & 1;
    sub_1AE7CC8C0();
    sub_1AE5097B0();
    LOBYTE(v45) = 10;
    v27 = sub_1AE926B68();
    v23 = v22;
    LOBYTE(v81) = 11;
    v24 = sub_1AE52A458();
    swift_bridgeObjectRetain();
    sub_1AE508E2C();
    if (!v24)
    {
      v26 = v45;
      v25 = v46;
      v85 = v46;
      v80 = 12;
      sub_1AE508E2C();
      sub_1AE5092F0();
      v105 = v81;
      v83 = v82;
      v44 = v82;
      *(_QWORD *)v43 = v42;
      *(_BYTE *)(v43 + 8) = v7 & 1;
      *(_QWORD *)(v43 + 16) = v40;
      *(_BYTE *)(v43 + 24) = v39 & 1;
      *(_BYTE *)(v43 + 25) = 1;
      *(_QWORD *)(v43 + 32) = v38;
      *(_BYTE *)(v43 + 40) = v36 & 1;
      *(_QWORD *)(v43 + 48) = v37;
      *(_BYTE *)(v43 + 56) = v34 & 1;
      *(_QWORD *)(v43 + 64) = v35;
      *(_BYTE *)(v43 + 72) = v32 & 1;
      *(_QWORD *)(v43 + 80) = v33;
      *(_BYTE *)(v43 + 88) = v31 & 1;
      *(_QWORD *)(v43 + 96) = v30;
      *(_BYTE *)(v43 + 104) = v41 & 1;
      *(_QWORD *)(v43 + 112) = v29;
      *(_BYTE *)(v43 + 120) = v28 & 1;
      *(_BYTE *)(v43 + 121) = 8;
      *(_QWORD *)(v43 + 128) = v27;
      *(_QWORD *)(v43 + 136) = v23;
      *(_QWORD *)(v43 + 144) = v26;
      *(_BYTE *)(v43 + 152) = v25;
      *(_QWORD *)(v43 + 160) = v105;
      *(_BYTE *)(v43 + 168) = v44;
      sub_1AE8BB924();
      v45 = v42;
      v46 = v103;
      *(_DWORD *)v47 = *(_DWORD *)v102;
      *(_DWORD *)&v47[3] = *(_DWORD *)&v102[3];
      v48 = v40;
      v49 = v101;
      v50 = 1;
      v51 = v99;
      v52 = v100;
      v53 = v38;
      v54 = v98;
      *(_DWORD *)&v55[3] = *(_DWORD *)&v97[3];
      *(_DWORD *)v55 = *(_DWORD *)v97;
      v56 = v37;
      v57 = v96;
      *(_DWORD *)v58 = *(_DWORD *)v95;
      *(_DWORD *)&v58[3] = *(_DWORD *)&v95[3];
      v59 = v35;
      v60 = v94;
      *(_DWORD *)v61 = *(_DWORD *)v93;
      *(_DWORD *)&v61[3] = *(_DWORD *)&v93[3];
      v62 = v33;
      v63 = v92;
      *(_DWORD *)&v64[3] = *(_DWORD *)&v91[3];
      *(_DWORD *)v64 = *(_DWORD *)v91;
      v65 = v30;
      v66 = v90;
      *(_DWORD *)&v67[3] = *(_DWORD *)&v89[3];
      *(_DWORD *)v67 = *(_DWORD *)v89;
      v68 = v29;
      v69 = v88;
      v70 = 8;
      v72 = v87;
      v71 = v86;
      v73 = v27;
      v74 = v23;
      v75 = v26;
      v76 = v85;
      *(_DWORD *)&v77[3] = *(_DWORD *)&v84[3];
      *(_DWORD *)v77 = *(_DWORD *)v84;
      v78 = v105;
      v79 = v83;
      sub_1AE7F3DC0((uint64_t)&v45);
      goto LABEL_6;
    }
    sub_1AE5092F0();
    sub_1AE4F66E8();
    v20 = 1;
  }
  sub_1AE8BB924();
  if (v20)
    sub_1AE4F66E8();
LABEL_6:
  sub_1AE4F667C();
}

void sub_1AE8B8348()
{
  KTSQueryParams.init(from:)();
}

void sub_1AE8B835C()
{
  KTSQueryParams.encode(to:)();
}

uint64_t sub_1AE8B8378()
{
  _BYTE v1[72];

  sub_1AE926EC8();
  KTSQueryParams.hash(into:)((uint64_t)v1);
  return sub_1AE926F10();
}

unint64_t sub_1AE8B83B0()
{
  unint64_t result;

  result = qword_1EEDA57F8;
  if (!qword_1EEDA57F8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for InclusionType, &type metadata for InclusionType);
    atomic_store(result, (unint64_t *)&qword_1EEDA57F8);
  }
  return result;
}

void static KTSQueryConstraint.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1AE8B843C()
{
  unsigned int v0;
  double v1;
  char v2;
  double v3;
  __int16 v4;
  double v5;
  char v6;
  double v7;
  char v9;
  char v10;

  if (v0 >= 0x2000)
  {
    sub_1AE8BB874();
    goto LABEL_7;
  }
  if ((v6 & 1) != 0)
  {
    if ((v2 & 1) == 0)
      goto LABEL_7;
  }
  else if ((v2 & 1) != 0 || v7 != v3)
  {
    goto LABEL_7;
  }
  if ((v4 & 1) != 0)
  {
    if ((v0 & 1) != 0)
      goto LABEL_14;
LABEL_7:
    sub_1AE4FD7E4();
    return 0;
  }
  if ((v0 & 1) != 0 || v5 != v1)
    goto LABEL_7;
LABEL_14:
  sub_1AE5118DC(SHIBYTE(v4));
  v10 = v9;
  sub_1AE4FD7E4();
  return v10 & 1;
}

void KTSQueryConstraint.hash(into:)()
{
  __asm { BR              X10 }
}

void sub_1AE8B85E0()
{
  uint64_t v0;
  __int16 v1;
  char v2;

  sub_1AE926ED4();
  if ((v2 & 1) != 0)
  {
    sub_1AE502144();
    if ((v1 & 1) != 0)
      goto LABEL_3;
LABEL_5:
    sub_1AE4FD764();
    sub_1AE926EF8();
    goto LABEL_6;
  }
  sub_1AE4FD764();
  sub_1AE8BB8C8();
  if ((v1 & 1) == 0)
    goto LABEL_5;
LABEL_3:
  sub_1AE502144();
LABEL_6:
  sub_1AE5E9488(v0, SHIBYTE(v1));
}

uint64_t sub_1AE8B86DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x676E6152656D6974 && a2 == 0xE900000000000065;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x65636E6174736964 && a2 == 0xE800000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6F69746176656C65 && a2 == 0xED00006E6961476ELL;
      if (v7 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
        if (v8 || (sub_1AE926D60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6570795464616F72 && a2 == 0xE800000000000000;
          if (v9 || (sub_1AE926D60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x746573627573 && a2 == 0xE600000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_1AE926D60();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_1AE8B8978(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE8B89B0 + 4 * byte_1AE96CAA1[a1]))(0x676E6152656D6974, 0xE900000000000065);
}

uint64_t sub_1AE8B89B0()
{
  return 0x65636E6174736964;
}

uint64_t sub_1AE8B89C8()
{
  return 0x6F69746176656C65;
}

uint64_t sub_1AE8B89EC()
{
  return 0x6E6F697461727564;
}

uint64_t sub_1AE8B8A04()
{
  return 0x6570795464616F72;
}

uint64_t sub_1AE8B8A1C()
{
  return 0x746573627573;
}

uint64_t sub_1AE8B8A30(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001AE98A8F0 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AE98A910 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6973756C636E69 && a2 == 0xED0000657079546ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1AE8B8B98(unsigned __int8 a1)
{
  uint64_t result;

  result = 0xD000000000000013;
  if (a1 >= 2u)
    return 0x6F6973756C636E69;
  return result;
}

uint64_t sub_1AE8B8C00(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001AE98A970 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AE98A990 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6973756C636E69 && a2 == 0xED0000657079546ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1AE8B8D68(unsigned __int8 a1)
{
  uint64_t result;

  result = 0xD000000000000014;
  if (a1 >= 2u)
    return 0x6F6973756C636E69;
  return result;
}

uint64_t sub_1AE8B8DD0(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001AE98A930 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AE98A950 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6973756C636E69 && a2 == 0xED0000657079546ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1AE8B8F38(unsigned __int8 a1)
{
  uint64_t result;

  result = 0xD000000000000018;
  if (a1 >= 2u)
    return 0x6F6973756C636E69;
  return result;
}

uint64_t sub_1AE8B8FA0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6570795464616F72 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE8B9024()
{
  return 0x6570795464616F72;
}

uint64_t sub_1AE8B903C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7365697469746E65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE8B90C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1AE926D60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656D6954646E65 && a2 == 0xE700000000000000;
    if (v6 || (sub_1AE926D60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6F6973756C636E69 && a2 == 0xED0000657079546ELL)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1AE926D60();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AE8B923C(char a1)
{
  if (!a1)
    return 0x6D69547472617473;
  if (a1 == 1)
    return 0x656D6954646E65;
  return 0x6F6973756C636E69;
}

uint64_t sub_1AE8B92A4()
{
  unsigned __int8 *v0;

  return sub_1AE8B8978(*v0);
}

uint64_t sub_1AE8B92AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8B86DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8B92D0()
{
  sub_1AE8BA548();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B92F8()
{
  sub_1AE8BA548();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8B9320()
{
  unsigned __int8 *v0;

  return sub_1AE8B8B98(*v0);
}

uint64_t sub_1AE8B9328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8B8A30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8B934C()
{
  sub_1AE8BA674();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B9374()
{
  sub_1AE8BA674();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8B939C()
{
  unsigned __int8 *v0;

  return sub_1AE8B8D68(*v0);
}

uint64_t sub_1AE8B93A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8B8C00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8B93C8()
{
  sub_1AE8BA5FC();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B93F0()
{
  sub_1AE8BA5FC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8B9418()
{
  unsigned __int8 *v0;

  return sub_1AE8B8F38(*v0);
}

uint64_t sub_1AE8B9420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8B8DD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8B9444()
{
  sub_1AE8BA638();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B946C()
{
  sub_1AE8BA638();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8B9498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8B8FA0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE8B94C0()
{
  sub_1AE8BA5C0();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B94E8()
{
  sub_1AE8BA5C0();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8B9510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8B903C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE8B9538()
{
  sub_1AE8BA584();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B9560()
{
  sub_1AE8BA584();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8B9588()
{
  char *v0;

  return sub_1AE8B923C(*v0);
}

uint64_t sub_1AE8B9590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8B90C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AE8B95B4()
{
  sub_1AE8BA6B0();
  return sub_1AE926F94();
}

uint64_t sub_1AE8B95DC()
{
  sub_1AE8BA6B0();
  return sub_1AE926FA0();
}

void KTSQueryConstraint.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  sub_1AE4F67EC();
  v2 = v1;
  sub_1AE501548(&qword_1EEDA5800);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5808);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5810);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5818);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5820);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F666C();
  sub_1AE501548(&qword_1EEDA5828);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F666C();
  sub_1AE501548(&qword_1EEDA5830);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F666C();
  v10 = *(unsigned __int16 *)(v0 + 24);
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE8BA548();
  sub_1AE926F4C();
  __asm { BR              X10 }
}

void sub_1AE8B9808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 - 72) = 0;
  sub_1AE8BA6B0();
  sub_1AE50AF00();
  sub_1AE50A87C();
  v6 = *(_QWORD *)(v5 - 224);
  sub_1AE926C58();
  if (!v1)
  {
    *(_BYTE *)(v5 - 72) = 1;
    sub_1AE926C58();
    sub_1AE8BB7F8(SHIBYTE(v3));
    sub_1AE926CC4();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 272) + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 128) + 8))(v2, v0);
  sub_1AE4F667C();
}

void sub_1AE8B9AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE8BB8E0();
  v1 = *(_QWORD *)(v0 - 176);
  sub_1AE8BB89C();
  *(_QWORD *)(v0 - 72) = *(_QWORD *)(v0 - 120);
  sub_1AE501548(&qword_1EED99540);
  sub_1AE8BA6EC(&qword_1EED9D2A8, (uint64_t (*)(void))sub_1AE52A494, MEMORY[0x1E0DEAF10]);
  v2 = *(_QWORD *)(v0 - 160);
  sub_1AE926CC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 232) + 8))(v1, v2);
  JUMPOUT(0x1AE8B9AC4);
}

uint64_t KTSQueryConstraint.hashValue.getter()
{
  sub_1AE4F76E0();
  KTSQueryConstraint.hash(into:)();
  return sub_1AE4F905C();
}

void KTSQueryConstraint.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  sub_1AE4F67EC();
  v2 = v1;
  sub_1AE501548(&qword_1EEDA5870);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5878);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5880);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5888);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F9024();
  sub_1AE501548(&qword_1EEDA5890);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  v8 = sub_1AE501548(&qword_1EEDA5898);
  MEMORY[0x1E0C80A78](v8);
  sub_1AE50688C();
  v9 = sub_1AE501548(&qword_1EEDA58A0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F666C();
  v13 = v12 - v11;
  v25 = (uint64_t)v2;
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE8BA548();
  sub_1AE926F34();
  if (!v0)
  {
    v24 = v10;
    v14 = sub_1AE926C1C();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = *(unsigned __int8 *)(v14 + 32);
      sub_1AE50AF34(1, v15, v14, v14 + 32, 0, (2 * v15) | 1);
      v18 = v17;
      v20 = v19;
      swift_bridgeObjectRelease();
      if (v18 == v20 >> 1)
        __asm { BR              X9 }
    }
    v21 = sub_1AE926988();
    swift_allocError();
    v23 = v22;
    sub_1AE501548(&qword_1EED99C38);
    *v23 = &type metadata for KTSQueryConstraint;
    sub_1AE926B5C();
    sub_1AE92697C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0DEC450], v21);
    swift_willThrow();
    sub_1AE4FBA84();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v13, v9);
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v25);
  sub_1AE4F667C();
}

void sub_1AE8BA4C4()
{
  KTSQueryConstraint.init(from:)();
}

void sub_1AE8BA4D8()
{
  KTSQueryConstraint.encode(to:)();
}

uint64_t sub_1AE8BA4F4()
{
  sub_1AE926EC8();
  KTSQueryConstraint.hash(into:)();
  return sub_1AE926F10();
}

unint64_t sub_1AE8BA548()
{
  unint64_t result;

  result = qword_1EEDA5838;
  if (!qword_1EEDA5838)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D634, &type metadata for KTSQueryConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5838);
  }
  return result;
}

unint64_t sub_1AE8BA584()
{
  unint64_t result;

  result = qword_1EEDA5840;
  if (!qword_1EEDA5840)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D5E4, &type metadata for KTSQueryConstraint.SubsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5840);
  }
  return result;
}

unint64_t sub_1AE8BA5C0()
{
  unint64_t result;

  result = qword_1EEDA5848;
  if (!qword_1EEDA5848)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D594, &type metadata for KTSQueryConstraint.RoadTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5848);
  }
  return result;
}

unint64_t sub_1AE8BA5FC()
{
  unint64_t result;

  result = qword_1EEDA5850;
  if (!qword_1EEDA5850)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D544, &type metadata for KTSQueryConstraint.DurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5850);
  }
  return result;
}

unint64_t sub_1AE8BA638()
{
  unint64_t result;

  result = qword_1EEDA5858;
  if (!qword_1EEDA5858)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D4F4, &type metadata for KTSQueryConstraint.ElevationGainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5858);
  }
  return result;
}

unint64_t sub_1AE8BA674()
{
  unint64_t result;

  result = qword_1EEDA5860;
  if (!qword_1EEDA5860)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D4A4, &type metadata for KTSQueryConstraint.DistanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5860);
  }
  return result;
}

unint64_t sub_1AE8BA6B0()
{
  unint64_t result;

  result = qword_1EEDA5868;
  if (!qword_1EEDA5868)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D454, &type metadata for KTSQueryConstraint.TimeRangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5868);
  }
  return result;
}

uint64_t sub_1AE8BA6EC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_1AE523CF0(&qword_1EED99540);
    v8 = a2();
    result = MEMORY[0x1AF454B70](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AE8BA758()
{
  unint64_t result;

  result = qword_1EEDA58A8;
  if (!qword_1EEDA58A8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for InclusionType, &type metadata for InclusionType);
    atomic_store(result, (unint64_t *)&qword_1EEDA58A8);
  }
  return result;
}

unint64_t sub_1AE8BA798()
{
  unint64_t result;

  result = qword_1EEDA58B0;
  if (!qword_1EEDA58B0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSQueryParams, &type metadata for KTSQueryParams);
    atomic_store(result, (unint64_t *)&qword_1EEDA58B0);
  }
  return result;
}

unint64_t sub_1AE8BA7D8()
{
  unint64_t result;

  result = qword_1EEDA58B8;
  if (!qword_1EEDA58B8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for KTSQueryConstraint, &type metadata for KTSQueryConstraint);
    atomic_store(result, (unint64_t *)&qword_1EEDA58B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for InclusionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1AE8BA860 + 4 * byte_1AE96CAB8[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1AE8BA894 + 4 * byte_1AE96CAB3[v4]))();
}

uint64_t sub_1AE8BA894(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8BA89C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8BA8A4);
  return result;
}

uint64_t sub_1AE8BA8B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8BA8B8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1AE8BA8BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8BA8C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for InclusionType()
{
  sub_1AE4F67D4();
}

uint64_t destroy for KTSQueryParams()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for KTSQueryParams(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v3 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v3;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  v4 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v4;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for KTSQueryParams(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 25) = *((_BYTE *)a2 + 25);
  v6 = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = a2[6];
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = a2[8];
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = a2[10];
  *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  v10 = a2[12];
  *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
  *(_QWORD *)(a1 + 96) = v10;
  v11 = a2[14];
  *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
  *(_QWORD *)(a1 + 112) = v11;
  *(_BYTE *)(a1 + 121) = *((_BYTE *)a2 + 121);
  *(_QWORD *)(a1 + 128) = a2[16];
  *(_QWORD *)(a1 + 136) = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a2[18];
  *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
  *(_QWORD *)(a1 + 144) = v12;
  v13 = a2[20];
  *(_BYTE *)(a1 + 168) = *((_BYTE *)a2 + 168);
  *(_QWORD *)(a1 + 160) = v13;
  return a1;
}

void *initializeWithTake for KTSQueryParams(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA9uLL);
}

uint64_t assignWithTake for KTSQueryParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v4 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  v5 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  return a1;
}

uint64_t getEnumTagSinglePayload for KTSQueryParams(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 169))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 136);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KTSQueryParams(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 168) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 169) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 169) = 0;
    if (a2)
      *(_QWORD *)(result + 136) = a2;
  }
  return result;
}

void type metadata accessor for KTSQueryParams()
{
  sub_1AE4F67D4();
}

uint64_t destroy for KTSQueryConstraint(uint64_t a1)
{
  return sub_1AE7F4068(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_WORD *)(a1 + 24));
}

uint64_t initializeWithCopy for KTSQueryConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_WORD *)(a2 + 24);
  sub_1AE7F4054(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for KTSQueryConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_WORD *)(a2 + 24);
  sub_1AE7F4054(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_WORD *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v6;
  sub_1AE7F4068(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for KTSQueryConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_WORD *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_WORD *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v4;
  sub_1AE7F4068(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for KTSQueryConstraint(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 26))
    {
      v3 = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8) >> 1;
      if (v2 > 0x80000000)
        v3 = ~(_DWORD)v2;
      else
        v3 = -1;
    }
  }
  else
  {
    v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for KTSQueryConstraint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 2 * -a2;
      *(_QWORD *)(result + 16) = 0;
      *(_WORD *)(result + 24) = 0;
      return result;
    }
    *(_BYTE *)(result + 26) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1AE8BAE28(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 24) >> 13;
}

uint64_t sub_1AE8BAE34(uint64_t result)
{
  *(_WORD *)(result + 24) &= 0x1FFFu;
  return result;
}

uint64_t sub_1AE8BAE44(uint64_t result, __int16 a2)
{
  __int16 v2;

  v2 = *(_WORD *)(result + 24) & 0x701 | (a2 << 13);
  *(_QWORD *)(result + 8) &= 1uLL;
  *(_WORD *)(result + 24) = v2;
  return result;
}

void type metadata accessor for KTSQueryConstraint()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for KTSQueryConstraint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1AE8BAEC0 + 4 * byte_1AE96CAC2[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1AE8BAEF4 + 4 * byte_1AE96CABD[v4]))();
}

uint64_t sub_1AE8BAEF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8BAEFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8BAF04);
  return result;
}

uint64_t sub_1AE8BAF10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8BAF18);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1AE8BAF1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8BAF24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KTSQueryConstraint.CodingKeys()
{
  return &type metadata for KTSQueryConstraint.CodingKeys;
}

ValueMetadata *type metadata accessor for KTSQueryConstraint.TimeRangeCodingKeys()
{
  return &type metadata for KTSQueryConstraint.TimeRangeCodingKeys;
}

ValueMetadata *type metadata accessor for KTSQueryConstraint.DistanceCodingKeys()
{
  return &type metadata for KTSQueryConstraint.DistanceCodingKeys;
}

ValueMetadata *type metadata accessor for KTSQueryConstraint.ElevationGainCodingKeys()
{
  return &type metadata for KTSQueryConstraint.ElevationGainCodingKeys;
}

uint64_t _s20IntelligencePlatform18KTSQueryConstraintO19TimeRangeCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE8BAFC0 + 4 * byte_1AE96CACC[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE8BAFF4 + 4 * byte_1AE96CAC7[v4]))();
}

uint64_t sub_1AE8BAFF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8BAFFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8BB004);
  return result;
}

uint64_t sub_1AE8BB010(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8BB018);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE8BB01C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8BB024(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KTSQueryConstraint.DurationCodingKeys()
{
  return &type metadata for KTSQueryConstraint.DurationCodingKeys;
}

ValueMetadata *type metadata accessor for KTSQueryConstraint.RoadTypeCodingKeys()
{
  return &type metadata for KTSQueryConstraint.RoadTypeCodingKeys;
}

uint64_t _s20IntelligencePlatform18KTSQueryConstraintO18RoadTypeCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE8BB094 + 4 * byte_1AE96CAD1[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE8BB0B4 + 4 * byte_1AE96CAD6[v4]))();
}

_BYTE *sub_1AE8BB094(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE8BB0B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE8BB0BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE8BB0C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE8BB0CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE8BB0D4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for KTSQueryConstraint.SubsetCodingKeys()
{
  return &type metadata for KTSQueryConstraint.SubsetCodingKeys;
}

uint64_t storeEnumTagSinglePayload for KTSQueryParams.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1AE8BB13C + 4 * byte_1AE96CAE0[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1AE8BB170 + 4 * byte_1AE96CADB[v4]))();
}

uint64_t sub_1AE8BB170(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8BB178(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8BB180);
  return result;
}

uint64_t sub_1AE8BB18C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8BB194);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1AE8BB198(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8BB1A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KTSQueryParams.CodingKeys()
{
  return &type metadata for KTSQueryParams.CodingKeys;
}

unint64_t sub_1AE8BB1C0()
{
  unint64_t result;

  result = qword_1EEDA58C0;
  if (!qword_1EEDA58C0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96CF24, &type metadata for KTSQueryParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA58C0);
  }
  return result;
}

unint64_t sub_1AE8BB200()
{
  unint64_t result;

  result = qword_1EEDA58C8;
  if (!qword_1EEDA58C8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96CFDC, &type metadata for KTSQueryConstraint.SubsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA58C8);
  }
  return result;
}

unint64_t sub_1AE8BB240()
{
  unint64_t result;

  result = qword_1EEDA58D0;
  if (!qword_1EEDA58D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D094, &type metadata for KTSQueryConstraint.RoadTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA58D0);
  }
  return result;
}

unint64_t sub_1AE8BB280()
{
  unint64_t result;

  result = qword_1EEDA58D8;
  if (!qword_1EEDA58D8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D14C, &type metadata for KTSQueryConstraint.DurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA58D8);
  }
  return result;
}

unint64_t sub_1AE8BB2C0()
{
  unint64_t result;

  result = qword_1EEDA58E0;
  if (!qword_1EEDA58E0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D204, &type metadata for KTSQueryConstraint.ElevationGainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA58E0);
  }
  return result;
}

unint64_t sub_1AE8BB300()
{
  unint64_t result;

  result = qword_1EEDA58E8;
  if (!qword_1EEDA58E8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D2BC, &type metadata for KTSQueryConstraint.DistanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA58E8);
  }
  return result;
}

unint64_t sub_1AE8BB340()
{
  unint64_t result;

  result = qword_1EEDA58F0;
  if (!qword_1EEDA58F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D374, &type metadata for KTSQueryConstraint.TimeRangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA58F0);
  }
  return result;
}

unint64_t sub_1AE8BB380()
{
  unint64_t result;

  result = qword_1EEDA58F8;
  if (!qword_1EEDA58F8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D42C, &type metadata for KTSQueryConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA58F8);
  }
  return result;
}

unint64_t sub_1AE8BB3C0()
{
  unint64_t result;

  result = qword_1EEDA5900;
  if (!qword_1EEDA5900)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D2E4, &type metadata for KTSQueryConstraint.TimeRangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5900);
  }
  return result;
}

unint64_t sub_1AE8BB400()
{
  unint64_t result;

  result = qword_1EEDA5908;
  if (!qword_1EEDA5908)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D30C, &type metadata for KTSQueryConstraint.TimeRangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5908);
  }
  return result;
}

unint64_t sub_1AE8BB440()
{
  unint64_t result;

  result = qword_1EEDA5910;
  if (!qword_1EEDA5910)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D22C, &type metadata for KTSQueryConstraint.DistanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5910);
  }
  return result;
}

unint64_t sub_1AE8BB480()
{
  unint64_t result;

  result = qword_1EEDA5918;
  if (!qword_1EEDA5918)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D254, &type metadata for KTSQueryConstraint.DistanceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5918);
  }
  return result;
}

unint64_t sub_1AE8BB4C0()
{
  unint64_t result;

  result = qword_1EEDA5920;
  if (!qword_1EEDA5920)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D174, &type metadata for KTSQueryConstraint.ElevationGainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5920);
  }
  return result;
}

unint64_t sub_1AE8BB500()
{
  unint64_t result;

  result = qword_1EEDA5928;
  if (!qword_1EEDA5928)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D19C, &type metadata for KTSQueryConstraint.ElevationGainCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5928);
  }
  return result;
}

unint64_t sub_1AE8BB540()
{
  unint64_t result;

  result = qword_1EEDA5930;
  if (!qword_1EEDA5930)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D0BC, &type metadata for KTSQueryConstraint.DurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5930);
  }
  return result;
}

unint64_t sub_1AE8BB580()
{
  unint64_t result;

  result = qword_1EEDA5938;
  if (!qword_1EEDA5938)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D0E4, &type metadata for KTSQueryConstraint.DurationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5938);
  }
  return result;
}

unint64_t sub_1AE8BB5C0()
{
  unint64_t result;

  result = qword_1EEDA5940;
  if (!qword_1EEDA5940)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D004, &type metadata for KTSQueryConstraint.RoadTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5940);
  }
  return result;
}

unint64_t sub_1AE8BB600()
{
  unint64_t result;

  result = qword_1EEDA5948;
  if (!qword_1EEDA5948)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D02C, &type metadata for KTSQueryConstraint.RoadTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5948);
  }
  return result;
}

unint64_t sub_1AE8BB640()
{
  unint64_t result;

  result = qword_1EEDA5950;
  if (!qword_1EEDA5950)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96CF4C, &type metadata for KTSQueryConstraint.SubsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5950);
  }
  return result;
}

unint64_t sub_1AE8BB680()
{
  unint64_t result;

  result = qword_1EEDA5958;
  if (!qword_1EEDA5958)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96CF74, &type metadata for KTSQueryConstraint.SubsetCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5958);
  }
  return result;
}

unint64_t sub_1AE8BB6C0()
{
  unint64_t result;

  result = qword_1EEDA5960;
  if (!qword_1EEDA5960)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D39C, &type metadata for KTSQueryConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5960);
  }
  return result;
}

unint64_t sub_1AE8BB700()
{
  unint64_t result;

  result = qword_1EEDA5968;
  if (!qword_1EEDA5968)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96D3C4, &type metadata for KTSQueryConstraint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5968);
  }
  return result;
}

unint64_t sub_1AE8BB740()
{
  unint64_t result;

  result = qword_1EEDA5970;
  if (!qword_1EEDA5970)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96CE94, &type metadata for KTSQueryParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5970);
  }
  return result;
}

unint64_t sub_1AE8BB780()
{
  unint64_t result;

  result = qword_1EEDA5978;
  if (!qword_1EEDA5978)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96CEBC, &type metadata for KTSQueryParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5978);
  }
  return result;
}

unint64_t sub_1AE8BB7BC()
{
  unint64_t result;

  result = qword_1EEDA5980[0];
  if (!qword_1EEDA5980[0])
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for InclusionType, &type metadata for InclusionType);
    atomic_store(result, qword_1EEDA5980);
  }
  return result;
}

unint64_t sub_1AE8BB7F8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 72) = a1;
  *(_BYTE *)(v1 - 89) = 2;
  return sub_1AE8B7D04();
}

uint64_t sub_1AE8BB808@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_1AE8BB818()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 1;
  return sub_1AE926C58();
}

uint64_t sub_1AE8BB83C()
{
  return sub_1AE926B80();
}

uint64_t sub_1AE8BB844()
{
  return sub_1AE926CC4();
}

uint64_t sub_1AE8BB85C()
{
  return sub_1AE926BEC();
}

uint64_t sub_1AE8BB874()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_1AE7F4054(v3, v2, v1, v0);
}

uint64_t sub_1AE8BB888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 240) + 8))(v0, v1);
}

uint64_t sub_1AE8BB89C()
{
  return sub_1AE926C34();
}

void sub_1AE8BB8AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 264) = v0;
}

uint64_t sub_1AE8BB8B8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE8BB8C8()
{
  return sub_1AE926EF8();
}

uint64_t sub_1AE8BB8D4()
{
  return sub_1AE926C58();
}

unint64_t sub_1AE8BB8E0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 5;
  return sub_1AE8BA584();
}

unint64_t sub_1AE8BB8EC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 4;
  return sub_1AE8BA5C0();
}

uint64_t sub_1AE8BB8F8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = a1;
  *(_BYTE *)(v1 - 72) = 1;
  return v1 - 72;
}

unint64_t sub_1AE8BB90C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 3;
  return sub_1AE8BA5FC();
}

unint64_t sub_1AE8BB918()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 2;
  return sub_1AE8BA638();
}

uint64_t sub_1AE8BB924()
{
  uint64_t v0;

  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0);
}

uint64_t TypedEntityIdentifier.cast<A>(as:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;

  v5 = *v3;
  return TypedEntityIdentifier.init(untyped:)(&v5, a1, a2, a3);
}

BOOL static TypedEntityIdentifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t TypedEntityIdentifier.init(untyped:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v13;
  int v14;
  uint64_t result;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  unsigned __int8 v23;
  _OWORD v24[2];
  unsigned __int8 v25;
  int v26;
  int v27;

  v7 = *a1;
  EntityClass.init(intValue:)(HIBYTE(*a1), (uint64_t)&v21);
  v8 = *((_QWORD *)&v21 + 1);
  if (*((_QWORD *)&v21 + 1))
  {
    v9 = v21;
    v10 = v22;
    v27 = v23;
    static GraphObjectBase.entityClass.getter(a2, *(_QWORD *)(a3 + 8));
    v24[0] = v21;
    v24[1] = v22;
    v11 = v23;
    v25 = v23;
    if ((_QWORD)v22 == (_QWORD)v10 && *((_QWORD *)&v10 + 1) == *((_QWORD *)&v22 + 1))
      goto LABEL_8;
    v13 = v21;
    v19 = v22;
    v20 = *((_QWORD *)&v21 + 1);
    v18 = *((_QWORD *)&v22 + 1);
    if ((sub_1AE926D60() & 1) != 0)
      goto LABEL_8;
    *(_QWORD *)&v21 = v9;
    *((_QWORD *)&v21 + 1) = v8;
    v22 = v10;
    v23 = v27;
    EntityClass.ancestorClassesSet.getter();
    sub_1AE5519D8();
    v26 = v14;
    swift_bridgeObjectRelease();
    if ((v26 & 1) != 0)
    {
LABEL_8:
      sub_1AE52F880(v9, v8);
      result = sub_1AE525EF8((uint64_t)v24);
      *a4 = v7;
      return result;
    }
    sub_1AE52F844();
    sub_1AE4F6778();
    *(_QWORD *)v17 = v13;
    *(_QWORD *)(v17 + 8) = v20;
    *(_QWORD *)(v17 + 16) = v19;
    *(_QWORD *)(v17 + 24) = v18;
    *(_QWORD *)(v17 + 32) = v11;
    *(_QWORD *)(v17 + 40) = v9;
    *(_QWORD *)(v17 + 48) = v8;
    *(_OWORD *)(v17 + 56) = v10;
    *(_BYTE *)(v17 + 72) = v27;
  }
  else
  {
    sub_1AE52F844();
    sub_1AE4F6778();
    *v16 = xmmword_1AE934260;
    v16[1] = 0u;
    v16[2] = 0u;
    v16[3] = 0u;
    *(_OWORD *)((char *)v16 + 57) = 0u;
  }
  return swift_willThrow();
}

uint64_t sub_1AE8BBB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  sub_1AE501548(&qword_1EED99540);
  type metadata accessor for TypedEntityIdentifier(0, a3, a4, v6);
  sub_1AE773978();
  return sub_1AE926088();
}

uint64_t EntityIdentifier.typed<A>(as:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;

  v5 = *v3;
  return TypedEntityIdentifier.init(untyped:)(&v5, a1, a2, a3);
}

#error "1AE8BBBEC: call analysis failed (funcsize=6)"

void TypedEntityIdentifier<>.init(objectiveCGraphObjectEntityIdentifier:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v8;
  uint64_t v9;

  v8 = objc_msgSend(a1, sel_intValue);
  sub_1AE8BBD84((uint64_t *)&v8, a2, *(_QWORD *)(a3 + 8), &v9);

  *a4 = v9;
}

id TypedEntityIdentifier<>.objectiveCGraphObjectEntityIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;
  id result;

  v1 = *v0;
  swift_getAssociatedTypeWitness();
  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithValue_, v1);
  if (!result)
    __break(1u);
  return result;
}

#error "1AE8BBCC4: call analysis failed (funcsize=6)"

uint64_t TypedEntityIdentifier.init(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  _OWORD *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char v13;

  EntityIdentifier.init(_:)(a1, a2, (uint64_t)&v12);
  if (v13 == 1)
  {
    sub_1AE52F844();
    sub_1AE4F6778();
    *v9 = 0u;
    v9[1] = 0u;
    v9[2] = 0u;
    v9[3] = 0u;
    *(_OWORD *)((char *)v9 + 57) = 0u;
    return swift_willThrow();
  }
  else
  {
    v11 = v12;
    result = TypedEntityIdentifier.init(untyped:)(&v11, a3, a4, &v12);
    if (!v5)
      *a5 = v12;
  }
  return result;
}

uint64_t sub_1AE8BBD84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  result = TypedEntityIdentifier.init(untyped:)(&v6, a2, a3, &v7);
  *a4 = v7;
  return result;
}

void TypedEntityIdentifier.untyped.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t TypedEntityIdentifier.hash(into:)()
{
  return sub_1AE926EF8();
}

uint64_t sub_1AE8BBF68(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x64657079746E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE8BBFEC()
{
  return 0x64657079746E75;
}

uint64_t sub_1AE8BC004()
{
  return sub_1AE5366F4();
}

uint64_t sub_1AE8BC010()
{
  sub_1AE926EC8();
  sub_1AE53664C();
  return sub_1AE926F10();
}

uint64_t sub_1AE8BC050()
{
  return sub_1AE8BBFEC();
}

uint64_t sub_1AE8BC05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8BBF68(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE8BC08C()
{
  return sub_1AE50D624();
}

uint64_t sub_1AE8BC0AC(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE96D928, a1);
  return sub_1AE926F94();
}

uint64_t sub_1AE8BC0E0(uint64_t a1)
{
  MEMORY[0x1AF454B70](&unk_1AE96D928, a1);
  return sub_1AE926FA0();
}

void TypedEntityIdentifier.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v11[4];

  v6 = type metadata accessor for TypedEntityIdentifier.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  MEMORY[0x1AF454B70](&unk_1AE96D928, v6);
  v7 = sub_1AE926CF4();
  v11[0] = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v11 - v8;
  v10 = *v4;
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE926F4C();
  v11[3] = v10;
  sub_1AE52A494();
  sub_1AE926CC4();
  (*(void (**)(char *, uint64_t))(v11[0] + 8))(v9, v7);
  sub_1AE4F667C();
}

uint64_t type metadata accessor for TypedEntityIdentifier.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TypedEntityIdentifier.CodingKeys);
}

uint64_t TypedEntityIdentifier.hashValue.getter()
{
  sub_1AE926EC8();
  sub_1AE926EF8();
  return sub_1AE926F10();
}

void TypedEntityIdentifier.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v7 = type metadata accessor for TypedEntityIdentifier.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1AF454B70](&unk_1AE96D928, v7);
  v8 = sub_1AE926C28();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F9858(a1, a1[3]);
  sub_1AE926F34();
  if (!v5)
  {
    sub_1AE52A458();
    sub_1AE926BEC();
    sub_1AE5021E4();
    *a5 = v10;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)a1);
  sub_1AE4F667C();
}

uint64_t sub_1AE8BC3A8()
{
  sub_1AE926EC8();
  TypedEntityIdentifier.hash(into:)();
  return sub_1AE926F10();
}

void sub_1AE8BC3E4(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  TypedEntityIdentifier.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

void sub_1AE8BC400(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  TypedEntityIdentifier.encode(to:)(a1, a2, a3, a4);
}

uint64_t Sequence.filter<A, B>(by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  type metadata accessor for TypedEntityIdentifier(0, a4, a7, a4);
  return sub_1AE926088();
}

void sub_1AE8BC480(uint64_t a1@<X3>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;

  TypedEntityIdentifier.cast<A>(as:)(a1, a2, &v6);
  if (v3)
  {

    v5 = 0;
  }
  else
  {
    v5 = v6;
  }
  *(_QWORD *)a3 = v5;
  *(_BYTE *)(a3 + 8) = v3 != 0;
}

void sub_1AE8BC4F4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AE8BC480(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 56), a1);
}

uint64_t type metadata accessor for TypedEntityIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TypedEntityIdentifier);
}

void sub_1AE8BC520(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v5;
  uint64_t v6;

  EntityIdentifier.typed<A>(as:)(a1, a2, &v6);
  if (v3)
  {

    v5 = 0;
  }
  else
  {
    v5 = v6;
  }
  *(_QWORD *)a3 = v5;
  *(_BYTE *)(a3 + 8) = v3 != 0;
}

void EntityIdentifier.entity<A>(from:)()
{
  sub_1AE500864();
  GraphObjectBareContextProtocol.entity(for:)();
  sub_1AE4FD974();
}

#error "1AE8BC5C0: call analysis failed (funcsize=7)"

#error "1AE8BC5DC: call analysis failed (funcsize=7)"

#error "1AE8BC5F8: call analysis failed (funcsize=7)"

void EntityIdentifier.graphObject<A>(from:)()
{
  sub_1AE500864();
  GraphObjectContextProtocol.graphObject(forUntyped:)();
  sub_1AE4FD974();
}

{
  sub_1AE500864();
  GraphObjectContextProtocol.graphObject<>(forUntyped:)();
  sub_1AE4FD974();
}

void sub_1AE8BC63C()
{
  JUMPOUT(0x1AF454B70);
}

unint64_t destroy for TypedEntityIdentifierError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for TypedEntityIdentifierError(_QWORD *__dst, _QWORD *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  if (v3 < 0xFFFFFFFF)
  {
    memcpy(__dst, a2, 0x49uLL);
  }
  else
  {
    *__dst = *a2;
    __dst[1] = v3;
    v4 = a2[3];
    __dst[2] = a2[2];
    __dst[3] = v4;
    *((_BYTE *)__dst + 32) = *((_BYTE *)a2 + 32);
    v5 = a2[6];
    __dst[5] = a2[5];
    __dst[6] = v5;
    v6 = a2[8];
    __dst[7] = a2[7];
    __dst[8] = v6;
    *((_BYTE *)__dst + 72) = *((_BYTE *)a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return __dst;
}

_QWORD *assignWithCopy for TypedEntityIdentifierError(_QWORD *__dst, _QWORD *__src)
{
  unint64_t v4;

  v4 = __src[1];
  if (__dst[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *__dst = *__src;
      __dst[1] = __src[1];
      __dst[2] = __src[2];
      __dst[3] = __src[3];
      *((_BYTE *)__dst + 32) = *((_BYTE *)__src + 32);
      __dst[5] = __src[5];
      __dst[6] = __src[6];
      __dst[7] = __src[7];
      __dst[8] = __src[8];
      *((_BYTE *)__dst + 72) = *((_BYTE *)__src + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return __dst;
    }
LABEL_7:
    memcpy(__dst, __src, 0x49uLL);
    return __dst;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *__dst = *__src;
  __dst[1] = __src[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[2] = __src[2];
  __dst[3] = __src[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)__dst + 32) = *((_BYTE *)__src + 32);
  __dst[5] = __src[5];
  __dst[6] = __src[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[7] = __src[7];
  __dst[8] = __src[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)__dst + 72) = *((_BYTE *)__src + 72);
  return __dst;
}

_QWORD *assignWithTake for TypedEntityIdentifierError(_QWORD *__dst, _QWORD *__src)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (__dst[1] < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = __src[1];
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    memcpy(__dst, __src, 0x49uLL);
    return __dst;
  }
  *__dst = *__src;
  __dst[1] = v4;
  swift_bridgeObjectRelease();
  v5 = __src[3];
  __dst[2] = __src[2];
  __dst[3] = v5;
  swift_bridgeObjectRelease();
  *((_BYTE *)__dst + 32) = *((_BYTE *)__src + 32);
  v6 = __src[6];
  __dst[5] = __src[5];
  __dst[6] = v6;
  swift_bridgeObjectRelease();
  v7 = __src[8];
  __dst[7] = __src[7];
  __dst[8] = v7;
  swift_bridgeObjectRelease();
  *((_BYTE *)__dst + 72) = *((_BYTE *)__src + 72);
  return __dst;
}

uint64_t getEnumTagSinglePayload for TypedEntityIdentifierError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TypedEntityIdentifierError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 57) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

double sub_1AE8BCA3C(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 72) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TypedEntityIdentifierError()
{
  return &type metadata for TypedEntityIdentifierError;
}

uint64_t sub_1AE8BCA84(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE8BCAC4 + 4 * byte_1AE96D6E0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE8BCAE4 + 4 * byte_1AE96D6E5[v4]))();
}

_BYTE *sub_1AE8BCAC4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE8BCAE4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE8BCAEC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE8BCAF4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE8BCAFC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE8BCB04(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1AE8BCB10()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE8BCB20()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE8BCB30()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE8BCB40(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AE8BC520(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1AE8BCB5C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1AE8BCBF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(a3 + 40);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v5 + 64) + v8;
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_DWORD *)(v5 + 80) | v8;
  v13 = v12;
  v14 = v12 & 0x100000;
  if (v13 > 7 || v14 != 0 || v11 + (v10 & (unint64_t)~v9) + 1 > 0x18)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v13 + 16) & ~v13));
    swift_retain();
  }
  else
  {
    v18 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v19 = ((unint64_t)a2 + v10) & v18;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v18, v19, v6);
    *(_BYTE *)((((unint64_t)v4 + v10) & v18) + v11) = *(_BYTE *)(v19 + v11);
  }
  return v4;
}

uint64_t sub_1AE8BCCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 40) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 40) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 40) - 8) + 80));
}

uint64_t sub_1AE8BCD34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 40) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v11, v12);
  *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v12 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_1AE8BCDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 40) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v12 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_1AE8BCE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 40) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v12 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_1AE8BCEB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 40) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  v11 = (v10 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v12 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_1AE8BCF34(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  unsigned int v23;
  int v24;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(a3 + 40);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v6)
    v10 = *(_DWORD *)(v5 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0xFE)
    v10 = 254;
  if (!a2)
    return 0;
  v11 = *(_QWORD *)(v5 + 64);
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = v11 + v12;
  v14 = *(_QWORD *)(v8 + 64);
  v15 = a2 - v10;
  if (a2 <= v10)
    goto LABEL_25;
  v16 = v14 + (v13 & ~v12) + 1;
  v17 = 8 * v16;
  if (v16 > 3)
    goto LABEL_9;
  v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
  if (HIWORD(v19))
  {
    v18 = *(_DWORD *)(a1 + v16);
    if (v18)
      goto LABEL_16;
    goto LABEL_25;
  }
  if (v19 > 0xFF)
  {
    v18 = *(unsigned __int16 *)(a1 + v16);
    if (*(_WORD *)(a1 + v16))
      goto LABEL_16;
LABEL_25:
    if ((_DWORD)v6 == v10)
    {
      v9 = v6;
      v7 = v4;
      return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, v9, v7);
    }
    a1 = (v13 + a1) & ~v12;
    if ((_DWORD)v9 == v10)
      return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, v9, v7);
    v23 = *(unsigned __int8 *)(a1 + v14);
    if (v23 < 2)
      return 0;
    v24 = (v23 + 2147483646) & 0x7FFFFFFF;
    return (v24 + 1);
  }
  if (v19 < 2)
    goto LABEL_25;
LABEL_9:
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_25;
LABEL_16:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if ((_DWORD)v14 + (v13 & ~(_DWORD)v12) == -1)
  {
    v24 = v10 + v20;
    return (v24 + 1);
  }
  if (v16 <= 3)
    v21 = v14 + (v13 & ~(_DWORD)v12) + 1;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1AE8BD01C + 4 * byte_1AE96D980[v21 - 1]))();
}

void sub_1AE8BD0B0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 40) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE)
    v7 = 254;
  v8 = *(_QWORD *)(v6 + 64)
     + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + 1;
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0u;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void type metadata accessor for TypedGraphObjectSequence()
{
  JUMPOUT(0x1AF454AECLL);
}

uint64_t sub_1AE8BD2D4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1AE8BD38C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(uint64_t, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(a3 + 40);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v12;
  v14 = *(_QWORD *)(v11 + 64);
  v15 = (v12 | *(_DWORD *)(v7 + 80)) & 0x100000;
  v16 = *a2;
  *a1 = *a2;
  if ((v12 | v8) > 7
    || v15 != 0
    || v14 + ((v9 + v12 + ((v8 + 8) & ~v8)) & ~(unint64_t)v12) + 1 > 0x18)
  {
    a1 = (uint64_t *)(v16
                   + (((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)));
    swift_retain();
  }
  else
  {
    v19 = ~v8;
    v20 = (char *)a1 + v8;
    v21 = (char *)a2 + v8;
    v22 = (unint64_t)(v20 + 8) & v19;
    v23 = (unint64_t)(v21 + 8) & v19;
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    swift_bridgeObjectRetain();
    v26(v22, v23, AssociatedTypeWitness);
    v24 = (v22 + v9 + v13) & ~v13;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v24, (v23 + v9 + v13) & ~v13, v10);
    *(_BYTE *)(v24 + v14) = *(_BYTE *)(((v23 + v9 + v13) & ~v13) + v14);
  }
  return a1;
}

uint64_t sub_1AE8BD4F0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unint64_t v6;

  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, AssociatedTypeWitness);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 40) - 8) + 8))((v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 40) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 40) - 8) + 80));
}

_QWORD *sub_1AE8BD584(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  v11(v9, v10, AssociatedTypeWitness);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 40) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v7 + 64) + v13;
  v15 = (v14 + v9) & ~v13;
  v16 = (v14 + v10) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v15, v16);
  *(_BYTE *)(v15 + *(_QWORD *)(v12 + 64)) = *(_BYTE *)(v16 + *(_QWORD *)(v12 + 64));
  return a1;
}

_QWORD *sub_1AE8BD668(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v9, v10, AssociatedTypeWitness);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 40) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = (v14 + v9) & ~v13;
  v16 = (v14 + v10) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v15, v16);
  *(_BYTE *)(v15 + *(_QWORD *)(v12 + 64)) = *(_BYTE *)(v16 + *(_QWORD *)(v12 + 64));
  return a1;
}

_QWORD *sub_1AE8BD748(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v9, v10, AssociatedTypeWitness);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 40) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = (v14 + v9) & ~v13;
  v16 = (v14 + v10) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v15, v16);
  *(_BYTE *)(v15 + *(_QWORD *)(v12 + 64)) = *(_BYTE *)(v16 + *(_QWORD *)(v12 + 64));
  return a1;
}

_QWORD *sub_1AE8BD818(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(v9, v10, AssociatedTypeWitness);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 40) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = (v14 + v9) & ~v13;
  v16 = (v14 + v10) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 40))(v15, v16);
  *(_BYTE *)(v15 + *(_QWORD *)(v12 + 64)) = *(_BYTE *)(v16 + *(_QWORD *)(v12 + 64));
  return a1;
}

uint64_t sub_1AE8BD8F0(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  unsigned int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 40);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v8 <= v11)
    v12 = *(_DWORD *)(v10 + 84);
  else
    v12 = *(_DWORD *)(v7 + 84);
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  if (!a2)
    return 0;
  v14 = AssociatedTypeWitness;
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = *(_QWORD *)(v7 + 64);
  v17 = *(unsigned __int8 *)(v10 + 80);
  if (a2 <= v13)
    goto LABEL_27;
  v18 = *(_QWORD *)(v10 + 64) + ((v16 + v17 + ((v15 + 8) & ~v15)) & ~v17) + 1;
  v19 = 8 * v18;
  if (v18 <= 3)
  {
    v22 = ((a2 - v13 + ~(-1 << v19)) >> v19) + 1;
    if (HIWORD(v22))
    {
      v20 = *(_DWORD *)((char *)a1 + v18);
      if (!v20)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v22 > 0xFF)
    {
      v20 = *(unsigned __int16 *)((char *)a1 + v18);
      if (!*(_WORD *)((char *)a1 + v18))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v22 < 2)
    {
LABEL_27:
      if ((v12 & 0x80000000) != 0)
      {
        v26 = ((unint64_t)a1 + v15 + 8) & ~v15;
        if ((_DWORD)v8 == v13)
        {
          v9 = v14;
        }
        else
        {
          v26 = (v26 + v16 + v17) & ~v17;
          v8 = v11;
        }
        return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v26, v8, v9);
      }
      else
      {
        v25 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v25) = -1;
        return (v25 + 1);
      }
    }
  }
  v20 = *((unsigned __int8 *)a1 + v18);
  if (!*((_BYTE *)a1 + v18))
    goto LABEL_27;
LABEL_18:
  v23 = (v20 - 1) << v19;
  if (v18 > 3)
    v23 = 0;
  if ((_DWORD)v18)
  {
    if (v18 <= 3)
      v24 = v18;
    else
      v24 = 4;
    __asm { BR              X12 }
  }
  return v13 + v23 + 1;
}

void sub_1AE8BDAD8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  size_t v12;
  char v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 40) - 8);
  if (*(_DWORD *)(v8 + 84) <= *(_DWORD *)(v9 + 84))
    v10 = *(_DWORD *)(v9 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = v10;
  v12 = *(_QWORD *)(v9 + 64)
      + ((*(_QWORD *)(v8 + 64)
        + *(unsigned __int8 *)(v9 + 80)
        + ((*(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + 1;
  v13 = 8 * v12;
  if (a3 <= v11)
  {
    v14 = 0u;
  }
  else if (v12 <= 3)
  {
    v16 = ((a3 - v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v11 < a2)
  {
    v15 = ~v11 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        v17 = v15 & ~(-1 << v13);
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X1 }
}

void type metadata accessor for TypedGraphObjectSequence.Iterator()
{
  JUMPOUT(0x1AF454AECLL);
}

void sub_1AE8BDD50()
{
  JUMPOUT(0x1AF454B70);
}

void sub_1AE8BDD60(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for TypedGraphObjectSequence();
}

uint64_t sub_1AE8BDDE8(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v4 + *(int *)(a1 + 92), v3, v1);
  *(_BYTE *)(v4 + *(int *)(a1 + 96)) = v2;
  return result;
}

void sub_1AE8BDE30(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, char *, uint64_t);
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  void (*v68)(uint64_t, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v57 = a2;
  v4 = *(_QWORD *)(a1 + 32);
  sub_1AE523CF0((uint64_t *)&unk_1ED319C60);
  v74 = v4;
  v5 = sub_1AE926F28();
  v65 = sub_1AE92670C();
  v61 = *(_QWORD *)(v65 - 8);
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v6);
  v62 = (uint64_t)&v53 - v7;
  v64 = v5;
  v53 = *(_QWORD *)(v5 - 8);
  sub_1AE4FE978();
  v9 = MEMORY[0x1E0C80A78](v8);
  v54 = (char *)&v53 - v10;
  v11 = *(_QWORD *)(a1 + 24);
  v75 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F666C();
  v14 = v13 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v56 = sub_1AE92670C();
  v55 = *(_QWORD *)(v56 - 8);
  sub_1AE4FE978();
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)&v53 - v18);
  v72 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (uint64_t *)((char *)&v53 - v23);
  v25 = *(int *)(a1 + 92);
  v63 = v2;
  v26 = v2 + v25;
  v73 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v70 = AssociatedTypeWitness;
  v71 = v26;
  v69 = AssociatedConformanceWitness;
  sub_1AE926760();
  v76 = TupleTypeMetadata2;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, TupleTypeMetadata2) == 1)
  {
LABEL_5:
    (*(void (**)(uint64_t *, uint64_t))(v55 + 8))(v19, v56);
    type metadata accessor for TypedEntityIdentifier(255, v74, *(_QWORD *)(v73 + 64), v41);
    v42 = sub_1AE5012FC();
    v43 = (uint64_t)v57;
    v44 = 1;
  }
  else
  {
    v68 = *(void (**)(uint64_t, char *, uint64_t))(v75 + 32);
    v60 = v22;
    while (1)
    {
      v29 = v76;
      v30 = *(int *)(v76 + 48);
      v31 = *v19;
      *v24 = *v19;
      v32 = v68;
      v68((uint64_t)v24 + v30, (char *)v19 + v30, v11);
      v33 = *(int *)(v29 + 48);
      v34 = v24;
      v35 = &v22[v33];
      sub_1AE4FE2DC((uint64_t)&v22[v33], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 16));
      v32(v14, v35, v11);
      v77 = v31;
      v36 = *(_QWORD *)(v73 + 64);
      TypedEntityIdentifier.init(untyped:)(&v77, v74, v36, &v78);
      v59 = v78;
      v37 = *(int *)(v73 + 100);
      v66 = v63 + *(int *)(v73 + 96);
      v67 = *(unsigned __int8 *)(v63 + v37);
      swift_getAssociatedTypeWitness();
      v39 = v75;
      v38 = v76;
      v58 = v36;
      v40 = v62;
      sub_1AE6A2F30(v74, v67, v74, v62);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v14, v11);
      (*(void (**)(uint64_t *, uint64_t))(v72 + 8))(v34, v38);
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v40, 1, v64) != 1)
        break;
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v40, v65);
      v22 = v60;
      v24 = v34;
      sub_1AE926760();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v19, 1, v76) == 1)
        goto LABEL_5;
    }
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 32);
    v46 = v54;
    v47 = v40;
    v48 = v64;
    v45(v54, v47, v64);
    type metadata accessor for TypedEntityIdentifier(255, v74, v58, v49);
    v50 = sub_1AE5012FC();
    v51 = v57;
    v52 = (uint64_t)v57 + *(int *)(v50 + 48);
    *v57 = v59;
    v45((char *)v52, (uint64_t)v46, v48);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v52, 0, 1, v48);
    v43 = (uint64_t)v51;
    v44 = 0;
    v42 = v50;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v43, v44, 1, v42);
  sub_1AE4F8180();
}

void sub_1AE8BE350(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  type metadata accessor for TypedGraphObjectSequence.Iterator();
}

uint64_t sub_1AE8BE3B8(int *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t result;

  v6 = v4 + a1[23];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v6, v3, AssociatedTypeWitness);
  result = sub_1AE4FE2DC(v4 + a1[24], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32));
  *(_BYTE *)(v4 + a1[25]) = v2;
  return result;
}

void sub_1AE8BE43C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1AE4F666C();
  v9 = v8 - v7;
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F666C();
  v15 = v14 - v13;
  swift_getAssociatedTypeWitness();
  sub_1AE4FE978();
  MEMORY[0x1E0C80A78](v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v15, v3, v11);
  sub_1AE926070();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v3 + *(int *)(a1 + 92), v5);
  sub_1AE8BE350(MEMORY[0x1E0DEE9E8], a2);
}

void sub_1AE8BE57C()
{
  sub_1AE4F8180();
}

void sub_1AE8BE58C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1AE8BE43C(a1, a2);
}

uint64_t sub_1AE8BE5A0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

uint64_t static UniversalEmbeddingModelClient.shared()()
{
  id v0;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_service);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v0;
  return result;
}

uint64_t UniversalEmbeddingModelClient.embed(items:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_1AE8BE62C()
{
  os_log_type_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D47788]), sel_init);
  *(_QWORD *)(v1 + 40) = v3;
  objc_msgSend(v3, sel_setVersion_, 4);
  v4 = *(void **)(v2 + 16);
  *(_QWORD *)(v1 + 48) = v4;
  if (v4)
  {
    sub_1AE501548(&qword_1EED99648);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1AE95A550;
    *(_QWORD *)(v5 + 32) = v3;
    v13 = v5;
    sub_1AE9261FC();
    *(_QWORD *)(v1 + 56) = v13;
    v4;
    v6 = v3;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 64) = v7;
    *v7 = v1;
    v7[1] = sub_1AE8BE7C8;
    return sub_1AE8BEA28(v13, *(_QWORD *)(v1 + 24), 0, 0);
  }
  else
  {
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v9 = sub_1AE4F6854();
    v10 = sub_1AE4FB608(v9, (uint64_t)qword_1ED31BC90);
    sub_1AE925B54();
    v11 = sub_1AE4FCF04();
    if (sub_1AE503578(v11))
    {
      v12 = (uint8_t *)sub_1AE4F66A0();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1AE4F2000, v10, v0, "Couldn't fetch embedding due to error: madService is nil", v12, 2u);
      sub_1AE4F9064();
    }

    return sub_1AE50087C(MEMORY[0x1E0DEE9D8], *(uint64_t (**)(void))(v1 + 8));
  }
}

uint64_t sub_1AE8BE7C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 80) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1AE8BE844()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80));
}

uint64_t sub_1AE8BE880()
{
  os_log_type_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;

  swift_bridgeObjectRelease();
  if (qword_1ED31BCB0 != -1)
    swift_once();
  v2 = *(void **)(v1 + 72);
  v3 = sub_1AE4F6854();
  v4 = sub_1AE4FB608(v3, (uint64_t)qword_1ED31BC90);
  v5 = v2;
  v6 = v2;
  v7 = v4;
  sub_1AE925B54();
  v8 = sub_1AE4FCF04();
  v9 = sub_1AE503578(v8);
  v10 = *(void **)(v1 + 72);
  if (v9)
  {
    v11 = (uint8_t *)sub_1AE4F66A0();
    v12 = (_QWORD *)sub_1AE4F66A0();
    *(_DWORD *)v11 = 138412290;
    v13 = v10;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v1 + 16) = v14;
    sub_1AE92676C();
    *v12 = v14;
    sub_1AE4F931C();
    sub_1AE4F931C();
    _os_log_impl(&dword_1AE4F2000, v7, v0, "Couldn't fetch embedding due to error: %@", v11, 0xCu);
    sub_1AE501548(&qword_1ED319410);
    swift_arrayDestroy();
    sub_1AE4F9064();
  }
  sub_1AE4F931C();
  sub_1AE4F931C();

  v15 = *(void **)(v1 + 72);
  v16 = *(void **)(v1 + 48);

  return (*(uint64_t (**)(_QWORD))(v1 + 8))(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1AE8BEA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  v5[8] = swift_getObjectType();
  return swift_task_switch();
}

uint64_t sub_1AE8BEA74()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  __int128 v13;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1AE926AD8();
    swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v3 = *(_QWORD *)(v0 + 56);
    v2 = *(_QWORD *)(v0 + 64);
    v13 = *(_OWORD *)(v0 + 40);
    v4 = swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v4;
    v5 = *(_OWORD *)(v0 + 24);
    *(_QWORD *)(v4 + 16) = v3;
    *(_OWORD *)(v4 + 24) = v5;
    *(_OWORD *)(v4 + 40) = v13;
    *(_QWORD *)(v4 + 56) = v2;
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v6;
    sub_1AE501548(&qword_1EEDA5A18);
    *v6 = v0;
    v6[1] = sub_1AE8BEC3C;
    return sub_1AE926DB4();
  }
  if (qword_1ED31BCB0 != -1)
    swift_once();
  v9 = sub_1AE4F6854();
  v10 = sub_1AE4FB608(v9, (uint64_t)qword_1ED31BC90);
  sub_1AE925B54();
  v11 = sub_1AE4FCF04();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)sub_1AE4F66A0();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1AE4F2000, v10, v11, "No requests to perform", v12, 2u);
    sub_1AE4F9064();
  }

  return sub_1AE50087C(MEMORY[0x1E0DEE9D8], *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AE8BEC3C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1AE8BECA8()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t UniversalEmbeddingModelClient.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t UniversalEmbeddingModelClient.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void sub_1AE8BED1C(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD aBlock[6];

  v22 = a7;
  v23 = a2;
  v20 = a5;
  v10 = sub_1AE501548(&qword_1EEDA5A20);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >> 62)
  {
    sub_1AE53F468(0, &qword_1EEDA5A28);
    swift_bridgeObjectRetain();
    sub_1AE926ACC();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1AE926D84();
    sub_1AE53F468(0, &qword_1EEDA5A28);
  }
  sub_1AE53F468(0, &qword_1EEDA5A28);
  v21 = sub_1AE9261C0();
  swift_bridgeObjectRelease();
  v14 = (void *)sub_1AE9261C0();
  if (a6)
    a6 = (void *)sub_1AE925E18();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v15 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = (v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v15, v13, v10);
  *(_QWORD *)(v17 + v16) = a3;
  *(_QWORD *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v22;
  aBlock[4] = sub_1AE8BF7CC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AE8BF6B0;
  aBlock[3] = &unk_1E5DCAC58;
  v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  v19 = (void *)v21;
  objc_msgSend(v23, sel_performRequests_text_identifier_completionHandler_, v21, v14, a6, v18, v20);
  _Block_release(v18);

}

void sub_1AE8BEF88(int a1, id a2, uint64_t a3, unint64_t a4)
{
  id v4;
  uint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;

  if (a2)
  {
    v4 = a2;
LABEL_3:
    sub_1AE501548(&qword_1EEDA5A20);
    sub_1AE9262F8();
    return;
  }
  if (!(a4 >> 62))
  {
    v6 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_6;
LABEL_25:
    swift_bridgeObjectRelease();
    sub_1AE8BF950();
    swift_allocError();
    *v26 = 1;
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  if (!sub_1AE926AD8())
    goto LABEL_25;
LABEL_6:
  sub_1AE66B890(0, (a4 & 0xC000000000000001) == 0, a4);
  if ((a4 & 0xC000000000000001) != 0)
    v7 = (id)MEMORY[0x1AF453B80](0, a4);
  else
    v7 = *(id *)(a4 + 32);
  v8 = v7;
  swift_bridgeObjectRelease();
  v9 = sub_1AE8BF8E4(v8);
  if (v9)
  {
    v10 = v9;
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v27 = sub_1AE926AD8();
      swift_bridgeObjectRelease();
      if (v27)
      {
LABEL_11:
        if ((v10 & 0xC000000000000001) != 0)
          v11 = (id)MEMORY[0x1AF453B80](0, v10);
        else
          v11 = *(id *)(v10 + 32);
        v12 = v11;
        if (qword_1ED31BCB0 != -1)
          swift_once();
        v13 = sub_1AE925B6C();
        sub_1AE4FB608(v13, (uint64_t)qword_1ED31BC90);
        v14 = v12;
        v15 = sub_1AE925B54();
        v16 = sub_1AE9265E0();
        if (os_log_type_enabled(v15, v16))
        {
          v17 = swift_slowAlloc();
          *(_DWORD *)v17 = 134217984;
          *(_QWORD *)(v17 + 4) = -[NSObject elementType](v14, sel_elementType);

          _os_log_impl(&dword_1AE4F2000, v15, v16, "Embedding type = %lu", (uint8_t *)v17, 0xCu);
          MEMORY[0x1AF454C78](v17, -1, -1);
        }
        else
        {

          v15 = v14;
        }

        v18 = v14;
        v19 = sub_1AE925B54();
        v20 = sub_1AE9265E0();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = swift_slowAlloc();
          *(_DWORD *)v21 = 134217984;
          *(_QWORD *)(v21 + 4) = -[NSObject elementCount](v18, sel_elementCount);

          _os_log_impl(&dword_1AE4F2000, v19, v20, "Embedding count = %lu", (uint8_t *)v21, 0xCu);
          MEMORY[0x1AF454C78](v21, -1, -1);
        }
        else
        {

          v19 = v18;
        }

        v22 = -[NSObject embeddingData](v18, sel_embeddingData);
        sub_1AE924834();
        v24 = v23;

        __asm { BR              X9 }
      }
    }
    else if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    sub_1AE501548(&qword_1EEDA5A20);
    sub_1AE926304();
  }
  else
  {
    sub_1AE8BF950();
    swift_allocError();
    *v25 = 2;
    sub_1AE501548(&qword_1EEDA5A20);
    sub_1AE9262F8();
  }

}

void sub_1AE8BF5A8(__int16 *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v15;
  uint64_t v16;

  if (!a1)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    goto LABEL_10;
  }
  v4 = a1;
  v5 = a2 - (_QWORD)a1;
  v6 = MEMORY[0x1E0DEE9D8];
  if ((unint64_t)(a2 - (_QWORD)a1 + 1) < 3)
  {
LABEL_10:
    *a3 = v6;
    return;
  }
  v7 = v5 / 2;
  v15 = MEMORY[0x1E0DEE9D8];
  sub_1AE521ADC();
  if (v5 >= -1)
  {
    v6 = v15;
    v8 = *(_QWORD *)(v15 + 16);
    do
    {
      _H8 = *v4;
      v16 = v6;
      if (v8 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_1AE521ADC();
        v6 = v16;
      }
      __asm { FCVT            S0, H8 }
      *(_QWORD *)(v6 + 16) = v8 + 1;
      *(_DWORD *)(v6 + 4 * v8 + 32) = _S0;
      ++v4;
      ++v8;
      --v7;
    }
    while (v7);
    goto LABEL_10;
  }
  __break(1u);
}

void sub_1AE8BF6B0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t type metadata accessor for UniversalEmbeddingModelClient()
{
  return objc_opt_self();
}

uint64_t method lookup function for UniversalEmbeddingModelClient()
{
  return swift_lookUpClassMethod();
}

void sub_1AE8BF73C(uint64_t a1)
{
  uint64_t v1;

  sub_1AE8BED1C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1AE8BF74C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1AE501548(&qword_1EEDA5A20);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1AE8BF7CC(int a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_1AE501548(&qword_1EEDA5A20) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_1AE8BEF88(a1, a2, v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_1AE8BF83C(uint64_t a1, uint64_t a2)
{
  __int16 *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (__int16 *)sub_1AE924534();
  if (v4)
  {
    v5 = sub_1AE92454C();
    if (__OFSUB__(a1, v5))
    {
LABEL_13:
      __break(1u);
      return;
    }
    v4 = (__int16 *)((char *)v4 + a1 - v5);
  }
  v6 = __OFSUB__(a2, a1);
  v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = sub_1AE924540();
  if (v8 >= v7)
    v9 = v7;
  else
    v9 = v8;
  v10 = (char *)v4 + v9;
  if (v4)
    v11 = (uint64_t)v10;
  else
    v11 = 0;
  sub_1AE8BF5A8(v4, v11, &v12);
}

uint64_t sub_1AE8BF8E4(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_embeddingResults);
  if (!v1)
    return 0;
  v2 = v1;
  sub_1AE53F468(0, &qword_1EEDA5A38);
  v3 = sub_1AE9261CC();

  return v3;
}

unint64_t sub_1AE8BF950()
{
  unint64_t result;

  result = qword_1EEDA5A30;
  if (!qword_1EEDA5A30)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96DB68, &_s14EmbeddingErrorON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5A30);
  }
  return result;
}

uint64_t _s14EmbeddingErrorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AE8BF9D8 + 4 * byte_1AE96DAA5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AE8BFA0C + 4 * byte_1AE96DAA0[v4]))();
}

uint64_t sub_1AE8BFA0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8BFA14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8BFA1CLL);
  return result;
}

uint64_t sub_1AE8BFA28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8BFA30);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AE8BFA34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8BFA3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14EmbeddingErrorOMa()
{
  return &_s14EmbeddingErrorON;
}

unint64_t sub_1AE8BFA5C()
{
  unint64_t result;

  result = qword_1EEDA5A40;
  if (!qword_1EEDA5A40)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96DB40, &_s14EmbeddingErrorON);
    atomic_store(result, (unint64_t *)&qword_1EEDA5A40);
  }
  return result;
}

id sub_1AE8BFA98()
{
  void *v0;
  objc_class *ObjectType;
  char *v2;
  uint64_t v3;
  objc_super v5;
  id v6;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1AE501548(&qword_1ED31CB28);
  sub_1AE501548(qword_1ED31CB30);
  sub_1AE8BFC9C();
  v2 = v0;
  v6 = sub_1AE8BFB74(0, 5);
  UnfairLockedBox.__allocating_init(contents:)((uint64_t)&v6);
  *(_QWORD *)&v2[qword_1EEDA5A48] = v3;

  v5.receiver = v2;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_1AE8BFB74(uint64_t a1, uint64_t a2)
{
  return objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_mapTableWithKeyOptions_valueOptions_, a1, a2);
}

id sub_1AE8BFBBC()
{
  return sub_1AE8BFA98();
}

uint64_t sub_1AE8BFBDC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  uint64_t v9;

  v8 = objc_msgSend(a1, sel_objectForKey_, a2);
  if (v8)
  {
    v4 = (uint64_t)v8;
  }
  else
  {
    v9 = sub_1AE8C5614(a2, a3);
    if (!v3)
    {
      v4 = v9;
      objc_msgSend(a1, sel_setObject_forKey_, v9, a2);
    }
  }
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_1AE8BFC80()
{
  return swift_release();
}

uint64_t type metadata accessor for URLToObjectStrongWeakMap(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for URLToObjectStrongWeakMap);
}

unint64_t sub_1AE8BFC9C()
{
  unint64_t result;

  result = qword_1ED31CBE8;
  if (!qword_1ED31CBE8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED31CBE8);
  }
  return result;
}

uint64_t UserDefault.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1AF454348]();
  v5 = *(_QWORD *)(a2 + 16);
  sub_1AE8C0038(v2, a1, v5, v6);
  sub_1AE4FCB00();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
}

uint64_t UserDefault.init(key:defaultValue:container:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;

  v12 = type metadata accessor for UserDefault(0, a5, a3, a4);
  v13 = (_QWORD *)(a6 + *(int *)(v12 + 28));
  *v13 = a1;
  v13[1] = a2;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a6, a3, a5);
  *(_QWORD *)(a6 + *(int *)(v12 + 32)) = a4;
  return result;
}

uint64_t UserDefault.projectedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2);
}

uint64_t static NSUserDefaults.isKTSEnabled.getter()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  char v5;

  if (qword_1ED31AEE8 != -1)
    swift_once();
  sub_1AE4FB9BC();
  v0 = byte_1ED31AEC8;
  v1 = qword_1ED31AED0;
  v2 = unk_1ED31AED8;
  v3 = (void *)qword_1ED31AEE0;
  swift_bridgeObjectRetain();
  v4 = v3;
  MEMORY[0x1AF454348]();
  v5 = sub_1AE5F54A0(v0, v1, v2, v4);
  sub_1AE4FCB00();

  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t UserDefault.defaultValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t static NSUserDefaults.makeIntelligencePlatformUserDefaults()()
{
  void *v0;
  id v1;
  id v2;
  uint64_t result;

  v0 = (void *)MEMORY[0x1AF454348]();
  v1 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v2 = sub_1AE8C0500(0xD00000000000001ELL, 0x80000001AE98AA40);
  objc_autoreleasePoolPop(v0);
  if (v2)
    return (uint64_t)v2;
  result = sub_1AE926AB4();
  __break(1u);
  return result;
}

void sub_1AE8BFF7C(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for UserDefault(0, *(_QWORD *)(a2 + a1 - 8), a2, a3);
  UserDefault.wrappedValue.getter(v5, a4);
}

uint64_t sub_1AE8BFFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(a4 + a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v12 - v5;
  (*(void (**)(char *))(v7 + 16))((char *)&v12 - v5);
  v10 = type metadata accessor for UserDefault(0, v4, v8, v9);
  return UserDefault.wrappedValue.setter((uint64_t)v6, v10);
}

void sub_1AE8C0038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v4;
  uint64_t v5;
  void *v6;

  v4 = *(id *)(a1 + *(int *)(type metadata accessor for UserDefault(0, a3, a3, a4) + 32));
  v5 = sub_1AE926D54();
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

  swift_unknownObjectRelease();
}

void (*UserDefault.wrappedValue.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  UserDefault.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_1AE8C017C;
}

void sub_1AE8C017C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (void *)(*a1)[4];
  v4 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    v5 = v2[2];
    v6 = v2[3];
    v7 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    UserDefault.wrappedValue.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    UserDefault.wrappedValue.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

Swift::Void __swiftcall UserDefault.removeObject()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(v0 + 32));
  v3 = (id)sub_1AE925E18();
  objc_msgSend(v2, sel_removeObjectForKey_, v3);

}

uint64_t static NSUserDefaults.isKTSEnabled.setter()
{
  uint64_t v0;
  void *v1;

  if (qword_1ED31AEE8 != -1)
    swift_once();
  v0 = sub_1AE4FB9BC();
  v1 = (void *)MEMORY[0x1AF454348](v0);
  sub_1AE5F563C((uint64_t)&byte_1ED31AEC8);
  objc_autoreleasePoolPop(v1);
  return swift_endAccess();
}

void (*static NSUserDefaults.isKTSEnabled.modify(_QWORD *a1))(void **a1)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  if (qword_1ED31AEE8 != -1)
    swift_once();
  v3 = sub_1AE4FB9BC();
  v4 = byte_1ED31AEC8;
  v5 = qword_1ED31AED0;
  v6 = unk_1ED31AED8;
  v7 = qword_1ED31AEE0;
  v8 = (void *)MEMORY[0x1AF454348](v3);
  LOBYTE(v7) = sub_1AE5F54A0(v4, v5, v6, (void *)v7);
  v2[3] = 0;
  objc_autoreleasePoolPop(v8);
  *((_BYTE *)v2 + 32) = v7 & 1;
  return sub_1AE8C03CC;
}

void sub_1AE8C03CC(void **a1)
{
  void *v1;

  v1 = *a1;
  MEMORY[0x1AF454348]();
  sub_1AE5F563C((uint64_t)&byte_1ED31AEC8);
  sub_1AE4FCB00();
  swift_endAccess();
  free(v1);
}

uint64_t sub_1AE8C0430()
{
  uint64_t result;

  sub_1AE60DB44();
  result = static NSUserDefaults.makeIntelligencePlatformUserDefaults()();
  byte_1ED31AEC8 = 0;
  qword_1ED31AED0 = 0xD000000000000020;
  unk_1ED31AED8 = 0x80000001AE98AAD0;
  qword_1ED31AEE0 = result;
  return result;
}

id static NSUserDefaults.$isKTSEnabled.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v6;

  if (qword_1ED31AEE8 != -1)
    swift_once();
  sub_1AE4FB9BC();
  v3 = qword_1ED31AED0;
  v2 = unk_1ED31AED8;
  v6 = (id)qword_1ED31AEE0;
  v4 = qword_1ED31AEE0;
  *(_BYTE *)a1 = byte_1ED31AEC8;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  return v6;
}

id sub_1AE8C0500(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)sub_1AE925E18();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

uint64_t sub_1AE8C0568()
{
  return 8;
}

_QWORD *sub_1AE8C0574(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1AE8C0580()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AE8C0604(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  void **v12;
  void *v13;
  id v14;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v12 = (void **)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFF8);
    v13 = *v12;
    *(_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8) = *v12;
    swift_bridgeObjectRetain();
    v14 = v13;
  }
  return v4;
}

uint64_t sub_1AE8C06E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void *v10;
  void *v11;
  id v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = *(void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  v11 = *v9;
  *v9 = v10;
  v12 = v10;

  return a1;
}

uint64_t sub_1AE8C077C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1AE8C07E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v9 = (void **)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v9;
  *v9 = *(void **)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_1AE8C0874(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)(((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1AE8C08F8 + 4 * byte_1AE96DC00[v11]))();
  }
}

void sub_1AE8C0978(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1AE8C0A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
      {
        *v8 = a2 ^ 0x80000000;
        v8[1] = 0;
      }
      else
      {
        v8[1] = (a2 - 1);
      }
    }
    else
    {
      return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

IntelligencePlatform::UserInterestsType_optional __swiftcall UserInterestsType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  IntelligencePlatform::UserInterestsType_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1AE926DA8();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 13;
  switch(v3)
  {
    case 0:
      goto LABEL_15;
    case 1:
      v5 = 1;
      goto LABEL_15;
    case 2:
      v5 = 2;
      goto LABEL_15;
    case 3:
      v5 = 3;
      goto LABEL_15;
    case 4:
      v5 = 4;
      goto LABEL_15;
    case 5:
      v5 = 5;
      goto LABEL_15;
    case 6:
      v5 = 6;
      goto LABEL_15;
    case 7:
      v5 = 7;
      goto LABEL_15;
    case 8:
      v5 = 8;
      goto LABEL_15;
    case 9:
      v5 = 9;
      goto LABEL_15;
    case 10:
      v5 = 10;
      goto LABEL_15;
    case 11:
      v5 = 11;
      goto LABEL_15;
    case 12:
      v5 = 12;
LABEL_15:
      v6 = v5;
      break;
    case 13:
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    case 24:
      v6 = 24;
      break;
    case 25:
      v6 = 25;
      break;
    case 26:
      v6 = 26;
      break;
    case 27:
      v6 = 27;
      break;
    case 28:
      v6 = 28;
      break;
    case 29:
      v6 = 29;
      break;
    case 30:
      v6 = 30;
      break;
    default:
      v6 = 31;
      break;
  }
  *v2 = v6;
  return result;
}

void *static UserInterestsType.allCases.getter()
{
  return &unk_1E5DA7D48;
}

uint64_t UserInterestsType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AE8C0CB0 + 4 * byte_1AE96DC7F[*v0]))(0x6172676F746F6870, 0xEB00000000796870);
}

uint64_t sub_1AE8C0CB0()
{
  return 0x6E696E6564726167;
}

uint64_t sub_1AE8C0CCC()
{
  return 0x676E696B6F6F63;
}

uint64_t sub_1AE8C0DF8()
{
  return 0x726563636F73;
}

uint64_t sub_1AE8C0E0C()
{
  return 0x74656B63697263;
}

uint64_t sub_1AE8C0E24()
{
  return 0x616274656B736162;
}

uint64_t sub_1AE8C0E84()
{
  return 0x6E6554656C626174;
}

uint64_t sub_1AE8C0EA4()
{
  return 0x6C6C616265736162;
}

unint64_t sub_1AE8C0EBC()
{
  return 0xD000000000000010;
}

uint64_t sub_1AE8C0ED8()
{
  return 6908787;
}

uint64_t sub_1AE8C0EE8()
{
  return 0x6E61676576;
}

uint64_t sub_1AE8C0EFC()
{
  return 0x6972617465676576;
}

uint64_t sub_1AE8C0F1C()
{
  return 0x72466E6574756C67;
}

uint64_t sub_1AE8C0F3C()
{
  return 1718382439;
}

void sub_1AE8C0F4C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_1AE511A60(*a1, *a2);
}

void sub_1AE8C0F58()
{
  unsigned __int8 *v0;

  sub_1AE512C84(*v0);
}

uint64_t sub_1AE8C0F60(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1AE5E8B9C(a1, *v1);
}

void sub_1AE8C0F68(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_1AE54FC9C(a1, *v1);
}

IntelligencePlatform::UserInterestsType_optional sub_1AE8C0F70(Swift::String *a1)
{
  return UserInterestsType.init(rawValue:)(*a1);
}

uint64_t sub_1AE8C0F7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = UserInterestsType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1AE8C0FA0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5DA7D48;
}

uint64_t sub_1AE8C0FB0()
{
  sub_1AE8C1558();
  return sub_1AE926190();
}

uint64_t sub_1AE8C100C()
{
  sub_1AE8C1558();
  return sub_1AE926148();
}

void *static UserInterestsService.supportedTags(version:)()
{
  return &unk_1E5DA91B8;
}

uint64_t UserInterestsService.__allocating_init()()
{
  return sub_1AE4F66BC();
}

uint64_t UserInterestsService.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE8C1098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  sub_1AE501548(&qword_1EED99648);
  v0 = sub_1AE4F66BC();
  *(_OWORD *)(v0 + 16) = xmmword_1AE96DF10;
  type metadata accessor for UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag();
  v1 = sub_1AE4F66BC();
  *(_BYTE *)(v1 + 16) = 27;
  *(_QWORD *)(v1 + 24) = 0x3FDAE147AE147AE1;
  *(_QWORD *)(v0 + 32) = v1;
  v2 = sub_1AE500890();
  *(_BYTE *)(v2 + 16) = 12;
  *(_QWORD *)(v2 + 24) = 0x3FD51EB851EB851FLL;
  *(_QWORD *)(v0 + 40) = v2;
  v3 = sub_1AE500890();
  *(_BYTE *)(v3 + 16) = 21;
  *(_QWORD *)(v3 + 24) = 0x3FB47AE147AE147BLL;
  *(_QWORD *)(v0 + 48) = v3;
  v4 = sub_1AE500890();
  *(_BYTE *)(v4 + 16) = 5;
  *(_QWORD *)(v4 + 24) = 0x3FB47AE147AE147BLL;
  *(_QWORD *)(v0 + 56) = v4;
  v5 = sub_1AE500890();
  *(_BYTE *)(v5 + 16) = 6;
  *(_QWORD *)(v5 + 24) = 0x3FB47AE147AE147BLL;
  *(_QWORD *)(v0 + 64) = v5;
  sub_1AE9261FC();
  type metadata accessor for UserInterestsService.ScoreRankedUserInterestsTags();
  result = sub_1AE4F66BC();
  *(_QWORD *)(result + 16) = v0;
  return result;
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag.__allocating_init(tag:score:)(_BYTE *a1, double a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = *a1;
  *(double *)(result + 24) = a2;
  return result;
}

uint64_t type metadata accessor for UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag()
{
  return objc_opt_self();
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.__allocating_init(scoreUserInterestsTags:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t UserInterestsService.__deallocating_deinit()
{
  return sub_1AE50130C();
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag.init(tag:score:)(_BYTE *a1, double a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a1;
  *(double *)(v2 + 24) = a2;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

uint64_t type metadata accessor for UserInterestsService.ScoreRankedUserInterestsTags()
{
  return objc_opt_self();
}

void UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag.tag.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

double UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag.score.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag.__deallocating_deinit()
{
  return sub_1AE50130C();
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.init(scoreUserInterestsTags:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.scoreUserInterestsTags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UserInterestsService.ScoreRankedUserInterestsTags.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1AE8C12F8()
{
  unint64_t result;

  result = qword_1EEDA5A50;
  if (!qword_1EEDA5A50)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for UserInterestsType, &type metadata for UserInterestsType);
    atomic_store(result, (unint64_t *)&qword_1EEDA5A50);
  }
  return result;
}

unint64_t sub_1AE8C1338()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEDA5A58;
  if (!qword_1EEDA5A58)
  {
    v1 = sub_1AE523CF0(&qword_1EEDA5A60);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EEDA5A58);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UserInterestsType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE2)
  {
    if (a2 + 30 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 30) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 31;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1F;
  v5 = v6 - 31;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UserInterestsType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 30 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 30) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE1)
    return ((uint64_t (*)(void))((char *)&loc_1AE8C1450 + 4 * byte_1AE96DCA3[v4]))();
  *a1 = a2 + 30;
  return ((uint64_t (*)(void))((char *)sub_1AE8C1484 + 4 * byte_1AE96DC9E[v4]))();
}

uint64_t sub_1AE8C1484(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8C148C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8C1494);
  return result;
}

uint64_t sub_1AE8C14A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8C14A8);
  *(_BYTE *)result = a2 + 30;
  return result;
}

uint64_t sub_1AE8C14AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8C14B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserInterestsType()
{
  return &type metadata for UserInterestsType;
}

uint64_t type metadata accessor for UserInterestsService()
{
  return objc_opt_self();
}

uint64_t method lookup function for UserInterestsService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UserInterestsService.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of UserInterestsService.globalUserInterests()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t method lookup function for UserInterestsService.ScoreRankedUserInterestsTags()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UserInterestsService.ScoreRankedUserInterestsTags.__allocating_init(scoreUserInterestsTags:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UserInterestsService.ScoreRankedUserInterestsTags.ScoreUserInterestsTag.__allocating_init(tag:score:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

unint64_t sub_1AE8C1558()
{
  unint64_t result;

  result = qword_1EEDA5A68[0];
  if (!qword_1EEDA5A68[0])
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for UserInterestsType, &type metadata for UserInterestsType);
    atomic_store(result, qword_1EEDA5A68);
  }
  return result;
}

void sub_1AE8C1594()
{
  sub_1AE5008A0();
  __break(1u);
}

void sub_1AE8C15C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v2 = sub_1AE4FBE7C();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(void))(*(_QWORD *)(v1 - 8) + 16))();
  sub_1AE5008A0();
  __break(1u);
}

uint64_t type metadata accessor for VectorSearchSelectorBase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VectorSearchSelectorBase);
}

uint64_t sub_1AE8C166C()
{
  return sub_1AE8C1BF8();
}

uint64_t sub_1AE8C168C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *v0;
  sub_1AE4FB9BC();
  v2 = v0[2];
  v3 = v0[3];
  v15 = v2;
  v16 = v3;
  v4 = *(_QWORD *)(v1 + 136);
  v13 = *(_QWORD *)(v1 + 128);
  v14 = v4;
  v11[2] = v13;
  v11[3] = v4;
  v11[4] = sub_1AE8C2074;
  v11[5] = &v12;
  v5 = type metadata accessor for OrderedDictionary(0, v13, MEMORY[0x1E0DEB188], v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1AE4FBE7C();
  v7 = MEMORY[0x1AF454B70](&unk_1AE961674, v5);
  v9 = sub_1AE595DD0((void (*)(char *, uint64_t))sub_1AE8C20A4, (uint64_t)v11, v5, v6, MEMORY[0x1E0DEDCE8], v7, MEMORY[0x1E0DEDD18], v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

void sub_1AE8C1798(uint64_t a1@<X0>, float (*a2)(uint64_t, uint64_t, float)@<X1>, uint64_t a3@<X8>)
{
  float v6;
  uint64_t v7;

  v6 = *(float *)(a1 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  v7 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  *(float *)(a3 + v7) = a2(a3, a1, v6);
}

void sub_1AE8C1850(uint64_t a1, float a2)
{
  float *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  float v25;
  _BOOL4 v26;
  uint64_t v27;
  _QWORD v28[5];
  uint64_t v29;

  v29 = *(_QWORD *)v2;
  v5 = *(_QWORD *)(v29 + 128);
  v6 = sub_1AE4FBE7C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4FFEB4();
  v10 = v8 - v9;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v28 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)v28 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v28 - v18;
  v20 = *(_QWORD *)(v5 - 8);
  v21 = a1;
  v22 = v5;
  v23 = v5;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v24((char *)v28 - v18, v21, v23);
  *(float *)&v19[*(int *)(v6 + 48)] = a2;
  v25 = v2[8];
  if (*((_BYTE *)v2 + 36) == 1)
    v26 = v25 > a2;
  else
    v26 = v25 < a2;
  if (v26)
  {
    v28[3] = v20;
    v28[4] = v7;
    v28[1] = v14;
    v28[2] = v10;
    v27 = *(int *)(v6 + 48);
    v24(v17, (uint64_t)v19, v22);
    *(float *)&v17[v27] = a2;
    sub_1AE4FB9BC();
    sub_1AE82F6AC();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
  sub_1AE4F7740();
}

uint64_t sub_1AE8C1B5C()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8C1B80()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AE8C1BAC()
{
  sub_1AE8C1B80();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VectorSearchExhaustiveSelector(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VectorSearchExhaustiveSelector);
}

uint64_t sub_1AE8C1BD8()
{
  return sub_1AE8C1BF8();
}

uint64_t sub_1AE8C1BF8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1AE8C1C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1AE4FB9BC();
  v1 = *(_QWORD *)(v0 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1AE769C3C(v1);
  v2 = sub_1AE4FBE7C();
  v6 = sub_1AE8C20DC(v2, v3, v4, v5);
  MEMORY[0x1AF454B70](&protocol conformance descriptor for PriorityQueue<A>, v6);
  sub_1AE9262C8();
  v7 = sub_1AE9262B0();
  MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF38], v7);
  return sub_1AE926124();
}

void sub_1AE8C1D24(uint64_t a1, float a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[7];
  void (*v31)(char *, uint64_t, uint64_t);

  v3 = v2;
  v6 = *(_QWORD *)(*v3 + 128);
  v7 = sub_1AE4FBE7C();
  v8 = sub_1AE92670C();
  v30[3] = *(_QWORD *)(v8 - 8);
  v30[4] = v8;
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4FFEB4();
  v30[2] = v9 - v10;
  v12 = MEMORY[0x1E0C80A78](v11);
  v13 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v12);
  sub_1AE4FFEB4();
  v16 = v14 - v15;
  v18 = MEMORY[0x1E0C80A78](v17);
  v30[6] = (char *)v30 - v19;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v30 - v20;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v31((char *)v30 - v20, a1, v6);
  *(float *)&v21[*(int *)(v7 + 48)] = a2;
  if (v3[2] >= 1)
  {
    v30[1] = v16;
    v30[5] = v13;
    sub_1AE4FB9BC();
    sub_1AE5021F4();
    v26 = sub_1AE8C20DC(v22, v23, v24, v25);
    PriorityQueue.count.getter(v26, v27, v28, v29);
  }
  sub_1AE4F6EB4((uint64_t)v21);
  sub_1AE4F7740();
}

uint64_t sub_1AE8C1FC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1AE6263E0(v1);
}

uint64_t sub_1AE8C2004()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1AE6263E0(v1);
  return v0;
}

uint64_t sub_1AE8C2048()
{
  sub_1AE8C2004();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VectorSearchTopKSelector(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VectorSearchTopKSelector);
}

float sub_1AE8C2074(float a1)
{
  uint64_t v1;

  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 16))();
  return a1;
}

void sub_1AE8C20A4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1AE8C1798(a1, *(float (**)(uint64_t, uint64_t, float))(v2 + 32), a2);
}

uint64_t sub_1AE8C20C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t sub_1AE8C20D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, v3, v1);
}

uint64_t sub_1AE8C20DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for PriorityQueue(0, v4, a3, a4);
}

uint64_t sub_1AE8C20E8(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v19;
  int v20;
  uint64_t v21;

  if (a1 >> 62)
    goto LABEL_19;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1AE926AD8())
  {
    v6 = MEMORY[0x1E0DEE9D8];
    for (i = 4; ; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v8 = MEMORY[0x1AF453B80](i - 4, a1);
      }
      else
      {
        v8 = *(_QWORD *)(a1 + 8 * i);
        swift_retain();
      }
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v21 = v8;
      sub_1AE8C4594(a3, (uint64_t)&v19);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1AE626390(a2);
        return v6;
      }
      swift_release();
      v10 = v19;
      if (v19)
      {
        v11 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE51BEB8();
          v6 = v14;
        }
        v12 = *(_QWORD *)(v6 + 16);
        if (v12 >= *(_QWORD *)(v6 + 24) >> 1)
        {
          sub_1AE51BEB8();
          v6 = v15;
        }
        *(_QWORD *)(v6 + 16) = v12 + 1;
        v13 = v6 + 16 * v12;
        *(_QWORD *)(v13 + 32) = v10;
        *(_DWORD *)(v13 + 40) = v11;
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        sub_1AE626390(a2);
        return v6;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  sub_1AE626390(a2);
  return MEMORY[0x1E0DEE9D8];
}

_QWORD *sub_1AE8C22D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *(*v7)(uint64_t *__return_ptr, _QWORD *);
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  _QWORD v11[2];
  uint64_t v12;

  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    result = (_QWORD *)sub_1AE9268F8();
    if (!v4)
      return (_QWORD *)HIDWORD(v12);
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    if ((v6 & 0x2000000000000000) != 0)
    {
      v11[0] = v5;
      v11[1] = v6 & 0xFFFFFFFFFFFFFFLL;
      result = v7(&v12, v11);
      if (!v4)
        return (_QWORD *)v12;
    }
    else
    {
      if ((v5 & 0x1000000000000000) != 0)
      {
        v8 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v9 = v5 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v8 = sub_1AE926994();
      }
      return sub_1AE8C4990(v8, v9, (_QWORD *(*)(uint64_t *__return_ptr))sub_1AE8C4F7C);
    }
  }
  return result;
}

uint64_t static SearchMode.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  if ((a1[1] & 1) != 0)
  {
    if (v2 == v3)
      return *((unsigned __int8 *)a2 + 8);
    else
      return 0;
  }
  else
  {
    return (a2[1] & 1) == 0 && *(float *)&v2 == *(float *)&v3;
  }
}

uint64_t sub_1AE8C240C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  char *v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  void (*v25)(uint64_t *, _QWORD);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45[4];
  uint64_t v46;
  _QWORD *v47;

  v2 = *a1;
  v3 = sub_1AE9254D0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v42 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)&v35 - v7;
  v8 = sub_1AE501548((uint64_t *)&unk_1ED30EC90);
  v36 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v38 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v39 = (uint64_t)&v35 - v12;
  MEMORY[0x1E0C80A78](v11);
  v44 = (uint64_t *)((char *)&v35 - v13);
  v14 = sub_1AE501548(&qword_1ED30ECA0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = a1;
  v46 = MEMORY[0x1E0DEE9D8];
  sub_1AE585700(&qword_1EED9E3A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D24538], MEMORY[0x1E0D24548]);
  sub_1AE926070();
  v17 = &v16[*(int *)(v14 + 36)];
  v43 = v4;
  v40 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v18 = v16;
  v37 = v2;
  while (1)
  {
    v19 = v41;
    v40(v41, v17, v3);
    sub_1AE585700(qword_1ED30FFE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D24538], MEMORY[0x1E0D24550]);
    v20 = v42;
    sub_1AE9264A8();
    sub_1AE585700(&qword_1ED30FFF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D24898], MEMORY[0x1E0D248A0]);
    v21 = sub_1AE925E00();
    v22 = v18;
    v23 = v2;
    v24 = *(void (**)(char *, uint64_t))(v43 + 8);
    v24(v20, v3);
    v24(v19, v3);
    if ((v21 & 1) != 0)
      break;
    v25 = (void (*)(uint64_t *, _QWORD))sub_1AE92658C();
    v26 = v39;
    sub_1AE64DBE0(v27, v39);
    v25(v45, 0);
    v28 = v22;
    v45[0] = *v22;
    v29 = v17;
    sub_1AE9264B4();
    v30 = v44;
    sub_1AE64DBA0(v26, (uint64_t)v44, (uint64_t *)&unk_1ED30EC90);
    v31 = *v30 == 0x6469776F72 && v30[1] == 0xE500000000000000;
    v2 = v23;
    if (v31 || (sub_1AE926D60() & 1) != 0)
    {
      sub_1AE52FBE8((uint64_t)v44, (uint64_t *)&unk_1ED30EC90);
      v18 = v22;
      v17 = v29;
    }
    else
    {
      sub_1AE64DBA0((uint64_t)v44, v38, (uint64_t *)&unk_1ED30EC90);
      v32 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE522790();
        v32 = v46;
      }
      v18 = v28;
      v33 = *(_QWORD *)(v32 + 16);
      if (v33 >= *(_QWORD *)(v32 + 24) >> 1)
      {
        sub_1AE522790();
        v32 = v46;
      }
      *(_QWORD *)(v32 + 16) = v33 + 1;
      sub_1AE64DBA0(v38, v32+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v33, (uint64_t *)&unk_1ED30EC90);
      v2 = v37;
      v17 = v29;
    }
  }
  sub_1AE52FBE8((uint64_t)v22, &qword_1ED30ECA0);
  return v46;
}

uint64_t sub_1AE8C2808(char a1, float a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  swift_retain();
  v5 = MEMORY[0x1E0DEE9D8];
  v6 = sub_1AE925C98();
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)(v2 + 24) = v6;
  *(float *)(v2 + 32) = a2;
  *(_BYTE *)(v2 + 36) = a1;
  swift_release();
  return v2;
}

uint64_t sub_1AE8C2880(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 24) = a2;
  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = a2;
  *(_QWORD *)(v2 + 32) = sub_1AE8C4FC8;
  *(_QWORD *)(v2 + 40) = v4;
  *(_QWORD *)(v2 + 48) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 56) = sub_1AE8C4FC8;
  *(_QWORD *)(v2 + 64) = v4;
  swift_retain();
  return v2;
}

BOOL sub_1AE8C28E0(float a1, float a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 1)
    return a2 < a1;
  else
    return a1 < a2;
}

uint64_t static VectorSearchError.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if ((a1[2] & 1) != 0)
  {
    if ((a2[2] & 1) != 0)
    {
      if (v2 != v4 || v3 != v5)
      {
LABEL_15:
        v7 = sub_1AE926D60();
        goto LABEL_17;
      }
LABEL_16:
      v7 = 1;
      goto LABEL_17;
    }
  }
  else if ((a2[2] & 1) == 0)
  {
    if (v2 != v4 || v3 != v5)
      goto LABEL_15;
    goto LABEL_16;
  }
  v7 = 0;
LABEL_17:
  sub_1AE509358();
  sub_1AE509358();
  sub_1AE544754();
  sub_1AE544754();
  return v7 & 1;
}

IntelligencePlatform::VectorSearchSimilarityMetric_optional __swiftcall VectorSearchSimilarityMetric.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  IntelligencePlatform::VectorSearchSimilarityMetric_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1AE926B44();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t VectorSearchSimilarityMetric.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x616564696C637565;
  if (*v0 != 1)
    v1 = 7630692;
  if (*v0)
    return v1;
  else
    return 0x656E69736F63;
}

uint64_t sub_1AE8C2A9C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE8C2B2C()
{
  return 0x6C6F687365726874;
}

uint64_t sub_1AE8C2B48(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x74696D694C6D756ELL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1AE8C2BD8(unsigned __int8 *a1, char *a2)
{
  sub_1AE5109BC(*a1, *a2);
}

void sub_1AE8C2BE4()
{
  sub_1AE512DC4();
}

uint64_t sub_1AE8C2BEC()
{
  return sub_1AE5E8678();
}

void sub_1AE8C2BF4()
{
  sub_1AE54F844();
}

IntelligencePlatform::VectorSearchSimilarityMetric_optional sub_1AE8C2BFC(Swift::String *a1)
{
  return VectorSearchSimilarityMetric.init(rawValue:)(*a1);
}

uint64_t sub_1AE8C2C08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = VectorSearchSimilarityMetric.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AE8C2C2C()
{
  sub_1AE8C4E40();
  return sub_1AE926190();
}

uint64_t sub_1AE8C2C88()
{
  sub_1AE8C4E40();
  return sub_1AE926148();
}

uint64_t sub_1AE8C2CD4()
{
  sub_1AE50BD30();
  return sub_1AE926F94();
}

uint64_t sub_1AE8C2CFC()
{
  sub_1AE50BD30();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8C2D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8C2A9C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE8C2D50()
{
  sub_1AE8C2FDC();
  return sub_1AE926F94();
}

uint64_t sub_1AE8C2D78()
{
  sub_1AE8C2FDC();
  return sub_1AE926FA0();
}

uint64_t sub_1AE8C2DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8C2B48(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE8C2DC8()
{
  sub_1AE50BB68();
  return sub_1AE926F94();
}

uint64_t sub_1AE8C2DF0()
{
  sub_1AE50BB68();
  return sub_1AE926FA0();
}

void SearchMode.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  sub_1AE4FCAE4();
  v1 = v0;
  v3 = v2;
  v4 = sub_1AE501548(&qword_1EEDA5BF0);
  v21 = *(_QWORD *)(v4 - 8);
  v22 = v4;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  v8 = v7 - v6;
  v9 = sub_1AE501548(&qword_1EEDA5BF8);
  v20 = *(_QWORD *)(v9 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F666C();
  v13 = v12 - v11;
  v14 = sub_1AE501548(&qword_1EEDA5C00);
  v23 = *(_QWORD *)(v14 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F666C();
  v18 = v17 - v16;
  v19 = *(_BYTE *)(v1 + 8);
  sub_1AE4F9858(v3, v3[3]);
  sub_1AE50BD30();
  sub_1AE926F4C();
  if ((v19 & 1) != 0)
  {
    sub_1AE8C4FD0();
    sub_1AE4FCEC8();
    sub_1AE926CB8();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v8, v22);
  }
  else
  {
    sub_1AE8C2FDC();
    sub_1AE4FCEC8();
    sub_1AE926CAC();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v13, v9);
  }
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v18, v14);
  sub_1AE4FCE0C();
}

unint64_t sub_1AE8C2FDC()
{
  unint64_t result;

  result = qword_1ED30D9D0;
  if (!qword_1ED30D9D0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E55C, &type metadata for SearchMode.ExhaustiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED30D9D0);
  }
  return result;
}

void sub_1AE8C3018()
{
  SearchMode.encode(to:)();
}

uint64_t SearchMode.description.getter()
{
  uint64_t v0;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
    v2 = 0x284B706F74;
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = 0;
    sub_1AE925F74();
    sub_1AE9263D0();
  }
  sub_1AE925F74();
  return v2;
}

uint64_t VectorSearchEngine.init(db:table:vectorColumnName:keyColumnName:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v9 = 0x6E69646465626D65;
  if (a6)
    v9 = a5;
  *a9 = a3;
  a9[1] = a4;
  v10 = 0xE900000000000067;
  if (a6)
    v10 = a6;
  v11 = 0x6469776F72;
  a9[2] = result;
  a9[3] = a2;
  if (a8)
    v11 = a7;
  a9[4] = v9;
  a9[5] = v10;
  if (a8)
    v12 = a8;
  else
    v12 = 0xE500000000000000;
  a9[6] = v11;
  a9[7] = v12;
  return result;
}

uint64_t VectorSearchEngine.search(for:using:in:filterClause:joinColumnName:)()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  unint64_t v32;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  sub_1AE4FCAE4();
  v46 = v2;
  v47 = v3;
  v4 = v0[1];
  v42 = *v0;
  v43 = v4;
  v5 = v0[3];
  v7 = *v0;
  v6 = v0[1];
  v44 = v0[2];
  v45 = v5;
  v9 = *v8;
  v11 = *(_QWORD *)v10;
  v12 = *(unsigned __int8 *)(v10 + 8);
  v38 = v7;
  v39 = v6;
  v13 = v0[3];
  v40 = v0[2];
  v41 = v13;
  v36 = sub_1AE8C34F4(v14, v15, v16, v17);
  v19 = v18;
  if (qword_1ED319C70 != -1)
    swift_once();
  v20 = sub_1AE925B6C();
  sub_1AE4FB608(v20, (uint64_t)qword_1ED31AD58);
  swift_bridgeObjectRetain_n();
  v21 = sub_1AE925B54();
  v22 = sub_1AE926604();
  if (os_log_type_enabled(v21, v22))
  {
    HIDWORD(v35) = v12;
    v23 = (uint8_t *)swift_slowAlloc();
    *(_QWORD *)&v38 = swift_slowAlloc();
    *(_DWORD *)v23 = 136315138;
    swift_bridgeObjectRetain();
    sub_1AE520ED4(v36, v19, (uint64_t)&v38, v24, v25, v26, v27, v28, v34, v35, v11, v1, v36, v37, v38, *((uint64_t *)&v38 + 1), v39, *((uint64_t *)&v39 + 1), v40,
      *((uint64_t *)&v40 + 1));
    v37 = v29;
    sub_1AE92676C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AE4F2000, v21, v22, "ECR VectorSearch: search command: %s", v23, 0xCu);
    swift_arrayDestroy();
    sub_1AE4F9064();
  }

  swift_bridgeObjectRelease_n();
  if ((v12 & 1) != 0)
  {
    sub_1AE501548(&qword_1EEDA5C08);
    swift_allocObject();
    sub_1AE8C2880(v11, v9);
  }
  else
  {
    sub_1AE501548(&qword_1EEDA5C10);
    swift_allocObject();
    sub_1AE8C2808(v9, *(float *)&v11);
  }
  *(_QWORD *)&v38 = MEMORY[0x1E0DEE9D8];
  v37 = sub_1AE925C98();
  v30 = v43;
  ObjectType = swift_getObjectType();
  MEMORY[0x1E0C80A78](ObjectType);
  sub_1AE924CCC();
  if (v1)
  {
    swift_release();
    sub_1AE4F81B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE4F81B8();
    sub_1AE6260D4((uint64_t)&v42);
    v32 = swift_bridgeObjectRetain();
    v30 = sub_1AE8C20E8(v32, (uint64_t)&v42, &v37);
    sub_1AE4F81B8();
    swift_release();
    sub_1AE4F81B8();
  }
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1AE8C34F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v9;
  BOOL v10;
  uint64_t v12;

  v6 = *(_QWORD *)(v4 + 48);
  v5 = *(_QWORD *)(v4 + 56);
  if (a2 && a4)
  {
    v9 = v6 == 0x6469776F72 && v5 == 0xE500000000000000;
    if (v9 || (sub_1AE926D60() & 1) != 0)
    {
      v10 = v6 == a3 && v5 == a4;
      if (v10 || (sub_1AE926D60() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        sub_1AE925F74();
        swift_bridgeObjectRelease();
        sub_1AE925F74();
        swift_bridgeObjectRetain();
        sub_1AE925F74();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1AE925F74();
        swift_bridgeObjectRelease();
        sub_1AE925F74();
        swift_bridgeObjectRetain();
        sub_1AE925F74();
        swift_bridgeObjectRelease();
        sub_1AE925F74();
        sub_1AE925F74();
      }
      v12 = 0;
      sub_1AE92691C();
      sub_1AE925F74();
      sub_1AE925F74();
      sub_1AE925F74();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      sub_1AE925F74();
      sub_1AE925F74();
    }
    else
    {
      v12 = 0;
      sub_1AE92691C();
      sub_1AE925F74();
      sub_1AE925F74();
      sub_1AE925F74();
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      swift_bridgeObjectRetain();
      sub_1AE925F74();
      swift_bridgeObjectRelease();
      sub_1AE925F74();
      sub_1AE925F74();
      sub_1AE925F74();
    }
    sub_1AE925F74();
  }
  else
  {
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    v12 = 0x205443454C4553;
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
  }
  sub_1AE925F74();
  return v12;
}

uint64_t sub_1AE8C3B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, _QWORD *a8, uint64_t *a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  sqlite3_stmt *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  float v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _DWORD *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  BOOL v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t result;
  _QWORD v72[2];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83[16];
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  sqlite3_stmt **v87;
  _OWORD v88[2];
  uint64_t v89;
  sqlite3_stmt *v90[3];

  v10 = v9;
  v76 = a8;
  v81 = a4;
  v90[1] = *(sqlite3_stmt **)MEMORY[0x1E0C80C00];
  v17 = sub_1AE924FCC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v78 = (char *)v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1AE501548(&qword_1EED94860);
  MEMORY[0x1E0C80A78](v20);
  v80 = (uint64_t)v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1AE924A20();
  MEMORY[0x1E0C80A78](v22);
  v79 = (char *)v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90[0] = 0;
  v77 = a1;
  v84 = a1;
  v85 = a2;
  v86 = a3;
  v87 = v90;
  sub_1AE8C22D0((uint64_t)sub_1AE8C4EC4, (uint64_t)v83, a2, a3);
  v24 = v90[0];
  v25 = sqlite3_step(v90[0]);
  if ((_DWORD)v25 == 100)
  {
    v72[0] = a2;
    v72[1] = a3;
    v73 = v9;
    v74 = v18;
    v75 = v17;
    while (1)
    {
      v27 = sub_1AE926E8C();
      v28 = sqlite3_column_bytes(v24, 1);
      if (!sqlite3_column_blob(v24, 1))
      {
        *(_QWORD *)&v88[0] = 0;
        *((_QWORD *)&v88[0] + 1) = 0xE000000000000000;
        sub_1AE92691C();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v88[0] = 0xD00000000000001DLL;
        *((_QWORD *)&v88[0] + 1) = 0x80000001AE98ACD0;
        swift_bridgeObjectRetain();
        sub_1AE925F74();
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      v29 = v28 / 4;
      v30 = *(_QWORD *)(a5 + 16);
      if (v30 != v29)
        break;
      if (a6)
      {
        cblas_sdot_NEWLAPACK();
        if (a6 == 1)
        {
          v32 = v31.n128_f32[0];
          cblas_sdot_NEWLAPACK();
          v34 = v33;
          cblas_sdot_NEWLAPACK();
          v31.n128_f32[0] = sqrtf((float)(v34 + v31.n128_f32[0]) - (float)(v32 + v32));
        }
      }
      else
      {
        cblas_sdot_NEWLAPACK();
        v36 = v35;
        cblas_snrm2_NEWLAPACK();
        v38 = v37;
        cblas_snrm2_NEWLAPACK();
        v31.n128_f32[0] = v36 / (float)((float)(v38 * v31.n128_f32[0]) + 0.00000011921);
      }
      *(_QWORD *)&v88[0] = v27;
      (*(void (**)(_OWORD *, __n128))(*(_QWORD *)a7 + 104))(v88, v31);
      v25 = sqlite3_step(v24);
      if ((_DWORD)v25 != 100)
      {
        v17 = v75;
        v18 = v74;
        v10 = v73;
        goto LABEL_11;
      }
    }
    *(_QWORD *)&v88[0] = 0;
    *((_QWORD *)&v88[0] + 1) = 0xE000000000000000;
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v88[0] = 0xD00000000000001BLL;
    *((_QWORD *)&v88[0] + 1) = 0x80000001AE98ACF0;
    v82 = v30;
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    v82 = v29;
    sub_1AE926D18();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
LABEL_33:
    v60 = v88[0];
    sub_1AE8C4F24();
    swift_allocError();
    *(_OWORD *)v61 = v60;
    *(_BYTE *)(v61 + 16) = 1;
    goto LABEL_34;
  }
LABEL_11:
  if ((_DWORD)v25 != 101)
  {
    sub_1AE924A08();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v80, 1, 1, v17);
    sub_1AE924C30();
    sub_1AE585700(&qword_1EED9C218, (uint64_t (*)(uint64_t))MEMORY[0x1E0D23CE0], MEMORY[0x1E0D23CF0]);
    swift_allocError();
    swift_bridgeObjectRetain();
    sub_1AE924C00();
LABEL_34:
    swift_willThrow();
    return sqlite3_finalize(v90[0]);
  }
  v73 = v10;
  v74 = v18;
  v75 = v17;
  v39 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a7 + 96))(v25, v26);
  v40 = MEMORY[0x1E0DEE9D8];
  v41 = (_QWORD *)sub_1AE925C98();
  v42 = *(_QWORD *)(v39 + 16);
  if (!v42)
  {
LABEL_24:
    *v76 = v41;
    swift_bridgeObjectRelease();
    v55 = *(_QWORD *)(v39 + 16);
    if (v55)
    {
      *(_QWORD *)&v88[0] = v40;
      sub_1AE521CF0();
      v56 = *(_QWORD *)&v88[0];
      v57 = *(_QWORD *)(*(_QWORD *)&v88[0] + 16);
      v58 = 32;
      do
      {
        v59 = *(_QWORD *)(v39 + v58);
        *(_QWORD *)&v88[0] = v56;
        if (v57 >= *(_QWORD *)(v56 + 24) >> 1)
        {
          sub_1AE521CF0();
          v56 = *(_QWORD *)&v88[0];
        }
        *(_QWORD *)(v56 + 16) = v57 + 1;
        *(_QWORD *)(v56 + 8 * v57 + 32) = v59;
        v58 += 16;
        ++v57;
        --v55;
      }
      while (v55);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v56 = MEMORY[0x1E0DEE9D8];
    }
    sub_1AE92508C();
    v62 = *(_QWORD *)(v81 + 48) == 0x6469776F72 && *(_QWORD *)(v81 + 56) == 0xE500000000000000;
    if (v62 || (sub_1AE926D60() & 1) != 0)
    {
      *(_QWORD *)&v88[0] = 0;
      *((_QWORD *)&v88[0] + 1) = 0xE000000000000000;
      sub_1AE92691C();
      swift_bridgeObjectRelease();
      v63 = 0xD000000000000015;
      v64 = 0x80000001AE98ACB0;
    }
    else
    {
      *(_QWORD *)&v88[0] = 0;
      *((_QWORD *)&v88[0] + 1) = 0xE000000000000000;
      sub_1AE92691C();
      swift_bridgeObjectRelease();
      v63 = 0x2A205443454C4553;
      v64 = 0xEE00204D4F524620;
    }
    *(_QWORD *)&v88[0] = v63;
    *((_QWORD *)&v88[0] + 1) = v64;
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    swift_bridgeObjectRetain();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    sub_1AE92526C();
    *(_QWORD *)&v88[0] = v56;
    sub_1AE501548(&qword_1EED9D860);
    sub_1AE8C4EE0();
    v65 = v78;
    sub_1AE924FD8();
    v89 = 0;
    memset(v88, 0, sizeof(v88));
    v66 = v73;
    v67 = sub_1AE925254();
    v68 = v75;
    v69 = v74;
    if (v66)
    {
      swift_bridgeObjectRelease();
      sub_1AE52FBE8((uint64_t)v88, &qword_1EED94840);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v65, v68);
    }
    else
    {
      v70 = v67;
      swift_bridgeObjectRelease();
      sub_1AE52FBE8((uint64_t)v88, &qword_1EED94840);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v65, v68);
      *a9 = v70;
      swift_bridgeObjectRelease();
    }
    return sqlite3_finalize(v90[0]);
  }
  swift_bridgeObjectRetain();
  v43 = (_DWORD *)(v39 + 40);
  while (1)
  {
    v44 = *((_QWORD *)v43 - 1);
    v45 = *v43;
    swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v88[0] = v41;
    v46 = sub_1AE53F5F0(v44);
    if (__OFADD__(v41[2], (v47 & 1) == 0))
    {
      __break(1u);
LABEL_48:
      __break(1u);
    }
    v48 = v46;
    v49 = v47;
    sub_1AE501548(&qword_1EEDA5C40);
    if ((sub_1AE926A54() & 1) == 0)
      goto LABEL_18;
    v50 = sub_1AE53F5F0(v44);
    if ((v49 & 1) != (v51 & 1))
      break;
    v48 = v50;
LABEL_18:
    v41 = *(_QWORD **)&v88[0];
    if ((v49 & 1) != 0)
    {
      *(_DWORD *)(*(_QWORD *)(*(_QWORD *)&v88[0] + 56) + 4 * v48) = v45;
    }
    else
    {
      *(_QWORD *)(*(_QWORD *)&v88[0] + 8 * (v48 >> 6) + 64) |= 1 << v48;
      *(_QWORD *)(v41[6] + 8 * v48) = v44;
      *(_DWORD *)(v41[7] + 4 * v48) = v45;
      v52 = v41[2];
      v53 = __OFADD__(v52, 1);
      v54 = v52 + 1;
      if (v53)
        goto LABEL_48;
      v41[2] = v54;
    }
    v43 += 4;
    swift_bridgeObjectRelease();
    if (!--v42)
    {
      swift_bridgeObjectRelease();
      v40 = MEMORY[0x1E0DEE9D8];
      goto LABEL_24;
    }
  }
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE8C44E0@<X0>(const char *a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, sqlite3_stmt **a4@<X4>, _DWORD *a5@<X8>)
{
  sqlite3 *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v10 = (sqlite3 *)sub_1AE925458();
  if ((a3 & 0x1000000000000000) != 0)
  {
    v13 = sub_1AE925FA4();
    if (v13 < (uint64_t)0xFFFFFFFF80000000)
      __break(1u);
    v11 = v13;
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
    {
LABEL_6:
      v11 = HIBYTE(a3) & 0xF;
      goto LABEL_7;
    }
    v11 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 > 0x7FFFFFFF)
  {
    __break(1u);
    goto LABEL_6;
  }
LABEL_7:
  result = sqlite3_prepare_v2(v10, a1, v11, a4, 0);
  *a5 = result;
  return result;
}

uint64_t sub_1AE8C4594@<X0>(uint64_t *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t result;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  uint64_t v59[6];
  _QWORD *v60;

  v54 = sub_1AE501548((uint64_t *)&unk_1ED30EC90);
  v5 = *(_QWORD *)(v54 - 8);
  v6 = MEMORY[0x1E0C80A78](v54);
  v53 = (_QWORD *)((char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x1E0C80A78](v6);
  v52 = (_QWORD *)((char *)v46 - v9);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v46 - v10);
  sub_1AE571CFC();
  if (!v2)
  {
    sub_1AE516370(v12, *a1);
    if ((v13 & 0x100000000) != 0)
    {
      result = 0;
      LODWORD(v14) = 0;
    }
    else
    {
      v14 = v13;
      v15 = (_QWORD *)swift_retain();
      v16 = sub_1AE8C240C(v15);
      sub_1AE501548(&qword_1EED9C208);
      v17 = (_QWORD *)sub_1AE925C98();
      v18 = *(_QWORD *)(v16 + 16);
      if (v18)
      {
        v47 = v14;
        v48 = 0;
        v19 = v16 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
        v20 = *(_QWORD *)(v5 + 72);
        v49 = a2;
        v50 = v20;
        v46[1] = v16;
        swift_bridgeObjectRetain();
        v51 = v11;
        while (1)
        {
          v56 = v19;
          v57 = v18;
          sub_1AE64DBE0(v19, (uint64_t)v11);
          v21 = v54;
          v22 = *(int *)(v54 + 48);
          v23 = v52;
          v24 = (char *)v52 + v22;
          v25 = (char *)v11 + v22;
          v27 = *v11;
          v26 = v11[1];
          *v52 = *v11;
          v23[1] = v26;
          v28 = sub_1AE924C60();
          v29 = *(_QWORD *)(v28 - 8);
          v30 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
          v55 = v24;
          v30(v24, v25, v28);
          v31 = *(int *)(v21 + 48);
          v32 = v53;
          v33 = (char *)v53 + v31;
          *v53 = v27;
          v32[1] = v26;
          v30((char *)v32 + v31, v25, v28);
          v59[3] = v28;
          v59[4] = MEMORY[0x1E0D23D68];
          v34 = sub_1AE52F6A8(v59);
          (*(void (**)(uint64_t *, char *, uint64_t))(v29 + 32))(v34, v33, v28);
          sub_1AE64DBA0((uint64_t)v59, (uint64_t)v58, &qword_1EED9C208);
          swift_bridgeObjectRetain();
          swift_isUniquelyReferenced_nonNull_native();
          v60 = v17;
          v35 = sub_1AE536EDC(v27, v26);
          if (__OFADD__(v17[2], (v36 & 1) == 0))
            break;
          v37 = v35;
          v38 = v36;
          sub_1AE501548(&qword_1EEDA5C38);
          if ((sub_1AE926A54() & 1) != 0)
          {
            v39 = sub_1AE536EDC(v27, v26);
            if ((v38 & 1) != (v40 & 1))
              goto LABEL_20;
            v37 = v39;
          }
          v17 = v60;
          if ((v38 & 1) != 0)
          {
            sub_1AE8C4E7C((uint64_t)v58, v60[7] + 40 * v37);
          }
          else
          {
            v60[(v37 >> 6) + 8] |= 1 << v37;
            v41 = (uint64_t *)(v17[6] + 16 * v37);
            *v41 = v27;
            v41[1] = v26;
            sub_1AE64DBA0((uint64_t)v58, v17[7] + 40 * v37, &qword_1EED9C208);
            v42 = v17[2];
            v43 = __OFADD__(v42, 1);
            v44 = v42 + 1;
            if (v43)
              goto LABEL_19;
            v17[2] = v44;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v55, v28);
          v11 = v51;
          sub_1AE52FBE8((uint64_t)v51, (uint64_t *)&unk_1ED30EC90);
          v19 = v56 + v50;
          v18 = v57 - 1;
          if (v57 == 1)
          {
            swift_bridgeObjectRelease();
            a2 = v49;
            LODWORD(v14) = v47;
            goto LABEL_15;
          }
        }
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        sub_1AE926DE4();
        __break(1u);
        goto LABEL_21;
      }
LABEL_15:
      swift_bridgeObjectRelease();
      sub_1AE92526C();
      result = sub_1AE925284();
    }
    *(_QWORD *)a2 = result;
    *(_DWORD *)(a2 + 8) = v14;
    return result;
  }
LABEL_21:
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

_QWORD *sub_1AE8C4990(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr))
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;

  if (a1)
  {
    result = a3(&v5);
    if (!v3)
      return (_QWORD *)v5;
  }
  else
  {
    result = ((_QWORD *(*)(uint64_t *__return_ptr, _QWORD, _QWORD))a3)((uint64_t *)((char *)&v5 + 4), 0, 0);
    if (!v3)
      return (_QWORD *)HIDWORD(v5);
  }
  return result;
}

uint64_t sub_1AE8C49E0(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE8C3B10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD **)(v1 + 64), *(uint64_t **)(v1 + 72));
}

unint64_t sub_1AE8C4A18()
{
  unint64_t result;

  result = qword_1EEDA5C18;
  if (!qword_1EEDA5C18)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for VectorSearchSimilarityMetric, &type metadata for VectorSearchSimilarityMetric);
    atomic_store(result, (unint64_t *)&qword_1EEDA5C18);
  }
  return result;
}

void type metadata accessor for VectorSearchError()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for VectorSearchSimilarityMetric(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE8C4AAC + 4 * byte_1AE96E075[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE8C4AE0 + 4 * byte_1AE96E070[v4]))();
}

uint64_t sub_1AE8C4AE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8C4AE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8C4AF0);
  return result;
}

uint64_t sub_1AE8C4AFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8C4B04);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE8C4B08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8C4B10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for VectorSearchSimilarityMetric()
{
  sub_1AE4F67D4();
}

uint64_t getEnumTagSinglePayload for SearchMode(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AE8C4BAC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

void type metadata accessor for SearchMode()
{
  sub_1AE4F67D4();
}

void type metadata accessor for VectorSearchEngine()
{
  sub_1AE4F67D4();
}

ValueMetadata *type metadata accessor for SearchMode.CodingKeys()
{
  return &type metadata for SearchMode.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchMode.ExhaustiveCodingKeys()
{
  return &type metadata for SearchMode.ExhaustiveCodingKeys;
}

ValueMetadata *type metadata accessor for SearchMode.TopKCodingKeys()
{
  return &type metadata for SearchMode.TopKCodingKeys;
}

unint64_t sub_1AE8C4C04()
{
  unint64_t result;

  result = qword_1EEDA5C20;
  if (!qword_1EEDA5C20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E3C4, &type metadata for SearchMode.TopKCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5C20);
  }
  return result;
}

unint64_t sub_1AE8C4C44()
{
  unint64_t result;

  result = qword_1EEDA5C28;
  if (!qword_1EEDA5C28)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E47C, &type metadata for SearchMode.ExhaustiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5C28);
  }
  return result;
}

unint64_t sub_1AE8C4C84()
{
  unint64_t result;

  result = qword_1EEDA5C30;
  if (!qword_1EEDA5C30)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E534, &type metadata for SearchMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5C30);
  }
  return result;
}

unint64_t sub_1AE8C4CC4()
{
  unint64_t result;

  result = qword_1ED319220;
  if (!qword_1ED319220)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E3EC, &type metadata for SearchMode.ExhaustiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED319220);
  }
  return result;
}

unint64_t sub_1AE8C4D04()
{
  unint64_t result;

  result = qword_1ED319218;
  if (!qword_1ED319218)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E414, &type metadata for SearchMode.ExhaustiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED319218);
  }
  return result;
}

unint64_t sub_1AE8C4D44()
{
  unint64_t result;

  result = qword_1ED319208;
  if (!qword_1ED319208)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E334, &type metadata for SearchMode.TopKCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED319208);
  }
  return result;
}

unint64_t sub_1AE8C4D84()
{
  unint64_t result;

  result = qword_1ED319200;
  if (!qword_1ED319200)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E35C, &type metadata for SearchMode.TopKCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED319200);
  }
  return result;
}

unint64_t sub_1AE8C4DC4()
{
  unint64_t result;

  result = qword_1ED3191F8;
  if (!qword_1ED3191F8)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E4A4, &type metadata for SearchMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3191F8);
  }
  return result;
}

unint64_t sub_1AE8C4E04()
{
  unint64_t result;

  result = qword_1ED3191F0;
  if (!qword_1ED3191F0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E4CC, &type metadata for SearchMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3191F0);
  }
  return result;
}

unint64_t sub_1AE8C4E40()
{
  unint64_t result;

  result = qword_1ED30D9F0;
  if (!qword_1ED30D9F0)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for VectorSearchSimilarityMetric, &type metadata for VectorSearchSimilarityMetric);
    atomic_store(result, (unint64_t *)&qword_1ED30D9F0);
  }
  return result;
}

uint64_t sub_1AE8C4E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1EED9C208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE8C4EC4@<X0>(const char *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1AE8C44E0(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(sqlite3_stmt ***)(v2 + 40), a2);
}

unint64_t sub_1AE8C4EE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEDA5C48;
  if (!qword_1EEDA5C48)
  {
    v1 = sub_1AE523CF0(&qword_1EED9D860);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EEDA5C48);
  }
  return result;
}

unint64_t sub_1AE8C4F24()
{
  unint64_t result;

  result = qword_1EEDA5C50;
  if (!qword_1EEDA5C50)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for VectorSearchError, &type metadata for VectorSearchError);
    atomic_store(result, (unint64_t *)&qword_1EEDA5C50);
  }
  return result;
}

BOOL sub_1AE8C4F60(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1AE8C28E0(*(float *)(a1 + 8), *(float *)(a2 + 8), *(_QWORD *)a1, *(_QWORD *)a2, a3);
}

_QWORD *sub_1AE8C4F7C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
    *a1 = v5;
  return result;
}

uint64_t sub_1AE8C4FB8()
{
  return swift_deallocObject();
}

BOOL sub_1AE8C4FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AE8C4F60(a1, a2, *(_BYTE *)(v2 + 16));
}

unint64_t sub_1AE8C4FD0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 81) = 1;
  return sub_1AE50BB68();
}

uint64_t dispatch thunk of ViewReadonlyGRDBDatabaseProvider.grdbDatabase(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1AE8C4FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  sub_1AE4F9858((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  v1 = sub_1AE5008D4();
  return v2(v1);
}

uint64_t sub_1AE8C503C(void *a1, uint64_t (*a2)(id))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  os_unfair_lock_s *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;

  v6 = *(_QWORD *)(v2 + qword_1EEDA5A48);
  v7 = *(os_unfair_lock_s **)(v6 + 24);
  v8 = a1;
  os_unfair_lock_lock(v7);
  swift_beginAccess();
  v9 = *(id *)(v6 + 16);
  v10 = objc_msgSend(v9, sel_objectForKey_, v8);
  if (v10)
  {
    v4 = (uint64_t)v10;
  }
  else
  {
    v11 = a2(v8);
    if (!v3)
    {
      v4 = v11;
      objc_msgSend(v9, sel_setObject_forKey_, v11, v8);
    }
  }

  os_unfair_lock_unlock(v7);
  return v4;
}

uint64_t sub_1AE8C5138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  sub_1AE4F9858((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
  v1 = sub_1AE5008D4();
  return v2(v1);
}

uint64_t sub_1AE8C5180()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1AE502210();
  v4 = v0[15];
  v5 = v0[16];
  sub_1AE4F9858(v0 + 12, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(v3, v2, v1, v4, v5);
}

uint64_t sub_1AE8C51E8()
{
  uint64_t v0;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 56);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 96);
  return v0;
}

uint64_t sub_1AE8C5214()
{
  sub_1AE8C51E8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ViewDatabaseInstances()
{
  return objc_opt_self();
}

uint64_t sub_1AE8C5254()
{
  return sub_1AE8C5138();
}

uint64_t sub_1AE8C5274()
{
  return sub_1AE8C4FF4();
}

uint64_t sub_1AE8C5294()
{
  return sub_1AE8C5180();
}

id sub_1AE8C52B4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  os_unfair_lock_s *v7;
  id v8;
  id v9;
  id v10;
  void *v11;

  v4 = *(_QWORD *)(v1 + 16);
  result = objc_msgSend(a1, sel_viewArtifactURL);
  if (result)
  {
    v6 = *(_QWORD *)(v4 + qword_1EEDA5A48);
    v7 = *(os_unfair_lock_s **)(v6 + 24);
    v8 = result;
    os_unfair_lock_lock(v7);
    sub_1AE501328();
    v9 = *(id *)(v6 + 16);
    v10 = objc_msgSend(v9, sel_objectForKey_, v8);
    if (v10)
    {
      v3 = v10;
    }
    else
    {
      sub_1AE8C53B4(v8);
      if (!v2)
      {
        v3 = v11;
        objc_msgSend(v9, sel_setObject_forKey_, v11, v8);
      }
    }

    os_unfair_lock_unlock(v7);
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1AE8C53B4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  _BYTE *v7;
  id v8;
  _BYTE *v9;
  _QWORD v10[2];

  v10[1] = *MEMORY[0x1E0C80C00];
  v1 = sub_1AE8C5D50(a1);
  if (v2)
  {
    v3 = v1;
    v4 = v2;
    v10[0] = 0;
    v5 = objc_allocWithZone(MEMORY[0x1E0D81620]);
    if (!sub_1AE8C5CD4(v3, v4, 3473409, (uint64_t)v10, 0))
    {
      v6 = (void *)v10[0];
      if (!v10[0])
      {
        sub_1AE8C5DB0();
        swift_allocError();
        *v7 = 1;
      }
      v8 = v6;
      swift_willThrow();

    }
  }
  else
  {
    sub_1AE8C5DB0();
    swift_allocError();
    *v9 = 0;
    swift_willThrow();
  }
}

uint64_t type metadata accessor for ViewDatabasePasProvider()
{
  return objc_opt_self();
}

id sub_1AE8C54F4(void *a1)
{
  return sub_1AE8C52B4(a1);
}

id sub_1AE8C5514(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  id result;
  void *v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  v5 = *(_QWORD *)(v1 + 16);
  result = objc_msgSend(a1, sel_viewArtifactURL);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v5 + qword_1EEDA5A48);
    v9 = *(os_unfair_lock_s **)(v8 + 24);
    swift_unknownObjectRetain_n();
    v10 = v7;
    os_unfair_lock_lock(v9);
    sub_1AE501328();
    v11 = *(void **)(v8 + 16);
    swift_unknownObjectRetain();
    v12 = v11;
    v13 = v3;
    v14 = sub_1AE8BFBDC(v12, (uint64_t)v10, a1);

    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v9);
    swift_unknownObjectRelease_n();

    if (v13)
      return (id)MEMORY[0x1E0D23D30];
    else
      return (id)v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AE8C5614(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  sub_1AE925C08();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F9024();
  v44 = v4;
  sub_1AE501548(&qword_1ED318B58);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F666C();
  v8 = v7 - v6;
  v9 = sub_1AE925BD8();
  v46 = *(_QWORD *)(v9 - 8);
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F686C();
  v41 = v11;
  MEMORY[0x1E0C80A78](v12);
  v45 = (char *)&v41 - v13;
  v47 = sub_1AE9254C4();
  v14 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  sub_1AE4F666C();
  v17 = (_QWORD *)(v16 - v15);
  v18 = sub_1AE924BF4();
  v42 = *(_QWORD *)(v18 - 8);
  v43 = v18;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE4F686C();
  v50 = v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v41 - v22;
  v24 = sub_1AE924780();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  sub_1AE4F666C();
  v28 = v27 - v26;
  v29 = objc_msgSend(a2, sel_viewArtifactURL);
  sub_1AE924744();

  v30 = sub_1AE92475C();
  v48 = v31;
  v32 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v33 = v9;
  v32(v28, v24);
  sub_1AE924BE8();
  sub_1AE924BB8();
  sub_1AE924BDC();
  *v17 = 0x4059000000000000;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v17, *MEMORY[0x1E0D24878], v47);
  sub_1AE924BD0();
  qos_class_self();
  sub_1AE925BCC();
  v34 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v8, 1, v9);
  v49 = v30;
  v36 = v45;
  v35 = v46;
  if (v34 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v45, *MEMORY[0x1E0DEF520], v33);
    sub_1AE8C5E08(v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v45, v8, v33);
  }
  v37 = v43;
  v38 = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v41, v36, v33);
  sub_1AE925BFC();
  sub_1AE924BC4();
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v50, v23, v37);
  sub_1AE924C54();
  swift_allocObject();
  v39 = sub_1AE924C3C();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v33);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v37);
  return v39;
}

uint64_t sub_1AE8C5958()
{
  type metadata accessor for UnicodeWrapperTokenizer();
  sub_1AE8C5E48();
  return sub_1AE925470();
}

uint64_t type metadata accessor for ViewDatabaseGRDBProvider()
{
  return objc_opt_self();
}

id sub_1AE8C59C4(void *a1)
{
  return sub_1AE8C5514(a1);
}

uint64_t sub_1AE8C59E4()
{
  void *v0;
  uint64_t v1;

  sub_1AE502210();
  v0 = (void *)sub_1AE924708();
  v1 = sub_1AE8C503C(v0, (uint64_t (*)(id))sub_1AE8C5DEC);

  return v1;
}

char *sub_1AE8C5A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a4;
  v6 = sub_1AE924780();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v27 - v11;
  v13 = sub_1AE9255D8();
  v28 = *(_QWORD *)(v13 - 8);
  v29 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v27 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v27 - v20;
  if (a2 == 0xD000000000000016 && a3 == 0x80000001AE98AF80 || (sub_1AE926D60() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, v30, v6);
    v22 = v31;
    sub_1AE9255CC();
    if (v22)
      return v16;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v30, v6);
    v23 = v31;
    sub_1AE9255CC();
    v21 = v16;
    if (v23)
      return v16;
  }
  v25 = v28;
  v24 = v29;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v19, v21, v29);
  sub_1AE9255B4();
  swift_allocObject();
  v16 = (char *)sub_1AE925578();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v21, v24);
  return v16;
}

uint64_t type metadata accessor for VectorDatabaseClientProvider()
{
  return objc_opt_self();
}

uint64_t sub_1AE8C5CB4()
{
  return sub_1AE8C59E4();
}

id sub_1AE8C5CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v9;
  id v10;

  v9 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v5, sel_initWithFilename_flags_error_errorHandler_, v9, a3, a4, a5);

  swift_unknownObjectRelease();
  return v10;
}

uint64_t sub_1AE8C5D50(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_path);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1AE925E3C();

  return v3;
}

unint64_t sub_1AE8C5DB0()
{
  unint64_t result;

  result = qword_1EEDA5C58;
  if (!qword_1EEDA5C58)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E854, &type metadata for ViewDatabaseInstances.CacheError);
    atomic_store(result, (unint64_t *)&qword_1EEDA5C58);
  }
  return result;
}

char *sub_1AE8C5DEC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1AE8C5A64(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1AE8C5E08(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1ED318B58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1AE8C5E48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED318E30[0];
  if (!qword_1ED318E30[0])
  {
    v1 = type metadata accessor for UnicodeWrapperTokenizer();
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for UnicodeWrapperTokenizer, v1);
    atomic_store(result, qword_1ED318E30);
  }
  return result;
}

uint64_t *sub_1AE8C5E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *);
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v51 = a6;
  v52 = a3;
  v48 = a2;
  v49 = a4;
  v54 = a9;
  v55 = a8;
  v53 = a10;
  v11 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  sub_1AE4F9024();
  v50 = v12;
  v14 = *(_QWORD *)(v13 - 8);
  v15 = v13;
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v46 - v21;
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v20);
  v27 = (char *)&v46 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v46 - v28;
  v30 = *(void (**)(char *))(v24 + 32);
  v46 = v31;
  v30((char *)&v46 - v28);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
  v47 = v14;
  v33 = v15;
  v32(v22, v48, v15);
  v49 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v27, v29, a5);
  v34 = v19;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v22, v33);
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v36 = v11;
  v38 = v50;
  v37 = v51;
  v39 = v52;
  v35(v50, v52, v51);
  v40 = (uint64_t)v34;
  v41 = v38;
  v42 = v46;
  v43 = v37;
  v44 = sub_1AE8C60B4((uint64_t)v27, v40, v41, v49, v46, v37, v33, v55, v54, v53);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v39, v43);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v33);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v29, v42);
  return v44;
}

uint64_t *sub_1AE8C60B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a5;
  v23 = a8;
  v17 = sub_1AE52F6A8((uint64_t *)&v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v17, a1, a5);
  a4[5] = a7;
  a4[6] = a10;
  v18 = sub_1AE52F6A8(a4 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(v18, a2, a7);
  a4[15] = a6;
  a4[16] = a9;
  v19 = sub_1AE52F6A8(a4 + 12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v19, a3, a6);
  sub_1AE50AF58(&v21, (uint64_t)(a4 + 7));
  return a4;
}

uint64_t storeEnumTagSinglePayload for ViewDatabaseInstances.CacheError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE8C61D0 + 4 * byte_1AE96E655[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE8C6204 + 4 * byte_1AE96E650[v4]))();
}

uint64_t sub_1AE8C6204(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8C620C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8C6214);
  return result;
}

uint64_t sub_1AE8C6220(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8C6228);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE8C622C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8C6234(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ViewDatabaseInstances.CacheError()
{
  return &type metadata for ViewDatabaseInstances.CacheError;
}

unint64_t sub_1AE8C6254()
{
  unint64_t result;

  result = qword_1EEDA5C60;
  if (!qword_1EEDA5C60)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E82C, &type metadata for ViewDatabaseInstances.CacheError);
    atomic_store(result, (unint64_t *)&qword_1EEDA5C60);
  }
  return result;
}

_QWORD *ViewService.subgraphView(name:tableName:batchSize:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  void *v10;
  void *v11;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(id, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  id v26[2];

  v26[1] = *(id *)MEMORY[0x1E0C80C00];
  v10 = *(void **)((char *)v5 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  v11 = (void *)sub_1AE925E18();
  v26[0] = 0;
  v12 = objc_msgSend(v10, sel_requestAssertionForViewName_error_, v11, v26);

  v13 = v26[0];
  if (v12)
  {
    v25 = a3;
    v14 = *(_QWORD **)((char *)v5 + OBJC_IVAR___GDSwiftViewService_databaseCache);
    v15 = v14[5];
    v16 = v14[6];
    v5 = sub_1AE4F9858(v14 + 2, v15);
    v17 = *(uint64_t (**)(id, uint64_t, uint64_t))(v16 + 8);
    v18 = v13;
    v19 = v17(v12, v15, v16);
    if (v6)
    {
      swift_unknownObjectRelease();
    }
    else
    {
      v22 = v19;
      v23 = v20;
      type metadata accessor for SubgraphView();
      swift_allocObject();
      v5 = SubgraphView.init(accessAssertion:database:tableName:batchSize:)((uint64_t)v12, v22, v23, v25, (uint64_t)a4, a5);
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    v21 = v26[0];
    sub_1AE509CF8();

    swift_willThrow();
  }
  return v5;
}

id static ViewService.clientService.getter()
{
  if (qword_1ED31C9B0 != -1)
    swift_once();
  return (id)qword_1ED31C9A0;
}

uint64_t ViewService.addressContactResolverEmbeddingView()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD *v9;
  id v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v18[2];

  v3 = v1;
  v18[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1AE924780();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  v6 = *(void **)&v0[OBJC_IVAR___GDSwiftViewService_accessRequester];
  v7 = (void *)sub_1AE925E18();
  v18[0] = 0;
  v8 = objc_msgSend(v6, sel_requestAssertionForViewName_error_, v7, v18);

  if (v8)
  {
    v9 = *(_QWORD **)&v0[OBJC_IVAR___GDSwiftViewService_databaseCache];
    v10 = v18[0];
    v11 = objc_msgSend(v8, sel_viewArtifactURL);
    sub_1AE509300();

    v12 = v9 + 12;
    v13 = v9[15];
    v14 = v9[16];
    sub_1AE4F9858(v12, v13);
    v15 = (*(uint64_t (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v14 + 8))(v2, 0xD000000000000016, 0x80000001AE98AF80, v13, v14);
    if (!v1)
      v3 = v15;
    sub_1AE4F8214();
    sub_1AE4FC6EC(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }
  else
  {
    v16 = v18[0];
    sub_1AE9246B4();
    sub_1AE501AD4();
    sub_1AE4FB928();
  }
  return v3;
}

_QWORD *ViewService.knosisEntitySubgraphService()()
{
  return sub_1AE8C7728(0x7553797469746E65, 0xEE00687061726762, (_QWORD *(*)(_QWORD *__return_ptr))sub_1AE7B4460, (uint64_t (*)(_QWORD *))sub_1AE7AF4E0);
}

void ViewService.entitySimilarityFeatureView.getter()
{
  sub_1AE507D30();
  sub_1AE8C7214(0xD000000000000018);
  sub_1AE4FC530();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewService.reportSQLiteError(for:sqliteErrorCode:)(Swift::String a1, Swift::Int64 sqliteErrorCode)
{
  id v3;
  void *v4;
  unsigned int v5;
  id v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = objc_msgSend(objc_allocWithZone((Class)GDXPCViewService), sel_init);
  v4 = (void *)sub_1AE925E18();
  v7[0] = 0;
  v5 = objc_msgSend(v3, sel_reportSQLiteErrorForViewName_sqliteErrorCode_error_, v4, sqliteErrorCode, v7);

  v6 = v7[0];
  if (!v5)
  {
    sub_1AE507554();

    sub_1AE506FEC();
  }
}

id sub_1AE8C67A4()
{
  objc_class *v0;
  id v1;
  id result;

  v0 = (objc_class *)type metadata accessor for ViewService();
  v1 = objc_msgSend((id)objc_opt_self(), sel_remoteViewAccessRequester);
  swift_getObjectType();
  result = sub_1AE8C79E8((uint64_t)v1, v0);
  qword_1ED31C9A0 = (uint64_t)result;
  return result;
}

id ViewService.__allocating_init(accessRequester:)(uint64_t a1)
{
  objc_class *v1;

  swift_getObjectType();
  return sub_1AE8C79E8(a1, v1);
}

id ViewService.__allocating_init()()
{
  return objc_msgSend(sub_1AE508160(), sel_init);
}

id ViewService.init()()
{
  void *v0;
  objc_class *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  objc_super v6;

  v1 = (objc_class *)sub_1AE4FEA14();
  v2 = qword_1ED31C9B0;
  v3 = v0;
  if (v2 != -1)
    swift_once();
  v4 = qword_1ED31C9A0;
  *(_QWORD *)&v3[OBJC_IVAR___GDSwiftViewService_accessRequester] = *(_QWORD *)(qword_1ED31C9A0
                                                                             + OBJC_IVAR___GDSwiftViewService_accessRequester);
  *(_QWORD *)&v3[OBJC_IVAR___GDSwiftViewService_databaseCache] = *(_QWORD *)(v4
                                                                           + OBJC_IVAR___GDSwiftViewService_databaseCache);
  swift_unknownObjectRetain();
  swift_retain();

  v6.receiver = v3;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id ViewService.init(accessRequester:)(uint64_t a1)
{
  char *v1;

  swift_getObjectType();
  return sub_1AE8C7A1C(a1, v1);
}

id ViewService.__allocating_init(viewAccessRequester:)(uint64_t a1)
{
  sub_1AE508160();
  return ViewService.init(viewAccessRequester:)(a1);
}

id ViewService.init(viewAccessRequester:)(uint64_t a1)
{
  void *v1;
  void *v2;
  objc_class *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  v2 = v1;
  v4 = (objc_class *)sub_1AE4FEA14();
  v5 = qword_1ED31C9B0;
  v6 = v2;
  if (v5 != -1)
    swift_once();
  v7 = qword_1ED31C9A0;
  v8 = OBJC_IVAR___GDSwiftViewService_accessRequester;
  if (a1)
    v9 = a1;
  else
    v9 = swift_unknownObjectRetain();
  *(_QWORD *)&v6[v8] = v9;
  *(_QWORD *)&v6[OBJC_IVAR___GDSwiftViewService_databaseCache] = *(_QWORD *)(v7
                                                                           + OBJC_IVAR___GDSwiftViewService_databaseCache);
  swift_unknownObjectRetain();
  swift_retain();

  v12.receiver = v6;
  v12.super_class = v4;
  v10 = objc_msgSendSuper2(&v12, sel_init);
  swift_unknownObjectRelease();
  return v10;
}

void ViewService.__allocating_init(accessRequester:grdbDatabaseProvider:)(uint64_t a1, uint64_t a2)
{
  sub_1AE508160();
  ViewService.init(accessRequester:grdbDatabaseProvider:)(a1, a2);
  sub_1AE4F6624();
}

id ViewService.init(accessRequester:grdbDatabaseProvider:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  id v19;
  uint64_t v21;
  uint64_t *v22;
  objc_class *ObjectType;
  objc_super v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  uint64_t v28;
  uint64_t v29;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR___GDSwiftViewService_accessRequester] = a1;
  v22 = (uint64_t *)type metadata accessor for ViewDatabaseInstances();
  v6 = type metadata accessor for ViewDatabasePasProvider();
  v7 = sub_1AE4F6738();
  v8 = objc_allocWithZone((Class)sub_1AE501548(&qword_1ED31CBB8));
  v9 = v3;
  swift_unknownObjectRetain();
  *(_QWORD *)(v7 + 16) = objc_msgSend(v8, sel_init);
  sub_1AE57C238(a2, (uint64_t)v27);
  v10 = type metadata accessor for VectorDatabaseClientProvider();
  v11 = sub_1AE4F6738();
  *(_QWORD *)(v11 + 16) = objc_msgSend(objc_allocWithZone((Class)sub_1AE501548(&qword_1ED31C9D0)), (SEL)&selRef_experimentId);
  v13 = v28;
  v12 = v29;
  v14 = sub_1AE595318((uint64_t)v27, v28);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v16);
  v25 = v11;
  v26 = v7;
  swift_retain();
  v18 = sub_1AE8C5E88((uint64_t)&v26, (uint64_t)v16, (uint64_t)&v25, v22, v6, v10, v13, (uint64_t)&off_1E5DBDDD0, (uint64_t)&off_1E5DACD10, v12);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v27);
  swift_release();
  *(_QWORD *)&v9[OBJC_IVAR___GDSwiftViewService_databaseCache] = v18;

  v24.receiver = v9;
  v24.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v24, sel_init);
  swift_unknownObjectRelease();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(a2);
  return v19;
}

id ViewService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_1AE4FEA14();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

GDPersonView __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewService.personView()()
{
  objc_class *v0;
  GDViewAccessAssertion *v1;
  GDSQLGraphObjectRetriever *v2;
  _PASSqliteDatabase *v3;
  GDPersonView result;

  sub_1AE4F6F70();
  sub_1AE4FC530();
  result._db = v3;
  result._personRetriever = v2;
  result._accessAssertion = v1;
  result.super.isa = v0;
  return result;
}

GDDonationView __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewService.donationView()()
{
  objc_class *v0;
  GDViewAccessAssertion *v1;
  _PASSqliteDatabase *v2;
  GDDonationView result;

  sub_1AE50A894();
  sub_1AE4FC530();
  result._db = v2;
  result._accessAssertion = v1;
  result.super.isa = v0;
  return result;
}

GDPageRankView __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewService.pageRankView()()
{
  objc_class *v0;
  GDViewAccessAssertion *v1;
  _PASSqliteDatabase *v2;
  GDPageRankView result;

  sub_1AE4F6F70();
  sub_1AE4FC530();
  result._db = v2;
  result._accessAssertion = v1;
  result.super.isa = v0;
  return result;
}

GDFeatureView __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewService.gdFeatureView()()
{
  objc_class *v0;
  GDViewAccessAssertion *v1;
  _PASSqliteDatabase *v2;
  GDSQLFeatureRetriever *v3;
  GDFeatureView result;

  sub_1AE50A894();
  sub_1AE4FC530();
  result._featureRetriever = v3;
  result._db = v2;
  result._accessAssertion = v1;
  result.super.isa = v0;
  return result;
}

void ViewService.firstPartyLongTermTopicView()()
{
  sub_1AE50A894();
  sub_1AE4FC530();
}

void ViewService.firstPartyShortTermTopicView()()
{
  sub_1AE50A894();
  sub_1AE4FC530();
}

_QWORD *ViewService.autonamingView(viewName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  id v5;

  result = ViewService.subgraphView(name:tableName:batchSize:)(a1, a2, 0x6870617267627573, (void *)0xE800000000000000, 10);
  if (!v2)
  {
    v4 = (uint64_t)result;
    v5 = objc_allocWithZone((Class)type metadata accessor for AutonamingView());
    return AutonamingView.init(subgraph:isForLiveServing:)(v4, 1);
  }
  return result;
}

_QWORD *ViewService.gdSwiftSubgraphViewContext(name:tableName:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  _QWORD *result;
  id v6;

  result = ViewService.subgraphView(name:tableName:batchSize:)(a1, a2, a3, a4, 10);
  if (!v4)
  {
    v6 = objc_allocWithZone((Class)type metadata accessor for _GDSwiftSubgraphViewContext());
    return sub_1AE69AB50();
  }
  return result;
}

void ViewService.featureView.getter()
{
  sub_1AE507D30();
  sub_1AE8C7214(0xD000000000000013);
  sub_1AE4FC530();
}

#error "1AE8C7254: call analysis failed (funcsize=47)"

void ViewService.handleView.getter()
{
  sub_1AE8C7214(0x614D656C646E6168);
  sub_1AE4FC530();
}

void ViewService.languageView.getter()
{
  sub_1AE8C7214(0x65676175676E616CLL);
  sub_1AE4FC530();
}

uint64_t ViewService.entityRelevanceHistoricalFeatureView.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t result;
  id v8;
  id v9;
  id v10[3];

  sub_1AE509DF8();
  v10[2] = *(id *)MEMORY[0x1E0C80C00];
  v3 = *(void **)(v1 + OBJC_IVAR___GDSwiftViewService_accessRequester);
  v4 = (void *)sub_1AE925E18();
  v10[0] = 0;
  v5 = objc_msgSend(v3, sel_requestAssertionForViewName_error_, v4, v10);

  if (v5)
  {
    v6 = v10[0];
    result = sub_1AE5C7978((uint64_t)v5, (uint64_t)v10);
    if (!v2)
    {
      v8 = v10[1];
      *(id *)v0 = v10[0];
      *(_QWORD *)(v0 + 8) = v8;
    }
  }
  else
  {
    v9 = v10[0];
    sub_1AE9246B4();
    sub_1AE501AD4();
    return sub_1AE4FB928();
  }
  return result;
}

void ViewService.phPersonIdentifierMapView()()
{
  sub_1AE507D30();
  sub_1AE8C7538(0xD000000000000015);
  sub_1AE4FC530();
}

void ViewService.muidIdentifierMapView()()
{
  sub_1AE507D30();
  sub_1AE8C7538(0xD000000000000011);
  sub_1AE4FC530();
}

#error "1AE8C7578: call analysis failed (funcsize=47)"

#error "1AE8C7654: call analysis failed (funcsize=57)"

_QWORD *ViewService.knosisIFContextSubgraphService()()
{
  return sub_1AE8C7728(0xD000000000000011, 0x80000001AE98B0B0, (_QWORD *(*)(_QWORD *__return_ptr))sub_1AE7B44AC, (uint64_t (*)(_QWORD *))sub_1AE7AF94C);
}

_QWORD *sub_1AE8C7728(uint64_t a1, uint64_t a2, _QWORD *(*a3)(_QWORD *__return_ptr), uint64_t (*a4)(_QWORD *))
{
  uint64_t v4;
  _QWORD *result;
  _QWORD v7[5];

  result = a3(v7);
  if (!v4)
    return (_QWORD *)a4(v7);
  return result;
}

uint64_t ViewService.entityAliasEuclidEmbeddingView()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD *v9;
  id v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v18[2];

  v3 = v1;
  v18[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1AE924780();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  v6 = *(void **)&v0[OBJC_IVAR___GDSwiftViewService_accessRequester];
  v7 = (void *)sub_1AE925E18();
  v18[0] = 0;
  v8 = objc_msgSend(v6, sel_requestAssertionForViewName_error_, v7, v18);

  if (v8)
  {
    v9 = *(_QWORD **)&v0[OBJC_IVAR___GDSwiftViewService_databaseCache];
    v10 = v18[0];
    v11 = objc_msgSend(v8, sel_viewArtifactURL);
    sub_1AE509300();

    v12 = v9 + 12;
    v13 = v9[15];
    v14 = v9[16];
    sub_1AE4F9858(v12, v13);
    v15 = (*(uint64_t (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v14 + 8))(v2, 0xD000000000000014, 0x80000001AE98B0D0, v13, v14);
    if (!v1)
      v3 = v15;
    sub_1AE4F8214();
    sub_1AE4FC6EC(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }
  else
  {
    v16 = v18[0];
    sub_1AE509CF8();
    sub_1AE501AD4();
    sub_1AE4FB928();
  }
  return v3;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ViewService.reportUnknownError(for:)(Swift::String a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = objc_msgSend(objc_allocWithZone((Class)GDXPCViewService), sel_init);
  v2 = (void *)sub_1AE925E18();
  v5[0] = 0;
  v3 = objc_msgSend(v1, sel_reportUnknownErrorForViewName_error_, v2, v5);

  v4 = v5[0];
  if (!(_DWORD)v3)
  {
    sub_1AE507554();

    sub_1AE506FEC();
  }
}

id sub_1AE8C79E8(uint64_t a1, Class a2)
{
  return sub_1AE8C7A1C(a1, (char *)objc_allocWithZone(a2));
}

id sub_1AE8C7A1C(uint64_t a1, char *a2)
{
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&a2[OBJC_IVAR___GDSwiftViewService_accessRequester] = a1;
  v5 = type metadata accessor for ViewDatabasePasProvider();
  v6 = swift_allocObject();
  v7 = objc_allocWithZone((Class)sub_1AE501548(&qword_1ED31CBB8));
  v8 = a2;
  swift_unknownObjectRetain();
  *(_QWORD *)(v6 + 16) = objc_msgSend(v7, sel_init);
  v9 = type metadata accessor for ViewDatabaseGRDBProvider();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = objc_msgSend(objc_allocWithZone((Class)sub_1AE501548((uint64_t *)&unk_1ED31C730)), sel_init);
  v11 = type metadata accessor for VectorDatabaseClientProvider();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = objc_msgSend(objc_allocWithZone((Class)sub_1AE501548(&qword_1ED31C9D0)), sel_init);
  type metadata accessor for ViewDatabaseInstances();
  v13 = (_QWORD *)swift_allocObject();
  v13[5] = v9;
  v13[6] = &off_1E5DBED78;
  v13[2] = v10;
  v13[15] = v11;
  v13[16] = &off_1E5DACD10;
  v13[12] = v12;
  v13[10] = v5;
  v13[11] = &off_1E5DBDDD0;
  v13[7] = v6;
  *(_QWORD *)&v8[OBJC_IVAR___GDSwiftViewService_databaseCache] = v13;

  v16.receiver = v8;
  v16.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v16, sel_init);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t type metadata accessor for ViewService()
{
  return objc_opt_self();
}

uint64_t method lookup function for ViewService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ViewService.__allocating_init(accessRequester:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ViewService.__allocating_init(viewAccessRequester:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ViewService.__allocating_init(accessRequester:grdbDatabaseProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_1AE8C7BFC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_1AE509358();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1AE4F6624();
}

ValueMetadata *type metadata accessor for ViewError()
{
  return &type metadata for ViewError;
}

void sub_1AE8C7C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v92 = a3 - 1;
  if (a3 < 1)
  {
    sub_1AE8CC4D4();
    sub_1AE4F6778();
    sub_1AE8CC770();
    *v9 = v10;
    v9[1] = v11;
    sub_1AE505700(v12, (uint64_t)v9);
LABEL_75:
    sub_1AE8CC6F4();
    return;
  }
  v4 = v3;
  v6 = (_QWORD *)(a1 + 32);
  sub_1AE4FB9BC();
  v89 = a1;
  if (*(_QWORD *)(a1 + 32))
  {
    v8 = *(_QWORD *)(a1 + 32);
  }
  else
  {
    type metadata accessor for KnosisQueryParam();
    v8 = sub_1AE925C98();
  }
  v93 = v8 + 64;
  sub_1AE4F95DC();
  v15 = v14 & v13;
  sub_1AE8CC764();
  v94 = v16;
  swift_bridgeObjectRetain();
  v17 = 0;
  v96 = v8;
  v97 = a2;
  v95 = v6;
  if (!v15)
    goto LABEL_8;
LABEL_7:
  sub_1AE508064();
  for (i = v18 | (v17 << 6); ; i = v24 + (v17 << 6))
  {
    v25 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * i);
    v26 = *v25;
    v27 = v25[1];
    sub_1AE4FB9BC();
    v28 = *v6;
    if (!*v6)
      goto LABEL_84;
    v29 = *(_QWORD *)(v28 + 16);
    sub_1AE4FB930();
    if (!v29)
      goto LABEL_83;
    v98 = v15;
    v99 = v17;
    sub_1AE4FB930();
    v30 = sub_1AE50930C();
    if ((v31 & 1) == 0)
      goto LABEL_82;
    v32 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v30);
    sub_1AE8CC74C();
    sub_1AE4FCFE8();
    sub_1AE4F66E8();
    sub_1AE4FB9BC();
    v33 = *(_QWORD **)(v32 + 16);
    if (v33[2])
    {
      v35 = v33[4];
      v34 = v33[5];
      sub_1AE4F6708();
      v36 = sub_1AE8CC45C(v35, v34);
      if (*(_QWORD *)(a2 + 16) && (v37 = sub_1AE8CC89C(v36), (v38 & 1) != 0))
      {
        v39 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v37);
        sub_1AE5069B0();
      }
      else
      {
        v39 = 0;
      }
      sub_1AE4F6648();
      sub_1AE8CC888();
      v40 = sub_1AE926004();
      sub_1AE4F76D8();
      if ((v40 & 1) == 0)
      {
        sub_1AE4F66E8();
        sub_1AE4FFCA0();
        v6 = v95;
LABEL_38:
        v8 = v96;
        goto LABEL_51;
      }
      v6 = v95;
      v8 = v96;
      if (v39)
      {
        sub_1AE4FB9BC();
        if (*(_QWORD *)(v32 + 24))
        {
          sub_1AE4FB9BC();
          v41 = *v95;
          if (!*v95)
            goto LABEL_85;
          if (!*(_QWORD *)(v41 + 16))
            goto LABEL_87;
          sub_1AE4FB930();
          v42 = sub_1AE50930C();
          if ((v43 & 1) == 0)
            goto LABEL_86;
          v44 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v42);
          sub_1AE8CC74C();
          sub_1AE4F943C();
          sub_1AE4F6824();
          sub_1AE4FB9BC();
          v45 = *(_QWORD *)(v39 + 16);
          sub_1AE4F66CC();
          sub_1AE4FFCA0();
          sub_1AE4FB9BC();
          *(_QWORD *)(v44 + 16) = v45;
          sub_1AE4FB730();
          sub_1AE4F76D8();
          goto LABEL_38;
        }
        v91 = v4;
        sub_1AE5069B0();
        sub_1AE88404C();
        v90 = v66;
        sub_1AE4FFCA0();
        sub_1AE4FB9BC();
        if (!*v95)
          goto LABEL_89;
        swift_isUniquelyReferenced_nonNull_native();
        v101 = *v95;
        *v95 = 0x8000000000000000;
        sub_1AE50930C();
        sub_1AE53FA84();
        if (v20)
          goto LABEL_79;
        v69 = v67;
        v70 = v68;
        sub_1AE501548(&qword_1ED30FD18);
        if ((sub_1AE8CC820() & 1) != 0)
        {
          v71 = sub_1AE50930C();
          if ((v70 & 1) != (v72 & 1))
            goto LABEL_90;
          v69 = v71;
        }
        v57 = v101;
        if ((v70 & 1) != 0)
        {
          v73 = *(_QWORD *)(v101 + 56);
          swift_release();
          *(_QWORD *)(v73 + 8 * v69) = v90;
        }
        else
        {
          sub_1AE4FFC58(v101 + 8 * (v69 >> 6));
          v79 = (uint64_t *)(v78 + 16 * v69);
          *v79 = v26;
          v79[1] = v27;
          *(_QWORD *)(*(_QWORD *)(v101 + 56) + 8 * v69) = v90;
          v80 = *(_QWORD *)(v101 + 16);
          v20 = __OFADD__(v80, 1);
          v81 = v80 + 1;
          if (v20)
            goto LABEL_81;
          *(_QWORD *)(v101 + 16) = v81;
          sub_1AE4FB930();
        }
        v6 = v95;
LABEL_69:
        *v6 = v57;
        sub_1AE4F66E8();
        sub_1AE4F6648();
        sub_1AE8CC74C();
        v8 = v96;
        sub_1AE4F6700();
        goto LABEL_70;
      }
    }
    else
    {
      v46 = sub_1AE8CC45C(v26, v27);
      if (*(_QWORD *)(a2 + 16) && (v47 = sub_1AE8CC89C(v46), (v48 & 1) != 0))
      {
        v49 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v47);
        sub_1AE5069B0();
      }
      else
      {
        v49 = 0;
      }
      sub_1AE4F6648();
      sub_1AE8CC888();
      if ((sub_1AE926004() & 1) == 0)
      {
        sub_1AE4F66E8();
        sub_1AE4FFCA0();
        goto LABEL_51;
      }
      if (v49)
      {
        v91 = v4;
        sub_1AE5069B0();
        sub_1AE88404C();
        v90 = v50;
        sub_1AE4FFCA0();
        sub_1AE4FB9BC();
        if (!*v6)
          goto LABEL_88;
        swift_isUniquelyReferenced_nonNull_native();
        v100 = *v6;
        *v6 = 0x8000000000000000;
        sub_1AE50930C();
        sub_1AE53FA84();
        if (v20)
          goto LABEL_77;
        v53 = v51;
        v54 = v52;
        sub_1AE501548(&qword_1ED30FD18);
        v6 = v95;
        if ((sub_1AE8CC820() & 1) != 0)
        {
          v55 = sub_1AE50930C();
          if ((v54 & 1) != (v56 & 1))
            goto LABEL_90;
          v53 = v55;
        }
        v57 = v100;
        if ((v54 & 1) != 0)
        {
          v58 = *(_QWORD *)(v100 + 56);
          swift_release();
          *(_QWORD *)(v58 + 8 * v53) = v90;
        }
        else
        {
          sub_1AE4FFC58(v100 + 8 * (v53 >> 6));
          v75 = (uint64_t *)(v74 + 16 * v53);
          *v75 = v26;
          v75[1] = v27;
          *(_QWORD *)(*(_QWORD *)(v100 + 56) + 8 * v53) = v90;
          v76 = *(_QWORD *)(v100 + 16);
          v20 = __OFADD__(v76, 1);
          v77 = v76 + 1;
          if (v20)
            goto LABEL_80;
          *(_QWORD *)(v100 + 16) = v77;
          sub_1AE4FB930();
        }
        goto LABEL_69;
      }
    }
    sub_1AE4F66E8();
LABEL_51:
    sub_1AE4FB9BC();
    if (*(_QWORD *)(v32 + 24))
    {
      v59 = sub_1AE5069B0();
      sub_1AE8CC800(v59, v97, v60, v61, v62, v63, v64, v65, v89, v90, v91, v92);
      sub_1AE4F682C();
      sub_1AE4F6700();
LABEL_74:
      swift_release();
      goto LABEL_75;
    }
LABEL_70:
    sub_1AE4F6700();
    a2 = v97;
    v15 = v98;
    v17 = v99;
    if (v98)
      goto LABEL_7;
LABEL_8:
    v20 = __OFADD__(v17++, 1);
    if (v20)
      break;
    if (v17 >= v94)
      goto LABEL_72;
    if (!*(_QWORD *)(v93 + 8 * v17))
    {
      v21 = v17 + 1;
      if (v17 + 1 >= v94)
        goto LABEL_72;
      if (!*(_QWORD *)(v93 + 8 * v21))
      {
        v21 = v17 + 2;
        if (v17 + 2 >= v94)
          goto LABEL_72;
        if (!*(_QWORD *)(v93 + 8 * v21))
        {
          v21 = v17 + 3;
          if (v17 + 3 >= v94)
          {
LABEL_72:
            sub_1AE4F682C();
            if (!*(_QWORD *)(v89 + 40))
              goto LABEL_75;
            v82 = sub_1AE4F943C();
            sub_1AE8CC800(v82, a2, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92);
            goto LABEL_74;
          }
          if (!*(_QWORD *)(v93 + 8 * v21))
          {
            while (1)
            {
              v17 = v21 + 1;
              if (__OFADD__(v21, 1))
                goto LABEL_78;
              if (v17 >= v94)
                goto LABEL_72;
              ++v21;
              if (*(_QWORD *)(v93 + 8 * v17))
                goto LABEL_18;
            }
          }
        }
      }
      v17 = v21;
    }
LABEL_18:
    sub_1AE50766C();
    v15 = v23 & v22;
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  sub_1AE4F66E8();
LABEL_83:
  sub_1AE8CC74C();
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  sub_1AE4F66E8();
LABEL_87:
  sub_1AE8CC74C();
  sub_1AE4F66E8();
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  sub_1AE926DE4();
  __break(1u);
}

uint64_t sub_1AE8C82DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;

  if (qword_1ED30FBA8 != -1)
    swift_once();
  v0 = qword_1ED3274D0;
  sub_1AE4F66CC();
  v1 = sub_1AE5BCD44();
  sub_1AE551594(v1, v2, v0);
  v4 = v3;
  sub_1AE4F9038();
  return v4 & 1;
}

uint64_t sub_1AE8C8358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  const char *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char *v31;
  const char *v32;
  uint64_t *v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 *v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  BOOL v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char __s2[8];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _OWORD v123[2];
  __int16 v124;
  uint64_t v125;

  v7 = v6;
  if (a6[2] == 0xD00000000000001ALL && a6[3] == 0x80000001AE9748F0 || (sub_1AE4FB6F0() & 1) != 0)
  {
    sub_1AE4FB9BC();
    if (a6[4])
    {
      sub_1AE4F66CC();
      v11 = sub_1AE8CC8E8(0x657079746469, 0xE600000000000000);
      if (v11)
      {
        v12 = v11;
        sub_1AE4FB9BC();
        v13 = *(_QWORD **)(v12 + 16);
        if (!v13[2])
          goto LABEL_63;
        v107 = v12;
        v100 = a1;
        v14 = v13[4];
        v15 = (void *)v13[5];
        sub_1AE4F6730();
        v16._countAndFlagsBits = v14;
        v16._object = v15;
        LiveGlobalKnowledge.ExternalIdentifierType.init(rawValue:)(v16);
        v112 = v119;
        if (v119 == 5)
          goto LABEL_63;
        v98 = sub_1AE8CC8E8(7562345, 0xE300000000000000);
        if (v98)
        {
          v17 = sub_1AE8CC8E8(0x69747265706F7270, 0xEA00000000007365);
          sub_1AE4F9038();
          v96 = v17;
          if (v17)
          {
            sub_1AE4FB9BC();
            v18 = *(_QWORD *)(v98 + 16);
            v99 = *(_QWORD *)(v18 + 16);
            if (!v99)
            {
              sub_1AE4FB75C();
LABEL_69:
              sub_1AE4F6648();
              __asm { BR              X9 }
            }
            v101 = v18 + 32;
            v95 = *(_QWORD *)(v98 + 16);
            sub_1AE4F6A24();
            v102 = v17 + 16;
            sub_1AE4FB9BC();
            v19 = 0;
            v20 = 233;
            v108 = MEMORY[0x1E0DEE9E0];
            v97 = a2;
            while (1)
            {
              v105 = v19;
              v21 = (uint64_t *)(v101 + 16 * v19);
              v110 = *v21;
              v22 = *(_QWORD *)v102;
              v116 = *(_QWORD *)(*(_QWORD *)v102 + 16);
              v113 = v21[1];
              if (v116)
                break;
              sub_1AE4F6A24();
              v52 = MEMORY[0x1E0DEE9D8];
LABEL_48:
              sub_1AE525A5C();
              *(_QWORD *)__s2 = sub_1AE926400();
              v53 = *(_QWORD *)(v52 + 16);
              if (v53)
              {
                v54 = (__int128 *)(v52 + 32);
                do
                {
                  v55 = *v54;
                  v56 = v54[1];
                  v124 = *((_WORD *)v54 + 16);
                  v123[0] = v55;
                  v123[1] = v56;
                  sub_1AE5C7880((uint64_t)v123);
                  sub_1AE555DB4(&v119, v123);
                  swift_bridgeObjectRelease();
                  sub_1AE4F9038();
                  v54 = (__int128 *)((char *)v54 + 40);
                  --v53;
                }
                while (v53);
              }
              sub_1AE4F6728();
              v57 = *(_QWORD *)__s2;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v119 = v108;
              sub_1AE8CC928(isUniquelyReferenced_nonNull_native, v59, v60, v61, v62, v63, v64, v65, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102,
                v103,
                v104,
                v105,
                v107,
                v108,
                v110,
                v112,
                v113);
              sub_1AE53FA84();
              if (v68)
              {
LABEL_74:
                __break(1u);
LABEL_75:
                __break(1u);
LABEL_76:
                __break(1u);
LABEL_77:
                __break(1u);
LABEL_78:
                __break(1u);
LABEL_79:
                __break(1u);
LABEL_80:
                __break(1u);
LABEL_81:
                __break(1u);
                sub_1AE926AA8();
                __break(1u);
LABEL_82:
                sub_1AE926DE4();
                __break(1u);
                JUMPOUT(0x1AE8C8C90);
              }
              v69 = v66;
              v70 = v67;
              sub_1AE501548(&qword_1EEDA4738);
              v71 = sub_1AE8CC820();
              v20 = 233;
              if ((v71 & 1) != 0)
              {
                v79 = sub_1AE8CC928(v71, v72, v73, v74, v75, v76, v77, v78, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102,
                        v103,
                        v104,
                        v106,
                        v107,
                        v109,
                        v111,
                        v112,
                        v114);
                if ((v70 & 1) != (v80 & 1))
                  goto LABEL_82;
                v69 = v79;
              }
              v108 = v119;
              if ((v70 & 1) != 0)
              {
                v81 = *(_QWORD *)(v119 + 56);
                swift_bridgeObjectRelease();
                *(_QWORD *)(v81 + 8 * v69) = v57;
              }
              else
              {
                sub_1AE85CCD8(v119 + 8 * (v69 >> 6));
                v83 = v82[6] + 24 * v69;
                *(_QWORD *)v83 = v111;
                *(_QWORD *)(v83 + 8) = v114;
                *(_BYTE *)(v83 + 16) = v112;
                *(_QWORD *)(v82[7] + 8 * v69) = v57;
                v84 = v82[2];
                v68 = __OFADD__(v84, 1);
                v85 = v84 + 1;
                if (v68)
                  goto LABEL_75;
                v82[2] = v85;
                swift_bridgeObjectRetain();
              }
              sub_1AE4F6824();
              sub_1AE4FDCF0();
              v19 = v106 + 1;
              if (v106 + 1 == v99)
              {
                sub_1AE4F6648();
                goto LABEL_69;
              }
            }
            v104 = v7;
            v115 = v22 + 32;
            sub_1AE4F6A24();
            v103 = v22;
            sub_1AE4F6A24();
            v23 = 0;
            v125 = MEMORY[0x1E0DEE9D8];
            while (1)
            {
              v24 = (_QWORD *)(v115 + 16 * v23);
              v25 = v24[1];
              if ((v25 & 0x1000000000000000) == 0)
              {
                if ((v25 & 0x2000000000000000) != 0)
                {
                  *(_QWORD *)__s2 = *v24;
                  v118 = v25 & 0xFFFFFFFFFFFFFFLL;
                  v31 = (char *)_Records_GDEntityPredicate_records;
                  v32 = (const char *)_Records_GDEntityPredicate_predicateIds;
                  sub_1AE4FB764();
                  v33 = (uint64_t *)(v31 + 16);
                  while (1)
                  {
                    if (!v31)
                      goto LABEL_76;
                    v30 = *(v33 - 1);
                    if (v30 >= 2674)
                    {
                      __break(1u);
LABEL_71:
                      __break(1u);
                      JUMPOUT(0x1AE8C8B48);
                    }
                    if (!v32)
                      goto LABEL_77;
                    if (!strcmp(&v32[v30], __s2))
                      break;
                    v33 += 3;
                    if (!--v20)
                    {
LABEL_30:
                      sub_1AE8CC710();
                      goto LABEL_33;
                    }
                  }
                  v34 = 0;
                  v35 = *((unsigned __int16 *)v33 - 8);
                  v36 = *v33;
                  goto LABEL_33;
                }
                if ((*v24 & 0x1000000000000000) != 0)
                {
                  v26 = (char *)_Records_GDEntityPredicate_records;
                  v27 = (const char *)_Records_GDEntityPredicate_predicateIds;
                  sub_1AE4FB764();
                  v28 = 233;
                  v29 = (uint64_t *)(v26 + 16);
                  while (1)
                  {
                    if (!v26)
                      goto LABEL_78;
                    v30 = *(v29 - 1);
                    if (v30 >= 2674)
                      goto LABEL_71;
                    if (!v27)
                      goto LABEL_79;
                    if (!strcmp(&v27[v30], (const char *)((v25 & 0xFFFFFFFFFFFFFFFLL) + 32)))
                      break;
                    v29 += 3;
                    if (!--v28)
                      goto LABEL_30;
                  }
                  v34 = 0;
                  v35 = *((unsigned __int16 *)v29 - 8);
                  v36 = *v29;
LABEL_33:
                  v20 = 233;
                  v119 = v35;
                  v120 = v30;
                  v121 = v36;
                  LOBYTE(v122) = v34;
                  goto LABEL_34;
                }
              }
              sub_1AE4FB764();
              sub_1AE501548(&qword_1EED9CD30);
              sub_1AE9268F8();
LABEL_34:
              sub_1AE4F6710();
              if ((v122 & 1) == 0)
              {
                if (v120 >= 2674)
                {
                  __break(1u);
LABEL_73:
                  __break(1u);
                  goto LABEL_74;
                }
                if (v121 >= 3558)
                  goto LABEL_73;
                if (!_Records_GDEntityPredicate_predicateIds)
                  goto LABEL_81;
                v37 = v119;
                v38 = sub_1AE925F8C();
                v40 = v125;
                if (!_Records_GDEntityPredicate_labels)
                  goto LABEL_80;
                v41 = v38;
                v42 = v39;
                v43 = sub_1AE925F8C();
                v45 = v44;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1AE519DF4();
                  v40 = v50;
                }
                v46 = v40;
                v47 = *(_QWORD *)(v40 + 16);
                v125 = v46;
                if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
                {
                  sub_1AE519DF4();
                  v125 = v51;
                }
                v48 = v125;
                *(_QWORD *)(v125 + 16) = v47 + 1;
                v49 = v48 + 40 * v47;
                *(_QWORD *)(v49 + 32) = v41;
                *(_QWORD *)(v49 + 40) = v42;
                *(_QWORD *)(v49 + 48) = v43;
                *(_QWORD *)(v49 + 56) = v45;
                *(_WORD *)(v49 + 64) = v37;
                v20 = 233;
              }
              if (++v23 == v116)
              {
                sub_1AE4F6824();
                v7 = v104;
                v52 = v125;
                goto LABEL_48;
              }
            }
          }
          sub_1AE737C60();
        }
        else
        {
LABEL_63:
          sub_1AE4F9038();
        }
        swift_release();
      }
      else
      {
        sub_1AE4F9038();
      }
    }
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    sub_1AE8CC770();
    v119 = v86;
    v120 = v87;
    sub_1AE4FB75C();
    sub_1AE507008();
    sub_1AE4F6648();
    sub_1AE925F74();
  }
  else
  {
    v119 = 0;
    v120 = 0xE000000000000000;
    sub_1AE92691C();
    sub_1AE925F74();
    sub_1AE4FB75C();
    sub_1AE507008();
    sub_1AE4F6648();
  }
  v88 = v120;
  sub_1AE8CC4D4();
  v89 = sub_1AE4F6778();
  *v90 = v119;
  v90[1] = v88;
  sub_1AE505700(v89, (uint64_t)v90);
  return 1;
}

uint64_t sub_1AE8C8CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  sub_1AE4F67EC();
  v2 = v1;
  sub_1AE9243C0();
  v3 = swift_allocObject();
  sub_1AE9243B4();
  sub_1AE9247B0();
  if (v0)
  {
    v4 = sub_1AE4FD9B0();
    sub_1AE5055C4(v4);
    sub_1AE4F6700();
    sub_1AE4F67AC();
  }
  else
  {
    sub_1AE8CC6A8();
    sub_1AE9243A8();
    v3 = swift_allocObject();
    sub_1AE8C9714(v7, v2);
    v6 = sub_1AE4FD9B0();
    sub_1AE5055C4(v6);
    sub_1AE8CC7D4();
    sub_1AE4F6700();
  }
  return v3;
}

void sub_1AE8C8DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t i;
  int64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  BOOL v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  id v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  int64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  id v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;

  sub_1AE4F67EC();
  a19 = v22;
  a20 = v23;
  v24 = v20;
  v110 = *v25;
  v111 = v25[1];
  v114 = v25[3];
  v108 = v21;
  v109 = v25[4];
  v112 = v25[2];
  v113 = v25[5];
  a10 = MEMORY[0x1E0DEE9D8];
  v131 = v20 + 16;
  sub_1AE4FB9BC();
  v115 = v20[16] + 64;
  sub_1AE506C24();
  v28 = v27 & v26;
  v116 = (unint64_t)(v29 + 63) >> 6;
  v118 = v30;
  swift_bridgeObjectRetain();
  v31 = 0;
  v117 = v20;
  if (!v28)
    goto LABEL_3;
LABEL_2:
  sub_1AE8CC80C();
  for (i = v32 | (v31 << 6); ; i = v38 + (v31 << 6))
  {
    v39 = (uint64_t *)(*(_QWORD *)(v118 + 48) + 16 * i);
    v41 = *v39;
    v40 = v39[1];
    v42 = *(_QWORD *)(v118 + 56) + 112 * i;
    v43 = *(_QWORD *)v42;
    v44 = *(_QWORD *)(v42 + 8);
    v46 = *(_QWORD *)(v42 + 16);
    v45 = *(_QWORD *)(v42 + 24);
    v47 = *(_QWORD *)(v42 + 32);
    v48 = *(_BYTE *)(v42 + 40);
    v49 = *(_QWORD *)(v42 + 48);
    v50 = *(_QWORD *)(v42 + 56);
    v51 = *(_QWORD *)(v42 + 64);
    v52 = *(_QWORD *)(v42 + 72);
    v53 = *(_QWORD *)(v42 + 80);
    v54 = *(_QWORD *)(v42 + 104);
    v55 = *(_OWORD *)(v42 + 88);
    v137 = v41;
    v138 = v40;
    v139 = v43;
    v140 = v44;
    v141 = v46;
    v142 = v45;
    v143 = v47;
    v144 = v48;
    v145 = v49;
    v146 = v50;
    v147 = v51;
    v148 = v52;
    v149 = v53;
    v150 = v55;
    v151 = v54;
    sub_1AE4FB9BC();
    v56 = *v131;
    if (!*(_QWORD *)(*v131 + 16))
    {
      sub_1AE505C64();
LABEL_42:
      sub_1AE8CC920();
      sub_1AE4F81B8();
      sub_1AE8CC858();
      swift_bridgeObjectRelease();
      sub_1AE8CC798();
      sub_1AE8CC770();
      v135 = v98;
      v136 = v99;
      sub_1AE8CC754();
      sub_1AE8CC4D4();
      v100 = sub_1AE4F6778();
      *v101 = v135;
      v101[1] = v136;
      sub_1AE509B7C(v100, (uint64_t)v101);
      sub_1AE8CC5B0((uint64_t)&v137);
      swift_release();
LABEL_53:
      sub_1AE4F667C();
      return;
    }
    sub_1AE4FB930();
    sub_1AE505C64();
    v57 = sub_1AE5089EC(v41);
    if ((v58 & 1) == 0)
    {
      sub_1AE4F66E8();
      goto LABEL_42;
    }
    v126 = v41;
    v119 = v28;
    v120 = v31;
    v59 = *(_QWORD *)(v56 + 56) + 112 * v57;
    v60 = *(_QWORD *)(v59 + 16);
    v121 = *(_BYTE *)(v59 + 40);
    v61 = *(_QWORD *)(v59 + 56);
    v62 = *(_QWORD *)(v59 + 72);
    v122 = *(_QWORD *)(v59 + 48);
    v123 = *(_QWORD *)(v59 + 64);
    v63 = *(_QWORD *)(v59 + 80);
    v64 = *(_QWORD *)(v59 + 88);
    v65 = *(_QWORD *)(v59 + 104);
    v124 = *(_QWORD *)(v59 + 96);
    sub_1AE8CC920();
    sub_1AE4FB75C();
    swift_bridgeObjectRetain();
    sub_1AE4F67A4();
    sub_1AE4F81B0();
    sub_1AE4F66CC();
    sub_1AE4F6730();
    sub_1AE50668C();
    sub_1AE509AC4();
    sub_1AE4F66E8();
    sub_1AE505C64();
    sub_1AE4F67A4();
    sub_1AE4F81B0();
    v125 = v61;
    sub_1AE4F66CC();
    v130 = v62;
    sub_1AE4F6730();
    v129 = v63;
    sub_1AE50668C();
    v128 = v64;
    sub_1AE509AC4();
    v127 = v65;
    sub_1AE4FB75C();
    sub_1AE8CC918();
    sub_1AE8CC910();
    sub_1AE8CC908();
    sub_1AE8CC900();
    sub_1AE4F6710();
    sub_1AE737E20();
    swift_release();
    sub_1AE8CC8F8();
    sub_1AE4FB930();
    swift_bridgeObjectRelease();
    v66 = *(_QWORD *)(v60 + 16);
    if (v66)
    {
      v134 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1AE52154C();
      v67 = v134;
      v68 = v60 + 40;
      do
      {
        v69 = sub_1AE925E9C();
        v71 = v70;
        v72 = v134[2];
        if (v72 >= v134[3] >> 1)
          sub_1AE52154C();
        v68 += 16;
        v134[2] = v72 + 1;
        v73 = (char *)&v134[2 * v72];
        *((_QWORD *)v73 + 4) = v69;
        *((_QWORD *)v73 + 5) = v71;
        --v66;
      }
      while (v66);
      sub_1AE4F6728();
      v74 = v126;
    }
    else
    {
      sub_1AE4F6728();
      v67 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v74 = v41;
    }
    sub_1AE4F6708();
    sub_1AE4F6728();
    v75 = sub_1AE925E9C();
    v77 = v76;
    swift_bridgeObjectRetain();
    sub_1AE4F6824();
    sub_1AE505C64();
    sub_1AE8CC8F8();
    swift_release();
    sub_1AE737E20();
    sub_1AE8CC918();
    sub_1AE8CC910();
    sub_1AE8CC908();
    sub_1AE8CC900();
    sub_1AE4F6710();
    sub_1AE4FB9BC();
    sub_1AE508E78();
    v133 = (_QWORD *)*v131;
    *v131 = 0x8000000000000000;
    v78 = v74;
    sub_1AE5089EC(v74);
    sub_1AE8CC874();
    if (v81)
      break;
    v82 = v79;
    v83 = v80;
    sub_1AE501548(&qword_1ED30FD28);
    if ((sub_1AE926A54() & 1) != 0)
    {
      v84 = sub_1AE5089EC(v78);
      if ((v83 & 1) != (v85 & 1))
        goto LABEL_58;
      v82 = v84;
    }
    if ((v83 & 1) != 0)
    {
      v86 = v77;
      v87 = v133[7] + 112 * v82;
      swift_bridgeObjectRelease();
      sub_1AE4F6710();
      swift_bridgeObjectRelease();
      sub_1AE4F81B8();
      sub_1AE8CC7AC();
      sub_1AE4FFCA0();
      swift_release();
      swift_bridgeObjectRelease();
      v88 = v78;
      *(_QWORD *)v87 = v78;
      *(_QWORD *)(v87 + 8) = v40;
      *(_QWORD *)(v87 + 16) = v67;
      *(_QWORD *)(v87 + 24) = v75;
      *(_QWORD *)(v87 + 32) = v86;
      *(_BYTE *)(v87 + 40) = v121;
      *(_QWORD *)(v87 + 48) = v122;
      *(_QWORD *)(v87 + 56) = v125;
      *(_QWORD *)(v87 + 64) = v123;
      *(_QWORD *)(v87 + 72) = v130;
      *(_QWORD *)(v87 + 80) = v129;
      *(_QWORD *)(v87 + 88) = v128;
      *(_QWORD *)(v87 + 96) = v124;
      *(_QWORD *)(v87 + 104) = v127;
    }
    else
    {
      sub_1AE85CCD8((uint64_t)&v133[v82 >> 6]);
      v89 = (uint64_t *)(v133[6] + 16 * v82);
      *v89 = v78;
      v89[1] = v40;
      v90 = v133[7] + 112 * v82;
      *(_QWORD *)v90 = v78;
      *(_QWORD *)(v90 + 8) = v40;
      *(_QWORD *)(v90 + 16) = v67;
      *(_QWORD *)(v90 + 24) = v75;
      *(_QWORD *)(v90 + 32) = v77;
      *(_BYTE *)(v90 + 40) = v121;
      *(_QWORD *)(v90 + 48) = v122;
      *(_QWORD *)(v90 + 56) = v61;
      *(_QWORD *)(v90 + 64) = v123;
      *(_QWORD *)(v90 + 72) = v130;
      *(_QWORD *)(v90 + 80) = v129;
      *(_QWORD *)(v90 + 88) = v128;
      *(_QWORD *)(v90 + 96) = v124;
      *(_QWORD *)(v90 + 104) = v127;
      v91 = v133[2];
      v81 = __OFADD__(v91, 1);
      v92 = v91 + 1;
      if (v81)
        goto LABEL_55;
      v88 = v78;
      v133[2] = v92;
      sub_1AE4FB930();
    }
    *v131 = v133;
    sub_1AE4F66E8();
    sub_1AE4F6648();
    sub_1AE8CC920();
    sub_1AE505C64();
    sub_1AE8CC8F8();
    swift_release();
    sub_1AE737E20();
    sub_1AE8CC918();
    sub_1AE8CC910();
    sub_1AE8CC908();
    sub_1AE8CC900();
    swift_bridgeObjectRelease();
    v93 = a10;
    v28 = v119;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE4FF288();
      v93 = v96;
    }
    v24 = v117;
    v94 = *(_QWORD *)(v93 + 16);
    if (v94 >= *(_QWORD *)(v93 + 24) >> 1)
    {
      sub_1AE4FF288();
      v93 = v97;
    }
    *(_QWORD *)(v93 + 16) = v94 + 1;
    v95 = v93 + 16 * v94;
    *(_QWORD *)(v95 + 32) = v88;
    *(_QWORD *)(v95 + 40) = v40;
    sub_1AE8CC5B0((uint64_t)&v137);
    a10 = v93;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1AE4F6718();
    swift_bridgeObjectRelease();
    sub_1AE4F76D8();
    sub_1AE4F66E8();
    v31 = v120;
    if (v119)
      goto LABEL_2;
LABEL_3:
    v34 = v31 + 1;
    if (__OFADD__(v31, 1))
      goto LABEL_56;
    if (v34 >= v116)
      goto LABEL_43;
    ++v31;
    if (*(_QWORD *)(v115 + 8 * v34))
      goto LABEL_16;
    v31 = v34 + 1;
    if (v34 + 1 >= v116)
      goto LABEL_43;
    if (*(_QWORD *)(v115 + 8 * v31))
      goto LABEL_16;
    v31 = v34 + 2;
    if (v34 + 2 >= v116)
      goto LABEL_43;
    if (*(_QWORD *)(v115 + 8 * v31))
      goto LABEL_16;
    v35 = v34 + 3;
    if (v35 >= v116)
    {
LABEL_43:
      swift_release();
      sub_1AE531990(&a10);
      v132 = v24[19];
      v24[19] = v110;
      v24[20] = v111;
      v24[21] = v112;
      v24[22] = v114;
      v24[23] = v109;
      v24[24] = v113;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1AE4FB75C();
      sub_1AE4FB764();
      sub_1AE4F81B0();
      sub_1AE8CA5B4(v132);
      sub_1AE8CA60C();
      sub_1AE4F81B8();
      if (v108)
      {
        v102 = v108;
        sub_1AE501548((uint64_t *)&unk_1ED319C60);
        if (swift_dynamicCast())
        {
          v104 = v137;
          v103 = v138;
          if (v139 != 1)
            goto LABEL_51;
          v105 = HIBYTE(v138) & 0xF;
          if ((v138 & 0x2000000000000000) == 0)
            v105 = v137 & 0xFFFFFFFFFFFFLL;
          if (v105)
          {

            sub_1AE8CC4D4();
            v106 = sub_1AE4F6778();
            *v107 = v104;
            v107[1] = v103;
            sub_1AE509B7C(v106, (uint64_t)v107);
          }
          else
          {
LABEL_51:
            sub_1AE5BCD44();
            sub_1AE544754();
          }
        }

      }
      else
      {
        sub_1AE8CACB4();
      }
      goto LABEL_53;
    }
    if (!*(_QWORD *)(v115 + 8 * v35))
    {
      while (1)
      {
        v31 = v35 + 1;
        if (__OFADD__(v35, 1))
          goto LABEL_57;
        if (v31 >= v116)
          goto LABEL_43;
        ++v35;
        if (*(_QWORD *)(v115 + 8 * v31))
          goto LABEL_16;
      }
    }
    v31 = v35;
LABEL_16:
    sub_1AE50747C();
    v28 = v37 & v36;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  sub_1AE926DE4();
  __break(1u);
}

uint64_t sub_1AE8C969C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) != 0)
  {
    if ((a6 & 1) == 0)
      return 0;
  }
  else if ((a6 & 1) != 0)
  {
    return 0;
  }
  if (a1 == a4 && a2 == a5)
    return 1;
  else
    return sub_1AE926D60();
}

uint64_t sub_1AE8C96D4(uint64_t a1, uint64_t a2)
{
  return sub_1AE8C969C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_1AE8C96F0()
{
  uint64_t result;

  result = sub_1AE898358((uint64_t)&unk_1E5DB0500);
  qword_1ED3274D0 = result;
  return result;
}

uint64_t sub_1AE8C9714(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t i;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  BOOL v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD v155[7];
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;

  *(_QWORD *)(v2 + 136) = a2;
  *(_QWORD *)(v2 + 144) = 25;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(_OWORD *)(v2 + 184) = 0u;
  sub_1AE4F66E0();
  sub_1AE8CA5B4(0);
  *(_QWORD *)(v2 + 128) = sub_1AE925C98();
  v140 = (uint64_t *)(v2 + 128);
  v89 = v2;
  v92 = a1;
  sub_1AE4F95DC();
  sub_1AE8CC764();
  v77 = a1 + 64;
  v80 = v14;
  if (!v12)
    goto LABEL_3;
LABEL_2:
  v95 = (v12 - 1) & v12;
  v99 = v13;
  for (i = __clz(__rbit64(v12)) | (v13 << 6); ; i = v22 + (v21 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v92 + 48) + 16 * i);
    v24 = v23[1];
    v136 = *v23;
    v25 = *(_QWORD *)(v92 + 56) + 112 * i;
    v26 = *(_QWORD *)v25;
    v27 = *(_QWORD *)(v25 + 8);
    v29 = *(_QWORD *)(v25 + 16);
    v28 = *(_QWORD *)(v25 + 24);
    v30 = *(_QWORD *)(v25 + 32);
    v31 = *(unsigned __int8 *)(v25 + 40);
    v32 = *(_QWORD *)(v25 + 48);
    v33 = *(_QWORD *)(v25 + 56);
    v34 = *(_QWORD *)(v25 + 64);
    v35 = *(_QWORD *)(v25 + 72);
    v36 = *(_QWORD *)(v25 + 80);
    v37 = *(_QWORD *)(v25 + 88);
    v38 = *(_QWORD *)(v25 + 96);
    v39 = *(_QWORD *)(v25 + 104);
    v155[1] = v24;
    v155[2] = v26;
    v155[3] = v27;
    v155[4] = v29;
    v155[5] = v28;
    v155[6] = v30;
    HIDWORD(v106) = v31;
    v156 = v31;
    v157 = v32;
    v158 = v33;
    v159 = v34;
    v160 = v35;
    v161 = v36;
    v162 = v37;
    v163 = v38;
    v164 = v39;
    v40 = sub_1AE8CC8F0(v4, v5, v6, v7, v8, v9, v10, v11, v71, v74, v77, v80, v83, v86, v89, v92, v95, v99, v28,
            v106,
            v32,
            v34,
            v38,
            v118,
            v121,
            v124,
            v127,
            v130,
            v133,
            v136,
            (uint64_t)v140,
            v143,
            v146,
            v149,
            v152,
            v136);
    sub_1AE8CC8F0(v40, v41, v42, v43, v44, v45, v46, v47, v72, v75, v78, v81, v84, v87, v90, v93, v96, v100, v103,
      v107,
      v109,
      v112,
      v115,
      v119,
      v122,
      v125,
      v128,
      v131,
      v134,
      v137,
      v141,
      v144,
      v147,
      v150,
      v153,
      v155[0]);
    sub_1AE4FB764();
    sub_1AE4F67A4();
    sub_1AE4FB75C();
    sub_1AE4F6730();
    sub_1AE4F81B0();
    sub_1AE4FB930();
    sub_1AE50668C();
    sub_1AE509AC4();
    v48 = sub_1AE4F9038();
    sub_1AE8CC8F0(v48, v49, v50, v51, v52, v53, v54, v55, v73, v76, v79, v82, v85, v88, v91, v94, v97, v101, v104,
      v108,
      v110,
      v113,
      v116,
      v120,
      v123,
      v126,
      v129,
      v132,
      v135,
      v138,
      v142,
      v145,
      v148,
      v151,
      v154,
      v155[0]);
    v118 = v39;
    sub_1AE4F6710();
    v121 = v37;
    swift_release();
    v124 = v36;
    swift_release();
    v127 = v35;
    sub_1AE4F66E8();
    v130 = v33;
    sub_1AE4F6718();
    v133 = v30;
    sub_1AE4F81B8();
    v143 = v29;
    sub_1AE4F6648();
    sub_1AE4F9038();
    sub_1AE4FB9BC();
    sub_1AE508E78();
    v165 = *v140;
    *v140 = 0x8000000000000000;
    sub_1AE536EDC(v139, v24);
    sub_1AE8CC874();
    if (v58)
    {
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v59 = v56;
    v60 = v57;
    sub_1AE501548(&qword_1ED30FD28);
    if ((sub_1AE926A54() & 1) != 0)
    {
      v61 = sub_1AE536EDC(v139, v24);
      if ((v60 & 1) != (v62 & 1))
        goto LABEL_31;
      v59 = v61;
    }
    v63 = v165;
    if ((v60 & 1) != 0)
    {
      v64 = *(_QWORD *)(v165 + 56) + 112 * v59;
      v83 = *(_QWORD *)(v64 + 80);
      v86 = *(_QWORD *)(v64 + 8);
      swift_bridgeObjectRelease();
      sub_1AE4F66E8();
      sub_1AE4F81B8();
      sub_1AE4F6648();
      swift_bridgeObjectRelease();
      sub_1AE8CC8E0();
      sub_1AE4FDCE8();
      sub_1AE4F6728();
      *(_QWORD *)v64 = v139;
      *(_QWORD *)(v64 + 8) = v24;
      *(_QWORD *)(v64 + 16) = v143;
      *(_QWORD *)(v64 + 24) = v105;
      *(_QWORD *)(v64 + 32) = v30;
      *(_BYTE *)(v64 + 40) = BYTE4(v106);
      *(_QWORD *)(v64 + 48) = v111;
      *(_QWORD *)(v64 + 56) = v130;
      *(_QWORD *)(v64 + 64) = v114;
      *(_QWORD *)(v64 + 72) = v35;
      *(_QWORD *)(v64 + 80) = v36;
      *(_QWORD *)(v64 + 88) = v37;
      *(_QWORD *)(v64 + 96) = v117;
      *(_QWORD *)(v64 + 104) = v39;
    }
    else
    {
      sub_1AE4FFC58(v165 + 8 * (v59 >> 6));
      v66 = (uint64_t *)(v65 + 16 * v59);
      *v66 = v139;
      v66[1] = v24;
      v67 = *(_QWORD *)(v63 + 56) + 112 * v59;
      *(_QWORD *)v67 = v139;
      *(_QWORD *)(v67 + 8) = v24;
      *(_QWORD *)(v67 + 16) = v143;
      *(_QWORD *)(v67 + 24) = v105;
      *(_QWORD *)(v67 + 32) = v30;
      *(_BYTE *)(v67 + 40) = BYTE4(v106);
      *(_QWORD *)(v67 + 48) = v111;
      *(_QWORD *)(v67 + 56) = v130;
      *(_QWORD *)(v67 + 64) = v114;
      *(_QWORD *)(v67 + 72) = v35;
      *(_QWORD *)(v67 + 80) = v36;
      *(_QWORD *)(v67 + 88) = v37;
      *(_QWORD *)(v67 + 96) = v117;
      *(_QWORD *)(v67 + 104) = v39;
      v68 = *(_QWORD *)(v63 + 16);
      v58 = __OFADD__(v68, 1);
      v69 = v68 + 1;
      if (v58)
        goto LABEL_28;
      *(_QWORD *)(v63 + 16) = v69;
      sub_1AE4F6730();
    }
    *v140 = v63;
    sub_1AE4F81B8();
    sub_1AE4F6648();
    swift_endAccess();
    sub_1AE8CC5B0((uint64_t)v155);
    sub_1AE4F6728();
    sub_1AE4F77C8();
    sub_1AE4F682C();
    sub_1AE4F66E8();
    sub_1AE4F6718();
    sub_1AE4F6710();
    swift_bridgeObjectRelease();
    v4 = sub_1AE4F81B8();
    v2 = v89;
    v12 = v98;
    v13 = v102;
    if (v98)
      goto LABEL_2;
LABEL_3:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_29;
    if (v16 >= v80)
      goto LABEL_26;
    if (!*(_QWORD *)(v77 + 8 * v16))
    {
      if (v13 + 2 >= v80)
        goto LABEL_26;
      if (!*(_QWORD *)(v77 + 8 * (v13 + 2)))
      {
        if (v13 + 3 >= v80)
          goto LABEL_26;
        if (!*(_QWORD *)(v77 + 8 * (v13 + 3)))
        {
          v17 = v13 + 4;
          if (v13 + 4 >= v80)
          {
LABEL_26:
            swift_release();
            swift_release();
            *(_OWORD *)(v2 + 96) = 0u;
            *(_OWORD *)(v2 + 112) = 0u;
            *(_OWORD *)(v2 + 64) = 0u;
            *(_OWORD *)(v2 + 80) = 0u;
            *(_OWORD *)(v2 + 32) = 0u;
            *(_OWORD *)(v2 + 48) = 0u;
            *(_OWORD *)(v2 + 16) = 0u;
            return v2;
          }
          if (!*(_QWORD *)(v77 + 8 * v17))
            break;
        }
      }
    }
LABEL_15:
    sub_1AE50747C();
    v95 = v20 & v19;
    v99 = v21;
  }
  while (1)
  {
    v18 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v18 >= v80)
      goto LABEL_26;
    ++v17;
    if (*(_QWORD *)(v77 + 8 * v18))
      goto LABEL_15;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE8C9BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1AE4FB9BC();
  v5 = *(_QWORD *)(v2 + 128);
  if (*(_QWORD *)(v5 + 16))
  {
    sub_1AE4FB75C();
    v6 = sub_1AE8CC894(a1);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(v5 + 56) + 112 * v6;
      v27 = *(_QWORD *)v8;
      v9 = *(_QWORD *)(v8 + 16);
      v25 = *(_QWORD *)(v8 + 24);
      v10 = *(_QWORD *)(v8 + 32);
      v24 = *(_BYTE *)(v8 + 40);
      v11 = *(_QWORD *)(v8 + 56);
      v22 = *(_QWORD *)(v8 + 64);
      v23 = *(_QWORD *)(v8 + 48);
      v17 = *(_QWORD *)(v8 + 72);
      v18 = *(_QWORD *)(v8 + 8);
      v12 = *(_QWORD *)(v8 + 88);
      v21 = *(_QWORD *)(v8 + 96);
      v19 = *(_QWORD *)(v8 + 80);
      v20 = *(_QWORD *)(v8 + 104);
      swift_endAccess();
      sub_1AE4F67A4();
      sub_1AE4F6804();
      sub_1AE4FB930();
      sub_1AE4F81B0();
      sub_1AE4FB764();
      sub_1AE4F81B0();
      swift_retain();
      sub_1AE4F66E0();
      result = sub_1AE4F6648();
      *(_QWORD *)a2 = v27;
      *(_QWORD *)(a2 + 8) = v18;
      *(_QWORD *)(a2 + 16) = v9;
      *(_QWORD *)(a2 + 24) = v25;
      *(_QWORD *)(a2 + 32) = v10;
      *(_BYTE *)(a2 + 40) = v24;
      *(_QWORD *)(a2 + 48) = v23;
      *(_QWORD *)(a2 + 56) = v11;
      *(_QWORD *)(a2 + 64) = v22;
      *(_QWORD *)(a2 + 72) = v17;
      *(_QWORD *)(a2 + 80) = v19;
      *(_QWORD *)(a2 + 88) = v12;
      *(_QWORD *)(a2 + 96) = v21;
      *(_QWORD *)(a2 + 104) = v20;
      return result;
    }
    sub_1AE4F6648();
  }
  swift_endAccess();
  sub_1AE92691C();
  sub_1AE8CC744();
  sub_1AE8CC83C();
  v26 = v14;
  sub_1AE925F74();
  sub_1AE925F74();
  sub_1AE8CC4D4();
  v15 = sub_1AE4F6778();
  *v16 = v26;
  v16[1] = 0xE900000000000020;
  return sub_1AE505700(v15, (uint64_t)v16);
}

void sub_1AE8C9DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = v5;
  if (qword_1ED30FBA8 != -1)
    swift_once();
  v8 = qword_1ED3274D0;
  v9 = *a5;
  v10 = *(_QWORD *)(*a5 + 16);
  v11 = *(_QWORD *)(*a5 + 24);
  sub_1AE4FB930();
  sub_1AE551594(v10, v11, v8);
  LOBYTE(v10) = v12;
  sub_1AE4F66E8();
  if ((v10 & 1) != 0)
  {
    if (*(_QWORD *)(v9 + 16) == 0xD00000000000001ALL && *(_QWORD *)(v9 + 24) == 0x80000001AE9748F0
      || (sub_1AE4FB6F0() & 1) != 0)
    {
      *(_BYTE *)(v9 + 64) = 8;
      *(_QWORD *)(v9 + 48) = 500;
    }
    else
    {
      *(_BYTE *)(v9 + 64) = 6;
    }
  }
  else
  {
    sub_1AE8C9F48((_QWORD *)v9, 25);
    if (!v6)
    {
      v14 = v13;
      if (v13)
      {
        v15 = *(_QWORD *)(v13 + 40);
        sub_1AE4F66E0();
        if (v15)
        {
          do
          {
            v16 = v15;
            sub_1AE509AC4();
            swift_release();
            v15 = *(_QWORD *)(v15 + 40);
          }
          while (v15);
        }
        else
        {
          v16 = v14;
        }
        *(_QWORD *)(v16 + 40) = *(_QWORD *)(v9 + 40);
        *(_QWORD *)(v14 + 48) = *(_QWORD *)(v9 + 48);
        swift_retain();
        sub_1AE507978();
        sub_1AE4F6700();
        *a5 = v14;
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_1AE8C9F48(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  int64_t v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;

  if (a2 <= 0)
  {
    v8 = a1[2];
    v7 = a1[3];
    sub_1AE4FB75C();
    v9 = sub_1AE8CBD30(v8, v7);
    sub_1AE4F6648();
    sub_1AE4FB9BC();
    v10 = a1[4];
    if (v10)
    {
      v11 = v10;
    }
    else
    {
      type metadata accessor for KnosisQueryParam();
      v11 = sub_1AE925C98();
    }
    v40 = 0;
    v41 = v11 + 64;
    v42 = 1 << *(_BYTE *)(v11 + 32);
    v43 = -1;
    if (v42 < 64)
      v43 = ~(-1 << v42);
    v44 = v43 & *(_QWORD *)(v11 + 64);
    v45 = (unint64_t)(v42 + 63) >> 6;
    while (1)
    {
      if (v44)
      {
        sub_1AE4F79B8();
        v47 = v46 | (v40 << 6);
      }
      else
      {
        v48 = v40 + 1;
        if (__OFADD__(v40, 1))
        {
LABEL_84:
          __break(1u);
          goto LABEL_85;
        }
        if (v48 >= v45)
          goto LABEL_77;
        ++v40;
        if (!*(_QWORD *)(v41 + 8 * v48))
        {
          v40 = v48 + 1;
          if (v48 + 1 >= v45)
            goto LABEL_77;
          if (!*(_QWORD *)(v41 + 8 * v40))
          {
            v40 = v48 + 2;
            if (v48 + 2 >= v45)
              goto LABEL_77;
            if (!*(_QWORD *)(v41 + 8 * v40))
            {
              v49 = v48 + 3;
              if (v49 >= v45)
              {
LABEL_77:
                sub_1AE4F6708();
                sub_1AE4F77C8();
                if (v9 != 1)
                {
                  swift_retain();
                  goto LABEL_79;
                }
LABEL_78:
                sub_1AE92691C();
                sub_1AE925F74();
                sub_1AE4FB75C();
                sub_1AE507008();
                sub_1AE4F6648();
                sub_1AE925F74();
                sub_1AE8CC4D4();
                v52 = sub_1AE4F6778();
                *v53 = 0;
                v53[1] = 0xE000000000000000;
                sub_1AE505700(v52, (uint64_t)v53);
                goto LABEL_79;
              }
              if (!*(_QWORD *)(v41 + 8 * v49))
              {
                while (1)
                {
                  v40 = v49 + 1;
                  if (__OFADD__(v49, 1))
                    break;
                  if (v40 >= v45)
                    goto LABEL_77;
                  ++v49;
                  if (*(_QWORD *)(v41 + 8 * v40))
                    goto LABEL_74;
                }
LABEL_85:
                __break(1u);
                return;
              }
              v40 = v49;
            }
          }
        }
LABEL_74:
        sub_1AE8CC7EC();
        v47 = v50 + (v40 << 6);
      }
      v51 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v47);
      sub_1AE4FB9BC();
      if (*(_QWORD *)(v51 + 24))
      {
        sub_1AE4F6708();
        sub_1AE4F77C8();
        goto LABEL_78;
      }
    }
  }
  v5 = a1 + 4;
  sub_1AE4FB9BC();
  if (a1[4])
  {
    v6 = a1[4];
  }
  else
  {
    type metadata accessor for KnosisQueryParam();
    v6 = sub_1AE925C98();
  }
  v12 = 1 << *(_BYTE *)(v6 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v6 + 64);
  sub_1AE8CC764();
  v58 = v15;
  v54 = a2 - 1;
  v17 = v16;
  swift_bridgeObjectRetain();
  v18 = 0;
  v56 = v17;
  v57 = a1 + 4;
  while (v14)
  {
    sub_1AE8CC80C();
    v20 = v19 | (v18 << 6);
LABEL_23:
    v26 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v20);
    v27 = *v26;
    v28 = v26[1];
    sub_1AE4FB9BC();
    v29 = *v5;
    if (*v5)
    {
      if (!*(_QWORD *)(v29 + 16))
      {
        sub_1AE73EEAC();
        sub_1AE4F81B0();
        goto LABEL_41;
      }
      sub_1AE4F6A24();
      sub_1AE73EEAC();
      v30 = sub_1AE8369D0();
      if ((v31 & 1) != 0)
      {
        v32 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v30);
        sub_1AE508078();
        swift_retain();
        sub_1AE4FDCE8();
        sub_1AE4F6718();
        sub_1AE4FB9BC();
        if (*(_QWORD *)(v32 + 24))
        {
          v33 = a1[2] == 0x68636165726F66 && a1[3] == 0xE700000000000000;
          if ((v33 || (sub_1AE4FB6F0() & 1) != 0)
            && ((sub_1AE8CC83C(), v27 == v34) ? (v35 = v28 == 0xE800000000000000) : (v35 = 0),
                v35 || (sub_1AE4FB6F0() & 1) != 0))
          {
            swift_bridgeObjectRelease();
            sub_1AE4F6A6C();
          }
          else
          {
            v36 = sub_1AE4F943C();
            v37 = sub_1AE8C9F48(v36, v54);
            if (v2)
            {
              sub_1AE507978();
              sub_1AE4F6A6C();
              sub_1AE4FB730();
              sub_1AE4FDCE8();
              sub_1AE4F6718();
              goto LABEL_79;
            }
            v38 = v37;
            sub_1AE4FB730();
            sub_1AE4FDCE8();
            sub_1AE4F6718();
            *(_QWORD *)(v32 + 24) = v38;
            sub_1AE4F6A6C();
          }
          swift_release();
        }
        else
        {
          sub_1AE4F6A6C();
          sub_1AE4FDCE8();
          sub_1AE4F6718();
        }
        v17 = v56;
        v5 = v57;
      }
      else
      {
        sub_1AE4F6718();
LABEL_41:
        sub_1AE508078();
        sub_1AE4F6718();
        sub_1AE4FC54C();
      }
    }
    else
    {
      sub_1AE508078();
    }
  }
  if (__OFADD__(v18++, 1))
  {
    __break(1u);
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  if (v18 >= v58)
    goto LABEL_52;
  if (*(_QWORD *)(v17 + 8 * v18))
  {
LABEL_22:
    sub_1AE50766C();
    v14 = v24 & v23;
    v20 = v25 + (v18 << 6);
    goto LABEL_23;
  }
  v22 = v18 + 1;
  if (v18 + 1 >= v58)
    goto LABEL_52;
  if (*(_QWORD *)(v17 + 8 * v22))
    goto LABEL_21;
  v22 = v18 + 2;
  if (v18 + 2 >= v58)
    goto LABEL_52;
  if (*(_QWORD *)(v17 + 8 * v22))
  {
LABEL_21:
    v18 = v22;
    goto LABEL_22;
  }
  v22 = v18 + 3;
  if (v18 + 3 < v58)
  {
    if (!*(_QWORD *)(v17 + 8 * v22))
    {
      while (1)
      {
        v18 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_83;
        if (v18 >= v58)
          goto LABEL_52;
        ++v22;
        if (*(_QWORD *)(v17 + 8 * v18))
          goto LABEL_22;
      }
    }
    goto LABEL_21;
  }
LABEL_52:
  sub_1AE507978();
  v39 = sub_1AE8CBDF0(a1);
  if (!v2 && !v39)
    sub_1AE50668C();
LABEL_79:
  sub_1AE506D24();
}

uint64_t sub_1AE8CA4E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1AE8CA5B4(*(_QWORD *)(v0 + 152));
}

uint64_t *sub_1AE8CA514()
{
  uint64_t *v0;

  sub_1AE5158B8(v0[2], v0[3]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE8CA5B4(v0[19]);
  return v0;
}

uint64_t sub_1AE8CA574()
{
  sub_1AE8CA514();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Virtual()
{
  return objc_opt_self();
}

uint64_t sub_1AE8CA5B4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1AE8CA60C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t *v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t *v63;
  _QWORD v64[2];
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;

  sub_1AE4F67EC();
  v2 = v1;
  v4 = v3;
  v5 = sub_1AE926F7C();
  v69 = *(_QWORD *)(v5 - 8);
  v70 = v5;
  MEMORY[0x1E0C80A78](v5);
  v68 = (char *)v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = sub_1AE925C98();
  v9 = v4;
  v10 = (_QWORD *)v8;
  v11 = *(_QWORD *)(v9 + 16);
  if (!v11)
  {
LABEL_47:
    if (*(_QWORD *)(v7 + 16))
    {
      sub_1AE8CC7C4();
      sub_1AE92691C();
      sub_1AE88D50C();
      sub_1AE8CC770();
      v85 = v58;
      v86 = v59;
      MEMORY[0x1AF453400](v7, MEMORY[0x1E0DEA968]);
      sub_1AE925F74();
      sub_1AE4F6710();
      sub_1AE4F6648();
      v60 = v85;
      v61 = v86;
      sub_1AE8CC4D4();
      v62 = sub_1AE4F6778();
      *v63 = v60;
      v63[1] = v61;
      sub_1AE509B7C(v62, (uint64_t)v63);
    }
    else
    {
      sub_1AE4F6648();
    }
    swift_bridgeObjectRelease();
    sub_1AE4F667C();
    return;
  }
  v72 = (uint64_t *)(v0 + 128);
  v12 = v9;
  swift_bridgeObjectRetain();
  v64[1] = v12;
  v13 = (uint64_t *)(v12 + 40);
  v66 = 0x80000001AE98B460;
  v65 = 0x80000001AE98B410;
  v73 = v2;
  while (1)
  {
    v15 = *(v13 - 1);
    v14 = *v13;
    v16 = HIBYTE(*v13) & 0xF;
    if ((*v13 & 0x2000000000000000) == 0)
      v16 = v15 & 0xFFFFFFFFFFFFLL;
    if (!v16)
      break;
    v83 = v13;
    v84 = v11;
    sub_1AE4F6A24();
    sub_1AE92601C();
    sub_1AE4F67AC();
    if ((sub_1AE8CC8D4() & 1) != 0)
    {
      if ((sub_1AE8CC8BC() & 0x100000000) != 0)
        goto LABEL_54;
      sub_1AE8CC830();
      sub_1AE926F58();
      sub_1AE8CC77C();
      if ((v2 & 1) != 0)
      {
LABEL_16:
        sub_1AE4F6718();
LABEL_17:
        v18 = 1;
        goto LABEL_24;
      }
    }
    if ((sub_1AE8CC8C8() & 1) != 0)
    {
      if ((sub_1AE8CC8D4() & 1) != 0)
      {
        if ((sub_1AE8CC8BC() & 0x100000000) != 0)
          goto LABEL_55;
        sub_1AE8CC830();
        sub_1AE926F70();
        sub_1AE8CC77C();
        if ((v2 & 1) != 0)
          goto LABEL_16;
      }
      if ((sub_1AE925D64() & 1) == 0)
        goto LABEL_16;
      v17 = sub_1AE8CC8C8();
      sub_1AE4F6718();
      if ((v17 & 1) == 0)
        goto LABEL_17;
    }
    else
    {
      sub_1AE4F6718();
    }
    sub_1AE8CC7C4();
    sub_1AE92691C();
    sub_1AE88D50C();
    v85 = 0xD00000000000001DLL;
    v86 = v65;
    sub_1AE8CC7E0();
    v19 = v85;
    v20 = v86;
    v21 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1AE4F96F8();
      v7 = v56;
    }
    v22 = *(_QWORD *)(v7 + 16);
    if (v22 >= *(_QWORD *)(v7 + 24) >> 1)
    {
      sub_1AE4F96F8();
      v7 = v57;
    }
    v18 = 0;
    *(_QWORD *)(v7 + 16) = v22 + 1;
    v23 = v7 + 16 * v22;
    *(_QWORD *)(v23 + 32) = v19;
    *(_QWORD *)(v23 + 40) = v20;
    v15 = v21;
LABEL_24:
    v24 = sub_1AE925E9C();
    v26 = v24;
    v27 = v25;
    if (v10[2])
    {
      sub_1AE536EDC(v24, v25);
      if ((v28 & 1) != 0)
      {
        sub_1AE4F6708();
        sub_1AE4F6718();
        sub_1AE8CC7C4();
        sub_1AE92691C();
        sub_1AE88D50C();
        v85 = 0xD000000000000015;
        v86 = v66;
        sub_1AE925F74();
        sub_1AE4F76D8();
        sub_1AE925F74();
        sub_1AE8CC7E0();
        v29 = v85;
        v30 = v86;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE4F96F8();
          v7 = v54;
        }
        v31 = *(_QWORD *)(v7 + 16);
        if (v31 >= *(_QWORD *)(v7 + 24) >> 1)
        {
          sub_1AE4F96F8();
          v7 = v55;
        }
        v74 = v10;
        v75 = v7;
        *(_QWORD *)(v7 + 16) = v31 + 1;
        v32 = v7 + 16 * v31;
        *(_QWORD *)(v32 + 32) = v29;
        *(_QWORD *)(v32 + 40) = v30;
        goto LABEL_39;
      }
    }
    if ((v18 & 1) == 0)
    {
      v74 = v10;
      v75 = v7;
      sub_1AE4F6718();
LABEL_39:
      sub_1AE4FB9BC();
      sub_1AE4F66CC();
      v71 = sub_1AE536EDC(v15, v14);
      v41 = v40;
      sub_1AE4F9038();
      v42 = 0;
      v81 = 0;
      v82 = 0;
      v79 = 0;
      v80 = 0;
      v77 = 0;
      v78 = 0;
      v76 = 0;
      if ((v41 & 1) != 0)
      {
        v43 = v72;
        sub_1AE508E78();
        v87 = *v43;
        *v43 = 0x8000000000000000;
        sub_1AE501548(&qword_1ED30FD28);
        sub_1AE926A54();
        v44 = v71;
        swift_bridgeObjectRelease();
        v45 = *(_QWORD *)(v87 + 56) + 112 * v44;
        v67 = *(_QWORD *)v45;
        v46 = *(_QWORD *)(v45 + 8);
        v81 = *(_QWORD *)(v45 + 16);
        v82 = v46;
        v47 = *(_QWORD *)(v45 + 24);
        v79 = *(_QWORD *)(v45 + 32);
        v80 = v47;
        v78 = *(unsigned __int8 *)(v45 + 40);
        v48 = *(_QWORD *)(v45 + 48);
        v76 = *(_QWORD *)(v45 + 56);
        v77 = v48;
        sub_1AE926A6C();
        *v43 = v87;
        v42 = v67;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      sub_1AE5158B8(v42, v82);
      sub_1AE4F67AC();
      LOBYTE(v2) = v73;
      v10 = v74;
      v7 = v75;
      goto LABEL_45;
    }
    swift_isUniquelyReferenced_nonNull_native();
    v85 = (unint64_t)v10;
    v82 = v26;
    v33 = sub_1AE8369D0();
    if (__OFADD__(v10[2], (v34 & 1) == 0))
      goto LABEL_52;
    v35 = v33;
    v36 = v34;
    sub_1AE501548(&qword_1ED30FD00);
    if ((sub_1AE926A54() & 1) != 0)
    {
      v37 = sub_1AE536EDC(v82, v27);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_56;
      v35 = v37;
    }
    v10 = (_QWORD *)v85;
    if ((v36 & 1) != 0)
    {
      v39 = (uint64_t *)(*(_QWORD *)(v85 + 56) + 16 * v35);
      swift_bridgeObjectRelease();
      *v39 = v15;
      v39[1] = v14;
    }
    else
    {
      sub_1AE85CCD8(v85 + 8 * (v35 >> 6));
      v49 = (_QWORD *)(v10[6] + 16 * v35);
      *v49 = v82;
      v49[1] = v27;
      v50 = (uint64_t *)(v10[7] + 16 * v35);
      *v50 = v15;
      v50[1] = v14;
      v51 = v10[2];
      v52 = __OFADD__(v51, 1);
      v53 = v51 + 1;
      if (v52)
        goto LABEL_53;
      v10[2] = v53;
      sub_1AE4F81B0();
    }
    sub_1AE4F6718();
    sub_1AE4FDCF0();
    LOBYTE(v2) = v73;
LABEL_45:
    v13 = v83 + 2;
    v11 = v84 - 1;
    if (v84 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  sub_1AE926DE4();
  __break(1u);
}

void sub_1AE8CACB4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  v26 = (uint64_t *)(v0 + 128);
  sub_1AE4FB9BC();
  v3 = *(_QWORD *)(v0 + 128) + 64;
  sub_1AE4F95DC();
  v6 = v5 & v4;
  v24 = (unint64_t)(v7 + 63) >> 6;
  v27 = v8;
  swift_bridgeObjectRetain();
  v9 = 0;
  v23 = v3;
  while (v6)
  {
    v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v11 = v10 | (v9 << 6);
LABEL_15:
    v17 = (uint64_t *)(*(_QWORD *)(v27 + 48) + 16 * v11);
    v18 = *v17;
    v19 = v17[1];
    sub_1AE4FB764();
    sub_1AE8CB0EC();
    if (v2)
    {
      sub_1AE4FB9BC();
      sub_1AE4F66CC();
      v25 = sub_1AE536EDC(v18, v19);
      v21 = v20;
      sub_1AE4F9038();
      v28 = 0;
      v29 = 0;
      if ((v21 & 1) != 0)
      {
        swift_isUniquelyReferenced_nonNull_native();
        v30 = *v26;
        *v26 = 0x8000000000000000;
        sub_1AE501548(&qword_1ED30FD28);
        sub_1AE926A54();
        swift_bridgeObjectRelease();
        v22 = (uint64_t *)(*(_QWORD *)(v30 + 56) + 112 * v25);
        v28 = v22[1];
        v29 = *v22;
        sub_1AE926A6C();
        *v26 = v30;
        v3 = v23;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      sub_1AE5158B8(v29, v28);
      swift_bridgeObjectRelease();
      sub_1AE8CC860();
      sub_1AE4F6710();
      sub_1AE5D8C70();
      sub_1AE501548((uint64_t *)&unk_1ED319C60);
      sub_1AE926A48();

      v2 = 0;
    }
    else
    {
      sub_1AE4F6710();
    }
  }
  if (__OFADD__(v9++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v9 >= v24)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * v9))
  {
LABEL_14:
    sub_1AE50766C();
    v6 = v15 & v14;
    v11 = v16 + (v9 << 6);
    goto LABEL_15;
  }
  v13 = v9 + 1;
  if (v9 + 1 >= v24)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * v13))
    goto LABEL_13;
  v13 = v9 + 2;
  if (v9 + 2 >= v24)
    goto LABEL_24;
  if (*(_QWORD *)(v3 + 8 * v13))
    goto LABEL_13;
  v13 = v9 + 3;
  if (v9 + 3 >= v24)
  {
LABEL_24:
    swift_release();
    sub_1AE4F6648();
    sub_1AE8CC6F4();
    return;
  }
  if (*(_QWORD *)(v3 + 8 * v13))
  {
LABEL_13:
    v9 = v13;
    goto LABEL_14;
  }
  while (1)
  {
    v9 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v9 >= v24)
      goto LABEL_24;
    ++v13;
    if (*(_QWORD *)(v3 + 8 * v9))
      goto LABEL_14;
  }
LABEL_26:
  __break(1u);
}

void sub_1AE8CB0EC()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  BOOL v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[5];
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  sub_1AE4F67EC();
  v6 = v5;
  v7 = v4;
  v8 = v3;
  v9 = v2;
  if (v2[2])
  {
    v10 = v2[4] == v3 && v2[5] == v4;
    if (v10 || (sub_1AE4FB6F0() & 1) != 0)
    {
      sub_1AE4F8410();
      sub_1AE92691C();
      sub_1AE8CC828();
      sub_1AE8CC798();
      sub_1AE8CC7B4(v11 + 7);
      MEMORY[0x1AF453400](v9, MEMORY[0x1E0DEA968]);
      sub_1AE925F74();
      sub_1AE4F6648();
      sub_1AE925F74();
LABEL_17:
      sub_1AE8CC754();
      sub_1AE8CC4D4();
      v27 = sub_1AE4F6778();
      *v28 = v79;
      v28[1] = v80;
      sub_1AE509B7C(v27, (uint64_t)v28);
LABEL_18:
      sub_1AE4F667C();
      return;
    }
  }
  sub_1AE4FB9BC();
  if (!*(_QWORD *)(*(_QWORD *)(v0 + 128) + 16))
  {
LABEL_16:
    sub_1AE4FF4F8();
    sub_1AE4F8410();
    sub_1AE8CC858();
    sub_1AE8CC828();
    sub_1AE8CC798();
    sub_1AE8CC7B4(v26);
    goto LABEL_17;
  }
  sub_1AE4FB930();
  sub_1AE5089EC(v8);
  if ((v12 & 1) == 0)
  {
    sub_1AE4F66E8();
    goto LABEL_16;
  }
  v76 = v8;
  v77 = v0;
  sub_1AE8CC8A8();
  v65 = v13;
  v15 = *(_QWORD *)(v14 + 16);
  v64 = *(_QWORD *)(v14 + 24);
  v74 = *(_QWORD *)(v14 + 32);
  v63 = *(_BYTE *)(v14 + 40);
  v16 = *(_QWORD *)(v14 + 56);
  v17 = *(_QWORD *)(v14 + 72);
  v75 = *(_QWORD *)(v14 + 64);
  v78 = v7;
  v18 = *(_QWORD *)(v14 + 80);
  v19 = *(_QWORD *)(v14 + 88);
  v61 = *(_QWORD *)(v14 + 96);
  v62 = *(_QWORD *)(v14 + 48);
  v20 = v6;
  v21 = *(_QWORD *)(v14 + 104);
  sub_1AE4FF4F8();
  sub_1AE4FB764();
  v70 = v8;
  swift_bridgeObjectRetain();
  v71 = v15;
  sub_1AE4F6804();
  sub_1AE4F6730();
  sub_1AE4F81B0();
  sub_1AE4FB75C();
  sub_1AE50668C();
  swift_retain();
  swift_bridgeObjectRelease();
  v66 = v20;
  if (v20 <= 0)
  {
    sub_1AE4F8410();
    sub_1AE92691C();
    sub_1AE8CC828();
    sub_1AE8CC798();
    sub_1AE8CC7B4(v29 + 29);
    sub_1AE8CC754();
    sub_1AE8CC4D4();
    v30 = sub_1AE4F6778();
    *v31 = v79;
    v31[1] = v80;
    sub_1AE509B7C(v30, (uint64_t)v31);
    sub_1AE4F6710();
    sub_1AE4F77C8();
    sub_1AE507978();
    sub_1AE4F6728();
    sub_1AE4F6718();
    sub_1AE4F81B8();
    swift_bridgeObjectRelease();
    goto LABEL_53;
  }
  v69 = v21;
  v67 = v17;
  v68 = v16;
  v22 = v18;
  if (v18)
  {
    swift_bridgeObjectRetain();
    sub_1AE4F66CC();
    sub_1AE4FB930();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v23 = (uint64_t)v1;
LABEL_13:
    v24 = (_QWORD *)sub_1AE4FCFE8();
    sub_1AE8CB968(v24);
    if (!v23)
    {
      v40 = v25;
      sub_1AE4F6700();
      v72 = v40 + 56;
      sub_1AE4F95DC();
      v43 = v42 & v41;
      sub_1AE8CC764();
      v73 = v44;
      while (1)
      {
        v45 = v75;
        if (v43)
        {
          v43 &= v43 - 1;
        }
        else
        {
          if (__OFADD__(v23++, 1))
          {
            __break(1u);
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
          if (v23 >= v73)
            goto LABEL_49;
          if (!*(_QWORD *)(v72 + 8 * v23))
          {
            v47 = v23 + 1;
            if (v23 + 1 >= v73)
              goto LABEL_49;
            if (!*(_QWORD *)(v72 + 8 * v47))
            {
              v47 = v23 + 2;
              if (v23 + 2 >= v73)
                goto LABEL_49;
              if (!*(_QWORD *)(v72 + 8 * v47))
              {
                v47 = v23 + 3;
                if (v23 + 3 >= v73)
                {
LABEL_49:
                  v56 = v19;
                  sub_1AE4FDCE8();
                  sub_1AE4F77C8();
                  v57 = v68;
                  v58 = v69;
                  if (!v19)
                  {
                    v59 = (_QWORD *)sub_1AE4F943C();
                    sub_1AE8C9F48(v59, v66);
                    v56 = v60;
                    sub_1AE4FB730();
                    v45 = v75;
                    v57 = v68;
                    v58 = v69;
                  }
                  v81[0] = v65;
                  v81[1] = v70;
                  v81[2] = v71;
                  v81[3] = v64;
                  v81[4] = v74;
                  v82 = v63;
                  v83 = v62;
                  v84 = v57;
                  v85 = v45;
                  v86 = v67;
                  v87 = v22;
                  v88 = v56;
                  v89 = v61;
                  v90 = v58;
                  sub_1AE4F81B0();
                  sub_1AE4F6730();
                  sub_1AE4F6804();
                  sub_1AE4FB930();
                  sub_1AE4FB764();
                  sub_1AE4F67A4();
                  sub_1AE4F943C();
                  swift_retain();
                  sub_1AE4F81B8();
                  sub_1AE4F67AC();
                  sub_1AE4F66E8();
                  sub_1AE4F6710();
                  sub_1AE4F6728();
                  sub_1AE4FB9BC();
                  sub_1AE6550B0(v81, v76, v78);
                  sub_1AE4FF4F8();
                  sub_1AE8CC850();
                  sub_1AE8CC86C();
                  sub_1AE4FB730();
                  sub_1AE4F6728();
                  sub_1AE4F6710();
                  sub_1AE4F66E8();
                  sub_1AE4F67AC();
                  goto LABEL_52;
                }
                if (!*(_QWORD *)(v72 + 8 * v47))
                {
                  while (1)
                  {
                    v23 = v47 + 1;
                    if (__OFADD__(v47, 1))
                      goto LABEL_55;
                    if (v23 >= v73)
                      goto LABEL_49;
                    ++v47;
                    if (*(_QWORD *)(v72 + 8 * v23))
                      goto LABEL_38;
                  }
                }
              }
            }
            v23 = v47;
          }
LABEL_38:
          sub_1AE50766C();
          v43 = v49 & v48;
        }
        sub_1AE4F6A24();
        sub_1AE4F67A4();
        sub_1AE4F6804();
        v50 = v9;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AE519C48();
          v50 = v54;
        }
        v51 = v50[2];
        if (v51 >= v50[3] >> 1)
        {
          sub_1AE4FF288();
          v50 = v55;
        }
        v50[2] = v51 + 1;
        v52 = &v50[2 * v51];
        v52[4] = v76;
        v52[5] = v78;
        sub_1AE4F6648();
        v53 = sub_1AE5BCD44();
        sub_1AE8CB0EC(v53);
        sub_1AE4F67AC();
        sub_1AE4F81B8();
      }
    }
    sub_1AE4FC54C();
    sub_1AE4FC54C();
    sub_1AE4F6824();
    sub_1AE4F6824();
    sub_1AE4F6824();
    sub_1AE4F6824();
    sub_1AE4F6824();
    sub_1AE4F6824();
    goto LABEL_18;
  }
  v32 = *(_QWORD *)(v77 + 152);
  if (v32)
  {
    sub_1AE4F6708();
    sub_1AE4F81B0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1AE8CC650(v32);
    sub_1AE83060C(v75, v17);
    v23 = (uint64_t)v1;
    if (!v1)
    {
      v22 = v33;
      sub_1AE8CC72C();
      goto LABEL_13;
    }
    sub_1AE8CC72C();
    sub_1AE8CC86C();
    sub_1AE4F9038();
    swift_bridgeObjectRelease();
    sub_1AE4F67AC();
    sub_1AE4F66E8();
    sub_1AE4F6728();
    sub_1AE8CC850();
    v34 = v1;
    sub_1AE501548((uint64_t *)&unk_1ED319C60);
    if (swift_dynamicCast())
    {

      v35 = ParserError.description.getter();
      v37 = v36;
      sub_1AE4F6648();
      swift_bridgeObjectRelease();
      sub_1AE8CC4D4();
      v38 = sub_1AE4F6778();
      *v39 = v35;
      v39[1] = v37;
      sub_1AE509B7C(v38, (uint64_t)v39);
    }

    sub_1AE8CC850();
    sub_1AE8CC86C();
    swift_release();
    sub_1AE4F6728();
    sub_1AE4F66E8();
    sub_1AE4F67AC();
LABEL_52:
    swift_bridgeObjectRelease();
LABEL_53:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
LABEL_56:
  __break(1u);
}

void sub_1AE8CB968(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  int64_t v45;
  int64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66[16];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v3 = v2;
  v69 = MEMORY[0x1E0DEE9E8];
  v5 = a1[2];
  v6 = a1[3];
  sub_1AE4F6804();
  v61 = v1;
  v7 = sub_1AE8CBD30(v5, v6);
  sub_1AE4F67AC();
  if (!v7)
  {
    sub_1AE8CC858();
    swift_bridgeObjectRelease();
    sub_1AE8CC798();
    sub_1AE8CC770();
    v67 = v16;
    v68 = v17;
    sub_1AE4FB75C();
    sub_1AE507008();
    sub_1AE4F6648();
    v18 = v68;
    sub_1AE8CC4D4();
    v19 = sub_1AE4F6778();
    *v20 = v67;
    v20[1] = v18;
    sub_1AE509B7C(v19, (uint64_t)v20);
    goto LABEL_49;
  }
  if (v7 == 1)
  {
    v8 = a1[2];
    v9 = a1[3];
    sub_1AE4F6804();
    sub_1AE555EFC((uint64_t)&v67, v8, v9, v10, v11, v12, v13, v14, v59, v61);
    swift_bridgeObjectRelease();
  }
  sub_1AE4FB9BC();
  if (a1[4])
  {
    v15 = a1[4];
  }
  else
  {
    type metadata accessor for KnosisQueryParam();
    v15 = sub_1AE925C98();
  }
  v62 = v15 + 64;
  sub_1AE640B28();
  v23 = v22 & v21;
  sub_1AE8CC764();
  v63 = v24;
  swift_bridgeObjectRetain();
  v25 = 0;
  v60 = v15;
  do
  {
LABEL_9:
    if (v23)
    {
      sub_1AE4F79B8();
      v27 = v26 | (v25 << 6);
    }
    else
    {
      if (__OFADD__(v25++, 1))
        goto LABEL_52;
      if (v25 >= v63)
        goto LABEL_47;
      if (!*(_QWORD *)(v62 + 8 * v25))
      {
        v29 = v25 + 1;
        if (v25 + 1 >= v63)
          goto LABEL_47;
        if (!*(_QWORD *)(v62 + 8 * v29))
        {
          v29 = v25 + 2;
          if (v25 + 2 >= v63)
            goto LABEL_47;
          if (!*(_QWORD *)(v62 + 8 * v29))
          {
            v29 = v25 + 3;
            if (v25 + 3 >= v63)
              goto LABEL_47;
            if (!*(_QWORD *)(v62 + 8 * v29))
            {
              while (1)
              {
                v25 = v29 + 1;
                if (__OFADD__(v29, 1))
                  goto LABEL_53;
                if (v25 >= v63)
                  break;
                ++v29;
                if (*(_QWORD *)(v62 + 8 * v25))
                  goto LABEL_21;
              }
LABEL_47:
              sub_1AE4FB730();
LABEL_49:
              sub_1AE506D24();
              return;
            }
          }
        }
        v25 = v29;
      }
LABEL_21:
      sub_1AE50766C();
      v23 = v31 & v30;
      v27 = v32 + (v25 << 6);
    }
    v33 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v27);
    sub_1AE4FB9BC();
  }
  while (!*(_QWORD *)(v33 + 24));
  sub_1AE4F66CC();
  sub_1AE509AC4();
  v34 = swift_retain();
  v35 = sub_1AE8CB968(v34);
  if (v3)
  {
    sub_1AE4FB730();
    sub_1AE4F77C8();
    sub_1AE8CC724();
    sub_1AE507978();
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  v36 = v35;
  v64 = v23;
  v65 = v25;
  v37 = 0;
  v38 = v35 + 56;
  sub_1AE640B28();
  v41 = v40 & v39;
  v43 = (unint64_t)(v42 + 63) >> 6;
  if ((v40 & v39) != 0)
  {
LABEL_25:
    sub_1AE508064();
    v45 = v44 | (v37 << 6);
    goto LABEL_40;
  }
  while (1)
  {
    v46 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v46 >= v43)
      goto LABEL_42;
    ++v37;
    if (!*(_QWORD *)(v38 + 8 * v46))
    {
      v37 = v46 + 1;
      if (v46 + 1 >= v43)
        goto LABEL_42;
      if (!*(_QWORD *)(v38 + 8 * v37))
      {
        v37 = v46 + 2;
        if (v46 + 2 >= v43)
          goto LABEL_42;
        if (!*(_QWORD *)(v38 + 8 * v37))
          break;
      }
    }
LABEL_39:
    sub_1AE50747C();
    v41 = v49 & v48;
    v45 = v50 + (v37 << 6);
LABEL_40:
    v51 = (uint64_t *)(*(_QWORD *)(v36 + 48) + 16 * v45);
    v52 = *v51;
    v53 = v51[1];
    sub_1AE4F81B0();
    sub_1AE555EFC((uint64_t)v66, v52, v53, v54, v55, v56, v57, v58, v60, v61);
    sub_1AE8CC7AC();
    if (v41)
      goto LABEL_25;
  }
  v47 = v46 + 3;
  if (v47 >= v43)
  {
LABEL_42:
    sub_1AE8CC724();
    sub_1AE4FDCE8();
    sub_1AE507978();
    sub_1AE4F77C8();
    v25 = v65;
    v3 = 0;
    v15 = v60;
    v23 = v64;
    goto LABEL_9;
  }
  if (*(_QWORD *)(v38 + 8 * v47))
  {
    v37 = v47;
    goto LABEL_39;
  }
  while (1)
  {
    v37 = v47 + 1;
    if (__OFADD__(v47, 1))
      break;
    if (v37 >= v43)
      goto LABEL_42;
    ++v47;
    if (*(_QWORD *)(v38 + 8 * v37))
      goto LABEL_39;
  }
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
}

uint64_t sub_1AE8CBD30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  uint64_t v7;
  char v8;
  char v9;

  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 128) + 16))
  {
    sub_1AE4FB75C();
    sub_1AE536EDC(a1, a2);
    if ((v5 & 1) != 0)
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      return 1;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v7 = *(_QWORD *)(v2 + 136);
  sub_1AE4F66CC();
  sub_1AE551594(a1, a2, v7);
  v9 = v8;
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 2;
  else
    return 0;
}

uint64_t sub_1AE8CBDF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  isUniquelyReferenced_nonNull_native = a1;
  v4 = a1[2];
  sub_1AE4FB9BC();
  if (!*(_QWORD *)(*(_QWORD *)(v1 + 128) + 16))
    goto LABEL_9;
  sub_1AE4FB75C();
  sub_1AE8CC894(v4);
  if ((v5 & 1) == 0)
  {
    sub_1AE4F6648();
LABEL_9:
    swift_endAccess();
    sub_1AE50668C();
    return (uint64_t)isUniquelyReferenced_nonNull_native;
  }
  sub_1AE8CC8A8();
  v54 = v6;
  v8 = v7[2];
  v64 = v7[3];
  v58 = v7[4];
  v9 = v7[11];
  swift_endAccess();
  swift_bridgeObjectRetain();
  v55 = v4;
  sub_1AE4F6730();
  v57 = v8;
  sub_1AE4F6804();
  sub_1AE4FB930();
  sub_1AE4F67A4();
  sub_1AE4FB764();
  sub_1AE5069B0();
  v56 = v9;
  sub_1AE4F66E0();
  sub_1AE4F6648();
  type metadata accessor for KnosisQueryParam();
  v10 = (_QWORD *)sub_1AE925C98();
  sub_1AE4FB9BC();
  v61 = isUniquelyReferenced_nonNull_native[4];
  if (!v61)
  {
LABEL_42:
    if (v56)
    {
      sub_1AE4FCFE8();
      sub_1AE882010();
      isUniquelyReferenced_nonNull_native = v48;
      sub_1AE4F6700();
      isUniquelyReferenced_nonNull_native[12] = v54;
      isUniquelyReferenced_nonNull_native[13] = v55;
      sub_1AE4FB930();
      swift_bridgeObjectRelease();
      sub_1AE8C7C4C((uint64_t)isUniquelyReferenced_nonNull_native, (uint64_t)v10, 25);
      if (!v2)
      {
        sub_1AE4F67AC();
        sub_1AE8CC7A4();
        sub_1AE4F6700();
        sub_1AE8CC75C();
        sub_1AE8CC724();
        sub_1AE736F6C();
        sub_1AE8CC744();
        sub_1AE8CC7AC();
        sub_1AE4F66E8();
        return (uint64_t)isUniquelyReferenced_nonNull_native;
      }
      sub_1AE4F682C();
      sub_1AE4F67AC();
      sub_1AE8CC7A4();
      sub_1AE4F6700();
      sub_1AE8CC75C();
      sub_1AE8CC724();
      sub_1AE736F6C();
      sub_1AE8CC744();
      sub_1AE8CC7AC();
      goto LABEL_47;
    }
    sub_1AE4F67AC();
    sub_1AE92691C();
    swift_bridgeObjectRelease();
    sub_1AE8CC770();
    v62 = v49;
    v63 = v50;
    sub_1AE4FB930();
    sub_1AE8CC754();
    sub_1AE4F66E8();
    sub_1AE925F74();
    sub_1AE8CC4D4();
    v51 = sub_1AE4F6778();
    *v52 = v62;
    v52[1] = v63;
    sub_1AE505700(v51, (uint64_t)v52);
    sub_1AE8CC7A4();
    sub_1AE4F6700();
    sub_1AE8CC75C();
    sub_1AE8CC724();
    sub_1AE736F6C();
    sub_1AE8CC744();
LABEL_46:
    swift_bridgeObjectRelease();
LABEL_47:
    sub_1AE4F66E8();
    return (uint64_t)isUniquelyReferenced_nonNull_native;
  }
  v11 = HIBYTE(v58) & 0xF;
  if ((v58 & 0x2000000000000000) == 0)
    v11 = v64 & 0xFFFFFFFFFFFFLL;
  if (v11)
  {
    v12 = *(_QWORD *)(v57 + 16);
    v13 = *(_QWORD *)(v61 + 16);
    v14 = v13 == v12 - 1;
  }
  else
  {
    v14 = 0;
    v13 = *(_QWORD *)(v61 + 16);
    v12 = *(_QWORD *)(v57 + 16);
  }
  if (v13 != v12 && !v14)
  {
    sub_1AE4FB764();
    sub_1AE4F67AC();
    sub_1AE92691C();
    sub_1AE925F74();
    sub_1AE4FB930();
    sub_1AE8CC754();
    sub_1AE4F66E8();
    sub_1AE8CC790();
    v44 = sub_1AE4F67A4();
    MEMORY[0x1AF453400](v44, MEMORY[0x1E0DEA968]);
    isUniquelyReferenced_nonNull_native = v45;
    sub_1AE8CC790();
    sub_1AE4F6728();
    sub_1AE4F76D8();
    sub_1AE8CC790();
    sub_1AE925C68();
    sub_1AE8CC790();
    sub_1AE4F6710();
    sub_1AE4F6648();
    sub_1AE8CC4D4();
    v46 = sub_1AE4F6778();
    *v47 = 0;
    v47[1] = 0xE000000000000000;
    sub_1AE505700(v46, (uint64_t)v47);
    sub_1AE8CC7A4();
    swift_release();
    sub_1AE8CC75C();
    sub_1AE8CC724();
    sub_1AE736F6C();
    sub_1AE8CC744();
    goto LABEL_46;
  }
  v59 = v61 + 64;
  sub_1AE506C24();
  v18 = v17 & v16;
  sub_1AE8CC764();
  v60 = v19;
  swift_bridgeObjectRetain();
  v20 = 0;
  if (!v18)
    goto LABEL_17;
LABEL_16:
  sub_1AE4F79B8();
  v65 = v21;
  for (i = v22 | (v21 << 6); ; i = v28 + (v27 << 6))
  {
    v29 = *(_QWORD *)(*(_QWORD *)(v61 + 56) + 8 * i);
    v30 = sub_1AE925E9C();
    v32 = v31;
    sub_1AE73EEAC();
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    v33 = sub_1AE536EDC(v30, v32);
    if (__OFADD__(v10[2], (v34 & 1) == 0))
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v35 = v33;
    v36 = v34;
    sub_1AE501548(&qword_1ED30FD18);
    if ((sub_1AE926A54() & 1) != 0)
    {
      v37 = sub_1AE8CC894(v30);
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_54;
      v35 = v37;
    }
    if ((v36 & 1) != 0)
    {
      v39 = v10[7];
      swift_release();
      *(_QWORD *)(v39 + 8 * v35) = v29;
    }
    else
    {
      sub_1AE85CCD8((uint64_t)&v10[v35 >> 6]);
      v40 = (uint64_t *)(v10[6] + 16 * v35);
      *v40 = v30;
      v40[1] = v32;
      *(_QWORD *)(v10[7] + 8 * v35) = v29;
      v41 = v10[2];
      v42 = __OFADD__(v41, 1);
      v43 = v41 + 1;
      if (v42)
        goto LABEL_51;
      v10[2] = v43;
      sub_1AE4FB75C();
    }
    sub_1AE4F6700();
    sub_1AE4F6648();
    sub_1AE4FDCF0();
    v20 = v65;
    if (v18)
      goto LABEL_16;
LABEL_17:
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
      goto LABEL_52;
    if (v24 >= v60)
      goto LABEL_41;
    if (!*(_QWORD *)(v59 + 8 * v24))
    {
      if (v20 + 2 >= v60)
        goto LABEL_41;
      if (!*(_QWORD *)(v59 + 8 * (v20 + 2)))
      {
        if (v20 + 3 >= v60)
          goto LABEL_41;
        if (!*(_QWORD *)(v59 + 8 * (v20 + 3)))
        {
          v25 = v20 + 4;
          if (v20 + 4 >= v60)
          {
LABEL_41:
            sub_1AE737C60();
            goto LABEL_42;
          }
          if (!*(_QWORD *)(v59 + 8 * v25))
            break;
        }
      }
    }
LABEL_29:
    sub_1AE8CC7EC();
    v65 = v27;
  }
  while (1)
  {
    v26 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v26 >= v60)
      goto LABEL_41;
    ++v25;
    if (*(_QWORD *)(v59 + 8 * v26))
      goto LABEL_29;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE8CC45C(uint64_t a1, unint64_t a2)
{
  char v4;
  unint64_t v5;
  unint64_t v6;

  sub_1AE8CC888();
  v4 = sub_1AE926004();
  sub_1AE4FB75C();
  if ((v4 & 1) != 0)
  {
    sub_1AE8CC888();
    v5 = sub_1AE925F20();
    v6 = sub_1AE5BB100(v5, a1, a2);
    a1 = MEMORY[0x1AF4530E8](v6);
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t sub_1AE8CC4D4()
{
  unint64_t result;

  result = qword_1EEDA5C78;
  if (!qword_1EEDA5C78)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96E9B0, &type metadata for VOPError);
    atomic_store(result, (unint64_t *)&qword_1EEDA5C78);
  }
  return result;
}

uint64_t sub_1AE8CC510(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1AE8CC5B0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AE8CC650(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1AE8CC6A8()
{
  unint64_t result;

  result = qword_1ED30FB10;
  if (!qword_1ED30FB10)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE967904, &unk_1E5DB84F0);
    atomic_store(result, (unint64_t *)&qword_1ED30FB10);
  }
  return result;
}

ValueMetadata *type metadata accessor for VOPError()
{
  return &type metadata for VOPError;
}

uint64_t sub_1AE8CC724()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8CC72C()
{
  uint64_t v0;

  return sub_1AE8CA5B4(v0);
}

uint64_t sub_1AE8CC744()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8CC74C()
{
  return swift_endAccess();
}

uint64_t sub_1AE8CC754()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE8CC75C()
{
  return swift_release();
}

uint64_t sub_1AE8CC77C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 240) + 8))(v0, *(_QWORD *)(v1 - 232));
}

uint64_t sub_1AE8CC790()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE8CC7A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8CC7AC()
{
  return swift_bridgeObjectRelease();
}

void sub_1AE8CC7B4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 256) = a1;
  *(_QWORD *)(v2 - 248) = (v1 - 32) | 0x8000000000000000;
}

void sub_1AE8CC7C4()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 112) = 0;
  *(_QWORD *)(v0 - 104) = 0xE000000000000000;
}

uint64_t sub_1AE8CC7D4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AE50BDB4(v1, v0);
}

uint64_t sub_1AE8CC7E0()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE8CC800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1AE8C7C4C(a1, a2, a12);
}

uint64_t sub_1AE8CC820()
{
  return sub_1AE926A54();
}

uint64_t sub_1AE8CC828()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8CC830()
{
  return sub_1AE926F88();
}

uint64_t sub_1AE8CC850()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8CC858()
{
  return sub_1AE92691C();
}

uint64_t sub_1AE8CC860()
{
  return sub_1AE925F74();
}

uint64_t sub_1AE8CC86C()
{
  return swift_release();
}

uint64_t sub_1AE8CC888()
{
  return 36;
}

uint64_t sub_1AE8CC894(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE536EDC(a1, v1);
}

uint64_t sub_1AE8CC89C(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE536EDC(a1, v1);
}

unint64_t sub_1AE8CC8BC()
{
  unint64_t v0;
  unint64_t v1;

  return sub_1AE805C10(v0, v1);
}

uint64_t sub_1AE8CC8C8()
{
  return sub_1AE925D58();
}

uint64_t sub_1AE8CC8D4()
{
  return sub_1AE925D7C();
}

uint64_t sub_1AE8CC8E0()
{
  return swift_release();
}

uint64_t sub_1AE8CC8E8(uint64_t a1, uint64_t a2)
{
  return sub_1AE515C74(a1, a2);
}

uint64_t sub_1AE8CC8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  return sub_1AE8CC510((uint64_t)&a36);
}

uint64_t sub_1AE8CC8F8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8CC900()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8CC908()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8CC910()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8CC918()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AE8CC920()
{
  return swift_endAccess();
}

unint64_t sub_1AE8CC928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return sub_1AE536FA8(a25, a27, a26);
}

void sub_1AE8CC934()
{
  uint64_t v0;

  sub_1AE889980();
  sub_1AE555C64(v0, type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1);
  sub_1AE4F6664();
}

uint64_t sub_1AE8CC968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE88A080(v0);
  v2 = v1;
  swift_release();
  return v2;
}

uint64_t sub_1AE8CC998()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE88A208();
  v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_1AE8CC9C8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE88A330();
  v1 = v0;
  swift_release();
  return v1;
}

uint64_t sub_1AE8CC9F8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE88A55C();
  v1 = v0;
  swift_release();
  return v1;
}

void sub_1AE8CCA28()
{
  uint64_t v0;

  sub_1AE88A770();
  sub_1AE555C64(v0, type metadata accessor for AnswerRenderIterator);
  sub_1AE4F6664();
}

uint64_t sub_1AE8CCA7C()
{
  uint64_t v0;

  sub_1AE4F9858((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  return swift_retain();
}

IntelligencePlatform::VisualUnderstandingService::Error_optional __swiftcall VisualUnderstandingService.Error.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 2)
    v2 = 1;
  else
    v2 = 2;
  if (rawValue == 1)
    v2 = 0;
  *v1 = v2;
  return (IntelligencePlatform::VisualUnderstandingService::Error_optional)rawValue;
}

uint64_t VisualUnderstandingService.Error.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 2;
  else
    return 1;
}

void sub_1AE8CCAD0()
{
  sub_1AE512D94();
}

void sub_1AE8CCAD8()
{
  sub_1AE5E86E0();
}

void sub_1AE8CCAE0()
{
  sub_1AE54F8BC();
}

IntelligencePlatform::VisualUnderstandingService::Error_optional sub_1AE8CCAE8(Swift::Int *a1)
{
  return VisualUnderstandingService.Error.init(rawValue:)(*a1);
}

void sub_1AE8CCAF0(uint64_t *a1@<X8>)
{
  *a1 = VisualUnderstandingService.Error.rawValue.getter();
  sub_1AE4F6664();
}

uint64_t sub_1AE8CCB10()
{
  sub_1AE8D2148();
  sub_1AE693FBC();
  return sub_1AE926E5C();
}

uint64_t VisualUnderstandingService.__allocating_init(client:version:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1AE4F6B80();
  VisualUnderstandingService.init(client:version:)();
  return v0;
}

void VisualUnderstandingService.init(client:version:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _UNKNOWN **v29;

  sub_1AE4F67EC();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  type metadata accessor for EntityRecognitionClient(0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F666C();
  v10 = v9 - v8;
  sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4FFEB4();
  v14 = v12 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v26 - v16;
  type metadata accessor for VisualUnderstandingService.Version(0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F666C();
  v21 = v20 - v19;
  v22 = v2 + OBJC_IVAR____TtC20IntelligencePlatform26VisualUnderstandingService_client;
  sub_1AE8CCE60(v6, v2 + OBJC_IVAR____TtC20IntelligencePlatform26VisualUnderstandingService_client, type metadata accessor for EntityRecognitionClient);
  sub_1AE8CCE60(v4, v21, type metadata accessor for VisualUnderstandingService.Version);
  v23 = sub_1AE501548(&qword_1ED319558);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v21, 1, v23) == 1)
  {
    sub_1AE926AB4();
    __break(1u);
  }
  else
  {
    sub_1AE8CCE8C(v21, (uint64_t)v17);
    sub_1AE8CCE60(v6, v10, type metadata accessor for EntityRecognitionClient);
    sub_1AE8CEC90((uint64_t)v17, v14, (uint64_t *)&unk_1ED31C9C0);
    v24 = type metadata accessor for VisualUnderstandingServiceBackendV1(0);
    sub_1AE4FCE84();
    sub_1AE8D23A4();
    if (v1)
    {
      sub_1AE555C64(v4, type metadata accessor for VisualUnderstandingService.Version);
      sub_1AE555C64(v6, type metadata accessor for EntityRecognitionClient);
      sub_1AE524534((uint64_t)v17, (uint64_t *)&unk_1ED31C9C0);
      sub_1AE555C64(v22, type metadata accessor for EntityRecognitionClient);
      type metadata accessor for VisualUnderstandingService(0);
      swift_deallocPartialClassInstance();
    }
    else
    {
      v28 = v24;
      v29 = &off_1E5DC57F8;
      *(_QWORD *)&v27 = v25;
      sub_1AE555C64(v4, type metadata accessor for VisualUnderstandingService.Version);
      sub_1AE555C64(v6, type metadata accessor for EntityRecognitionClient);
      sub_1AE524534((uint64_t)v17, (uint64_t *)&unk_1ED31C9C0);
      sub_1AE50AF58(&v27, v2 + 16);
    }
    sub_1AE4F667C();
  }
}

uint64_t type metadata accessor for EntityRecognitionClient(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1ED319DF0);
}

uint64_t type metadata accessor for VisualUnderstandingService.Version(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1ED318C38);
}

void sub_1AE8CCE60(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_1AE5089F4(v3);
  sub_1AE4F6664();
}

uint64_t sub_1AE8CCE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AE8CCED4()
{
  uint64_t v0;

  sub_1AE4F9858((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1AE4F6B80();
  sub_1AE8D2504();
  sub_1AE4FB76C();
}

void sub_1AE8CCF20()
{
  uint64_t v0;

  sub_1AE4F9858((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_1AE8D275C();
  sub_1AE4FB76C();
}

void sub_1AE8CCF70()
{
  sub_1AE50A89C();
  sub_1AE4FC4F8();
}

uint64_t sub_1AE8CCF8C()
{
  sub_1AE4F9834();
  return sub_1AE92589C();
}

uint64_t sub_1AE8CCFD0()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  sub_1AE4F9834();
  result = sub_1AE8D3220();
  if (v0)
    return v2 & 1;
  return result;
}

void sub_1AE8CD030()
{
  sub_1AE4F9834();
  sub_1AE8D32E8();
  sub_1AE4FC4F8();
}

void sub_1AE8CD068(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1AE4F9858((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_1AE8D2F44(a1);
  sub_1AE4F6664();
}

void sub_1AE8CD09C(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1AE4F9858((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  sub_1AE8D2F44(a1);
  sub_1AE4F6624();
}

void sub_1AE8CD0D8()
{
  sub_1AE4F9834();
  sub_1AE8D2A94();
}

uint64_t VisualUnderstandingService.deinit()
{
  uint64_t v0;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  sub_1AE555C64(v0 + OBJC_IVAR____TtC20IntelligencePlatform26VisualUnderstandingService_client, type metadata accessor for EntityRecognitionClient);
  return v0;
}

uint64_t VisualUnderstandingService.__deallocating_deinit()
{
  uint64_t v0;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  sub_1AE555C64(v0 + OBJC_IVAR____TtC20IntelligencePlatform26VisualUnderstandingService_client, type metadata accessor for EntityRecognitionClient);
  return swift_deallocClassInstance();
}

void sub_1AE8CD194(uint64_t a1)
{
  sub_1AE8CD204(a1, qword_1ED319560, MEMORY[0x1E0DC7298], 0x736F746F6870, 0xE600000000000000);
}

void static EntityRecognitionClient.photos.getter(uint64_t a1@<X8>)
{
  sub_1AE8CD3C8(&qword_1ED318BE0, (uint64_t)qword_1ED319560, a1);
}

void sub_1AE8CD1D4(uint64_t a1)
{
  sub_1AE8CD204(a1, qword_1EED94B10, MEMORY[0x1E0DC7290], 0x74616369646E7973, 0xEB000000006E6F69);
}

void sub_1AE8CD204(uint64_t a1, uint64_t *a2, unsigned int *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v9 = sub_1AE8D2204();
  sub_1AE595770(v9, a2);
  v10 = sub_1AE4F6B80();
  v12 = (_QWORD *)sub_1AE4FB608(v10, v11);
  v13 = (char *)v12 + *(int *)(v9 + 20);
  v14 = *a3;
  v15 = sub_1AE5097D4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  v16 = (char *)v12 + *(int *)(v9 + 24);
  v17 = *MEMORY[0x1E0DC71B0];
  v18 = sub_1AE5078B8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  *v12 = a4;
  v12[1] = a5;
  sub_1AE4FCDD0();
}

void static EntityRecognitionClient.syndication.getter(uint64_t a1@<X8>)
{
  sub_1AE8CD3C8(&qword_1EED93E68, (uint64_t)qword_1EED94B10, a1);
}

void sub_1AE8CD2C4(uint64_t a1)
{
  sub_1AE8CD204(a1, qword_1EED93E70, MEMORY[0x1E0DC72A8], 0x74696B656D6F68, 0xE700000000000000);
}

void static EntityRecognitionClient.homekit.getter(uint64_t a1@<X8>)
{
  sub_1AE8CD3C8(&qword_1EED98F50, (uint64_t)qword_1EED93E70, a1);
}

void sub_1AE8CD308(uint64_t a1)
{
  sub_1AE508560(a1, qword_1EED98F58, MEMORY[0x1E0DC72B0], 0x73746361746E6F63);
}

void static EntityRecognitionClient.contacts.getter(uint64_t a1@<X8>)
{
  sub_1AE8CD3C8(qword_1EED93E88, (uint64_t)qword_1EED98F58, a1);
}

void sub_1AE8CD348(uint64_t a1)
{
  sub_1AE508560(a1, qword_1EEDA5C80, MEMORY[0x1E0DC72B8], 0x6465767265736572);
}

void static EntityRecognitionClient.reserved.getter(uint64_t a1@<X8>)
{
  sub_1AE8CD3C8(&qword_1EED99910, (uint64_t)qword_1EEDA5C80, a1);
}

void sub_1AE8CD388(uint64_t a1)
{
  sub_1AE8CD204(a1, qword_1EEDA5C98, MEMORY[0x1E0DC72B8], 0x6C74637576, 0xE500000000000000);
}

void static EntityRecognitionClient.vuctl.getter(uint64_t a1@<X8>)
{
  sub_1AE8CD3C8(&qword_1EED99918, (uint64_t)qword_1EEDA5C98, a1);
}

void sub_1AE8CD3C8(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1AE8D2204();
  v6 = sub_1AE4FB608(v5, a2);
  sub_1AE8CCE60(v6, a3, type metadata accessor for EntityRecognitionClient);
  sub_1AE4F6624();
}

void EntityRecognitionClient.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  type metadata accessor for EntityRecognitionClient(0);
  sub_1AE5097D4();
  sub_1AE563B48(&qword_1EEDA5CB0, v0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC72C0], MEMORY[0x1E0DC72D0]);
  sub_1AE925D34();
  sub_1AE5078B8();
  sub_1AE563B48(&qword_1EEDA5CB8, v1, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC71B8], MEMORY[0x1E0DC71C8]);
  sub_1AE8D220C();
  sub_1AE925D34();
  sub_1AE4FCDD0();
}

uint64_t static EntityRecognitionClient.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;
  char v3;
  char v4;
  uint64_t v5;
  __int16 v7;
  __int16 v8;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (v3 = sub_1AE926D60(), v4 = 0, (v3 & 1) != 0))
  {
    type metadata accessor for EntityRecognitionClient(0);
    sub_1AE5097D4();
    sub_1AE563B48(&qword_1EEDA5CC0, v5, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC72C0], MEMORY[0x1E0DC72D8]);
    sub_1AE8D21D4();
    sub_1AE8D21D4();
    if (v8 == v7)
      v4 = sub_1AE9258D8();
    else
      v4 = 0;
  }
  return v4 & 1;
}

uint64_t EntityRecognitionClient.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AE4F76E0();
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  sub_1AE8D2204();
  sub_1AE5097D4();
  sub_1AE563B48(&qword_1EEDA5CB0, v0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC72C0], MEMORY[0x1E0DC72D0]);
  sub_1AE925D34();
  sub_1AE5078B8();
  sub_1AE563B48(&qword_1EEDA5CB8, v1, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC71B8], MEMORY[0x1E0DC71C8]);
  sub_1AE925D34();
  return sub_1AE4F905C();
}

uint64_t sub_1AE8CD6BC()
{
  sub_1AE926EC8();
  swift_bridgeObjectRetain();
  sub_1AE925F14();
  swift_bridgeObjectRelease();
  sub_1AE9259EC();
  sub_1AE562F54(&qword_1EEDA5CB0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC72C0], MEMORY[0x1E0DC72D0]);
  sub_1AE925D34();
  sub_1AE9258E4();
  sub_1AE562F54(&qword_1EEDA5CB8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC71B8], MEMORY[0x1E0DC71C8]);
  sub_1AE925D34();
  return sub_1AE926F10();
}

uint64_t VisualUnderstandingStreamingGallery.__allocating_init()()
{
  uint64_t v0;

  sub_1AE4F6738();
  sub_1AE8D21E0();
  return v0;
}

void VisualUnderstandingStreamingGallery.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AE9256F8();
  sub_1AE4FCE84();
  v2 = sub_1AE9256EC();
  if (v1)
  {
    type metadata accessor for VisualUnderstandingStreamingGallery();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v2;
  }
  sub_1AE4FC4F8();
}

void VisualUnderstandingStreamingGallery.__allocating_init(for:)(uint64_t a1)
{
  type metadata accessor for VisualUnderstandingStreamingGallery();
  sub_1AE4F6738();
  sub_1AE8D21E0();
  sub_1AE555C64(a1, type metadata accessor for EntityRecognitionClient);
  sub_1AE4FC4F8();
}

void sub_1AE8CD88C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[8];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_1AE4F67EC();
  v36 = (char *)v2;
  v37 = v0;
  v39 = v3;
  v40 = v4;
  v38 = v5;
  v35 = sub_1AE9259F8();
  v34[3] = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  sub_1AE4F9024();
  v34[2] = v6;
  sub_1AE501548(&qword_1EEDA5CC8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  v34[7] = v8;
  sub_1AE501548(&qword_1ED30ED10);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4FFEB4();
  v12 = v10 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v34 - v14;
  v16 = sub_1AE925A40();
  v34[4] = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  sub_1AE4FFEB4();
  v34[6] = v17 - v18;
  MEMORY[0x1E0C80A78](v19);
  v34[5] = (char *)v34 - v20;
  v21 = type metadata accessor for VisualUnderstandingService.Context(0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v22);
  sub_1AE507918();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v34 - v24;
  sub_1AE501548(&qword_1EEDA5CD0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v26);
  sub_1AE4F666C();
  v29 = v28 - v27;
  sub_1AE501548((uint64_t *)&unk_1EED93E48);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v30);
  sub_1AE4F666C();
  v33 = v32 - v31;
  v37 = *(_QWORD *)(v37 + 16);
  sub_1AE8CEC90((uint64_t)v36, v29, &qword_1EEDA5CD0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v29, 1, v21) != 1)
  {
    sub_1AE8CEC4C(v29, (uint64_t)v25);
    v36 = v25;
    sub_1AE8CCE60((uint64_t)v25, v1, type metadata accessor for VisualUnderstandingService.Context);
    sub_1AE8CEC90(v1, (uint64_t)v15, &qword_1ED30ED10);
    sub_1AE8CEC90(v1 + *(int *)(v21 + 20), v12, &qword_1ED30ED10);
    __asm { BR              X11 }
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v33, 1, 1, v16);
  sub_1AE9256C8();
  sub_1AE524534(v33, (uint64_t *)&unk_1EED93E48);
  sub_1AE4F667C();
}

void VUGallery.Context.init(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1AE9259F8();
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F666C();
  sub_1AE501548(&qword_1EEDA5CC8);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F666C();
  sub_1AE501548(&qword_1ED30ED10);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE507918();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE8CEC90(a1, (uint64_t)&v9 - v7, &qword_1ED30ED10);
  v8 = type metadata accessor for VisualUnderstandingService.Context(0);
  sub_1AE8CEC90(a1 + *(int *)(v8 + 20), v1, &qword_1ED30ED10);
  __asm { BR              X11 }
}

void sub_1AE8CDD10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, *MEMORY[0x1E0DC72E0], v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v3, v1);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v2, 0, 1, v1);
  sub_1AE925A28();
  sub_1AE555C64(v0, type metadata accessor for VisualUnderstandingService.Context);
}

void sub_1AE8CDDA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(uint64_t, char *, uint64_t);
  uint64_t v18;
  char v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD v25[3];
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1AE4F67EC();
  v2 = sub_1AE9256BC();
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4FFEB4();
  v6 = v4 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v25 - v8;
  v10 = sub_1AE9256E0();
  if (!v0)
  {
    v11 = v10;
    if (v10)
    {
      v12 = *(_QWORD *)(v10 + 16);
      if (v12)
      {
        v28 = v9;
        v25[2] = 0;
        v31 = MEMORY[0x1E0DEE9D8];
        sub_1AE52282C();
        v13 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
        v25[1] = v11;
        v14 = v11 + v13;
        v15 = *(_QWORD *)(v1 + 72);
        v26 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 16);
        v27 = v15;
        v29 = v1;
        do
        {
          v16 = v28;
          v17 = v26;
          v26((uint64_t)v28, (char *)v14, v2);
          v17(v6, v16, v2);
          v30 = sub_1AE9256A4();
          v18 = sub_1AE925698();
          v19 = sub_1AE9256B0();
          v20 = *(void (**)(uint64_t))(v1 + 8);
          v21 = sub_1AE4F6B80();
          v20(v21);
          ((void (*)(char *, uint64_t))v20)(v16, v2);
          v22 = v31;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1AE52282C();
            v22 = v31;
          }
          v23 = *(_QWORD *)(v22 + 16);
          if (v23 >= *(_QWORD *)(v22 + 24) >> 1)
          {
            sub_1AE52282C();
            v22 = v31;
          }
          *(_QWORD *)(v22 + 16) = v23 + 1;
          v24 = v22 + 24 * v23;
          v1 = v29;
          *(_QWORD *)(v24 + 32) = v30;
          *(_QWORD *)(v24 + 40) = v18;
          *(_BYTE *)(v24 + 48) = v19 & 1;
          v14 += v27;
          --v12;
        }
        while (v12);
      }
      swift_bridgeObjectRelease();
    }
  }
  sub_1AE4F667C();
}

uint64_t sub_1AE8CDFAC()
{
  return sub_1AE9256D4();
}

uint64_t VisualUnderstandingStreamingGallery.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t VisualUnderstandingStreamingGallery.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1AE8CE018()
{
  return sub_1AE8CC9C8();
}

uint64_t sub_1AE8CE038()
{
  return sub_1AE8CCA6C();
}

uint64_t sub_1AE8CE058()
{
  type metadata accessor for VisualUnderstandingService.EntitySequence();
  return sub_1AE9260B8();
}

uint64_t sub_1AE8CE0BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_1AE4FFE80();
  v0 = sub_1AE8D220C();
  sub_1AE595318(v0, v1);
  sub_1AE926760();
  sub_1AE4F7804();
  return v3;
}

uint64_t VisualUnderstandingService.ObservationSequence.deinit()
{
  uint64_t v0;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  return v0;
}

uint64_t VisualUnderstandingService.ObservationSequence.__deallocating_deinit()
{
  uint64_t v0;

  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1AE8CE160()
{
  return sub_1AE8CC998();
}

uint64_t sub_1AE8CE180()
{
  return sub_1AE8CCA68();
}

uint64_t sub_1AE8CE1A0()
{
  type metadata accessor for VisualUnderstandingService.ObservationSequence();
  return sub_1AE9260B8();
}

void sub_1AE8CE204(uint64_t a1@<X8>)
{
  char v2;

  *(_QWORD *)a1 = sub_1AE8CE0BC();
  *(_BYTE *)(a1 + 8) = v2 & 1;
  sub_1AE4F6664();
}

uint64_t sub_1AE8CE230()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1AE8CE250()
{
  sub_1AE4FFE80();
  sub_1AE8D21F8();
  sub_1AE5080EC();
  sub_1AE4F7804();
  sub_1AE508110();
}

uint64_t _s20IntelligencePlatform26VisualUnderstandingServiceC14EntitySequenceCfd_0()
{
  uint64_t v0;

  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 32);
  return v0;
}

uint64_t _s20IntelligencePlatform26VisualUnderstandingServiceC14EntitySequenceCfD_0()
{
  uint64_t v0;

  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_1AE8CE2EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = _s20IntelligencePlatform37EntityResolutionRankingDirectFeedbackCfd_0();
  *a1 = result;
  return result;
}

uint64_t sub_1AE8CE314()
{
  return sub_1AE8CC9F8();
}

uint64_t sub_1AE8CE334()
{
  return sub_1AE8CCA70();
}

uint64_t sub_1AE8CE354()
{
  type metadata accessor for VisualUnderstandingService.ChangeSequence();
  return sub_1AE9260B8();
}

void sub_1AE8CE3B8()
{
  sub_1AE8CE00C();
  sub_1AE4F6664();
}

void sub_1AE8CE3D4()
{
  sub_1AE4FFE80();
  sub_1AE8D21F8();
  sub_1AE5080EC();
  sub_1AE4F7804();
  sub_1AE508110();
}

uint64_t sub_1AE8CE418()
{
  return sub_1AE8CC968();
}

uint64_t sub_1AE8CE438()
{
  return sub_1AE8CCA64();
}

uint64_t sub_1AE8CE458()
{
  type metadata accessor for VisualUnderstandingService.SimilarEntitySequence();
  return sub_1AE9260B8();
}

void sub_1AE8CE4BC()
{
  sub_1AE8CE3D4();
  sub_1AE4F6664();
}

uint64_t VisualUnderstandingService.ObservationUpdate.updateType.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t VisualUnderstandingService.ObservationUpdate.observationIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void VisualUnderstandingService.ObservationUpdate.entityIdentifier.getter(_QWORD *a1@<X8>)
{
  sub_1AE641010(a1);
}

uint64_t VisualUnderstandingService.EntityUpdate.updateType.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void VisualUnderstandingService.EntityUpdate.entityIdentifier.getter(_QWORD *a1@<X8>)
{
  sub_1AE641010(a1);
}

void VisualUnderstandingService.EntityUpdate.tag.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1AE8D21EC();
  v3 = type metadata accessor for VisualUnderstandingService.EntityUpdate(v2);
  sub_1AE8CEC90(v1 + *(int *)(v3 + 24), v0, &qword_1ED30ED10);
  sub_1AE4F6664();
}

BOOL static VisualUnderstandingService.UpdateType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void VisualUnderstandingService.UpdateType.hash(into:)()
{
  sub_1AE926ED4();
  sub_1AE4F6664();
}

void VisualUnderstandingService.UpdateType.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE926ED4();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

BOOL sub_1AE8CE594(char *a1, char *a2)
{
  return static VisualUnderstandingService.UpdateType.== infix(_:_:)(*a1, *a2);
}

void sub_1AE8CE5A0()
{
  VisualUnderstandingService.UpdateType.hashValue.getter();
}

void sub_1AE8CE5A8()
{
  VisualUnderstandingService.UpdateType.hash(into:)();
}

uint64_t VisualUnderstandingService.ChangeBookmark.hash(into:)()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *v0;
  v1 = v0[1];
  sub_1AE506AF0(v2);
  sub_1AE8D220C();
  sub_1AE924840();
  return sub_1AE50BDB4(v2, v1);
}

void static VisualUnderstandingService.ChangeBookmark.== infix(_:_:)()
{
  JUMPOUT(0x1AF451A44);
}

uint64_t sub_1AE8CE608(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x72656E6E69 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AE926D60();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AE8CE684()
{
  return 0x72656E6E69;
}

uint64_t sub_1AE8CE69C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AE8CE608(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AE8CE6C4()
{
  sub_1AE8CECD0();
  return sub_1AE926F94();
}

uint64_t sub_1AE8CE6EC()
{
  sub_1AE8CECD0();
  return sub_1AE926FA0();
}

void VisualUnderstandingService.ChangeBookmark.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AE4F67EC();
  v2 = v1;
  v3 = sub_1AE501548((uint64_t *)&unk_1EED98FC0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F6744();
  sub_1AE4F9858(v2, v2[3]);
  sub_1AE8CECD0();
  sub_1AE926F4C();
  sub_1AE5900D8();
  sub_1AE926CC4();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v3);
  sub_1AE4F667C();
}

void VisualUnderstandingService.ChangeBookmark.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1AE4F76E0();
  sub_1AE506AF0(v1);
  sub_1AE8D21C4();
  sub_1AE8D2218();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void VisualUnderstandingService.ChangeBookmark.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  sub_1AE4F67EC();
  v4 = v3;
  v6 = v5;
  v7 = sub_1AE501548(&qword_1EED98FB8);
  sub_1AE4FB800();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F6744();
  sub_1AE4F9858(v4, v4[3]);
  sub_1AE8CECD0();
  sub_1AE926F34();
  if (!v0)
  {
    sub_1AE590114();
    sub_1AE926BEC();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v7);
    *v6 = v9;
  }
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v4);
  sub_1AE4F667C();
}

void sub_1AE8CE908()
{
  VisualUnderstandingService.ChangeBookmark.init(from:)();
}

void sub_1AE8CE91C()
{
  VisualUnderstandingService.ChangeBookmark.encode(to:)();
}

void sub_1AE8CE938()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1AE926EC8();
  sub_1AE506AF0(v1);
  sub_1AE8D21C4();
  sub_1AE8D2218();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void VisualUnderstandingService.RecognitionResult.entityIdentifier.getter(_QWORD *a1@<X8>)
{
  sub_1AE641010(a1);
}

void VisualUnderstandingService.RecognitionResult.tag.getter()
{
  sub_1AE8CEAE4();
}

float VisualUnderstandingService.RecognitionResult.confidence.getter()
{
  uint64_t v0;

  return *(float *)(v0 + *(int *)(type metadata accessor for VisualUnderstandingService.RecognitionResult(0) + 24));
}

BOOL static VisualUnderstandingService.Source.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void VisualUnderstandingService.Source.hash(into:)()
{
  sub_1AE926ED4();
  sub_1AE4F6664();
}

void VisualUnderstandingService.Source.hashValue.getter()
{
  sub_1AE4F76E0();
  sub_1AE4F6694();
  sub_1AE4F905C();
  sub_1AE4F6650();
}

void VisualUnderstandingService.Context.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;

  sub_1AE8D21EC();
  sub_1AE924918();
  sub_1AE4FD828(v0);
  v1 = type metadata accessor for VisualUnderstandingService.Context(0);
  v2 = v0 + *(int *)(v1 + 20);
  sub_1AE4FD828(v2);
  v3 = *(int *)(v1 + 24);
  *(_BYTE *)(v0 + v3) = 3;
  v4 = sub_1AE8D220C();
  sub_1AE524534(v4, v5);
  sub_1AE4FD828(v0);
  sub_1AE524534(v2, &qword_1ED30ED10);
  sub_1AE4FD828(v2);
  *(_BYTE *)(v0 + v3) = 3;
  sub_1AE4FCDD0();
}

void VisualUnderstandingService.Context.moment.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AE8CEC90(v1, a1, &qword_1ED30ED10);
}

uint64_t VisualUnderstandingService.Context.moment.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE8CED20(a1, v1);
}

uint64_t (*VisualUnderstandingService.Context.moment.modify())(_QWORD)
{
  return nullsub_1;
}

void VisualUnderstandingService.Context.asset.getter()
{
  sub_1AE8CEAE4();
}

void sub_1AE8CEAE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  v2 = sub_1AE8D21EC();
  v4 = v3(v2);
  sub_1AE8CEC90(v1 + *(int *)(v4 + 20), v0, &qword_1ED30ED10);
  sub_1AE4F6664();
}

uint64_t VisualUnderstandingService.Context.asset.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for VisualUnderstandingService.Context(0) + 20);
  return sub_1AE8CED20(a1, v3);
}

uint64_t (*VisualUnderstandingService.Context.asset.modify())(_QWORD)
{
  type metadata accessor for VisualUnderstandingService.Context(0);
  return nullsub_1;
}

void VisualUnderstandingService.Context.source.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1AE8D21EC();
  *v0 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for VisualUnderstandingService.Context(v2) + 24));
  sub_1AE4F6664();
}

void VisualUnderstandingService.Context.source.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for VisualUnderstandingService.Context(0) + 24)) = v2;
  sub_1AE4F6664();
}

uint64_t (*VisualUnderstandingService.Context.source.modify())(_QWORD)
{
  type metadata accessor for VisualUnderstandingService.Context(0);
  return nullsub_1;
}

uint64_t VisualUnderstandingStreamingGallery.ClusterResult.observationIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void VisualUnderstandingStreamingGallery.ClusterResult.entityIdentifier.getter(_QWORD *a1@<X8>)
{
  sub_1AE641010(a1);
}

uint64_t VisualUnderstandingStreamingGallery.ClusterResult.isKeyFace.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t type metadata accessor for VisualUnderstandingService(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1ED31AE28);
}

uint64_t type metadata accessor for VisualUnderstandingStreamingGallery()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for VisualUnderstandingService.Context(uint64_t a1)
{
  return sub_1AE536C28(a1, qword_1EED94D10);
}

uint64_t sub_1AE8CEC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VisualUnderstandingService.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AE8CEC90(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1AE501548(a3);
  sub_1AE5089F4(v3);
  sub_1AE4F6664();
}

uint64_t type metadata accessor for VisualUnderstandingService.EntityUpdate(uint64_t a1)
{
  return sub_1AE536C28(a1, qword_1ED319BF0);
}

unint64_t sub_1AE8CECD0()
{
  unint64_t result;

  result = qword_1EED98F80;
  if (!qword_1EED98F80)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96F34C, &type metadata for VisualUnderstandingService.ChangeBookmark.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98F80);
  }
  return result;
}

uint64_t type metadata accessor for VisualUnderstandingService.RecognitionResult(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1ED30ED18);
}

uint64_t sub_1AE8CED20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1ED30ED10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AE8CED6C()
{
  unint64_t result;

  result = qword_1EEDA5CD8;
  if (!qword_1EEDA5CD8)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for VisualUnderstandingService.Error, &type metadata for VisualUnderstandingService.Error);
    atomic_store(result, (unint64_t *)&qword_1EEDA5CD8);
  }
  return result;
}

void sub_1AE8CEDA8()
{
  sub_1AE562F54(&qword_1EEDA5CE0, 255, type metadata accessor for EntityRecognitionClient, (uint64_t)&protocol conformance descriptor for EntityRecognitionClient);
}

void sub_1AE8CEDD8(uint64_t a1, uint64_t a2)
{
  sub_1AE562F54(&qword_1EEDA5CE8, a2, (uint64_t (*)(uint64_t))type metadata accessor for VisualUnderstandingService.EntitySequence, (uint64_t)&protocol conformance descriptor for VisualUnderstandingService.EntitySequence);
}

uint64_t type metadata accessor for VisualUnderstandingService.EntitySequence()
{
  return objc_opt_self();
}

void sub_1AE8CEE24(uint64_t a1, uint64_t a2)
{
  sub_1AE562F54(&qword_1EEDA5CF0, a2, (uint64_t (*)(uint64_t))type metadata accessor for VisualUnderstandingService.ObservationSequence, (uint64_t)&protocol conformance descriptor for VisualUnderstandingService.ObservationSequence);
}

uint64_t type metadata accessor for VisualUnderstandingService.ObservationSequence()
{
  return objc_opt_self();
}

void sub_1AE8CEE70(uint64_t a1, uint64_t a2)
{
  sub_1AE562F54(&qword_1EEDA5CF8, a2, (uint64_t (*)(uint64_t))type metadata accessor for VisualUnderstandingService.ChangeSequence, (uint64_t)&protocol conformance descriptor for VisualUnderstandingService.ChangeSequence);
}

uint64_t type metadata accessor for VisualUnderstandingService.ChangeSequence()
{
  return objc_opt_self();
}

void sub_1AE8CEEBC(uint64_t a1, uint64_t a2)
{
  sub_1AE562F54(&qword_1EEDA5D00, a2, (uint64_t (*)(uint64_t))type metadata accessor for VisualUnderstandingService.SimilarEntitySequence, (uint64_t)&protocol conformance descriptor for VisualUnderstandingService.SimilarEntitySequence);
}

uint64_t type metadata accessor for VisualUnderstandingService.SimilarEntitySequence()
{
  return objc_opt_self();
}

unint64_t sub_1AE8CEF0C()
{
  unint64_t result;

  result = qword_1EEDA5D08;
  if (!qword_1EEDA5D08)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for VisualUnderstandingService.UpdateType, &type metadata for VisualUnderstandingService.UpdateType);
    atomic_store(result, (unint64_t *)&qword_1EEDA5D08);
  }
  return result;
}

unint64_t sub_1AE8CEF4C()
{
  unint64_t result;

  result = qword_1EEDA5D10;
  if (!qword_1EEDA5D10)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for VisualUnderstandingService.ChangeBookmark, &type metadata for VisualUnderstandingService.ChangeBookmark);
    atomic_store(result, (unint64_t *)&qword_1EEDA5D10);
  }
  return result;
}

unint64_t sub_1AE8CEF8C()
{
  unint64_t result;

  result = qword_1EEDA5D18;
  if (!qword_1EEDA5D18)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for VisualUnderstandingService.Source, &type metadata for VisualUnderstandingService.Source);
    atomic_store(result, (unint64_t *)&qword_1EEDA5D18);
  }
  return result;
}

uint64_t sub_1AE8CEFC8()
{
  return type metadata accessor for VisualUnderstandingService(0);
}

uint64_t sub_1AE8CEFD0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for EntityRecognitionClient(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for VisualUnderstandingService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VisualUnderstandingService.gallery.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of VisualUnderstandingService.__allocating_init(client:version:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of VisualUnderstandingService.recognize(in:contextMoment:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v3 + 112))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of VisualUnderstandingService.recognize(in:contextMoment:contextAsset:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of VisualUnderstandingService.entities(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of VisualUnderstandingService.keyObservation(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of VisualUnderstandingService.similarity(between:and:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of VisualUnderstandingService.similarEntities(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of VisualUnderstandingService.inferredDeviceOwner()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of VisualUnderstandingService.inferredDeviceOwner(ignoreMeGroundTruth:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of VisualUnderstandingService.changes(since:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t *initializeBufferWithCopyOfBuffer for VisualUnderstandingService.Version(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1AE501548(&qword_1ED319558);
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_1AE924780();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v9))
      {
        v10 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v9);
      }
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for VisualUnderstandingService.Version(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_1AE501548(&qword_1ED319558);
  result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1AE924780();
    result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *initializeWithCopy for VisualUnderstandingService.Version(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1AE501548(&qword_1ED319558);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1AE924780();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v7);
    }
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for VisualUnderstandingService.Version(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v15;

  v6 = sub_1AE501548(&qword_1ED319558);
  v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = sub_1AE924780();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v9))
      {
        v10 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v9);
      }
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1AE524534((uint64_t)a1, &qword_1ED319558);
LABEL_7:
    v11 = *(_QWORD *)(a3 - 8);
    goto LABEL_8;
  }
  v6 = sub_1AE924780();
  v12 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  v13 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_13:
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
      return a1;
    }
  }
  else
  {
    v15 = *(_QWORD *)(v6 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(a1, v6);
  }
  v11 = *(_QWORD *)(sub_1AE501548((uint64_t *)&unk_1ED31C9C0) - 8);
LABEL_8:
  memcpy(a1, a2, *(_QWORD *)(v11 + 64));
  return a1;
}

void *initializeWithTake for VisualUnderstandingService.Version(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1AE501548(&qword_1ED319558);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1AE924780();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v7);
    }
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for VisualUnderstandingService.Version(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v15;

  v6 = sub_1AE501548(&qword_1ED319558);
  v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = sub_1AE924780();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v9))
      {
        v10 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v9);
      }
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1AE524534((uint64_t)a1, &qword_1ED319558);
LABEL_7:
    v11 = *(_QWORD *)(a3 - 8);
    goto LABEL_8;
  }
  v6 = sub_1AE924780();
  v12 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  v13 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
LABEL_13:
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
      return a1;
    }
  }
  else
  {
    v15 = *(_QWORD *)(v6 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(a1, v6);
  }
  v11 = *(_QWORD *)(sub_1AE501548((uint64_t *)&unk_1ED31C9C0) - 8);
LABEL_8:
  memcpy(a1, a2, *(_QWORD *)(v11 + 64));
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstandingService.Version()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE8CF87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;

  sub_1AE5FC2B4();
  v2 = sub_1AE501548(&qword_1ED319558);
  v3 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, v0, v2);
  if (v3 >= 2)
    return v3 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VisualUnderstandingService.Version()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE8CF8CC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1AE501548(&qword_1ED319558);
  return sub_1AE4F66D4(a1, v5, a3, v6);
}

uint64_t sub_1AE8CF910(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE501548(&qword_1ED319558);
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v2);
}

uint64_t sub_1AE8CF944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1ED319558);
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a1, a2, 1, v4);
}

void sub_1AE8CF980()
{
  unint64_t v0;

  sub_1AE60E3EC(319, &qword_1ED31AE18, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

uint64_t storeEnumTagSinglePayload for VisualUnderstandingService.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AE8CFA30 + 4 * byte_1AE96E9FD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AE8CFA64 + 4 * byte_1AE96E9F8[v4]))();
}

uint64_t sub_1AE8CFA64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8CFA6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8CFA74);
  return result;
}

uint64_t sub_1AE8CFA80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8CFA88);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AE8CFA8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8CFA94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for VisualUnderstandingService.Error()
{
  sub_1AE4F67D4();
}

uint64_t *initializeBufferWithCopyOfBuffer for EntityRecognitionClient(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1AE9259EC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1AE9258E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t destroy for EntityRecognitionClient(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1AE9259EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_1AE9258E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *initializeWithCopy for EntityRecognitionClient(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AE9259EC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1AE9258E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

_QWORD *assignWithCopy for EntityRecognitionClient(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AE9259EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1AE9258E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *initializeWithTake for EntityRecognitionClient(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AE9259EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1AE9258E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

_QWORD *assignWithTake for EntityRecognitionClient(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AE9259EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1AE9258E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityRecognitionClient()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AE8CFE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_1AE4F6624();
  }
  else
  {
    v6 = sub_1AE5097D4();
    if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v6;
      v8 = *(int *)(a3 + 20);
    }
    else
    {
      v7 = sub_1AE5078B8();
      v8 = *(int *)(a3 + 24);
    }
    sub_1AE500AB0(a1 + v8, a2, v7);
  }
}

uint64_t storeEnumTagSinglePayload for EntityRecognitionClient()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AE8CFF24()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE5FC2B4();
  if (v2 == 0x7FFFFFFF)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    sub_1AE4F6624();
  }
  else
  {
    if (*(_DWORD *)(*(_QWORD *)(sub_1AE5097D4() - 8) + 84) != v2)
      sub_1AE5078B8();
    sub_1AE50681C();
    sub_1AE4F66D4(v3, v4, v5, v6);
  }
}

uint64_t sub_1AE8CFF98()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1AE9259EC();
  if (v1 <= 0x3F)
  {
    result = sub_1AE9258E4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for VisualUnderstandingStreamingGallery()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VisualUnderstandingStreamingGallery.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of VisualUnderstandingStreamingGallery.add(observations:observationIdentifiers:trackIdentifiers:context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of VisualUnderstandingStreamingGallery.update(maxKeyFacesPerCluster:sortBy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of VisualUnderstandingStreamingGallery.reset()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t method lookup function for VisualUnderstandingService.EntitySequence()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for VisualUnderstandingService.ObservationSequence()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VisualUnderstandingService.ObservationSequence.next()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t method lookup function for VisualUnderstandingService.ChangeSequence()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VisualUnderstandingService.ChangeSequence.bookmark.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of VisualUnderstandingService.ChangeSequence.next()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t method lookup function for VisualUnderstandingService.SimilarEntitySequence()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VisualUnderstandingService.SimilarEntitySequence.next()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

void type metadata accessor for VisualUnderstandingService.ObservationUpdate()
{
  sub_1AE4F67D4();
}

uint64_t *initializeBufferWithCopyOfBuffer for VisualUnderstandingService.EntityUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1AE924918();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v7, 1, v8))
    {
      v9 = sub_1AE501548(&qword_1ED30ED10);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for VisualUnderstandingService.EntityUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_1AE924918();
  result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return result;
}

uint64_t initializeWithCopy for VisualUnderstandingService.EntityUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1AE924918();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, v7))
  {
    v8 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithCopy for VisualUnderstandingService.EntityUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1AE924918();
  v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v5, 1, v7);
  v9 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, v7);
  if (!v8)
  {
    v10 = *(_QWORD *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    v11 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v7);
  return a1;
}

uint64_t initializeWithTake for VisualUnderstandingService.EntityUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1AE924918();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, v7))
  {
    v8 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for VisualUnderstandingService.EntityUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1AE924918();
  v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v5, 1, v7);
  v9 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v6, 1, v7);
  if (!v8)
  {
    v10 = *(_QWORD *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    v11 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstandingService.EntityUpdate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AE8D05F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 253)
  {
    sub_1AE4F6624();
  }
  else
  {
    v6 = sub_1AE501548(&qword_1ED30ED10);
    sub_1AE500AB0(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for VisualUnderstandingService.EntityUpdate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AE8D065C()
{
  char v0;
  _BYTE *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1AE5FC2B4();
  if (v2 == 253)
  {
    *v1 = v0 + 2;
    sub_1AE4F6624();
  }
  else
  {
    sub_1AE501548(&qword_1ED30ED10);
    sub_1AE50681C();
    sub_1AE4F66D4(v3, v4, v5, v6);
  }
}

void sub_1AE8D06B0()
{
  unint64_t v0;

  sub_1AE60E3EC(319, &qword_1ED319DE8, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void type metadata accessor for VisualUnderstandingService.UpdateType()
{
  sub_1AE4F67D4();
}

uint64_t *initializeBufferWithCopyOfBuffer for VisualUnderstandingService.MappingChange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v7 = *(int *)(type metadata accessor for VisualUnderstandingService.EntityUpdate(0) + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1AE924918();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_1AE501548(&qword_1ED30ED10);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for VisualUnderstandingService.MappingChange(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = a1 + *(int *)(type metadata accessor for VisualUnderstandingService.EntityUpdate(0) + 24);
    v4 = sub_1AE924918();
    result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v3, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  return result;
}

_QWORD *initializeWithCopy for VisualUnderstandingService.MappingChange(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v6 = *(int *)(type metadata accessor for VisualUnderstandingService.EntityUpdate(0) + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1AE924918();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9))
    {
      v10 = sub_1AE501548(&qword_1ED30ED10);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithCopy for VisualUnderstandingService.MappingChange(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1AE555C64((uint64_t)a1, type metadata accessor for VisualUnderstandingService.MappingChange);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      a1[1] = a2[1];
      v6 = *(int *)(type metadata accessor for VisualUnderstandingService.EntityUpdate(0) + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1AE924918();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9))
      {
        v10 = sub_1AE501548(&qword_1ED30ED10);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata accessor for VisualUnderstandingService.MappingChange(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1EED98F70);
}

_QWORD *initializeWithTake for VisualUnderstandingService.MappingChange(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v6 = *(int *)(type metadata accessor for VisualUnderstandingService.EntityUpdate(0) + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1AE924918();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9))
    {
      v10 = sub_1AE501548(&qword_1ED30ED10);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for VisualUnderstandingService.MappingChange(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1AE555C64((uint64_t)a1, type metadata accessor for VisualUnderstandingService.MappingChange);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      a1[1] = a2[1];
      v6 = *(int *)(type metadata accessor for VisualUnderstandingService.EntityUpdate(0) + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1AE924918();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9))
      {
        v10 = sub_1AE501548(&qword_1ED30ED10);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
        _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1AE8D0D64()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for VisualUnderstandingService.EntityUpdate(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for VisualUnderstandingService.ChangeBookmark(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_1AE54C814(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for VisualUnderstandingService.ChangeBookmark(uint64_t a1)
{
  return sub_1AE50BDB4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *assignWithCopy for VisualUnderstandingService.ChangeBookmark(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_1AE54C814(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1AE50BDB4(v5, v6);
  return a1;
}

uint64_t *assignWithTake for VisualUnderstandingService.ChangeBookmark(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1AE50BDB4(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstandingService.ChangeBookmark(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for VisualUnderstandingService.ChangeBookmark(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

void type metadata accessor for VisualUnderstandingService.ChangeBookmark()
{
  sub_1AE4F67D4();
}

uint64_t *initializeBufferWithCopyOfBuffer for VisualUnderstandingService.RecognitionResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1AE924918();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v9, 1, v10))
    {
      v11 = sub_1AE501548(&qword_1ED30ED10);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v8, 0, 1, v10);
    }
    *(_DWORD *)((char *)v4 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t destroy for VisualUnderstandingService.RecognitionResult(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1AE924918();
  result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return result;
}

_QWORD *initializeWithCopy for VisualUnderstandingService.RecognitionResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AE924918();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
  }
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithCopy for VisualUnderstandingService.RecognitionResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AE924918();
  v10 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v7, 1, v9);
  v11 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *initializeWithTake for VisualUnderstandingService.RecognitionResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AE924918();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9))
  {
    v10 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
  }
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for VisualUnderstandingService.RecognitionResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AE924918();
  v10 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v7, 1, v9);
  v11 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    v12 = *(_QWORD *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *(_DWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstandingService.RecognitionResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE8D1458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_1AE501548(&qword_1ED30ED10);
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for VisualUnderstandingService.RecognitionResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE8D14A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE501548(&qword_1ED30ED10);
  sub_1AE50681C();
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, v1, v2, v3);
}

void sub_1AE8D14DC()
{
  unint64_t v0;

  sub_1AE60E3EC(319, &qword_1ED319DE8, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t _s20IntelligencePlatform26VisualUnderstandingServiceC10UpdateTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AE8D15BC + 4 * byte_1AE96EA07[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AE8D15F0 + 4 * byte_1AE96EA02[v4]))();
}

uint64_t sub_1AE8D15F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8D15F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AE8D1600);
  return result;
}

uint64_t sub_1AE8D160C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AE8D1614);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AE8D1618(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AE8D1620(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for VisualUnderstandingService.Source()
{
  sub_1AE4F67D4();
}

uint64_t *initializeBufferWithCopyOfBuffer for VisualUnderstandingService.Context(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AE924918();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_1AE501548(&qword_1ED30ED10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2 + v10, 1, v7))
    {
      v13 = sub_1AE501548(&qword_1ED30ED10);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v11, v12, v7);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v11, 0, 1, v7);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for VisualUnderstandingService.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = sub_1AE924918();
  if (!_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v5, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v5, v4);
  return result;
}

char *initializeWithCopy for VisualUnderstandingService.Context(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = sub_1AE924918();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    v11 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v9, v10, v6);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v9, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithCopy for VisualUnderstandingService.Context(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1AE924918();
  v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)&a1[v11], 1, v6);
  v15 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v6);
  if (!v14)
  {
    v16 = *(_QWORD *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v12, v13, v6);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, v6);
LABEL_13:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *initializeWithTake for VisualUnderstandingService.Context(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = sub_1AE924918();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    v11 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v9, v10, v6);
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v9, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for VisualUnderstandingService.Context(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1AE924918();
  v7 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a1, 1, v6);
  v8 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)&a1[v11], 1, v6);
  v15 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v13, 1, v6);
  if (!v14)
  {
    v16 = *(_QWORD *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    v17 = sub_1AE501548(&qword_1ED30ED10);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v12, v13, v6);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v12, 0, 1, v6);
LABEL_13:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t getEnumTagSinglePayload for VisualUnderstandingService.Context()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AE8D1DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1ED30ED10);
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    sub_1AE500AB0(a1, a2, v4);
  else
    sub_1AE4F6624();
}

uint64_t storeEnumTagSinglePayload for VisualUnderstandingService.Context()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AE8D1E6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  char v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1AE5FC2B4();
  if (*(_DWORD *)(*(_QWORD *)(sub_1AE501548(&qword_1ED30ED10) - 8) + 84) == a3)
  {
    sub_1AE50681C();
    sub_1AE4F66D4(v8, v9, v10, v11);
  }
  else
  {
    *(_BYTE *)(v5 + *(int *)(a4 + 24)) = v4 + 3;
    sub_1AE4F6624();
  }
}

void sub_1AE8D1ECC()
{
  unint64_t v0;

  sub_1AE60E3EC(319, &qword_1ED319DE8, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for VisualUnderstandingStreamingGallery.ClusterResult(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisualUnderstandingStreamingGallery.ClusterResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

void type metadata accessor for VisualUnderstandingStreamingGallery.ClusterResult()
{
  sub_1AE4F67D4();
}

uint64_t storeEnumTagSinglePayload for VisualUnderstandingService.ChangeBookmark.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AE8D202C + 4 * byte_1AE96EA0C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AE8D204C + 4 * byte_1AE96EA11[v4]))();
}

_BYTE *sub_1AE8D202C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AE8D204C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE8D2054(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE8D205C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AE8D2064(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AE8D206C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for VisualUnderstandingService.ChangeBookmark.CodingKeys()
{
  return &type metadata for VisualUnderstandingService.ChangeBookmark.CodingKeys;
}

unint64_t sub_1AE8D208C()
{
  unint64_t result;

  result = qword_1EEDA5D20;
  if (!qword_1EEDA5D20)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96F324, &type metadata for VisualUnderstandingService.ChangeBookmark.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEDA5D20);
  }
  return result;
}

unint64_t sub_1AE8D20CC()
{
  unint64_t result;

  result = qword_1EED98F90;
  if (!qword_1EED98F90)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96F294, &type metadata for VisualUnderstandingService.ChangeBookmark.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98F90);
  }
  return result;
}

unint64_t sub_1AE8D210C()
{
  unint64_t result;

  result = qword_1EED98F88;
  if (!qword_1EED98F88)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96F2BC, &type metadata for VisualUnderstandingService.ChangeBookmark.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EED98F88);
  }
  return result;
}

unint64_t sub_1AE8D2148()
{
  unint64_t result;

  result = qword_1EEDA5D28;
  if (!qword_1EEDA5D28)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for VisualUnderstandingService.Error, &type metadata for VisualUnderstandingService.Error);
    atomic_store(result, (unint64_t *)&qword_1EEDA5D28);
  }
  return result;
}

uint64_t dispatch thunk of VisualUnderstandingService.EntitySequence.bookmark.getter()
{
  return dispatch thunk of VisualUnderstandingService.ChangeSequence.bookmark.getter();
}

uint64_t sub_1AE8D219C()
{
  return sub_1AE8CE230();
}

uint64_t sub_1AE8D21C4()
{
  return sub_1AE924840();
}

uint64_t sub_1AE8D21D4()
{
  return sub_1AE92613C();
}

void sub_1AE8D21E0()
{
  VisualUnderstandingStreamingGallery.init()();
}

uint64_t sub_1AE8D21EC()
{
  return 0;
}

uint64_t sub_1AE8D21F8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AE595318(v0, v1);
}

uint64_t sub_1AE8D2204()
{
  return type metadata accessor for EntityRecognitionClient(0);
}

uint64_t sub_1AE8D220C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE8D2218()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AE50BDB4(v0, v1);
}

uint64_t sub_1AE8D2224(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  __int128 v15;
  void *v16;
  unint64_t v17;

  v2 = v1;
  v4 = type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE8D41A0(a1, (uint64_t)v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  sub_1AE8D42E0((uint64_t)v7, v9 + v8, type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1);
  *(_QWORD *)(v2 + 16) = sub_1AE8D4254;
  *(_QWORD *)(v2 + 24) = v9;
  sub_1AE8D41A0(a1, (uint64_t)v7);
  v16 = &unk_1E5DC5668;
  v17 = sub_1AE8D42A4();
  v10 = sub_1AE925860();
  v12 = v11;
  sub_1AE555C64((uint64_t)v7, type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1);
  *(_QWORD *)&v15 = v10;
  *((_QWORD *)&v15 + 1) = v12;
  sub_1AE555C64(a1, type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1);
  sub_1AE50AF58(&v15, v2 + 32);
  return v2;
}

uint64_t sub_1AE8D2340(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = sub_1AE8D40FC;
  *(_QWORD *)(v1 + 24) = a1;
  *(_QWORD *)(v1 + 56) = &unk_1E5DC55E8;
  *(_QWORD *)(v1 + 64) = sub_1AE8D4114();
  *(_QWORD *)(v1 + 32) = a1;
  *(_BYTE *)(v1 + 40) = 0;
  swift_retain();
  return v1;
}

void sub_1AE8D2390(_QWORD *a1@<X8>)
{
  sub_1AE8D3B64(a1);
}

void sub_1AE8D23A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1AE4F67EC();
  v4 = v3;
  v6 = v5;
  sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE8D47A8();
  v8 = sub_1AE9259EC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F666C();
  v12 = v11 - v10;
  v13 = type metadata accessor for EntityRecognitionClient(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12, v6 + *(int *)(v13 + 20), v8);
  sub_1AE8D4318(v4, v2, (uint64_t *)&unk_1ED31C9C0);
  sub_1AE925AAC();
  swift_allocObject();
  v14 = sub_1AE9259BC();
  if (v1)
  {
    sub_1AE524534(v4, (uint64_t *)&unk_1ED31C9C0);
    sub_1AE555C64(v6, type metadata accessor for EntityRecognitionClient);
    type metadata accessor for VisualUnderstandingServiceBackendV1(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v15 = v14;
    sub_1AE524534(v4, (uint64_t *)&unk_1ED31C9C0);
    *(_QWORD *)(v0 + 16) = v15;
    sub_1AE8D42E0(v6, v0 + OBJC_IVAR____TtC20IntelligencePlatform35VisualUnderstandingServiceBackendV1_client, type metadata accessor for EntityRecognitionClient);
  }
  sub_1AE4F667C();
}

void sub_1AE8D2504()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  float v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1AE4F67EC();
  v31 = sub_1AE925914();
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1AE505A14();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE8D47A8();
  v6 = sub_1AE9258E4();
  v7 = *(_QWORD *)(v6 - 8);
  v28 = v7;
  MEMORY[0x1E0C80A78](v6);
  sub_1AE50688C();
  sub_1AE501548((uint64_t *)&unk_1EED93E48);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F666C();
  v11 = v10 - v9;
  sub_1AE925A40();
  sub_1AE769C88();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v12, v13, v14, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v2, *MEMORY[0x1E0DC71B0], v6);
  v16 = sub_1AE925A94();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v2, v6);
  sub_1AE524534(v11, (uint64_t *)&unk_1EED93E48);
  if (v16)
  {
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v32 = MEMORY[0x1E0DEE9D8];
      sub_1AE5227C4();
      sub_1AE7726E0();
      v19 = v16 + v18;
      v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
      v30 = *(_QWORD *)(v20 + 72);
      do
      {
        v29(v0, v19, v31);
        v21 = v0;
        v22 = sub_1AE9257B8();
        sub_1AE925908();
        sub_1AE9258F0();
        *v1 = v22;
        v24 = sub_1AE8D47FC(*(int *)(v4 + 24), v23);
        v25(v24, v31);
        if ((sub_1AE7FA580() & 1) == 0)
        {
          sub_1AE50A8C8();
          v21 = v32;
        }
        v27 = *(_QWORD *)(v21 + 16);
        v26 = *(_QWORD *)(v21 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1AE509D04(v26);
          sub_1AE5227C4();
          v21 = v32;
        }
        *(_QWORD *)(v21 + 16) = v27 + 1;
        sub_1AE8D42E0((uint64_t)v1, v21+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v27, type metadata accessor for VisualUnderstandingService.RecognitionResult);
        v19 += v30;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AE4F81B8();
    }
  }
  sub_1AE4F667C();
}

void sub_1AE8D275C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  float v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1AE4F67EC();
  v47 = v0;
  v48 = v1;
  v6 = v5;
  v8 = v7;
  v49 = v9;
  v10 = sub_1AE925914();
  v11 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  v53 = v11;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1AE505A14();
  v50 = *(_QWORD *)(v13 - 8);
  v51 = v13;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v14);
  sub_1AE4F90F4();
  sub_1AE501548(&qword_1ED30ED10);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4FFEB4();
  v46 = v16 - v17;
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v46 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v46 - v22;
  sub_1AE501548((uint64_t *)&unk_1EED93E48);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v24);
  sub_1AE4FD838();
  sub_1AE924918();
  v25 = v8;
  LODWORD(v8) = sub_1AE817920(v8);
  sub_1AE8D4318(v6, (uint64_t)v23, &qword_1ED30ED10);
  if ((_DWORD)v8 == 1 && sub_1AE817920((uint64_t)v23) == 1)
  {
    sub_1AE524534((uint64_t)v23, &qword_1ED30ED10);
    v26 = 1;
  }
  else
  {
    sub_1AE524534((uint64_t)v23, &qword_1ED30ED10);
    sub_1AE8D4318(v25, (uint64_t)v21, &qword_1ED30ED10);
    v27 = v46;
    sub_1AE8D4318(v6, v46, &qword_1ED30ED10);
    MEMORY[0x1AF452C50](v21, v27);
    v26 = 0;
  }
  v28 = sub_1AE925A40();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v3, v26, 1, v28);
  type metadata accessor for EntityRecognitionClient(0);
  v29 = sub_1AE925A94();
  if (v29)
  {
    v30 = v29;
    v31 = *(_QWORD *)(v29 + 16);
    if (v31)
    {
      v47 = v3;
      v54 = MEMORY[0x1E0DEE9D8];
      sub_1AE4F7B18();
      sub_1AE5227C4();
      sub_1AE7726E0();
      v46 = v30;
      v33 = v30 + v32;
      v49 = *(_QWORD *)(v34 + 72);
      v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
      v36 = v51;
      do
      {
        v37 = v52;
        v35(v2, v33, v52);
        v38 = v2;
        v39 = sub_1AE9257B8();
        sub_1AE925908();
        sub_1AE9258F0();
        *v4 = v39;
        v41 = sub_1AE8D47FC(*(int *)(v36 + 24), v40);
        v42(v41, v37);
        if ((sub_1AE7FA580() & 1) == 0)
        {
          sub_1AE50A8C8();
          v38 = v54;
        }
        v43 = *(_QWORD *)(v38 + 16);
        if (v43 >= *(_QWORD *)(v38 + 24) >> 1)
        {
          sub_1AE5227C4();
          v38 = v54;
        }
        *(_QWORD *)(v38 + 16) = v43 + 1;
        sub_1AE7726E0();
        sub_1AE8D42E0((uint64_t)v4, v38 + v44 + *(_QWORD *)(v45 + 72) * v43, type metadata accessor for VisualUnderstandingService.RecognitionResult);
        v33 += v49;
        --v31;
      }
      while (v31);
      v3 = v47;
    }
    sub_1AE524534(v3, (uint64_t *)&unk_1EED93E48);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AE524534(v3, (uint64_t *)&unk_1EED93E48);
  }
  sub_1AE4F667C();
}

void sub_1AE8D2A94()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[9];

  sub_1AE8D3578();
  sub_1AE925A64();
  v1 = (void *)sub_1AE926628();
  if (!v0)
  {
    if (v1)
    {
      v9 = v1;
      sub_1AE925A4C();

      type metadata accessor for VisualUnderstandingService.ChangeSequence();
      sub_1AE4F66BC();
      v22 = swift_retain();
      sub_1AE8D2340(v22);
      swift_release();

      return;
    }
    if (qword_1ED31BCB0 != -1)
      swift_once();
    v10 = sub_1AE4F6854();
    sub_1AE4FB608(v10, (uint64_t)qword_1ED31BC90);
    v11 = sub_1AE925B54();
    v12 = sub_1AE9265EC();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)sub_1AE4F66A0();
      v25[0] = sub_1AE4F66A0();
      *(_DWORD *)v13 = 136315138;
      sub_1AE501548(&qword_1EEDA5D38);
      v14 = sub_1AE925E90();
      sub_1AE520ED4(v14, v15, (uint64_t)v25, v16, v17, v18, v19, v20, v23, 0, v24, v25[0], v25[1], v25[2], v25[3], v25[4], v25[5], v25[6], v25[7],
        v25[8]);
      sub_1AE92676C();
      swift_bridgeObjectRelease();
      sub_1AE508348(&dword_1AE4F2000, v11, v12, "Unexpected bookmark result: %s", v13);
      sub_1AE5081C8();
      sub_1AE4F9064();
    }

    sub_1AE8D35B4();
    sub_1AE4F6778();
    *v21 = 0;
    sub_1AE4F6928();
  }
  if (qword_1ED31BCB0 != -1)
    swift_once();
  v2 = sub_1AE4F6854();
  sub_1AE4FB608(v2, (uint64_t)qword_1ED31BC90);
  sub_1AE4F9650();
  sub_1AE4F9650();
  v3 = sub_1AE925B54();
  v4 = sub_1AE9265EC();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)sub_1AE4F66A0();
    v6 = (_QWORD *)sub_1AE4F66A0();
    *(_DWORD *)v5 = 138412290;
    sub_1AE4F9650();
    v7 = _swift_stdlib_bridgeErrorToNSError();
    sub_1AE8D47E8();
    sub_1AE92676C();
    *v6 = v7;
    sub_1AE4FC858();
    sub_1AE4FC858();
    sub_1AE508348(&dword_1AE4F2000, v3, v4, "Failed to decode bookmark: %@", v5);
    sub_1AE501548(&qword_1ED319410);
    sub_1AE5081C8();
    sub_1AE4F9064();
  }
  sub_1AE4FC858();
  sub_1AE4FC858();

  sub_1AE8D35B4();
  sub_1AE4F6778();
  *v8 = 0;
  sub_1AE4F6928();
  sub_1AE4FC858();
}

void sub_1AE8D2F44(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;

  v2 = sub_1AE925914();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AE501548(&qword_1EED93EA0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4FFEB4();
  v9 = v7 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - v11;
  sub_1AE925968();
  sub_1AE8D4318((uint64_t)v12, v9, &qword_1EED93EA0);
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v9, 1, v2) == 1)
  {
    type metadata accessor for VisualUnderstandingService.RecognitionResult(0);
    sub_1AE769C88();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v9, v2);
    v17 = sub_1AE9257B8();
    v18 = type metadata accessor for VisualUnderstandingService.RecognitionResult(0);
    sub_1AE925908();
    sub_1AE9258F0();
    *a1 = v17;
    *(_DWORD *)((char *)a1 + *(int *)(v18 + 24)) = v19;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v13 = (uint64_t)a1;
    v14 = 0;
    v15 = 1;
    v16 = v18;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v13, v14, v15, v16);
  sub_1AE524534((uint64_t)v12, &qword_1EED93EA0);
  sub_1AE4F8180();
}

void sub_1AE8D30C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1AE4F67EC();
  v3 = v2;
  v4 = sub_1AE925878();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1AE4FD838();
  type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(v6);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE50688C();
  if (v3)
  {
    v8 = *(_QWORD *)(v3 + 16);
    if (v8)
    {
      v13 = v5;
      v14 = v4;
      v15 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1AE4F7B18();
      sub_1AE521A74();
      v9 = 0;
      v10 = *(_QWORD *)(v15 + 16);
      do
      {
        v11 = *(_QWORD *)(v3 + 8 * v9 + 32);
        v12 = *(_QWORD *)(v15 + 24);
        if (v10 >= v12 >> 1)
        {
          sub_1AE509D04(v12);
          sub_1AE521A74();
        }
        ++v9;
        *(_QWORD *)(v15 + 16) = v10 + 1;
        *(_QWORD *)(v15 + 8 * v10++ + 32) = v11;
      }
      while (v8 != v9);
      swift_bridgeObjectRelease();
      v4 = v14;
      v5 = v13;
    }
  }
  sub_1AE925A7C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1, v0, v4);
  type metadata accessor for VisualUnderstandingService.EntitySequence();
  sub_1AE4F66BC();
  sub_1AE8D2224(v1);
  sub_1AE4F667C();
}

uint64_t sub_1AE8D3220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = sub_1AE9258CC();
  sub_1AE508180();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F90F4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v0, *MEMORY[0x1E0DC7198], v2);
  v4 = sub_1AE9257DC();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  if ((v4 & 0x100000000) != 0)
    *(double *)&result = 0.0;
  else
    *(double *)&result = *(float *)&v4;
  return result;
}

_QWORD *sub_1AE8D32E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;

  v0 = sub_1AE9258CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DC7198], v0);
  v4 = sub_1AE9258C0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1AE5227F8();
    v6 = 0;
    v7 = v17;
    v8 = *(_QWORD *)(v17 + 16);
    v9 = 16 * v8;
    do
    {
      v10 = *(_QWORD *)(v4 + v6 + 32);
      v11 = *(float *)(v4 + v6 + 40);
      v17 = v7;
      v12 = v8 + 1;
      if (v8 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1AE5227F8();
        v7 = v17;
      }
      *(_QWORD *)(v7 + 16) = v12;
      v13 = v7 + v9 + v6;
      *(_QWORD *)(v13 + 32) = v10;
      *(double *)(v13 + 40) = v11;
      v6 += 16;
      v8 = v12;
      --v5;
    }
    while (v5);
    sub_1AE4F81B8();
  }
  else
  {
    sub_1AE4F81B8();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for VisualUnderstandingService.SimilarEntitySequence();
  v14 = (_QWORD *)sub_1AE4F66BC();
  v14[5] = &unk_1E5DC5788;
  v14[6] = sub_1AE8D4150();
  v14[2] = v7;
  v14[3] = 0;
  return v14;
}

uint64_t sub_1AE8D34A0()
{
  uint64_t v0;

  swift_release();
  sub_1AE555C64(v0 + OBJC_IVAR____TtC20IntelligencePlatform35VisualUnderstandingServiceBackendV1_client, type metadata accessor for EntityRecognitionClient);
  return swift_deallocClassInstance();
}

uint64_t sub_1AE8D34E0()
{
  return type metadata accessor for VisualUnderstandingServiceBackendV1(0);
}

uint64_t type metadata accessor for VisualUnderstandingServiceBackendV1(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1ED31AE38);
}

uint64_t sub_1AE8D34FC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for EntityRecognitionClient(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_1AE8D3578()
{
  unint64_t result;

  result = qword_1EED98FA8;
  if (!qword_1EED98FA8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EED98FA8);
  }
  return result;
}

unint64_t sub_1AE8D35B4()
{
  unint64_t result;

  result = qword_1EEDA5D30;
  if (!qword_1EEDA5D30)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for VisualUnderstandingService.Error, &type metadata for VisualUnderstandingService.Error);
    atomic_store(result, (unint64_t *)&qword_1EEDA5D30);
  }
  return result;
}

void sub_1AE8D35F0(_BYTE *a1@<X8>)
{
  NSObject **v1;
  uint64_t v2;
  NSObject **v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  NSObject **v63;
  int v64;

  v3 = v1;
  v62 = a1;
  sub_1AE501548(&qword_1ED30ED10);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F9024();
  v55 = v5;
  v6 = sub_1AE925770();
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F9024();
  v52 = v8;
  v9 = sub_1AE925704();
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4F9024();
  v59 = v11;
  v12 = sub_1AE9257A0();
  v57 = *(_QWORD *)(v12 - 8);
  v58 = v12;
  sub_1AE4F6630();
  MEMORY[0x1E0C80A78](v13);
  sub_1AE4F9024();
  v56 = v14;
  sub_1AE501548(&qword_1EED98F48);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1AE92568C();
  sub_1AE508180();
  MEMORY[0x1E0C80A78](v19);
  sub_1AE4FFEB4();
  v22 = v20 - v21;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v51 - v24;
  v26 = *v1;
  sub_1AE925848();
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v17, 1, v18) == 1)
  {
LABEL_2:
    sub_1AE524534((uint64_t)v17, &qword_1EED98F48);
    sub_1AE506AF8();
    sub_1AE769C88();
  }
  else
  {
    v31 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
    v32 = *MEMORY[0x1E0DC6F78];
    v64 = *MEMORY[0x1E0DC6F80];
    v63 = v3;
    while (1)
    {
      v31(v25, v17, v18);
      (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))(v22, v25, v18);
      v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v22, v18);
      if (v33 == v32)
      {
        sub_1AE5097DC();
        v38 = v56;
        v37 = v57;
        v39 = v58;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v56, v22, v58);
        sub_1AE92577C();
        sub_1AE8D3A4C();
        sub_1AE8D47C4();
        v40 = sub_1AE925794();
        v41 = sub_1AE925788();
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v39);
        sub_1AE508E38();
        v42 = v62;
        *v62 = v22;
        *((_QWORD *)v42 + 1) = v40;
        *((_QWORD *)v42 + 2) = v41;
        v43 = sub_1AE506AF8();
        swift_storeEnumTagMultiPayload();
        v27 = (uint64_t)v42;
        goto LABEL_17;
      }
      if (v33 == v64)
        break;
      if (((_BYTE)v3[1] & 1) != 0)
      {
        sub_1AE508568();
      }
      else
      {
        if (qword_1ED31BCB0 != -1)
          swift_once();
        v34 = sub_1AE925B6C();
        sub_1AE4FB608(v34, (uint64_t)qword_1ED31BC90);
        v26 = sub_1AE925B54();
        v35 = sub_1AE9265F8();
        if (os_log_type_enabled(v26, v35))
        {
          v36 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v36 = 0;
          _os_log_impl(&dword_1AE4F2000, v26, v35, "Unknown type of VUGalleryUpdate was received. Ignoring.", v36, 2u);
          MEMORY[0x1AF454C78](v36, -1, -1);
        }

        sub_1AE508568();
        v3 = v63;
        *((_BYTE *)v63 + 8) = 1;
      }
      ((void (*)(uint64_t, uint64_t))v26)(v22, v18);
      v26 = *v3;
      sub_1AE925848();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v17, 1, v18) == 1)
        goto LABEL_2;
    }
    sub_1AE5097DC();
    v45 = v52;
    v44 = v53;
    v46 = v54;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v52, v22, v54);
    sub_1AE92574C();
    sub_1AE8D3A4C();
    sub_1AE8D47C4();
    v47 = sub_1AE925758();
    v48 = v55;
    sub_1AE925764();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v46);
    sub_1AE508E38();
    v49 = v62;
    *v62 = v22;
    *((_QWORD *)v49 + 1) = v47;
    v50 = type metadata accessor for VisualUnderstandingService.EntityUpdate(0);
    sub_1AE8D46F0(v48, (uint64_t)&v49[*(int *)(v50 + 24)]);
    v43 = sub_1AE506AF8();
    swift_storeEnumTagMultiPayload();
    v27 = (uint64_t)v49;
LABEL_17:
    v28 = 0;
    v29 = 1;
    v30 = v43;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v27, v28, v29, v30);
  sub_1AE4F8180();
}

uint64_t sub_1AE8D3A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t result;

  v2 = sub_1AE925704();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE500100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v0, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v4 == *MEMORY[0x1E0DC6FE8])
    return 0;
  if (v4 == *MEMORY[0x1E0DC6FF8])
    return 1;
  if (v4 == *MEMORY[0x1E0DC6FF0])
    return 2;
  result = sub_1AE926AB4();
  __break(1u);
  return result;
}

void sub_1AE8D3B64(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _BYTE *v18;
  void *v19;

  v5 = sub_1AE925854();
  if (v5)
  {
    v6 = (void *)v5;
    v7 = (void *)objc_opt_self();
    v8 = sub_1AE8D47D8(v7, sel_archivedDataWithRootObject_requiringSecureCoding_error_);
    v16 = sub_1AE506828((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, 0);
    if (v1)
    {
      sub_1AE924834();
      sub_1AE8D481C();

      *a1 = v2;
      a1[1] = v3;
    }
    else
    {
      v19 = v16;
      sub_1AE9246B4();

      swift_willThrow();
    }
  }
  else
  {
    sub_1AE8D35B4();
    v17 = sub_1AE4F6778();
    sub_1AE8D4794(v17, v18);
  }
  sub_1AE4F68E0();
}

void sub_1AE8D3C48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v4 = sub_1AE8D4810();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4FD838();
  v6 = sub_1AE9257D0();
  sub_1AE508180();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F666C();
  v10 = v9 - v8;
  v11 = v1[1];
  v12 = *(_QWORD *)(*v1 + 16);
  if (v11 == v12)
  {
    sub_1AE501548(&qword_1EED94B00);
    sub_1AE769C88();
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v13, v14, v15, v16);
  }
  else if (v11 >= v12)
  {
    __break(1u);
  }
  else
  {
    v17 = *v1
        + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
        + *(_QWORD *)(v3 + 72) * v11;
    v1[1] = v11 + 1;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16))(v10, v17, v6);
    v22 = sub_1AE9257B8();
    sub_1AE9257B8();
    sub_1AE92646C();
    sub_1AE8D3E28();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
    v18 = sub_1AE9257AC();
    type metadata accessor for VisualUnderstandingService.ObservationSequence();
    v19 = (_QWORD *)swift_allocObject();
    v19[5] = &unk_1E5DC5708;
    v19[6] = sub_1AE595960();
    v19[2] = v18;
    v19[3] = 0;
    v20 = sub_1AE501548(&qword_1EED94B00);
    v21 = *(int *)(v20 + 80);
    *(_QWORD *)v0 = v22;
    *(_OWORD *)(v0 + 8) = v23;
    *(_QWORD *)(v0 + 24) = v24;
    *(_QWORD *)(v0 + 32) = v25;
    *(_BYTE *)(v0 + 40) = v26;
    sub_1AE9257C4();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v10, v6);
    *(_QWORD *)(v0 + v21) = v19;
    _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v0, 0, 1, v20);
    sub_1AE4F8180();
  }
}

void sub_1AE8D3E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v2 = v0;
  v3 = sub_1AE8D4810();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE500100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v1, v3);
  if (v5 == *MEMORY[0x1E0DC70D8])
  {
    static EntityClass.entity.getter();
  }
  else if (v5 == *MEMORY[0x1E0DC70D0])
  {
    static EntityClass.person.getter();
  }
  else if (v5 == *MEMORY[0x1E0DC70C8])
  {
    static EntityClass.animal.getter();
  }
  else
  {
    static EntityClass.entity.getter();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  }
}

void sub_1AE8D3F1C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  _BYTE *v18;
  void *v19;

  v5 = sub_1AE92586C();
  if (v5)
  {
    v6 = (void *)v5;
    v7 = (void *)objc_opt_self();
    v8 = sub_1AE8D47D8(v7, sel_archivedDataWithRootObject_requiringSecureCoding_error_);
    v16 = sub_1AE506828((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15, 0);
    if (v1)
    {
      sub_1AE924834();
      sub_1AE8D481C();

      *a1 = v2;
      a1[1] = v3;
    }
    else
    {
      v19 = v16;
      sub_1AE9246B4();

      swift_willThrow();
    }
  }
  else
  {
    sub_1AE8D35B4();
    v17 = sub_1AE4F6778();
    sub_1AE8D4794(v17, v18);
  }
  sub_1AE4F68E0();
}

void sub_1AE8D4000(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_1AE8D3FFC();
  v5 = v4;
  sub_1AE555C64(v1, type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1);
  *a1 = v3;
  a1[1] = v5;
  sub_1AE4F6624();
}

void sub_1AE8D4044(uint64_t a1@<X8>)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[1];
  v3 = *(_QWORD *)(*v1 + 16);
  if (v2 == v3)
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 1;
  }
  else if (v2 >= v3)
  {
    __break(1u);
  }
  else
  {
    v4 = *v1 + 16 * v2;
    v5 = *(_QWORD *)(v4 + 40);
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 32);
    *(_QWORD *)(a1 + 8) = v5;
    v1[1] = v2 + 1;
    *(_BYTE *)(a1 + 16) = 0;
  }
}

uint64_t sub_1AE8D4094()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t result;

  v1 = v0[1];
  v2 = *(_QWORD *)(*v0 + 16);
  if (v1 == v2)
    return 0;
  if (v1 >= v2)
  {
    __break(1u);
  }
  else
  {
    result = *(_QWORD *)(*v0 + 8 * v1 + 32);
    v0[1] = v1 + 1;
  }
  return result;
}

uint64_t sub_1AE8D40D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1AE8D4094();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_1AE8D40FC(_QWORD *a1@<X8>)
{
  sub_1AE8D2390(a1);
}

unint64_t sub_1AE8D4114()
{
  unint64_t result;

  result = qword_1EED98FA0;
  if (!qword_1EED98FA0)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96F5DC, &unk_1E5DC55E8);
    atomic_store(result, (unint64_t *)&qword_1EED98FA0);
  }
  return result;
}

unint64_t sub_1AE8D4150()
{
  unint64_t result;

  result = qword_1EEDA5D40;
  if (!qword_1EEDA5D40)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96F5AC, &unk_1E5DC5788);
    atomic_store(result, (unint64_t *)&qword_1EEDA5D40);
  }
  return result;
}

uint64_t type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(uint64_t a1)
{
  return sub_1AE536C28(a1, (uint64_t *)&unk_1EED94B30);
}

uint64_t sub_1AE8D41A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE8D41E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(0)
                                      - 8)
                          + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = sub_1AE925878();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_deallocObject();
}

void sub_1AE8D4254(_QWORD *a1@<X8>)
{
  type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(0);
  sub_1AE8D3F1C(a1);
}

unint64_t sub_1AE8D42A4()
{
  unint64_t result;

  result = qword_1EED94B28;
  if (!qword_1EED94B28)
  {
    result = MEMORY[0x1AF454B70](&unk_1AE96F57C, &unk_1E5DC5668);
    atomic_store(result, (unint64_t *)&qword_1EED94B28);
  }
  return result;
}

void sub_1AE8D42E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  sub_1AE4FE8EC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_1AE4F6664();
}

void sub_1AE8D4318(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_1AE501548(a3);
  sub_1AE4FE8EC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_1AE4F6664();
}

void type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1.Iterator()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE8D4360(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE925878();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1AE8D439C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AE925878();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1AE8D43D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE925878();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AE8D4414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE925878();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AE8D4458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE925878();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AE8D449C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE925878();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AE8D44E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE8D44EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1AE508100();
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, v0, v2);
}

uint64_t sub_1AE8D4514()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AE8D4520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1AE508100();
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v1, v0, v0, v2);
}

uint64_t sub_1AE8D454C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AE925878();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for VisualUnderstandingServiceBackendV1.SimilarEntitySequenceV1.Iterator()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE8D45C0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_1AE8D45F4(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t sub_1AE8D4640(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

void type metadata accessor for VisualUnderstandingServiceBackendV1.ChangeSequenceV1.Iterator()
{
  sub_1AE4F67D4();
}

unint64_t sub_1AE8D468C(uint64_t a1)
{
  unint64_t result;

  result = sub_1AE8D46B0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AE8D46B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEDA5D48;
  if (!qword_1EEDA5D48)
  {
    v1 = type metadata accessor for VisualUnderstandingServiceBackendV1.EntitySequenceV1(255);
    result = MEMORY[0x1AF454B70](&unk_1AE96F4F8, v1);
    atomic_store(result, (unint64_t *)&qword_1EEDA5D48);
  }
  return result;
}

uint64_t sub_1AE8D46F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AE501548(&qword_1ED30ED10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1AE8D4738(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void type metadata accessor for VisualUnderstandingServiceBackendV1.ObservationSequenceV1.Iterator()
{
  sub_1AE4F67D4();
}

uint64_t sub_1AE8D4794(uint64_t a1, _BYTE *a2)
{
  *a2 = 1;
  return swift_willThrow();
}

uint64_t sub_1AE8D47A8()
{
  return 0;
}

uint64_t sub_1AE8D47C4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 120) + 8))(v0, *(_QWORD *)(v1 - 112));
}

id sub_1AE8D47D8(id a1, SEL a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  return objc_msgSend(a1, a2, v2, 1, va);
}

uint64_t sub_1AE8D47FC@<X0>(uint64_t a1@<X8>, float a2@<S0>)
{
  uint64_t v2;
  uint64_t v3;

  *(float *)(v3 + a1) = a2;
  return v2;
}

uint64_t sub_1AE8D4810()
{
  return sub_1AE9257E8();
}

void sub_1AE8D481C()
{
  void *v0;

}

uint64_t sub_1AE8D4828()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  unint64_t v7;
  char v8;
  uint64_t v10;

  v10 = MEMORY[0x1E0DEE9D8];
  sub_1AE521A74();
  swift_retain();
  v0 = sub_1AE8CE0BC();
  if ((v1 & 1) == 0)
  {
    v2 = v0;
    do
    {
      if (!v2)
      {
        if (qword_1EED99920 != -1)
          swift_once();
        v3 = sub_1AE925B6C();
        sub_1AE4FB608(v3, (uint64_t)qword_1EEDA5D50);
        v4 = sub_1AE925B54();
        v5 = sub_1AE9265F8();
        if (os_log_type_enabled(v4, v5))
        {
          v6 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v6 = 0;
          _os_log_impl(&dword_1AE4F2000, v4, v5, "GDVUGalleryTransaction.entities: Observation ID should never be zero. This is an error in VU.", v6, 2u);
          MEMORY[0x1AF454C78](v6, -1, -1);
        }

      }
      v7 = *(_QWORD *)(v10 + 16);
      if (v7 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_1AE521A74();
      *(_QWORD *)(v10 + 16) = v7 + 1;
      *(_QWORD *)(v10 + 8 * v7 + 32) = v2;
      v2 = sub_1AE8CE0BC();
    }
    while ((v8 & 1) == 0);
  }
  swift_release();
  return v10;
}

void sub_1AE8D49C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1;
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1AE522860();
    v3 = sub_1AE64A338(v2);
    if (v3 < 0 || (v5 = v3, v3 >= 1 << *(_BYTE *)(v2 + 32)))
    {
LABEL_18:
      __break(1u);
    }
    else
    {
      v6 = v2 + 64;
      v15 = v2 + 64;
      while ((*(_QWORD *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
      {
        if (v4 != *(_DWORD *)(v2 + 36))
          goto LABEL_20;
        v16 = v1;
        v17 = v4;
        v7 = v2;
        v8 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
        v9 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v5));
        if (!v9)
          goto LABEL_24;
        v10 = v9;
        v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v8);
        v12 = *(_QWORD *)(v18 + 16);
        if (v12 >= *(_QWORD *)(v18 + 24) >> 1)
          sub_1AE522860();
        *(_QWORD *)(v18 + 16) = v12 + 1;
        v13 = v18 + 16 * v12;
        *(_QWORD *)(v13 + 32) = v10;
        *(_QWORD *)(v13 + 40) = v11;
        if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(v7 + 32)))
          goto LABEL_21;
        v6 = v15;
        if ((*(_QWORD *)(v15 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
          goto LABEL_22;
        v2 = v7;
        if (v17 != *(_DWORD *)(v7 + 36))
          goto LABEL_23;
        v14 = sub_1AE926850();
        --v1;
        if (v16 == 1)
          return;
        v5 = v14;
        if ((v14 & 0x8000000000000000) == 0)
        {
          v4 = *(_DWORD *)(v7 + 36);
          if (v14 < 1 << *(_BYTE *)(v7 + 32))
            continue;
        }
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
}

void GDVUVisualUnderstandingService.gallery.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for GDVUGallery(a1);
  sub_1AE4F9858((_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR___GDVUVisualUnderstandingService_inner) + 16), *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR___GDVUVisualUnderstandingService_inner) + 40));
  v2 = swift_retain();
  sub_1AE8D787C(v2, (Class *)off_1E5DA24F8, &OBJC_IVAR___GDVUGallery_inner);
  swift_release();
  sub_1AE4F6664();
}

void type metadata accessor for GDVUGallery(uint64_t a1)
{
  sub_1AE524254(a1, &qword_1ED310238);
}

id GDVUVisualUnderstandingService.init(client:version:url:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = sub_1AE924780();
  v7 = 0;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(a3, 1, v6) != 1)
  {
    v7 = (void *)sub_1AE924708();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a3, v6);
  }
  v12[0] = 0;
  v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithClient_version_url_error_, a1, a2, v7, v12);

  if (v8)
  {
    v9 = v12[0];
  }
  else
  {
    v10 = v12[0];
    sub_1AE9246B4();

    swift_willThrow();
  }

  return v8;
}

void GDVUVisualUnderstandingService.init(client:version:url:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  objc_super v28;
  uint64_t v29;
  unint64_t v30;

  sub_1AE4F67EC();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  type metadata accessor for EntityRecognitionClient(0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F90F4();
  type metadata accessor for VisualUnderstandingService.Version(0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v10);
  sub_1AE4FFEB4();
  v13 = v11 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v27 - v15;
  if (v6 == 1)
  {
    sub_1AE8CEC90(v4, (uint64_t)&v27 - v15, (uint64_t *)&unk_1ED31C9C0);
    v18 = sub_1AE501548(&qword_1ED319558);
    v19 = (uint64_t)v16;
    v20 = 0;
  }
  else
  {
    if (v6)
    {
      v29 = 0;
      v30 = 0xE000000000000000;
      v26 = v0;
      sub_1AE92691C();
      sub_1AE925F74();
      type metadata accessor for GDVUVersion(0);
      sub_1AE926A48();
      sub_1AE926AB4();
      __break(1u);
      return;
    }
    v18 = sub_1AE501548(&qword_1ED319558);
    v19 = (uint64_t)v16;
    v20 = 1;
  }
  sub_1AE812D94(v19, v20, v17, v18);
  v21 = *(_QWORD *)&v8[OBJC_IVAR___GDVUEntityRecognitionClient_inner]
      + *(_QWORD *)(**(_QWORD **)&v8[OBJC_IVAR___GDVUEntityRecognitionClient_inner] + 88);
  sub_1AE4F9094();
  sub_1AE8DBA44(v21, v2, type metadata accessor for EntityRecognitionClient);
  sub_1AE8DBA44((uint64_t)v16, v13, type metadata accessor for VisualUnderstandingService.Version);
  type metadata accessor for VisualUnderstandingService(0);
  sub_1AE4FCE84();
  v22 = v0;
  VisualUnderstandingService.init(client:version:)();
  if (v1)
  {

    sub_1AE524534(v4, (uint64_t *)&unk_1ED31C9C0);
    sub_1AE555C64((uint64_t)v16, type metadata accessor for VisualUnderstandingService.Version);
    type metadata accessor for GDVUVisualUnderstandingService(v24);
    sub_1AE8DC010();
  }
  else
  {
    v25 = v23;
    sub_1AE555C64((uint64_t)v16, type metadata accessor for VisualUnderstandingService.Version);
    *(_QWORD *)&v22[OBJC_IVAR___GDVUVisualUnderstandingService_inner] = v25;

    v28.receiver = v22;
    v28.super_class = (Class)GDVUVisualUnderstandingService;
    objc_msgSendSuper2(&v28, sel_init);

    sub_1AE524534(v4, (uint64_t *)&unk_1ED31C9C0);
  }
  sub_1AE4F667C();
}

void GDVUVisualUnderstandingService.recognize(in:contextMoment:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1AE4F67EC();
  v4 = type metadata accessor for VisualUnderstandingService.RecognitionResult(0);
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE4F90C8();
  sub_1AE4F9858((_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___GDVUVisualUnderstandingService_inner) + 16), *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___GDVUVisualUnderstandingService_inner) + 40));
  sub_1AE505390();
  sub_1AE8D2504();
  if (!v1)
  {
    if (v6)
      v7 = v6;
    else
      v7 = MEMORY[0x1E0DEE9D8];
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      v9 = sub_1AE5066FC(MEMORY[0x1E0DEE9D8]);
      type metadata accessor for GDVURecognitionResult(v9);
      v10 = v7 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      v11 = *(_QWORD *)(v3 + 72);
      do
      {
        sub_1AE8DBA44(v10, (uint64_t)v2, type metadata accessor for VisualUnderstandingService.RecognitionResult);
        v12 = *v2;
        sub_1AE8D5298(&v12, (uint64_t)v2 + *(int *)(v4 + 20), *(float *)((char *)v2 + *(int *)(v4 + 24)));
        sub_1AE555C64((uint64_t)v2, type metadata accessor for VisualUnderstandingService.RecognitionResult);
        sub_1AE9269B8();
        sub_1AE8DBFE0();
        sub_1AE8DBFF0();
        sub_1AE9269C4();
        v10 += v11;
        --v8;
      }
      while (v8);
      sub_1AE8DC03C();
    }
    else
    {
      sub_1AE4F81B8();
    }
  }
  sub_1AE4F667C();
}

id sub_1AE8D5298(uint64_t *a1, uint64_t a2, float a3)
{
  uint64_t v3;
  uint64_t v7;
  id v8;
  uint64_t v10;

  sub_1AE812DC8();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F683C();
  v10 = *a1;
  sub_1AE8DBF74(a2, v3);
  v8 = objc_allocWithZone((Class)GDVURecognitionResult);
  return sub_1AE8DB228(&v10, v3, a3);
}

void GDVUVisualUnderstandingService.recognize(in:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;

  sub_1AE4F67EC();
  v27 = v1;
  v5 = v4;
  v6 = type metadata accessor for VisualUnderstandingService.RecognitionResult(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F683C();
  sub_1AE501548(&qword_1ED30ED10);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE507918();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v26 - v10;
  v12 = *(_QWORD *)(v0 + OBJC_IVAR___GDVUVisualUnderstandingService_inner);
  if (v5)
  {
    v13 = objc_msgSend(v5, sel_moment);
    sub_1AE924900();

    sub_1AE924918();
    sub_1AE507F1C((uint64_t)v11, 0);
    v14 = objc_msgSend(v5, sel_asset);
    sub_1AE924900();

    v15 = v3;
    v16 = 0;
  }
  else
  {
    sub_1AE924918();
    sub_1AE507F1C((uint64_t)v11, 1);
    v15 = v3;
    v16 = 1;
  }
  sub_1AE507F1C(v15, v16);
  sub_1AE4F9858((_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 40));
  v17 = v27;
  sub_1AE8D275C();
  v19 = v18;
  sub_1AE524534(v3, &qword_1ED30ED10);
  sub_1AE524534((uint64_t)v11, &qword_1ED30ED10);
  if (!v17)
  {
    if (v19)
      v20 = v19;
    else
      v20 = MEMORY[0x1E0DEE9D8];
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v27 = 0;
      v22 = sub_1AE5066FC(MEMORY[0x1E0DEE9D8]);
      type metadata accessor for GDVURecognitionResult(v22);
      v23 = *(unsigned __int8 *)(v7 + 80);
      v26[1] = v20;
      v24 = v20 + ((v23 + 32) & ~v23);
      v25 = *(_QWORD *)(v7 + 72);
      do
      {
        sub_1AE8DBA44(v24, (uint64_t)v2, type metadata accessor for VisualUnderstandingService.RecognitionResult);
        v28 = *v2;
        sub_1AE8D5298(&v28, (uint64_t)v2 + *(int *)(v6 + 20), *(float *)((char *)v2 + *(int *)(v6 + 24)));
        sub_1AE555C64((uint64_t)v2, type metadata accessor for VisualUnderstandingService.RecognitionResult);
        sub_1AE9269B8();
        sub_1AE8DBFE0();
        sub_1AE8DBFF0();
        sub_1AE9269C4();
        v24 += v25;
        --v21;
      }
      while (v21);
      sub_1AE8DC03C();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_1AE4F667C();
}

void sub_1AE8D571C(unint64_t a1, uint64_t a2, const void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  char *v67;
  const void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81[2];

  v4 = v3;
  v68 = a3;
  v7 = sub_1AE501548(&qword_1ED30ED10);
  MEMORY[0x1E0C80A78](v7);
  v69 = (uint64_t)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1AE501548(&qword_1EED94B00);
  v10 = MEMORY[0x1E0C80A78](v9);
  v65 = (uint64_t *)((char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v74 = (uint64_t *)((char *)&v63 - v12);
  v13 = sub_1AE501548(&qword_1EED94B08);
  MEMORY[0x1E0C80A78](v13);
  v15 = *(_QWORD *)(a2 + OBJC_IVAR___GDVUVisualUnderstandingService_inner);
  v67 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_16;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_1AE926AD8();
    if (v16)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v16)
    goto LABEL_15;
LABEL_4:
  v75 = v15;
  v76 = MEMORY[0x1E0DEE9D8];
  sub_1AE5219D8();
  if (v16 < 0)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  v73 = v3;
  v66 = v9;
  v17 = 0;
  v18 = v76;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v19 = (id)MEMORY[0x1AF453B80](v17, a1);
    else
      v19 = *(id *)(a1 + 8 * v17 + 32);
    v20 = v19;
    v21 = objc_msgSend(v19, sel_intValue);

    v76 = v18;
    v22 = *(_QWORD *)(v18 + 16);
    if (v22 >= *(_QWORD *)(v18 + 24) >> 1)
    {
      sub_1AE5219D8();
      v18 = v76;
    }
    ++v17;
    *(_QWORD *)(v18 + 16) = v22 + 1;
    *(_QWORD *)(v18 + 8 * v22 + 32) = v21;
  }
  while (v16 != v17);
  swift_bridgeObjectRelease();
  v9 = v66;
  v4 = v73;
  v15 = v75;
LABEL_16:
  sub_1AE4F9858((_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 40));
  v23 = v4;
  sub_1AE8D30C0();
  v25 = v24;
  swift_bridgeObjectRelease();
  if (v23)
  {
LABEL_25:
    _Block_release(v68);
    return;
  }
  v73 = 0;
  swift_retain();
  v66 = v9;
  v64 = v25;
  do
  {
    v26 = (uint64_t)v67;
    sub_1AE8CE00C();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v26, 1, v9) == 1)
      break;
    v27 = *(int *)(v9 + 64);
    v28 = v74;
    v29 = (uint64_t)v74 + v27;
    v75 = (uint64_t)v74 + v27;
    v30 = *(_QWORD *)v26;
    v31 = *(_QWORD *)(v26 + 8);
    v33 = *(_QWORD *)(v26 + 16);
    v72 = *(_QWORD *)(v26 + 24);
    v32 = v72;
    v34 = v9;
    v35 = *(_QWORD *)(v26 + 32);
    v36 = *(_BYTE *)(v26 + 40);
    v37 = v26 + v27;
    v38 = *(int *)(v34 + 80);
    v39 = *(_QWORD *)(v26 + v38);
    *v74 = v30;
    v28[1] = v31;
    v28[2] = v33;
    v28[3] = v32;
    v28[4] = v35;
    *((_BYTE *)v28 + 40) = v36;
    sub_1AE8D46F0(v37, v29);
    *(uint64_t *)((char *)v28 + v38) = v39;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40 = v73;
    v41 = sub_1AE8D4828();
    v73 = v40;
    v42 = v65;
    v43 = (uint64_t)v65 + *(int *)(v34 + 64);
    v44 = *(int *)(v34 + 80);
    v70 = v41;
    v71 = v44;
    *v65 = v30;
    v42[1] = v31;
    v45 = v31;
    v46 = v72;
    v42[2] = v33;
    v42[3] = v46;
    v42[4] = v35;
    v47 = v36;
    *((_BYTE *)v42 + 40) = v36;
    v48 = v43;
    sub_1AE8CEC90(v75, v43, &qword_1ED30ED10);
    swift_release();
    *(uint64_t *)((char *)v42 + v71) = v39;
    v49 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v30);
    sub_1AE524534(v48, &qword_1ED30ED10);
    if (!v49)
      goto LABEL_28;
    type metadata accessor for GDVUEntityClass(v50);
    v76 = v45;
    v77 = v33;
    v78 = v46;
    v79 = v35;
    v80 = v47;
    v51 = sub_1AE8D6074((uint64_t)&v76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v52 = v69;
    sub_1AE8CEC90(v75, v69, &qword_1ED30ED10);
    v53 = sub_1AE924918();
    v54 = 0;
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v52, 1, v53) != 1)
    {
      v55 = v69;
      v54 = (void *)sub_1AE9248F4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v55, v53);
    }
    v56 = (void *)sub_1AE9261C0();
    v57 = (*((uint64_t (**)(const void *, id, id, void *, void *))v68 + 2))(v68, v49, v51, v54, v56);

    swift_bridgeObjectRelease();
    sub_1AE524534((uint64_t)v74, &qword_1EED94B00);
    v9 = v66;
    v25 = v64;
  }
  while ((v57 & 1) != 0);
  v58 = swift_release();
  v59 = v73;
  v60 = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t))(v25 + 16))(&v76, v58);
  if (v59)
  {
    swift_release();
    goto LABEL_25;
  }
  type metadata accessor for GDVUChangeBookmark((uint64_t)v60);
  v61 = v76;
  v62 = v77;
  v81[0] = v76;
  v81[1] = v77;
  sub_1AE8D60D8(v81);
  swift_release();
  sub_1AE50BDB4(v61, v62);
  _Block_release(v68);
}

void GDVUVisualUnderstandingService.entities(for:body:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(id, id, uint64_t, uint64_t);
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(id, id, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59[3];

  sub_1AE4F67EC();
  v43 = v4;
  v6 = v5;
  v47 = sub_1AE501548(&qword_1EED94B00);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4FFEB4();
  v44 = v8 - v9;
  MEMORY[0x1E0C80A78](v10);
  sub_1AE509B9C();
  sub_1AE501548(&qword_1EED94B08);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F90C8();
  v12 = *(_QWORD *)(v0 + OBJC_IVAR___GDVUVisualUnderstandingService_inner);
  v46 = v2;
  if (!v6)
    goto LABEL_16;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1AE926AD8();
    if (v13)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v13 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v13)
    goto LABEL_15;
LABEL_4:
  v52 = v12;
  v54 = MEMORY[0x1E0DEE9D8];
  sub_1AE5219D8();
  if (v13 < 0)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  v14 = 0;
  v15 = v54;
  do
  {
    if ((v6 & 0xC000000000000001) != 0)
      v16 = (id)MEMORY[0x1AF453B80](v14, v6);
    else
      v16 = *(id *)(v6 + 8 * v14 + 32);
    v17 = v16;
    v18 = objc_msgSend(v16, sel_intValue);

    v54 = v15;
    v19 = *(_QWORD *)(v15 + 16);
    if (v19 >= *(_QWORD *)(v15 + 24) >> 1)
    {
      sub_1AE5219D8();
      v15 = v54;
    }
    ++v14;
    *(_QWORD *)(v15 + 16) = v19 + 1;
    *(_QWORD *)(v15 + 8 * v19 + 32) = v18;
  }
  while (v13 != v14);
  swift_bridgeObjectRelease();
  v12 = v52;
LABEL_16:
  v20 = v47;
  sub_1AE4F9858((_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 40));
  sub_1AE8D30C0();
  v22 = v21;
  swift_bridgeObjectRelease();
  if (!v1)
  {
    swift_retain();
    v23 = v46;
    v45 = v3;
    v42 = v22;
    do
    {
      sub_1AE8CE00C();
      if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v3, 1, v20) == 1)
        break;
      v24 = *(int *)(v20 + 64);
      v53 = v23 + v24;
      v25 = *(_QWORD *)(v3 + 8);
      v51 = *(_QWORD *)v3;
      v27 = *(_QWORD *)(v3 + 16);
      v26 = *(_QWORD *)(v3 + 24);
      v28 = *(_QWORD *)(v3 + 32);
      v29 = *(_BYTE *)(v3 + 40);
      v30 = v3 + v24;
      v31 = *(int *)(v20 + 80);
      v32 = *(_QWORD *)(v3 + v31);
      *(_QWORD *)v23 = v51;
      *(_QWORD *)(v23 + 8) = v25;
      *(_QWORD *)(v23 + 16) = v27;
      *(_QWORD *)(v23 + 24) = v26;
      *(_QWORD *)(v23 + 32) = v28;
      *(_BYTE *)(v23 + 40) = v29;
      sub_1AE8D46F0(v30, v23 + v24);
      *(_QWORD *)(v23 + v31) = v32;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1AE4FB75C();
      v48 = sub_1AE8D4828();
      v49 = v26;
      v33 = v44 + *(int *)(v20 + 64);
      v50 = *(int *)(v20 + 80);
      *(_QWORD *)v44 = v51;
      *(_QWORD *)(v44 + 8) = v25;
      *(_QWORD *)(v44 + 16) = v27;
      *(_QWORD *)(v44 + 24) = v26;
      *(_QWORD *)(v44 + 32) = v28;
      *(_BYTE *)(v44 + 40) = v29;
      v34 = v33;
      sub_1AE8CEC90(v53, v33, &qword_1ED30ED10);
      swift_release();
      *(_QWORD *)(v44 + v50) = v32;
      v35 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v51);
      sub_1AE524534(v34, &qword_1ED30ED10);
      if (!v35)
        goto LABEL_24;
      type metadata accessor for GDVUEntityClass(v36);
      v54 = v25;
      v55 = v27;
      v56 = v49;
      v57 = v28;
      v58 = v29;
      v37 = sub_1AE8D6074((uint64_t)&v54);
      swift_bridgeObjectRelease();
      sub_1AE4F81B8();
      v38 = v43(v35, v37, v53, v48);

      sub_1AE4F81B8();
      v23 = v46;
      sub_1AE524534(v46, &qword_1EED94B00);
      v20 = v47;
      v3 = v45;
      v22 = v42;
    }
    while ((v38 & 1) != 0);
    v39 = sub_1AE507978();
    v40 = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t))(v22 + 16))(&v54, v39);
    type metadata accessor for GDVUChangeBookmark((uint64_t)v40);
    v41 = v54;
    v59[0] = v54;
    v59[1] = v55;
    sub_1AE8D60D8(v59);
    sub_1AE507978();
    sub_1AE4F8420(v41);
  }
  sub_1AE4F667C();
}

id sub_1AE8D6074(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD v7[4];
  char v8;

  v2 = *(_QWORD *)a1;
  v1 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 32);
  type metadata accessor for GDVUEntityClass(a1);
  v7[0] = v2;
  v7[1] = v1;
  v7[2] = v4;
  v7[3] = v3;
  v8 = v5;
  sub_1AE4FB75C();
  sub_1AE4F66CC();
  return sub_1AE8D9380((uint64_t)v7);
}

void sub_1AE8D60D8(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  __int128 v3;

  v1 = *a1;
  v2 = a1[1];
  type metadata accessor for GDVUChangeBookmark((uint64_t)a1);
  *(_QWORD *)&v3 = v1;
  *((_QWORD *)&v3 + 1) = v2;
  sub_1AE54C814(v1, v2);
  sub_1AE8DA87C(&v3);
  sub_1AE4FE870();
}

void GDVUVisualUnderstandingService.keyObservation(for:output:)(void *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  NSObject *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;

  v6 = *(NSObject **)(v2 + OBJC_IVAR___GDVUVisualUnderstandingService_inner);
  objc_msgSend(a1, sel_intValue);
  v7 = sub_1AE8CCF8C();
  if (v3)
    goto LABEL_11;
  if ((v8 & 1) != 0)
  {
    v7 = 0;
    goto LABEL_10;
  }
  if (v7)
  {
LABEL_10:
    *a2 = v7;
    goto LABEL_11;
  }
  if (qword_1EED99920 != -1)
    swift_once();
  v9 = sub_1AE4F6854();
  sub_1AE4FB608(v9, (uint64_t)qword_1EEDA5D50);
  sub_1AE7FA5EC();
  v10 = sub_1AE8DC034();
  if (sub_1AE4FB89C(v10))
  {
    v11 = (uint8_t *)sub_1AE4F69B0();
    *(_WORD *)v11 = 0;
    sub_1AE4F9064();
  }

  *a2 = 0;
LABEL_11:
  sub_1AE4FB76C();
}

uint64_t GDVUVisualUnderstandingService.similarity(withBetween:and:output:)(void *a1, void *a2, double *a3)
{
  uint64_t v3;
  uint64_t result;
  char v7;
  double v8;

  objc_msgSend(a1, sel_intValue);
  objc_msgSend(a2, sel_intValue);
  result = sub_1AE8CCFD0();
  if (!v3)
  {
    v8 = *(double *)&result;
    if ((v7 & 1) != 0)
      v8 = NAN;
    *a3 = v8;
  }
  return result;
}

void sub_1AE8D64E4(void *a1, uint64_t a2, uint64_t (**a3)(_QWORD, _QWORD))
{
  uint64_t v3;
  id v5;
  void *v6;
  char v7;
  id v8;
  char v9;

  v8 = objc_msgSend(a1, sel_intValue);
  sub_1AE8CD030();
  if (v3)
  {
LABEL_6:
    _Block_release(a3);
  }
  else
  {
    while (1)
    {
      swift_retain();
      sub_1AE8CE3D4();
      swift_release();
      if ((v9 & 1) != 0)
      {
LABEL_5:
        swift_release();
        goto LABEL_6;
      }
      v5 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v8);
      if (!v5)
        break;
      v6 = v5;
      v7 = ((uint64_t (**)(_QWORD, id))a3)[2](a3, v5);

      if ((v7 & 1) == 0)
        goto LABEL_5;
    }
    __break(1u);
  }
}

void GDVUVisualUnderstandingService.similarEntities(to:body:)(void *a1, uint64_t (*a2)())
{
  uint64_t v2;
  id v4;
  void *v5;
  char v6;
  id v7;
  char v8;

  v7 = objc_msgSend(a1, sel_intValue);
  sub_1AE8CD030();
  if (!v2)
  {
    while (1)
    {
      swift_retain();
      sub_1AE8CE3D4();
      swift_release();
      if ((v8 & 1) != 0)
      {
LABEL_5:
        swift_release();
        return;
      }
      v4 = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, v7);
      if (!v4)
        break;
      v5 = v4;
      v6 = a2();

      if ((v6 & 1) == 0)
        goto LABEL_5;
    }
    __break(1u);
  }
}

uint64_t sub_1AE8D6794(uint64_t a1, uint64_t a2, uint64_t (**a3)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t EnumCaseMultiPayload;
  id v25;
  void *v26;
  void *v27;
  int v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (**v33)(_QWORD, _QWORD);
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[2];
  uint64_t (**v49)(_QWORD, _QWORD);

  v49 = a3;
  v4 = type metadata accessor for VisualUnderstandingService.EntityUpdate(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v42 - v8;
  v10 = type metadata accessor for VisualUnderstandingService.MappingChange(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1AE501548(&qword_1EED94D00);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1 + OBJC_IVAR___GDVUChangeBookmark_inner;
  v17 = *(_QWORD *)(a1 + OBJC_IVAR___GDVUChangeBookmark_inner);
  v18 = *(_QWORD *)(v16 + 8);
  v45 = v17;
  v46 = v18;
  sub_1AE54C814(v17, v18);
  v19 = v44;
  sub_1AE8CD0D8();
  v21 = v20;
  v22 = v19;
  sub_1AE50BDB4(v17, v18);
  v44 = v19;
  if (!v19)
  {
    swift_retain();
    sub_1AE8CE00C();
    if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v15, 1, v10) != 1)
    {
      v23 = (uint64_t)v7;
      v43 = v15;
      do
      {
        sub_1AE8DBD3C((uint64_t)v15, (uint64_t)v12, type metadata accessor for VisualUnderstandingService.MappingChange);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if ((_DWORD)EnumCaseMultiPayload == 1)
        {
          sub_1AE8DBD3C((uint64_t)v12, (uint64_t)v9, type metadata accessor for VisualUnderstandingService.EntityUpdate);
          sub_1AE8DBA44((uint64_t)v9, v23, type metadata accessor for VisualUnderstandingService.EntityUpdate);
          v25 = objc_allocWithZone((Class)GDVUEntityUpdate);
          sub_1AE8DB61C(v23, type metadata accessor for VisualUnderstandingService.EntityUpdate, &qword_1EEDA5EF0, &OBJC_IVAR___GDVUEntityUpdate_inner, (objc_class **)off_1E5DA24F0);
          v27 = v26;
          v28 = ((uint64_t (**)(_QWORD, void *))v49)[2](v49, v26);

          sub_1AE555C64((uint64_t)v9, type metadata accessor for VisualUnderstandingService.EntityUpdate);
          if (!v28)
            break;
        }
        else
        {
          v29 = *v12;
          v30 = v23;
          v32 = *((_QWORD *)v12 + 1);
          v31 = *((_QWORD *)v12 + 2);
          type metadata accessor for GDVUObservationUpdate(EnumCaseMultiPayload);
          LOBYTE(v45) = v29;
          v46 = v32;
          v47 = v31;
          v23 = v30;
          v33 = v49;
          v15 = v43;
          v34 = sub_1AE8D6D90((uint64_t)&v45);
          LOBYTE(v32) = ((uint64_t (**)(_QWORD, id))v33)[2](v33, v34);

          if ((v32 & 1) == 0)
            break;
        }
        sub_1AE8CE00C();
      }
      while (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v15, 1, v10) != 1);
    }
    v35 = swift_release();
    v22 = *(_QWORD *)(v21 + 24);
    v36 = v44;
    v37 = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t))(v21 + 16))(&v45, v35);
    if (v36)
    {
      swift_release();
    }
    else
    {
      type metadata accessor for GDVUChangeBookmark((uint64_t)v37);
      v39 = v45;
      v40 = v46;
      v48[0] = v45;
      v48[1] = v46;
      sub_1AE8D60D8(v48);
      v22 = v41;
      swift_release();
      sub_1AE50BDB4(v39, v40);
    }
  }
  _Block_release(v49);
  return v22;
}

void GDVUVisualUnderstandingService.changes(since:body:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t EnumCaseMultiPayload;
  id v25;
  void *v26;
  void *v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[2];

  sub_1AE4F67EC();
  v40 = v4;
  v5 = sub_1AE4F7B2C();
  type metadata accessor for VisualUnderstandingService.EntityUpdate(v5);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F94A4();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - v8;
  v10 = type metadata accessor for VisualUnderstandingService.MappingChange(0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v11);
  sub_1AE4F666C();
  v14 = v13 - v12;
  sub_1AE501548(&qword_1EED94D00);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v15);
  sub_1AE4F90C8();
  v16 = v2 + OBJC_IVAR___GDVUChangeBookmark_inner;
  v18 = *(_QWORD *)(v2 + OBJC_IVAR___GDVUChangeBookmark_inner);
  v17 = *(_QWORD *)(v16 + 8);
  v43 = v18;
  v44 = v17;
  sub_1AE54C814(v18, v17);
  sub_1AE8CD0D8();
  v20 = v19;
  sub_1AE4F8420(v18);
  if (!v0)
  {
    v39 = 0;
    swift_retain();
    sub_1AE8CE00C();
    v21 = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v1, 1, v10);
    v22 = v40;
    if (v21 != 1)
    {
      v23 = v1;
      v41 = v20;
      v42 = v1;
      do
      {
        sub_1AE8DBD3C(v23, v14, type metadata accessor for VisualUnderstandingService.MappingChange);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if ((_DWORD)EnumCaseMultiPayload == 1)
        {
          sub_1AE8DBD3C(v14, (uint64_t)v9, type metadata accessor for VisualUnderstandingService.EntityUpdate);
          sub_1AE8DBA44((uint64_t)v9, v3, type metadata accessor for VisualUnderstandingService.EntityUpdate);
          v25 = objc_allocWithZone((Class)GDVUEntityUpdate);
          sub_1AE8DB61C(v3, type metadata accessor for VisualUnderstandingService.EntityUpdate, &qword_1EEDA5EF0, &OBJC_IVAR___GDVUEntityUpdate_inner, (objc_class **)off_1E5DA24F0);
          v27 = v26;
          v28 = v22();

          v23 = v42;
          sub_1AE555C64((uint64_t)v9, type metadata accessor for VisualUnderstandingService.EntityUpdate);
          if ((v28 & 1) == 0)
            break;
        }
        else
        {
          v29 = *(_BYTE *)v14;
          v31 = *(_QWORD *)(v14 + 8);
          v30 = *(_QWORD *)(v14 + 16);
          type metadata accessor for GDVUObservationUpdate(EnumCaseMultiPayload);
          LOBYTE(v43) = v29;
          v44 = v31;
          v45 = v30;
          v20 = v41;
          v32 = sub_1AE8D6D90((uint64_t)&v43);
          v33 = v22();

          v23 = v42;
          if ((v33 & 1) == 0)
            break;
        }
        sub_1AE8CE00C();
      }
      while (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v23, 1, v10) != 1);
    }
    v34 = sub_1AE4FB730();
    v35 = v39;
    v36 = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t))(v20 + 16))(&v43, v34);
    if (v35)
    {
      sub_1AE4FB730();
    }
    else
    {
      type metadata accessor for GDVUChangeBookmark((uint64_t)v36);
      v37 = v43;
      v46[0] = v43;
      v46[1] = v44;
      sub_1AE8D60D8(v46);
      swift_release();
      sub_1AE4F8420(v37);
    }
  }
  sub_1AE4F667C();
}

id sub_1AE8D6D90(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v5[8];
  uint64_t v6;
  uint64_t v7;

  v1 = *(_BYTE *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  type metadata accessor for GDVUObservationUpdate(a1);
  v5[0] = v1;
  v6 = v2;
  v7 = v3;
  return sub_1AE8DAE50(v5);
}

void sub_1AE8D6E9C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v3 = type metadata accessor for VisualUnderstandingService.RecognitionResult(0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4FB7E8();
  sub_1AE501548(&qword_1EEDA5EE0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE501F28();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE509B9C();
  sub_1AE8DC048(OBJC_IVAR___GDVUVisualUnderstandingService_inner);
  sub_1AE8D2F44(v7);
  v8 = sub_1AE595D8C();
  sub_1AE8CEC90(v8, v9, &qword_1EEDA5EE0);
  sub_1AE508578(v2);
  if (!v10)
  {
    sub_1AE8DBF90();
    type metadata accessor for GDVURecognitionResult(v11);
    v12 = *v0;
    sub_1AE8D5298(&v12, (uint64_t)v0 + *(int *)(v3 + 20), *(float *)((char *)v0 + *(int *)(v3 + 24)));
    sub_1AE8DBFD0();
  }
  sub_1AE524534(v1, &qword_1EEDA5EE0);
  sub_1AE4FCDD0();
}

void sub_1AE8D6FB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v3 = type metadata accessor for VisualUnderstandingService.RecognitionResult(0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4FB7E8();
  sub_1AE501548(&qword_1EEDA5EE0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE501F28();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE509B9C();
  sub_1AE8DC048(OBJC_IVAR___GDVUVisualUnderstandingService_inner);
  sub_1AE8D2F44(v7);
  v8 = sub_1AE595D8C();
  sub_1AE8CEC90(v8, v9, &qword_1EEDA5EE0);
  sub_1AE508578(v2);
  if (!v10)
  {
    sub_1AE8DBF90();
    type metadata accessor for GDVURecognitionResult(v11);
    v12 = *v0;
    sub_1AE8D5298(&v12, (uint64_t)v0 + *(int *)(v3 + 20), *(float *)((char *)v0 + *(int *)(v3 + 24)));
    sub_1AE8DBFD0();
  }
  sub_1AE524534(v1, &qword_1EEDA5EE0);
  sub_1AE4F66A8();
}

void GDVUVisualUnderstandingService.init()()
{
  sub_1AE4FD258();
  __break(1u);
}

void GDVUGallery.version.getter()
{
  sub_1AE925A58();
  sub_1AE4F6664();
}

uint64_t GDVUGallery.ready.getter()
{
  return sub_1AE9259C8() & 1;
}

void GDVUGallery.faceprintRevision.getter()
{
  sub_1AE925920();
  sub_1AE4F6664();
}

void GDVUGallery.torsoprintRevision.getter()
{
  sub_1AE925938();
  sub_1AE4F6664();
}

void GDVUGallery.animalprintRevision.getter()
{
  sub_1AE92595C();
  sub_1AE4F6664();
}

void GDVUGallery.observationsCount.getter()
{
  sub_1AE92592C();
  sub_1AE4F6664();
}

void GDVUGallery.primaryCount.getter()
{
  sub_1AE925830();
  sub_1AE4F6664();
}

void GDVUGallery.secondaryCount.getter()
{
  sub_1AE9258A8();
  sub_1AE4F6664();
}

void GDVUGallery.personObservationsCount.getter()
{
  sub_1AE925998();
  sub_1AE4F6664();
}

void GDVUGallery.animalObservationsCount.getter()
{
  sub_1AE92598C();
  sub_1AE4F6664();
}

void GDVUGallery.tagsCount.getter()
{
  sub_1AE925AA0();
  sub_1AE4F6664();
}

void GDVUGallery.entityCount.getter()
{
  sub_1AE925824();
  sub_1AE4F6664();
}

void GDVUGallery.personEntitiesCount.getter()
{
  sub_1AE925974();
  sub_1AE4F6664();
}

void GDVUGallery.animalEntitiesCount.getter()
{
  sub_1AE925950();
  sub_1AE4F6664();
}

void GDVUGallery.observationsCountPerEntity.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___GDVUGallery_inner);
  v2 = sub_1AE9259B0();
  sub_1AE8D49C0(v2);
  sub_1AE4FC764();
  sub_1AE8D7698(v1);
  sub_1AE4FE870();
}

uint64_t sub_1AE8D7698(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1AE501548(&qword_1EED9EA78);
    v3 = sub_1AE926B14();
  }
  else
  {
    v3 = MEMORY[0x1E0DEE9E0];
  }
  v6 = v3;
  sub_1AE8DBDB4(a1, 1, &v6);
  v4 = v6;
  if (v1)
    swift_release();
  return v4;
}

void GDVUGallery.assets.getter()
{
  sub_1AE925A04();
  sub_1AE4F6664();
}

void GDVUGallery.unassignedObservations.getter()
{
  sub_1AE925980();
  sub_1AE4F6664();
}

uint64_t GDVUGallery.mutate(handler:)()
{
  return sub_1AE925A10();
}

void sub_1AE8D780C(uint64_t a1, uint64_t (*a2)(void))
{
  void *v4;
  void *v5;
  uint64_t v6;

  type metadata accessor for GDVUGalleryTransaction(a1);
  sub_1AE8D787C(a1, (Class *)off_1E5DA2500, &OBJC_IVAR___GDVUGalleryTransaction_inner);
  v5 = v4;
  v6 = a2();

  if (v6)
    swift_willThrow();
}

void sub_1AE8D787C(uint64_t a1, Class *a2, _QWORD *a3)
{
  char *v6;
  objc_class *v7;
  objc_super v8;

  v6 = (char *)objc_allocWithZone(*a2);
  *(_QWORD *)&v6[*a3] = a1;
  v7 = *a2;
  v8.receiver = v6;
  v8.super_class = v7;
  swift_retain();
  objc_msgSendSuper2(&v8, sel_init);
  sub_1AE4FE870();
}

id sub_1AE8D7978(uint64_t a1, uint64_t a2)
{
  return (id)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

uint64_t GDVUGallery.clusters(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char v6;
  unsigned int *v7;
  id v8;
  char v9;
  uint64_t v10;

  v2 = sub_1AE9257E8();
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE500100();
  sub_1AE524254(0, (unint64_t *)&qword_1ED31C458);
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_person);
  v6 = sub_1AE9266E8();

  if ((v6 & 1) != 0)
  {
    v7 = (unsigned int *)MEMORY[0x1E0DC70D0];
LABEL_5:
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v0, *v7, v2);
    v10 = sub_1AE925A70();
    sub_1AE8DBF7C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    return v10;
  }
  v8 = objc_msgSend(v4, sel_animal);
  v9 = sub_1AE9266E8();

  if ((v9 & 1) != 0)
  {
    v7 = (unsigned int *)MEMORY[0x1E0DC70C8];
    goto LABEL_5;
  }
  sub_1AE501548(&qword_1EED94978);
  return sub_1AE925C98();
}

Swift::Void __swiftcall GDVUGallery.updateSocialGroups(with:)(Swift::OpaquePointer with)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *rawValue;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v3 = sub_1AE8DBFA8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F90C8();
  if ((unint64_t)with._rawValue >> 62)
  {
    sub_1AE4FB75C();
    v5 = sub_1AE926AD8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)(((unint64_t)with._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v5)
  {
LABEL_12:
    sub_1AE925944();
    swift_bridgeObjectRelease();
    sub_1AE4F8180();
    return;
  }
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1AE522894();
  if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = 0;
    v13 = (unint64_t)with._rawValue & 0xC000000000000001;
    rawValue = with._rawValue;
    v8 = v5;
    do
    {
      if (v13)
        v9 = (char *)MEMORY[0x1AF453B80](v6, with._rawValue);
      else
        v9 = (char *)*((id *)with._rawValue + v6 + 4);
      v10 = v9;
      v11 = *(_QWORD *)&v9[OBJC_IVAR___GDVUSocialGroup_inner]
          + *(_QWORD *)(**(_QWORD **)&v9[OBJC_IVAR___GDVUSocialGroup_inner] + 88);
      sub_1AE4F9094();
      sub_1AE4FB908(v1, v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));

      v12 = *(_QWORD *)(v14 + 16);
      if (v12 >= *(_QWORD *)(v14 + 24) >> 1)
        sub_1AE522894();
      ++v6;
      *(_QWORD *)(v14 + 16) = v12 + 1;
      sub_1AE4FB908(v14+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v12, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
      with._rawValue = rawValue;
    }
    while (v8 != v6);
    goto LABEL_12;
  }
  __break(1u);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> GDVUGallery.reset()()
{
  sub_1AE9259E0();
  sub_1AE4FD974();
}

uint64_t GDVUGallery.reset(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;

  sub_1AE4F7B2C();
  v3 = sub_1AE925A88();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F94A4();
  MEMORY[0x1E0C80A78](v5);
  sub_1AE509B9C();
  v6 = (unsigned int *)MEMORY[0x1E0DC73A0];
  if (v1 != 1)
    v6 = (unsigned int *)MEMORY[0x1E0DC7398];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v2, *v6, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v0, v2, v3);
  sub_1AE9259D4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v0, v3);
}

uint64_t GDVUGallery.update(progressHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1)
  {
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 24) = a2;
  }
  v5 = sub_1AE595D8C();
  sub_1AE769C3C(v5);
  sub_1AE505390();
  sub_1AE925A1C();
  v6 = sub_1AE505390();
  return sub_1AE6263E0(v6);
}

uint64_t sub_1AE8D7F7C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  char v10;
  uint64_t v12;

  v4 = sub_1AE925890();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  v8 = objc_allocWithZone((Class)GDVUProgressStatus);
  v9 = sub_1AE8D84A4((uint64_t)v6);
  v10 = a2();

  return v10 & 1;
}

Swift::Void __swiftcall GDVUGallery.updateInferredDeviceOwner()()
{
  sub_1AE9259A4();
  sub_1AE4F6664();
}

uint64_t GDVUGallery.keyObservations(for:limit:offset:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  float *v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t inited;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = sub_1AE9258B4();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    if (qword_1EED99920 != -1)
LABEL_16:
      swift_once();
    v3 = 0;
    v4 = MEMORY[0x1E0DEE9D8];
    v5 = (float *)(v1 + 40);
    do
    {
      v6 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_16;
      }
      v7 = *((_QWORD *)v5 - 1);
      v8 = *v5;
      v9 = sub_1AE925B6C();
      sub_1AE4FB608(v9, (uint64_t)qword_1EEDA5D50);
      v10 = sub_1AE925B54();
      v11 = sub_1AE9265E0();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = swift_slowAlloc();
        *(_DWORD *)v12 = 134218496;
        *(_QWORD *)(v12 + 4) = a1;
        *(_WORD *)(v12 + 12) = 2048;
        *(_QWORD *)(v12 + 14) = v7;
        *(_WORD *)(v12 + 22) = 2048;
        *(double *)(v12 + 24) = v8;
        _os_log_impl(&dword_1AE4F2000, v10, v11, "keyObservation for entity %ld : %ld (%f", (uint8_t *)v12, 0x20u);
        sub_1AE4F9064();
      }

      sub_1AE812DC8();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1AE934250;
      *(_QWORD *)(inited + 32) = v7;
      *(float *)(inited + 40) = v8;
      v1 = sub_1AE925C98();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE8DC06C();
        v4 = v15;
      }
      v14 = *(_QWORD *)(v4 + 16);
      if (v14 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_1AE8DC06C();
        v4 = v16;
      }
      v5 += 4;
      *(_QWORD *)(v4 + 16) = v14 + 1;
      *(_QWORD *)(v4 + 8 * v14 + 32) = v1;
      ++v3;
    }
    while (v6 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v4;
}

Swift::Void __swiftcall GDVUGallery.reportMetrics()()
{
  sub_1AE92583C();
  sub_1AE4F6664();
}

void GDVUGallery.init()()
{
  sub_1AE4FD258();
  __break(1u);
}

id sub_1AE8D84A4(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v3 = sub_1AE925890();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_1AE501548(&qword_1EED94CE8);
  v7 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v7 + *(_QWORD *)(*(_QWORD *)v7 + 88), v6, v3);
  *(_QWORD *)&v1[OBJC_IVAR___GDVUProgressStatus_inner] = v7;
  v10.receiver = v1;
  v10.super_class = (Class)GDVUProgressStatus;
  v8 = objc_msgSendSuper2(&v10, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return v8;
}

float GDVUProgressStatus.fractionCompleted.getter()
{
  uint64_t v0;
  uint64_t v1;
  float v2;
  float v3;

  v0 = sub_1AE925890();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1AE500100();
  sub_1AE4F9094();
  sub_1AE8DBFC0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  swift_retain();
  sub_1AE925884();
  v3 = v2;
  sub_1AE8DBF7C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_release();
  return v3;
}

void GDVUProgressStatus.init()()
{
  sub_1AE4FD258();
  __break(1u);
}

void __swiftcall GDVUSocialGroup.init(numberOfMomentNodes:tags:)(GDVUSocialGroup *__return_ptr retstr, NSNumber_optional numberOfMomentNodes, Swift::OpaquePointer tags)
{
  Class isa;
  id v4;
  void *v5;

  isa = numberOfMomentNodes.value.super.super.isa;
  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1AE8DBF6C();
  v5 = (void *)sub_1AE8DC01C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_initWithNumberOfMomentNodes_tags_, isa, v5);

  sub_1AE4F6624();
}

void GDVUSocialGroup.init(numberOfMomentNodes:tags:)(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  objc_super v8;

  v4 = sub_1AE8DBFA8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  sub_1AE4F683C();
  v6 = v1;
  if (a1)
    objc_msgSend(a1, sel_integerValue);
  sub_1AE925800();
  sub_1AE501548(&qword_1EEDA5DA0);
  v7 = sub_1AE4FCE84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v7 + *(_QWORD *)(*(_QWORD *)v7 + 88), v2, v4);
  *(_QWORD *)&v6[OBJC_IVAR___GDVUSocialGroup_inner] = v7;

  v8.receiver = v6;
  v8.super_class = (Class)GDVUSocialGroup;
  objc_msgSendSuper2(&v8, sel_init);

  sub_1AE4F66A8();
}

void sub_1AE8D88B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  v2 = sub_1AE8DBFA8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  sub_1AE4F683C();
  v4 = *(_QWORD *)(v0 + OBJC_IVAR___GDVUSocialGroup_inner)
     + *(_QWORD *)(**(_QWORD **)(v0 + OBJC_IVAR___GDVUSocialGroup_inner) + 88);
  sub_1AE4F9094();
  sub_1AE4FB908(v1, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_1AE9257F4();
  v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if ((v6 & 1) == 0)
    sub_1AE68FDB0(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_);
  sub_1AE4FCDD0();
}

id sub_1AE8D8978(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;

  v4 = a1;
  a3();

  sub_1AE8DBF6C();
  sub_1AE8DC01C();
  sub_1AE4FC764();
  return sub_1AE8DBF88(v4);
}

void sub_1AE8D89B4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1AE8DBFA8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  sub_1AE500100();
  sub_1AE4F9094();
  sub_1AE8DBFC0(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  sub_1AE92580C();
  sub_1AE8DBF7C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_1AE4F6624();
}

void GDVUSocialGroup.init()()
{
  sub_1AE4FD258();
  __break(1u);
}

id sub_1AE8D8A7C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  objc_super v10;

  v1 = type metadata accessor for VisualUnderstandingService.Context(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1AE924918();
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v3, 1, 1, v4);
  v5 = (uint64_t)&v3[*(int *)(v1 + 20)];
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v5, 1, 1, v4);
  v6 = *(int *)(v1 + 24);
  v3[v6] = 3;
  v7 = v0;
  sub_1AE524534((uint64_t)v3, &qword_1ED30ED10);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0((uint64_t)v3, 1, 1, v4);
  sub_1AE524534(v5, &qword_1ED30ED10);
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v5, 1, 1, v4);
  v3[v6] = 3;
  sub_1AE501548((uint64_t *)&unk_1EED94CF0);
  v8 = swift_allocObject();
  sub_1AE8DBD3C((uint64_t)v3, v8 + *(_QWORD *)(*(_QWORD *)v8 + 88), type metadata accessor for VisualUnderstandingService.Context);
  *(_QWORD *)&v7[OBJC_IVAR___GDVUContext_inner] = v8;

  v10.receiver = v7;
  v10.super_class = (Class)GDVUContext;
  return objc_msgSendSuper2(&v10, sel_init);
}

void GDVUContext.moment.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0 + OBJC_IVAR___GDVUContext_inner;
  sub_1AE4F9094();
  v2 = *(_QWORD *)v1 + *(_QWORD *)(**(_QWORD **)v1 + 88);
  sub_1AE4F9094();
  sub_1AE505F30(v2, v3, &qword_1ED30ED10);
  sub_1AE50533C();
}

void GDVUContext.moment.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  sub_1AE507D3C();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F90F4();
  sub_1AE812DC8();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v4);
  sub_1AE507918();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v11[-v6];
  sub_1AE8DBF74(v0, (uint64_t)&v11[-v6]);
  sub_1AE4FB9BC();
  sub_1AE8DBF74((uint64_t)v7, v1);
  sub_1AE8DBFB0();
  v10 = v8 + v9;
  sub_1AE4F9094();
  sub_1AE8DBA44(v10, v2, type metadata accessor for VisualUnderstandingService.Context);
  sub_1AE509318(v2);
  sub_1AE8D46F0(v1, v2);
  sub_1AE8DB8D8(v2);
  sub_1AE509318((uint64_t)v7);
  swift_endAccess();
  sub_1AE509318(v0);
}

void GDVUContext.asset.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR___GDVUContext_inner;
  sub_1AE4F9094();
  v2 = *(_QWORD *)v1 + *(_QWORD *)(**(_QWORD **)v1 + 88);
  sub_1AE4F9094();
  v3 = type metadata accessor for VisualUnderstandingService.Context(0);
  sub_1AE505F30(v2 + *(int *)(v3 + 20), v4, &qword_1ED30ED10);
  sub_1AE50533C();
}

void sub_1AE8D8E28(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  sub_1AE501548(&qword_1ED30ED10);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE500100();
  if (a3)
  {
    sub_1AE924900();
    v9 = sub_1AE8DBF6C();
    v10 = 0;
  }
  else
  {
    v9 = sub_1AE8DBF6C();
    v10 = 1;
  }
  _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(v4, v10, 1, v9);
  v11 = a1;
  a4(v4);

}

void GDVUContext.asset.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v2 = sub_1AE507D3C();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F666C();
  v6 = v5 - v4;
  sub_1AE812DC8();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v7);
  sub_1AE4F94A4();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v15[-v9];
  sub_1AE8DBF74(v0, (uint64_t)&v15[-v9]);
  sub_1AE4FB9BC();
  sub_1AE8DBF74((uint64_t)v10, v1);
  sub_1AE8DBFB0();
  v13 = v11 + v12;
  sub_1AE4F9094();
  sub_1AE8DBA44(v13, v6, type metadata accessor for VisualUnderstandingService.Context);
  v14 = v6 + *(int *)(v2 + 20);
  sub_1AE509318(v14);
  sub_1AE8D46F0(v1, v14);
  sub_1AE8DB8D8(v6);
  sub_1AE509318((uint64_t)v10);
  swift_endAccess();
  sub_1AE509318(v0);
  sub_1AE4F8180();
}

uint64_t sub_1AE8D8FE8@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    sub_1AE924900();

    v6 = 0;
  }
  else
  {
    v6 = 1;
  }
  v7 = sub_1AE8DBF6C();
  return _s20IntelligencePlatform17UnstructuredImageV5AssetOwst_0(a3, v6, 1, v7);
}

void sub_1AE8D904C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;

  sub_1AE501548(&qword_1ED30ED10);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v8);
  sub_1AE4F666C();
  v11 = v10 - v9;
  sub_1AE8CEC90(a1, v10 - v9, &qword_1ED30ED10);
  v12 = *a2;
  v13 = sub_1AE8DBF6C();
  v14 = 0;
  if (_s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0(v11, 1, v13) != 1)
  {
    v14 = (void *)sub_1AE9248F4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  }
  objc_msgSend(v12, *a5, v14);

  sub_1AE4FCDD0();
}

uint64_t GDVUContext.source.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR___GDVUContext_inner;
  sub_1AE4F9094();
  v2 = *(_QWORD *)v1 + *(_QWORD *)(**(_QWORD **)v1 + 88);
  sub_1AE4F9094();
  return qword_1AE96F6C8[*(char *)(v2 + *(int *)(type metadata accessor for VisualUnderstandingService.Context(0) + 24))];
}

void GDVUContext.source.setter()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_1AE507D3C();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v3);
  sub_1AE4F90C8();
  if (v0 >= 4)
    v4 = 2;
  else
    v4 = 0x2010003u >> (8 * v0);
  sub_1AE4FB9BC();
  sub_1AE8DBFB0();
  v7 = v5 + v6;
  sub_1AE4F9094();
  sub_1AE8DBA44(v7, v1, type metadata accessor for VisualUnderstandingService.Context);
  *(_BYTE *)(v1 + *(int *)(v2 + 24)) = v4;
  sub_1AE8DB8D8(v1);
  swift_endAccess();
  sub_1AE4FCDD0();
}

void GDVUEntityClass.id.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F6664();
}

id sub_1AE8D92EC(void *a1, uint64_t a2, void (*a3)(void))
{
  a3();
  sub_1AE925E18();
  sub_1AE4FC764();
  return sub_1AE8DBF88(a1);
}

void GDVUEntityClass.name.getter()
{
  sub_1AE4F66CC();
  sub_1AE4F6664();
}

uint64_t GDVUEntityClass.intValue.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___GDVUEntityClass_inner + 32);
}

id sub_1AE8D9380(uint64_t a1)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char *v6;
  objc_super v8;

  v2 = (char *)objc_allocWithZone((Class)GDVUEntityClass);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 32);
  v6 = &v2[OBJC_IVAR___GDVUEntityClass_inner];
  *(_OWORD *)v6 = *(_OWORD *)a1;
  *((_QWORD *)v6 + 2) = v3;
  *((_QWORD *)v6 + 3) = v4;
  v6[32] = v5;
  v8.receiver = v2;
  v8.super_class = (Class)GDVUEntityClass;
  return objc_msgSendSuper2(&v8, sel_init);
}

void GDVUEntityClass.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;

  sub_1AE8CEC90(a1, (uint64_t)&v19, (uint64_t *)&unk_1ED31C440);
  if (v20)
  {
    v2 = sub_1AE53F2F4(&v19, &v21);
    v4 = sub_1AE8DBFFC((uint64_t)v2, v3);
    type metadata accessor for GDVUEntityClass(v4);
    v5 = swift_dynamicCast();
    if ((v5 & 1) != 0)
    {
      if (*(_QWORD *)(v1 + OBJC_IVAR___GDVUEntityClass_inner + 16) != *(_QWORD *)&v18[OBJC_IVAR___GDVUEntityClass_inner
                                                                                     + 16]
        || *(_QWORD *)(v1 + OBJC_IVAR___GDVUEntityClass_inner + 24) != *(_QWORD *)&v18[OBJC_IVAR___GDVUEntityClass_inner
                                                                                     + 24])
      {
        sub_1AE926D60();
      }

      sub_1AE8DBFA0(v12, v13, v14, v15, v16, v17);
    }
    else
    {
      sub_1AE8DBFA0(v5, v6, v7, v8, v9, v10);
    }
  }
  else
  {
    sub_1AE524534((uint64_t)&v19, (uint64_t *)&unk_1ED31C440);
  }
  sub_1AE4F685C();
}

id GDVUEntityClass.hash.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_hash);
}

id static GDVUEntityClass.person()()
{
  return sub_1AE8D9538((void (*)(__int128 *__return_ptr))static EntityClass.person.getter);
}

id static GDVUEntityClass.animal()()
{
  return sub_1AE8D9538((void (*)(__int128 *__return_ptr))static EntityClass.animal.getter);
}

id sub_1AE8D9538(void (*a1)(__int128 *__return_ptr))
{
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  type metadata accessor for GDVUEntityClass((uint64_t)a1);
  a1(&v7);
  v3 = v7;
  v4 = v8;
  v5 = v9;
  v6 = v10;
  return sub_1AE8D9380((uint64_t)&v3);
}

id static GDVUEntityClass.entity()()
{
  return sub_1AE8D9538((void (*)(__int128 *__return_ptr))static EntityClass.entity.getter);
}

void GDVUEntityClass.init()()
{
  sub_1AE4FD258();
  __break(1u);
}

void GDVUGalleryTransaction.add(with:context:priority:at:output:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_1AE4F67EC();
  v34 = v2;
  v35 = v3;
  v31 = v5;
  v32 = v4;
  v7 = v6;
  v33 = v8;
  v9 = sub_1AE925740();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4FFEB4();
  v13 = v11 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - v15;
  sub_1AE8DC008();
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v17);
  sub_1AE4F6744();
  sub_1AE501548((uint64_t *)&unk_1EED93E48);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v18);
  sub_1AE4F666C();
  v21 = v20 - v19;
  if (v7)
  {
    v22 = v7 + OBJC_IVAR___GDVUContext_inner;
    sub_1AE4F9094();
    v23 = *(_QWORD *)v22 + *(_QWORD *)(**(_QWORD **)v22 + 88);
    sub_1AE4F9094();
    sub_1AE8DBA44(v23, v1, type metadata accessor for VisualUnderstandingService.Context);
    VUGallery.Context.init(_:)(v1);
    v25 = sub_1AE925A40();
    v26 = 0;
  }
  else
  {
    v25 = sub_1AE925A40();
    v26 = 1;
  }
  sub_1AE812D94(v21, v26, v24, v25);
  v27 = (unsigned int *)MEMORY[0x1E0DC7040];
  if (v32)
    v27 = (unsigned int *)MEMORY[0x1E0DC7048];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v13, *v27, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v16, v13, v9);
  v28 = sub_1AE925710();
  if (v0)
  {
    sub_1AE5064D8();
    sub_1AE524534(v21, (uint64_t *)&unk_1EED93E48);
  }
  else
  {
    v29 = v28;
    sub_1AE5064D8();
    sub_1AE524534(v21, (uint64_t *)&unk_1EED93E48);
    *v31 = v29;
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> GDVUGalleryTransaction.remove(_:)(Swift::Int a1)
{
  sub_1AE8D9D6C(a1, MEMORY[0x1E0DC7028], "GDVUGalleryTransaction.remove: Observation ID should never be zero.");
}

uint64_t sub_1AE8D9934(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  id v7;

  v7 = a1;
  a5(a3);

  return 1;
}

void GDVUGalleryTransaction.remove(withAsset:)()
{
  sub_1AE925728();
  sub_1AE4FD974();
}

void GDVUGalleryTransaction.tag(_:with:type:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;

  sub_1AE4F7B2C();
  v8 = sub_1AE925734();
  sub_1AE4FB8D0();
  MEMORY[0x1E0C80A78](v9);
  sub_1AE4F90C8();
  if (v5)
  {
    if (a3 > 2)
      v10 = (unsigned int *)MEMORY[0x1E0DC7030];
    else
      v10 = (unsigned int *)qword_1E5DD9230[a3];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v4, *v10, v8);
    sub_1AE92571C();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v8);
  }
  else
  {
    if (qword_1EED99920 != -1)
      swift_once();
    v11 = sub_1AE4F6854();
    sub_1AE4FB608(v11, (uint64_t)qword_1EEDA5D50);
    sub_1AE7FA5EC();
    v12 = sub_1AE8DC034();
    if (os_log_type_enabled(v3, v12))
    {
      v13 = (uint8_t *)sub_1AE4F69B0();
      *(_WORD *)v13 = 0;
      sub_1AE5068FC(&dword_1AE4F2000, v3, v12, "GDVUGalleryTransaction.tag: Observation ID should never be zero.", v13);
      sub_1AE4F9064();
    }

  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> GDVUGalleryTransaction.untag(_:)(Swift::Int a1)
{
  sub_1AE8D9D6C(a1, MEMORY[0x1E0DC7018], "MADGDGalleryTransaction.untag: Observation ID should never be zero.");
}

void sub_1AE8D9D6C(uint64_t a1, void (*a2)(void), const char *a3)
{
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;

  if (a1)
  {
    a2();
  }
  else
  {
    if (qword_1EED99920 != -1)
      swift_once();
    v6 = sub_1AE4F6854();
    sub_1AE4FB608(v6, (uint64_t)qword_1EEDA5D50);
    sub_1AE7FA5EC();
    v7 = sub_1AE8DC034();
    if (sub_1AE4FB89C(v7))
    {
      v8 = (uint8_t *)sub_1AE4F69B0();
      *(_WORD *)v8 = 0;
      sub_1AE5068FC(&dword_1AE4F2000, v3, v4, a3, v8);
      sub_1AE4F9064();
    }

  }
  sub_1AE4FB76C();
}

void GDVUGalleryTransaction.init()()
{
  sub_1AE4FD258();
  __break(1u);
}

uint64_t sub_1AE8D9E78()
{
  uint64_t v0;

  v0 = sub_1AE925B6C();
  sub_1AE595770(v0, qword_1EEDA5D50);
  sub_1AE4FB608(v0, (uint64_t)qword_1EEDA5D50);
  return sub_1AE925B60();
}

void sub_1AE8D9F00(void *a1)
{
  void *v1;
  uint64_t v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v7;

  type metadata accessor for VisualUnderstandingStreamingGallery();
  swift_allocObject();
  v4 = v1;
  VisualUnderstandingStreamingGallery.init()();
  if (v2)
  {

    type metadata accessor for GDVUStreamingGallery(v6);
    sub_1AE8DC010();
  }
  else
  {
    *(_QWORD *)&v4[OBJC_IVAR___GDVUStreamingGallery_inner] = v5;

    v7.receiver = v4;
    v7.super_class = (Class)GDVUStreamingGallery;
    objc_msgSendSuper2(&v7, sel_init);

  }
  sub_1AE4FD564();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> GDVUStreamingGallery.reset()()
{
  sub_1AE9256D4();
  sub_1AE4FD974();
}

uint64_t sub_1AE8DA060(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  id v5;

  v5 = a1;
  a4();

  return 1;
}

void *GDVUStreamingGallery.update(withMaxKeyFacesPerCluster:)(uint64_t a1)
{
  void *v1;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = (void *)sub_1AE9261C0();
  v10[0] = 0;
  v4 = objc_msgSend(v1, sel_updateWithMaxKeyFacesPerCluster_sortBy_error_, a1, v3, v10);

  v6 = v10[0];
  if (v4)
  {
    type metadata accessor for GDVUClusterResult(v5);
    v3 = (void *)sub_1AE9261CC();
    v7 = v6;

  }
  else
  {
    v8 = v10[0];
    sub_1AE9246B4();

    swift_willThrow();
  }
  return v3;
}

id GDVUStreamingGallery.update(withMaxKeyFacesPerCluster:sortBy:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  id result;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + OBJC_IVAR___GDVUStreamingGallery_inner);
  sub_1AE8CDDA4();
  if (v1)
    return (id)v2;
  if (v3)
    v4 = v3;
  else
    v4 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
  {
    sub_1AE4F81B8();
    return (id)MEMORY[0x1E0DEE9D8];
  }
  v12 = MEMORY[0x1E0DEE9D8];
  sub_1AE9269DC();
  v6 = (char *)(v4 + 48);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 2);
    v8 = *v6;
    result = objc_msgSend(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_, *((_QWORD *)v6 - 1));
    if (!result)
      break;
    v10 = (uint64_t)result;
    v6 += 24;
    v11 = objc_allocWithZone((Class)GDVUClusterResult);
    sub_1AE8DA74C(v7, v10, v8);
    sub_1AE9269B8();
    sub_1AE9269E8();
    sub_1AE505390();
    sub_1AE9269F4();
    sub_1AE9269C4();
    if (!--v5)
    {
      v2 = v12;
      swift_bridgeObjectRelease();
      return (id)v2;
    }
  }
  __break(1u);
  return result;
}

uint64_t GDVUStreamingGallery.add(with:observationIdentifiers:trackIdentifiers:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1AE501548(&qword_1EEDA5CD0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4F6744();
  if (a4)
  {
    v7 = a4 + OBJC_IVAR___GDVUContext_inner;
    sub_1AE4F9094();
    v8 = *(_QWORD *)v7 + *(_QWORD *)(**(_QWORD **)v7 + 88);
    sub_1AE4F9094();
    sub_1AE8DBA44(v8, v4, type metadata accessor for VisualUnderstandingService.Context);
    v10 = sub_1AE8DC008();
    v11 = 0;
  }
  else
  {
    v10 = sub_1AE8DC008();
    v11 = 1;
  }
  sub_1AE812D94(v4, v11, v9, v10);
  sub_1AE8CD88C();
  v13 = v12;
  sub_1AE524534(v4, &qword_1EEDA5CD0);
  return v13;
}

void GDVUStreamingGallery.init()()
{
  sub_1AE4FD258();
  __break(1u);
}

id sub_1AE8DA74C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  objc_super v5;

  *(_QWORD *)(v3 + OBJC_IVAR___GDVUClusterResult_observationIdentifier) = a1;
  *(_QWORD *)(v3 + OBJC_IVAR___GDVUClusterResult_entityIdentifier) = a2;
  *(_BYTE *)(v3 + OBJC_IVAR___GDVUClusterResult_isKeyFace) = a3;
  v5.super_class = (Class)GDVUClusterResult;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t GDVUClusterResult.observationIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___GDVUClusterResult_observationIdentifier);
}

id GDVUClusterResult.entityIdentifier.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___GDVUClusterResult_entityIdentifier);
}

uint64_t GDVUClusterResult.isKeyFace.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___GDVUClusterResult_isKeyFace);
}

void GDVUClusterResult.init()()
{
  sub_1AE4FD258();
  __break(1u);
}

id sub_1AE8DA87C(_OWORD *a1)
{
  char *v2;
  objc_super v4;

  v2 = (char *)objc_allocWithZone((Class)GDVUChangeBookmark);
  *(_OWORD *)&v2[OBJC_IVAR___GDVUChangeBookmark_inner] = *a1;
  v4.receiver = v2;
  v4.super_class = (Class)GDVUChangeBookmark;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t GDVUChangeBookmark.encodeToData()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1AE924408();
  sub_1AE4FCE84();
  sub_1AE9243FC();
  v0 = sub_1AE595D8C();
  sub_1AE54C814(v0, v1);
  sub_1AE8DBA78();
  v2 = sub_1AE9243F0();
  v3 = sub_1AE595D8C();
  sub_1AE50BDB4(v3, v4);
  swift_release();
  return v2;
}

void static GDVUChangeBookmark.decode(from:)()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  sub_1AE4F7B2C();
  sub_1AE9243C0();
  sub_1AE4FCE84();
  sub_1AE9243B4();
  sub_1AE8DBAB4();
  v1 = sub_1AE9243A8();
  if (v0)
  {
    sub_1AE4FB730();
  }
  else
  {
    type metadata accessor for GDVUChangeBookmark(v1);
    sub_1AE8DA87C(&v2);
    sub_1AE4FB730();
  }
  sub_1AE4FD564();
}

void GDVUChangeBookmark.isEqual(_:)(uint64_t a1)
{
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;

  swift_getObjectType();
  sub_1AE8CEC90(a1, (uint64_t)&v11, (uint64_t *)&unk_1ED31C440);
  if (v12)
  {
    v2 = sub_1AE53F2F4(&v11, &v13);
    sub_1AE8DBFFC((uint64_t)v2, v3);
    v4 = swift_dynamicCast();
    if ((v4 & 1) != 0)
    {
      sub_1AE524254(0, (unint64_t *)&qword_1ED31C458);
      sub_1AE9266E8();

    }
    sub_1AE8DBFA0(v4, v5, v6, v7, v8, v9);
  }
  else
  {
    sub_1AE524534((uint64_t)&v11, (uint64_t *)&unk_1ED31C440);
  }
  sub_1AE4F685C();
}

uint64_t sub_1AE8DAC84(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_OWORD *))
{
  id v6;
  id v7;
  char v8;
  _OWORD v10[2];

  if (a3)
  {
    v6 = a1;
    swift_unknownObjectRetain();
    sub_1AE9267E4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    v7 = a1;
  }
  v8 = a4(v10);

  sub_1AE524534((uint64_t)v10, (uint64_t *)&unk_1ED31C440);
  return v8 & 1;
}

uint64_t GDVUChangeBookmark.hash.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_1AE926EC8();
  v0 = sub_1AE8D220C();
  sub_1AE54C814(v0, v1);
  sub_1AE924840();
  v2 = sub_1AE926F10();
  v3 = sub_1AE8D220C();
  sub_1AE50BDB4(v3, v4);
  return v2;
}

void GDVUChangeBookmark.init()()
{
  sub_1AE4FD258();
  __break(1u);
}

id GDVUUpdate.init()()
{
  objc_super v1;

  v1.super_class = (Class)GDVUUpdate;
  return objc_msgSendSuper2(&v1, sel_init);
}

id sub_1AE8DAE50(char *a1)
{
  char *v2;
  char *v3;
  objc_super v5;

  v2 = (char *)objc_allocWithZone((Class)GDVUObservationUpdate);
  v3 = &v2[OBJC_IVAR___GDVUObservationUpdate_inner];
  *v3 = *a1;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a1 + 8);
  v5.receiver = v2;
  v5.super_class = (Class)GDVUObservationUpdate;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t GDVUObservationUpdate.updateType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___GDVUObservationUpdate_inner);
}

void GDVUObservationUpdate.observationIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (!*(_QWORD *)(v0 + OBJC_IVAR___GDVUObservationUpdate_inner + 8))
  {
    if (qword_1EED99920 != -1)
      swift_once();
    v1 = sub_1AE925B6C();
    sub_1AE4FB608(v1, (uint64_t)qword_1EEDA5D50);
    v2 = sub_1AE925B54();
    v3 = sub_1AE9265F8();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1AE4F2000, v2, v3, "GDVUObservationUpdate.observationIdentifier: Observation ID should never be zero. This is an error in VU.", v4, 2u);
      sub_1AE4F9064();
    }

  }
  sub_1AE4F6624();
}

void GDVUObservationUpdate.entityIdentifier.getter()
{
  if (sub_1AE68FDB0(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_))
    sub_1AE4F6664();
  else
    __break(1u);
}

void GDVUObservationUpdate.init()()
{
  sub_1AE4FD258();
  __break(1u);
}

void GDVUEntityUpdate.updateType.getter()
{
  sub_1AE4F9094();
  sub_1AE506B30();
}

void GDVUEntityUpdate.entityIdentifier.getter()
{
  sub_1AE4F9094();
  if (sub_1AE68FDB0(objc_allocWithZone((Class)GDEntityIdentifier), sel_initWithValue_))
    sub_1AE506B30();
  else
    __break(1u);
}

void GDVUEntityUpdate.tag.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___GDVUEntityUpdate_inner)
     + *(_QWORD *)(**(_QWORD **)(v0 + OBJC_IVAR___GDVUEntityUpdate_inner) + 88);
  sub_1AE4F9094();
  v2 = type metadata accessor for VisualUnderstandingService.EntityUpdate(0);
  sub_1AE505F30(v1 + *(int *)(v2 + 24), v3, &qword_1ED30ED10);
  sub_1AE506B30();
}

void GDVUEntityUpdate.init()()
{
  sub_1AE4FD258();
  __break(1u);
}

id sub_1AE8DB228(uint64_t *a1, uint64_t a2, float a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  id result;
  uint64_t v14;
  id v15;
  objc_super v16;

  v7 = sub_1AE501548(&qword_1ED30ED10);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = objc_allocWithZone((Class)GDEntityIdentifier);
  v12 = v3;
  result = objc_msgSend(v11, sel_initWithValue_, v10);
  if (result)
  {
    *(_QWORD *)&v12[OBJC_IVAR___GDVURecognitionResult_entityIdentifier] = result;
    sub_1AE8CEC90(a2, (uint64_t)v9, &qword_1ED30ED10);
    sub_1AE501548(&qword_1EED94AF0);
    v14 = swift_allocObject();
    sub_1AE8D46F0((uint64_t)v9, v14 + *(_QWORD *)(*(_QWORD *)v14 + 88));
    *(_QWORD *)&v12[OBJC_IVAR___GDVURecognitionResult__tag] = v14;
    *(float *)&v12[OBJC_IVAR___GDVURecognitionResult_confidence] = a3;

    v16.receiver = v12;
    v16.super_class = (Class)GDVURecognitionResult;
    v15 = objc_msgSendSuper2(&v16, sel_init);
    sub_1AE524534(a2, &qword_1ED30ED10);
    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id GDVURecognitionResult.entityIdentifier.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR___GDVURecognitionResult_entityIdentifier);
  sub_1AE4F9094();
  return *v1;
}

void GDVURecognitionResult.entityIdentifier.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___GDVURecognitionResult_entityIdentifier);
  sub_1AE4FB9BC();
  v4 = *v3;
  *v3 = a1;

  sub_1AE506B30();
}

id sub_1AE8DB464@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_entityIdentifier);
  *a2 = result;
  return result;
}

id sub_1AE8DB4A8(void *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void (*v9)(uint64_t);

  sub_1AE501548(&qword_1ED30ED10);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4FB7E8();
  a3();
  sub_1AE8DBF6C();
  sub_1AE508578(v3);
  if (!v7)
  {
    a1 = (void *)sub_1AE9248F4();
    v8 = sub_1AE8D220C();
    v9(v8);
  }
  return a1;
}

void GDVURecognitionResult.tag.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___GDVURecognitionResult__tag)
     + *(_QWORD *)(**(_QWORD **)(v0 + OBJC_IVAR___GDVURecognitionResult__tag) + 88);
  sub_1AE4F9094();
  sub_1AE505F30(v1, v2, &qword_1ED30ED10);
  sub_1AE506B30();
}

float GDVURecognitionResult.confidence.getter()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR___GDVURecognitionResult_confidence);
}

void GDVURecognitionResult.init()()
{
  sub_1AE4FD258();
  __break(1u);
}

void sub_1AE8DB61C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, _QWORD *a4, objc_class **a5)
{
  char *v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  objc_class *v17;
  objc_super v18;

  v11 = sub_1AE4F7B2C();
  v13 = v12(v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v18 - v14;
  sub_1AE8DBA44(v6, (uint64_t)&v18 - v14, a2);
  sub_1AE501548(a3);
  v16 = sub_1AE4FCE84();
  sub_1AE8DBD3C((uint64_t)v15, v16 + *(_QWORD *)(*(_QWORD *)v16 + 88), a2);
  *(_QWORD *)&v5[*a4] = v16;
  v17 = *a5;
  v18.receiver = v5;
  v18.super_class = v17;
  objc_msgSendSuper2(&v18, sel_init);
  sub_1AE555C64(v6, a2);
  sub_1AE4F66A8();
}

void static GDVUEntityRecognitionClient.photos()()
{
  sub_1AE8DB7CC(&qword_1ED318BE0, (uint64_t)qword_1ED319560);
}

void static GDVUEntityRecognitionClient.syndication()()
{
  sub_1AE8DB7CC(&qword_1EED93E68, (uint64_t)qword_1EED94B10);
}

void static GDVUEntityRecognitionClient.homekit()()
{
  sub_1AE8DB7CC(&qword_1EED98F50, (uint64_t)qword_1EED93E70);
}

void static GDVUEntityRecognitionClient.contacts()()
{
  sub_1AE8DB7CC(qword_1EED93E88, (uint64_t)qword_1EED98F58);
}

void static GDVUEntityRecognitionClient.reserved()()
{
  sub_1AE8DB7CC(&qword_1EED99910, (uint64_t)qword_1EEDA5C80);
}

void sub_1AE8DB7CC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t *v11;
  _QWORD *v12;

  v5 = type metadata accessor for EntityRecognitionClient(0);
  sub_1AE4F66F0();
  MEMORY[0x1E0C80A78](v6);
  sub_1AE4FB7E8();
  if (*a1 != -1)
    swift_once();
  v7 = sub_1AE4FB608(v5, a2);
  sub_1AE8DBA44(v7, v2, type metadata accessor for EntityRecognitionClient);
  v8 = objc_allocWithZone((Class)GDVUEntityRecognitionClient);
  v9 = sub_1AE8D220C();
  sub_1AE8DB61C(v9, v10, v11, v12, (objc_class **)off_1E5DA24E8);
  sub_1AE4FCDD0();
}

void GDVUEntityRecognitionClient.init()()
{
  sub_1AE4FD258();
  __break(1u);
}

uint64_t sub_1AE8DB8D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  if (swift_isUniquelyReferenced_nonNull_native())
  {
    v3 = *(_QWORD *)v1 + *(_QWORD *)(**(_QWORD **)v1 + 88);
    swift_beginAccess();
    sub_1AE8DBD70(a1, v3);
    return swift_endAccess();
  }
  else
  {
    sub_1AE501548((uint64_t *)&unk_1EED94CF0);
    v5 = swift_allocObject();
    sub_1AE8DBD3C(a1, v5 + *(_QWORD *)(*(_QWORD *)v5 + 88), type metadata accessor for VisualUnderstandingService.Context);
    result = swift_release();
    *(_QWORD *)v1 = v5;
  }
  return result;
}

void type metadata accessor for GDVUVisualUnderstandingService(uint64_t a1)
{
  sub_1AE524254(a1, &qword_1EEDA5E08);
}

void type metadata accessor for GDVURecognitionResult(uint64_t a1)
{
  sub_1AE524254(a1, &qword_1EED94AF8);
}

BOOL sub_1AE8DB9B8(uint64_t a1)
{
  return (a1 & 0xC000000000000001) == 0;
}

void type metadata accessor for GDVUChangeBookmark(uint64_t a1)
{
  sub_1AE524254(a1, (unint64_t *)&unk_1EED94B48);
}

void type metadata accessor for GDVUEntityClass(uint64_t a1)
{
  sub_1AE524254(a1, &qword_1EED94B40);
}

void type metadata accessor for GDVUObservationUpdate(uint64_t a1)
{
  sub_1AE524254(a1, &qword_1EED98FB0);
}

void sub_1AE8DBA00(uint64_t a1)
{
  uint64_t v1;

  sub_1AE8D780C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1AE8DBA18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AE8DBA3C(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE8D7F7C(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_1AE8DBA44(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_1AE53F8D8(a1, a2, a3);
  sub_1AE5089F4(v3);
  sub_1AE4F6664();
}

void type metadata accessor for GDVUClusterResult(uint64_t a1)
{
  sub_1AE524254(a1, &qword_1EEDA5E30);
}

unint64_t sub_1AE8DBA78()
{
  unint64_t result;

  result = qword_1EED98F98;
  if (!qword_1EED98F98)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for VisualUnderstandingService.ChangeBookmark, &type metadata for VisualUnderstandingService.ChangeBookmark);
    atomic_store(result, (unint64_t *)&qword_1EED98F98);
  }
  return result;
}

unint64_t sub_1AE8DBAB4()
{
  unint64_t result;

  result = qword_1EED94D08;
  if (!qword_1EED94D08)
  {
    result = MEMORY[0x1AF454B70](&protocol conformance descriptor for VisualUnderstandingService.ChangeBookmark, &type metadata for VisualUnderstandingService.ChangeBookmark);
    atomic_store(result, (unint64_t *)&qword_1EED94D08);
  }
  return result;
}

char *sub_1AE8DBAF0()
{
  return sel_moment;
}

uint64_t sub_1AE8DBAFC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AE8D8FE8(a1, (SEL *)&selRef_moment, a2);
}

void sub_1AE8DBB18(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1AE8D904C(a1, a2, a3, a4, (SEL *)&selRef_setMoment_);
}

char *sub_1AE8DBB34()
{
  return sel_asset;
}

uint64_t sub_1AE8DBB40@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AE8D8FE8(a1, (SEL *)&selRef_asset, a2);
}

void sub_1AE8DBB5C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1AE8D904C(a1, a2, a3, a4, (SEL *)&selRef_setAsset_);
}

char *sub_1AE8DBB78()
{
  return sel_source;
}

void sub_1AE8DBB84(id *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = objc_msgSend(*a1, sel_source);
  sub_1AE4F6664();
}

id sub_1AE8DBBB0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSource_, *a1);
}

char *sub_1AE8DBBC4()
{
  return sel_entityIdentifier;
}

id sub_1AE8DBBD4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEntityIdentifier_, *a1);
}

void type metadata accessor for GDVUProgressStatus(uint64_t a1)
{
  sub_1AE524254(a1, &qword_1EEDA5E10);
}

void type metadata accessor for GDVUSocialGroup(uint64_t a1)
{
  sub_1AE524254(a1, &qword_1EEDA5E18);
}

void type metadata accessor for GDVUContext(uint64_t a1)
{
  sub_1AE524254(a1, &qword_1EEDA5E20);
}

void type metadata accessor for GDVUGalleryTransaction(uint64_t a1)
{
  sub_1AE524254(a1, qword_1EED94D30);
}

void type metadata accessor for GDVUStreamingGallery(uint64_t a1)
{
  sub_1AE524254(a1, &qword_1EEDA5E28);
}

void type metadata accessor for GDVUUpdate(uint64_t a1)
{
  sub_1AE524254(a1, &qword_1EEDA5E38);
}

void type metadata accessor for GDVUEntityUpdate(uint64_t a1)
{
  sub_1AE524254(a1, &qword_1EEDA5E40);
}

void type metadata accessor for GDVUEntityRecognitionClient(uint64_t a1)
{
  sub_1AE524254(a1, qword_1EEDA5E48);
}

uint64_t type metadata accessor for ObjCResilientBox.Box(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObjCResilientBox.Box);
}

uint64_t type metadata accessor for ObjCResilientBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AE501778(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObjCResilientBox);
}

uint64_t sub_1AE8DBCA0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1AE8DBCC4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

id sub_1AE8DBCE4(uint64_t a1)
{
  uint64_t v1;

  return sub_1AE8D7978(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1AE8DBCEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEDA5ED8;
  if (!qword_1EEDA5ED8)
  {
    sub_1AE524254(255, &qword_1EED94D28);
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EEDA5ED8);
  }
  return result;
}

void sub_1AE8DBD3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_1AE53F8D8(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  sub_1AE4F6664();
}

uint64_t sub_1AE8DBD70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VisualUnderstandingService.Context(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AE8DBDB4(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  void **i;
  void *v8;
  _QWORD *v9;
  id v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t result;
  _QWORD *v33;
  uint64_t v34;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v34 = a1;
  for (i = (void **)(a1 + 40); ; i += 2)
  {
    v8 = *i;
    v9 = (_QWORD *)*a3;
    v10 = *(i - 1);
    v11 = v8;
    sub_1AE5376FC();
    v20 = v19;
    v21 = v9[2];
    v22 = (v12 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      break;
    v24 = v12;
    if (v9[3] >= v23)
    {
      if ((a2 & 1) == 0)
      {
        sub_1AE501548(&qword_1EEDA5EE8);
        sub_1AE926A60();
      }
    }
    else
    {
      sub_1AE6380B8(v23, a2 & 1, v13, v14, v15, v16, v17, v18, v33, v34);
      sub_1AE5376FC();
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_18;
      v20 = v25;
    }
    v27 = (_QWORD *)*a3;
    if ((v24 & 1) != 0)
    {

      v28 = v27[7];
      *(_QWORD *)(v28 + 8 * v20) = v11;
    }
    else
    {
      v27[(v20 >> 6) + 8] |= 1 << v20;
      *(_QWORD *)(v27[6] + 8 * v20) = v10;
      *(_QWORD *)(v27[7] + 8 * v20) = v11;
      v29 = v27[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_17;
      v27[2] = v31;
    }
    a2 = 1;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  sub_1AE524254(0, &qword_1EED94D28);
  result = sub_1AE926DE4();
  __break(1u);
  return result;
}

uint64_t sub_1AE8DBF6C()
{
  return sub_1AE924918();
}

void sub_1AE8DBF74(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1AE8CEC90(a1, a2, v2);
}

uint64_t sub_1AE8DBF7C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

id sub_1AE8DBF88(id a1)
{
  return a1;
}

void sub_1AE8DBF90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_1AE8DBD3C(v1, v0, v2);
}

uint64_t sub_1AE8DBFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)va);
}

uint64_t sub_1AE8DBFA8()
{
  return sub_1AE925818();
}

uint64_t sub_1AE8DBFC0@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v3, v2, v1);
}

void sub_1AE8DBFD0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_1AE555C64(v0, v1);
}

uint64_t sub_1AE8DBFE0()
{
  return sub_1AE9269E8();
}

uint64_t sub_1AE8DBFF0()
{
  return sub_1AE9269F4();
}

uint64_t sub_1AE8DBFFC(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  return sub_1AE524160((uint64_t)va1, (uint64_t)va);
}

uint64_t sub_1AE8DC008()
{
  return type metadata accessor for VisualUnderstandingService.Context(0);
}

uint64_t sub_1AE8DC010()
{
  return swift_deallocPartialClassInstance();
}

uint64_t sub_1AE8DC01C()
{
  return sub_1AE9261C0();
}

void sub_1AE8DC028()
{
  void *v0;

}

uint64_t sub_1AE8DC034()
{
  return sub_1AE9265F8();
}

uint64_t sub_1AE8DC03C()
{
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1AE8DC048@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AE4F9858((_QWORD *)(*(_QWORD *)(v1 + a1) + 16), *(_QWORD *)(*(_QWORD *)(v1 + a1) + 40));
}

void sub_1AE8DC06C()
{
  sub_1AE51BED4();
}

uint64_t sub_1AE8DC078(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE519C48);
  v5 = *(_QWORD *)(*v2 + 16);
  result = sub_1AE8DD894(v5, (uint64_t (*)(BOOL))sub_1AE519C48);
  v7 = *v2;
  *(_QWORD *)(v7 + 16) = v5 + 1;
  v8 = v7 + 16 * v5;
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  *v2 = v7;
  return result;
}

void sub_1AE8DC0E4(char a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;

  sub_1AE8DDDB4();
  sub_1AE501340();
  sub_1AE8DDDA4();
  *(_BYTE *)(v4 + v2 + 32) = a1;
  *v1 = v4;
  sub_1AE4F6624();
}

void sub_1AE8DC120(uint64_t a1)
{
  void (**v1)();
  uint64_t v2;
  uint64_t v4;

  sub_1AE8DDDB4();
  sub_1AE501340();
  sub_1AE8DDDE4();
  v4 = sub_1AE9248DC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))((char *)sub_1AE51A600+ ((*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v4 - 8) + 72) * v2, a1, v4);
  *v1 = sub_1AE51A600;
  sub_1AE4F6624();
}

void sub_1AE8DC188(_OWORD *a1)
{
  sub_1AE8DC1A0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A5C8);
}

void sub_1AE8DC194(_OWORD *a1)
{
  sub_1AE8DC1A0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A590);
}

void sub_1AE8DC1A0(_OWORD *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;

  sub_1AE8DD528(a2);
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  sub_1AE8DD894(v5, (uint64_t (*)(BOOL))a2);
  sub_1AE8DDDA4();
  v7 = (_OWORD *)(v6 + (v5 << 6));
  v8 = a1[1];
  v7[2] = *a1;
  v7[3] = v8;
  v7[4] = a1[2];
  *(_OWORD *)((char *)v7 + 73) = *(_OWORD *)((char *)a1 + 41);
  *(_QWORD *)v2 = v6;
  sub_1AE4F6624();
}

void sub_1AE8DC200(_OWORD *a1)
{
  sub_1AE8DC1A0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A558);
}

void sub_1AE8DC20C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  sub_1AE8DDDB4();
  sub_1AE501340();
  sub_1AE8DDDA4();
  v5 = v4 + 40 * v2;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 48) = v6;
  *(_BYTE *)(v5 + 64) = *(_BYTE *)(a1 + 32);
  *v1 = v4;
  sub_1AE4F6624();
}

void sub_1AE8DC258(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  sub_1AE8DDDB4();
  sub_1AE501340();
  sub_1AE8DDDA4();
  v5 = v4 + 56 * v2;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v5 + 48) = v6;
  *(_OWORD *)(v5 + 64) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v5 + 80) = *(_QWORD *)(a1 + 48);
  *v1 = v4;
  sub_1AE4F6624();
}

void sub_1AE8DC2AC(const void *a1)
{
  void (**v1)();
  uint64_t v2;

  sub_1AE8DDDB4();
  sub_1AE501340();
  sub_1AE8DDDE4();
  memcpy((char *)sub_1AE51A45C + 88 * v2 + 32, a1, 0x58uLL);
  *v1 = sub_1AE51A45C;
  sub_1AE4F6624();
}

void sub_1AE8DC2F8(const void *a1)
{
  void (**v1)();
  uint64_t v2;

  sub_1AE8DDDB4();
  sub_1AE501340();
  sub_1AE8DDDE4();
  memcpy((char *)sub_1AE51A440 + 112 * v2 + 32, a1, 0x70uLL);
  *v1 = sub_1AE51A440;
  sub_1AE4F6624();
}

void VOPBuilder.toString.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1AE8DC38C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10) + 16))
  {
    sub_1AE4F66C4();
    v1 = MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1AE8DDDBC();
      if ((sub_1AE505598() & 1) == 0)
      {
        sub_1AE4FD794();
        v1 = v3;
      }
      if (*(_QWORD *)(v1 + 16) >= *(_QWORD *)(v1 + 24) >> 1)
      {
        sub_1AE501E84();
        v1 = v4;
      }
      sub_1AE8DDDF4();
    }
    while (!v2);
    sub_1AE4F665C();
  }
  sub_1AE501548(&qword_1ED319DE0);
  sub_1AE568D9C();
  sub_1AE925DC4();
  sub_1AE4F6648();
  sub_1AE772530();
  swift_bridgeObjectRelease();
  sub_1AE4F7838();
  return 677670497;
}

uint64_t sub_1AE8DD060(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v5 = *(v2 - 1);
      v4 = *v2;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AE519C48();
        v3 = v8;
      }
      v6 = v3[2];
      if (v6 >= v3[3] >> 1)
      {
        sub_1AE519C48();
        v3 = v9;
      }
      v2 += 5;
      v3[2] = v6 + 1;
      v7 = &v3[2 * v6];
      v7[4] = v5;
      v7[5] = v4;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v10 = v3[2];
  if (v10 == 1)
  {
    v11 = v3[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else if (v10)
  {
    sub_1AE501548(&qword_1ED319DE0);
    sub_1AE568D9C();
    sub_1AE925DC4();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    sub_1AE925F74();
    swift_bridgeObjectRelease();
    return 10075;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v11;
}

void VOPBuilder.description.getter()
{
  VOPBuilder.toString.getter();
}

void sub_1AE8DD234()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE519C48);
}

void sub_1AE8DD240()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE519D00);
}

void sub_1AE8DD24C()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE519D38);
}

void sub_1AE8DD258()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE519D1C);
}

void sub_1AE8DD264()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE519D54);
}

void sub_1AE8DD270()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE519F78);
}

void sub_1AE8DD27C()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE519F94);
}

void sub_1AE8DD288()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE519FB0);
}

void sub_1AE8DD294()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE519DF4);
}

void sub_1AE8DD2A0()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A068);
}

void sub_1AE8DD2AC()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A298);
}

void sub_1AE8DD2B8()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A084);
}

void sub_1AE8DD2C4()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A45C);
}

void sub_1AE8DD2D0()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A53C);
}

void sub_1AE8DD2DC()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A574);
}

void sub_1AE8DD2E8()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A590);
}

void sub_1AE8DD2F4()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A5AC);
}

void sub_1AE8DD300()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A5E4);
}

void sub_1AE8DD30C()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A600);
}

void sub_1AE8DD318()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A614);
}

void sub_1AE8DD324()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51A928);
}

void sub_1AE8DD330()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51ADF0);
}

void sub_1AE8DD33C()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B184);
}

void sub_1AE8DD348()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B248);
}

void sub_1AE8DD354()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B264);
}

void sub_1AE8DD360()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B280);
}

void sub_1AE8DD36C()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B338);
}

void sub_1AE8DD378()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B354);
}

void sub_1AE8DD384()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B370);
}

void sub_1AE8DD390()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B38C);
}

void sub_1AE8DD39C()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B3A8);
}

void sub_1AE8DD3A8()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B3C4);
}

void sub_1AE8DD3B4()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B3E0);
}

void sub_1AE8DD3C0()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B47C);
}

void sub_1AE8DD3CC()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B498);
}

void sub_1AE8DD3D8()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B4B4);
}

void sub_1AE8DD3E4()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B4D0);
}

void sub_1AE8DD3F0()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B4EC);
}

void sub_1AE8DD3FC()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B514);
}

void sub_1AE8DD408()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B970);
}

void sub_1AE8DD414()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B994);
}

void sub_1AE8DD420()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B9B8);
}

void sub_1AE8DD42C()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B9CC);
}

void sub_1AE8DD438()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51B9E8);
}

void sub_1AE8DD444()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BA04);
}

void sub_1AE8DD450()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BA20);
}

void sub_1AE8DD45C()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BA3C);
}

void sub_1AE8DD468()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BA58);
}

void sub_1AE8DD474()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BA74);
}

void sub_1AE8DD480()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BA88);
}

void sub_1AE8DD48C()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BA9C);
}

void sub_1AE8DD498()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BAB0);
}

void sub_1AE8DD4A4()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BAC4);
}

void sub_1AE8DD4B0()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BAD8);
}

void sub_1AE8DD4BC()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BAEC);
}

void sub_1AE8DD4C8()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BB00);
}

void sub_1AE8DD4D4()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BB14);
}

void sub_1AE8DD4E0()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BB28);
}

void sub_1AE8DD4EC()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BB3C);
}

void sub_1AE8DD4F8()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BB50);
}

void sub_1AE8DD504()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BB64);
}

void sub_1AE8DD510()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BC74);
}

void sub_1AE8DD51C()
{
  sub_1AE8DD528((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AE51BC88);
}

void sub_1AE8DD528(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t isUniquelyReferenced_nonNull_native;

  v3 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native)
    *v1 = a1(isUniquelyReferenced_nonNull_native, *(_QWORD *)(v3 + 16) + 1, 1, v3);
  sub_1AE4F6624();
}

uint64_t sub_1AE8DD574(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE519C48);
}

uint64_t sub_1AE8DD580(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE519D00);
}

uint64_t sub_1AE8DD58C(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE519D1C);
}

uint64_t sub_1AE8DD598(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE519D38);
}

uint64_t sub_1AE8DD5A4(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE519D54);
}

uint64_t sub_1AE8DD5B0(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE519DF4);
}

uint64_t sub_1AE8DD5BC(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE519F78);
}

uint64_t sub_1AE8DD5C8(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE519F94);
}

uint64_t sub_1AE8DD5D4(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE519FB0);
}

uint64_t sub_1AE8DD5E0(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51A068);
}

uint64_t sub_1AE8DD5EC(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51A084);
}

uint64_t sub_1AE8DD5F8(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51A298);
}

uint64_t sub_1AE8DD604(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51A45C);
}

uint64_t sub_1AE8DD610(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51A53C);
}

uint64_t sub_1AE8DD61C(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51A574);
}

uint64_t sub_1AE8DD628(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51A590);
}

uint64_t sub_1AE8DD634(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51A5AC);
}

uint64_t sub_1AE8DD640(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51A5E4);
}

uint64_t sub_1AE8DD64C(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51A600);
}

uint64_t sub_1AE8DD658(uint64_t result)
{
  _QWORD *v1;

  if (result + 1 > *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
    return sub_1AE926220();
  return result;
}

uint64_t sub_1AE8DD684(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51A614);
}

uint64_t sub_1AE8DD690(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51A928);
}

uint64_t sub_1AE8DD69C(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51ADF0);
}

uint64_t sub_1AE8DD6A8(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B184);
}

uint64_t sub_1AE8DD6B4(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B248);
}

uint64_t sub_1AE8DD6C0(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B264);
}

uint64_t sub_1AE8DD6CC(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B280);
}

uint64_t sub_1AE8DD6D8(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B338);
}

uint64_t sub_1AE8DD6E4(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B354);
}

uint64_t sub_1AE8DD6F0(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B370);
}

uint64_t sub_1AE8DD6FC(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B38C);
}

uint64_t sub_1AE8DD708(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B3A8);
}

uint64_t sub_1AE8DD714(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B3C4);
}

uint64_t sub_1AE8DD720(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B3E0);
}

uint64_t sub_1AE8DD72C(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B47C);
}

uint64_t sub_1AE8DD738(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B498);
}

uint64_t sub_1AE8DD744(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B4B4);
}

uint64_t sub_1AE8DD750(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B4D0);
}

uint64_t sub_1AE8DD75C(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B4EC);
}

uint64_t sub_1AE8DD768(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B514);
}

uint64_t sub_1AE8DD774(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B970);
}

uint64_t sub_1AE8DD780(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B994);
}

uint64_t sub_1AE8DD78C(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B9B8);
}

uint64_t sub_1AE8DD798(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B9CC);
}

uint64_t sub_1AE8DD7A4(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51B9E8);
}

uint64_t sub_1AE8DD7B0(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BA04);
}

uint64_t sub_1AE8DD7BC(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BA20);
}

uint64_t sub_1AE8DD7C8(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BA3C);
}

uint64_t sub_1AE8DD7D4(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BA58);
}

uint64_t sub_1AE8DD7E0(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BA74);
}

uint64_t sub_1AE8DD7EC(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BA88);
}

uint64_t sub_1AE8DD7F8(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BA9C);
}

uint64_t sub_1AE8DD804(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BAB0);
}

uint64_t sub_1AE8DD810(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BAC4);
}

uint64_t sub_1AE8DD81C(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BAD8);
}

uint64_t sub_1AE8DD828(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BAEC);
}

uint64_t sub_1AE8DD834(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BB00);
}

uint64_t sub_1AE8DD840(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BB14);
}

uint64_t sub_1AE8DD84C(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BB28);
}

uint64_t sub_1AE8DD858(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BB3C);
}

uint64_t sub_1AE8DD864(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BB50);
}

uint64_t sub_1AE8DD870(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BB64);
}

uint64_t sub_1AE8DD87C(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BC74);
}

uint64_t sub_1AE8DD888(uint64_t a1)
{
  return sub_1AE8DD894(a1, (uint64_t (*)(BOOL))sub_1AE51BC88);
}

uint64_t sub_1AE8DD894(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

uint64_t sub_1AE8DD8D4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_QWORD *)(v4 + 16) = result + 1;
  v5 = v4 + 16 * result;
  *(_QWORD *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 40) = a3;
  return result;
}

unint64_t sub_1AE8DD8EC()
{
  unint64_t result;

  result = qword_1EEDA5EF8;
  if (!qword_1EEDA5EF8)
  {
    result = MEMORY[0x1AF454B70](MEMORY[0x1E0DEA9A8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EEDA5EF8);
  }
  return result;
}

__n128 sub_1AE8DD92C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;

  v3 = *v2;
  *(_QWORD *)(v3 + 16) = a1 + 1;
  v4 = v3 + 40 * a1;
  result = *(__n128 *)a2;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 48) = v6;
  *(_WORD *)(v4 + 64) = *(_WORD *)(a2 + 32);
  return result;
}

__n128 sub_1AE8DD954(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_WORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *v2;
  *(_QWORD *)(v6 + 16) = a1 + 1;
  v7 = v6 + 56 * a1;
  result = *(__n128 *)(a2 + 16);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)a2;
  *(__n128 *)(v7 + 48) = result;
  *(_QWORD *)(v7 + 64) = v3;
  *(_WORD *)(v7 + 72) = v4;
  *(_QWORD *)(v7 + 80) = v5;
  return result;
}

uint64_t sub_1AE8DD98C(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v6 = *v5;
  *(_QWORD *)(v6 + 16) = result + 1;
  v7 = v6 + 32 * result;
  *(_BYTE *)(v7 + 32) = a2;
  *(_QWORD *)(v7 + 40) = a3;
  *(_QWORD *)(v7 + 48) = a4;
  *(_QWORD *)(v7 + 56) = a5;
  return result;
}

uint64_t sub_1AE8DD9AC(uint64_t result, uint64_t a2, double a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_QWORD *)(v4 + 16) = result + 1;
  v5 = v4 + 16 * result;
  *(_QWORD *)(v5 + 32) = a2;
  *(double *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_1AE8DD9C8(uint64_t result, char a2, double a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_QWORD *)(v4 + 16) = result + 1;
  v5 = v4 + 16 * result;
  *(_BYTE *)(v5 + 32) = a2;
  *(double *)(v5 + 40) = a3;
  return result;
}

void sub_1AE8DD9E4(uint64_t a1, uint64_t a2)
{
  sub_1AE8DD9FC(a1, a2, &qword_1EED9A780);
}

void sub_1AE8DD9F0(uint64_t a1, uint64_t a2)
{
  sub_1AE8DD9FC(a1, a2, &qword_1EED9A770);
}

void sub_1AE8DD9FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(*(_QWORD *)v3 + 16) = a1 + 1;
  sub_1AE501548(a3);
  sub_1AE508A0C();
  sub_1AE5CD6E0(a2, v8 + v7 * a1, a3);
  sub_1AE4F6624();
}

void sub_1AE8DDA48(uint64_t a1, uint64_t a2)
{
  sub_1AE8DD9FC(a1, a2, &qword_1EED9A760);
}

void sub_1AE8DDA54(uint64_t a1, uint64_t a2)
{
  sub_1AE8DD9FC(a1, a2, &qword_1EED9A750);
}

void sub_1AE8DDA60(uint64_t a1, uint64_t a2)
{
  sub_1AE8DD9FC(a1, a2, &qword_1EED9A740);
}

void sub_1AE8DDA6C(uint64_t a1, uint64_t a2)
{
  sub_1AE8DD9FC(a1, a2, &qword_1EED9A730);
}

void sub_1AE8DDA78(uint64_t a1, uint64_t a2)
{
  sub_1AE8DD9FC(a1, a2, &qword_1EED9A720);
}

void sub_1AE8DDA84(uint64_t a1, uint64_t a2)
{
  sub_1AE8DD9FC(a1, a2, &qword_1EED9A710);
}

void sub_1AE8DDA90(uint64_t a1, uint64_t a2)
{
  sub_1AE8DD9FC(a1, a2, &qword_1EED9A700);
}

void sub_1AE8DDA9C(uint64_t a1, uint64_t a2)
{
  sub_1AE8DD9FC(a1, a2, &qword_1EED9A6F0);
}

void sub_1AE8DDAA8(uint64_t a1, uint64_t a2)
{
  sub_1AE8DD9FC(a1, a2, &qword_1EED9A6E0);
}

void sub_1AE8DDAB4(uint64_t a1, uint64_t a2)
{
  sub_1AE8DD9FC(a1, a2, &qword_1EED9A6D0);
}

uint64_t sub_1AE8DDAC0(uint64_t result, char a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v3;
  *(_QWORD *)(v4 + 16) = result + 1;
  v5 = v4 + 16 * result;
  *(_BYTE *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_1AE8DDADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(*(_QWORD *)v2 + 16) = a1 + 1;
  type metadata accessor for KGQ.Value();
  sub_1AE508A0C();
  return sub_1AE83B3A0(a2, v6 + v5 * a1);
}

uint64_t sub_1AE8DDB24()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AE8DDB48()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AE525C94(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(unsigned __int16 *)(v0 + 88), *(_BYTE *)(v0 + 90));
  return swift_deallocObject();
}

uint64_t sub_1AE8DDB88()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *initializeBufferWithCopyOfBuffer for VOPBuilder(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for VOPBuilder()
{
  return swift_release();
}

_QWORD *assignWithCopy for VOPBuilder(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for VOPBuilder(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for VOPBuilder(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x69 && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 104;
    }
    else
    {
      v2 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3))) ^ 0x7F;
      if (v2 >= 0x68)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for VOPBuilder(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x68)
  {
    *(_QWORD *)result = a2 - 105;
    if (a3 >= 0x69)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x69)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1AE8DDD1C(_QWORD *a1)
{
  return (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
}

_QWORD *sub_1AE8DDD30(_QWORD *result)
{
  *result &= 0xFFFFFFFFFFFFFFBuLL;
  return result;
}

unint64_t *sub_1AE8DDD44(unint64_t *result, uint64_t a2)
{
  *result = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  return result;
}

ValueMetadata *type metadata accessor for VOPBuilder()
{
  return &type metadata for VOPBuilder;
}

void sub_1AE8DDDA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v0 + 16) = v1 + 1;
}

void sub_1AE8DDDB4()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1AE8DD528(v0);
}

uint64_t sub_1AE8DDDBC()
{
  return VOPBuilder.toString.getter();
}

void sub_1AE8DDDC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 16) = v2;
  v5 = v0 + 16 * v4;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v1;
}

void sub_1AE8DDDE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v0 + 16) = v1 + 1;
}

void sub_1AE8DDDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 16) = v3;
  v5 = v0 + 16 * v4;
  *(_QWORD *)(v5 + 32) = v1;
  *(_QWORD *)(v5 + 40) = v2;
}

uint64_t sub_1AE8DDE34()
{
  return VOPBuilder.toString.getter();
}

uint64_t sub_1AE8DDE64()
{
  uint64_t v0;

  return sub_1AE78D64C(v0);
}

void static WritableAssetRegistry.remoteOptions.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t WritableAssetRegistry.trialAssetManagerPolicy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v2 + 56);
  v4 = *(_QWORD *)(v2 + 64);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_BYTE *)(v2 + 72);
  *(_BYTE *)(a1 + 16) = v5;
  return sub_1AE536A94(v3, v4, v5);
}

uint64_t WritableAssetRegistry.__allocating_init(trialAssetManagerPolicy:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD v7[2];
  char v8;
  __int128 v9[2];
  _QWORD v10[5];

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  if (qword_1ED319ED0 != -1)
    swift_once();
  v5 = unk_1ED31B410;
  qword_1ED31B408(v10);
  if (v1)
  {
    sub_1AE53C698(v3, v2, v4);
  }
  else
  {
    sub_1AE57C238((uint64_t)v10, (uint64_t)v9);
    v7[0] = v3;
    v7[1] = v2;
    v8 = v4;
    v5 = swift_allocObject();
    sub_1AE8DDF70(v9, (uint64_t)v7);
    _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v10);
  }
  return v5;
}

uint64_t sub_1AE8DDF70(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t (*v11)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19[2];
  char v20;
  uint64_t v21[5];

  v4 = *(_QWORD *)(a2 + 8);
  v17 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 16);
  v18 = type metadata accessor for AssetRegistry();
  v6 = *((_QWORD *)a1 + 3);
  v7 = *((_QWORD *)a1 + 4);
  v8 = sub_1AE4F9858(a1, v6);
  v21[3] = v6;
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + 8) + 8);
  v21[4] = v9;
  v10 = sub_1AE52F6A8(v21);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v12 = v11(v10, v8, v6);
  v19[0] = v17;
  v19[1] = v4;
  v20 = v5;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11((uint64_t *)v14, v10, v6);
  v15 = sub_1AE53F3A8((uint64_t)v14, v19, v18, v6, v9);
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0((uint64_t)v21);
  *(_QWORD *)(v2 + 16) = v15;
  sub_1AE50AF58(a1, v2 + 24);
  return v2;
}

uint64_t WritableAssetRegistry.asset(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE8DE0A4()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  v0[8] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_1AE8DE104;
  return AssetRegistry.asset(for:in:)(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1AE8DE104()
{
  uint64_t v0;

  sub_1AE4FD1AC();
  return sub_1AE4F90A8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t WritableAssetRegistry.assets(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_1AE4FECB0();
}

uint64_t sub_1AE8DE148()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1AE8DE1A0;
  return AssetRegistry.assets(for:)(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1AE8DE1A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE501C50();
  v3 = sub_1AE4FD1AC();
  if (!v1)
    v3 = v0;
  return sub_1AE4FE914(v3, *(uint64_t (**)(void))(v2 + 8));
}

void WritableAssetRegistry.locallyAvailableAsset(for:in:)()
{
  AssetRegistry.locallyAvailableAsset(for:in:)();
}

uint64_t WritableAssetRegistry.assetEntry(for:in:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);

  sub_1AE4FE318();
  sub_1AE4F9858((_QWORD *)(*(_QWORD *)(v0 + 16) + 16), *(_QWORD *)(*(_QWORD *)(v0 + 16) + 40));
  v1 = sub_1AE4FD854();
  return v2(v1);
}

uint64_t WritableAssetRegistry.overrideAssetEntry(for:in:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v27[3];
  __int16 v28;
  char v29;

  v6 = *a5;
  v7 = a5[1];
  v8 = a5[2];
  v9 = *((_BYTE *)a5 + 26);
  v10 = *((_WORD *)a5 + 12);
  v11 = v5[6];
  v12 = v5[7];
  sub_1AE4F9858(v5 + 3, v11);
  v27[0] = v6;
  v27[1] = v7;
  v27[2] = v8;
  v29 = v9;
  v28 = v10;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(v12 + 16);
  v14 = sub_1AE4FC144();
  sub_1AE536B1C(v14, v15, v16, v17);
  v13(a1, a2, a3, a4, v27, v11, v12);
  v18 = sub_1AE4FC144();
  return sub_1AE536AF8(v18, v19, v20, v21);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> WritableAssetRegistry.clearAssetEntryOverride(for:in:)(Swift::String a1, Swift::String in)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_1AE4FE318();
  sub_1AE4F9858((_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 48));
  v3 = sub_1AE4FD854();
  v4(v3);
}

uint64_t WritableAssetRegistry.deinit()
{
  uint64_t v0;

  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 24);
  return v0;
}

uint64_t WritableAssetRegistry.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  _s20IntelligencePlatform28InferenceServiceInstanceEnumOwxx_0(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_1AE8DE3E8@<X0>(uint64_t a1@<X8>)
{
  return WritableAssetRegistry.trialAssetManagerPolicy.getter(a1);
}

uint64_t sub_1AE8DE408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1AE6514E0;
  return WritableAssetRegistry.asset(for:in:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1AE8DE48C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1AE8DE4DC;
  return WritableAssetRegistry.assets(for:)(a1);
}

uint64_t sub_1AE8DE4DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1AE501C50();
  v3 = sub_1AE4FD1AC();
  if (!v1)
    v3 = v0;
  return sub_1AE4FE914(v3, *(uint64_t (**)(void))(v2 + 8));
}

void sub_1AE8DE510()
{
  WritableAssetRegistry.locallyAvailableAsset(for:in:)();
}

uint64_t sub_1AE8DE530()
{
  return WritableAssetRegistry.assetEntry(for:in:)();
}

uint64_t type metadata accessor for WritableAssetRegistry()
{
  return objc_opt_self();
}

uint64_t method lookup function for WritableAssetRegistry()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AE8DE57C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t result;
  id v12;
  _QWORD v13[2];

  v3 = sub_1AE924780();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  sub_1AE8DE934((uint64_t)v13 - v8);
  sub_1AE750434();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  v10 = sub_1AE8205B0((uint64_t)v7, a1);
  if (v1)
    return sub_1AE4FF5BC();
  v12 = v10;
  sub_1AE4FF5BC();
  type metadata accessor for EntityRerankerModel();
  result = sub_1AE4F6738();
  *(_QWORD *)(result + 16) = v12;
  return result;
}

void sub_1AE8DE6C4()
{
  sub_1AE56BB6C();
}

void sub_1AE8DE6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  id v4;

  v3 = a1 == 0x63735F7475706E69 && a2 == 0xEC0000007365726FLL;
  if (v3 || (sub_1AE926D60() & 1) != 0)
    v4 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *(_QWORD *)(v2 + 16));
  sub_1AE4F6664();
}

uint64_t type metadata accessor for EntityRerankerModelInput()
{
  return objc_opt_self();
}

void sub_1AE8DE7E8()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_featureNames);
  sub_1AE9263E8();

  sub_1AE4F6664();
}

void sub_1AE8DE838()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_1AE925E18();
  v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  sub_1AE4F6664();
}

id sub_1AE8DE88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v5 = sub_1AE925E3C();
  v7 = v6;
  swift_retain();
  v8 = (void *)a4(v5, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1AE8DE8F0()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EntityRerankerModelOutput()
{
  return objc_opt_self();
}

uint64_t sub_1AE8DE934@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  id v11;
  void *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v15;

  v2 = sub_1AE924780();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = sub_1AE8DF4F8(0xD000000000000013, 0x80000001AE96F880, 0x636C65646F6D6C6DLL, 0xE800000000000000, v10);
  if (v11)
  {
    v12 = v11;
    sub_1AE924744();

    v13 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v13(v8, v5, v2);
    sub_1AE4FD940((uint64_t)v8, 0);
    result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v2);
    if ((_DWORD)result != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a1, v8, v2);
    }
  }
  else
  {
    result = sub_1AE4FD940((uint64_t)v8, 1);
  }
  __break(1u);
  return result;
}

void sub_1AE8DEAB8(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E9B0]), sel_init);
  sub_1AE8DEB18(a1, (uint64_t)v2);

  sub_1AE5035EC();
}

uint64_t sub_1AE8DEB18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    type metadata accessor for EntityRerankerModelOutput();
    v3 = sub_1AE4F6738();
    *(_QWORD *)(v3 + 16) = v8;
    v9 = v7;
  }
  else
  {
    v10 = v12[0];
    sub_1AE9246B4();

    swift_willThrow();
  }
  return v3;
}

void sub_1AE8DEBE4(void *a1)
{
  uint64_t v2;
  id v3;

  type metadata accessor for EntityRerankerModelInput();
  v2 = sub_1AE4F6738();
  *(_QWORD *)(v2 + 16) = a1;
  v3 = a1;
  sub_1AE8DEAB8(v2);
  swift_release();
  sub_1AE5035EC();
}

uint64_t type metadata accessor for EntityRerankerModel()
{
  return objc_opt_self();
}

void sub_1AE8DECB4()
{
  sub_1AE56BB6C();
}

id sub_1AE8DECC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  _QWORD *v6;
  BOOL v7;

  v3 = a1 == 0x307475706E69 && a2 == 0xE600000000000000;
  if (v3 || (sub_1AE5005DC() & 1) != 0)
  {
    v6 = (_QWORD *)(v2 + 16);
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  v7 = a1 == 0x317475706E69 && a2 == 0xE600000000000000;
  if (v7 || (sub_1AE5005DC() & 1) != 0)
  {
    v6 = (_QWORD *)(v2 + 24);
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  return 0;
}

uint64_t sub_1AE8DED98()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1AE8DEDBC()
{
  sub_1AE8DED98();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for locationEncoderInput()
{
  return objc_opt_self();
}

uint64_t sub_1AE8DEE54()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_featureNames);
  v2 = sub_1AE9263E8();

  return v2;
}

id sub_1AE8DEEA8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_1AE925E18();
  v3 = objc_msgSend(v1, sel_featureValueForName_, v2);

  return v3;
}

uint64_t type metadata accessor for locationEncoderOutput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for locationEncoder()
{
  return objc_opt_self();
}

uint64_t sub_1AE8DEF40(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t result;
  id v12;
  _QWORD v13[2];

  v3 = sub_1AE924780();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  sub_1AE8DF1D0((uint64_t)v13 - v8);
  sub_1AE750434();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  v10 = sub_1AE8205B0((uint64_t)v7, a1);
  if (v1)
    return sub_1AE4FF5BC();
  v12 = v10;
  sub_1AE4FF5BC();
  type metadata accessor for MentionGenerationModel();
  result = sub_1AE4F6738();
  *(_QWORD *)(result + 16) = v12;
  return result;
}

void sub_1AE8DF088()
{
  sub_1AE56BB6C();
}

void sub_1AE8DF094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  id v4;

  v3 = a1 == 0x64695F6E656B6F74 && a2 == 0xE900000000000073;
  if (v3 || (sub_1AE926D60() & 1) != 0)
    v4 = objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *(_QWORD *)(v2 + 16));
  sub_1AE4F6664();
}

uint64_t type metadata accessor for MentionGenerationModelInput()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MentionGenerationModelOutput()
{
  return objc_opt_self();
}

uint64_t sub_1AE8DF1D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  id v11;
  void *v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v15;

  v2 = sub_1AE924780();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1AE501548((uint64_t *)&unk_1ED31C9C0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v11 = sub_1AE8DF4F8(0xD000000000000016, 0x80000001AE96F980, 0x636C65646F6D6C6DLL, 0xE800000000000000, v10);
  if (v11)
  {
    v12 = v11;
    sub_1AE924744();

    v13 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v13(v8, v5, v2);
    sub_1AE4FD940((uint64_t)v8, 0);
    result = _s20IntelligencePlatform17UnstructuredImageV5AssetOwet_0((uint64_t)v8, 1, v2);
    if ((_DWORD)result != 1)
    {

      return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a1, v8, v2);
    }
  }
  else
  {
    result = sub_1AE4FD940((uint64_t)v8, 1);
  }
  __break(1u);
  return result;
}

void sub_1AE8DF354(uint64_t a1)
{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E9B0]), sel_init);
  sub_1AE8DF3B4(a1, (uint64_t)v2);

  sub_1AE5035EC();
}

uint64_t sub_1AE8DF3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *(void **)(v2 + 16);
  v12[0] = 0;
  v6 = objc_msgSend(v5, sel_predictionFromFeatures_options_error_, a1, a2, v12);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    type metadata accessor for MentionGenerationModelOutput();
    v3 = sub_1AE4F6738();
    *(_QWORD *)(v3 + 16) = v8;
    v9 = v7;
  }
  else
  {
    v10 = v12[0];
    sub_1AE9246B4();

    swift_willThrow();
  }
  return v3;
}

void sub_1AE8DF480(void *a1)
{
  uint64_t v2;
  id v3;

  type metadata accessor for MentionGenerationModelInput();
  v2 = sub_1AE4F6738();
  *(_QWORD *)(v2 + 16) = a1;
  v3 = a1;
  sub_1AE8DF354(v2);
  swift_release();
  sub_1AE5035EC();
}

uint64_t type metadata accessor for MentionGenerationModel()
{
  return objc_opt_self();
}

id sub_1AE8DF4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_1AE925E18();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(a5, sel_URLForResource_withExtension_, v6, v7);

  return v8;
}

void sub_1AE8DFC24(uint64_t a1, void *a2)
{
  id v3;
  GDSQLEntityIterator *v4;
  const char *v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  const char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v4 = [GDSQLEntityIterator alloc];
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v6 = (id)objc_msgSend_initWithColumns_statement_(v4, v5, 511, v3);
  v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v6, v7, (uint64_t)&v25, v30, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v26;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v26 != v10)
          objc_enumerationMutation(v6);
        v12 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * v11);
        v21 = 0u;
        v22 = 0u;
        v23 = 0u;
        v24 = 0u;
        v13 = v12;
        v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v14, (uint64_t)&v21, v29, 16);
        if (v15)
        {
          v16 = v15;
          v17 = *(_QWORD *)v22;
          do
          {
            v18 = 0;
            do
            {
              if (*(_QWORD *)v22 != v17)
                objc_enumerationMutation(v13);
              (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
              ++v18;
            }
            while (v16 != v18);
            v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v13, v19, (uint64_t)&v21, v29, 16);
          }
          while (v16);
        }

        ++v11;
      }
      while (v11 != v9);
      v9 = objc_msgSend_countByEnumeratingWithState_objects_count_(v6, v20, (uint64_t)&v25, v30, 16);
    }
    while (v9);
  }

}

uint64_t gdEntityClassFromOntologyClassIdentifier(uint64_t a1)
{
  return MEMORY[0x1E0DE7D20](_TtC20IntelligencePlatform19GDEntityClassHelper, sel_entityClassFrom_, a1);
}

uint64_t gdEntityPredicateFromOntologyPredicateIdentifier(uint64_t a1)
{
  return MEMORY[0x1E0DE7D20](_TtC20IntelligencePlatform23GDEntityPredicateHelper, sel_entityPredicateFrom_, a1);
}

void sub_1AE8EB158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void sub_1AE8EB5C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

void sub_1AE8EBB24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a49, 8);
  _Unwind_Resume(a1);
}

void sub_1AE8EC098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a49, 8);
  _Unwind_Resume(a1);
}

void sub_1AE8EC204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AE8EC2EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE8EC310(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE8EC320(uint64_t a1)
{

}

void sub_1AE8EC328(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void sub_1AE8EC338(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void sub_1AE8EC348(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v12 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;
  v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1AE8EC3D0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v12 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;
  v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1AE8EC458(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v12 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;
  v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1AE8EC4E0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v12 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;
  v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void *sub_1AE8ED344()
{
  return &unk_1E5E0CC98;
}

void *sub_1AE8ED350()
{
  return &unk_1E5E0CC70;
}

void *sub_1AE8ED35C()
{
  return &unk_1E5E0CC48;
}

void sub_1AE8ED5E0(uint64_t a1, void *a2)
{
  const __CFString *v3;
  const char *v4;
  uint64_t v5;
  __CFStringTokenizer *tokenizer;
  CFRange v7;
  CFRange v8;

  tokenizer = a2;
  v3 = *(const __CFString **)(a1 + 40);
  v7.length = objc_msgSend_length(*(void **)(a1 + 32), v4, v5);
  v7.location = 0;
  CFStringTokenizerSetString(tokenizer, v3, v7);
  ITSTokenListPopulateFromString();
  v8.location = 0;
  v8.length = 1;
  CFStringTokenizerSetString(tokenizer, CFSTR("⌘"), v8);
  CFRelease(tokenizer);

}

void sub_1AE8ED66C()
{
  void *v0;
  id v1;
  const char *v2;
  uint64_t v3;
  void *v4;

  v0 = (void *)MEMORY[0x1AF45451C]();
  v1 = objc_alloc(MEMORY[0x1E0D815E0]);
  v3 = objc_msgSend_initWithBlock_idleTimeout_(v1, v2, (uint64_t)&unk_1E5DD9400, 1.0);
  v4 = (void *)qword_1EEE11C00;
  qword_1EEE11C00 = v3;

  objc_autoreleasePoolPop(v0);
}

id sub_1AE8ED6BC()
{
  const char *v0;
  uint64_t v1;
  CFStringTokenizerRef v2;
  id v3;
  const char *v4;
  void *v5;
  void *v7;
  const char *v8;
  void *v9;
  const char *v10;
  CFRange v11;

  v11.location = 0;
  v11.length = 0;
  v2 = CFStringTokenizerCreate(0, 0, v11, 0x810000uLL, 0);
  if (!v2)
  {
    objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v0, v1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithUTF8String_(MEMORY[0x1E0CB3940], v8, (uint64_t)"ITSTokenListRef _createITSListForFTSQuery(NSString *__strong)_block_invoke_2");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_handleFailureInFunction_file_lineNumber_description_(v7, v10, (uint64_t)v9, CFSTR("GDFTSTokenize.m"), 35, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("tokenizer"));

  }
  v3 = objc_alloc(MEMORY[0x1E0D815F0]);
  v5 = (void *)objc_msgSend_initWithGuardedData_(v3, v4, (uint64_t)v2);

  return v5;
}

void sub_1AE8EDA24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE8EDA84(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE8EDA94(uint64_t a1)
{

}

void sub_1AE8EDA9C(uint64_t a1, void *a2, _BYTE *a3)
{
  id v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  void *v11;
  id v12;

  v12 = a2;
  v6 = objc_alloc((Class)objc_opt_class());
  objc_msgSend_entityIdentifier(v12, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend_initByCastingFrom_(v6, v10, (uint64_t)v9);

  if (v11)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), v11);
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    *a3 = 1;
  }

}

id sub_1AE8FC02C(void *a1, const char *a2, uint64_t a3)
{
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  void *v7;
  const __CFString *v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const __CFString *v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  void *v17;
  const __CFString *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  void *v22;
  const __CFString *v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  void *v27;
  const __CFString *v28;
  uint64_t v29;
  const char *v30;
  void *v31;
  void *v32;
  const __CFString *v34;
  const __CFString *v35;
  void *v36;

  v36 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend_namePrefix(a1, a2, a3);
  v4 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)v4;
  if (v4)
    v8 = (const __CFString *)v4;
  else
    v8 = &stru_1E5DDB0B8;
  v35 = v8;
  objc_msgSend_givenName(a1, v5, v6);
  v9 = objc_claimAutoreleasedReturnValue();
  v12 = (void *)v9;
  if (v9)
    v13 = (const __CFString *)v9;
  else
    v13 = &stru_1E5DDB0B8;
  v34 = v13;
  objc_msgSend_middleName(a1, v10, v11);
  v14 = objc_claimAutoreleasedReturnValue();
  v17 = (void *)v14;
  if (v14)
    v18 = (const __CFString *)v14;
  else
    v18 = &stru_1E5DDB0B8;
  objc_msgSend_familyName(a1, v15, v16);
  v19 = objc_claimAutoreleasedReturnValue();
  v22 = (void *)v19;
  if (v19)
    v23 = (const __CFString *)v19;
  else
    v23 = &stru_1E5DDB0B8;
  objc_msgSend_nameSuffix(a1, v20, v21);
  v24 = objc_claimAutoreleasedReturnValue();
  v27 = (void *)v24;
  if (v24)
    v28 = (const __CFString *)v24;
  else
    v28 = &stru_1E5DDB0B8;
  objc_msgSend_nickname(a1, v25, v26);
  v29 = objc_claimAutoreleasedReturnValue();
  v31 = (void *)v29;
  if (v29)
    objc_msgSend_stringWithFormat_(v36, v30, (uint64_t)CFSTR("%@ %@ %@ %@ %@ %@"), v35, v34, v18, v23, v28, v29);
  else
    objc_msgSend_stringWithFormat_(v36, v30, (uint64_t)CFSTR("%@ %@ %@ %@ %@ %@"), v35, v34, v18, v23, v28, &stru_1E5DDB0B8);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  return v32;
}

uint64_t sub_1AE8FC3E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1AE9076B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE907718(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE907728(uint64_t a1)
{

}

void sub_1AE907730(uint64_t a1, void *a2, _BYTE *a3)
{
  id v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  void *v11;
  id v12;

  v12 = a2;
  v6 = objc_alloc((Class)objc_opt_class());
  objc_msgSend_entityIdentifier(v12, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend_initByCastingFrom_(v6, v10, (uint64_t)v9);

  if (v11)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), v11);
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    *a3 = 1;
  }

}

id GDDefaultLog()
{
  if (qword_1ED327218 != -1)
    dispatch_once(&qword_1ED327218, &unk_1E5DD9658);
  return (id)qword_1ED327210;
}

void sub_1AE908650(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "default");
  v5 = (void *)qword_1ED327210;
  qword_1ED327210 = (uint64_t)v4;

}

void sub_1AE908684(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "signpost");
  v5 = (void *)qword_1ED327470;
  qword_1ED327470 = (uint64_t)v4;

}

void sub_1AE9086B8(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "views");
  v5 = (void *)qword_1ED327460;
  qword_1ED327460 = (uint64_t)v4;

}

id GDConstructionLog()
{
  if (qword_1ED326DE8[0] != -1)
    dispatch_once(qword_1ED326DE8, &unk_1E5DC8E00);
  return (id)qword_1ED326DE0;
}

void sub_1AE90872C(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "construction");
  v5 = (void *)qword_1ED326DE0;
  qword_1ED326DE0 = (uint64_t)v4;

}

id GDOntologyLog()
{
  if (qword_1ED327070 != -1)
    dispatch_once(&qword_1ED327070, &unk_1E5DC8E20);
  return (id)qword_1ED326DC0;
}

void sub_1AE9087A0(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "ontology");
  v5 = (void *)qword_1ED326DC0;
  qword_1ED326DC0 = (uint64_t)v4;

}

void sub_1AE9087D4(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "XPC");
  v5 = (void *)qword_1ED327480;
  qword_1ED327480 = (uint64_t)v4;

}

id GDStorageLog()
{
  if (qword_1ED327080[0] != -1)
    dispatch_once(qword_1ED327080, &unk_1E5DC8D60);
  return (id)qword_1ED326DC8;
}

void sub_1AE908848(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "storage");
  v5 = (void *)qword_1ED326DC8;
  qword_1ED326DC8 = (uint64_t)v4;

}

id GDECRLog()
{
  if (qword_1ED326DD8 != -1)
    dispatch_once(&qword_1ED326DD8, &unk_1E5DD96B8);
  return (id)qword_1ED326DD0;
}

void sub_1AE9088BC(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "ECR");
  v5 = (void *)qword_1ED326DD0;
  qword_1ED326DD0 = (uint64_t)v4;

}

id GDKTSLog()
{
  if (qword_1EEE11C18 != -1)
    dispatch_once(&qword_1EEE11C18, &unk_1E5DD96D8);
  return (id)qword_1EEE11C10;
}

void sub_1AE908930(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "KTS");
  v5 = (void *)qword_1EEE11C10;
  qword_1EEE11C10 = (uint64_t)v4;

}

id GDBehaviorLog()
{
  if (qword_1ED326838[0] != -1)
    dispatch_once(qword_1ED326838, &unk_1E5DC8DA0);
  return (id)qword_1ED326830;
}

void sub_1AE9089A4(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "behavior");
  v5 = (void *)qword_1ED326830;
  qword_1ED326830 = (uint64_t)v4;

}

id GDKnosisLog()
{
  if (qword_1ED324118[0] != -1)
    dispatch_once(qword_1ED324118, &unk_1E5DD96F8);
  return (id)qword_1ED324110;
}

void sub_1AE908A18(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "knosis");
  v5 = (void *)qword_1ED324110;
  qword_1ED324110 = (uint64_t)v4;

}

id GDAppIntentLog()
{
  if (qword_1EEE11C28 != -1)
    dispatch_once(&qword_1EEE11C28, &unk_1E5DB0F48);
  return (id)qword_1EEE11C20;
}

void sub_1AE908A8C(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "appIntent");
  v5 = (void *)qword_1EEE11C20;
  qword_1EEE11C20 = (uint64_t)v4;

}

id GDK2TLog()
{
  if (qword_1EEE11C38 != -1)
    dispatch_once(&qword_1EEE11C38, &unk_1E5DC8DC0);
  return (id)qword_1EEE11C30;
}

void sub_1AE908B00(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "k2t");
  v5 = (void *)qword_1EEE11C30;
  qword_1EEE11C30 = (uint64_t)v4;

}

id GDLifeEventLog()
{
  if (qword_1ED324320[0] != -1)
    dispatch_once(qword_1ED324320, &unk_1E5DD9718);
  return (id)qword_1ED31DFF0;
}

void sub_1AE908B74(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "lifeEvent");
  v5 = (void *)qword_1ED31DFF0;
  qword_1ED31DFF0 = (uint64_t)v4;

}

id GDLifeEventSummaryLog()
{
  if (qword_1EEE11C48 != -1)
    dispatch_once(&qword_1EEE11C48, &unk_1E5DB10A8);
  return (id)qword_1EEE11C40;
}

void sub_1AE908BE8(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "lifeEventSummary");
  v5 = (void *)qword_1EEE11C40;
  qword_1EEE11C40 = (uint64_t)v4;

}

id GDGlobalKnowledgeLog()
{
  if (qword_1ED323D00[0] != -1)
    dispatch_once(qword_1ED323D00, &unk_1E5DC8DE0);
  return (id)qword_1EEDAEEA0;
}

void sub_1AE908C5C(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "globalKnowledge");
  v5 = (void *)qword_1EEDAEEA0;
  qword_1EEDAEEA0 = (uint64_t)v4;

}

id GDAutonamingLog()
{
  if (qword_1EEDAA198[0] != -1)
    dispatch_once(qword_1EEDAA198, &unk_1E5DD9738);
  return (id)qword_1EEDAA190;
}

void sub_1AE908CD0(uint64_t a1, const char *a2, uint64_t a3)
{
  const char *v3;
  os_log_t v4;
  void *v5;

  v3 = (const char *)objc_msgSend_UTF8String(CFSTR("com.apple.intelligenceplatform"), a2, a3);
  v4 = os_log_create(v3, "autonaming");
  v5 = (void *)qword_1EEDAA190;
  qword_1EEDAA190 = (uint64_t)v4;

}

void sub_1AE908F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE908FD4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE908FE4(uint64_t a1)
{

}

uint64_t sub_1AE908FEC(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  void *v5;
  const char *v6;
  void *v7;
  const char *v8;
  unsigned __int8 *v9;

  v3 = a2;
  objc_msgSend_getInt64AsNSNumberForColumnAlias_(v3, v4, (uint64_t)"MD_ID");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_getDoubleAsNSNumberForColumnAlias_(v3, v6, (uint64_t)"rank");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5 && v7)
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v8, (uint64_t)v7, v5);
  v9 = (unsigned __int8 *)MEMORY[0x1E0D81780];

  return *v9;
}

uint64_t sub_1AE909074(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
  return *MEMORY[0x1E0D81788];
}

void *sub_1AE9090A4()
{
  return &unk_1E5E0CCC0;
}

void *sub_1AE90B6B4()
{
  return &unk_1E5E0CCE8;
}

void sub_1AE90BE7C()
{
  void *v0;
  const char *v1;
  uint64_t v2;
  void *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v0 = (void *)MEMORY[0x1AF45451C]();
  objc_msgSend_processInfo(MEMORY[0x1E0CB3898], v1, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_processName(v3, v4, v5);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)qword_1ED327440;
  qword_1ED327440 = v6;

  objc_autoreleasePoolPop(v0);
}

uint64_t sub_1AE90BED0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE90BEE0(uint64_t a1)
{

}

uint64_t sub_1AE90BF58()
{
  return mach_timebase_info((mach_timebase_info_t)&dword_1ED327430);
}

void sub_1AE90BF64()
{
  void *v0;
  int v1;
  NSObject *v2;
  int *v3;
  char *v4;
  int v5;
  char *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1AF45451C]();
  getpid();
  v1 = sandbox_check();
  if (v1 == -1)
  {
    GDViewLog();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
    {
      v3 = __error();
      v4 = strerror(*v3);
      v5 = 136315138;
      v6 = v4;
      _os_log_fault_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_FAULT, "Error checking sandbox policy: %s", (uint8_t *)&v5, 0xCu);
    }

  }
  dword_1ED327458 = v1 != 0;
  objc_autoreleasePoolPop(v0);
}

void sub_1AE90C830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AE90C988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE90C9AC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE90C9BC(uint64_t a1)
{

}

uint64_t sub_1AE90C9C4(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  void *v5;
  const char *v6;
  void *v7;
  const char *v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  GDFeatureKey *v13;
  const char *v14;
  void *v15;
  const char *v16;
  unsigned __int8 *v17;

  v3 = a2;
  objc_msgSend_getNSStringForColumnName_table_(v3, v4, (uint64_t)"viewName", "kv");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_getNSStringForColumnName_table_(v3, v6, (uint64_t)"featureName", "kv");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_getNSStringForColumnName_table_(v3, v8, (uint64_t)"subidentifierName", "kv");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5 && v7 && v9)
  {
    if (!objc_msgSend_length(v9, v10, v11))
    {

      v9 = 0;
    }
    v12 = *(void **)(a1 + 32);
    v13 = [GDFeatureKey alloc];
    v15 = (void *)objc_msgSend_initWithViewName_featureName_subidentifierName_(v13, v14, (uint64_t)v5, v7, v9);
    objc_msgSend_addObject_(v12, v16, (uint64_t)v15);

  }
  v17 = (unsigned __int8 *)MEMORY[0x1E0D81780];

  return *v17;
}

uint64_t sub_1AE90CAC0(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
  return *MEMORY[0x1E0D81788];
}

void sub_1AE90CAF0(uint64_t a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  id v18;

  v18 = a2;
  objc_msgSend_viewName(*(void **)(a1 + 32), v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_bindNamedParam_toNSString_(v18, v6, (uint64_t)":viewName", v5);

  objc_msgSend_featureName(*(void **)(a1 + 32), v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_bindNamedParam_toNSString_(v18, v10, (uint64_t)":featureName", v9);

  objc_msgSend_subidentifierName(*(void **)(a1 + 32), v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    objc_msgSend_subidentifierName(*(void **)(a1 + 32), v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_bindNamedParam_toNSString_(v18, v17, (uint64_t)":subidentifierName", v16);

  }
}

uint64_t sub_1AE90CBB0(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  const char *v6;
  void *v7;
  const char *v8;
  id v9;
  unsigned __int8 *v10;
  id v12;

  objc_msgSend_getNSDataForColumnName_table_(a2, (const char *)a2, (uint64_t)"value", "kv");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = (void *)MEMORY[0x1E0CB3710];
    v5 = objc_opt_class();
    v12 = 0;
    objc_msgSend_unarchivedObjectOfClass_fromData_error_(v4, v6, v5, v3, &v12);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = v12;
    if (v7)
      objc_msgSend_addObject_(*(void **)(a1 + 32), v8, (uint64_t)v7);

  }
  v10 = (unsigned __int8 *)MEMORY[0x1E0D81780];

  return *v10;
}

uint64_t sub_1AE90CC68(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
  return *MEMORY[0x1E0D81788];
}

void sub_1AE90CEE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AE90D378(uint64_t a1, const char *a2)
{
  void *v3;
  void *v4;

  objc_msgSend_objectForIdentifier_(*(void **)(a1 + 32), a2, (uint64_t)a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = v3;
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    v3 = v4;
  }

}

void sub_1AE90D3D0(uint64_t a1, void *a2)
{
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  const char *v43;
  void *v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  GDEntityIdentifier *v50;
  const char *v51;
  uint64_t v52;
  void *v53;
  const char *v54;
  void *v55;
  const char *v56;
  void *v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  const char *v61;
  void *v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  uint64_t v67;
  const char *v68;
  void *v69;
  const char *v70;
  id v71;

  v3 = *(_QWORD *)(a1 + 32);
  v71 = *(id *)(a1 + 40);
  v6 = a2;
  if (!v3)
    goto LABEL_19;
  objc_msgSend_objectFTSTerm(v71, v4, v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
  {
    objc_msgSend_objectFTSTerm(v71, v8, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_bindNamedParam_toNSString_(v6, v11, (uint64_t)":match", v10);
  }
  else
  {
    objc_msgSend_objects(v71, v8, v9);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend_count(v12, v13, v14);

    objc_msgSend_objects(v71, v16, v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = v18;
    if (v15 == 1)
    {
      objc_msgSend_objectAtIndexedSubscript_(v18, v19, 0);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_bindNamedParam_toNSString_(v6, v22, (uint64_t)":object", v21);

    }
    else
    {
      v23 = objc_msgSend_count(v18, v19, v20);

      v26 = v71;
      if (!v23)
        goto LABEL_9;
      objc_msgSend_objects(v71, v24, v25);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_bindNamedParam_toNSArray_(v6, v27, (uint64_t)":objects", v10);
    }
  }

  v26 = v71;
LABEL_9:
  objc_msgSend_predicates(v26, v24, v25);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = objc_msgSend_count(v28, v29, v30);

  objc_msgSend_predicates(v71, v32, v33);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v37 = v34;
  if (v31 == 1)
  {
    objc_msgSend_objectAtIndexedSubscript_(v34, v35, 0);
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_bindNamedParam_toNSString_(v6, v39, (uint64_t)":predicate", v38);

LABEL_13:
    goto LABEL_14;
  }
  v40 = objc_msgSend_count(v34, v35, v36);

  if (v40)
  {
    objc_msgSend_predicates(v71, v41, v42);
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_bindNamedParam_toNSArray_(v6, v43, (uint64_t)":predicates", v37);
    goto LABEL_13;
  }
LABEL_14:
  objc_msgSend_subjects(v71, v41, v42);
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  v47 = objc_msgSend_count(v44, v45, v46);

  if (v47 == 1)
  {
    v50 = [GDEntityIdentifier alloc];
    objc_msgSend_subjects(v71, v51, v52);
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectAtIndexedSubscript_(v53, v54, 0);
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    v57 = (void *)objc_msgSend_initWithString_(v50, v56, (uint64_t)v55);

    v60 = objc_msgSend_intValue(v57, v58, v59);
    objc_msgSend_bindNamedParam_toInt64_(v6, v61, (uint64_t)":subject", v60);
LABEL_18:

    goto LABEL_19;
  }
  objc_msgSend_subjects(v71, v48, v49);
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  v65 = objc_msgSend_count(v62, v63, v64);

  if (v65)
  {
    objc_msgSend_subjects(v71, v66, v67);
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend__pas_mappedArrayWithTransform_(v57, v68, (uint64_t)&unk_1E5DD9978);
    v69 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_bindNamedParam_toNSArray_(v6, v70, (uint64_t)":subjects", v69);

    goto LABEL_18;
  }
LABEL_19:

}

uint64_t sub_1AE90D678(uint64_t a1, void *a2)
{
  uint64_t Int64ForColumnName_table;
  GDEntityIdentifier *v4;
  const char *v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  void *v14;
  char v16;

  v16 = 0;
  Int64ForColumnName_table = objc_msgSend_getInt64ForColumnName_table_(a2, (const char *)a2, (uint64_t)"subject", 0);
  v4 = [GDEntityIdentifier alloc];
  v6 = (void *)objc_msgSend_initWithValue_(v4, v5, Int64ForColumnName_table);
  v9 = objc_msgSend_entityClass(v6, v7, v8);
  v12 = (unsigned __int8 *)MEMORY[0x1E0D81780];
  if (v9 == *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32))
  {
    v13 = *(_QWORD *)(a1 + 40);
    objc_msgSend_stringValue(v6, v10, v11);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void *, char *))(v13 + 16))(v13, v14, &v16);

    if (v16)
      v12 = (unsigned __int8 *)MEMORY[0x1E0D81788];
  }

  return *v12;
}

id sub_1AE90D73C(uint64_t a1, void *a2)
{
  id v2;
  GDEntityIdentifier *v3;
  const char *v4;
  void *v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  void *v11;

  v2 = a2;
  v3 = [GDEntityIdentifier alloc];
  v5 = (void *)objc_msgSend_initWithString_(v3, v4, (uint64_t)v2);

  v6 = (void *)MEMORY[0x1E0CB37E8];
  v9 = objc_msgSend_intValue(v5, v7, v8);
  objc_msgSend_numberWithUnsignedLongLong_(v6, v10, v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

id sub_1AE90D7A8(uint64_t a1, int a2)
{
  void *v4;
  const char *v5;
  const char *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  BOOL v14;
  void *v15;
  const char *v16;
  void *v17;
  _QWORD v19[9];
  _QWORD v20[11];

  v20[9] = *MEMORY[0x1E0C80C00];
  if (!a1)
    return 0;
  v4 = (void *)objc_opt_new();
  v19[0] = &unk_1E5E0CD88;
  v19[1] = &unk_1E5E0CDA0;
  v20[0] = CFSTR("subject");
  v20[1] = CFSTR("predicate");
  v19[2] = &unk_1E5E0CDB8;
  v19[3] = &unk_1E5E0CDD0;
  v20[2] = CFSTR("relationshipId");
  v20[3] = CFSTR("relationshipPredicate");
  v19[4] = &unk_1E5E0CDE8;
  v19[5] = &unk_1E5E0CE00;
  v20[4] = CFSTR("object");
  v20[5] = CFSTR("sources");
  v19[6] = &unk_1E5E0CE18;
  v19[7] = &unk_1E5E0CE30;
  v20[6] = CFSTR("confidence");
  v20[7] = CFSTR("sourceDuplicates");
  v19[8] = &unk_1E5E0CE48;
  v20[8] = CFSTR("timestamp");
  objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x1E0C99D80], v5, (uint64_t)v20, v19, 9);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 1;
  do
  {
    if ((v8 & a2) != 0)
    {
      objc_msgSend_numberWithInt_(MEMORY[0x1E0CB37E8], v6, v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v7, v10, (uint64_t)v9);
      v11 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v11)
      {
        objc_msgSend_currentHandler(MEMORY[0x1E0CB3488], v12, v13);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(v15, v16, (uint64_t)sel_columnQueryStringForColumns_, a1, CFSTR("GDSQLGraphObjectRetriever.m"), 66, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("columnName"));

      }
      objc_msgSend_addObject_(v4, v12, (uint64_t)v11);

    }
    v14 = v8 >= 0x81;
    v8 = (2 * v8);
  }
  while (!v14);
  objc_msgSend__pas_componentsJoinedByString_(v4, v6, (uint64_t)CFSTR(","));
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  return v17;
}

void sub_1AE90D9F0(_QWORD *a1, void *a2)
{
  id v3;
  const char *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  GDSQLEntityIterator *v9;
  const char *v10;
  void *v11;
  id v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  void *v19;
  id v20;
  const char *v21;
  void *v22;
  void *v23;
  const char *v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend_bindNamedParam_toInt64_(v3, v4, (uint64_t)":entityClassIdentifier", *(_QWORD *)(a1[4] + 32));
  v7 = objc_msgSend_entityClassOffset(GDEntityIdentifier, v5, v6);
  objc_msgSend_bindNamedParam_toInt64_(v3, v8, (uint64_t)":classOffset", v7);
  v9 = [GDSQLEntityIterator alloc];
  v11 = (void *)objc_msgSend_initWithColumns_statement_(v9, v10, a1[6], v3);
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v12 = v11;
  v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v13, (uint64_t)&v26, v30, 16);
  if (v14)
  {
    v15 = v14;
    v16 = *(_QWORD *)v27;
    while (2)
    {
      for (i = 0; i != v15; ++i)
      {
        if (*(_QWORD *)v27 != v16)
          objc_enumerationMutation(v12);
        v18 = *(_QWORD *)(*((_QWORD *)&v26 + 1) + 8 * i);
        v19 = (void *)MEMORY[0x1AF45451C]();
        v20 = objc_alloc((Class)objc_opt_class());
        v22 = (void *)objc_msgSend_initWithTriplesIterator_(v20, v21, v18);
        if (v22)
        {
          v25 = 0;
          v23 = (void *)MEMORY[0x1AF45451C]();
          (*(void (**)(void))(a1[5] + 16))();
          objc_autoreleasePoolPop(v23);
          if (v25)
          {

            objc_autoreleasePoolPop(v19);
            goto LABEL_12;
          }
        }

        objc_autoreleasePoolPop(v19);
      }
      v15 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v24, (uint64_t)&v26, v30, 16);
      if (v15)
        continue;
      break;
    }
  }
LABEL_12:

}

uint64_t sub_1AE90DBB4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE90DBC4(uint64_t a1)
{

}

void sub_1AE90DBCC(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  GDSQLTripleRowIterator *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  id v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v7 = objc_msgSend_intValue(v3, v5, v6);
  objc_msgSend_bindNamedParam_toInt64_(v4, v8, (uint64_t)":subject", v7);
  v9 = [GDSQLTripleRowIterator alloc];
  v10 = *(_QWORD *)(a1 + 56);
  objc_msgSend_stringValue(*(void **)(a1 + 32), v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = (id)objc_msgSend_initWithColumns_statement_subjectOverride_(v9, v14, v10, v4, v13);

  v15 = objc_alloc((Class)objc_opt_class());
  v17 = objc_msgSend_initWithTriplesIterator_(v15, v16, (uint64_t)v20);
  v18 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v19 = *(void **)(v18 + 40);
  *(_QWORD *)(v18 + 40) = v17;

}

uint64_t sub_1AE90DC9C(uint64_t a1, void *a2)
{
  return objc_msgSend_bindNamedParam_toNSString_(a2, (const char *)a2, (uint64_t)":entityClassIdentifierName", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 24));
}

uint64_t sub_1AE90DCB4(uint64_t a1, void *a2)
{
  void *v3;
  unsigned __int8 *v4;

  objc_msgSend_getNSStringForColumnName_table_(a2, (const char *)a2, (uint64_t)"subject", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v4 = (unsigned __int8 *)MEMORY[0x1E0D81780];

  return *v4;
}

id *sub_1AE90DD34(id *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v12;
  id v13;
  id v14;
  id *v15;
  objc_super v17;

  v12 = a2;
  v13 = a3;
  v14 = a4;
  if (a1)
  {
    v17.receiver = a1;
    v17.super_class = (Class)GDSQLGraphObjectRetriever;
    v15 = (id *)objc_msgSendSuper2(&v17, sel_init);
    a1 = v15;
    if (v15)
    {
      objc_storeStrong(v15 + 1, a2);
      objc_storeStrong(a1 + 2, a3);
      objc_storeStrong(a1 + 3, a4);
      a1[4] = a5;
      a1[5] = a6;
    }
  }

  return a1;
}

id sub_1AE90E4D4(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  if (!a1 || a2[a1 + 8] < 0)
  {
    v5 = 0;
  }
  else
  {
    objc_msgSend_getDoubleAsNSNumberForColumn_(*(void **)(a1 + 24), a2, a2[a1 + 8]);
    v2 = objc_claimAutoreleasedReturnValue();
    v3 = (void *)v2;
    v4 = &unk_1E5E0CE78;
    if (v2)
      v4 = (void *)v2;
    v5 = v4;

  }
  return v5;
}

__CFString *sub_1AE90E538(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  __CFString *v4;
  __CFString *v5;

  if (!a1 || a2[a1 + 8] < 0)
  {
    v5 = 0;
  }
  else
  {
    objc_msgSend_getNSStringForColumn_(*(void **)(a1 + 24), a2, a2[a1 + 8]);
    v2 = objc_claimAutoreleasedReturnValue();
    v3 = (void *)v2;
    v4 = &stru_1E5DDB0B8;
    if (v2)
      v4 = (__CFString *)v2;
    v5 = v4;

  }
  return v5;
}

void sub_1AE90E770(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int i;
  sqlite3_stmt *v6;
  int v7;
  NSObject *v8;
  _DWORD v9[2];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  if (a1)
  {
    v4 = *(_QWORD *)(a1 + 88);
    if (v4)
    {
      for (i = 51; i > 1; --i)
      {
        v6 = (sqlite3_stmt *)objc_msgSend_stmt(*(void **)(v4 + 24), a2, a3);
        v7 = sqlite3_step(v6);
        if (v7 != 5)
        {
          if (v7 != 6)
            break;
          usleep(0x186A0u);
        }
      }
      if (v7 != 100)
      {
        if (v7 != 101)
        {
          GDViewLog();
          v8 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
          {
            v9[0] = 67109120;
            v9[1] = v7;
            _os_log_error_impl(&dword_1AE4F2000, v8, OS_LOG_TYPE_ERROR, "SQLITE ERROR %d\n", (uint8_t *)v9, 8u);
          }

        }
        *(_BYTE *)(v4 + 32) = 1;
      }
    }
    sub_1AE90E8B0(a1);
  }
}

void sub_1AE90E8B0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  if (a1)
  {
    objc_storeStrong((id *)(a1 + 16), *(id *)(a1 + 8));
    v2 = *(void **)(a1 + 24);
    *(_QWORD *)(a1 + 24) = 0;

    v3 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = 0;

    v4 = *(void **)(a1 + 40);
    *(_QWORD *)(a1 + 40) = 0;

    v5 = *(void **)(a1 + 48);
    *(_QWORD *)(a1 + 48) = 0;

    v6 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 56) = 0;

    v7 = *(void **)(a1 + 64);
    *(_QWORD *)(a1 + 64) = 0;

    v8 = *(void **)(a1 + 72);
    *(_QWORD *)(a1 + 72) = 0;

    v9 = *(void **)(a1 + 80);
    *(_QWORD *)(a1 + 80) = 0;

  }
}

id *sub_1AE90EE0C(id *a1, void *a2, void *a3)
{
  id v6;
  id v7;
  id *v8;
  objc_super v10;

  v6 = a2;
  v7 = a3;
  if (a1)
  {
    v10.receiver = a1;
    v10.super_class = (Class)GDLazyGraphTripleRow;
    v8 = (id *)objc_msgSendSuper2(&v10, sel_init);
    a1 = v8;
    if (v8)
    {
      objc_storeStrong(v8 + 1, a3);
      objc_storeStrong(a1 + 11, a2);
    }
  }

  return a1;
}

_BYTE *sub_1AE90EEA4(_BYTE *a1, int a2, void *a3)
{
  id v6;
  id v7;
  uint64_t v8;
  int v9;
  objc_super v11;

  v6 = a3;
  if (a1)
  {
    v11.receiver = a1;
    v11.super_class = (Class)GDLazyGraphTripleRowCursor;
    v7 = objc_msgSendSuper2(&v11, sel_init);
    a1 = v7;
    if (v7)
    {
      v8 = 0;
      v9 = 0;
      *((_QWORD *)v7 + 1) = -1;
      *((_BYTE *)v7 + 16) = -1;
      do
      {
        if (((1 << v8) & a2) != 0)
          *((_BYTE *)v7 + v8 + 8) = v9++;
        ++v8;
      }
      while (v8 != 9);
      objc_storeStrong((id *)v7 + 3, a3);
      a1[32] = 0;
    }
  }

  return a1;
}

_BYTE *sub_1AE90EF5C(_BYTE *a1, void *a2)
{
  id v4;
  id v5;
  objc_super v7;

  v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)GDSQLTripleRowIterator;
    v5 = objc_msgSendSuper2(&v7, sel_init);
    a1 = v5;
    if (v5)
    {
      objc_storeStrong((id *)v5 + 1, a2);
      a1[16] = 0;
    }
  }

  return a1;
}

uint64_t sub_1AE90F58C(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  void *v5;
  const char *v6;
  double v7;
  double v8;
  const char *v9;
  void *v10;
  GDTopicViewTopic *v11;
  const char *v12;
  void *v13;
  uint64_t v14;
  NSObject *v15;
  const char *v16;
  uint8_t *v17;
  __int16 v19;
  __int16 v20;
  char v21;

  v21 = 0;
  v3 = a2;
  objc_msgSend_getNSStringForColumnName_table_(v3, v4, (uint64_t)"topicId", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_getDoubleForColumnName_table_(v3, v6, (uint64_t)"score", 0);
  v8 = v7;
  objc_msgSend_getNSStringForColumnName_table_(v3, v9, (uint64_t)"most_recent_documentId", 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v5)
  {
    GDViewLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
LABEL_7:

      v14 = *MEMORY[0x1E0D81780];
      goto LABEL_8;
    }
    v20 = 0;
    v16 = "Encountered nil topicId while enumerating topics -- skipping";
    v17 = (uint8_t *)&v20;
LABEL_10:
    _os_log_error_impl(&dword_1AE4F2000, v15, OS_LOG_TYPE_ERROR, v16, v17, 2u);
    goto LABEL_7;
  }
  if (!v10)
  {
    GDViewLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      goto LABEL_7;
    v19 = 0;
    v16 = "Encountered nil mostRecentDocId while enumerating topics -- skipping";
    v17 = (uint8_t *)&v19;
    goto LABEL_10;
  }
  v11 = [GDTopicViewTopic alloc];
  v13 = (void *)objc_msgSend_initWithTopicIdentifier_topicScore_mostRecentDocumentId_(v11, v12, (uint64_t)v5, v10, v8);
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v14 = *MEMORY[0x1E0D81780];

LABEL_8:
  return v14;
}

void sub_1AE9100B0()
{
  void *v0;
  GDViewService *v1;
  const char *v2;
  uint64_t v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  void *v7;

  v0 = (void *)MEMORY[0x1AF45451C]();
  v1 = [GDViewService alloc];
  objc_msgSend_clientService(GDSwiftViewService, v2, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend_initWithSwiftViewService_(v1, v5, (uint64_t)v4);
  v7 = (void *)qword_1ED327220;
  qword_1ED327220 = v6;

  objc_autoreleasePoolPop(v0);
}

void sub_1AE911544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE9119B0(uint64_t a1, const char *a2)
{
  return objc_msgSend_addObject_(*(void **)(a1 + 32), a2, (uint64_t)a2);
}

void *sub_1AE9119BC()
{
  return &unk_1E5E0CD60;
}

void sub_1AE9119C8(uint64_t a1, void *a2)
{
  void *v3;
  const char *v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v5 = a2;
  objc_msgSend_linkEntitiesForPerson_(v3, v4, (uint64_t)v5);
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void *sub_1AE911A28()
{
  return &unk_1E5E0CD38;
}

uint64_t sub_1AE911A34(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE911A44(uint64_t a1)
{

}

void sub_1AE911A4C(uint64_t a1, void *a2, _BYTE *a3)
{
  id v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  char isEqual;
  const char *v20;
  const char *v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  const char *v25;
  uint64_t v26;
  const char *v27;
  void *v28;
  const char *v29;
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[128];
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  objc_msgSend_visualIdentifierObjects(v6, v7, v8, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend_countByEnumeratingWithState_objects_count_(v9, v10, (uint64_t)&v31, v35, 16);
  if (v11)
  {
    v14 = v11;
    v15 = *(_QWORD *)v32;
    while (2)
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v32 != v15)
          objc_enumerationMutation(v9);
        objc_msgSend_visualIdentifier(*(void **)(*((_QWORD *)&v31 + 1) + 8 * v16), v12, v13);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        isEqual = objc_msgSend_isEqual_(v17, v18, *(_QWORD *)(a1 + 32));

        if ((isEqual & 1) != 0)
        {

          objc_msgSend_linkEntitiesForPerson_(*(void **)(a1 + 40), v27, (uint64_t)v6);
          goto LABEL_12;
        }
        ++v16;
      }
      while (v14 != v16);
      v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v9, v12, (uint64_t)&v31, v35, 16);
      if (v14)
        continue;
      break;
    }
  }

  objc_msgSend_linkEntitiesForPerson_(*(void **)(a1 + 40), v20, (uint64_t)v6);
  objc_msgSend_contactIdentifiers(v6, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_containsObject_(v23, v24, *(_QWORD *)(a1 + 32)))
  {

  }
  else
  {
    objc_msgSend_conversationIdentifiers(v6, v25, v26);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v30 = objc_msgSend_containsObject_(v28, v29, *(_QWORD *)(a1 + 32));

    if ((v30 & 1) == 0)
      goto LABEL_13;
  }
LABEL_12:
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
  *a3 = 1;
LABEL_13:

}

void *sub_1AE911C00()
{
  return &unk_1E5E0CD10;
}

void sub_1AE9123C8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1AE912450(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AE91263C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1AE912838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE91288C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE91289C(uint64_t a1)
{

}

void sub_1AE9128A4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCAssetRegistryService: error during overrideAssetEntryForAssetId call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE91296C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE9129E0(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCAssetRegistryService: error during assetEntryDataForAssetId call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE912AA8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE912B1C(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  void *v6;
  uint8_t v7[16];

  GDXPCLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCAssetRegistryServer invalidated.", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_sync_enter(v5);
    v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }

}

void sub_1AE912BBC()
{
  NSObject *v0;
  uint8_t v1[16];

  GDXPCLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_error_impl(&dword_1AE4F2000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCAssetRegistryServer interrupted.", v1, 2u);
  }

}

void sub_1AE912DFC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1AE912E84(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AE913044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE913298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1AE9134F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1AE913740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1AE913904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE913958(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE913968(uint64_t a1)
{

}

void sub_1AE913970(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCCoordinationService: error during migrateViewDatabases call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE913A50(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE913A70(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCCoordinationService: error during streamsUpdated call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE913B50(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE913B70(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  const char *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  void *v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v9 = *(_QWORD *)(a1 + 32);
    objc_msgSend_numberWithBool_(MEMORY[0x1E0CB37E8], v5, *(unsigned __int8 *)(a1 + 56));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = 138412802;
    v12 = v9;
    v13 = 2112;
    v14 = v10;
    v15 = 2112;
    v16 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCCoordinationService: error during streamUpdatedWithStreamName call: %@ %@: %@", (uint8_t *)&v11, 0x20u);

  }
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v3;
  v8 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
}

void sub_1AE913C8C(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE913CAC(_QWORD *a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = a1[4];
    v9 = a1[5];
    v10 = 138412802;
    v11 = v8;
    v12 = 2112;
    v13 = v9;
    v14 = 2112;
    v15 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCCoordinationService: error during sourceUpdated call: %@ %@: %@", (uint8_t *)&v10, 0x20u);
  }

  v5 = *(_QWORD *)(a1[6] + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = 0;
}

void sub_1AE913DA4(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE913DC4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCCoordinationService: error during graphUpdated call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE913EA4(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE913EC4(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  void *v6;
  uint8_t v7[16];

  GDXPCLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_DEFAULT, "GDXPCCoordinationService: Connection invalidated.", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_sync_enter(v5);
    v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }

}

void sub_1AE913F64()
{
  NSObject *v0;
  uint8_t v1[16];

  GDXPCLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_error_impl(&dword_1AE4F2000, v0, OS_LOG_TYPE_ERROR, "GDXPCCoordinationService: Connection interrupted.", v1, 2u);
  }

}

void sub_1AE9141A4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1AE91422C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AE91443C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1AE914670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1AE9148A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1AE914AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE914B2C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE914B3C(uint64_t a1)
{

}

void sub_1AE914B44(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCEntityResolutionService: error during runTest call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE914C0C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE914C80(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCEntityResolutionService: error during runTest call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE914D48(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE914DBC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCEntityResolutionService: error during runTest call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE914E84(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE914EF8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCEntityResolutionService: error during runTest call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE914FC0(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE914FE0(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  void *v6;
  uint8_t v7[16];

  GDXPCLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCEntityResolutionService invalidated.", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_sync_enter(v5);
    v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }

}

void sub_1AE915080()
{
  NSObject *v0;
  uint8_t v1[16];

  GDXPCLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_error_impl(&dword_1AE4F2000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCEntityResolutionService interrupted.", v1, 2u);
  }

}

void sub_1AE9152C0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1AE915348(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AE9154F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AE9156EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AE9158F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE91593C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE91594C(uint64_t a1)
{

}

void sub_1AE915954(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCEventLogService: error during logInstantWithId call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE915A1C(uint64_t a1, int a2, id obj)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), obj);
}

void sub_1AE915A30(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCEventLogService: error during logEndWithId call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE915AF8(uint64_t a1, int a2, id obj)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), obj);
}

void sub_1AE915B0C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCEventLogService: error during logStartWithId call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE915BD4(uint64_t a1, int a2, id obj)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), obj);
}

void sub_1AE915BE8(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  void *v6;
  uint8_t v7[16];

  GDXPCLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCEventLogServer invalidated.", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_sync_enter(v5);
    v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }

}

void sub_1AE915C88()
{
  NSObject *v0;
  uint8_t v1[16];

  GDXPCLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_error_impl(&dword_1AE4F2000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCEventLogServer interrupted.", v1, 2u);
  }

}

void sub_1AE915E5C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1AE915EE4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AE9160C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE916110(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE916120(uint64_t a1)
{

}

void sub_1AE916128(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCFeedbackService: error during logWithFeedbackData call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE9161F0(uint64_t a1, int a2, id obj)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), obj);
}

void sub_1AE916204(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  void *v6;
  uint8_t v7[16];

  GDXPCLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCFeedbackServer invalidated.", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_sync_enter(v5);
    v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }

}

void sub_1AE9162A4()
{
  NSObject *v0;
  uint8_t v1[16];

  GDXPCLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_error_impl(&dword_1AE4F2000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCFeedbackServer interrupted.", v1, 2u);
  }

}

void sub_1AE9164E4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1AE91656C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AE916740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE916794(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE9167A4(uint64_t a1)
{

}

void sub_1AE9167AC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCGraphSimulationService: error during mocking triples for entity tagging call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE91688C(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE9168AC(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  void *v6;
  uint8_t v7[16];

  GDXPCLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCGraphSimulationService invalidated.", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_sync_enter(v5);
    v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }

}

void sub_1AE91694C()
{
  NSObject *v0;
  uint8_t v1[16];

  GDXPCLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_error_impl(&dword_1AE4F2000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCGraphSimulationService interrupted.", v1, 2u);
  }

}

void sub_1AE916B8C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1AE916C14(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AE916E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE916E54(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE916E64(uint64_t a1)
{

}

void sub_1AE916E6C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInferenceSupportService: error during assetEntryDataForAssetId call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE916F34(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE916FA8(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  void *v6;
  uint8_t v7[16];

  GDXPCLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCInferenceSupportServer invalidated.", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_sync_enter(v5);
    v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }

}

void sub_1AE917048()
{
  NSObject *v0;
  uint8_t v1[16];

  GDXPCLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_error_impl(&dword_1AE4F2000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCInferenceSupportServer interrupted.", v1, 2u);
  }

}

void sub_1AE917288(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1AE917310(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AE9174F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1AE9176B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1AE9178C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1AE917AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1AE917CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1AE917E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1AE918048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE91809C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE9180AC(uint64_t a1)
{

}

void sub_1AE9180B4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewValidate call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE91817C(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE91819C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewDumpState call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE91827C(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE91829C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewRunUpdate: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE918384(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE9183F8(_QWORD *a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = a1[4];
    v9 = 138412546;
    v10 = v8;
    v11 = 2112;
    v12 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewSetEnabled [name=%@]: %@", (uint8_t *)&v9, 0x16u);
  }

  v5 = *(_QWORD *)(a1[5] + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 0;
}

void sub_1AE9184E8(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE918508(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewClearAllData call: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE9185F0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE918664(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewStop: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE918744(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE918764(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewRunUpdate: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91884C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE9188C0(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  void *v6;
  uint8_t v7[16];

  GDXPCLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCInternalBiomeServer invalidated.", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_sync_enter(v5);
    v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }

}

void sub_1AE918960()
{
  NSObject *v0;
  uint8_t v1[16];

  GDXPCLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_error_impl(&dword_1AE4F2000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCInternalBiomeServer interrupted.", v1, 2u);
  }

}

void sub_1AE918D00(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1AE918D88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AE918F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE9190EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1AE9192A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE919408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AE9195B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1AE919784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE91993C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1AE919AF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1AE919CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE919E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1AE91A0F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1AE91A2AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE91A47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE91A64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE91A86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_1AE91AB04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_1AE91AD80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_1AE91AFE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_1AE91B278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_1AE91B50C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_1AE91B7A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_1AE91B9CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_1AE91BC04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1AE91BDC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1AE91BFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1AE91C1E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1AE91C3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE91C590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE91C748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1AE91C930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1AE91CB60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1AE91CD28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE91CD7C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE91CD8C(uint64_t a1)
{

}

void sub_1AE91CD94(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during featureKeysWithError call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE91CE5C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91CED0(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = 138412546;
    v9 = v7;
    v10 = 2112;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewSql [name=%@]: %@", (uint8_t *)&v8, 0x16u);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE91CFA8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91D01C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during viewInfo call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE91D0E4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91D158(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during clearEntityTaggingInjectedTags call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE91D238(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE91D258(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during showEntityTaggingInjectedTags call: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91D340(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91D3B4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during injectTagForPerson call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE91D494(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE91D4B4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding mockEntityRelevanceContext: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE91D594(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE91D5B4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding dumpEntityTaggingFeatures: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91D69C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91D710(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during triggerEntityTaggingDataCollection call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE91D7F0(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE91D810(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during generateActivityCentricLifeEvents call: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91D8F8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91D96C(_QWORD *a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = a1[4];
    v11 = 138412546;
    v12 = v10;
    v13 = 2112;
    v14 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding sampleEntityTaggingFeatures [personID=%@]: %@", (uint8_t *)&v11, 0x16u);
  }

  v5 = *(_QWORD *)(a1[5] + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(a1[6] + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91DA64(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91DAD8(_QWORD *a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = a1[4];
    v11 = a1[5];
    v12 = a1[6];
    v13 = 138413058;
    v14 = v10;
    v15 = 2112;
    v16 = v11;
    v17 = 2112;
    v18 = v12;
    v19 = 2112;
    v20 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding evaluate [behaviorType=%@, queryName=%@, inferenceServiceInstanceId=%@]: %@", (uint8_t *)&v13, 0x2Au);
  }

  v5 = *(_QWORD *)(a1[7] + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(a1[8] + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91DBE4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91DC58(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  int v21;
  __int16 v22;
  id v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = *(_QWORD *)(a1 + 40);
    v12 = *(_QWORD *)(a1 + 64);
    v13 = *(unsigned __int8 *)(a1 + 72);
    v14 = 138413314;
    v15 = v10;
    v16 = 2112;
    v17 = v11;
    v18 = 2048;
    v19 = v12;
    v20 = 1024;
    v21 = v13;
    v22 = 2112;
    v23 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during PhotosMetadataWithStartDate [startDate=%@, endDate=%@, maxEvents=%ld, newestFirst=%d]: %@", (uint8_t *)&v14, 0x30u);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91DD78(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91DDEC(_QWORD *a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = a1[4];
    v11 = a1[5];
    v12 = a1[6];
    v13 = 138413058;
    v14 = v10;
    v15 = 2112;
    v16 = v11;
    v17 = 2112;
    v18 = v12;
    v19 = 2112;
    v20 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during ContextData fetch [startDate=%@, endDate=%@, source=%@]: %@", (uint8_t *)&v13, 0x2Au);
  }

  v5 = *(_QWORD *)(a1[7] + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(a1[8] + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91DEF8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91DF6C(_QWORD *a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = a1[4];
    v11 = a1[5];
    v12 = 138412802;
    v13 = v10;
    v14 = 2112;
    v15 = v11;
    v16 = 2112;
    v17 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding featurizedBehaviors [featureName=%@, behaviorType=%@]: %@", (uint8_t *)&v12, 0x20u);
  }

  v5 = *(_QWORD *)(a1[6] + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(a1[7] + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91E06C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91E0E0(_QWORD *a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = a1[4];
    v11 = a1[5];
    v12 = 138412802;
    v13 = v10;
    v14 = 2112;
    v15 = v11;
    v16 = 2112;
    v17 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding histograms [kind=%@, behaviorType=%@]: %@", (uint8_t *)&v12, 0x20u);
  }

  v5 = *(_QWORD *)(a1[6] + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(a1[7] + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91E1E0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91E254(_QWORD *a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = a1[4];
    v11 = a1[5];
    v12 = a1[6];
    v13 = 138413058;
    v14 = v10;
    v15 = 2112;
    v16 = v11;
    v17 = 2112;
    v18 = v12;
    v19 = 2112;
    v20 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding featurizeBehavior [type=%@, identifier=%@, date=%@]: %@", (uint8_t *)&v13, 0x2Au);
  }

  v5 = *(_QWORD *)(a1[7] + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(a1[8] + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91E360(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91E3D4(_QWORD *a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = a1[4];
    v11 = 138412546;
    v12 = v10;
    v13 = 2112;
    v14 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding recentBehaviorsOfType [type=%@]: %@", (uint8_t *)&v11, 0x16u);
  }

  v5 = *(_QWORD *)(a1[5] + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(a1[6] + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91E4CC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91E540(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding Digest call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE91E620(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE91E640(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding ClearAllData call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE91E720(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE91E740(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during Behavior Understanding Status call: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91E828(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91E89C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during runTest call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE91E964(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91E9D8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during vectorSearchBenchmark call: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91EAC0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91EB34(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during validateGraph call: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91EC1C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91EC90(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during benchmark call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE91ED70(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE91ED90(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during runToMatchingPipeline call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE91EE70(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE91EE90(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during runDeltaUpdatePipeline call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE91EF70(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE91EF90(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during stopPipeline call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE91F070(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE91F090(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  const char *v6;
  const char *v7;
  id v8;

  v5 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  v8 = a3;
  objc_msgSend_addObject_(v5, v6, a2);
  objc_msgSend_addObject_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), v7, (uint64_t)v8);

}

void sub_1AE91F0F8(uint64_t a1, uint64_t a2)
{
  NSObject *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  GDXPCLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    v4 = 138412290;
    v5 = a2;
    _os_log_error_impl(&dword_1AE4F2000, v3, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during triplesQuery call: %@", (uint8_t *)&v4, 0xCu);
  }

}

void sub_1AE91F19C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during stats call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE91F264(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91F2D8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during clearStatus call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE91F3B8(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE91F3D8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCInternalService: error during status call: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE91F4C0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE91F534(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  void *v6;
  uint8_t v7[16];

  GDXPCLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCInternalServer invalidated.", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_sync_enter(v5);
    v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }

}

void sub_1AE91F5D4()
{
  NSObject *v0;
  uint8_t v1[16];

  GDXPCLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_error_impl(&dword_1AE4F2000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCInternalServer interrupted.", v1, 2u);
  }

}

void sub_1AE91F814(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1AE91F89C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AE91FC1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  uint64_t v37;

  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 224), 8);
  _Block_object_dispose((const void *)(v37 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1AE920014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;

  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 256), 8);
  _Block_object_dispose((const void *)(v39 - 208), 8);
  _Block_object_dispose((const void *)(v39 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1AE920220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE920274(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE920284(uint64_t a1)
{

}

void sub_1AE92028C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCKnosisService: error during runTest call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE920354(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE9203C8(_QWORD *a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCKnosisService: error during iteratingExecuteKGQ call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(a1[4] + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24) = 1;
  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;

}

void sub_1AE9204B8(_QWORD *a1, void *a2, void *a3)
{
  id v6;
  const char *v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;

  v19 = a3;
  if (a2)
  {
    v6 = a2;
    *(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24) = objc_msgSend_hasMoreAnswers(v6, v7, v8);
    objc_msgSend_offset(v6, v9, v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = *(_QWORD *)(a1[9] + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    objc_msgSend_limit(v6, v14, v15);
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = *(_QWORD *)(a1[10] + 8);
    v18 = *(void **)(v17 + 40);
    *(_QWORD *)(v17 + 40) = v16;

  }
  else
  {
    objc_storeStrong((id *)(*(_QWORD *)(a1[5] + 8) + 40), a3);
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
    *(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24) = 1;
  }
  (*(void (**)(void))(a1[4] + 16))();

}

void sub_1AE9205A8(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t i;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[128];
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v8 = v5;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40))
  {
    if (v5)
      goto LABEL_3;
LABEL_6:
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 3;
    goto LABEL_19;
  }
  objc_msgSend_kgq(v5, v6, v7);
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v16 = *(void **)(v15 + 40);
  *(_QWORD *)(v15 + 40) = v14;

  objc_msgSend_query(v8, v17, v18);
  v19 = objc_claimAutoreleasedReturnValue();
  v20 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v21 = *(void **)(v20 + 40);
  *(_QWORD *)(v20 + 40) = v19;

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = objc_msgSend_status(v8, v22, v23);
  objc_msgSend_debug(v8, v24, v25);
  v26 = objc_claimAutoreleasedReturnValue();
  v27 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v28 = *(void **)(v27 + 40);
  *(_QWORD *)(v27 + 40) = v26;

  if (!v8)
    goto LABEL_6;
LABEL_3:
  if (objc_msgSend_status(v8, v6, v7) == 3)
  {
    objc_msgSend_errorMessage(v8, v9, v10);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

  }
  else
  {
    v42 = 0u;
    v43 = 0u;
    v40 = 0u;
    v41 = 0u;
    objc_msgSend_answers(v8, v9, v10, 0);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = objc_msgSend_countByEnumeratingWithState_objects_count_(v29, v30, (uint64_t)&v40, v44, 16);
    if (v31)
    {
      v33 = v31;
      v34 = *(_QWORD *)v41;
      while (2)
      {
        for (i = 0; i != v33; ++i)
        {
          if (*(_QWORD *)v41 != v34)
            objc_enumerationMutation(v29);
          objc_msgSend_addObject_(*(void **)(a1 + 32), v32, *(_QWORD *)(*((_QWORD *)&v40 + 1) + 8 * i));
          v36 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
          v37 = *(_QWORD *)(v36 + 24);
          v38 = v37 < 1;
          v39 = v37 - 1;
          if (!v38)
          {
            *(_QWORD *)(v36 + 24) = v39;
            if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24))
            {
              *a3 = 1;
              goto LABEL_18;
            }
          }
        }
        v33 = objc_msgSend_countByEnumeratingWithState_objects_count_(v29, v32, (uint64_t)&v40, v44, 16);
        if (v33)
          continue;
        break;
      }
    }
LABEL_18:

  }
LABEL_19:

}

void sub_1AE9207BC(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  void *v6;
  uint8_t v7[16];

  GDXPCLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCKnosisServer invalidated.", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_sync_enter(v5);
    v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }

}

void sub_1AE92085C()
{
  NSObject *v0;
  uint8_t v1[16];

  GDXPCLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_error_impl(&dword_1AE4F2000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCKnosisServer interrupted.", v1, 2u);
  }

}

void sub_1AE920A9C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1AE920B24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AE920CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE920EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE92105C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1AE921214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE921268(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE921278(uint64_t a1)
{

}

void sub_1AE921280(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCKnowledgeConstructionService: error during checkIn call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE921360(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE921380(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCKnowledgeConstructionService: error during stopPipeline call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE921460(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE921480(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCKnowledgeConstructionService: error during runFastpassPipeline call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE921560(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE921580(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCKnowledgeConstructionService: error during runFullPipeline call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE921660(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE921680(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  void *v6;
  uint8_t v7[16];

  GDXPCLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCKnowledgeConstructionService invalidated.", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_sync_enter(v5);
    v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }

}

void sub_1AE921720()
{
  NSObject *v0;
  uint8_t v1[16];

  GDXPCLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_error_impl(&dword_1AE4F2000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCKnowledgeConstructionService interrupted.", v1, 2u);
  }

}

void sub_1AE921960(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1AE9219E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AE921B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE921D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE921DA4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE921DB4(uint64_t a1)
{

}

void sub_1AE921DBC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCLighthouseService: error during collectDBStatus call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE921E84(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  id v8;

  v5 = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a3);
  v8 = a3;
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_1AE921EF0(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCLighthouseService: error during collectDBStats call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE921FB8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  id v8;

  v5 = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a3);
  v8 = a3;
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_1AE922024(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  void *v6;
  uint8_t v7[16];

  GDXPCLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCLighthouseServer invalidated.", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_sync_enter(v5);
    v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }

}

void sub_1AE9220C4()
{
  NSObject *v0;
  uint8_t v1[16];

  GDXPCLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_error_impl(&dword_1AE4F2000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCLighthouseServer interrupted.", v1, 2u);
  }

}

void sub_1AE922304(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1AE92238C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1AE922538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE9226F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE9228B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE922A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE922C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE922C7C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE922C8C(uint64_t a1)
{

}

void sub_1AE922C94(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCSysdiagnoseService: error during Views supplemental diagnostics call: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE922D7C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE922DF0(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCSysdiagnoseService: error during EntityResolution supplemental diagnostics call: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE922ED8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE922F4C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCSysdiagnoseService: error during EntityRelevanceRanking supplemental diagnostics call: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE923034(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE9230A8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCSysdiagnoseService: error during EntityTagging supplemental diagnostics call: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE923190(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE923204(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v10 = 138412290;
    v11 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCSysdiagnoseService: error during diagnostics call: %@", (uint8_t *)&v10, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0;

}

void sub_1AE9232EC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE923360(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  void *v6;
  uint8_t v7[16];

  GDXPCLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_DEFAULT, "GDXPCSysdiagnoseService: Connection invalidated.", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_sync_enter(v5);
    v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }

}

void sub_1AE923400()
{
  NSObject *v0;
  uint8_t v1[16];

  GDXPCLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_error_impl(&dword_1AE4F2000, v0, OS_LOG_TYPE_ERROR, "GDXPCSysdiagnoseService: Connection interrupted.", v1, 2u);
  }

}

void sub_1AE9236D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE923898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AE923A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1AE923CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1AE923D1C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1AE923D2C(uint64_t a1)
{

}

void sub_1AE923D34(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCViewService: error during reportSQLiteErrorForViewName call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE923DFC(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE923E1C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCViewService: error during reportUnknownErrorForViewName call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE923EE4(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE923F04(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCViewService: error during accessTokenForFeaturesWithIsSandboxed call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE923FCC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE924040(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCViewService: error during accessTokenForViewName call: %@", (uint8_t *)&v7, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;

}

void sub_1AE924108(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v5;
  v11 = v5;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v6;

}

void sub_1AE92417C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  id v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  GDXPCLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    v8 = 138412290;
    v9 = v3;
    _os_log_error_impl(&dword_1AE4F2000, v4, OS_LOG_TYPE_ERROR, "GDXPCViewService: error during runUpdateWithViewName call: %@", (uint8_t *)&v8, 0xCu);
  }

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v3;
  v7 = v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
}

void sub_1AE92425C(uint64_t a1, char a2, id obj)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
}

void sub_1AE92427C(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  void *v6;
  uint8_t v7[16];

  GDXPCLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1AE4F2000, v2, OS_LOG_TYPE_DEFAULT, "Connection to GDXPCViewServer invalidated.", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_sync_enter(v5);
    v6 = (void *)v5[1];
    v5[1] = 0;

    objc_sync_exit(v5);
  }

}

void sub_1AE92431C()
{
  NSObject *v0;
  uint8_t v1[16];

  GDXPCLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v1 = 0;
    _os_log_error_impl(&dword_1AE4F2000, v0, OS_LOG_TYPE_ERROR, "Connection to GDXPCViewServer interrupted.", v1, 2u);
  }

}

uint64_t sub_1AE924384()
{
  return MEMORY[0x1E0CADD78]();
}

uint64_t sub_1AE924390()
{
  return MEMORY[0x1E0CADE20]();
}

uint64_t sub_1AE92439C()
{
  return MEMORY[0x1E0CADFF0]();
}

uint64_t sub_1AE9243A8()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1AE9243B4()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1AE9243C0()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1AE9243CC()
{
  return MEMORY[0x1E0CAE0C8]();
}

uint64_t sub_1AE9243D8()
{
  return MEMORY[0x1E0CAE0E0]();
}

uint64_t sub_1AE9243E4()
{
  return MEMORY[0x1E0CAE100]();
}

uint64_t sub_1AE9243F0()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1AE9243FC()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1AE924408()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1AE924414()
{
  return MEMORY[0x1E0CAE210]();
}

uint64_t sub_1AE924420()
{
  return MEMORY[0x1E0CAE218]();
}

uint64_t sub_1AE92442C()
{
  return MEMORY[0x1E0CAE220]();
}

uint64_t sub_1AE924438()
{
  return MEMORY[0x1E0CAE228]();
}

uint64_t sub_1AE924444()
{
  return MEMORY[0x1E0CAE230]();
}

uint64_t sub_1AE924450()
{
  return MEMORY[0x1E0CAE248]();
}

uint64_t sub_1AE92445C()
{
  return MEMORY[0x1E0CAE250]();
}

uint64_t sub_1AE924468()
{
  return MEMORY[0x1E0CAE300]();
}

uint64_t sub_1AE924474()
{
  return MEMORY[0x1E0CAE308]();
}

uint64_t sub_1AE924480()
{
  return MEMORY[0x1E0CAE310]();
}

uint64_t sub_1AE92448C()
{
  return MEMORY[0x1E0CAE328]();
}

uint64_t sub_1AE924498()
{
  return MEMORY[0x1E0CAE390]();
}

uint64_t sub_1AE9244A4()
{
  return MEMORY[0x1E0CAE418]();
}

uint64_t sub_1AE9244B0()
{
  return MEMORY[0x1E0CAE430]();
}

uint64_t sub_1AE9244BC()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1AE9244C8()
{
  return MEMORY[0x1E0CAE578]();
}

uint64_t sub_1AE9244D4()
{
  return MEMORY[0x1E0CAE580]();
}

uint64_t sub_1AE9244E0()
{
  return MEMORY[0x1E0CAE5A0]();
}

uint64_t sub_1AE9244EC()
{
  return MEMORY[0x1E0CAE5D0]();
}

uint64_t sub_1AE9244F8()
{
  return MEMORY[0x1E0CAE6D0]();
}

uint64_t sub_1AE924504()
{
  return MEMORY[0x1E0CAE6E0]();
}

uint64_t sub_1AE924510()
{
  return MEMORY[0x1E0CAE6F8]();
}

uint64_t sub_1AE92451C()
{
  return MEMORY[0x1E0CAE8A8]();
}

uint64_t sub_1AE924528()
{
  return MEMORY[0x1E0CAE8B8]();
}

uint64_t sub_1AE924534()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1AE924540()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1AE92454C()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1AE924558()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_1AE924564()
{
  return MEMORY[0x1E0CAE9C8]();
}

uint64_t sub_1AE924570()
{
  return MEMORY[0x1E0CAE9F0]();
}

uint64_t sub_1AE92457C()
{
  return MEMORY[0x1E0CAEA10]();
}

uint64_t sub_1AE924588()
{
  return MEMORY[0x1E0CAEA20]();
}

uint64_t sub_1AE924594()
{
  return MEMORY[0x1E0CAEA80]();
}

uint64_t sub_1AE9245A0()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_1AE9245AC()
{
  return MEMORY[0x1E0CAEE50]();
}

uint64_t sub_1AE9245B8()
{
  return MEMORY[0x1E0CAEEB8]();
}

uint64_t sub_1AE9245C4()
{
  return MEMORY[0x1E0CAEEC0]();
}

uint64_t sub_1AE9245D0()
{
  return MEMORY[0x1E0CAEEC8]();
}

uint64_t sub_1AE9245DC()
{
  return MEMORY[0x1E0CAEED0]();
}

uint64_t sub_1AE9245E8()
{
  return MEMORY[0x1E0CAF548]();
}

uint64_t sub_1AE9245F4()
{
  return MEMORY[0x1E0CAF5F8]();
}

uint64_t sub_1AE924600()
{
  return MEMORY[0x1E0CAF608]();
}

uint64_t sub_1AE92460C()
{
  return MEMORY[0x1E0CAF628]();
}

uint64_t sub_1AE924618()
{
  return MEMORY[0x1E0CAF638]();
}

uint64_t sub_1AE924624()
{
  return MEMORY[0x1E0CAF668]();
}

uint64_t sub_1AE924630()
{
  return MEMORY[0x1E0CAF670]();
}

uint64_t sub_1AE92463C()
{
  return MEMORY[0x1E0CAF6F8]();
}

uint64_t sub_1AE924648()
{
  return MEMORY[0x1E0CAF708]();
}

uint64_t sub_1AE924654()
{
  return MEMORY[0x1E0CAF718]();
}

uint64_t sub_1AE924660()
{
  return MEMORY[0x1E0CAF730]();
}

uint64_t sub_1AE92466C()
{
  return MEMORY[0x1E0CAF740]();
}

uint64_t sub_1AE924678()
{
  return MEMORY[0x1E0CAF750]();
}

uint64_t sub_1AE924684()
{
  return MEMORY[0x1E0CAF768]();
}

uint64_t sub_1AE924690()
{
  return MEMORY[0x1E0CAF788]();
}

uint64_t sub_1AE92469C()
{
  return MEMORY[0x1E0CAF790]();
}

uint64_t sub_1AE9246A8()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1AE9246B4()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1AE9246C0()
{
  return MEMORY[0x1E0CAFB58]();
}

uint64_t sub_1AE9246CC()
{
  return MEMORY[0x1E0CAFD30]();
}

uint64_t sub_1AE9246D8()
{
  return MEMORY[0x1E0CAFD38]();
}

uint64_t sub_1AE9246E4()
{
  return MEMORY[0x1E0CAFD90]();
}

uint64_t sub_1AE9246F0()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1AE9246FC()
{
  return MEMORY[0x1E0CAFDE0]();
}

uint64_t sub_1AE924708()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1AE924714()
{
  return MEMORY[0x1E0CAFE50]();
}

uint64_t sub_1AE924720()
{
  return MEMORY[0x1E0CAFE78]();
}

uint64_t sub_1AE92472C()
{
  return MEMORY[0x1E0CAFE80]();
}

uint64_t sub_1AE924738()
{
  return MEMORY[0x1E0CAFE90]();
}

uint64_t sub_1AE924744()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1AE924750()
{
  return MEMORY[0x1E0CAFF30]();
}

uint64_t sub_1AE92475C()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_1AE924768()
{
  return MEMORY[0x1E0CAFF98]();
}

uint64_t sub_1AE924774()
{
  return MEMORY[0x1E0CAFFD0]();
}

uint64_t sub_1AE924780()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1AE92478C()
{
  return MEMORY[0x1E0CB0080]();
}

uint64_t sub_1AE924798()
{
  return MEMORY[0x1E0CB0088]();
}

uint64_t sub_1AE9247A4()
{
  return MEMORY[0x1E0CB0098]();
}

uint64_t sub_1AE9247B0()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1AE9247BC()
{
  return MEMORY[0x1E0CB00F8]();
}

uint64_t sub_1AE9247C8()
{
  return MEMORY[0x1E0D235C0]();
}

uint64_t sub_1AE9247D4()
{
  return MEMORY[0x1E0CB0140]();
}

uint64_t sub_1AE9247E0()
{
  return MEMORY[0x1E0CB0160]();
}

uint64_t sub_1AE9247EC()
{
  return MEMORY[0x1E0CB0178]();
}

uint64_t sub_1AE9247F8()
{
  return MEMORY[0x1E0CB0188]();
}

uint64_t sub_1AE924804()
{
  return MEMORY[0x1E0CB01B8]();
}

uint64_t sub_1AE924810()
{
  return MEMORY[0x1E0CB01D8]();
}

uint64_t sub_1AE92481C()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1AE924828()
{
  return MEMORY[0x1E0CB0218]();
}

uint64_t sub_1AE924834()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1AE924840()
{
  return MEMORY[0x1E0CB0240]();
}

uint64_t sub_1AE92484C()
{
  return MEMORY[0x1E0CB0270]();
}

uint64_t sub_1AE924858()
{
  return MEMORY[0x1E0CB03B8]();
}

uint64_t sub_1AE924864()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t sub_1AE924870()
{
  return MEMORY[0x1E0CB0680]();
}

uint64_t sub_1AE92487C()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1AE924888()
{
  return MEMORY[0x1E0CB06D0]();
}

uint64_t sub_1AE924894()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1AE9248A0()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1AE9248AC()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1AE9248B8()
{
  return MEMORY[0x1E0CB0830]();
}

uint64_t sub_1AE9248C4()
{
  return MEMORY[0x1E0CB0840]();
}

uint64_t sub_1AE9248D0()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1AE9248DC()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1AE9248E8()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1AE9248F4()
{
  return MEMORY[0x1E0CB0930]();
}

uint64_t sub_1AE924900()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_1AE92490C()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1AE924918()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1AE924924()
{
  return MEMORY[0x1E0CB0A80]();
}

uint64_t sub_1AE924930()
{
  return MEMORY[0x1E0CB0BE0]();
}

uint64_t sub_1AE92493C()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_1AE924948()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1AE924954()
{
  return MEMORY[0x1E0CB0F38]();
}

uint64_t sub_1AE924960()
{
  return MEMORY[0x1E0CB0FB0]();
}

uint64_t sub_1AE92496C()
{
  return MEMORY[0x1E0CB0FB8]();
}

uint64_t sub_1AE924978()
{
  return MEMORY[0x1E0CB1060]();
}

uint64_t sub_1AE924984()
{
  return MEMORY[0x1E0CB1068]();
}

uint64_t sub_1AE924990()
{
  return MEMORY[0x1E0CB1070]();
}

uint64_t sub_1AE92499C()
{
  return MEMORY[0x1E0CB10C8]();
}

uint64_t sub_1AE9249A8()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t sub_1AE9249B4()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_1AE9249C0()
{
  return MEMORY[0x1E0CB1438]();
}

uint64_t sub_1AE9249CC()
{
  return MEMORY[0x1E0CB1440]();
}

uint64_t sub_1AE9249D8()
{
  return MEMORY[0x1E0CB1470]();
}

uint64_t sub_1AE9249E4()
{
  return MEMORY[0x1E0D20EF8]();
}

uint64_t sub_1AE9249F0()
{
  return MEMORY[0x1E0D235F0]();
}

uint64_t sub_1AE9249FC()
{
  return MEMORY[0x1E0D23600]();
}

uint64_t sub_1AE924A08()
{
  return MEMORY[0x1E0D23938]();
}

uint64_t sub_1AE924A14()
{
  return MEMORY[0x1E0D23940]();
}

uint64_t sub_1AE924A20()
{
  return MEMORY[0x1E0D23948]();
}

uint64_t sub_1AE924A2C()
{
  return MEMORY[0x1E0D23990]();
}

uint64_t sub_1AE924A38()
{
  return MEMORY[0x1E0D23998]();
}

uint64_t sub_1AE924A44()
{
  return MEMORY[0x1E0D239A0]();
}

uint64_t sub_1AE924A50()
{
  return MEMORY[0x1E0D239A8]();
}

uint64_t sub_1AE924A5C()
{
  return MEMORY[0x1E0D239B0]();
}

uint64_t sub_1AE924A68()
{
  return MEMORY[0x1E0D239B8]();
}

uint64_t sub_1AE924A74()
{
  return MEMORY[0x1E0D239C8]();
}

uint64_t sub_1AE924A80()
{
  return MEMORY[0x1E0D239E0]();
}

uint64_t sub_1AE924A8C()
{
  return MEMORY[0x1E0D239F0]();
}

uint64_t sub_1AE924A98()
{
  return MEMORY[0x1E0D23A00]();
}

uint64_t sub_1AE924AA4()
{
  return MEMORY[0x1E0D23A10]();
}

uint64_t sub_1AE924AB0()
{
  return MEMORY[0x1E0D23A18]();
}

uint64_t sub_1AE924ABC()
{
  return MEMORY[0x1E0D23A20]();
}

uint64_t sub_1AE924AC8()
{
  return MEMORY[0x1E0D23A30]();
}

uint64_t sub_1AE924AD4()
{
  return MEMORY[0x1E0D23A38]();
}

uint64_t sub_1AE924AE0()
{
  return MEMORY[0x1E0D23A40]();
}

uint64_t sub_1AE924AEC()
{
  return MEMORY[0x1E0D23A48]();
}

uint64_t sub_1AE924AF8()
{
  return MEMORY[0x1E0D23A50]();
}

uint64_t sub_1AE924B04()
{
  return MEMORY[0x1E0D23A60]();
}

uint64_t sub_1AE924B10()
{
  return MEMORY[0x1E0D23A80]();
}

uint64_t sub_1AE924B1C()
{
  return MEMORY[0x1E0D23B38]();
}

uint64_t sub_1AE924B28()
{
  return MEMORY[0x1E0D23B40]();
}

uint64_t sub_1AE924B34()
{
  return MEMORY[0x1E0D23B48]();
}

uint64_t sub_1AE924B40()
{
  return MEMORY[0x1E0D23B50]();
}

uint64_t sub_1AE924B4C()
{
  return MEMORY[0x1E0D23B60]();
}

uint64_t sub_1AE924B58()
{
  return MEMORY[0x1E0D23B68]();
}

uint64_t sub_1AE924B64()
{
  return MEMORY[0x1E0D23B70]();
}

uint64_t sub_1AE924B70()
{
  return MEMORY[0x1E0D23B78]();
}

uint64_t sub_1AE924B7C()
{
  return MEMORY[0x1E0D23B80]();
}

uint64_t sub_1AE924B88()
{
  return MEMORY[0x1E0D23BA0]();
}

uint64_t sub_1AE924B94()
{
  return MEMORY[0x1E0D23BB8]();
}

uint64_t sub_1AE924BA0()
{
  return MEMORY[0x1E0D23BF0]();
}

uint64_t sub_1AE924BAC()
{
  return MEMORY[0x1E0D23C10]();
}

uint64_t sub_1AE924BB8()
{
  return MEMORY[0x1E0D23C30]();
}

uint64_t sub_1AE924BC4()
{
  return MEMORY[0x1E0D23C40]();
}

uint64_t sub_1AE924BD0()
{
  return MEMORY[0x1E0D23C58]();
}

uint64_t sub_1AE924BDC()
{
  return MEMORY[0x1E0D23C68]();
}

uint64_t sub_1AE924BE8()
{
  return MEMORY[0x1E0D23C70]();
}

uint64_t sub_1AE924BF4()
{
  return MEMORY[0x1E0D23C78]();
}

uint64_t sub_1AE924C00()
{
  return MEMORY[0x1E0D23C88]();
}

uint64_t sub_1AE924C0C()
{
  return MEMORY[0x1E0D23CA0]();
}

uint64_t sub_1AE924C18()
{
  return MEMORY[0x1E0D23CB0]();
}

uint64_t sub_1AE924C24()
{
  return MEMORY[0x1E0D23CB8]();
}

uint64_t sub_1AE924C30()
{
  return MEMORY[0x1E0D23CE0]();
}

uint64_t sub_1AE924C3C()
{
  return MEMORY[0x1E0D23D18]();
}

uint64_t sub_1AE924C48()
{
  return MEMORY[0x1E0D23D28]();
}

uint64_t sub_1AE924C54()
{
  return MEMORY[0x1E0D23D40]();
}

uint64_t sub_1AE924C60()
{
  return MEMORY[0x1E0D23D70]();
}

uint64_t sub_1AE924C6C()
{
  return MEMORY[0x1E0D23D90]();
}

uint64_t sub_1AE924C78()
{
  return MEMORY[0x1E0D23D98]();
}

uint64_t sub_1AE924C84()
{
  return MEMORY[0x1E0D23DA0]();
}

uint64_t sub_1AE924C90()
{
  return MEMORY[0x1E0D23DA8]();
}

uint64_t sub_1AE924C9C()
{
  return MEMORY[0x1E0D23DC8]();
}

uint64_t sub_1AE924CA8()
{
  return MEMORY[0x1E0D23DE0]();
}

uint64_t sub_1AE924CB4()
{
  return MEMORY[0x1E0D23DE8]();
}

uint64_t sub_1AE924CC0()
{
  return MEMORY[0x1E0D23DF8]();
}

uint64_t sub_1AE924CCC()
{
  return MEMORY[0x1E0D23E00]();
}

uint64_t sub_1AE924CD8()
{
  return MEMORY[0x1E0D23E30]();
}

uint64_t sub_1AE924CE4()
{
  return MEMORY[0x1E0D23E38]();
}

uint64_t sub_1AE924CF0()
{
  return MEMORY[0x1E0D23E50]();
}

uint64_t sub_1AE924CFC()
{
  return MEMORY[0x1E0D23E58]();
}

uint64_t sub_1AE924D08()
{
  return MEMORY[0x1E0D23E68]();
}

uint64_t sub_1AE924D14()
{
  return MEMORY[0x1E0D23E70]();
}

uint64_t sub_1AE924D20()
{
  return MEMORY[0x1E0D23E78]();
}

uint64_t sub_1AE924D2C()
{
  return MEMORY[0x1E0D23E80]();
}

uint64_t sub_1AE924D38()
{
  return MEMORY[0x1E0D23E88]();
}

uint64_t sub_1AE924D44()
{
  return MEMORY[0x1E0D23E90]();
}

uint64_t sub_1AE924D50()
{
  return MEMORY[0x1E0D23EA0]();
}

uint64_t sub_1AE924D5C()
{
  return MEMORY[0x1E0D23EB0]();
}

uint64_t sub_1AE924D68()
{
  return MEMORY[0x1E0D23EB8]();
}

uint64_t sub_1AE924D74()
{
  return MEMORY[0x1E0D23EC0]();
}

uint64_t sub_1AE924D80()
{
  return MEMORY[0x1E0D23EC8]();
}

uint64_t sub_1AE924D8C()
{
  return MEMORY[0x1E0D23ED0]();
}

uint64_t sub_1AE924D98()
{
  return MEMORY[0x1E0D23EE8]();
}

uint64_t sub_1AE924DA4()
{
  return MEMORY[0x1E0D23EF8]();
}

uint64_t sub_1AE924DB0()
{
  return MEMORY[0x1E0D23F00]();
}

uint64_t sub_1AE924DBC()
{
  return MEMORY[0x1E0D23F08]();
}

uint64_t sub_1AE924DC8()
{
  return MEMORY[0x1E0D23F10]();
}

uint64_t sub_1AE924DD4()
{
  return MEMORY[0x1E0D23F20]();
}

uint64_t sub_1AE924DE0()
{
  return MEMORY[0x1E0D23F28]();
}

uint64_t sub_1AE924DEC()
{
  return MEMORY[0x1E0D23F38]();
}

uint64_t sub_1AE924DF8()
{
  return MEMORY[0x1E0D23F40]();
}

uint64_t sub_1AE924E04()
{
  return MEMORY[0x1E0D23F48]();
}

uint64_t sub_1AE924E10()
{
  return MEMORY[0x1E0D23F50]();
}

uint64_t sub_1AE924E1C()
{
  return MEMORY[0x1E0D23F58]();
}

uint64_t sub_1AE924E28()
{
  return MEMORY[0x1E0D23F60]();
}

uint64_t sub_1AE924E34()
{
  return MEMORY[0x1E0D23F68]();
}

uint64_t sub_1AE924E40()
{
  return MEMORY[0x1E0D23F70]();
}

uint64_t sub_1AE924E4C()
{
  return MEMORY[0x1E0D23F78]();
}

uint64_t sub_1AE924E58()
{
  return MEMORY[0x1E0D23F80]();
}

uint64_t sub_1AE924E64()
{
  return MEMORY[0x1E0D23F88]();
}

uint64_t sub_1AE924E70()
{
  return MEMORY[0x1E0D23FA0]();
}

uint64_t sub_1AE924E7C()
{
  return MEMORY[0x1E0D23FA8]();
}

uint64_t sub_1AE924E88()
{
  return MEMORY[0x1E0D23FB0]();
}

uint64_t sub_1AE924E94()
{
  return MEMORY[0x1E0D23FB8]();
}

uint64_t sub_1AE924EA0()
{
  return MEMORY[0x1E0D23FC8]();
}

uint64_t sub_1AE924EAC()
{
  return MEMORY[0x1E0D23FD0]();
}

uint64_t sub_1AE924EB8()
{
  return MEMORY[0x1E0D23FE8]();
}

uint64_t sub_1AE924EC4()
{
  return MEMORY[0x1E0D23FF8]();
}

uint64_t sub_1AE924ED0()
{
  return MEMORY[0x1E0D24000]();
}

uint64_t sub_1AE924EDC()
{
  return MEMORY[0x1E0D24010]();
}

uint64_t sub_1AE924EE8()
{
  return MEMORY[0x1E0D24020]();
}

uint64_t sub_1AE924EF4()
{
  return MEMORY[0x1E0D24030]();
}

uint64_t sub_1AE924F00()
{
  return MEMORY[0x1E0D24040]();
}

uint64_t sub_1AE924F0C()
{
  return MEMORY[0x1E0D24050]();
}

uint64_t sub_1AE924F18()
{
  return MEMORY[0x1E0D24058]();
}

uint64_t sub_1AE924F24()
{
  return MEMORY[0x1E0D24060]();
}

uint64_t sub_1AE924F30()
{
  return MEMORY[0x1E0D24070]();
}

uint64_t sub_1AE924F3C()
{
  return MEMORY[0x1E0D24078]();
}

uint64_t sub_1AE924F48()
{
  return MEMORY[0x1E0D24080]();
}

uint64_t sub_1AE924F54()
{
  return MEMORY[0x1E0D24090]();
}

uint64_t sub_1AE924F60()
{
  return MEMORY[0x1E0D240A8]();
}

uint64_t sub_1AE924F6C()
{
  return MEMORY[0x1E0D240B0]();
}

uint64_t sub_1AE924F78()
{
  return MEMORY[0x1E0D240D8]();
}

uint64_t sub_1AE924F84()
{
  return MEMORY[0x1E0D240E0]();
}

uint64_t sub_1AE924F90()
{
  return MEMORY[0x1E0D240E8]();
}

uint64_t sub_1AE924F9C()
{
  return MEMORY[0x1E0D24118]();
}

uint64_t sub_1AE924FA8()
{
  return MEMORY[0x1E0D24120]();
}

uint64_t sub_1AE924FB4()
{
  return MEMORY[0x1E0D24130]();
}

uint64_t sub_1AE924FC0()
{
  return MEMORY[0x1E0D24148]();
}

uint64_t sub_1AE924FCC()
{
  return MEMORY[0x1E0D24150]();
}

uint64_t sub_1AE924FD8()
{
  return MEMORY[0x1E0D24178]();
}

uint64_t sub_1AE924FE4()
{
  return MEMORY[0x1E0D241A0]();
}

uint64_t sub_1AE924FF0()
{
  return MEMORY[0x1E0D241A8]();
}

uint64_t sub_1AE924FFC()
{
  return MEMORY[0x1E0D241B0]();
}

uint64_t sub_1AE925008()
{
  return MEMORY[0x1E0D241C8]();
}

uint64_t sub_1AE925014()
{
  return MEMORY[0x1E0D241D0]();
}

uint64_t sub_1AE925020()
{
  return MEMORY[0x1E0D241E0]();
}

uint64_t sub_1AE92502C()
{
  return MEMORY[0x1E0D241E8]();
}

uint64_t sub_1AE925038()
{
  return MEMORY[0x1E0D24228]();
}

uint64_t sub_1AE925044()
{
  return MEMORY[0x1E0D24230]();
}

uint64_t sub_1AE925050()
{
  return MEMORY[0x1E0D24238]();
}

uint64_t sub_1AE92505C()
{
  return MEMORY[0x1E0D24248]();
}

uint64_t sub_1AE925068()
{
  return MEMORY[0x1E0D24250]();
}

uint64_t sub_1AE925074()
{
  return MEMORY[0x1E0D24258]();
}

uint64_t sub_1AE925080()
{
  return MEMORY[0x1E0D24278]();
}

uint64_t sub_1AE92508C()
{
  return MEMORY[0x1E0D242C8]();
}

uint64_t sub_1AE925098()
{
  return MEMORY[0x1E0D242D8]();
}

uint64_t sub_1AE9250A4()
{
  return MEMORY[0x1E0D242E0]();
}

uint64_t sub_1AE9250B0()
{
  return MEMORY[0x1E0D242E8]();
}

uint64_t sub_1AE9250BC()
{
  return MEMORY[0x1E0D242F0]();
}

uint64_t sub_1AE9250C8()
{
  return MEMORY[0x1E0D242F8]();
}

uint64_t sub_1AE9250D4()
{
  return MEMORY[0x1E0D24300]();
}

uint64_t sub_1AE9250E0()
{
  return MEMORY[0x1E0D24308]();
}

uint64_t sub_1AE9250EC()
{
  return MEMORY[0x1E0D24310]();
}

uint64_t sub_1AE9250F8()
{
  return MEMORY[0x1E0D24360]();
}

uint64_t sub_1AE925104()
{
  return MEMORY[0x1E0D24368]();
}

uint64_t sub_1AE925110()
{
  return MEMORY[0x1E0D24378]();
}

uint64_t sub_1AE92511C()
{
  return MEMORY[0x1E0D24390]();
}

uint64_t sub_1AE925128()
{
  return MEMORY[0x1E0D24398]();
}

uint64_t sub_1AE925134()
{
  return MEMORY[0x1E0D243A0]();
}

uint64_t sub_1AE925140()
{
  return MEMORY[0x1E0D243A8]();
}

uint64_t sub_1AE92514C()
{
  return MEMORY[0x1E0D243C8]();
}

uint64_t sub_1AE925158()
{
  return MEMORY[0x1E0D243D8]();
}

uint64_t sub_1AE925164()
{
  return MEMORY[0x1E0D243F8]();
}

uint64_t sub_1AE925170()
{
  return MEMORY[0x1E0D24400]();
}

uint64_t sub_1AE92517C()
{
  return MEMORY[0x1E0D24408]();
}

uint64_t sub_1AE925188()
{
  return MEMORY[0x1E0D24410]();
}

uint64_t sub_1AE925194()
{
  return MEMORY[0x1E0D24418]();
}

uint64_t sub_1AE9251A0()
{
  return MEMORY[0x1E0D24420]();
}

uint64_t sub_1AE9251AC()
{
  return MEMORY[0x1E0D24448]();
}

uint64_t sub_1AE9251B8()
{
  return MEMORY[0x1E0D24450]();
}

uint64_t sub_1AE9251C4()
{
  return MEMORY[0x1E0D24478]();
}

uint64_t sub_1AE9251D0()
{
  return MEMORY[0x1E0D24488]();
}

uint64_t sub_1AE9251DC()
{
  return MEMORY[0x1E0D24498]();
}

uint64_t sub_1AE9251E8()
{
  return MEMORY[0x1E0D244A8]();
}

uint64_t sub_1AE9251F4()
{
  return MEMORY[0x1E0D244B0]();
}

uint64_t sub_1AE925200()
{
  return MEMORY[0x1E0D244B8]();
}

uint64_t sub_1AE92520C()
{
  return MEMORY[0x1E0D244C8]();
}

uint64_t sub_1AE925218()
{
  return MEMORY[0x1E0D244D8]();
}

uint64_t sub_1AE925224()
{
  return MEMORY[0x1E0D244E0]();
}

uint64_t sub_1AE925230()
{
  return MEMORY[0x1E0D24500]();
}

uint64_t sub_1AE92523C()
{
  return MEMORY[0x1E0D24508]();
}

uint64_t sub_1AE925248()
{
  return MEMORY[0x1E0D24510]();
}

uint64_t sub_1AE925254()
{
  return MEMORY[0x1E0D24518]();
}

uint64_t sub_1AE925260()
{
  return MEMORY[0x1E0D24520]();
}

uint64_t sub_1AE92526C()
{
  return MEMORY[0x1E0D24538]();
}

uint64_t sub_1AE925278()
{
  return MEMORY[0x1E0D24560]();
}

uint64_t sub_1AE925284()
{
  return MEMORY[0x1E0D24568]();
}

uint64_t sub_1AE925290()
{
  return MEMORY[0x1E0D24570]();
}

uint64_t sub_1AE92529C()
{
  return MEMORY[0x1E0D24578]();
}

uint64_t sub_1AE9252A8()
{
  return MEMORY[0x1E0D24580]();
}

uint64_t sub_1AE9252B4()
{
  return MEMORY[0x1E0D24588]();
}

uint64_t sub_1AE9252C0()
{
  return MEMORY[0x1E0D24598]();
}

uint64_t sub_1AE9252CC()
{
  return MEMORY[0x1E0D245B0]();
}

uint64_t sub_1AE9252D8()
{
  return MEMORY[0x1E0D245B8]();
}

uint64_t sub_1AE9252E4()
{
  return MEMORY[0x1E0D245C0]();
}

uint64_t sub_1AE9252F0()
{
  return MEMORY[0x1E0D245C8]();
}

uint64_t sub_1AE9252FC()
{
  return MEMORY[0x1E0D245D0]();
}

uint64_t sub_1AE925308()
{
  return MEMORY[0x1E0D245D8]();
}

uint64_t sub_1AE925314()
{
  return MEMORY[0x1E0D245E0]();
}

uint64_t sub_1AE925320()
{
  return MEMORY[0x1E0D245E8]();
}

uint64_t sub_1AE92532C()
{
  return MEMORY[0x1E0D245F8]();
}

uint64_t sub_1AE925338()
{
  return MEMORY[0x1E0D24608]();
}

uint64_t sub_1AE925344()
{
  return MEMORY[0x1E0D24610]();
}

uint64_t sub_1AE925350()
{
  return MEMORY[0x1E0D24618]();
}

uint64_t sub_1AE92535C()
{
  return MEMORY[0x1E0D24620]();
}

uint64_t sub_1AE925368()
{
  return MEMORY[0x1E0D24630]();
}

uint64_t sub_1AE925374()
{
  return MEMORY[0x1E0D24670]();
}

uint64_t sub_1AE925380()
{
  return MEMORY[0x1E0D24678]();
}

uint64_t sub_1AE92538C()
{
  return MEMORY[0x1E0D24680]();
}

uint64_t sub_1AE925398()
{
  return MEMORY[0x1E0D24690]();
}

uint64_t sub_1AE9253A4()
{
  return MEMORY[0x1E0D246A8]();
}

uint64_t sub_1AE9253B0()
{
  return MEMORY[0x1E0D246C0]();
}

uint64_t sub_1AE9253BC()
{
  return MEMORY[0x1E0D246D8]();
}

uint64_t sub_1AE9253C8()
{
  return MEMORY[0x1E0D246F0]();
}

uint64_t sub_1AE9253D4()
{
  return MEMORY[0x1E0D246F8]();
}

uint64_t sub_1AE9253E0()
{
  return MEMORY[0x1E0D24700]();
}

uint64_t sub_1AE9253EC()
{
  return MEMORY[0x1E0D24708]();
}

uint64_t sub_1AE9253F8()
{
  return MEMORY[0x1E0D24710]();
}

uint64_t sub_1AE925404()
{
  return MEMORY[0x1E0D24728]();
}

uint64_t sub_1AE925410()
{
  return MEMORY[0x1E0D24760]();
}

uint64_t sub_1AE92541C()
{
  return MEMORY[0x1E0D24768]();
}

uint64_t sub_1AE925428()
{
  return MEMORY[0x1E0D24790]();
}

uint64_t sub_1AE925434()
{
  return MEMORY[0x1E0D247A8]();
}

uint64_t sub_1AE925440()
{
  return MEMORY[0x1E0D247B8]();
}

uint64_t sub_1AE92544C()
{
  return MEMORY[0x1E0D247C8]();
}

uint64_t sub_1AE925458()
{
  return MEMORY[0x1E0D247D8]();
}

uint64_t sub_1AE925464()
{
  return MEMORY[0x1E0D24800]();
}

uint64_t sub_1AE925470()
{
  return MEMORY[0x1E0D24810]();
}

uint64_t sub_1AE92547C()
{
  return MEMORY[0x1E0D24820]();
}

uint64_t sub_1AE925488()
{
  return MEMORY[0x1E0D24828]();
}

uint64_t sub_1AE925494()
{
  return MEMORY[0x1E0D24838]();
}

uint64_t sub_1AE9254A0()
{
  return MEMORY[0x1E0D24848]();
}

uint64_t sub_1AE9254AC()
{
  return MEMORY[0x1E0D24850]();
}

uint64_t sub_1AE9254B8()
{
  return MEMORY[0x1E0D24868]();
}

uint64_t sub_1AE9254C4()
{
  return MEMORY[0x1E0D24880]();
}

uint64_t sub_1AE9254D0()
{
  return MEMORY[0x1E0D24898]();
}

uint64_t sub_1AE9254DC()
{
  return MEMORY[0x1E0D24910]();
}

uint64_t sub_1AE9254E8()
{
  return MEMORY[0x1E0D24920]();
}

uint64_t sub_1AE9254F4()
{
  return MEMORY[0x1E0D24928]();
}

uint64_t sub_1AE925500()
{
  return MEMORY[0x1E0D50610]();
}

uint64_t sub_1AE92550C()
{
  return MEMORY[0x1E0D50628]();
}

uint64_t sub_1AE925518()
{
  return MEMORY[0x1E0D50678]();
}

uint64_t sub_1AE925524()
{
  return MEMORY[0x1E0D50688]();
}

uint64_t sub_1AE925530()
{
  return MEMORY[0x1E0D50690]();
}

uint64_t sub_1AE92553C()
{
  return MEMORY[0x1E0D50698]();
}

uint64_t sub_1AE925548()
{
  return MEMORY[0x1E0D506B0]();
}

uint64_t sub_1AE925554()
{
  return MEMORY[0x1E0D506B8]();
}

uint64_t sub_1AE925560()
{
  return MEMORY[0x1E0D506C0]();
}

uint64_t sub_1AE92556C()
{
  return MEMORY[0x1E0DC6648]();
}

uint64_t sub_1AE925578()
{
  return MEMORY[0x1E0DC6658]();
}

uint64_t sub_1AE925584()
{
  return MEMORY[0x1E0DC6678]();
}

uint64_t sub_1AE925590()
{
  return MEMORY[0x1E0DC6680]();
}

uint64_t sub_1AE92559C()
{
  return MEMORY[0x1E0DC6688]();
}

uint64_t sub_1AE9255A8()
{
  return MEMORY[0x1E0DC6698]();
}

uint64_t sub_1AE9255B4()
{
  return MEMORY[0x1E0DC66A8]();
}

uint64_t sub_1AE9255C0()
{
  return MEMORY[0x1E0DC66C0]();
}

uint64_t sub_1AE9255CC()
{
  return MEMORY[0x1E0DC66C8]();
}

uint64_t sub_1AE9255D8()
{
  return MEMORY[0x1E0DC66D0]();
}

uint64_t sub_1AE9255E4()
{
  return MEMORY[0x1E0DC66D8]();
}

uint64_t sub_1AE9255F0()
{
  return MEMORY[0x1E0DC66E0]();
}

uint64_t sub_1AE9255FC()
{
  return MEMORY[0x1E0DC6708]();
}

uint64_t sub_1AE925608()
{
  return MEMORY[0x1E0DC6710]();
}

uint64_t sub_1AE925614()
{
  return MEMORY[0x1E0DC6718]();
}

uint64_t sub_1AE925620()
{
  return MEMORY[0x1E0DC6728]();
}

uint64_t sub_1AE92562C()
{
  return MEMORY[0x1E0DC6730]();
}

uint64_t sub_1AE925638()
{
  return MEMORY[0x1E0DC6738]();
}

uint64_t sub_1AE925644()
{
  return MEMORY[0x1E0DC6740]();
}

uint64_t sub_1AE925650()
{
  return MEMORY[0x1E0DC6780]();
}

uint64_t sub_1AE92565C()
{
  return MEMORY[0x1E0DC6790]();
}

uint64_t sub_1AE925668()
{
  return MEMORY[0x1E0DC6798]();
}

uint64_t sub_1AE925674()
{
  return MEMORY[0x1E0DC6800]();
}

uint64_t sub_1AE925680()
{
  return MEMORY[0x1E0DC6820]();
}

uint64_t sub_1AE92568C()
{
  return MEMORY[0x1E0DC6F88]();
}

uint64_t sub_1AE925698()
{
  return MEMORY[0x1E0DC6F98]();
}

uint64_t sub_1AE9256A4()
{
  return MEMORY[0x1E0DC6FA0]();
}

uint64_t sub_1AE9256B0()
{
  return MEMORY[0x1E0DC6FA8]();
}

uint64_t sub_1AE9256BC()
{
  return MEMORY[0x1E0DC6FB0]();
}

uint64_t sub_1AE9256C8()
{
  return MEMORY[0x1E0DC6FB8]();
}

uint64_t sub_1AE9256D4()
{
  return MEMORY[0x1E0DC6FC0]();
}

uint64_t sub_1AE9256E0()
{
  return MEMORY[0x1E0DC6FC8]();
}

uint64_t sub_1AE9256EC()
{
  return MEMORY[0x1E0DC6FD0]();
}

uint64_t sub_1AE9256F8()
{
  return MEMORY[0x1E0DC6FD8]();
}

uint64_t sub_1AE925704()
{
  return MEMORY[0x1E0DC7000]();
}

uint64_t sub_1AE925710()
{
  return MEMORY[0x1E0DC7008]();
}

uint64_t sub_1AE92571C()
{
  return MEMORY[0x1E0DC7010]();
}

uint64_t sub_1AE925728()
{
  return MEMORY[0x1E0DC7020]();
}

uint64_t sub_1AE925734()
{
  return MEMORY[0x1E0DC7038]();
}

uint64_t sub_1AE925740()
{
  return MEMORY[0x1E0DC7050]();
}

uint64_t sub_1AE92574C()
{
  return MEMORY[0x1E0DC7058]();
}

uint64_t sub_1AE925758()
{
  return MEMORY[0x1E0DC7060]();
}

uint64_t sub_1AE925764()
{
  return MEMORY[0x1E0DC7068]();
}

uint64_t sub_1AE925770()
{
  return MEMORY[0x1E0DC7070]();
}

uint64_t sub_1AE92577C()
{
  return MEMORY[0x1E0DC7078]();
}

uint64_t sub_1AE925788()
{
  return MEMORY[0x1E0DC7080]();
}

uint64_t sub_1AE925794()
{
  return MEMORY[0x1E0DC7088]();
}

uint64_t sub_1AE9257A0()
{
  return MEMORY[0x1E0DC7090]();
}

uint64_t sub_1AE9257AC()
{
  return MEMORY[0x1E0DC7098]();
}

uint64_t sub_1AE9257B8()
{
  return MEMORY[0x1E0DC70A0]();
}

uint64_t sub_1AE9257C4()
{
  return MEMORY[0x1E0DC70A8]();
}

uint64_t sub_1AE9257D0()
{
  return MEMORY[0x1E0DC70B0]();
}

uint64_t sub_1AE9257DC()
{
  return MEMORY[0x1E0DC70C0]();
}

uint64_t sub_1AE9257E8()
{
  return MEMORY[0x1E0DC70E0]();
}

uint64_t sub_1AE9257F4()
{
  return MEMORY[0x1E0DC70E8]();
}

uint64_t sub_1AE925800()
{
  return MEMORY[0x1E0DC70F0]();
}

uint64_t sub_1AE92580C()
{
  return MEMORY[0x1E0DC70F8]();
}

uint64_t sub_1AE925818()
{
  return MEMORY[0x1E0DC7100]();
}

uint64_t sub_1AE925824()
{
  return MEMORY[0x1E0DC7110]();
}

uint64_t sub_1AE925830()
{
  return MEMORY[0x1E0DC7118]();
}

uint64_t sub_1AE92583C()
{
  return MEMORY[0x1E0DC7120]();
}

uint64_t sub_1AE925848()
{
  return MEMORY[0x1E0DC7128]();
}

uint64_t sub_1AE925854()
{
  return MEMORY[0x1E0DC7130]();
}

uint64_t sub_1AE925860()
{
  return MEMORY[0x1E0DC7140]();
}

uint64_t sub_1AE92586C()
{
  return MEMORY[0x1E0DC7148]();
}

uint64_t sub_1AE925878()
{
  return MEMORY[0x1E0DC7150]();
}

uint64_t sub_1AE925884()
{
  return MEMORY[0x1E0DC7160]();
}

uint64_t sub_1AE925890()
{
  return MEMORY[0x1E0DC7168]();
}

uint64_t sub_1AE92589C()
{
  return MEMORY[0x1E0DC7178]();
}

uint64_t sub_1AE9258A8()
{
  return MEMORY[0x1E0DC7180]();
}

uint64_t sub_1AE9258B4()
{
  return MEMORY[0x1E0DC7188]();
}

uint64_t sub_1AE9258C0()
{
  return MEMORY[0x1E0DC7190]();
}

uint64_t sub_1AE9258CC()
{
  return MEMORY[0x1E0DC71A0]();
}

uint64_t sub_1AE9258D8()
{
  return MEMORY[0x1E0DC71A8]();
}

uint64_t sub_1AE9258E4()
{
  return MEMORY[0x1E0DC71B8]();
}

uint64_t sub_1AE9258F0()
{
  return MEMORY[0x1E0DC71D0]();
}

uint64_t sub_1AE9258FC()
{
  return MEMORY[0x1E0DC71D8]();
}

uint64_t sub_1AE925908()
{
  return MEMORY[0x1E0DC71E0]();
}

uint64_t sub_1AE925914()
{
  return MEMORY[0x1E0DC71E8]();
}

uint64_t sub_1AE925920()
{
  return MEMORY[0x1E0DC71F8]();
}

uint64_t sub_1AE92592C()
{
  return MEMORY[0x1E0DC7200]();
}

uint64_t sub_1AE925938()
{
  return MEMORY[0x1E0DC7208]();
}

uint64_t sub_1AE925944()
{
  return MEMORY[0x1E0DC7210]();
}

uint64_t sub_1AE925950()
{
  return MEMORY[0x1E0DC7218]();
}

uint64_t sub_1AE92595C()
{
  return MEMORY[0x1E0DC7220]();
}

uint64_t sub_1AE925968()
{
  return MEMORY[0x1E0DC7228]();
}

uint64_t sub_1AE925974()
{
  return MEMORY[0x1E0DC7238]();
}

uint64_t sub_1AE925980()
{
  return MEMORY[0x1E0DC7240]();
}

uint64_t sub_1AE92598C()
{
  return MEMORY[0x1E0DC7248]();
}

uint64_t sub_1AE925998()
{
  return MEMORY[0x1E0DC7250]();
}

uint64_t sub_1AE9259A4()
{
  return MEMORY[0x1E0DC7258]();
}

uint64_t sub_1AE9259B0()
{
  return MEMORY[0x1E0DC7260]();
}

uint64_t sub_1AE9259BC()
{
  return MEMORY[0x1E0DC7268]();
}

uint64_t sub_1AE9259C8()
{
  return MEMORY[0x1E0DC7278]();
}

uint64_t sub_1AE9259D4()
{
  return MEMORY[0x1E0DC7280]();
}

uint64_t sub_1AE9259E0()
{
  return MEMORY[0x1E0DC7288]();
}

uint64_t sub_1AE9259EC()
{
  return MEMORY[0x1E0DC72C0]();
}

uint64_t sub_1AE9259F8()
{
  return MEMORY[0x1E0DC72F8]();
}

uint64_t sub_1AE925A04()
{
  return MEMORY[0x1E0DC7308]();
}

uint64_t sub_1AE925A10()
{
  return MEMORY[0x1E0DC7310]();
}

uint64_t sub_1AE925A1C()
{
  return MEMORY[0x1E0DC7318]();
}

uint64_t sub_1AE925A28()
{
  return MEMORY[0x1E0DC7320]();
}

uint64_t sub_1AE925A34()
{
  return MEMORY[0x1E0DC7328]();
}

uint64_t sub_1AE925A40()
{
  return MEMORY[0x1E0DC7330]();
}

uint64_t sub_1AE925A4C()
{
  return MEMORY[0x1E0DC7368]();
}

uint64_t sub_1AE925A58()
{
  return MEMORY[0x1E0DC7370]();
}

uint64_t sub_1AE925A64()
{
  return MEMORY[0x1E0DC7378]();
}

uint64_t sub_1AE925A70()
{
  return MEMORY[0x1E0DC7388]();
}

uint64_t sub_1AE925A7C()
{
  return MEMORY[0x1E0DC7390]();
}

uint64_t sub_1AE925A88()
{
  return MEMORY[0x1E0DC73A8]();
}

uint64_t sub_1AE925A94()
{
  return MEMORY[0x1E0DC73B0]();
}

uint64_t sub_1AE925AA0()
{
  return MEMORY[0x1E0DC73B8]();
}

uint64_t sub_1AE925AAC()
{
  return MEMORY[0x1E0DC73C0]();
}

uint64_t sub_1AE925AB8()
{
  return MEMORY[0x1E0DF2098]();
}

uint64_t sub_1AE925AC4()
{
  return MEMORY[0x1E0DF2100]();
}

uint64_t sub_1AE925AD0()
{
  return MEMORY[0x1E0DF2108]();
}

uint64_t sub_1AE925ADC()
{
  return MEMORY[0x1E0DF2110]();
}

uint64_t sub_1AE925AE8()
{
  return MEMORY[0x1E0DF2118]();
}

uint64_t sub_1AE925AF4()
{
  return MEMORY[0x1E0DF2130]();
}

uint64_t sub_1AE925B00()
{
  return MEMORY[0x1E0DF2150]();
}

uint64_t sub_1AE925B0C()
{
  return MEMORY[0x1E0DF2170]();
}

uint64_t sub_1AE925B18()
{
  return MEMORY[0x1E0DF2198]();
}

uint64_t sub_1AE925B24()
{
  return MEMORY[0x1E0DF2218]();
}

uint64_t sub_1AE925B30()
{
  return MEMORY[0x1E0DF2220]();
}

uint64_t sub_1AE925B3C()
{
  return MEMORY[0x1E0DF2228]();
}

uint64_t sub_1AE925B48()
{
  return MEMORY[0x1E0DF2238]();
}

uint64_t sub_1AE925B54()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1AE925B60()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1AE925B6C()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1AE925B78()
{
  return MEMORY[0x1E0DF2268]();
}

uint64_t sub_1AE925B84()
{
  return MEMORY[0x1E0C9E698]();
}

uint64_t sub_1AE925B90()
{
  return MEMORY[0x1E0C9E6A8]();
}

uint64_t sub_1AE925B9C()
{
  return MEMORY[0x1E0C9E748]();
}

uint64_t sub_1AE925BA8()
{
  return MEMORY[0x1E0C9E750]();
}

uint64_t sub_1AE925BB4()
{
  return MEMORY[0x1E0C9E758]();
}

uint64_t sub_1AE925BC0()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1AE925BCC()
{
  return MEMORY[0x1E0DEF550]();
}

uint64_t sub_1AE925BD8()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1AE925BE4()
{
  return MEMORY[0x1E0DEF570]();
}

uint64_t sub_1AE925BF0()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1AE925BFC()
{
  return MEMORY[0x1E0DEF5A0]();
}

uint64_t sub_1AE925C08()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1AE925C14()
{
  return MEMORY[0x1E0CA92E0]();
}

uint64_t sub_1AE925C20()
{
  return MEMORY[0x1E0CA92F8]();
}

uint64_t sub_1AE925C2C()
{
  return MEMORY[0x1E0DE9D60]();
}

uint64_t sub_1AE925C38()
{
  return MEMORY[0x1E0DE9D70]();
}

uint64_t sub_1AE925C44()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1AE925C50()
{
  return MEMORY[0x1E0CB17F8]();
}

uint64_t sub_1AE925C5C()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1AE925C68()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1AE925C74()
{
  return MEMORY[0x1E0DE9E40]();
}

uint64_t sub_1AE925C80()
{
  return MEMORY[0x1E0DE9E48]();
}

uint64_t sub_1AE925C8C()
{
  return MEMORY[0x1E0DE9E68]();
}

uint64_t sub_1AE925C98()
{
  return MEMORY[0x1E0DE9E78]();
}

uint64_t sub_1AE925CA4()
{
  return MEMORY[0x1E0DE9E80]();
}

uint64_t sub_1AE925CB0()
{
  return MEMORY[0x1E0DE9E90]();
}

uint64_t sub_1AE925CBC()
{
  return MEMORY[0x1E0DE9F38]();
}

uint64_t sub_1AE925CC8()
{
  return MEMORY[0x1E0DE9FF8]();
}

uint64_t sub_1AE925CD4()
{
  return MEMORY[0x1E0DEA020]();
}

uint64_t sub_1AE925CE0()
{
  return MEMORY[0x1E0DEA038]();
}

uint64_t sub_1AE925CEC()
{
  return MEMORY[0x1E0DEA040]();
}

uint64_t sub_1AE925CF8()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1AE925D04()
{
  return MEMORY[0x1E0DEA088]();
}

uint64_t sub_1AE925D10()
{
  return MEMORY[0x1E0DEA0A0]();
}

uint64_t sub_1AE925D1C()
{
  return MEMORY[0x1E0DEA0A8]();
}

uint64_t sub_1AE925D28()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1AE925D34()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1AE925D40()
{
  return MEMORY[0x1E0DEA1C8]();
}

uint64_t sub_1AE925D4C()
{
  return MEMORY[0x1E0DEA258]();
}

uint64_t sub_1AE925D58()
{
  return MEMORY[0x1E0DEA260]();
}

uint64_t sub_1AE925D64()
{
  return MEMORY[0x1E0DEA268]();
}

uint64_t sub_1AE925D70()
{
  return MEMORY[0x1E0DEA278]();
}

uint64_t sub_1AE925D7C()
{
  return MEMORY[0x1E0DEA280]();
}

uint64_t sub_1AE925D88()
{
  return MEMORY[0x1E0DEA288]();
}

uint64_t sub_1AE925D94()
{
  return MEMORY[0x1E0DEA2A8]();
}

uint64_t sub_1AE925DA0()
{
  return MEMORY[0x1E0DEA2B0]();
}

uint64_t sub_1AE925DAC()
{
  return MEMORY[0x1E0DEA2B8]();
}

uint64_t sub_1AE925DB8()
{
  return MEMORY[0x1E0DF1FA0]();
}

uint64_t sub_1AE925DC4()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1AE925DD0()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1AE925DDC()
{
  return MEMORY[0x1E0DEA3D0]();
}

uint64_t sub_1AE925DE8()
{
  return MEMORY[0x1E0DEA438]();
}

uint64_t sub_1AE925DF4()
{
  return MEMORY[0x1E0DEA458]();
}

uint64_t sub_1AE925E00()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1AE925E0C()
{
  return MEMORY[0x1E0CB1848]();
}

uint64_t sub_1AE925E18()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1AE925E24()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1AE925E30()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1AE925E3C()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1AE925E48()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_1AE925E54()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_1AE925E60()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1AE925E6C()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1AE925E78()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1AE925E84()
{
  return MEMORY[0x1E0CB1A58]();
}

uint64_t sub_1AE925E90()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1AE925E9C()
{
  return MEMORY[0x1E0DEA610]();
}

uint64_t sub_1AE925EA8()
{
  return MEMORY[0x1E0DEA618]();
}

uint64_t sub_1AE925EB4()
{
  return MEMORY[0x1E0D24980]();
}

uint64_t sub_1AE925EC0()
{
  return MEMORY[0x1E0D24988]();
}

uint64_t sub_1AE925ECC()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1AE925ED8()
{
  return MEMORY[0x1E0DEA6A0]();
}

uint64_t sub_1AE925EE4()
{
  return MEMORY[0x1E0DEA6A8]();
}

uint64_t sub_1AE925EF0()
{
  return MEMORY[0x1E0DEA6C0]();
}

uint64_t sub_1AE925EFC()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1AE925F08()
{
  return MEMORY[0x1E0DEA708]();
}

uint64_t sub_1AE925F14()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1AE925F20()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1AE925F2C()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_1AE925F38()
{
  return MEMORY[0x1E0DEA7C8]();
}

uint64_t sub_1AE925F44()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_1AE925F50()
{
  return MEMORY[0x1E0DEA7D8]();
}

uint64_t sub_1AE925F5C()
{
  return MEMORY[0x1E0DEA7F0]();
}

uint64_t sub_1AE925F68()
{
  return MEMORY[0x1E0DEA7F8]();
}

uint64_t sub_1AE925F74()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1AE925F80()
{
  return MEMORY[0x1E0DEA810]();
}

uint64_t sub_1AE925F8C()
{
  return MEMORY[0x1E0DEA828]();
}

uint64_t sub_1AE925F98()
{
  return MEMORY[0x1E0DEA840]();
}

uint64_t sub_1AE925FA4()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1AE925FB0()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1AE925FBC()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1AE925FC8()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1AE925FD4()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1AE925FE0()
{
  return MEMORY[0x1E0DEA8C0]();
}

uint64_t sub_1AE925FEC()
{
  return MEMORY[0x1E0DEA8F8]();
}

uint64_t sub_1AE925FF8()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1AE926004()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_1AE926010()
{
  return MEMORY[0x1E0DEA958]();
}

uint64_t sub_1AE92601C()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1AE926028()
{
  return MEMORY[0x1E0DEAA38]();
}

uint64_t sub_1AE926034()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1AE926040()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1AE92604C()
{
  return MEMORY[0x1E0CB1A98]();
}

uint64_t sub_1AE926058()
{
  return MEMORY[0x1E0D24990]();
}

uint64_t sub_1AE926064()
{
  return MEMORY[0x1E0D24998]();
}

uint64_t sub_1AE926070()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_1AE92607C()
{
  return MEMORY[0x1E0DEAA68]();
}

uint64_t sub_1AE926088()
{
  return MEMORY[0x1E0DEAAA8]();
}

uint64_t sub_1AE926094()
{
  return MEMORY[0x1E0DEAAB8]();
}

uint64_t sub_1AE9260A0()
{
  return MEMORY[0x1E0DEAAC8]();
}

uint64_t sub_1AE9260AC()
{
  return MEMORY[0x1E0DEAAD0]();
}

uint64_t sub_1AE9260B8()
{
  return MEMORY[0x1E0DEAAD8]();
}

uint64_t sub_1AE9260C4()
{
  return MEMORY[0x1E0DEAAF8]();
}

uint64_t sub_1AE9260D0()
{
  return MEMORY[0x1E0DEAB00]();
}

uint64_t sub_1AE9260DC()
{
  return MEMORY[0x1E0DEAB08]();
}

uint64_t sub_1AE9260E8()
{
  return MEMORY[0x1E0DEAB20]();
}

uint64_t sub_1AE9260F4()
{
  return MEMORY[0x1E0DEAB28]();
}

uint64_t sub_1AE926100()
{
  return MEMORY[0x1E0DEAB30]();
}

uint64_t sub_1AE92610C()
{
  return MEMORY[0x1E0DEAB40]();
}

uint64_t sub_1AE926118()
{
  return MEMORY[0x1E0DEAB48]();
}

uint64_t sub_1AE926124()
{
  return MEMORY[0x1E0DEAB50]();
}

uint64_t sub_1AE926130()
{
  return MEMORY[0x1E0DEAB90]();
}

uint64_t sub_1AE92613C()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_1AE926148()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1AE926154()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t sub_1AE926160()
{
  return MEMORY[0x1E0DEACD0]();
}

uint64_t sub_1AE92616C()
{
  return MEMORY[0x1E0DEAD00]();
}

uint64_t sub_1AE926178()
{
  return MEMORY[0x1E0DEAD08]();
}

uint64_t sub_1AE926184()
{
  return MEMORY[0x1E0DEAD10]();
}

uint64_t sub_1AE926190()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1AE92619C()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t sub_1AE9261A8()
{
  return MEMORY[0x1E0DEAD48]();
}

uint64_t sub_1AE9261B4()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1AE9261C0()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1AE9261CC()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1AE9261D8()
{
  return MEMORY[0x1E0DEADA8]();
}

uint64_t sub_1AE9261E4()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1AE9261F0()
{
  return MEMORY[0x1E0DC6848]();
}

uint64_t sub_1AE9261FC()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1AE926208()
{
  return MEMORY[0x1E0DEADC0]();
}

uint64_t sub_1AE926214()
{
  return MEMORY[0x1E0DEADC8]();
}

uint64_t sub_1AE926220()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1AE92622C()
{
  return MEMORY[0x1E0DEAE08]();
}

uint64_t sub_1AE926238()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1AE926244()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1AE926250()
{
  return MEMORY[0x1E0DEAE38]();
}

uint64_t sub_1AE92625C()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1AE926268()
{
  return MEMORY[0x1E0DEAE60]();
}

uint64_t sub_1AE926274()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_1AE926280()
{
  return MEMORY[0x1E0DEAE90]();
}

uint64_t sub_1AE92628C()
{
  return MEMORY[0x1E0DEAE98]();
}

uint64_t sub_1AE926298()
{
  return MEMORY[0x1E0DEAEA8]();
}

uint64_t sub_1AE9262A4()
{
  return MEMORY[0x1E0DEAEB8]();
}

uint64_t sub_1AE9262B0()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1AE9262BC()
{
  return MEMORY[0x1E0DEAEF0]();
}

uint64_t sub_1AE9262C8()
{
  return MEMORY[0x1E0DEAF00]();
}

uint64_t sub_1AE9262D4()
{
  return MEMORY[0x1E0DEAF78]();
}

uint64_t sub_1AE9262E0()
{
  return MEMORY[0x1E0D249C0]();
}

uint64_t sub_1AE9262EC()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1AE9262F8()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1AE926304()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1AE926310()
{
  return MEMORY[0x1E0DF06B8]();
}

uint64_t sub_1AE92631C()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1AE926328()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1AE926334()
{
  return MEMORY[0x1E0DF0860]();
}

uint64_t sub_1AE926340()
{
  return MEMORY[0x1E0DF0870]();
}

uint64_t sub_1AE92634C()
{
  return MEMORY[0x1E0DF08C8]();
}

uint64_t sub_1AE926358()
{
  return MEMORY[0x1E0DF0918]();
}

uint64_t sub_1AE926364()
{
  return MEMORY[0x1E0CB1B48]();
}

uint64_t sub_1AE926370()
{
  return MEMORY[0x1E0CB1B50]();
}

uint64_t sub_1AE92637C()
{
  return MEMORY[0x1E0CB1B68]();
}

uint64_t sub_1AE926388()
{
  return MEMORY[0x1E0DEAFE8]();
}

uint64_t sub_1AE926394()
{
  return MEMORY[0x1E0D249E8]();
}

uint64_t sub_1AE9263A0()
{
  return MEMORY[0x1E0D249F0]();
}

uint64_t sub_1AE9263AC(double a1)
{
  return MEMORY[0x1E0DEB030](a1);
}

uint64_t sub_1AE9263B8()
{
  return MEMORY[0x1E0DEB110]();
}

uint64_t sub_1AE9263C4()
{
  return MEMORY[0x1E0CB1B78]();
}

uint64_t sub_1AE9263D0()
{
  return MEMORY[0x1E0DEB160]();
}

uint64_t sub_1AE9263DC()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1AE9263E8()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_1AE9263F4()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1AE926400()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1AE92640C()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t sub_1AE926418()
{
  return MEMORY[0x1E0DEB3B0]();
}

uint64_t sub_1AE926424()
{
  return MEMORY[0x1E0CB1C00]();
}

uint64_t sub_1AE926430()
{
  return MEMORY[0x1E0CB1C10]();
}

uint64_t sub_1AE92643C()
{
  return MEMORY[0x1E0CB1C18]();
}

uint64_t sub_1AE926448()
{
  return MEMORY[0x1E0CB1C20]();
}

uint64_t sub_1AE926454()
{
  return MEMORY[0x1E0CB1C28]();
}

uint64_t sub_1AE926460()
{
  return MEMORY[0x1E0D24A18]();
}

uint64_t sub_1AE92646C()
{
  return MEMORY[0x1E0DC73D0]();
}

uint64_t sub_1AE926478()
{
  return MEMORY[0x1E0DEB408]();
}

uint64_t sub_1AE926484()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1AE926490()
{
  return MEMORY[0x1E0DF1FD0]();
}

uint64_t sub_1AE92649C()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1AE9264A8()
{
  return MEMORY[0x1E0DEB5A8]();
}

uint64_t sub_1AE9264B4()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1AE9264C0()
{
  return MEMORY[0x1E0DEB5C8]();
}

uint64_t sub_1AE9264CC()
{
  return MEMORY[0x1E0DEB5D0]();
}

uint64_t sub_1AE9264D8()
{
  return MEMORY[0x1E0DEB5E8]();
}

uint64_t sub_1AE9264E4()
{
  return MEMORY[0x1E0DEB5F0]();
}

uint64_t sub_1AE9264F0()
{
  return MEMORY[0x1E0DEB5F8]();
}

uint64_t sub_1AE9264FC()
{
  return MEMORY[0x1E0DEB600]();
}

uint64_t sub_1AE926508()
{
  return MEMORY[0x1E0DEB608]();
}

uint64_t sub_1AE926514()
{
  return MEMORY[0x1E0DEB618]();
}

uint64_t sub_1AE926520()
{
  return MEMORY[0x1E0DEB620]();
}

uint64_t sub_1AE92652C()
{
  return MEMORY[0x1E0DEB628]();
}

uint64_t sub_1AE926538()
{
  return MEMORY[0x1E0DEB630]();
}

uint64_t sub_1AE926544()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t sub_1AE926550()
{
  return MEMORY[0x1E0DEB668]();
}

uint64_t sub_1AE92655C()
{
  return MEMORY[0x1E0DEB678]();
}

uint64_t sub_1AE926568()
{
  return MEMORY[0x1E0DEB6A0]();
}

uint64_t sub_1AE926574()
{
  return MEMORY[0x1E0DEB6A8]();
}

uint64_t sub_1AE926580()
{
  return MEMORY[0x1E0DEB6C0]();
}

uint64_t sub_1AE92658C()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1AE926598()
{
  return MEMORY[0x1E0DEB738]();
}

uint64_t sub_1AE9265A4()
{
  return MEMORY[0x1E0DEB7F8]();
}

uint64_t sub_1AE9265B0()
{
  return MEMORY[0x1E0DEB808]();
}

uint64_t sub_1AE9265BC()
{
  return MEMORY[0x1E0C9E7D0]();
}

uint64_t sub_1AE9265C8()
{
  return MEMORY[0x1E0C9E7E0]();
}

uint64_t sub_1AE9265D4()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1AE9265E0()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1AE9265EC()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1AE9265F8()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1AE926604()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1AE926610()
{
  return MEMORY[0x1E0C9E7E8]();
}

uint64_t sub_1AE92661C()
{
  return MEMORY[0x1E0C9E7F0]();
}

uint64_t sub_1AE926628()
{
  return MEMORY[0x1E0CB1E68]();
}

uint64_t sub_1AE926634()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1AE926640()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1AE92664C()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1AE926658()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1AE926664()
{
  return MEMORY[0x1E0DF2298]();
}

uint64_t sub_1AE926670()
{
  return MEMORY[0x1E0DF22A0]();
}

uint64_t sub_1AE92667C()
{
  return MEMORY[0x1E0DF22A8]();
}

uint64_t sub_1AE926688()
{
  return MEMORY[0x1E0DEFA68]();
}

uint64_t sub_1AE926694()
{
  return MEMORY[0x1E0DEFA70]();
}

uint64_t sub_1AE9266A0()
{
  return MEMORY[0x1E0CB1FA0]();
}

uint64_t sub_1AE9266AC()
{
  return MEMORY[0x1E0C9E800]();
}

uint64_t sub_1AE9266B8()
{
  return MEMORY[0x1E0C9E818]();
}

uint64_t sub_1AE9266C4()
{
  return MEMORY[0x1E0CB20C8]();
}

uint64_t sub_1AE9266D0()
{
  return MEMORY[0x1E0CB20E0]();
}

uint64_t sub_1AE9266DC()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_1AE9266E8()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1AE9266F4()
{
  return MEMORY[0x1E0DEFCE8]();
}

uint64_t sub_1AE926700()
{
  return MEMORY[0x1E0DF22B0]();
}

uint64_t sub_1AE92670C()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1AE926718()
{
  return MEMORY[0x1E0DEBA10]();
}

uint64_t sub_1AE926724()
{
  return MEMORY[0x1E0DEBA78]();
}

uint64_t sub_1AE926730()
{
  return MEMORY[0x1E0DEBA80]();
}

uint64_t sub_1AE92673C()
{
  return MEMORY[0x1E0DEBAD8]();
}

uint64_t sub_1AE926748()
{
  return MEMORY[0x1E0DEBB48]();
}

uint64_t sub_1AE926754()
{
  return MEMORY[0x1E0DEBB58]();
}

uint64_t sub_1AE926760()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1AE92676C()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1AE926778()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1AE926784()
{
  return MEMORY[0x1E0CB2400]();
}

uint64_t sub_1AE926790()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_1AE92679C()
{
  return MEMORY[0x1E0CB2430]();
}

uint64_t sub_1AE9267A8()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_1AE9267B4()
{
  return MEMORY[0x1E0CB24A8]();
}

uint64_t sub_1AE9267C0()
{
  return MEMORY[0x1E0CB2540]();
}

uint64_t sub_1AE9267CC()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_1AE9267D8()
{
  return MEMORY[0x1E0DEFF58]();
}

uint64_t sub_1AE9267E4()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1AE9267F0()
{
  return MEMORY[0x1E0DEBF30]();
}

uint64_t sub_1AE9267FC()
{
  return MEMORY[0x1E0DEBF58]();
}

uint64_t sub_1AE926808()
{
  return MEMORY[0x1E0DEBFC0]();
}

uint64_t sub_1AE926814()
{
  return MEMORY[0x1E0DEBFC8]();
}

uint64_t sub_1AE926820()
{
  return MEMORY[0x1E0DEC010]();
}

uint64_t sub_1AE92682C()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_1AE926838()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1AE926844()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1AE926850()
{
  return MEMORY[0x1E0DEC070]();
}

uint64_t sub_1AE92685C()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1AE926868()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_1AE926874()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_1AE926880()
{
  return MEMORY[0x1E0DEC130]();
}

uint64_t sub_1AE92688C()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1AE926898()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1AE9268A4()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1AE9268B0()
{
  return MEMORY[0x1E0DEC1F0]();
}

uint64_t sub_1AE9268BC()
{
  return MEMORY[0x1E0DEC200]();
}

uint64_t sub_1AE9268C8()
{
  return MEMORY[0x1E0DF0B00]();
}

uint64_t sub_1AE9268D4()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1AE9268E0()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1AE9268EC()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1AE9268F8()
{
  return MEMORY[0x1E0DEC280]();
}

uint64_t sub_1AE926904()
{
  return MEMORY[0x1E0DEC290]();
}

uint64_t sub_1AE926910()
{
  return MEMORY[0x1E0DEC2A0]();
}

uint64_t sub_1AE92691C()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1AE926928()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1AE926934()
{
  return MEMORY[0x1E0DEC310]();
}

uint64_t sub_1AE926940()
{
  return MEMORY[0x1E0DEC338]();
}

uint64_t sub_1AE92694C()
{
  return MEMORY[0x1E0DEC3D0]();
}

uint64_t sub_1AE926958()
{
  return MEMORY[0x1E0DEC3D8]();
}

uint64_t sub_1AE926964()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1AE926970()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_1AE92697C()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1AE926988()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1AE926994()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1AE9269A0()
{
  return MEMORY[0x1E0DEC590]();
}

uint64_t sub_1AE9269AC()
{
  return MEMORY[0x1E0DEC5F8]();
}

uint64_t sub_1AE9269B8()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1AE9269C4()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1AE9269D0()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_1AE9269DC()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1AE9269E8()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1AE9269F4()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1AE926A00()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_1AE926A0C()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_1AE926A18()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_1AE926A24()
{
  return MEMORY[0x1E0DEC7D0]();
}

uint64_t sub_1AE926A30()
{
  return MEMORY[0x1E0DEC888]();
}

uint64_t sub_1AE926A3C()
{
  return MEMORY[0x1E0DEC8D8]();
}

uint64_t sub_1AE926A48()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1AE926A54()
{
  return MEMORY[0x1E0DECAE0]();
}

uint64_t sub_1AE926A60()
{
  return MEMORY[0x1E0DECAF8]();
}

uint64_t sub_1AE926A6C()
{
  return MEMORY[0x1E0DECB00]();
}

uint64_t sub_1AE926A78()
{
  return MEMORY[0x1E0DECB40]();
}

uint64_t sub_1AE926A84()
{
  return MEMORY[0x1E0DECB80]();
}

uint64_t sub_1AE926A90()
{
  return MEMORY[0x1E0DECBA8]();
}

uint64_t sub_1AE926A9C()
{
  return MEMORY[0x1E0DECBB8]();
}

uint64_t sub_1AE926AA8()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1AE926AB4()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1AE926AC0()
{
  return MEMORY[0x1E0DECBF0]();
}

uint64_t sub_1AE926ACC()
{
  return MEMORY[0x1E0DECBF8]();
}

uint64_t sub_1AE926AD8()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1AE926AE4()
{
  return MEMORY[0x1E0DECD20]();
}

uint64_t sub_1AE926AF0()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1AE926AFC()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1AE926B08()
{
  return MEMORY[0x1E0DECD48]();
}

uint64_t sub_1AE926B14()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1AE926B20()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1AE926B2C()
{
  return MEMORY[0x1E0DECD90]();
}

uint64_t sub_1AE926B38()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1AE926B44()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1AE926B50()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1AE926B5C()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1AE926B68()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1AE926B74()
{
  return MEMORY[0x1E0DECF60]();
}

uint64_t sub_1AE926B80()
{
  return MEMORY[0x1E0DECF68]();
}

uint64_t sub_1AE926B8C()
{
  return MEMORY[0x1E0DECF78]();
}

uint64_t sub_1AE926B98()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1AE926BA4()
{
  return MEMORY[0x1E0DECFA0]();
}

uint64_t sub_1AE926BB0()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1AE926BBC()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1AE926BC8()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1AE926BD4()
{
  return MEMORY[0x1E0DECFD8]();
}

uint64_t sub_1AE926BE0()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_1AE926BEC()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1AE926BF8()
{
  return MEMORY[0x1E0DED008]();
}

uint64_t sub_1AE926C04()
{
  return MEMORY[0x1E0DED010]();
}

uint64_t sub_1AE926C10()
{
  return MEMORY[0x1E0DED030]();
}

uint64_t sub_1AE926C1C()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1AE926C28()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_1AE926C34()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1AE926C40()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1AE926C4C()
{
  return MEMORY[0x1E0DED098]();
}

uint64_t sub_1AE926C58()
{
  return MEMORY[0x1E0DED0A0]();
}

uint64_t sub_1AE926C64()
{
  return MEMORY[0x1E0DED0B0]();
}

uint64_t sub_1AE926C70()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1AE926C7C()
{
  return MEMORY[0x1E0DED0D0]();
}

uint64_t sub_1AE926C88()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1AE926C94()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1AE926CA0()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1AE926CAC()
{
  return MEMORY[0x1E0DED108]();
}

uint64_t sub_1AE926CB8()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_1AE926CC4()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1AE926CD0()
{
  return MEMORY[0x1E0DED138]();
}

uint64_t sub_1AE926CDC()
{
  return MEMORY[0x1E0DED140]();
}

uint64_t sub_1AE926CE8()
{
  return MEMORY[0x1E0DED160]();
}

uint64_t sub_1AE926CF4()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_1AE926D00()
{
  return MEMORY[0x1E0DED1A0]();
}

uint64_t sub_1AE926D0C()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1AE926D18()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1AE926D24()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1AE926D30()
{
  return MEMORY[0x1E0DED4A0]();
}

uint64_t sub_1AE926D3C()
{
  return MEMORY[0x1E0DED538]();
}

uint64_t sub_1AE926D48()
{
  return MEMORY[0x1E0DED550]();
}

uint64_t sub_1AE926D54()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1AE926D60()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1AE926D6C()
{
  return MEMORY[0x1E0DF0E78]();
}

uint64_t sub_1AE926D78()
{
  return MEMORY[0x1E0DED6F8]();
}

uint64_t sub_1AE926D84()
{
  return MEMORY[0x1E0DED768]();
}

uint64_t sub_1AE926D90()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t sub_1AE926D9C()
{
  return MEMORY[0x1E0DED788]();
}

uint64_t sub_1AE926DA8()
{
  return MEMORY[0x1E0DED998]();
}

uint64_t sub_1AE926DB4()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1AE926DC0()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_1AE926DCC()
{
  return MEMORY[0x1E0DED9F8]();
}

uint64_t sub_1AE926DD8()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1AE926DE4()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1AE926DF0()
{
  return MEMORY[0x1E0DF0EE8]();
}

uint64_t sub_1AE926DFC()
{
  return MEMORY[0x1E0DF0EF0]();
}

uint64_t sub_1AE926E08()
{
  return MEMORY[0x1E0CB2628]();
}

uint64_t sub_1AE926E14()
{
  return MEMORY[0x1E0CB2640]();
}

uint64_t sub_1AE926E20()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1AE926E2C()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1AE926E38()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1AE926E44()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1AE926E50()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1AE926E5C()
{
  return MEMORY[0x1E0DEDB30]();
}

uint64_t sub_1AE926E68()
{
  return MEMORY[0x1E0CB2668]();
}

uint64_t sub_1AE926E74()
{
  return MEMORY[0x1E0CB2688]();
}

uint64_t sub_1AE926E80()
{
  return MEMORY[0x1E0D24A70]();
}

uint64_t sub_1AE926E8C()
{
  return MEMORY[0x1E0D24A78]();
}

uint64_t sub_1AE926E98()
{
  return MEMORY[0x1E0D24A80]();
}

uint64_t sub_1AE926EA4()
{
  return MEMORY[0x1E0DEDED8]();
}

uint64_t sub_1AE926EB0()
{
  return MEMORY[0x1E0DEDEE0]();
}

uint64_t sub_1AE926EBC()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_1AE926EC8()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1AE926ED4()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1AE926EE0()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1AE926EEC()
{
  return MEMORY[0x1E0DEDF28]();
}

uint64_t sub_1AE926EF8()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1AE926F04()
{
  return MEMORY[0x1E0DEDF38]();
}

uint64_t sub_1AE926F10()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1AE926F1C()
{
  return MEMORY[0x1E0DEDF48]();
}

uint64_t sub_1AE926F28()
{
  return MEMORY[0x1E0DEE030]();
}

uint64_t sub_1AE926F34()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1AE926F40()
{
  return MEMORY[0x1E0DEE260]();
}

uint64_t sub_1AE926F4C()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1AE926F58()
{
  return MEMORY[0x1E0DEE530]();
}

uint64_t sub_1AE926F64()
{
  return MEMORY[0x1E0DEE610]();
}

uint64_t sub_1AE926F70()
{
  return MEMORY[0x1E0DEE6B8]();
}

uint64_t sub_1AE926F7C()
{
  return MEMORY[0x1E0DEE6E0]();
}

uint64_t sub_1AE926F88()
{
  return MEMORY[0x1E0DEE6F0]();
}

uint64_t sub_1AE926F94()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1AE926FA0()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1AE926FAC()
{
  return MEMORY[0x1E0DF0F28]();
}

uint64_t sub_1AE926FB8()
{
  return MEMORY[0x1E0DF0F38]();
}

uint64_t sub_1AE926FC4()
{
  return MEMORY[0x1E0DF0F40]();
}

uint64_t sub_1AE926FD0()
{
  return MEMORY[0x1E0DF0F48]();
}

uint64_t sub_1AE926FDC()
{
  return MEMORY[0x1E0DEE978]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x1E0D15420]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1E0D15428]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x1E0D01E18]();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C97C58]();
  return result;
}

CFCharacterSetRef CFCharacterSetCreateWithCharactersInString(CFAllocatorRef alloc, CFStringRef theString)
{
  return (CFCharacterSetRef)MEMORY[0x1E0C982E8](alloc, theString);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFStringTokenizerRef CFStringTokenizerCreate(CFAllocatorRef alloc, CFStringRef string, CFRange range, CFOptionFlags options, CFLocaleRef locale)
{
  return (CFStringTokenizerRef)MEMORY[0x1E0C99220](alloc, string, range.location, range.length, options, locale);
}

void CFStringTokenizerSetString(CFStringTokenizerRef tokenizer, CFStringRef string, CFRange range)
{
  MEMORY[0x1E0C99240](tokenizer, string, range.location, range.length);
}

CLLocationCoordinate2D CLLocationCoordinate2DMake(CLLocationDegrees latitude, CLLocationDegrees longitude)
{
  double v2;
  double v3;
  CLLocationCoordinate2D result;

  MEMORY[0x1E0C9E308](latitude, longitude);
  result.longitude = v3;
  result.latitude = v2;
  return result;
}

CFTimeInterval IOPSGetTimeRemainingEstimate(void)
{
  CFTimeInterval result;

  MEMORY[0x1E0CBB8B8]();
  return result;
}

uint64_t ITSTokenListCopyEscapedTokenAtIndex()
{
  return MEMORY[0x1E0D3EF90]();
}

uint64_t ITSTokenListCreate()
{
  return MEMORY[0x1E0D3EF98]();
}

uint64_t ITSTokenListGetCount()
{
  return MEMORY[0x1E0D3EFA0]();
}

uint64_t ITSTokenListPopulateFromString()
{
  return MEMORY[0x1E0D3EFA8]();
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return (CFTypeRef)MEMORY[0x1E0CD65F0](task, entitlement, error);
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return (SecTaskRef)MEMORY[0x1E0CD6610](allocator);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _PASRemoveCharacterSet()
{
  return MEMORY[0x1E0D81748]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

void _exit(int a1)
{
  MEMORY[0x1E0C80F80](*(_QWORD *)&a1);
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x1E0DE7960]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x1E0DE7970]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1E0DEE9F8]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x1E0DEEA50]();
}

uint64_t _swift_stdlib_strtof_clocale()
{
  return MEMORY[0x1E0DEEA58]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

uint64_t cblas_sdot_NEWLAPACK()
{
  return MEMORY[0x1E0C8BBE0]();
}

uint64_t cblas_snrm2_NEWLAPACK()
{
  return MEMORY[0x1E0C8BC50]();
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

long double exp(long double __x)
{
  long double result;

  MEMORY[0x1E0C83280](__x);
  return result;
}

float expf(float a1)
{
  float result;

  MEMORY[0x1E0C83298](a1);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

pid_t getpid(void)
{
  return MEMORY[0x1E0C83760]();
}

long double log(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BB8](__x);
  return result;
}

long double log2(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BE8](__x);
  return result;
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1E0C83C50]();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return MEMORY[0x1E0C83DB8](info);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)((uint64_t (*)(id, SEL))MEMORY[0x1E0DE7D20])(a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1E0C84928](log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

BOOL os_unfair_lock_trylock(os_unfair_lock_t lock)
{
  return MEMORY[0x1E0C849A8](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_unfair_recursive_lock_lock_with_options()
{
  return MEMORY[0x1E0C849B8]();
}

uint64_t os_unfair_recursive_lock_trylock()
{
  return MEMORY[0x1E0C849C0]();
}

uint64_t os_unfair_recursive_lock_unlock()
{
  return MEMORY[0x1E0C849D0]();
}

uint64_t os_variant_allows_internal_security_policies()
{
  return MEMORY[0x1E0C849D8]();
}

qos_class_t qos_class_self(void)
{
  return MEMORY[0x1E0C84F80]();
}

uint64_t sandbox_check()
{
  return MEMORY[0x1E0C85178]();
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x1E0C851A0]();
}

uint64_t sandbox_extension_release()
{
  return MEMORY[0x1E0C851F8]();
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return (const void *)MEMORY[0x1E0DE8660](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE8668](a1, *(_QWORD *)&iCol);
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE8698](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1E0DE86C8](a1, *(_QWORD *)&iCol);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1E0DE87C8](pStmt);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x1E0DE8880](db, zSql, *(_QWORD *)&nByte, ppStmt, pzTail);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x1E0DE89A8](a1);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1E0C85520](__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1E0C85548](*(_QWORD *)&__errnum);
}

unint64_t strtoull(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x1E0C856A8](__str, __endptr, *(_QWORD *)&__base);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x1E0DF0F68]();
}

uint64_t swift_asyncLet_finish()
{
  return MEMORY[0x1E0DF0F70]();
}

uint64_t swift_asyncLet_get_throwing()
{
  return MEMORY[0x1E0DF0F80]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x1E0DEEB70]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1E0DEEB98]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x1E0DEEBB0]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x1E0DEEBB8]();
}

uint64_t swift_dynamicCastObjCProtocolUnconditional()
{
  return MEMORY[0x1E0DEEBC0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x1E0DEED80]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1E0DEED90]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x1E0DEEDB8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x1E0DEEE68]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1E0DEEE90]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_localValuePop()
{
  return MEMORY[0x1E0DF1030]();
}

uint64_t swift_task_localValuePush()
{
  return MEMORY[0x1E0DF1038]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1E0DEEEB8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unownedRelease()
{
  return MEMORY[0x1E0DEEF60]();
}

uint64_t swift_unownedRetain()
{
  return MEMORY[0x1E0DEEF68]();
}

uint64_t swift_unownedRetainStrong()
{
  return MEMORY[0x1E0DEEF70]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1E0DEEF80]();
}

uint64_t swift_weakCopyAssign()
{
  return MEMORY[0x1E0DEEF88]();
}

uint64_t swift_weakCopyInit()
{
  return MEMORY[0x1E0DEEF90]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_weakTakeAssign()
{
  return MEMORY[0x1E0DEEFB0]();
}

uint64_t swift_weakTakeInit()
{
  return MEMORY[0x1E0DEEFB8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

int usleep(useconds_t a1)
{
  return MEMORY[0x1E0C859E0](*(_QWORD *)&a1);
}

void vDSP_svesq(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Length __N)
{
  MEMORY[0x1E0C8C328](__A, __IA, __C, __N);
}

